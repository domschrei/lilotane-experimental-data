PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/blocksworld/domain.hddl instances/blocksworld/p06.hddl"


Planner Configuration
=====================
Domain: instances/blocksworld/domain.hddl
Problem: instances/blocksworld/p06.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p06.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 5
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 15
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 15
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 15
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 15
Grounded planning graph ... done in 191ms.
	Number of Grounded Actions 162
	Number of Grounded Literals 99
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 15
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 15
Grounding ... done.
	number of abstract tasks = 51
	number of tasks = 213
	number of decomposition methods = 125
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 51
	number of tasks = 213
	number of decomposition methods = 125
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 53ms.
	Number of Grounded Actions 162
	Number of Grounded Literals 99
	number of abstract tasks = 51
	number of tasks = 213
	number of decomposition methods = 125
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 51
	number of tasks = 213
	number of decomposition methods = 125
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 51
	number of tasks = 213
	number of decomposition methods = 125
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 52
	number of tasks = 214
	number of decomposition methods = 126
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 52
	number of tasks = 214
	number of decomposition methods = 126
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 31ms.
	Number of Grounded Actions 162
	Number of Grounded Literals 99
	number of abstract tasks = 52
	number of tasks = 214
	number of decomposition methods = 126
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 52
	number of tasks = 214
	number of decomposition methods = 126
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 52
	number of tasks = 214
	number of decomposition methods = 126
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 52
	number of tasks = 214
	number of decomposition methods = 126
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 52
	number of tasks = 214
	number of decomposition methods = 126
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 52
	number of tasks = 214
	number of decomposition methods = 126
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 99
	number of epsilon methods = 0
	number of primitive tasks = 162
	number of constants = 0
Tasks 162 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773605ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 36 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 24 leafs
SHOP LEAFS 24
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 117 will abort at 9223372036854773556
done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 14553
Size 14553 at 0/162
Size 10061
Size 10061 at 0/162
Size 4792
Size 4792 at 0/162
Size 2552
Size 2552 at 0/162
Size 945
Size 945 at 0/162
Size 594
Size 594 at 0/162
Size 562
Size 562 at 0/162
Size 562
Invariant time: 0.225
Number of invariants: 562
Invariant Clauses 14050
NUMBER OF CLAUSES 19072
NUMBER OF STATE CLAUSES 18924
NUMBER OF DECOMPOSITION CLAUSES 148
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.22% 0.78% 0.0% 
NUMBER OF PATHS 24
Starting cryptominisat
Setting starttime of solver to 1603870894546
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 156 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 132 leafs
SHOP LEAFS 84
Assignment implications
Still waiting ... running for 101 will abort at 9223372036854772715
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 74746
NUMBER OF CLAUSES 103608
NUMBER OF STATE CLAUSES 101874
NUMBER OF DECOMPOSITION CLAUSES 1734
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.33% 1.67% 0.0% 
NUMBER OF PATHS 132
Starting cryptominisat
Setting starttime of solver to 1603870895226
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 228 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 204 leafs
SHOP LEAFS 108
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771743
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 115210
NUMBER OF CLAUSES 160369
NUMBER OF STATE CLAUSES 157371
NUMBER OF DECOMPOSITION CLAUSES 2998
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.13% 1.87% 0.0% 
NUMBER OF PATHS 204
Starting cryptominisat
Setting starttime of solver to 1603870896179
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 300 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 276 leafs
SHOP LEAFS 132
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771057
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 155674
NUMBER OF CLAUSES 218303
NUMBER OF STATE CLAUSES 213225
NUMBER OF DECOMPOSITION CLAUSES 5078
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.67% 2.33% 0.0% 
NUMBER OF PATHS 276
Starting cryptominisat
Setting starttime of solver to 1603870896845
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 372 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 348 leafs
SHOP LEAFS 156
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770417
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 196138
NUMBER OF CLAUSES 278193
NUMBER OF STATE CLAUSES 269667
NUMBER OF DECOMPOSITION CLAUSES 8526
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.94% 3.06% 0.0% 
NUMBER OF PATHS 348
Starting cryptominisat
Setting starttime of solver to 1603870897567
Command exited with non-zero status 20
0.06 0.01

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 444 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 420 leafs
SHOP LEAFS 180
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854769683
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 236602
NUMBER OF CLAUSES 341197
NUMBER OF STATE CLAUSES 326938
NUMBER OF DECOMPOSITION CLAUSES 14259
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.82000000000001% 4.18% 0.0% 
NUMBER OF PATHS 420
Starting cryptominisat
Setting starttime of solver to 1603870898414
Command exited with non-zero status 20
0.08 0.00

Time command gave the following runtime for the solver: 80
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 516 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 492 leafs
SHOP LEAFS 204
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854768710
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 277066
NUMBER OF CLAUSES 408806
NUMBER OF STATE CLAUSES 385329
NUMBER OF DECOMPOSITION CLAUSES 23477
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 94.26% 5.74% 0.0% 
NUMBER OF PATHS 492
Starting cryptominisat
Setting starttime of solver to 1603870899484
Command exited with non-zero status 10
0.13 0.01

Time command gave the following runtime for the solver: 140
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_8;1,49 49 m6_do_clear
8;1 140 pathaction!2_8;1,190
Consider method^1_4,40 40 m1_do_put_on
4 181 pathaction!1_4,126
Consider method^2_9;4,74 74 m4_do_move
9;4 198 pathaction!2_9;4,41
Consider method^2_8;2,98 98 m6_do_clear
8;2 43 pathaction!2_8;2,192
Consider method^7_4;1;1;1;1;1;1,49 49 m6_do_clear
4;1;1;1;1;1;1 90 pathaction!7_4;1;1;1;1;1;1,190
Consider method^2_6;1,109 109 m6_do_clear
6;1 130 pathaction!2_6;1,188
Consider method^2_6;3,15 15 m3_do_on_table
6;3 37 pathaction!2_6;3,147
Consider method^2_10;1,4 4 m6_do_clear
10;1 74 pathaction!2_10;1,186
Consider method^1_1,50 50 m1_do_put_on
1 52 pathaction!1_1,129
Consider method^2_4;1,31 31 m7_do_clear
4;1 91 pathaction!2_4;1,187
Consider method^2_6;4,36 36 m4_do_move
6;4 145 pathaction!2_6;4,46
Consider method^2_1;4,77 77 m4_do_move
1;4 125 pathaction!2_1;4,43
Consider method^2_2;3,91 91 m2_do_on_table
2;3 73 pathaction!2_2;3,150
Consider method^6_4;1;1;1;1;1,27 27 m7_do_clear
4;1;1;1;1;1 17 pathaction!6_4;1;1;1;1;1,182
Consider method^2_4;4,67 67 m4_do_move
4;4 15 pathaction!2_4;4,40
Consider method^2_7;4,61 61 m4_do_move
7;4 42 pathaction!2_7;4,42
Consider method^2_0;4,80 80 m4_do_move
0;4 182 pathaction!2_0;4,35
Consider method^2_3;4,71 71 m4_do_move
3;4 85 pathaction!2_3;4,37
Consider method^2_6;2,108 108 m6_do_clear
6;2 134 pathaction!2_6;2,184
Consider method^2_7;1,98 98 m6_do_clear
7;1 210 pathaction!2_7;1,192
Consider method^2_4;2,115 115 m6_do_clear
4;2 60 pathaction!2_4;2,195
Consider method^2_11;2,4 4 m6_do_clear
11;2 89 pathaction!2_11;2,186
Consider method^2_8;3,111 111 m3_do_on_table
8;3 170 pathaction!2_8;3,153
Consider method^2_3;1,115 115 m6_do_clear
3;1 209 pathaction!2_3;1,195
Consider method^2_5;3,39 39 m2_do_on_table
5;3 218 pathaction!2_5;3,156
Consider method^2_8;4,90 90 m4_do_move
8;4 183 pathaction!2_8;4,39
Consider method^2_7;2,6 6 m6_do_clear
7;2 40 pathaction!2_7;2,185
Consider method^1_11,66 66 m1_do_put_on
11 62 pathaction!1_11,122
Consider method^2_10;2,14 14 m6_do_clear
10;2 84 pathaction!2_10;2,182
Consider method^5_4;1;1;1;1,72 72 m7_do_clear
4;1;1;1;1 116 pathaction!5_4;1;1;1;1,184
Consider method^2_4;3,112 112 m3_do_on_table
4;3 206 pathaction!2_4;3,155
Consider method^2_0;2,57 57 m6_do_clear
0;2 35 pathaction!2_0;2,194
Consider method^1_7,94 94 m1_do_put_on
7 174 pathaction!1_7,128
Consider method^2_9;1,14 14 m6_do_clear
9;1 110 pathaction!2_9;1,182
Consider method^2_5;4,34 34 m4_do_move
5;4 58 pathaction!2_5;4,45
Consider method^2_2;4,32 32 m5_do_move
2;4 171 pathaction!2_2;4,44
Consider method^2_5;2,124 124 m7_do_clear
5;2 214 pathaction!2_5;2,196
Consider method^1_6,17 17 m1_do_put_on
6 68 pathaction!1_6,132
Consider method^2_11;3,99 99 m3_do_on_table
11;3 36 pathaction!2_11;3,149
Consider method^2_5;1,108 108 m6_do_clear
5;1 19 pathaction!2_5;1,184
Consider method^2_11;1,87 87 m6_do_clear
11;1 79 pathaction!2_11;1,193
Consider method^1_2,13 13 m1_do_put_on
2 160 pathaction!1_2,130
Consider method^2_3;3,62 62 m3_do_on_table
3;3 177 pathaction!2_3;3,146
Consider method^2_10;3,33 33 m3_do_on_table
10;3 1 pathaction!2_10;3,145
Consider method^2_3;2,107 107 m6_do_clear
3;2 3 pathaction!2_3;2,183
Consider method^2_7;3,85 85 m3_do_on_table
7;3 59 pathaction!2_7;3,148
Consider method^4_4;1;1;1,102 102 m7_do_clear
4;1;1;1 10 pathaction!4_4;1;1;1,185
Consider method^1_5,103 103 m1_do_put_on
5 22 pathaction!1_5,131
Consider method^5_0;1;1;1;1,43 43 m6_do_clear
0;1;1;1;1 133 pathaction!5_0;1;1;1;1,189
Consider method^2_2;1,107 107 m6_do_clear
2;1 23 pathaction!2_2;1,183
Consider method^1_9,110 110 m1_do_put_on
9 86 pathaction!1_9,127
Consider method^0_,125 125 __top_1
 199 pathaction!0_,213
Consider method^3_5;2;1,98 98 m6_do_clear
5;2;1 71 pathaction!3_5;2;1,192
Consider method^2_10;4,55 55 m4_do_move
10;4 67 pathaction!2_10;4,38
Consider method^2_1;2,2 2 m6_do_clear
1;2 106 pathaction!2_1;2,191
Consider method^2_11;4,8 8 m4_do_move
11;4 202 pathaction!2_11;4,36
Consider method^2_1;1,43 43 m6_do_clear
1;1 146 pathaction!2_1;1,189
Consider method^1_10,104 104 m1_do_put_on
10 98 pathaction!1_10,124
Consider method^1_8,101 101 m1_do_put_on
8 188 pathaction!1_8,125
Consider method^4_0;1;1;1,73 73 m7_do_clear
0;1;1;1 118 pathaction!4_0;1;1;1,194
Consider method^2_0;3,51 51 m3_do_on_table
0;3 12 pathaction!2_0;3,154
Consider method^1_3,24 24 m1_do_put_on
3 75 pathaction!1_3,123
Consider method^3_0;1;1,97 97 m7_do_clear
0;1;1 216 pathaction!3_0;1;1,195
Consider method^1_0,92 92 m1_do_put_on
0 123 pathaction!1_0,121
Consider method^2_9;2,49 49 m6_do_clear
9;2 144 pathaction!2_9;2,190
Consider method^2_1;3,65 65 m3_do_on_table
1;3 33 pathaction!2_1;3,152
Consider method^2_9;3,0 0 m3_do_on_table
9;3 56 pathaction!2_9;3,151
Consider method^3_4;1;1,30 30 m7_do_clear
4;1;1 45 pathaction!3_4;1;1,188
Consider method^2_2;2,43 43 m6_do_clear
2;2 18 pathaction!2_2;2,189
Consider method^2_0;1,123 123 m7_do_clear
0;1 180 pathaction!2_0;1,191


CHECKING primitive solution of length 149 ...
true 117 __method_precondition_m1_do_put_on_1_precondition[;]
true 187 __method_precondition_m7_do_clear_7_precondition[b14,b1;]
true 213 __method_precondition_m7_do_clear_7_precondition[b1,b7;]
true 196 __method_precondition_m7_do_clear_7_precondition[b7,b15;]
true 39 __method_precondition_m6_do_clear_6_precondition[b15;]
true 157 nop[;]
true 158 unstack[b15,b7;]
true 7 put-down[b15;]
true 46 unstack[b7,b1;]
true 162 put-down[b7;]
true 127 unstack[b1,b14;]
true 66 put-down[b1;]
true 114 __method_precondition_m6_do_clear_6_precondition[b7;]
true 105 nop[;]
true 38 __method_precondition_m3_do_on_table_3_precondition[b7;]
true 104 nop[;]
true 173 __method_precondition_m4_do_move_4_precondition[b14,b7;]
true 186 pick-up[b14;]
true 136 stack[b14,b7;]
true 5 __method_precondition_m1_do_put_on_1_precondition[;]
true 159 __method_precondition_m6_do_clear_6_precondition[b15;]
true 203 nop[;]
true 138 __method_precondition_m6_do_clear_6_precondition[b14;]
true 34 nop[;]
true 51 __method_precondition_m3_do_on_table_3_precondition[b14;]
true 132 nop[;]
true 94 __method_precondition_m4_do_move_4_precondition[b15,b14;]
true 150 pick-up[b15;]
true 135 stack[b15,b14;]
true 72 __method_precondition_m1_do_put_on_1_precondition[;]
true 197 __method_precondition_m6_do_clear_6_precondition[b5;]
true 178 nop[;]
true 64 __method_precondition_m6_do_clear_6_precondition[b15;]
true 131 nop[;]
true 95 __method_precondition_m2_do_on_table_2_precondition[b15;]
true 111 unstack[b15,b14;]
true 184 put-down[b15;]
true 101 __method_precondition_m5_do_move_5_precondition[b5,b15;]
true 69 unstack[b5,b11;]
true 152 stack[b5,b15;]
true 141 __method_precondition_m1_do_put_on_1_precondition[;]
true 92 __method_precondition_m6_do_clear_6_precondition[b1;]
true 32 nop[;]
true 100 __method_precondition_m6_do_clear_6_precondition[b5;]
true 93 nop[;]
true 122 __method_precondition_m3_do_on_table_3_precondition[b5;]
true 87 nop[;]
true 63 __method_precondition_m4_do_move_4_precondition[b1,b5;]
true 149 pick-up[b1;]
true 41 stack[b1,b5;]
true 76 __method_precondition_m1_do_put_on_1_precondition[;]
true 119 __method_precondition_m7_do_clear_7_precondition[b8,b9;]
true 25 __method_precondition_m7_do_clear_7_precondition[b9,b6;]
true 156 __method_precondition_m7_do_clear_7_precondition[b6,b2;]
true 16 __method_precondition_m7_do_clear_7_precondition[b2,b4;]
true 167 __method_precondition_m7_do_clear_7_precondition[b4,b3;]
true 44 __method_precondition_m6_do_clear_6_precondition[b3;]
true 191 nop[;]
true 151 unstack[b3,b4;]
true 65 put-down[b3;]
true 81 unstack[b4,b2;]
true 168 put-down[b4;]
true 139 unstack[b2,b6;]
true 175 put-down[b2;]
true 165 unstack[b6,b9;]
true 53 put-down[b6;]
true 0 unstack[b9,b8;]
true 112 put-down[b9;]
true 120 __method_precondition_m6_do_clear_6_precondition[b1;]
true 211 nop[;]
true 11 __method_precondition_m3_do_on_table_3_precondition[b1;]
true 217 nop[;]
true 148 __method_precondition_m4_do_move_4_precondition[b8,b1;]
true 57 pick-up[b8;]
true 24 stack[b8,b1;]
true 21 __method_precondition_m1_do_put_on_1_precondition[;]
true 192 __method_precondition_m6_do_clear_6_precondition[b2;]
true 164 nop[;]
true 77 __method_precondition_m7_do_clear_7_precondition[b13,b12;]
true 129 __method_precondition_m6_do_clear_6_precondition[b12;]
true 205 nop[;]
true 161 unstack[b12,b13;]
true 201 put-down[b12;]
true 109 __method_precondition_m2_do_on_table_2_precondition[b13;]
true 99 unstack[b13,b10;]
true 26 put-down[b13;]
true 48 __method_precondition_m4_do_move_4_precondition[b2,b13;]
true 61 pick-up[b2;]
true 88 stack[b2,b13;]
true 20 __method_precondition_m1_do_put_on_1_precondition[;]
true 103 __method_precondition_m6_do_clear_6_precondition[b9;]
true 28 nop[;]
true 204 __method_precondition_m6_do_clear_6_precondition[b2;]
true 78 nop[;]
true 172 __method_precondition_m3_do_on_table_3_precondition[b2;]
true 97 nop[;]
true 102 __method_precondition_m4_do_move_4_precondition[b9,b2;]
true 6 pick-up[b9;]
true 137 stack[b9,b2;]
true 128 __method_precondition_m1_do_put_on_1_precondition[;]
true 194 __method_precondition_m6_do_clear_6_precondition[b12;]
true 179 nop[;]
true 155 __method_precondition_m6_do_clear_6_precondition[b6;]
true 124 nop[;]
true 200 __method_precondition_m3_do_on_table_3_precondition[b6;]
true 195 nop[;]
true 13 __method_precondition_m4_do_move_4_precondition[b12,b6;]
true 121 pick-up[b12;]
true 143 stack[b12,b6;]
true 83 __method_precondition_m1_do_put_on_1_precondition[;]
true 14 __method_precondition_m6_do_clear_6_precondition[b3;]
true 55 nop[;]
true 80 __method_precondition_m6_do_clear_6_precondition[b12;]
true 190 nop[;]
true 169 __method_precondition_m3_do_on_table_3_precondition[b12;]
true 193 nop[;]
true 54 __method_precondition_m4_do_move_4_precondition[b3,b12;]
true 115 pick-up[b3;]
true 212 stack[b3,b12;]
true 185 __method_precondition_m1_do_put_on_1_precondition[;]
true 47 __method_precondition_m6_do_clear_6_precondition[b4;]
true 166 nop[;]
true 50 __method_precondition_m6_do_clear_6_precondition[b3;]
true 113 nop[;]
true 208 __method_precondition_m3_do_on_table_3_precondition[b3;]
true 107 nop[;]
true 49 __method_precondition_m4_do_move_4_precondition[b4,b3;]
true 8 pick-up[b4;]
true 29 stack[b4,b3;]
true 108 __method_precondition_m1_do_put_on_1_precondition[;]
true 82 __method_precondition_m6_do_clear_6_precondition[b11;]
true 31 nop[;]
true 207 __method_precondition_m6_do_clear_6_precondition[b4;]
true 163 nop[;]
true 4 __method_precondition_m3_do_on_table_3_precondition[b4;]
true 96 nop[;]
true 176 __method_precondition_m4_do_move_4_precondition[b11,b4;]
true 30 pick-up[b11;]
true 189 stack[b11,b4;]
true 142 __method_precondition_m1_do_put_on_1_precondition[;]
true 126 __method_precondition_m6_do_clear_6_precondition[b10;]
true 9 nop[;]
true 2 __method_precondition_m6_do_clear_6_precondition[b11;]
true 70 nop[;]
true 215 __method_precondition_m3_do_on_table_3_precondition[b11;]
true 27 nop[;]
true 154 __method_precondition_m4_do_move_4_precondition[b10,b11;]
true 153 pick-up[b10;]
true 147 stack[b10,b11;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 296281440
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 99
number of actions                    = 214
number of abstract actions           = 52
number of primitive actions          = 162
number of methods                    = 126
number of primitive shop actions     = 99
number of primitive non-shop actions = 63
size of largest method               = 12
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 103199
number of clauses               = 408806
average size of clauses         = 2.0430570979877984
number of assert                = 54
number of horn                  = 384512
K offset                        = 0
K chosen value                  = 8
state formula                   = 385329
method children clauses         = 0
number of paths                 = 492
maximum plan length             = 492
number of decomposition clauses = 23477
number of ordering clauses      = 0
number of state clauses         = 385329
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 8819
============ parsing ============
total                         = 901
file parser                   = 525
sort expansion                = 141
closed world assumption       = 88
inherit preconditions         = 0
shop methods                  = 26
eliminate identical variables = 66
strip domain of hybridity     = 1
flatten formula               = 54
============ preprocessing ============
total                                      = 1171
compile negative preconditions             = 32
compile unit methods                       = 0
split parameter                            = 32
expand choiceless abstract tasks           = 1
compile methods with identical tasks       = 3
removing unnecessary predicates            = 27
lifted reachabiltiy analysis               = 61
grounded planning graph analysis           = 491
grounded task decomposition graph analysis = 382
grounding                                  = 128
create artificial top task                 = 1
============ search preparation ============
compute state invariants = 298
============ sat ============
total                                        = 4969
generate formula                             = 3395
generate path decomposition tree             = 337
normalise path decomposition tree            = 151
sog optimisation                             = 90
translate path decomposition tree to clauses = 389
generate state formula                       = 3267
generate state invariant formula             = 710
transform to DIMACS                          = 699
SAT solver                                   = 390
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 40
SAT solver for K=0005                        = 50
SAT solver for K=0006                        = 70
SAT solver for K=0007                        = 80
SAT solver for K=0008                        = 140

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="162";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="52";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="296281440";"40 sat:20:state formula"="385329";"40 sat:01:number of variables"="103199";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="492";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="126";"30 problem:07:number of primitive shop actions"="99";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="214";"30 problem:08:number of primitive non-shop actions"="63";"30 problem:02:number of predicates"="99";"40 sat:03:number of horn"="384512";"40 sat:15:K chosen value"="8";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="12";"40 sat:03:average size of clauses"="2.0430570979877984";"40 sat:02:number of clauses"="408806";"40 sat:50:number of state clauses"="385329";"40 sat:03:number of assert"="54";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="492";"40 sat:50:number of decomposition clauses"="23477";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="525";"01 parsing:08:flatten formula"="54";"40 sat:41:SAT solver for K=0004"="40";"40 sat:00:total"="4969";"40 sat:16:generate state formula"="3267";"40 sat:20:transform to DIMACS"="699";"40 sat:11:generate path decomposition tree"="337";"02 preprocessing:07:compile methods with identical tasks"="3";"01 parsing:07:strip domain of hybridity"="1";"40 sat:41:SAT solver for K=0008"="140";"02 preprocessing:08:removing unnecessary predicates"="27";"01 parsing:03:closed world assumption"="88";"02 preprocessing:11:lifted reachabiltiy analysis"="61";"01 parsing:02:sort expansion"="141";"40 sat:12:normalise path decomposition tree"="151";"40 sat:40:SAT solver"="390";"01 parsing:00:total"="901";"40 sat:10:generate formula"="3395";"40 sat:41:SAT solver for K=0005"="50";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="32";"00 total:00:total"="8819";"40 sat:13:sog optimisation"="90";"02 preprocessing:12:grounded planning graph analysis"="491";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="382";"40 sat:41:SAT solver for K=0006"="70";"02 preprocessing:04:split parameter"="32";"01 parsing:05:shop methods"="26";"10 search preparation:02:compute state invariants"="298";"01 parsing:06:eliminate identical variables"="66";"40 sat:15:translate path decomposition tree to clauses"="389";"02 preprocessing:05:expand choiceless abstract tasks"="1";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="710";"02 preprocessing:00:total"="1171";"02 preprocessing:99:create artificial top task"="1";"02 preprocessing:84:grounding"="128";"40 sat:41:SAT solver for K=0007"="80"
#!verify __method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m7_do_clear_7_precondition[b14,b1];__method_precondition_m7_do_clear_7_precondition[b1,b7];__method_precondition_m7_do_clear_7_precondition[b7,b15];__method_precondition_m6_do_clear_6_precondition[b15];nop[];unstack[b15,b7];put-down[b15];unstack[b7,b1];put-down[b7];unstack[b1,b14];put-down[b1];__method_precondition_m6_do_clear_6_precondition[b7];nop[];__method_precondition_m3_do_on_table_3_precondition[b7];nop[];__method_precondition_m4_do_move_4_precondition[b14,b7];pick-up[b14];stack[b14,b7];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b15];nop[];__method_precondition_m6_do_clear_6_precondition[b14];nop[];__method_precondition_m3_do_on_table_3_precondition[b14];nop[];__method_precondition_m4_do_move_4_precondition[b15,b14];pick-up[b15];stack[b15,b14];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b5];nop[];__method_precondition_m6_do_clear_6_precondition[b15];nop[];__method_precondition_m2_do_on_table_2_precondition[b15];unstack[b15,b14];put-down[b15];__method_precondition_m5_do_move_5_precondition[b5,b15];unstack[b5,b11];stack[b5,b15];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b1];nop[];__method_precondition_m6_do_clear_6_precondition[b5];nop[];__method_precondition_m3_do_on_table_3_precondition[b5];nop[];__method_precondition_m4_do_move_4_precondition[b1,b5];pick-up[b1];stack[b1,b5];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m7_do_clear_7_precondition[b8,b9];__method_precondition_m7_do_clear_7_precondition[b9,b6];__method_precondition_m7_do_clear_7_precondition[b6,b2];__method_precondition_m7_do_clear_7_precondition[b2,b4];__method_precondition_m7_do_clear_7_precondition[b4,b3];__method_precondition_m6_do_clear_6_precondition[b3];nop[];unstack[b3,b4];put-down[b3];unstack[b4,b2];put-down[b4];unstack[b2,b6];put-down[b2];unstack[b6,b9];put-down[b6];unstack[b9,b8];put-down[b9];__method_precondition_m6_do_clear_6_precondition[b1];nop[];__method_precondition_m3_do_on_table_3_precondition[b1];nop[];__method_precondition_m4_do_move_4_precondition[b8,b1];pick-up[b8];stack[b8,b1];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b2];nop[];__method_precondition_m7_do_clear_7_precondition[b13,b12];__method_precondition_m6_do_clear_6_precondition[b12];nop[];unstack[b12,b13];put-down[b12];__method_precondition_m2_do_on_table_2_precondition[b13];unstack[b13,b10];put-down[b13];__method_precondition_m4_do_move_4_precondition[b2,b13];pick-up[b2];stack[b2,b13];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b9];nop[];__method_precondition_m6_do_clear_6_precondition[b2];nop[];__method_precondition_m3_do_on_table_3_precondition[b2];nop[];__method_precondition_m4_do_move_4_precondition[b9,b2];pick-up[b9];stack[b9,b2];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b12];nop[];__method_precondition_m6_do_clear_6_precondition[b6];nop[];__method_precondition_m3_do_on_table_3_precondition[b6];nop[];__method_precondition_m4_do_move_4_precondition[b12,b6];pick-up[b12];stack[b12,b6];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b3];nop[];__method_precondition_m6_do_clear_6_precondition[b12];nop[];__method_precondition_m3_do_on_table_3_precondition[b12];nop[];__method_precondition_m4_do_move_4_precondition[b3,b12];pick-up[b3];stack[b3,b12];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b4];nop[];__method_precondition_m6_do_clear_6_precondition[b3];nop[];__method_precondition_m3_do_on_table_3_precondition[b3];nop[];__method_precondition_m4_do_move_4_precondition[b4,b3];pick-up[b4];stack[b4,b3];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b11];nop[];__method_precondition_m6_do_clear_6_precondition[b4];nop[];__method_precondition_m3_do_on_table_3_precondition[b4];nop[];__method_precondition_m4_do_move_4_precondition[b11,b4];pick-up[b11];stack[b11,b4];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b10];nop[];__method_precondition_m6_do_clear_6_precondition[b11];nop[];__method_precondition_m3_do_on_table_3_precondition[b11];nop[];__method_precondition_m4_do_move_4_precondition[b10,b11];pick-up[b10];stack[b10,b11]
==>
0 __method_precondition_m1_do_put_on_1_precondition  
1 __method_precondition_m7_do_clear_7_precondition b14 b1 
2 __method_precondition_m7_do_clear_7_precondition b1 b7 
3 __method_precondition_m7_do_clear_7_precondition b7 b15 
4 __method_precondition_m6_do_clear_6_precondition b15 
5 nop  
6 unstack b15 b7 
7 put-down b15 
8 unstack b7 b1 
9 put-down b7 
10 unstack b1 b14 
11 put-down b1 
12 __method_precondition_m6_do_clear_6_precondition b7 
13 nop  
14 __method_precondition_m3_do_on_table_3_precondition b7 
15 nop  
16 __method_precondition_m4_do_move_4_precondition b14 b7 
17 pick-up b14 
18 stack b14 b7 
19 __method_precondition_m1_do_put_on_1_precondition  
20 __method_precondition_m6_do_clear_6_precondition b15 
21 nop  
22 __method_precondition_m6_do_clear_6_precondition b14 
23 nop  
24 __method_precondition_m3_do_on_table_3_precondition b14 
25 nop  
26 __method_precondition_m4_do_move_4_precondition b15 b14 
27 pick-up b15 
28 stack b15 b14 
29 __method_precondition_m1_do_put_on_1_precondition  
30 __method_precondition_m6_do_clear_6_precondition b5 
31 nop  
32 __method_precondition_m6_do_clear_6_precondition b15 
33 nop  
34 __method_precondition_m2_do_on_table_2_precondition b15 
35 unstack b15 b14 
36 put-down b15 
37 __method_precondition_m5_do_move_5_precondition b5 b15 
38 unstack b5 b11 
39 stack b5 b15 
40 __method_precondition_m1_do_put_on_1_precondition  
41 __method_precondition_m6_do_clear_6_precondition b1 
42 nop  
43 __method_precondition_m6_do_clear_6_precondition b5 
44 nop  
45 __method_precondition_m3_do_on_table_3_precondition b5 
46 nop  
47 __method_precondition_m4_do_move_4_precondition b1 b5 
48 pick-up b1 
49 stack b1 b5 
50 __method_precondition_m1_do_put_on_1_precondition  
51 __method_precondition_m7_do_clear_7_precondition b8 b9 
52 __method_precondition_m7_do_clear_7_precondition b9 b6 
53 __method_precondition_m7_do_clear_7_precondition b6 b2 
54 __method_precondition_m7_do_clear_7_precondition b2 b4 
55 __method_precondition_m7_do_clear_7_precondition b4 b3 
56 __method_precondition_m6_do_clear_6_precondition b3 
57 nop  
58 unstack b3 b4 
59 put-down b3 
60 unstack b4 b2 
61 put-down b4 
62 unstack b2 b6 
63 put-down b2 
64 unstack b6 b9 
65 put-down b6 
66 unstack b9 b8 
67 put-down b9 
68 __method_precondition_m6_do_clear_6_precondition b1 
69 nop  
70 __method_precondition_m3_do_on_table_3_precondition b1 
71 nop  
72 __method_precondition_m4_do_move_4_precondition b8 b1 
73 pick-up b8 
74 stack b8 b1 
75 __method_precondition_m1_do_put_on_1_precondition  
76 __method_precondition_m6_do_clear_6_precondition b2 
77 nop  
78 __method_precondition_m7_do_clear_7_precondition b13 b12 
79 __method_precondition_m6_do_clear_6_precondition b12 
80 nop  
81 unstack b12 b13 
82 put-down b12 
83 __method_precondition_m2_do_on_table_2_precondition b13 
84 unstack b13 b10 
85 put-down b13 
86 __method_precondition_m4_do_move_4_precondition b2 b13 
87 pick-up b2 
88 stack b2 b13 
89 __method_precondition_m1_do_put_on_1_precondition  
90 __method_precondition_m6_do_clear_6_precondition b9 
91 nop  
92 __method_precondition_m6_do_clear_6_precondition b2 
93 nop  
94 __method_precondition_m3_do_on_table_3_precondition b2 
95 nop  
96 __method_precondition_m4_do_move_4_precondition b9 b2 
97 pick-up b9 
98 stack b9 b2 
99 __method_precondition_m1_do_put_on_1_precondition  
100 __method_precondition_m6_do_clear_6_precondition b12 
101 nop  
102 __method_precondition_m6_do_clear_6_precondition b6 
103 nop  
104 __method_precondition_m3_do_on_table_3_precondition b6 
105 nop  
106 __method_precondition_m4_do_move_4_precondition b12 b6 
107 pick-up b12 
108 stack b12 b6 
109 __method_precondition_m1_do_put_on_1_precondition  
110 __method_precondition_m6_do_clear_6_precondition b3 
111 nop  
112 __method_precondition_m6_do_clear_6_precondition b12 
113 nop  
114 __method_precondition_m3_do_on_table_3_precondition b12 
115 nop  
116 __method_precondition_m4_do_move_4_precondition b3 b12 
117 pick-up b3 
118 stack b3 b12 
119 __method_precondition_m1_do_put_on_1_precondition  
120 __method_precondition_m6_do_clear_6_precondition b4 
121 nop  
122 __method_precondition_m6_do_clear_6_precondition b3 
123 nop  
124 __method_precondition_m3_do_on_table_3_precondition b3 
125 nop  
126 __method_precondition_m4_do_move_4_precondition b4 b3 
127 pick-up b4 
128 stack b4 b3 
129 __method_precondition_m1_do_put_on_1_precondition  
130 __method_precondition_m6_do_clear_6_precondition b11 
131 nop  
132 __method_precondition_m6_do_clear_6_precondition b4 
133 nop  
134 __method_precondition_m3_do_on_table_3_precondition b4 
135 nop  
136 __method_precondition_m4_do_move_4_precondition b11 b4 
137 pick-up b11 
138 stack b11 b4 
139 __method_precondition_m1_do_put_on_1_precondition  
140 __method_precondition_m6_do_clear_6_precondition b10 
141 nop  
142 __method_precondition_m6_do_clear_6_precondition b11 
143 nop  
144 __method_precondition_m3_do_on_table_3_precondition b11 
145 nop  
146 __method_precondition_m4_do_move_4_precondition b10 b11 
147 pick-up b10 
148 stack b10 b11 
root 198
149 do_put_on b10 b11  -> m1_do_put_on 139 179 189 210 203
150 do_put_on b8 b1  -> m1_do_put_on 50 168 158 191 200
151 do_clear b15  -> m6_do_clear 20 21
152 do_move b5 b15  -> m5_do_move 37 38 39
153 do_put_on b4 b3  -> m1_do_put_on 119 194 173 169 195
154 do_put_on b1 b5  -> m1_do_put_on 40 199 187 183 213
155 do_move b11 b4  -> m4_do_move 136 137 138
156 do_clear b9  -> m6_do_clear 90 91
157 do_on_table b2  -> m3_do_on_table 94 95
158 do_clear b1  -> m6_do_clear 68 69
159 do_move b9 b2  -> m4_do_move 96 97 98
160 do_clear b14  -> m6_do_clear 22 23
161 do_clear b3  -> m6_do_clear 110 111
162 do_clear b13  -> m7_do_clear 78 178 81 82
163 do_put_on b9 b2  -> m1_do_put_on 89 156 164 157 159
164 do_clear b2  -> m6_do_clear 92 93
165 do_put_on b3 b12  -> m1_do_put_on 109 161 175 166 184
166 do_on_table b12  -> m3_do_on_table 114 115
167 do_clear b4  -> m7_do_clear 55 212 58 59
168 do_clear b8  -> m7_do_clear 51 202 66 67
169 do_on_table b3  -> m3_do_on_table 124 125
170 do_on_table b4  -> m3_do_on_table 134 135
171 do_clear b7  -> m7_do_clear 3 174 6 7
172 do_put_on b11 b4  -> m1_do_put_on 129 214 216 170 155
173 do_clear b3  -> m6_do_clear 122 123
174 do_clear b15  -> m6_do_clear 4 5
175 do_clear b12  -> m6_do_clear 112 113
176 do_move b15 b14  -> m4_do_move 26 27 28
177 do_put_on b12 b6  -> m1_do_put_on 99 196 217 186 211
178 do_clear b12  -> m6_do_clear 79 80
179 do_clear b10  -> m6_do_clear 140 141
180 do_on_table b7  -> m3_do_on_table 14 15
181 do_clear b6  -> m7_do_clear 53 218 62 63
182 do_move b14 b7  -> m4_do_move 16 17 18
183 do_on_table b5  -> m3_do_on_table 45 46
184 do_move b3 b12  -> m4_do_move 116 117 118
185 do_clear b1  -> m7_do_clear 2 171 8 9
186 do_on_table b6  -> m3_do_on_table 104 105
187 do_clear b5  -> m6_do_clear 43 44
188 do_put_on b14 b7  -> m1_do_put_on 0 190 208 180 182
189 do_clear b11  -> m6_do_clear 142 143
190 do_clear b14  -> m7_do_clear 1 185 10 11
191 do_on_table b1  -> m3_do_on_table 70 71
192 do_clear b5  -> m6_do_clear 30 31
193 do_on_table b13  -> m2_do_on_table 83 84 85
194 do_clear b4  -> m6_do_clear 120 121
195 do_move b4 b3  -> m4_do_move 126 127 128
196 do_clear b12  -> m6_do_clear 100 101
197 do_put_on b5 b15  -> m1_do_put_on 29 192 205 206 152
198 __artificialTopCompilation__top_1  -> __top_1 188 215 197 154 150 209 163 177 165 153 172 149
199 do_clear b1  -> m6_do_clear 41 42
200 do_move b8 b1  -> m4_do_move 72 73 74
201 do_move b2 b13  -> m4_do_move 86 87 88
202 do_clear b9  -> m7_do_clear 52 181 64 65
203 do_move b10 b11  -> m4_do_move 146 147 148
204 do_clear b2  -> m6_do_clear 76 77
205 do_clear b15  -> m6_do_clear 32 33
206 do_on_table b15  -> m2_do_on_table 34 35 36
207 do_on_table b14  -> m3_do_on_table 24 25
208 do_clear b7  -> m6_do_clear 12 13
209 do_put_on b2 b13  -> m1_do_put_on 75 204 162 193 201
210 do_on_table b11  -> m3_do_on_table 144 145
211 do_move b12 b6  -> m4_do_move 106 107 108
212 do_clear b3  -> m6_do_clear 56 57
213 do_move b1 b5  -> m4_do_move 47 48 49
214 do_clear b11  -> m6_do_clear 130 131
215 do_put_on b15 b14  -> m1_do_put_on 19 151 160 207 176
216 do_clear b4  -> m6_do_clear 132 133
217 do_clear b6  -> m6_do_clear 102 103
218 do_clear b2  -> m7_do_clear 54 167 60 61

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 9.951 MEMPEAK_KBS 440956.928
