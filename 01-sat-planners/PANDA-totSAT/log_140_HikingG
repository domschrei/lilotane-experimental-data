PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/HikingG/domain.hddl instances/HikingG/p08.hddl"


Planner Configuration
=====================
Domain: instances/HikingG/domain.hddl
Problem: instances/HikingG/p08.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p08.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 24
Compiling negative preconditions ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 24
Compiling split parameters ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 24
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 24
Grounded planning graph ... done in 890ms.
	Number of Grounded Actions 6627
	Number of Grounded Literals 77
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 24
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 24
Grounding ... done.
	number of abstract tasks = 42
	number of tasks = 3565
	number of decomposition methods = 3215
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 42
	number of tasks = 3565
	number of decomposition methods = 3215
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 539ms.
	Number of Grounded Actions 3523
	Number of Grounded Literals 71
	number of abstract tasks = 42
	number of tasks = 3565
	number of decomposition methods = 3215
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 42
	number of tasks = 3565
	number of decomposition methods = 3215
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 28
	number of tasks = 3551
	number of decomposition methods = 3201
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 28
	number of tasks = 3551
	number of decomposition methods = 3201
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 28
	number of tasks = 3551
	number of decomposition methods = 3201
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 260ms.
	Number of Grounded Actions 3523
	Number of Grounded Literals 71
	number of abstract tasks = 28
	number of tasks = 3551
	number of decomposition methods = 3201
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 28
	number of tasks = 3551
	number of decomposition methods = 3201
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 28
	number of tasks = 3551
	number of decomposition methods = 3201
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 28
	number of tasks = 3551
	number of decomposition methods = 3201
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1628
	number of tasks = 5151
	number of decomposition methods = 4801
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1628
	number of tasks = 5151
	number of decomposition methods = 4801
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Tasks 3523 - 2
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767191ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854766708
done
initial PDT has 11 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 8 leafs
SHOP LEAFS 6
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 7455
Size 7455 at 0/3523
Size 3125 at 500/3523
Size 3118 at 1000/3523
Size 3118 at 1500/3523
Size 2884 at 2000/3523
Size 1018 at 2500/3523
Size 484 at 3000/3523
Size 484 at 3500/3523
Size 484
Size 484 at 0/3523
Size 87 at 500/3523
Size 87 at 1000/3523
Size 87 at 1500/3523
Size 87 at 2000/3523
Size 75 at 2500/3523
Size 75 at 3000/3523
Size 75 at 3500/3523
Size 75
Size 75 at 0/3523
Size 75 at 500/3523
Size 75 at 1000/3523
Size 75 at 1500/3523
Size 75 at 2000/3523
Size 75 at 2500/3523
Size 75 at 3000/3523
Size 75 at 3500/3523
Size 75
Invariant time: 0.435
Number of invariants: 75
Invariant Clauses 675
NUMBER OF CLAUSES 585248
NUMBER OF STATE CLAUSES 16750
NUMBER OF DECOMPOSITION CLAUSES 568498
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 2.86% 97.14% 0.0% 
NUMBER OF PATHS 8
Starting cryptominisat
Setting starttime of solver to 1603876885227
Command exited with non-zero status 20
0.10 0.00

Time command gave the following runtime for the solver: 100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854764193
done
initial PDT has 27 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 10 leafs
SHOP LEAFS 7
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 825
NUMBER OF CLAUSES 602576
NUMBER OF STATE CLAUSES 18984
NUMBER OF DECOMPOSITION CLAUSES 583592
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 3.15% 96.85000000000001% 0.0% 
NUMBER OF PATHS 10
Starting cryptominisat
Setting starttime of solver to 1603876886814
Command exited with non-zero status 20
0.10 0.00

Time command gave the following runtime for the solver: 100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854762612
done
initial PDT has 51 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 32 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2475
NUMBER OF CLAUSES 692072
NUMBER OF STATE CLAUSES 32774
NUMBER OF DECOMPOSITION CLAUSES 659298
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 4.74% 95.26% 0.0% 
NUMBER OF PATHS 32
Starting cryptominisat
Setting starttime of solver to 1603876888785
Command exited with non-zero status 20
0.15 0.00

Time command gave the following runtime for the solver: 150
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854760655
done
initial PDT has 79 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 56 leafs
SHOP LEAFS 19
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 4275
NUMBER OF CLAUSES 835434
NUMBER OF STATE CLAUSES 47110
NUMBER OF DECOMPOSITION CLAUSES 788324
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 5.64% 94.36% 0.0% 
NUMBER OF PATHS 56
Starting cryptominisat
Setting starttime of solver to 1603876890966
Command exited with non-zero status 20
0.24 0.00

Time command gave the following runtime for the solver: 240
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854758387
done
initial PDT has 111 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 84 leafs
SHOP LEAFS 28
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 6375
NUMBER OF CLAUSES 980854
NUMBER OF STATE CLAUSES 62682
NUMBER OF DECOMPOSITION CLAUSES 918172
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 6.390000000000001% 93.61% 0.0% 
NUMBER OF PATHS 84
Starting cryptominisat
Setting starttime of solver to 1603876893421
Command exited with non-zero status 20
0.34 0.01

Time command gave the following runtime for the solver: 350
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 147 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 101 will abort at 9223372036854755730
done
PDT has 116 leafs
SHOP LEAFS 39
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 8775
NUMBER OF CLAUSES 1128280
NUMBER OF STATE CLAUSES 79490
NUMBER OF DECOMPOSITION CLAUSES 1048790
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 7.05% 92.95% 0.0% 
NUMBER OF PATHS 116
Starting cryptominisat
Setting starttime of solver to 1603876896237
Command exited with non-zero status 20
0.47 0.01

Time command gave the following runtime for the solver: 480
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854752839
done
initial PDT has 187 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 152 leafs
SHOP LEAFS 52
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 11475
NUMBER OF CLAUSES 1277712
NUMBER OF STATE CLAUSES 97534
NUMBER OF DECOMPOSITION CLAUSES 1180178
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 7.63% 92.37% 0.0% 
NUMBER OF PATHS 152
Starting cryptominisat
Setting starttime of solver to 1603876899540
Command exited with non-zero status 10
0.49 0.02

Time command gave the following runtime for the solver: 510
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^6_0;3;2;5;2;2,3241 3241 m5_walk_everyone
0;3;2;5;2;2 23 pathaction!6_0;3;2;5;2;2,2179
Consider method^6_0;3;3;5;2;2,1409 1409 m5_walk_everyone
0;3;3;5;2;2 33 pathaction!6_0;3;3;5;2;2,2182
Consider method^3_0;3;2,2438 2438 m3_trip_to2
0;3;2 7 pathaction!3_0;3;2,1
Consider method^5_0;3;3;5;2,37 37 m5_walk_everyone
0;3;3;5;2 57 pathaction!5_0;3;3;5;2,2182
Consider method^4_0;3;3;5,3526 3526 m5_walk_everyone
0;3;3;5 0 pathaction!4_0;3;3;5,2182
Consider method^1_0,1110 1110 <m14_everyone_go_hiking;prepare_trip[place0];m6_prepare_trip;1;0,-1,-2,2>
0 9 pathaction!1_0,3549
Consider method^4_0;3;3;2,4586 4586 __UNIQUE-replacement_1513
0;3;3;2 24 pathaction!4_0;3;3;2,5064
Consider method^4_0;3;2;5,468 468 m5_walk_everyone
0;3;2;5 75 pathaction!4_0;3;2;5,2179
Consider method^7_0;3;3;5;2;2;2,2779 2779 m5_walk_everyone
0;3;3;5;2;2;2 15 pathaction!7_0;3;3;5;2;2;2,2182
Consider method^4_0;3;3;9,4585 4585 __UNIQUE-replacement_1512
0;3;3;9 61 pathaction!4_0;3;3;9,5063
Consider method^4_0;3;2;9,2436 2436 __UNIQUE-replacement_804
0;3;2;9 50 pathaction!4_0;3;2;9,4355
Consider method^2_0;2,484 484 m11_bring_cars
0;2 42 pathaction!2_0;2,2361
Consider method^2_0;1,1352 1352 m10_bring_tent
0;1 13 pathaction!2_0;1,2358
Consider method^8_0;3;2;5;2;2;2;2,2177 2177 m4_walk_everyone
0;3;2;5;2;2;2;2 31 pathaction!8_0;3;2;5;2;2;2;2,2179
Consider method^2_0;3,2146 2146 <m0_trip_to1;trip_to2[couple1,place0,place2];m2_trip_to2;1;0,-1,-2,-3>
0;3 63 pathaction!2_0;3,70
Consider method^5_0;3;2;5;2,4681 4681 m5_walk_everyone
0;3;2;5;2 37 pathaction!5_0;3;2;5;2,2179
Consider method^0_,4800 4800 __top_1
 19 pathaction!0_,3550
Consider method^7_0;3;2;5;2;2;2,3343 3343 m5_walk_everyone
0;3;2;5;2;2;2 62 pathaction!7_0;3;2;5;2;2;2,2179
Consider method^8_0;3;3;5;2;2;2;2,4128 4128 m4_walk_everyone
0;3;3;5;2;2;2;2 59 pathaction!8_0;3;3;5;2;2;2;2,2182
Consider method^3_0;3;3,4587 4587 m3_trip_to2
0;3;3 51 pathaction!3_0;3;3,7
Consider method^4_0;3;2;2,2437 2437 __UNIQUE-replacement_805
0;3;2;2 55 pathaction!4_0;3;2;2,4356


CHECKING primitive solution of length 43 ...
true 47 __method_precondition_m14_everyone_go_hiking_14_precondition[couple1,guy1,girl1,place0;]
true 14 __method_precondition_m10_bring_tent_10_precondition[tent2,place0,girl0;]
true 6 put_down[girl0,place0,tent2;]
true 78 __method_precondition_m11_bring_cars_11_precondition[car3,place0,car0;]
true 70 nop[;]
true 77 __method_precondition_m0_trip_to1_0_precondition[couple1,guy1,girl1,place0;]
true 26 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 5 __method_precondition_m3_trip_to2_3_precondition[guy1,place1,car1,car2,girl1,couple1,tent0,place0;]
true 54 drive_tent[guy1,place0,place1,car2,tent0;]
true 52 drive[girl1,place0,place1,car1;]
true 46 put_up[guy1,place1,tent0;]
true 3 drive_passenger[girl1,place1,place0,car1,guy1;]
true 69 __method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple2,girl2,guy2;]
true 65 walk_together[tent0,place1,guy2,place0,girl2,couple2;]
true 39 __method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple0,girl0,guy0;]
true 28 walk_together[tent0,place1,guy0,place0,girl0,couple0;]
true 48 __method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple3,girl3,guy3;]
true 79 walk_together[tent0,place1,guy3,place0,girl3,couple3;]
true 64 __method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple1,girl1,guy1;]
true 8 walk_together[tent0,place1,guy1,place0,girl1,couple1;]
true 30 nop[;]
true 68 put_down[girl1,place1,tent0;]
true 60 drive_passenger[guy1,place1,place0,car2,girl1;]
true 36 drive[guy1,place0,place1,car2;]
true 10 drive[girl1,place0,place1,car1;]
true 45 __method_precondition_m3_trip_to2_3_precondition[guy1,place2,car1,car2,girl1,couple1,tent0,place1;]
true 32 drive_tent[guy1,place1,place2,car2,tent0;]
true 56 drive[girl1,place1,place2,car1;]
true 12 put_up[guy1,place2,tent0;]
true 21 drive_passenger[girl1,place2,place1,car1,guy1;]
true 27 __method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple1,girl1,guy1;]
true 29 walk_together[tent0,place2,guy1,place1,girl1,couple1;]
true 17 __method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple0,girl0,guy0;]
true 40 walk_together[tent0,place2,guy0,place1,girl0,couple0;]
true 49 __method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple2,girl2,guy2;]
true 74 walk_together[tent0,place2,guy2,place1,girl2,couple2;]
true 34 __method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple3,girl3,guy3;]
true 53 walk_together[tent0,place2,guy3,place1,girl3,couple3;]
true 18 nop[;]
true 11 put_down[girl1,place2,tent0;]
true 44 drive_passenger[guy1,place2,place1,car2,girl1;]
true 41 drive[guy1,place1,place2,car2;]
true 38 drive[girl1,place1,place2,car1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 530231256
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 71
number of actions                    = 5151
number of abstract actions           = 1628
number of primitive actions          = 3523
number of methods                    = 4801
number of primitive shop actions     = 2082
number of primitive non-shop actions = 1441
size of largest method               = 10
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 59511
number of clauses               = 1277712
average size of clauses         = 4.9559384274390474
number of assert                = 30
number of horn                  = 1238547
K offset                        = 0
K chosen value                  = 9
state formula                   = 97534
method children clauses         = 0
number of paths                 = 152
maximum plan length             = 152
number of decomposition clauses = 1180178
number of ordering clauses      = 0
number of state clauses         = 97534
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 26819
============ parsing ============
total                         = 1037
file parser                   = 572
sort expansion                = 163
closed world assumption       = 77
inherit preconditions         = 0
shop methods                  = 24
eliminate identical variables = 101
strip domain of hybridity     = 3
flatten formula               = 97
============ preprocessing ============
total                                      = 6129
compile negative preconditions             = 38
compile unit methods                       = 0
split parameter                            = 42
expand choiceless abstract tasks           = 171
compile methods with identical tasks       = 229
removing unnecessary predicates            = 1131
lifted reachabiltiy analysis               = 75
grounded planning graph analysis           = 2046
grounded task decomposition graph analysis = 1756
grounding                                  = 574
create artificial top task                 = 21
============ search preparation ============
compute state invariants = 488
============ sat ============
total                                        = 15997
generate formula                             = 11827
generate path decomposition tree             = 1072
normalise path decomposition tree            = 472
sog optimisation                             = 289
translate path decomposition tree to clauses = 6198
generate state formula                       = 11181
generate state invariant formula             = 63
transform to DIMACS                          = 1904
SAT solver                                   = 1930
SAT solver for K=0003                        = 100
SAT solver for K=0004                        = 100
SAT solver for K=0005                        = 150
SAT solver for K=0006                        = 240
SAT solver for K=0007                        = 350
SAT solver for K=0008                        = 480
SAT solver for K=0009                        = 510

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="3523";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="1628";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="530231256";"40 sat:20:state formula"="97534";"40 sat:01:number of variables"="59511";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="152";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="4801";"30 problem:07:number of primitive shop actions"="2082";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="5151";"30 problem:08:number of primitive non-shop actions"="1441";"30 problem:02:number of predicates"="71";"40 sat:03:number of horn"="1238547";"40 sat:15:K chosen value"="9";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="10";"40 sat:03:average size of clauses"="4.9559384274390474";"40 sat:02:number of clauses"="1277712";"40 sat:50:number of state clauses"="97534";"40 sat:03:number of assert"="30";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="152";"40 sat:50:number of decomposition clauses"="1180178";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="572";"01 parsing:08:flatten formula"="97";"40 sat:41:SAT solver for K=0004"="100";"40 sat:00:total"="15997";"40 sat:16:generate state formula"="11181";"40 sat:20:transform to DIMACS"="1904";"40 sat:11:generate path decomposition tree"="1072";"02 preprocessing:07:compile methods with identical tasks"="229";"01 parsing:07:strip domain of hybridity"="3";"40 sat:41:SAT solver for K=0008"="480";"02 preprocessing:08:removing unnecessary predicates"="1131";"01 parsing:03:closed world assumption"="77";"02 preprocessing:11:lifted reachabiltiy analysis"="75";"01 parsing:02:sort expansion"="163";"40 sat:12:normalise path decomposition tree"="472";"40 sat:40:SAT solver"="1930";"01 parsing:00:total"="1037";"40 sat:10:generate formula"="11827";"40 sat:41:SAT solver for K=0005"="150";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0009"="510";"02 preprocessing:01:compile negative preconditions"="38";"00 total:00:total"="26819";"40 sat:13:sog optimisation"="289";"02 preprocessing:12:grounded planning graph analysis"="2046";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1756";"40 sat:41:SAT solver for K=0006"="240";"02 preprocessing:04:split parameter"="42";"01 parsing:05:shop methods"="24";"10 search preparation:02:compute state invariants"="488";"01 parsing:06:eliminate identical variables"="101";"40 sat:15:translate path decomposition tree to clauses"="6198";"02 preprocessing:05:expand choiceless abstract tasks"="171";"40 sat:41:SAT solver for K=0003"="100";"40 sat:17:generate state invariant formula"="63";"02 preprocessing:00:total"="6129";"02 preprocessing:99:create artificial top task"="21";"02 preprocessing:84:grounding"="574";"40 sat:41:SAT solver for K=0007"="350"
#!verify __method_precondition_m14_everyone_go_hiking_14_precondition[couple1,guy1,girl1,place0];__method_precondition_m10_bring_tent_10_precondition[tent2,place0,girl0];put_down[girl0,place0,tent2];__method_precondition_m11_bring_cars_11_precondition[car3,place0,car0];nop[];__method_precondition_m0_trip_to1_0_precondition[couple1,guy1,girl1,place0];__method_precondition_m2_trip_to2_2_precondition[place0,place1];__method_precondition_m3_trip_to2_3_precondition[guy1,place1,car1,car2,girl1,couple1,tent0,place0];drive_tent[guy1,place0,place1,car2,tent0];drive[girl1,place0,place1,car1];put_up[guy1,place1,tent0];drive_passenger[girl1,place1,place0,car1,guy1];__method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple2,girl2,guy2];walk_together[tent0,place1,guy2,place0,girl2,couple2];__method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple0,girl0,guy0];walk_together[tent0,place1,guy0,place0,girl0,couple0];__method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple3,girl3,guy3];walk_together[tent0,place1,guy3,place0,girl3,couple3];__method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple1,girl1,guy1];walk_together[tent0,place1,guy1,place0,girl1,couple1];nop[];put_down[girl1,place1,tent0];drive_passenger[guy1,place1,place0,car2,girl1];drive[guy1,place0,place1,car2];drive[girl1,place0,place1,car1];__method_precondition_m3_trip_to2_3_precondition[guy1,place2,car1,car2,girl1,couple1,tent0,place1];drive_tent[guy1,place1,place2,car2,tent0];drive[girl1,place1,place2,car1];put_up[guy1,place2,tent0];drive_passenger[girl1,place2,place1,car1,guy1];__method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple1,girl1,guy1];walk_together[tent0,place2,guy1,place1,girl1,couple1];__method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple0,girl0,guy0];walk_together[tent0,place2,guy0,place1,girl0,couple0];__method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple2,girl2,guy2];walk_together[tent0,place2,guy2,place1,girl2,couple2];__method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple3,girl3,guy3];walk_together[tent0,place2,guy3,place1,girl3,couple3];nop[];put_down[girl1,place2,tent0];drive_passenger[guy1,place2,place1,car2,girl1];drive[guy1,place1,place2,car2];drive[girl1,place1,place2,car1]
==>
0 __method_precondition_m14_everyone_go_hiking_14_precondition couple1 guy1 girl1 place0 
1 __method_precondition_m10_bring_tent_10_precondition tent2 place0 girl0 
2 put_down girl0 place0 tent2 
3 __method_precondition_m11_bring_cars_11_precondition car3 place0 car0 
4 nop  
5 __method_precondition_m0_trip_to1_0_precondition couple1 guy1 girl1 place0 
6 __method_precondition_m2_trip_to2_2_precondition place0 place1 
7 __method_precondition_m3_trip_to2_3_precondition guy1 place1 car1 car2 girl1 couple1 tent0 place0 
8 drive_tent guy1 place0 place1 car2 tent0 
9 drive girl1 place0 place1 car1 
10 put_up guy1 place1 tent0 
11 drive_passenger girl1 place1 place0 car1 guy1 
12 __method_precondition_m5_walk_everyone_5_precondition place0 place1 couple2 girl2 guy2 
13 walk_together tent0 place1 guy2 place0 girl2 couple2 
14 __method_precondition_m5_walk_everyone_5_precondition place0 place1 couple0 girl0 guy0 
15 walk_together tent0 place1 guy0 place0 girl0 couple0 
16 __method_precondition_m5_walk_everyone_5_precondition place0 place1 couple3 girl3 guy3 
17 walk_together tent0 place1 guy3 place0 girl3 couple3 
18 __method_precondition_m5_walk_everyone_5_precondition place0 place1 couple1 girl1 guy1 
19 walk_together tent0 place1 guy1 place0 girl1 couple1 
20 nop  
21 put_down girl1 place1 tent0 
22 drive_passenger guy1 place1 place0 car2 girl1 
23 drive guy1 place0 place1 car2 
24 drive girl1 place0 place1 car1 
25 __method_precondition_m3_trip_to2_3_precondition guy1 place2 car1 car2 girl1 couple1 tent0 place1 
26 drive_tent guy1 place1 place2 car2 tent0 
27 drive girl1 place1 place2 car1 
28 put_up guy1 place2 tent0 
29 drive_passenger girl1 place2 place1 car1 guy1 
30 __method_precondition_m5_walk_everyone_5_precondition place1 place2 couple1 girl1 guy1 
31 walk_together tent0 place2 guy1 place1 girl1 couple1 
32 __method_precondition_m5_walk_everyone_5_precondition place1 place2 couple0 girl0 guy0 
33 walk_together tent0 place2 guy0 place1 girl0 couple0 
34 __method_precondition_m5_walk_everyone_5_precondition place1 place2 couple2 girl2 guy2 
35 walk_together tent0 place2 guy2 place1 girl2 couple2 
36 __method_precondition_m5_walk_everyone_5_precondition place1 place2 couple3 girl3 guy3 
37 walk_together tent0 place2 guy3 place1 girl3 couple3 
38 nop  
39 put_down girl1 place2 tent0 
40 drive_passenger guy1 place2 place1 car2 girl1 
41 drive guy1 place1 place2 car2 
42 drive girl1 place1 place2 car1 
root 59
43 bring_tent place0  -> m10_bring_tent 1 2
44 drive girl1 place0 place1 car1  -> __UNIQUE-replacement_805 9
45 everyone_go_hiking place2  -> <m14_everyone_go_hiking;prepare_trip[place0];m6_prepare_trip;1;0,-1,-2,2> 0 43 56 57
46 walk_everyone tent0 place1 place0  -> m5_walk_everyone 18 19 60
47 walk_everyone tent0 place2 place1  -> m4_walk_everyone 38
48 walk_everyone tent0 place2 place1  -> m5_walk_everyone 34 35 55
49 trip_to2 couple1 place1 place2  -> m3_trip_to2 25 26 53 28 29 61 39 40 41 50
50 drive girl1 place1 place2 car1  -> __UNIQUE-replacement_1512 42
51 walk_everyone tent0 place1 place0  -> m5_walk_everyone 16 17 46
52 walk_everyone tent0 place1 place0  -> m5_walk_everyone 12 13 54
53 drive girl1 place1 place2 car1  -> __UNIQUE-replacement_1513 27
54 walk_everyone tent0 place1 place0  -> m5_walk_everyone 14 15 51
55 walk_everyone tent0 place2 place1  -> m5_walk_everyone 36 37 47
56 bring_cars place0  -> m11_bring_cars 3 4
57 trip_to1 couple1 place2  -> <m0_trip_to1;trip_to2[couple1,place0,place2];m2_trip_to2;1;0,-1,-2,-3> 5 6 63 49
58 walk_everyone tent0 place2 place1  -> m5_walk_everyone 32 33 48
59 __choicelessATCompilation__top_1  -> __top_1 45
60 walk_everyone tent0 place1 place0  -> m4_walk_everyone 20
61 walk_everyone tent0 place2 place1  -> m5_walk_everyone 30 31 58
62 drive girl1 place0 place1 car1  -> __UNIQUE-replacement_804 24
63 trip_to2 couple1 place0 place1  -> m3_trip_to2 7 8 44 10 11 52 21 22 23 62

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 27.646 MEMPEAK_KBS 734245.888
