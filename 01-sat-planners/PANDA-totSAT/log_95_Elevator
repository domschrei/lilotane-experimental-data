PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/Elevator/domain.hddl instances/Elevator/p15.hddl"


Planner Configuration
=====================
Domain: instances/Elevator/domain.hddl
Problem: instances/Elevator/p15.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p15.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Compiling negative preconditions ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Compiling split parameters ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Grounded planning graph ... done in 461ms.
	Number of Grounded Actions 1951
	Number of Grounded Literals 555
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Two Way TDG ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Grounding ... done.
	number of abstract tasks = 92
	number of tasks = 1666
	number of decomposition methods = 1050
	number of predicates = 555
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 1050
	number of epsilon methods = 0
	number of primitive tasks = 1574
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 92
	number of tasks = 1666
	number of decomposition methods = 1050
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 1050
	number of epsilon methods = 0
	number of primitive tasks = 1574
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 112ms.
	Number of Grounded Actions 898
	Number of Grounded Literals 77
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 55ms.
	Number of Grounded Actions 898
	Number of Grounded Literals 77
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 54
	number of tasks = 952
	number of decomposition methods = 597
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 54
	number of tasks = 952
	number of decomposition methods = 597
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Tasks 898 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771942ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854771860
done
initial PDT has 20 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 14 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 8778
Size 8778 at 0/898
Size 5201 at 500/898
Size 2714
Size 2714 at 0/898
Size 2086 at 500/898
Size 864
Size 864 at 0/898
Size 592 at 500/898
Size 196
Size 196 at 0/898
Size 196 at 500/898
Size 196
Invariant time: 0.218
Number of invariants: 196
Invariant Clauses 2940
NUMBER OF CLAUSES 24222
NUMBER OF STATE CLAUSES 6770
NUMBER OF DECOMPOSITION CLAUSES 17452
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 27.95% 72.05% 0.0% 
NUMBER OF PATHS 14
Starting cryptominisat
Setting starttime of solver to 1603874830638
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 34 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 20
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770707
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 5292
NUMBER OF CLAUSES 56355
NUMBER OF STATE CLAUSES 13186
NUMBER OF DECOMPOSITION CLAUSES 43169
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 23.400000000000002% 76.60000000000001% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat
Setting starttime of solver to 1603874831246
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 52 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 42 leafs
SHOP LEAFS 30
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770139
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 8428
NUMBER OF CLAUSES 86763
NUMBER OF STATE CLAUSES 20942
NUMBER OF DECOMPOSITION CLAUSES 65821
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 24.14% 75.86% 0.0% 
NUMBER OF PATHS 42
Starting cryptominisat
Setting starttime of solver to 1603874831877
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 74 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 62 leafs
SHOP LEAFS 42
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854769606
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 12348
NUMBER OF CLAUSES 122148
NUMBER OF STATE CLAUSES 30416
NUMBER OF DECOMPOSITION CLAUSES 91732
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 24.900000000000002% 75.10000000000001% 0.0% 
NUMBER OF PATHS 62
Starting cryptominisat
Setting starttime of solver to 1603874832516
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 100 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 86 leafs
SHOP LEAFS 56
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768957
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 17052
NUMBER OF CLAUSES 162510
NUMBER OF STATE CLAUSES 41608
NUMBER OF DECOMPOSITION CLAUSES 120902
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 25.6% 74.4% 0.0% 
NUMBER OF PATHS 86
Starting cryptominisat
Setting starttime of solver to 1603874833187
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 130 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 114 leafs
SHOP LEAFS 72
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768325
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 22540
NUMBER OF CLAUSES 207849
NUMBER OF STATE CLAUSES 54518
NUMBER OF DECOMPOSITION CLAUSES 153331
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 26.23% 73.77% 0.0% 
NUMBER OF PATHS 114
Starting cryptominisat
Setting starttime of solver to 1603874833961
Command exited with non-zero status 20
0.06 0.00

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... done
initial PDT has 164 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854767436
done
PDT has 146 leafs
SHOP LEAFS 90
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 28812
NUMBER OF CLAUSES 258165
NUMBER OF STATE CLAUSES 69146
NUMBER OF DECOMPOSITION CLAUSES 189019
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 26.78% 73.22% 0.0% 
NUMBER OF PATHS 146
Starting cryptominisat
Setting starttime of solver to 1603874834784
Command exited with non-zero status 20
0.13 0.00

Time command gave the following runtime for the solver: 130
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... done
initial PDT has 202 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 182 leafs
SHOP LEAFS 110
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854766605
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 35868
NUMBER OF CLAUSES 313458
NUMBER OF STATE CLAUSES 85492
NUMBER OF DECOMPOSITION CLAUSES 227966
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 27.27% 72.73% 0.0% 
NUMBER OF PATHS 182
Starting cryptominisat
Setting starttime of solver to 1603874835737
Command exited with non-zero status 20
2.81 0.00

Time command gave the following runtime for the solver: 2810
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 12
Generating initial PDT ... done
initial PDT has 244 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 222 leafs
SHOP LEAFS 132
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854762957
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 43708
NUMBER OF CLAUSES 373728
NUMBER OF STATE CLAUSES 103556
NUMBER OF DECOMPOSITION CLAUSES 270172
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 27.71% 72.29% 0.0% 
NUMBER OF PATHS 222
Starting cryptominisat
Setting starttime of solver to 1603874839377
Command exited with non-zero status 20
58.27 0.06

Time command gave the following runtime for the solver: 58330
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 13
Generating initial PDT ... done
initial PDT has 290 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854703774
done
PDT has 266 leafs
SHOP LEAFS 156
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 52332
NUMBER OF CLAUSES 438975
NUMBER OF STATE CLAUSES 123338
NUMBER OF DECOMPOSITION CLAUSES 315637
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 28.1% 71.9% 0.0% 
NUMBER OF PATHS 266
Starting cryptominisat
Setting starttime of solver to 1603874898729
Command exited with non-zero status 10
1.34 0.01

Time command gave the following runtime for the solver: 1350
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^4_0;2;3;2,561 561 m3_do_check_floor
0;2;3;2 148 pathaction!4_0;2;3;2,905
Consider method^4_0;3;1;3,392 392 m9_do_throw_all
0;3;1;3 178 pathaction!4_0;3;1;3,23
Consider method^2_0;1,394 394 m3_do_check_floor
0;1 138 pathaction!2_0;1,916
Consider method^7_0;2;3;3;3;3;2,559 559 m3_do_check_floor
0;2;3;3;3;3;2 16 pathaction!7_0;2;3;3;3;3;2,913
Consider method^3_0;3;1,284 284 m9_do_throw_all
0;3;1 17 pathaction!3_0;3;1,24
Consider method^0_,596 596 __top_3
 182 pathaction!0_,951
Consider method^8_0;2;3;3;3;3;3;2,178 178 m3_do_check_floor
0;2;3;3;3;3;3;2 239 pathaction!8_0;2;3;3;3;3;3;2,902
Consider method^11_0;3;1;3;3;3;3;3;3;3;2,33 33 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;2 160 pathaction!11_0;3;1;3;3;3;3;3;3;3;2,906
Consider method^9_0;2;3;3;3;3;2;2;2,90 90 m1_do_check_floor
0;2;3;3;3;3;2;2;2 201 pathaction!9_0;2;3;3;3;3;2;2;2,913
Consider method^4_0;3;1;2,42 42 m2_do_check_floor
0;3;1;2 5 pathaction!4_0;3;1;2,908
Consider method^9_0;2;3;3;3;3;3;3;2,567 567 m3_do_check_floor
0;2;3;3;3;3;3;3;2 268 pathaction!9_0;2;3;3;3;3;3;3;2,912
Consider method^12_0;3;1;3;3;3;3;3;3;3;2;2,494 494 m1_do_check_floor
0;3;1;3;3;3;3;3;3;3;2;2 9 pathaction!12_0;3;1;3;3;3;3;3;3;3;2;2,906
Consider method^11_0;3;1;3;3;3;3;3;3;2;2,359 359 m1_do_check_floor
0;3;1;3;3;3;3;3;3;2;2 222 pathaction!11_0;3;1;3;3;3;3;3;3;2;2,914
Consider method^9_0;2;3;3;3;3;3;3;3,169 169 m5_do_take_all
0;2;3;3;3;3;3;3;3 98 pathaction!9_0;2;3;3;3;3;3;3;3,44
Consider method^6_0;2;3;3;3;2,322 322 m3_do_check_floor
0;2;3;3;3;2 41 pathaction!6_0;2;3;3;3;2,915
Consider method^8_0;3;1;3;3;3;3;2,25 25 m2_do_check_floor
0;3;1;3;3;3;3;2 0 pathaction!8_0;3;1;3;3;3;3;2,900
Consider method^10_0;2;3;3;3;3;3;3;2;2,261 261 m2_do_check_floor
0;2;3;3;3;3;3;3;2;2 15 pathaction!10_0;2;3;3;3;3;3;3;2;2,912
Consider method^1_0,234 234 m0_do_problem
0 49 pathaction!1_0,580
Consider method^10_0;2;3;3;3;3;3;3;3;2,26 26 m3_do_check_floor
0;2;3;3;3;3;3;3;3;2 190 pathaction!10_0;2;3;3;3;3;3;3;3;2,910
Consider method^10_0;3;1;3;3;2;2;2;2;2,184 184 m1_do_check_floor
0;3;1;3;3;2;2;2;2;2 192 pathaction!10_0;3;1;3;3;2;2;2;2;2,904
Consider method^10_0;2;3;3;3;3;3;3;3;3,215 215 m6_do_take_all
0;2;3;3;3;3;3;3;3;3 109 pathaction!10_0;2;3;3;3;3;3;3;3;3,42
Consider method^7_0;3;1;3;3;3;2,564 564 m2_do_check_floor
0;3;1;3;3;3;2 80 pathaction!7_0;3;1;3;3;3;2,903
Consider method^10_0;3;1;3;3;3;3;3;3;2,209 209 m2_do_check_floor
0;3;1;3;3;3;3;3;3;2 126 pathaction!10_0;3;1;3;3;3;3;3;3;2,914
Consider method^8_0;2;3;3;3;2;2;2,446 446 m1_do_check_floor
0;2;3;3;3;2;2;2 169 pathaction!8_0;2;3;3;3;2;2;2,915
Consider method^6_0;3;1;3;3;3,152 152 m10_do_throw_all
0;3;1;3;3;3 123 pathaction!6_0;3;1;3;3;3,19
Consider method^2_0;2,344 344 m5_do_take_all
0;2 32 pathaction!2_0;2,48
Consider method^3_0;2;2,43 43 m3_do_check_floor
0;2;2 86 pathaction!3_0;2;2,901
Consider method^10_0;2;3;3;3;3;3;2;2;2,555 555 m3_do_check_floor
0;2;3;3;3;3;3;2;2;2 246 pathaction!10_0;2;3;3;3;3;3;2;2;2,902
Consider method^8_0;3;1;3;2;2;2;2,342 342 m1_do_check_floor
0;3;1;3;2;2;2;2 70 pathaction!8_0;3;1;3;2;2;2;2,911
Consider method^9_0;3;1;3;3;2;2;2;2,455 455 m3_do_check_floor
0;3;1;3;3;2;2;2;2 113 pathaction!9_0;3;1;3;3;2;2;2;2,904
Consider method^4_0;2;3;3,366 366 m6_do_take_all
0;2;3;3 73 pathaction!4_0;2;3;3,37
Consider method^5_0;3;1;2;2,246 246 m3_do_check_floor
0;3;1;2;2 208 pathaction!5_0;3;1;2;2,908
Consider method^8_0;3;1;3;3;2;2;2,471 471 m2_do_check_floor
0;3;1;3;3;2;2;2 94 pathaction!8_0;3;1;3;3;2;2;2,904
Consider method^7_0;3;1;3;3;3;3,367 367 m10_do_throw_all
0;3;1;3;3;3;3 247 pathaction!7_0;3;1;3;3;3;3,18
Consider method^9_0;2;3;3;3;3;3;2;2,404 404 m3_do_check_floor
0;2;3;3;3;3;3;2;2 74 pathaction!9_0;2;3;3;3;3;3;2;2,902
Consider method^5_0;3;1;3;2,200 200 m2_do_check_floor
0;3;1;3;2 95 pathaction!5_0;3;1;3;2,911
Consider method^12_0;2;3;3;3;3;3;3;3;2;2;2,65 65 m1_do_check_floor
0;2;3;3;3;3;3;3;3;2;2;2 75 pathaction!12_0;2;3;3;3;3;3;3;3;2;2;2,910
Consider method^5_0;2;2;2;2,30 30 m1_do_check_floor
0;2;2;2;2 128 pathaction!5_0;2;2;2;2,901
Consider method^7_0;2;3;3;3;2;2,465 465 m3_do_check_floor
0;2;3;3;3;2;2 165 pathaction!7_0;2;3;3;3;2;2,915
Consider method^5_0;2;3;2;2,491 491 m1_do_check_floor
0;2;3;2;2 175 pathaction!5_0;2;3;2;2,905
Consider method^9_0;3;1;3;3;3;3;3;3,508 508 m10_do_throw_all
0;3;1;3;3;3;3;3;3 229 pathaction!9_0;3;1;3;3;3;3;3;3,22
Consider method^5_0;3;1;3;3,59 59 m10_do_throw_all
0;3;1;3;3 267 pathaction!5_0;3;1;3;3,26
Consider method^11_0;2;3;3;3;3;3;3;3;3;2,439 439 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;2 161 pathaction!11_0;2;3;3;3;3;3;3;3;3;2,909
Consider method^8_0;2;3;3;3;3;2;2,333 333 m2_do_check_floor
0;2;3;3;3;3;2;2 154 pathaction!8_0;2;3;3;3;3;2;2,913
Consider method^7_0;3;1;3;2;2;2,148 148 m2_do_check_floor
0;3;1;3;2;2;2 225 pathaction!7_0;3;1;3;2;2;2,911
Consider method^3_0;1;2,511 511 m1_do_check_floor
0;1;2 183 pathaction!3_0;1;2,916
Consider method^10_0;3;1;3;3;3;3;3;3;3,454 454 m10_do_throw_all
0;3;1;3;3;3;3;3;3;3 58 pathaction!10_0;3;1;3;3;3;3;3;3;3,29
Consider method^9_0;3;1;3;3;3;3;2;2,316 316 m1_do_check_floor
0;3;1;3;3;3;3;2;2 266 pathaction!9_0;3;1;3;3;3;3;2;2,900
Consider method^11_0;2;3;3;3;3;3;3;3;3;3,395 395 m4_do_take_all
0;2;3;3;3;3;3;3;3;3;3 258 pathaction!11_0;2;3;3;3;3;3;3;3;3;3,41
Consider method^7_0;3;1;3;3;2;2,479 479 m2_do_check_floor
0;3;1;3;3;2;2 152 pathaction!7_0;3;1;3;3;2;2,904
Consider method^8_0;3;1;3;3;3;3;3,519 519 m9_do_throw_all
0;3;1;3;3;3;3;3 221 pathaction!8_0;3;1;3;3;3;3;3,15
Consider method^10_0;3;1;3;3;3;3;3;2;2,568 568 m1_do_check_floor
0;3;1;3;3;3;3;3;2;2 90 pathaction!10_0;3;1;3;3;3;3;3;2;2,907
Consider method^3_0;2;3,293 293 m6_do_take_all
0;2;3 163 pathaction!3_0;2;3,33
Consider method^8_0;3;1;3;3;3;2;2,503 503 m1_do_check_floor
0;3;1;3;3;3;2;2 228 pathaction!8_0;3;1;3;3;3;2;2,903
Consider method^12_0;2;3;3;3;3;3;3;3;3;2;2,535 535 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;2;2 216 pathaction!12_0;2;3;3;3;3;3;3;3;3;2;2,909
Consider method^2_0;3,275 275 m7_do_start_throw_all
0;3 11 pathaction!2_0;3,596
Consider method^4_0;2;2;2,15 15 m3_do_check_floor
0;2;2;2 253 pathaction!4_0;2;2;2,901
Consider method^6_0;3;1;3;2;2,478 478 m2_do_check_floor
0;3;1;3;2;2 31 pathaction!6_0;3;1;3;2;2,911
Consider method^11_0;2;3;3;3;3;3;2;2;2;2,146 146 m1_do_check_floor
0;2;3;3;3;3;3;2;2;2;2 220 pathaction!11_0;2;3;3;3;3;3;2;2;2;2,902
Consider method^6_0;3;1;2;2;2,194 194 m1_do_check_floor
0;3;1;2;2;2 18 pathaction!6_0;3;1;2;2;2,908
Consider method^11_0;2;3;3;3;3;3;3;2;2;2,362 362 m1_do_check_floor
0;2;3;3;3;3;3;3;2;2;2 215 pathaction!11_0;2;3;3;3;3;3;3;2;2;2,912
Consider method^6_0;2;3;3;3;3,95 95 m6_do_take_all
0;2;3;3;3;3 112 pathaction!6_0;2;3;3;3;3,47
Consider method^11_0;2;3;3;3;3;3;3;3;2;2,543 543 m2_do_check_floor
0;2;3;3;3;3;3;3;3;2;2 241 pathaction!11_0;2;3;3;3;3;3;3;3;2;2,910
Consider method^5_0;2;3;3;2,535 535 m1_do_check_floor
0;2;3;3;2 134 pathaction!5_0;2;3;3;2,909
Consider method^9_0;3;1;3;3;3;3;3;2,19 19 m2_do_check_floor
0;3;1;3;3;3;3;3;2 129 pathaction!9_0;3;1;3;3;3;3;3;2,907
Consider method^8_0;2;3;3;3;3;3;3,113 113 m5_do_take_all
0;2;3;3;3;3;3;3 40 pathaction!8_0;2;3;3;3;3;3;3,34
Consider method^5_0;2;3;3;3,40 40 m5_do_take_all
0;2;3;3;3 46 pathaction!5_0;2;3;3;3,41
Consider method^6_0;3;1;3;3;2,438 438 m2_do_check_floor
0;3;1;3;3;2 162 pathaction!6_0;3;1;3;3;2,904
Consider method^11_0;3;1;3;3;3;3;3;3;3;3,580 580 m8_do_throw_all
0;3;1;3;3;3;3;3;3;3;3 27 pathaction!11_0;3;1;3;3;3;3;3;3;3;3,21
Consider method^7_0;2;3;3;3;3;3,68 68 m6_do_take_all
0;2;3;3;3;3;3 218 pathaction!7_0;2;3;3;3;3;3,45


CHECKING primitive solution of length 136 ...
true 232 __method_precondition_m0_do_problem_0_precondition[f0;]
true 119 __method_precondition_m3_do_check_floor_3_precondition[f0,p8;]
true 51 board[f0,p8;]
true 106 __method_precondition_m1_do_check_floor_1_precondition[f0;]
true 224 nop[;]
true 52 __method_precondition_m5_do_take_all_5_precondition[f0,f23,p2;]
true 223 up[f0,f23;]
true 172 __method_precondition_m3_do_check_floor_3_precondition[f23,p7;]
true 34 board[f23,p7;]
true 177 __method_precondition_m3_do_check_floor_3_precondition[f23,p2;]
true 261 board[f23,p2;]
true 97 __method_precondition_m1_do_check_floor_1_precondition[f23;]
true 242 nop[;]
true 85 __method_precondition_m6_do_take_all_6_precondition[f23,f22,p9;]
true 238 down[f23,f22;]
true 270 __method_precondition_m3_do_check_floor_3_precondition[f22,p9;]
true 191 board[f22,p9;]
true 158 __method_precondition_m1_do_check_floor_1_precondition[f22;]
true 234 nop[;]
true 44 __method_precondition_m6_do_take_all_6_precondition[f22,f11,p10;]
true 7 down[f22,f11;]
true 61 __method_precondition_m1_do_check_floor_1_precondition[f11;]
true 156 nop[;]
true 244 __method_precondition_m5_do_take_all_5_precondition[f11,f27,p11;]
true 92 up[f11,f27;]
true 82 __method_precondition_m3_do_check_floor_3_precondition[f27,p11;]
true 210 board[f27,p11;]
true 101 __method_precondition_m3_do_check_floor_3_precondition[f27,p1;]
true 71 board[f27,p1;]
true 245 __method_precondition_m1_do_check_floor_1_precondition[f27;]
true 203 nop[;]
true 39 __method_precondition_m6_do_take_all_6_precondition[f27,f9,p4;]
true 28 down[f27,f9;]
true 204 __method_precondition_m3_do_check_floor_3_precondition[f9,p4;]
true 68 board[f9,p4;]
true 57 __method_precondition_m2_do_check_floor_2_precondition[f9,p11;]
true 155 depart[f9,p11;]
true 54 __method_precondition_m1_do_check_floor_1_precondition[f9;]
true 230 nop[;]
true 195 __method_precondition_m6_do_take_all_6_precondition[f9,f2,p13;]
true 193 down[f9,f2;]
true 22 __method_precondition_m3_do_check_floor_3_precondition[f2,p13;]
true 140 board[f2,p13;]
true 188 __method_precondition_m3_do_check_floor_3_precondition[f2,p5;]
true 167 board[f2,p5;]
true 141 __method_precondition_m3_do_check_floor_3_precondition[f2,p12;]
true 144 board[f2,p12;]
true 243 __method_precondition_m1_do_check_floor_1_precondition[f2;]
true 4 nop[;]
true 84 __method_precondition_m5_do_take_all_5_precondition[f2,f7,p14;]
true 76 up[f2,f7;]
true 96 __method_precondition_m3_do_check_floor_3_precondition[f7,p14;]
true 249 board[f7,p14;]
true 43 __method_precondition_m2_do_check_floor_2_precondition[f7,p5;]
true 194 depart[f7,p5;]
true 186 __method_precondition_m1_do_check_floor_1_precondition[f7;]
true 145 nop[;]
true 250 __method_precondition_m5_do_take_all_5_precondition[f7,f20,p6;]
true 124 up[f7,f20;]
true 206 __method_precondition_m3_do_check_floor_3_precondition[f20,p6;]
true 83 board[f20,p6;]
true 196 __method_precondition_m2_do_check_floor_2_precondition[f20,p12;]
true 45 depart[f20,p12;]
true 67 __method_precondition_m1_do_check_floor_1_precondition[f20;]
true 88 nop[;]
true 187 __method_precondition_m6_do_take_all_6_precondition[f20,f11,p10;]
true 26 down[f20,f11;]
true 179 __method_precondition_m3_do_check_floor_3_precondition[f11,p10;]
true 55 board[f11,p10;]
true 107 __method_precondition_m1_do_check_floor_1_precondition[f11;]
true 110 nop[;]
true 173 __method_precondition_m4_do_take_all_4_precondition[f11;]
true 121 nop[;]
true 72 __method_precondition_m7_do_start_throw_all_7_precondition[f11;]
true 171 __method_precondition_m9_do_throw_all_9_precondition[f11,f13,p13;]
true 102 up[f11,f13;]
true 202 __method_precondition_m2_do_check_floor_2_precondition[f13,p13;]
true 33 depart[f13,p13;]
true 117 __method_precondition_m3_do_check_floor_3_precondition[f13,p0;]
true 87 board[f13,p0;]
true 164 __method_precondition_m1_do_check_floor_1_precondition[f13;]
true 213 nop[;]
true 257 __method_precondition_m9_do_throw_all_9_precondition[f13,f25,p1;]
true 50 up[f13,f25;]
true 176 __method_precondition_m2_do_check_floor_2_precondition[f25,p1;]
true 64 depart[f25,p1;]
true 30 __method_precondition_m2_do_check_floor_2_precondition[f25,p2;]
true 211 depart[f25,p2;]
true 143 __method_precondition_m2_do_check_floor_2_precondition[f25,p14;]
true 65 depart[f25,p14;]
true 219 __method_precondition_m1_do_check_floor_1_precondition[f25;]
true 79 nop[;]
true 259 __method_precondition_m10_do_throw_all_10_precondition[f25,f16,p0;]
true 115 down[f25,f16;]
true 133 __method_precondition_m2_do_check_floor_2_precondition[f16,p9;]
true 69 depart[f16,p9;]
true 157 __method_precondition_m2_do_check_floor_2_precondition[f16,p0;]
true 214 depart[f16,p0;]
true 237 __method_precondition_m2_do_check_floor_2_precondition[f16,p7;]
true 139 depart[f16,p7;]
true 48 __method_precondition_m3_do_check_floor_3_precondition[f16,p3;]
true 136 board[f16,p3;]
true 181 __method_precondition_m1_do_check_floor_1_precondition[f16;]
true 248 nop[;]
true 255 __method_precondition_m10_do_throw_all_10_precondition[f16,f12,p3;]
true 256 down[f16,f12;]
true 263 __method_precondition_m2_do_check_floor_2_precondition[f12,p3;]
true 260 depart[f12,p3;]
true 93 __method_precondition_m1_do_check_floor_1_precondition[f12;]
true 38 nop[;]
true 118 __method_precondition_m10_do_throw_all_10_precondition[f12,f8,p10;]
true 6 down[f12,f8;]
true 180 __method_precondition_m2_do_check_floor_2_precondition[f8,p10;]
true 8 depart[f8,p10;]
true 42 __method_precondition_m1_do_check_floor_1_precondition[f8;]
true 236 nop[;]
true 14 __method_precondition_m9_do_throw_all_9_precondition[f8,f19,p6;]
true 60 up[f8,f19;]
true 108 __method_precondition_m2_do_check_floor_2_precondition[f19,p6;]
true 100 depart[f19,p6;]
true 122 __method_precondition_m1_do_check_floor_1_precondition[f19;]
true 251 nop[;]
true 159 __method_precondition_m10_do_throw_all_10_precondition[f19,f6,p8;]
true 12 down[f19,f6;]
true 226 __method_precondition_m2_do_check_floor_2_precondition[f6,p8;]
true 35 depart[f6,p8;]
true 189 __method_precondition_m1_do_check_floor_1_precondition[f6;]
true 265 nop[;]
true 37 __method_precondition_m10_do_throw_all_10_precondition[f6,f1,p4;]
true 200 down[f6,f1;]
true 151 __method_precondition_m2_do_check_floor_2_precondition[f1,p4;]
true 130 depart[f1,p4;]
true 240 __method_precondition_m1_do_check_floor_1_precondition[f1;]
true 168 nop[;]
true 105 __method_precondition_m8_do_throw_all_8_precondition[f1;]
true 2 nop[;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 338812016
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 77
number of actions                    = 952
number of abstract actions           = 54
number of primitive actions          = 898
number of methods                    = 597
number of primitive shop actions     = 595
number of primitive non-shop actions = 303
size of largest method               = 4
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 66220
number of clauses               = 438975
average size of clauses         = 2.839296087476508
number of assert                = 47
number of horn                  = 403024
K offset                        = 0
K chosen value                  = 13
state formula                   = 123338
method children clauses         = 0
number of paths                 = 266
maximum plan length             = 266
number of decomposition clauses = 315637
number of ordering clauses      = 0
number of state clauses         = 123338
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 75097
============ parsing ============
total                         = 1084
file parser                   = 581
sort expansion                = 217
closed world assumption       = 143
inherit preconditions         = 0
shop methods                  = 19
eliminate identical variables = 52
strip domain of hybridity     = 1
flatten formula               = 71
============ preprocessing ============
total                                      = 2581
compile negative preconditions             = 42
compile unit methods                       = 0
split parameter                            = 53
expand choiceless abstract tasks           = 0
compile methods with identical tasks       = 21
removing unnecessary predicates            = 468
lifted reachabiltiy analysis               = 58
grounded planning graph analysis           = 830
grounded task decomposition graph analysis = 824
grounding                                  = 268
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 310
============ sat ============
total                                        = 69170
generate formula                             = 5273
generate path decomposition tree             = 656
normalise path decomposition tree            = 256
sog optimisation                             = 211
translate path decomposition tree to clauses = 2053
generate state formula                       = 5102
generate state invariant formula             = 231
transform to DIMACS                          = 634
SAT solver                                   = 62780
SAT solver for K=0004                        = 0
SAT solver for K=0005                        = 10
SAT solver for K=0006                        = 20
SAT solver for K=0007                        = 20
SAT solver for K=0008                        = 50
SAT solver for K=0009                        = 60
SAT solver for K=0010                        = 130
SAT solver for K=0011                        = 2810
SAT solver for K=0012                        = 58330
SAT solver for K=0013                        = 1350

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="898";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="54";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="338812016";"40 sat:20:state formula"="123338";"40 sat:01:number of variables"="66220";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="266";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="597";"30 problem:07:number of primitive shop actions"="595";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="952";"30 problem:08:number of primitive non-shop actions"="303";"30 problem:02:number of predicates"="77";"40 sat:03:number of horn"="403024";"40 sat:15:K chosen value"="13";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="4";"40 sat:03:average size of clauses"="2.839296087476508";"40 sat:02:number of clauses"="438975";"40 sat:50:number of state clauses"="123338";"40 sat:03:number of assert"="47";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="266";"40 sat:50:number of decomposition clauses"="315637";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="581";"01 parsing:08:flatten formula"="71";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="69170";"40 sat:16:generate state formula"="5102";"40 sat:20:transform to DIMACS"="634";"40 sat:11:generate path decomposition tree"="656";"02 preprocessing:07:compile methods with identical tasks"="21";"01 parsing:07:strip domain of hybridity"="1";"40 sat:41:SAT solver for K=0008"="50";"02 preprocessing:08:removing unnecessary predicates"="468";"01 parsing:03:closed world assumption"="143";"02 preprocessing:11:lifted reachabiltiy analysis"="58";"01 parsing:02:sort expansion"="217";"40 sat:12:normalise path decomposition tree"="256";"40 sat:41:SAT solver for K=0012"="58330";"40 sat:40:SAT solver"="62780";"01 parsing:00:total"="1084";"40 sat:10:generate formula"="5273";"40 sat:41:SAT solver for K=0005"="10";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0009"="60";"02 preprocessing:01:compile negative preconditions"="42";"40 sat:41:SAT solver for K=0013"="1350";"00 total:00:total"="75097";"40 sat:41:SAT solver for K=0011"="2810";"40 sat:13:sog optimisation"="211";"02 preprocessing:12:grounded planning graph analysis"="830";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="824";"40 sat:41:SAT solver for K=0006"="20";"02 preprocessing:04:split parameter"="53";"01 parsing:05:shop methods"="19";"10 search preparation:02:compute state invariants"="310";"01 parsing:06:eliminate identical variables"="52";"40 sat:15:translate path decomposition tree to clauses"="2053";"02 preprocessing:05:expand choiceless abstract tasks"="0";"40 sat:17:generate state invariant formula"="231";"40 sat:41:SAT solver for K=0010"="130";"02 preprocessing:00:total"="2581";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="268";"40 sat:41:SAT solver for K=0007"="20"
#!verify __method_precondition_m0_do_problem_0_precondition[f0];__method_precondition_m3_do_check_floor_3_precondition[f0,p8];board[f0,p8];__method_precondition_m1_do_check_floor_1_precondition[f0];nop[];__method_precondition_m5_do_take_all_5_precondition[f0,f23,p2];up[f0,f23];__method_precondition_m3_do_check_floor_3_precondition[f23,p7];board[f23,p7];__method_precondition_m3_do_check_floor_3_precondition[f23,p2];board[f23,p2];__method_precondition_m1_do_check_floor_1_precondition[f23];nop[];__method_precondition_m6_do_take_all_6_precondition[f23,f22,p9];down[f23,f22];__method_precondition_m3_do_check_floor_3_precondition[f22,p9];board[f22,p9];__method_precondition_m1_do_check_floor_1_precondition[f22];nop[];__method_precondition_m6_do_take_all_6_precondition[f22,f11,p10];down[f22,f11];__method_precondition_m1_do_check_floor_1_precondition[f11];nop[];__method_precondition_m5_do_take_all_5_precondition[f11,f27,p11];up[f11,f27];__method_precondition_m3_do_check_floor_3_precondition[f27,p11];board[f27,p11];__method_precondition_m3_do_check_floor_3_precondition[f27,p1];board[f27,p1];__method_precondition_m1_do_check_floor_1_precondition[f27];nop[];__method_precondition_m6_do_take_all_6_precondition[f27,f9,p4];down[f27,f9];__method_precondition_m3_do_check_floor_3_precondition[f9,p4];board[f9,p4];__method_precondition_m2_do_check_floor_2_precondition[f9,p11];depart[f9,p11];__method_precondition_m1_do_check_floor_1_precondition[f9];nop[];__method_precondition_m6_do_take_all_6_precondition[f9,f2,p13];down[f9,f2];__method_precondition_m3_do_check_floor_3_precondition[f2,p13];board[f2,p13];__method_precondition_m3_do_check_floor_3_precondition[f2,p5];board[f2,p5];__method_precondition_m3_do_check_floor_3_precondition[f2,p12];board[f2,p12];__method_precondition_m1_do_check_floor_1_precondition[f2];nop[];__method_precondition_m5_do_take_all_5_precondition[f2,f7,p14];up[f2,f7];__method_precondition_m3_do_check_floor_3_precondition[f7,p14];board[f7,p14];__method_precondition_m2_do_check_floor_2_precondition[f7,p5];depart[f7,p5];__method_precondition_m1_do_check_floor_1_precondition[f7];nop[];__method_precondition_m5_do_take_all_5_precondition[f7,f20,p6];up[f7,f20];__method_precondition_m3_do_check_floor_3_precondition[f20,p6];board[f20,p6];__method_precondition_m2_do_check_floor_2_precondition[f20,p12];depart[f20,p12];__method_precondition_m1_do_check_floor_1_precondition[f20];nop[];__method_precondition_m6_do_take_all_6_precondition[f20,f11,p10];down[f20,f11];__method_precondition_m3_do_check_floor_3_precondition[f11,p10];board[f11,p10];__method_precondition_m1_do_check_floor_1_precondition[f11];nop[];__method_precondition_m4_do_take_all_4_precondition[f11];nop[];__method_precondition_m7_do_start_throw_all_7_precondition[f11];__method_precondition_m9_do_throw_all_9_precondition[f11,f13,p13];up[f11,f13];__method_precondition_m2_do_check_floor_2_precondition[f13,p13];depart[f13,p13];__method_precondition_m3_do_check_floor_3_precondition[f13,p0];board[f13,p0];__method_precondition_m1_do_check_floor_1_precondition[f13];nop[];__method_precondition_m9_do_throw_all_9_precondition[f13,f25,p1];up[f13,f25];__method_precondition_m2_do_check_floor_2_precondition[f25,p1];depart[f25,p1];__method_precondition_m2_do_check_floor_2_precondition[f25,p2];depart[f25,p2];__method_precondition_m2_do_check_floor_2_precondition[f25,p14];depart[f25,p14];__method_precondition_m1_do_check_floor_1_precondition[f25];nop[];__method_precondition_m10_do_throw_all_10_precondition[f25,f16,p0];down[f25,f16];__method_precondition_m2_do_check_floor_2_precondition[f16,p9];depart[f16,p9];__method_precondition_m2_do_check_floor_2_precondition[f16,p0];depart[f16,p0];__method_precondition_m2_do_check_floor_2_precondition[f16,p7];depart[f16,p7];__method_precondition_m3_do_check_floor_3_precondition[f16,p3];board[f16,p3];__method_precondition_m1_do_check_floor_1_precondition[f16];nop[];__method_precondition_m10_do_throw_all_10_precondition[f16,f12,p3];down[f16,f12];__method_precondition_m2_do_check_floor_2_precondition[f12,p3];depart[f12,p3];__method_precondition_m1_do_check_floor_1_precondition[f12];nop[];__method_precondition_m10_do_throw_all_10_precondition[f12,f8,p10];down[f12,f8];__method_precondition_m2_do_check_floor_2_precondition[f8,p10];depart[f8,p10];__method_precondition_m1_do_check_floor_1_precondition[f8];nop[];__method_precondition_m9_do_throw_all_9_precondition[f8,f19,p6];up[f8,f19];__method_precondition_m2_do_check_floor_2_precondition[f19,p6];depart[f19,p6];__method_precondition_m1_do_check_floor_1_precondition[f19];nop[];__method_precondition_m10_do_throw_all_10_precondition[f19,f6,p8];down[f19,f6];__method_precondition_m2_do_check_floor_2_precondition[f6,p8];depart[f6,p8];__method_precondition_m1_do_check_floor_1_precondition[f6];nop[];__method_precondition_m10_do_throw_all_10_precondition[f6,f1,p4];down[f6,f1];__method_precondition_m2_do_check_floor_2_precondition[f1,p4];depart[f1,p4];__method_precondition_m1_do_check_floor_1_precondition[f1];nop[];__method_precondition_m8_do_throw_all_8_precondition[f1];nop[]
==>
0 __method_precondition_m0_do_problem_0_precondition f0 
1 __method_precondition_m3_do_check_floor_3_precondition f0 p8 
2 board f0 p8 
3 __method_precondition_m1_do_check_floor_1_precondition f0 
4 nop  
5 __method_precondition_m5_do_take_all_5_precondition f0 f23 p2 
6 up f0 f23 
7 __method_precondition_m3_do_check_floor_3_precondition f23 p7 
8 board f23 p7 
9 __method_precondition_m3_do_check_floor_3_precondition f23 p2 
10 board f23 p2 
11 __method_precondition_m1_do_check_floor_1_precondition f23 
12 nop  
13 __method_precondition_m6_do_take_all_6_precondition f23 f22 p9 
14 down f23 f22 
15 __method_precondition_m3_do_check_floor_3_precondition f22 p9 
16 board f22 p9 
17 __method_precondition_m1_do_check_floor_1_precondition f22 
18 nop  
19 __method_precondition_m6_do_take_all_6_precondition f22 f11 p10 
20 down f22 f11 
21 __method_precondition_m1_do_check_floor_1_precondition f11 
22 nop  
23 __method_precondition_m5_do_take_all_5_precondition f11 f27 p11 
24 up f11 f27 
25 __method_precondition_m3_do_check_floor_3_precondition f27 p11 
26 board f27 p11 
27 __method_precondition_m3_do_check_floor_3_precondition f27 p1 
28 board f27 p1 
29 __method_precondition_m1_do_check_floor_1_precondition f27 
30 nop  
31 __method_precondition_m6_do_take_all_6_precondition f27 f9 p4 
32 down f27 f9 
33 __method_precondition_m3_do_check_floor_3_precondition f9 p4 
34 board f9 p4 
35 __method_precondition_m2_do_check_floor_2_precondition f9 p11 
36 depart f9 p11 
37 __method_precondition_m1_do_check_floor_1_precondition f9 
38 nop  
39 __method_precondition_m6_do_take_all_6_precondition f9 f2 p13 
40 down f9 f2 
41 __method_precondition_m3_do_check_floor_3_precondition f2 p13 
42 board f2 p13 
43 __method_precondition_m3_do_check_floor_3_precondition f2 p5 
44 board f2 p5 
45 __method_precondition_m3_do_check_floor_3_precondition f2 p12 
46 board f2 p12 
47 __method_precondition_m1_do_check_floor_1_precondition f2 
48 nop  
49 __method_precondition_m5_do_take_all_5_precondition f2 f7 p14 
50 up f2 f7 
51 __method_precondition_m3_do_check_floor_3_precondition f7 p14 
52 board f7 p14 
53 __method_precondition_m2_do_check_floor_2_precondition f7 p5 
54 depart f7 p5 
55 __method_precondition_m1_do_check_floor_1_precondition f7 
56 nop  
57 __method_precondition_m5_do_take_all_5_precondition f7 f20 p6 
58 up f7 f20 
59 __method_precondition_m3_do_check_floor_3_precondition f20 p6 
60 board f20 p6 
61 __method_precondition_m2_do_check_floor_2_precondition f20 p12 
62 depart f20 p12 
63 __method_precondition_m1_do_check_floor_1_precondition f20 
64 nop  
65 __method_precondition_m6_do_take_all_6_precondition f20 f11 p10 
66 down f20 f11 
67 __method_precondition_m3_do_check_floor_3_precondition f11 p10 
68 board f11 p10 
69 __method_precondition_m1_do_check_floor_1_precondition f11 
70 nop  
71 __method_precondition_m4_do_take_all_4_precondition f11 
72 nop  
73 __method_precondition_m7_do_start_throw_all_7_precondition f11 
74 __method_precondition_m9_do_throw_all_9_precondition f11 f13 p13 
75 up f11 f13 
76 __method_precondition_m2_do_check_floor_2_precondition f13 p13 
77 depart f13 p13 
78 __method_precondition_m3_do_check_floor_3_precondition f13 p0 
79 board f13 p0 
80 __method_precondition_m1_do_check_floor_1_precondition f13 
81 nop  
82 __method_precondition_m9_do_throw_all_9_precondition f13 f25 p1 
83 up f13 f25 
84 __method_precondition_m2_do_check_floor_2_precondition f25 p1 
85 depart f25 p1 
86 __method_precondition_m2_do_check_floor_2_precondition f25 p2 
87 depart f25 p2 
88 __method_precondition_m2_do_check_floor_2_precondition f25 p14 
89 depart f25 p14 
90 __method_precondition_m1_do_check_floor_1_precondition f25 
91 nop  
92 __method_precondition_m10_do_throw_all_10_precondition f25 f16 p0 
93 down f25 f16 
94 __method_precondition_m2_do_check_floor_2_precondition f16 p9 
95 depart f16 p9 
96 __method_precondition_m2_do_check_floor_2_precondition f16 p0 
97 depart f16 p0 
98 __method_precondition_m2_do_check_floor_2_precondition f16 p7 
99 depart f16 p7 
100 __method_precondition_m3_do_check_floor_3_precondition f16 p3 
101 board f16 p3 
102 __method_precondition_m1_do_check_floor_1_precondition f16 
103 nop  
104 __method_precondition_m10_do_throw_all_10_precondition f16 f12 p3 
105 down f16 f12 
106 __method_precondition_m2_do_check_floor_2_precondition f12 p3 
107 depart f12 p3 
108 __method_precondition_m1_do_check_floor_1_precondition f12 
109 nop  
110 __method_precondition_m10_do_throw_all_10_precondition f12 f8 p10 
111 down f12 f8 
112 __method_precondition_m2_do_check_floor_2_precondition f8 p10 
113 depart f8 p10 
114 __method_precondition_m1_do_check_floor_1_precondition f8 
115 nop  
116 __method_precondition_m9_do_throw_all_9_precondition f8 f19 p6 
117 up f8 f19 
118 __method_precondition_m2_do_check_floor_2_precondition f19 p6 
119 depart f19 p6 
120 __method_precondition_m1_do_check_floor_1_precondition f19 
121 nop  
122 __method_precondition_m10_do_throw_all_10_precondition f19 f6 p8 
123 down f19 f6 
124 __method_precondition_m2_do_check_floor_2_precondition f6 p8 
125 depart f6 p8 
126 __method_precondition_m1_do_check_floor_1_precondition f6 
127 nop  
128 __method_precondition_m10_do_throw_all_10_precondition f6 f1 p4 
129 down f6 f1 
130 __method_precondition_m2_do_check_floor_2_precondition f1 p4 
131 depart f1 p4 
132 __method_precondition_m1_do_check_floor_1_precondition f1 
133 nop  
134 __method_precondition_m8_do_throw_all_8_precondition f1 
135 nop  
root 150
136 do_take_all f11  -> m5_do_take_all 23 24 199 137
137 do_take_all f27  -> m6_do_take_all 31 32 147 149
138 do_check_floor f25  -> m1_do_check_floor 90 91
139 do_check_floor f12  -> m1_do_check_floor 108 109
140 do_check_floor f23  -> m3_do_check_floor 7 8 196
141 do_check_floor f16  -> m1_do_check_floor 102 103
142 do_check_floor f19  -> m1_do_check_floor 120 121
143 do_check_floor f20  -> m1_do_check_floor 63 64
144 do_check_floor f13  -> m3_do_check_floor 78 79 171
145 do_take_all f20  -> m6_do_take_all 65 66 166 203
146 do_throw_all f13  -> m9_do_throw_all 82 83 193 189
147 do_check_floor f9  -> m3_do_check_floor 33 34 155
148 do_check_floor f16  -> m2_do_check_floor 96 97 180
149 do_take_all f9  -> m6_do_take_all 39 40 160 169
150 __MakeMethodSubTasksUniqueCompilation__top_3  -> __top_3 173
151 do_check_floor f8  -> m2_do_check_floor 112 113 197
152 do_throw_all f11  -> m9_do_throw_all 74 75 162 146
153 do_check_floor f7  -> m2_do_check_floor 53 54 186
154 do_check_floor f1  -> m2_do_check_floor 130 131 191
155 do_check_floor f9  -> m2_do_check_floor 35 36 170
156 do_throw_all f8  -> m9_do_throw_all 116 117 176 172
157 do_check_floor f20  -> m3_do_check_floor 59 60 188
158 do_check_floor f25  -> m2_do_check_floor 88 89 138
159 do_check_floor f0  -> m3_do_check_floor 1 2 183
160 do_check_floor f2  -> m3_do_check_floor 41 42 177
161 do_check_floor f11  -> m1_do_check_floor 69 70
162 do_check_floor f13  -> m2_do_check_floor 76 77 144
163 do_check_floor f23  -> m1_do_check_floor 11 12
164 do_take_all f23  -> m6_do_take_all 13 14 205 168
165 do_check_floor f6  -> m2_do_check_floor 124 125 190
166 do_check_floor f11  -> m3_do_check_floor 67 68 161
167 do_start_throw_all   -> m7_do_start_throw_all 73 152
168 do_take_all f22  -> m6_do_take_all 19 20 179 136
169 do_take_all f2  -> m5_do_take_all 49 50 202 187
170 do_check_floor f9  -> m1_do_check_floor 37 38
171 do_check_floor f13  -> m1_do_check_floor 80 81
172 do_throw_all f19  -> m10_do_throw_all 122 123 165 182
173 do_problem   -> m0_do_problem 0 159 194 167
174 do_throw_all f16  -> m10_do_throw_all 104 105 185 178
175 do_check_floor f2  -> m3_do_check_floor 45 46 184
176 do_check_floor f19  -> m2_do_check_floor 118 119 142
177 do_check_floor f2  -> m3_do_check_floor 43 44 175
178 do_throw_all f12  -> m10_do_throw_all 110 111 151 156
179 do_check_floor f11  -> m1_do_check_floor 21 22
180 do_check_floor f16  -> m2_do_check_floor 98 99 204
181 do_check_floor f27  -> m1_do_check_floor 29 30
182 do_throw_all f6  -> m10_do_throw_all 128 129 154 201
183 do_check_floor f0  -> m1_do_check_floor 3 4
184 do_check_floor f2  -> m1_do_check_floor 47 48
185 do_check_floor f12  -> m2_do_check_floor 106 107 139
186 do_check_floor f7  -> m1_do_check_floor 55 56
187 do_take_all f7  -> m5_do_take_all 57 58 157 145
188 do_check_floor f20  -> m2_do_check_floor 61 62 143
189 do_throw_all f25  -> m10_do_throw_all 92 93 198 174
190 do_check_floor f6  -> m1_do_check_floor 126 127
191 do_check_floor f1  -> m1_do_check_floor 132 133
192 do_check_floor f22  -> m1_do_check_floor 17 18
193 do_check_floor f25  -> m2_do_check_floor 84 85 195
194 do_take_all f0  -> m5_do_take_all 5 6 140 164
195 do_check_floor f25  -> m2_do_check_floor 86 87 158
196 do_check_floor f23  -> m3_do_check_floor 9 10 163
197 do_check_floor f8  -> m1_do_check_floor 114 115
198 do_check_floor f16  -> m2_do_check_floor 94 95 148
199 do_check_floor f27  -> m3_do_check_floor 25 26 200
200 do_check_floor f27  -> m3_do_check_floor 27 28 181
201 do_throw_all f1  -> m8_do_throw_all 134 135
202 do_check_floor f7  -> m3_do_check_floor 51 52 153
203 do_take_all f11  -> m4_do_take_all 71 72
204 do_check_floor f16  -> m3_do_check_floor 100 101 141
205 do_check_floor f22  -> m3_do_check_floor 15 16 192

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 76.257 MEMPEAK_KBS 495538.176
