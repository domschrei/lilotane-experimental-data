PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/childsnack/domain.hddl instances/childsnack/p14.hddl"


Planner Configuration
=====================
Domain: instances/childsnack/domain.hddl
Problem: instances/childsnack/p14.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p14.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 13
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 86
Compiling negative preconditions ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 86
Compiling split parameters ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 86
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 86
Grounded planning graph ... done in 1663ms.
	Number of Grounded Actions 50980
	Number of Grounded Literals 310
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 86
Two Way TDG ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 86
Grounding ... done.
	number of abstract tasks = 18
	number of tasks = 46122
	number of decomposition methods = 160704
	number of predicates = 346
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 18
	number of tasks = 46122
	number of decomposition methods = 160704
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 4027ms.
	Number of Grounded Actions 46104
	Number of Grounded Literals 238
	number of abstract tasks = 18
	number of tasks = 46122
	number of decomposition methods = 160704
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 18
	number of tasks = 46122
	number of decomposition methods = 160704
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 18
	number of tasks = 46122
	number of decomposition methods = 160704
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 3318ms.
	Number of Grounded Actions 46104
	Number of Grounded Literals 238
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Tasks 46104 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854660205ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854655941
done
initial PDT has 108 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 108 leafs
SHOP LEAFS 18
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 84609
Size 84609 at 0/46104
Size 84609 at 500/46104
Size 84609 at 1000/46104
Size 84609 at 1500/46104
Size 84609 at 2000/46104
Size 84609 at 2500/46104
Size 84609 at 3000/46104
Size 84609 at 3500/46104
Size 84609 at 4000/46104
Size 84609 at 4500/46104
Size 84609 at 5000/46104
Size 84609 at 5500/46104
Size 84609 at 6000/46104
Size 84609 at 6500/46104
Size 84609 at 7000/46104
Size 84609 at 7500/46104
Size 84609 at 8000/46104
Size 60716 at 8500/46104
Size 60716 at 9000/46104
Size 53333 at 9500/46104
Size 53331 at 10000/46104
Size 53331 at 10500/46104
Size 53331 at 11000/46104
Size 53331 at 11500/46104
Size 53331 at 12000/46104
Size 53331 at 12500/46104
Size 53331 at 13000/46104
Size 53331 at 13500/46104
Size 53331 at 14000/46104
Size 53331 at 14500/46104
Size 53331 at 15000/46104
Size 53331 at 15500/46104
Size 53331 at 16000/46104
Size 53331 at 16500/46104
Size 53331 at 17000/46104
Size 53331 at 17500/46104
Size 53331 at 18000/46104
Size 53331 at 18500/46104
Size 53331 at 19000/46104
Size 53331 at 19500/46104
Size 53331 at 20000/46104
Size 53331 at 20500/46104
Size 53331 at 21000/46104
Size 53331 at 21500/46104
Size 53331 at 22000/46104
Size 53331 at 22500/46104
Size 53331 at 23000/46104
Size 53331 at 23500/46104
Size 53331 at 24000/46104
Size 53331 at 24500/46104
Size 53331 at 25000/46104
Size 53331 at 25500/46104
Size 53331 at 26000/46104
Size 53331 at 26500/46104
Size 53331 at 27000/46104
Size 53331 at 27500/46104
Size 53331 at 28000/46104
Size 53331 at 28500/46104
Size 53331 at 29000/46104
Size 53331 at 29500/46104
Size 53331 at 30000/46104
Size 53331 at 30500/46104
Size 53331 at 31000/46104
Size 53331 at 31500/46104
Size 53331 at 32000/46104
Size 53331 at 32500/46104
Size 53331 at 33000/46104
Size 53331 at 33500/46104
Size 53331 at 34000/46104
Size 53331 at 34500/46104
Size 53331 at 35000/46104
Size 53331 at 35500/46104
Size 53331 at 36000/46104
Size 53331 at 36500/46104
Size 53331 at 37000/46104
Size 53331 at 37500/46104
Size 53331 at 38000/46104
Size 53331 at 38500/46104
Size 53331 at 39000/46104
Size 53331 at 39500/46104
Size 53331 at 40000/46104
Size 53331 at 40500/46104
Size 53331 at 41000/46104
Size 53331 at 41500/46104
Size 53331 at 42000/46104
Size 53331 at 42500/46104
Size 53331 at 43000/46104
Size 53331 at 43500/46104
Size 53331 at 44000/46104
Size 52918 at 44500/46104
Size 52293 at 45000/46104
Size 51726 at 45500/46104
Size 46753 at 46000/46104
Size 7087
Size 7087 at 0/46104
Size 7087 at 500/46104
Size 7087 at 1000/46104
Size 7087 at 1500/46104
Size 7087 at 2000/46104
Size 7087 at 2500/46104
Size 7087 at 3000/46104
Size 7087 at 3500/46104
Size 7087 at 4000/46104
Size 7087 at 4500/46104
Size 7087 at 5000/46104
Size 7087 at 5500/46104
Size 7087 at 6000/46104
Size 7087 at 6500/46104
Size 7087 at 7000/46104
Size 7087 at 7500/46104
Size 7087 at 8000/46104
Size 7087 at 8500/46104
Size 7087 at 9000/46104
Size 7087 at 9500/46104
Size 7087 at 10000/46104
Size 7087 at 10500/46104
Size 7087 at 11000/46104
Size 7087 at 11500/46104
Size 7087 at 12000/46104
Size 7087 at 12500/46104
Size 7087 at 13000/46104
Size 7087 at 13500/46104
Size 7087 at 14000/46104
Size 7087 at 14500/46104
Size 7087 at 15000/46104
Size 7087 at 15500/46104
Size 7087 at 16000/46104
Size 7087 at 16500/46104
Size 7087 at 17000/46104
Size 7087 at 17500/46104
Size 7087 at 18000/46104
Size 7087 at 18500/46104
Size 7087 at 19000/46104
Size 7087 at 19500/46104
Size 7087 at 20000/46104
Size 7087 at 20500/46104
Size 7087 at 21000/46104
Size 7087 at 21500/46104
Size 7087 at 22000/46104
Size 7087 at 22500/46104
Size 7087 at 23000/46104
Size 7087 at 23500/46104
Size 7087 at 24000/46104
Size 7087 at 24500/46104
Size 7087 at 25000/46104
Size 7087 at 25500/46104
Size 7087 at 26000/46104
Size 7087 at 26500/46104
Size 7087 at 27000/46104
Size 7087 at 27500/46104
Size 7087 at 28000/46104
Size 7087 at 28500/46104
Size 7087 at 29000/46104
Size 7087 at 29500/46104
Size 7087 at 30000/46104
Size 7087 at 30500/46104
Size 7087 at 31000/46104
Size 7087 at 31500/46104
Size 7087 at 32000/46104
Size 7087 at 32500/46104
Size 7087 at 33000/46104
Size 7087 at 33500/46104
Size 7087 at 34000/46104
Size 7087 at 34500/46104
Size 7087 at 35000/46104
Size 7087 at 35500/46104
Size 7087 at 36000/46104
Size 7087 at 36500/46104
Size 7087 at 37000/46104
Size 7087 at 37500/46104
Size 7087 at 38000/46104
Size 7087 at 38500/46104
Size 7087 at 39000/46104
Size 7087 at 39500/46104
Size 7087 at 40000/46104
Size 7087 at 40500/46104
Size 7087 at 41000/46104
Size 7087 at 41500/46104
Size 7087 at 42000/46104
Size 7087 at 42500/46104
Size 7087 at 43000/46104
Size 7087 at 43500/46104
Size 7087 at 44000/46104
Size 4707 at 44500/46104
Size 793 at 45000/46104
Size 792 at 45500/46104
Size 480 at 46000/46104
Size 408
Size 408 at 0/46104
Size 408 at 500/46104
Size 408 at 1000/46104
Size 408 at 1500/46104
Size 408 at 2000/46104
Size 408 at 2500/46104
Size 408 at 3000/46104
Size 408 at 3500/46104
Size 408 at 4000/46104
Size 408 at 4500/46104
Size 408 at 5000/46104
Size 408 at 5500/46104
Size 408 at 6000/46104
Size 408 at 6500/46104
Size 408 at 7000/46104
Size 408 at 7500/46104
Size 408 at 8000/46104
Size 408 at 8500/46104
Size 408 at 9000/46104
Size 408 at 9500/46104
Size 408 at 10000/46104
Size 408 at 10500/46104
Size 408 at 11000/46104
Size 408 at 11500/46104
Size 408 at 12000/46104
Size 408 at 12500/46104
Size 408 at 13000/46104
Size 408 at 13500/46104
Size 408 at 14000/46104
Size 408 at 14500/46104
Size 408 at 15000/46104
Size 408 at 15500/46104
Size 408 at 16000/46104
Size 408 at 16500/46104
Size 408 at 17000/46104
Size 408 at 17500/46104
Size 408 at 18000/46104
Size 408 at 18500/46104
Size 408 at 19000/46104
Size 408 at 19500/46104
Size 408 at 20000/46104
Size 408 at 20500/46104
Size 408 at 21000/46104
Size 408 at 21500/46104
Size 408 at 22000/46104
Size 408 at 22500/46104
Size 408 at 23000/46104
Size 408 at 23500/46104
Size 408 at 24000/46104
Size 408 at 24500/46104
Size 408 at 25000/46104
Size 408 at 25500/46104
Size 408 at 26000/46104
Size 408 at 26500/46104
Size 408 at 27000/46104
Size 408 at 27500/46104
Size 408 at 28000/46104
Size 408 at 28500/46104
Size 408 at 29000/46104
Size 408 at 29500/46104
Size 408 at 30000/46104
Size 408 at 30500/46104
Size 408 at 31000/46104
Size 408 at 31500/46104
Size 408 at 32000/46104
Size 408 at 32500/46104
Size 408 at 33000/46104
Size 408 at 33500/46104
Size 408 at 34000/46104
Size 408 at 34500/46104
Size 408 at 35000/46104
Size 408 at 35500/46104
Size 408 at 36000/46104
Size 408 at 36500/46104
Size 408 at 37000/46104
Size 408 at 37500/46104
Size 408 at 38000/46104
Size 408 at 38500/46104
Size 408 at 39000/46104
Size 408 at 39500/46104
Size 408 at 40000/46104
Size 408 at 40500/46104
Size 408 at 41000/46104
Size 408 at 41500/46104
Size 408 at 42000/46104
Size 408 at 42500/46104
Size 408 at 43000/46104
Size 408 at 43500/46104
Size 408 at 44000/46104
Size 408 at 44500/46104
Size 408 at 45000/46104
Size 408 at 45500/46104
Size 408 at 46000/46104
Size 408
Invariant time: 5.51
Number of invariants: 408
Invariant Clauses 44472
NUMBER OF CLAUSES 4999532
NUMBER OF STATE CLAUSES 440704
NUMBER OF DECOMPOSITION CLAUSES 4558828
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 8.81% 91.19% 0.0% 
NUMBER OF PATHS 108
Starting cryptominisat
Setting starttime of solver to 1603873234760
Command exited with non-zero status 10
4.47 0.07

Time command gave the following runtime for the solver: 4540
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_12,22339 22339 m0_serve
12 55 pathaction!1_12,9418
Consider method^0_,160704 160704 __top_1
 22 pathaction!0_,46122
Consider method^1_9,87340 87340 m1_serve
9 125 pathaction!1_9,9417
Consider method^1_17,3698 3698 m0_serve
17 20 pathaction!1_17,9408
Consider method^1_16,2998 2998 m1_serve
16 69 pathaction!1_16,9424
Consider method^1_13,143766 143766 m0_serve
13 24 pathaction!1_13,9415
Consider method^1_15,131413 131413 m1_serve
15 30 pathaction!1_15,9420
Consider method^1_10,82314 82314 m1_serve
10 47 pathaction!1_10,9425
Consider method^1_2,25880 25880 m1_serve
2 23 pathaction!1_2,9419
Consider method^1_1,19168 19168 m1_serve
1 34 pathaction!1_1,9416
Consider method^1_7,102177 102177 m0_serve
7 43 pathaction!1_7,9409
Consider method^1_8,120595 120595 m0_serve
8 112 pathaction!1_8,9421
Consider method^1_4,14793 14793 m1_serve
4 78 pathaction!1_4,9414
Consider method^1_6,52338 52338 m1_serve
6 25 pathaction!1_6,9413
Consider method^1_3,37519 37519 m1_serve
3 31 pathaction!1_3,9412
Consider method^1_0,39402 39402 m0_serve
0 73 pathaction!1_0,9411
Consider method^1_5,121254 121254 m1_serve
5 94 pathaction!1_5,9422
Consider method^1_11,48204 48204 m0_serve
11 60 pathaction!1_11,9423
Consider method^1_14,45231 45231 m1_serve
14 48 pathaction!1_14,9410


CHECKING primitive solution of length 108 ...
true 3 __method_precondition_m0_serve_0_precondition[child1,bread6,content1,sandw1,table3;]
true 95 make_sandwich_no_gluten[sandw1,bread6,content1;]
true 62 put_on_tray[sandw1,tray3;kitchen]
true 85 move_tray[tray3,kitchen,table3;]
true 8 serve_sandwich_no_gluten[sandw1,child1,tray3,table3;]
true 54 move_tray[tray3,table3,kitchen;]
true 115 __method_precondition_m1_serve_1_precondition[child2,bread16,content15,table1,sandw5;]
true 108 make_sandwich[sandw5,bread16,content15;]
true 10 put_on_tray[sandw5,tray2;kitchen]
true 7 move_tray[tray2,kitchen,table1;]
true 58 serve_sandwich[sandw5,child2,tray2,table1;]
true 79 move_tray[tray2,table1,kitchen;]
true 17 __method_precondition_m1_serve_1_precondition[child3,bread14,content14,table1,sandw14;]
true 12 make_sandwich[sandw14,bread14,content14;]
true 29 put_on_tray[sandw14,tray4;kitchen]
true 99 move_tray[tray4,kitchen,table1;]
true 72 serve_sandwich[sandw14,child3,tray4,table1;]
true 91 move_tray[tray4,table1,kitchen;]
true 46 __method_precondition_m1_serve_1_precondition[child4,bread18,content16,table3,sandw17;]
true 70 make_sandwich[sandw17,bread18,content16;]
true 52 put_on_tray[sandw17,tray3;kitchen]
true 19 move_tray[tray3,kitchen,table3;]
true 33 serve_sandwich[sandw17,child4,tray3,table3;]
true 119 move_tray[tray3,table3,kitchen;]
true 59 __method_precondition_m1_serve_1_precondition[child5,bread5,content12,table1,sandw23;]
true 88 make_sandwich[sandw23,bread5,content12;]
true 106 put_on_tray[sandw23,tray4;kitchen]
true 92 move_tray[tray4,kitchen,table1;]
true 42 serve_sandwich[sandw23,child5,tray4,table1;]
true 100 move_tray[tray4,table1,kitchen;]
true 21 __method_precondition_m1_serve_1_precondition[child6,bread12,content18,table1,sandw4;]
true 56 make_sandwich[sandw4,bread12,content18;]
true 61 put_on_tray[sandw4,tray1;kitchen]
true 63 move_tray[tray1,kitchen,table1;]
true 102 serve_sandwich[sandw4,child6,tray1,table1;]
true 2 move_tray[tray1,table1,kitchen;]
true 97 __method_precondition_m1_serve_1_precondition[child7,bread3,content10,table1,sandw10;]
true 76 make_sandwich[sandw10,bread3,content10;]
true 126 put_on_tray[sandw10,tray2;kitchen]
true 38 move_tray[tray2,kitchen,table1;]
true 110 serve_sandwich[sandw10,child7,tray2,table1;]
true 1 move_tray[tray2,table1,kitchen;]
true 113 __method_precondition_m0_serve_0_precondition[child8,bread7,content4,sandw19,table2;]
true 111 make_sandwich_no_gluten[sandw19,bread7,content4;]
true 28 put_on_tray[sandw19,tray4;kitchen]
true 51 move_tray[tray4,kitchen,table2;]
true 66 serve_sandwich_no_gluten[sandw19,child8,tray4,table2;]
true 98 move_tray[tray4,table2,kitchen;]
true 80 __method_precondition_m0_serve_0_precondition[child9,bread4,content5,sandw11,table3;]
true 44 make_sandwich_no_gluten[sandw11,bread4,content5;]
true 74 put_on_tray[sandw11,tray4;kitchen]
true 16 move_tray[tray4,kitchen,table3;]
true 68 serve_sandwich_no_gluten[sandw11,child9,tray4,table3;]
true 18 move_tray[tray4,table3,kitchen;]
true 109 __method_precondition_m1_serve_1_precondition[child10,bread9,content6,table1,sandw22;]
true 104 make_sandwich[sandw22,bread9,content6;]
true 114 put_on_tray[sandw22,tray2;kitchen]
true 14 move_tray[tray2,kitchen,table1;]
true 75 serve_sandwich[sandw22,child10,tray2,table1;]
true 5 move_tray[tray2,table1,kitchen;]
true 50 __method_precondition_m1_serve_1_precondition[child11,bread13,content8,table2,sandw13;]
true 9 make_sandwich[sandw13,bread13,content8;]
true 96 put_on_tray[sandw13,tray1;kitchen]
true 4 move_tray[tray1,kitchen,table2;]
true 77 serve_sandwich[sandw13,child11,tray1,table2;]
true 123 move_tray[tray1,table2,kitchen;]
true 117 __method_precondition_m0_serve_0_precondition[child12,bread2,content9,sandw7,table2;]
true 101 make_sandwich_no_gluten[sandw7,bread2,content9;]
true 65 put_on_tray[sandw7,tray2;kitchen]
true 13 move_tray[tray2,kitchen,table2;]
true 89 serve_sandwich_no_gluten[sandw7,child12,tray2,table2;]
true 122 move_tray[tray2,table2,kitchen;]
true 41 __method_precondition_m0_serve_0_precondition[child13,bread8,content7,sandw3,table3;]
true 37 make_sandwich_no_gluten[sandw3,bread8,content7;]
true 105 put_on_tray[sandw3,tray2;kitchen]
true 6 move_tray[tray2,kitchen,table3;]
true 120 serve_sandwich_no_gluten[sandw3,child13,tray2,table3;]
true 53 move_tray[tray2,table3,kitchen;]
true 27 __method_precondition_m0_serve_0_precondition[child14,bread17,content3,sandw16,table3;]
true 11 make_sandwich_no_gluten[sandw16,bread17,content3;]
true 103 put_on_tray[sandw16,tray3;kitchen]
true 81 move_tray[tray3,kitchen,table3;]
true 83 serve_sandwich_no_gluten[sandw16,child14,tray3,table3;]
true 35 move_tray[tray3,table3,kitchen;]
true 116 __method_precondition_m1_serve_1_precondition[child15,bread10,content13,table1,sandw9;]
true 36 make_sandwich[sandw9,bread10,content13;]
true 87 put_on_tray[sandw9,tray3;kitchen]
true 40 move_tray[tray3,kitchen,table1;]
true 124 serve_sandwich[sandw9,child15,tray3,table1;]
true 121 move_tray[tray3,table1,kitchen;]
true 64 __method_precondition_m1_serve_1_precondition[child16,bread15,content2,table2,sandw2;]
true 39 make_sandwich[sandw2,bread15,content2;]
true 93 put_on_tray[sandw2,tray4;kitchen]
true 71 move_tray[tray4,kitchen,table2;]
true 15 serve_sandwich[sandw2,child16,tray4,table2;]
true 82 move_tray[tray4,table2,kitchen;]
true 45 __method_precondition_m1_serve_1_precondition[child17,bread1,content11,table2,sandw15;]
true 107 make_sandwich[sandw15,bread1,content11;]
true 49 put_on_tray[sandw15,tray1;kitchen]
true 118 move_tray[tray1,kitchen,table2;]
true 57 serve_sandwich[sandw15,child17,tray1,table2;]
true 67 move_tray[tray1,table2,kitchen;]
true 86 __method_precondition_m0_serve_0_precondition[child18,bread11,content17,sandw6,table3;]
true 0 make_sandwich_no_gluten[sandw6,bread11,content17;]
true 90 put_on_tray[sandw6,tray4;kitchen]
true 32 move_tray[tray4,kitchen,table3;]
true 84 serve_sandwich_no_gluten[sandw6,child18,tray4,table3;]
true 26 move_tray[tray4,table3,kitchen;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 6748465344
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 238
number of actions                    = 46123
number of abstract actions           = 19
number of primitive actions          = 46104
number of methods                    = 160705
number of primitive shop actions     = 40176
number of primitive non-shop actions = 5928
size of largest method               = 18
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 291661
number of clauses               = 4999532
average size of clauses         = 2.067319301086582
number of assert                = 83
number of horn                  = 4993948
K offset                        = 0
K chosen value                  = 2
state formula                   = 440704
method children clauses         = 0
number of paths                 = 108
maximum plan length             = 108
number of decomposition clauses = 4558828
number of ordering clauses      = 0
number of state clauses         = 440704
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 164073
============ parsing ============
total                         = 1056
file parser                   = 567
sort expansion                = 213
closed world assumption       = 167
inherit preconditions         = 0
shop methods                  = 16
eliminate identical variables = 47
strip domain of hybridity     = 2
flatten formula               = 44
============ preprocessing ============
total                                      = 100270
compile negative preconditions             = 60
compile unit methods                       = 0
split parameter                            = 48
expand choiceless abstract tasks           = 177
compile methods with identical tasks       = 800
removing unnecessary predicates            = 30023
lifted reachabiltiy analysis               = 64
grounded planning graph analysis           = 16157
grounded task decomposition graph analysis = 42496
grounding                                  = 9920
create artificial top task                 = 323
============ search preparation ============
compute state invariants = 5639
============ sat ============
total                                        = 38279
generate formula                             = 32274
generate path decomposition tree             = 10529
normalise path decomposition tree            = 725
sog optimisation                             = 2137
translate path decomposition tree to clauses = 4453
generate state formula                       = 31920
generate state invariant formula             = 53
transform to DIMACS                          = 843
SAT solver                                   = 4540
SAT solver for K=0002                        = 4540

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="46104";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="19";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="6748465344";"40 sat:20:state formula"="440704";"40 sat:01:number of variables"="291661";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="108";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="160705";"30 problem:07:number of primitive shop actions"="40176";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="46123";"30 problem:08:number of primitive non-shop actions"="5928";"30 problem:02:number of predicates"="238";"40 sat:03:number of horn"="4993948";"40 sat:15:K chosen value"="2";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="18";"40 sat:03:average size of clauses"="2.067319301086582";"40 sat:02:number of clauses"="4999532";"40 sat:50:number of state clauses"="440704";"40 sat:03:number of assert"="83";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="108";"40 sat:50:number of decomposition clauses"="4558828";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="567";"01 parsing:08:flatten formula"="44";"40 sat:00:total"="38279";"40 sat:16:generate state formula"="31920";"40 sat:20:transform to DIMACS"="843";"40 sat:11:generate path decomposition tree"="10529";"02 preprocessing:07:compile methods with identical tasks"="800";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="30023";"01 parsing:03:closed world assumption"="167";"02 preprocessing:11:lifted reachabiltiy analysis"="64";"01 parsing:02:sort expansion"="213";"40 sat:12:normalise path decomposition tree"="725";"40 sat:40:SAT solver"="4540";"01 parsing:00:total"="1056";"40 sat:10:generate formula"="32274";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="4540";"02 preprocessing:01:compile negative preconditions"="60";"00 total:00:total"="164073";"40 sat:13:sog optimisation"="2137";"02 preprocessing:12:grounded planning graph analysis"="16157";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="42496";"02 preprocessing:04:split parameter"="48";"01 parsing:05:shop methods"="16";"10 search preparation:02:compute state invariants"="5639";"01 parsing:06:eliminate identical variables"="47";"40 sat:15:translate path decomposition tree to clauses"="4453";"02 preprocessing:05:expand choiceless abstract tasks"="177";"40 sat:17:generate state invariant formula"="53";"02 preprocessing:00:total"="100270";"02 preprocessing:99:create artificial top task"="323";"02 preprocessing:84:grounding"="9920"
#!verify __method_precondition_m0_serve_0_precondition[child1,bread6,content1,sandw1,table3];make_sandwich_no_gluten[sandw1,bread6,content1];put_on_tray[sandw1,tray3];move_tray[tray3,kitchen,table3];serve_sandwich_no_gluten[sandw1,child1,tray3,table3];move_tray[tray3,table3,kitchen];__method_precondition_m1_serve_1_precondition[child2,bread16,content15,table1,sandw5];make_sandwich[sandw5,bread16,content15];put_on_tray[sandw5,tray2];move_tray[tray2,kitchen,table1];serve_sandwich[sandw5,child2,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m1_serve_1_precondition[child3,bread14,content14,table1,sandw14];make_sandwich[sandw14,bread14,content14];put_on_tray[sandw14,tray4];move_tray[tray4,kitchen,table1];serve_sandwich[sandw14,child3,tray4,table1];move_tray[tray4,table1,kitchen];__method_precondition_m1_serve_1_precondition[child4,bread18,content16,table3,sandw17];make_sandwich[sandw17,bread18,content16];put_on_tray[sandw17,tray3];move_tray[tray3,kitchen,table3];serve_sandwich[sandw17,child4,tray3,table3];move_tray[tray3,table3,kitchen];__method_precondition_m1_serve_1_precondition[child5,bread5,content12,table1,sandw23];make_sandwich[sandw23,bread5,content12];put_on_tray[sandw23,tray4];move_tray[tray4,kitchen,table1];serve_sandwich[sandw23,child5,tray4,table1];move_tray[tray4,table1,kitchen];__method_precondition_m1_serve_1_precondition[child6,bread12,content18,table1,sandw4];make_sandwich[sandw4,bread12,content18];put_on_tray[sandw4,tray1];move_tray[tray1,kitchen,table1];serve_sandwich[sandw4,child6,tray1,table1];move_tray[tray1,table1,kitchen];__method_precondition_m1_serve_1_precondition[child7,bread3,content10,table1,sandw10];make_sandwich[sandw10,bread3,content10];put_on_tray[sandw10,tray2];move_tray[tray2,kitchen,table1];serve_sandwich[sandw10,child7,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m0_serve_0_precondition[child8,bread7,content4,sandw19,table2];make_sandwich_no_gluten[sandw19,bread7,content4];put_on_tray[sandw19,tray4];move_tray[tray4,kitchen,table2];serve_sandwich_no_gluten[sandw19,child8,tray4,table2];move_tray[tray4,table2,kitchen];__method_precondition_m0_serve_0_precondition[child9,bread4,content5,sandw11,table3];make_sandwich_no_gluten[sandw11,bread4,content5];put_on_tray[sandw11,tray4];move_tray[tray4,kitchen,table3];serve_sandwich_no_gluten[sandw11,child9,tray4,table3];move_tray[tray4,table3,kitchen];__method_precondition_m1_serve_1_precondition[child10,bread9,content6,table1,sandw22];make_sandwich[sandw22,bread9,content6];put_on_tray[sandw22,tray2];move_tray[tray2,kitchen,table1];serve_sandwich[sandw22,child10,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m1_serve_1_precondition[child11,bread13,content8,table2,sandw13];make_sandwich[sandw13,bread13,content8];put_on_tray[sandw13,tray1];move_tray[tray1,kitchen,table2];serve_sandwich[sandw13,child11,tray1,table2];move_tray[tray1,table2,kitchen];__method_precondition_m0_serve_0_precondition[child12,bread2,content9,sandw7,table2];make_sandwich_no_gluten[sandw7,bread2,content9];put_on_tray[sandw7,tray2];move_tray[tray2,kitchen,table2];serve_sandwich_no_gluten[sandw7,child12,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m0_serve_0_precondition[child13,bread8,content7,sandw3,table3];make_sandwich_no_gluten[sandw3,bread8,content7];put_on_tray[sandw3,tray2];move_tray[tray2,kitchen,table3];serve_sandwich_no_gluten[sandw3,child13,tray2,table3];move_tray[tray2,table3,kitchen];__method_precondition_m0_serve_0_precondition[child14,bread17,content3,sandw16,table3];make_sandwich_no_gluten[sandw16,bread17,content3];put_on_tray[sandw16,tray3];move_tray[tray3,kitchen,table3];serve_sandwich_no_gluten[sandw16,child14,tray3,table3];move_tray[tray3,table3,kitchen];__method_precondition_m1_serve_1_precondition[child15,bread10,content13,table1,sandw9];make_sandwich[sandw9,bread10,content13];put_on_tray[sandw9,tray3];move_tray[tray3,kitchen,table1];serve_sandwich[sandw9,child15,tray3,table1];move_tray[tray3,table1,kitchen];__method_precondition_m1_serve_1_precondition[child16,bread15,content2,table2,sandw2];make_sandwich[sandw2,bread15,content2];put_on_tray[sandw2,tray4];move_tray[tray4,kitchen,table2];serve_sandwich[sandw2,child16,tray4,table2];move_tray[tray4,table2,kitchen];__method_precondition_m1_serve_1_precondition[child17,bread1,content11,table2,sandw15];make_sandwich[sandw15,bread1,content11];put_on_tray[sandw15,tray1];move_tray[tray1,kitchen,table2];serve_sandwich[sandw15,child17,tray1,table2];move_tray[tray1,table2,kitchen];__method_precondition_m0_serve_0_precondition[child18,bread11,content17,sandw6,table3];make_sandwich_no_gluten[sandw6,bread11,content17];put_on_tray[sandw6,tray4];move_tray[tray4,kitchen,table3];serve_sandwich_no_gluten[sandw6,child18,tray4,table3];move_tray[tray4,table3,kitchen]
==>
0 __method_precondition_m0_serve_0_precondition child1 bread6 content1 sandw1 table3 
1 make_sandwich_no_gluten sandw1 bread6 content1 
2 put_on_tray sandw1 tray3 
3 move_tray tray3 kitchen table3 
4 serve_sandwich_no_gluten sandw1 child1 tray3 table3 
5 move_tray tray3 table3 kitchen 
6 __method_precondition_m1_serve_1_precondition child2 bread16 content15 table1 sandw5 
7 make_sandwich sandw5 bread16 content15 
8 put_on_tray sandw5 tray2 
9 move_tray tray2 kitchen table1 
10 serve_sandwich sandw5 child2 tray2 table1 
11 move_tray tray2 table1 kitchen 
12 __method_precondition_m1_serve_1_precondition child3 bread14 content14 table1 sandw14 
13 make_sandwich sandw14 bread14 content14 
14 put_on_tray sandw14 tray4 
15 move_tray tray4 kitchen table1 
16 serve_sandwich sandw14 child3 tray4 table1 
17 move_tray tray4 table1 kitchen 
18 __method_precondition_m1_serve_1_precondition child4 bread18 content16 table3 sandw17 
19 make_sandwich sandw17 bread18 content16 
20 put_on_tray sandw17 tray3 
21 move_tray tray3 kitchen table3 
22 serve_sandwich sandw17 child4 tray3 table3 
23 move_tray tray3 table3 kitchen 
24 __method_precondition_m1_serve_1_precondition child5 bread5 content12 table1 sandw23 
25 make_sandwich sandw23 bread5 content12 
26 put_on_tray sandw23 tray4 
27 move_tray tray4 kitchen table1 
28 serve_sandwich sandw23 child5 tray4 table1 
29 move_tray tray4 table1 kitchen 
30 __method_precondition_m1_serve_1_precondition child6 bread12 content18 table1 sandw4 
31 make_sandwich sandw4 bread12 content18 
32 put_on_tray sandw4 tray1 
33 move_tray tray1 kitchen table1 
34 serve_sandwich sandw4 child6 tray1 table1 
35 move_tray tray1 table1 kitchen 
36 __method_precondition_m1_serve_1_precondition child7 bread3 content10 table1 sandw10 
37 make_sandwich sandw10 bread3 content10 
38 put_on_tray sandw10 tray2 
39 move_tray tray2 kitchen table1 
40 serve_sandwich sandw10 child7 tray2 table1 
41 move_tray tray2 table1 kitchen 
42 __method_precondition_m0_serve_0_precondition child8 bread7 content4 sandw19 table2 
43 make_sandwich_no_gluten sandw19 bread7 content4 
44 put_on_tray sandw19 tray4 
45 move_tray tray4 kitchen table2 
46 serve_sandwich_no_gluten sandw19 child8 tray4 table2 
47 move_tray tray4 table2 kitchen 
48 __method_precondition_m0_serve_0_precondition child9 bread4 content5 sandw11 table3 
49 make_sandwich_no_gluten sandw11 bread4 content5 
50 put_on_tray sandw11 tray4 
51 move_tray tray4 kitchen table3 
52 serve_sandwich_no_gluten sandw11 child9 tray4 table3 
53 move_tray tray4 table3 kitchen 
54 __method_precondition_m1_serve_1_precondition child10 bread9 content6 table1 sandw22 
55 make_sandwich sandw22 bread9 content6 
56 put_on_tray sandw22 tray2 
57 move_tray tray2 kitchen table1 
58 serve_sandwich sandw22 child10 tray2 table1 
59 move_tray tray2 table1 kitchen 
60 __method_precondition_m1_serve_1_precondition child11 bread13 content8 table2 sandw13 
61 make_sandwich sandw13 bread13 content8 
62 put_on_tray sandw13 tray1 
63 move_tray tray1 kitchen table2 
64 serve_sandwich sandw13 child11 tray1 table2 
65 move_tray tray1 table2 kitchen 
66 __method_precondition_m0_serve_0_precondition child12 bread2 content9 sandw7 table2 
67 make_sandwich_no_gluten sandw7 bread2 content9 
68 put_on_tray sandw7 tray2 
69 move_tray tray2 kitchen table2 
70 serve_sandwich_no_gluten sandw7 child12 tray2 table2 
71 move_tray tray2 table2 kitchen 
72 __method_precondition_m0_serve_0_precondition child13 bread8 content7 sandw3 table3 
73 make_sandwich_no_gluten sandw3 bread8 content7 
74 put_on_tray sandw3 tray2 
75 move_tray tray2 kitchen table3 
76 serve_sandwich_no_gluten sandw3 child13 tray2 table3 
77 move_tray tray2 table3 kitchen 
78 __method_precondition_m0_serve_0_precondition child14 bread17 content3 sandw16 table3 
79 make_sandwich_no_gluten sandw16 bread17 content3 
80 put_on_tray sandw16 tray3 
81 move_tray tray3 kitchen table3 
82 serve_sandwich_no_gluten sandw16 child14 tray3 table3 
83 move_tray tray3 table3 kitchen 
84 __method_precondition_m1_serve_1_precondition child15 bread10 content13 table1 sandw9 
85 make_sandwich sandw9 bread10 content13 
86 put_on_tray sandw9 tray3 
87 move_tray tray3 kitchen table1 
88 serve_sandwich sandw9 child15 tray3 table1 
89 move_tray tray3 table1 kitchen 
90 __method_precondition_m1_serve_1_precondition child16 bread15 content2 table2 sandw2 
91 make_sandwich sandw2 bread15 content2 
92 put_on_tray sandw2 tray4 
93 move_tray tray4 kitchen table2 
94 serve_sandwich sandw2 child16 tray4 table2 
95 move_tray tray4 table2 kitchen 
96 __method_precondition_m1_serve_1_precondition child17 bread1 content11 table2 sandw15 
97 make_sandwich sandw15 bread1 content11 
98 put_on_tray sandw15 tray1 
99 move_tray tray1 kitchen table2 
100 serve_sandwich sandw15 child17 tray1 table2 
101 move_tray tray1 table2 kitchen 
102 __method_precondition_m0_serve_0_precondition child18 bread11 content17 sandw6 table3 
103 make_sandwich_no_gluten sandw6 bread11 content17 
104 put_on_tray sandw6 tray4 
105 move_tray tray4 kitchen table3 
106 serve_sandwich_no_gluten sandw6 child18 tray4 table3 
107 move_tray tray4 table3 kitchen 
root 124
108 serve child18  -> m0_serve 102 103 104 105 106 107
109 serve child14  -> m0_serve 78 79 80 81 82 83
110 serve child12  -> m0_serve 66 67 68 69 70 71
111 serve child1  -> m0_serve 0 1 2 3 4 5
112 serve child13  -> m0_serve 72 73 74 75 76 77
113 serve child11  -> m1_serve 60 61 62 63 64 65
114 serve child17  -> m1_serve 96 97 98 99 100 101
115 serve child7  -> m1_serve 36 37 38 39 40 41
116 serve child4  -> m1_serve 18 19 20 21 22 23
117 serve child5  -> m1_serve 24 25 26 27 28 29
118 serve child8  -> m0_serve 42 43 44 45 46 47
119 serve child16  -> m1_serve 90 91 92 93 94 95
120 serve child3  -> m1_serve 12 13 14 15 16 17
121 serve child10  -> m1_serve 54 55 56 57 58 59
122 serve child6  -> m1_serve 30 31 32 33 34 35
123 serve child2  -> m1_serve 6 7 8 9 10 11
124 __artificialTopCompilation__top_1  -> __top_1 111 123 120 116 117 122 115 118 125 121 113 110 112 109 126 119 114 108
125 serve child9  -> m0_serve 48 49 50 51 52 53
126 serve child15  -> m1_serve 84 85 86 87 88 89

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 165.306 MEMPEAK_KBS 7306357.76
