PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/RoverG/domain.hddl instances/RoverG/p20.hddl"


Planner Configuration
=====================
Domain: instances/RoverG/domain.hddl
Problem: instances/RoverG/p20.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p20.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 26
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 114
Compiling negative preconditions ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 114
Compiling split parameters ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 114
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 114
Grounded planning graph ... done in 8245ms.
	Number of Grounded Actions 107200
	Number of Grounded Literals 53057
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 114
Two Way TDG ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 114
Grounding ... done.
	number of abstract tasks = 38983
	number of tasks = 123110
	number of decomposition methods = 154319
	number of predicates = 103759
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 38983
	number of tasks = 123110
	number of decomposition methods = 154319
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 4486ms.
	Number of Grounded Actions 84127
	Number of Grounded Literals 1318
	number of abstract tasks = 38983
	number of tasks = 123110
	number of decomposition methods = 154319
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 38983
	number of tasks = 123110
	number of decomposition methods = 154319
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 38983
	number of tasks = 123110
	number of decomposition methods = 154319
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 38984
	number of tasks = 123111
	number of decomposition methods = 154320
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 44
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 38984
	number of tasks = 123111
	number of decomposition methods = 154320
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 44
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 3410ms.
	Number of Grounded Actions 84127
	Number of Grounded Literals 1318
	number of abstract tasks = 38984
	number of tasks = 123111
	number of decomposition methods = 154320
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 44
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 38984
	number of tasks = 123111
	number of decomposition methods = 154320
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 44
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 38984
	number of tasks = 123111
	number of decomposition methods = 154320
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 44
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 38984
	number of tasks = 123111
	number of decomposition methods = 154320
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 44
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 38984
	number of tasks = 123111
	number of decomposition methods = 154320
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 44
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 38984
	number of tasks = 123111
	number of decomposition methods = 154320
	number of predicates = 1318
	number of sorts = 0
	number of tasks in largest method = 44
	number of primitive SHOP tasks = 76752
	number of epsilon methods = 0
	number of primitive tasks = 84127
	number of constants = 0
Tasks 84127 - 4007
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854655790ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854516550
done
initial PDT has 820 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 586 leafs
SHOP LEAFS 322
Assignment implications
Generating clauses representing decomposition ... 
RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.183 MEMPEAK_KBS 4562381.824
