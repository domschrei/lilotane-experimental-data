PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/blocksworld/domain.hddl instances/blocksworld/p05.hddl"


Planner Configuration
=====================
Domain: instances/blocksworld/domain.hddl
Problem: instances/blocksworld/p05.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p05.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 5
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 13
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 13
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 13
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 13
Grounded planning graph ... done in 204ms.
	Number of Grounded Actions 150
	Number of Grounded Literals 85
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 13
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 13
Grounding ... done.
	number of abstract tasks = 49
	number of tasks = 199
	number of decomposition methods = 115
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 49
	number of tasks = 199
	number of decomposition methods = 115
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 59ms.
	Number of Grounded Actions 150
	Number of Grounded Literals 85
	number of abstract tasks = 49
	number of tasks = 199
	number of decomposition methods = 115
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 49
	number of tasks = 199
	number of decomposition methods = 115
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 49
	number of tasks = 199
	number of decomposition methods = 115
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 50
	number of tasks = 200
	number of decomposition methods = 116
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 50
	number of tasks = 200
	number of decomposition methods = 116
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 27ms.
	Number of Grounded Actions 150
	Number of Grounded Literals 85
	number of abstract tasks = 50
	number of tasks = 200
	number of decomposition methods = 116
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 50
	number of tasks = 200
	number of decomposition methods = 116
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 50
	number of tasks = 200
	number of decomposition methods = 116
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 50
	number of tasks = 200
	number of decomposition methods = 116
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 50
	number of tasks = 200
	number of decomposition methods = 116
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 50
	number of tasks = 200
	number of decomposition methods = 116
	number of predicates = 85
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 93
	number of epsilon methods = 0
	number of primitive tasks = 150
	number of constants = 0
Tasks 150 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773698ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 36 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 24 leafs
SHOP LEAFS 24
Assignment implications
Still waiting ... running for 116 will abort at 9223372036854773656
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 10710
Size 10710 at 0/150
Size 5977
Size 5977 at 0/150
Size 2120
Size 2120 at 0/150
Size 662
Size 662 at 0/150
Size 437
Size 437 at 0/150
Size 437
Invariant time: 0.162
Number of invariants: 437
Invariant Clauses 10925
NUMBER OF CLAUSES 15261
NUMBER OF STATE CLAUSES 15113
NUMBER OF DECOMPOSITION CLAUSES 148
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.03% 0.97% 0.0% 
NUMBER OF PATHS 24
Starting cryptominisat
Setting starttime of solver to 1603870886068
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 156 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 132 leafs
SHOP LEAFS 84
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854772897
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 58121
NUMBER OF CLAUSES 83175
NUMBER OF STATE CLAUSES 81499
NUMBER OF DECOMPOSITION CLAUSES 1676
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.98% 2.02% 0.0% 
NUMBER OF PATHS 132
Starting cryptominisat
Setting starttime of solver to 1603870886677
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 228 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 204 leafs
SHOP LEAFS 108
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854772154
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 89585
NUMBER OF CLAUSES 128798
NUMBER OF STATE CLAUSES 125938
NUMBER OF DECOMPOSITION CLAUSES 2860
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.78% 2.22% 0.0% 
NUMBER OF PATHS 204
Starting cryptominisat
Setting starttime of solver to 1603870887420
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 300 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 276 leafs
SHOP LEAFS 132
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771354
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 121049
NUMBER OF CLAUSES 175426
NUMBER OF STATE CLAUSES 170702
NUMBER OF DECOMPOSITION CLAUSES 4724
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.31% 2.69% 0.0% 
NUMBER OF PATHS 276
Starting cryptominisat
Setting starttime of solver to 1603870888182
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 372 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 348 leafs
SHOP LEAFS 156
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770769
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 152513
NUMBER OF CLAUSES 223040
NUMBER OF STATE CLAUSES 215760
NUMBER OF DECOMPOSITION CLAUSES 7280
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.74000000000001% 3.2600000000000002% 0.0% 
NUMBER OF PATHS 348
Starting cryptominisat
Setting starttime of solver to 1603870888829
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 444 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 420 leafs
SHOP LEAFS 180
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770127
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 183977
NUMBER OF CLAUSES 272199
NUMBER OF STATE CLAUSES 261259
NUMBER OF DECOMPOSITION CLAUSES 10940
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.98% 4.0200000000000005% 0.0% 
NUMBER OF PATHS 420
Starting cryptominisat
Setting starttime of solver to 1603870889630
Command exited with non-zero status 10
0.08 0.02

Time command gave the following runtime for the solver: 100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_7;2,97 97 m6_do_clear
7;2 49 pathaction!2_7;2,125
Consider method^2_8;2,106 106 m6_do_clear
8;2 174 pathaction!2_8;2,119
Consider method^2_6;1,97 97 m6_do_clear
6;1 42 pathaction!2_6;1,125
Consider method^2_4;3,60 60 m3_do_on_table
4;3 143 pathaction!2_4;3,139
Consider method^2_1;4,70 70 m5_do_move
1;4 198 pathaction!2_1;4,81
Consider method^2_1;2,19 19 m6_do_clear
1;2 11 pathaction!2_1;2,117
Consider method^2_5;4,4 4 m4_do_move
5;4 46 pathaction!2_5;4,83
Consider method^2_7;3,35 35 m2_do_on_table
7;3 121 pathaction!2_7;3,138
Consider method^1_6,15 15 m1_do_put_on
6 87 pathaction!1_6,99
Consider method^5_0;2;1;1;1,63 63 m7_do_clear
0;2;1;1;1 157 pathaction!5_0;2;1;1;1,128
Consider method^2_9;2,107 107 m6_do_clear
9;2 161 pathaction!2_9;2,123
Consider method^2_4;4,84 84 m4_do_move
4;4 147 pathaction!2_4;4,86
Consider method^1_9,55 55 m1_do_put_on
9 111 pathaction!1_9,96
Consider method^2_6;4,10 10 m4_do_move
6;4 44 pathaction!2_6;4,87
Consider method^2_4;1,105 105 m6_do_clear
4;1 109 pathaction!2_4;1,118
Consider method^1_1,72 72 m1_do_put_on
1 62 pathaction!1_1,93
Consider method^2_3;3,98 98 m3_do_on_table
3;3 140 pathaction!2_3;3,134
Consider method^2_8;3,20 20 m3_do_on_table
8;3 102 pathaction!2_8;3,132
Consider method^1_11,88 88 m1_do_put_on
11 27 pathaction!1_11,100
Consider method^2_4;2,90 90 m6_do_clear
4;2 35 pathaction!2_4;2,126
Consider method^2_10;2,59 59 m6_do_clear
10;2 56 pathaction!2_10;2,127
Consider method^2_10;3,53 53 m3_do_on_table
10;3 150 pathaction!2_10;3,140
Consider method^2_9;1,59 59 m6_do_clear
9;1 23 pathaction!2_9;1,127
Consider method^2_8;4,67 67 m4_do_move
8;4 91 pathaction!2_8;4,91
Consider method^2_10;1,48 48 m6_do_clear
10;1 103 pathaction!2_10;1,124
Consider method^2_0;3,52 52 m2_do_on_table
0;3 192 pathaction!2_0;3,141
Consider method^1_10,30 30 m1_do_put_on
10 83 pathaction!1_10,102
Consider method^1_7,95 95 m1_do_put_on
7 47 pathaction!1_7,97
Consider method^1_3,74 74 m1_do_put_on
3 183 pathaction!1_3,92
Consider method^2_2;1,9 9 m6_do_clear
2;1 80 pathaction!2_2;1,121
Consider method^2_0;2,39 39 m7_do_clear
0;2 199 pathaction!2_0;2,129
Consider method^2_10;4,108 108 m4_do_move
10;4 129 pathaction!2_10;4,90
Consider method^2_3;4,50 50 m4_do_move
3;4 119 pathaction!2_3;4,80
Consider method^1_5,56 56 m1_do_put_on
5 163 pathaction!1_5,95
Consider method^2_5;2,105 105 m6_do_clear
5;2 40 pathaction!2_5;2,118
Consider method^2_3;2,9 9 m6_do_clear
3;2 131 pathaction!2_3;2,121
Consider method^2_1;3,36 36 m3_do_on_table
1;3 171 pathaction!2_1;3,130
Consider method^2_5;3,64 64 m3_do_on_table
5;3 17 pathaction!2_5;3,131
Consider method^2_1;1,96 96 m6_do_clear
1;1 26 pathaction!2_1;1,122
Consider method^2_11;3,0 0 m3_do_on_table
11;3 160 pathaction!2_11;3,137
Consider method^6_0;2;1;1;1;1,59 59 m6_do_clear
0;2;1;1;1;1 24 pathaction!6_0;2;1;1;1;1,127
Consider method^3_0;2;1,91 91 m7_do_clear
0;2;1 153 pathaction!3_0;2;1,123
Consider method^4_0;2;1;1,44 44 m7_do_clear
0;2;1;1 182 pathaction!4_0;2;1;1,118
Consider method^2_0;4,77 77 m4_do_move
0;4 136 pathaction!2_0;4,89
Consider method^1_4,34 34 m1_do_put_on
4 178 pathaction!1_4,98
Consider method^2_9;3,104 104 m3_do_on_table
9;3 162 pathaction!2_9;3,136
Consider method^2_6;3,87 87 m3_do_on_table
6;3 134 pathaction!2_6;3,133
Consider method^2_3;1,17 17 m7_do_clear
3;1 6 pathaction!2_3;1,126
Consider method^2_7;4,85 85 m4_do_move
7;4 106 pathaction!2_7;4,85
Consider method^2_11;2,48 48 m6_do_clear
11;2 45 pathaction!2_11;2,124
Consider method^2_2;4,25 25 m4_do_move
2;4 67 pathaction!2_2;4,82
Consider method^3_3;1;1,48 48 m6_do_clear
3;1;1 15 pathaction!3_3;1;1,124
Consider method^2_7;1,106 106 m6_do_clear
7;1 188 pathaction!2_7;1,119
Consider method^1_2,2 2 m1_do_put_on
2 74 pathaction!1_2,94
Consider method^2_0;1,19 19 m6_do_clear
0;1 68 pathaction!2_0;1,117
Consider method^2_2;3,83 83 m3_do_on_table
2;3 1 pathaction!2_2;3,135
Consider method^2_5;1,14 14 m6_do_clear
5;1 60 pathaction!2_5;1,120
Consider method^2_9;4,79 79 m4_do_move
9;4 137 pathaction!2_9;4,84
Consider method^2_11;1,112 112 m6_do_clear
11;1 81 pathaction!2_11;1,128
Consider method^2_8;1,107 107 m6_do_clear
8;1 94 pathaction!2_8;1,123
Consider method^2_6;2,14 14 m6_do_clear
6;2 92 pathaction!2_6;2,120
Consider method^0_,115 115 __top_1
 16 pathaction!0_,199
Consider method^1_8,82 82 m1_do_put_on
8 176 pathaction!1_8,103
Consider method^2_11;4,114 114 m4_do_move
11;4 93 pathaction!2_11;4,88
Consider method^2_2;2,96 96 m6_do_clear
2;2 19 pathaction!2_2;2,122
Consider method^1_0,76 76 m1_do_put_on
0 127 pathaction!1_0,101


CHECKING primitive solution of length 137 ...
true 138 __method_precondition_m1_do_put_on_1_precondition[;]
true 145 __method_precondition_m6_do_clear_6_precondition[b4;]
true 89 nop[;]
true 194 __method_precondition_m7_do_clear_7_precondition[b13,b9;]
true 43 __method_precondition_m7_do_clear_7_precondition[b9,b5;]
true 77 __method_precondition_m7_do_clear_7_precondition[b5,b1;]
true 149 __method_precondition_m7_do_clear_7_precondition[b1,b7;]
true 69 __method_precondition_m6_do_clear_6_precondition[b7;]
true 167 nop[;]
true 185 unstack[b7,b1;]
true 169 put-down[b7;]
true 52 unstack[b1,b5;]
true 166 put-down[b1;]
true 139 unstack[b5,b9;]
true 125 put-down[b5;]
true 66 unstack[b9,b13;]
true 168 put-down[b9;]
true 36 __method_precondition_m2_do_on_table_2_precondition[b13;]
true 37 unstack[b13,b12;]
true 200 put-down[b13;]
true 8 __method_precondition_m4_do_move_4_precondition[b4,b13;]
true 28 pick-up[b4;]
true 0 stack[b4,b13;]
true 76 __method_precondition_m1_do_put_on_1_precondition[;]
true 21 __method_precondition_m6_do_clear_6_precondition[b8;]
true 63 nop[;]
true 58 __method_precondition_m6_do_clear_6_precondition[b4;]
true 73 nop[;]
true 85 __method_precondition_m3_do_on_table_3_precondition[b4;]
true 9 nop[;]
true 184 __method_precondition_m5_do_move_5_precondition[b8,b4;]
true 72 unstack[b8,b3;]
true 144 stack[b8,b4;]
true 30 __method_precondition_m1_do_put_on_1_precondition[;]
true 98 __method_precondition_m6_do_clear_6_precondition[b11;]
true 3 nop[;]
true 82 __method_precondition_m6_do_clear_6_precondition[b8;]
true 7 nop[;]
true 130 __method_precondition_m3_do_on_table_3_precondition[b8;]
true 79 nop[;]
true 179 __method_precondition_m4_do_move_4_precondition[b11,b8;]
true 25 pick-up[b11;]
true 4 stack[b11,b8;]
true 97 __method_precondition_m1_do_put_on_1_precondition[;]
true 118 __method_precondition_m7_do_clear_7_precondition[b10,b3;]
true 120 __method_precondition_m6_do_clear_6_precondition[b3;]
true 101 nop[;]
true 105 unstack[b3,b10;]
true 51 put-down[b3;]
true 78 __method_precondition_m6_do_clear_6_precondition[b11;]
true 96 nop[;]
true 75 __method_precondition_m3_do_on_table_3_precondition[b11;]
true 172 nop[;]
true 124 __method_precondition_m4_do_move_4_precondition[b10,b11;]
true 108 pick-up[b10;]
true 18 stack[b10,b11;]
true 146 __method_precondition_m1_do_put_on_1_precondition[;]
true 135 __method_precondition_m6_do_clear_6_precondition[b5;]
true 95 nop[;]
true 59 __method_precondition_m6_do_clear_6_precondition[b10;]
true 99 nop[;]
true 20 __method_precondition_m3_do_on_table_3_precondition[b10;]
true 115 nop[;]
true 142 __method_precondition_m4_do_move_4_precondition[b5,b10;]
true 191 pick-up[b5;]
true 159 stack[b5,b10;]
true 195 __method_precondition_m1_do_put_on_1_precondition[;]
true 54 __method_precondition_m6_do_clear_6_precondition[b6;]
true 29 nop[;]
true 151 __method_precondition_m6_do_clear_6_precondition[b5;]
true 126 nop[;]
true 190 __method_precondition_m3_do_on_table_3_precondition[b5;]
true 104 nop[;]
true 33 __method_precondition_m4_do_move_4_precondition[b6,b5;]
true 113 pick-up[b6;]
true 55 stack[b6,b5;]
true 32 __method_precondition_m1_do_put_on_1_precondition[;]
true 107 __method_precondition_m6_do_clear_6_precondition[b12;]
true 164 nop[;]
true 154 __method_precondition_m6_do_clear_6_precondition[b6;]
true 132 nop[;]
true 86 __method_precondition_m3_do_on_table_3_precondition[b6;]
true 100 nop[;]
true 57 __method_precondition_m4_do_move_4_precondition[b12,b6;]
true 53 pick-up[b12;]
true 175 stack[b12,b6;]
true 5 __method_precondition_m1_do_put_on_1_precondition[;]
true 65 __method_precondition_m6_do_clear_6_precondition[b2;]
true 41 nop[;]
true 117 __method_precondition_m6_do_clear_6_precondition[b12;]
true 22 nop[;]
true 13 __method_precondition_m2_do_on_table_2_precondition[b12;]
true 48 unstack[b12,b6;]
true 110 put-down[b12;]
true 14 __method_precondition_m4_do_move_4_precondition[b2,b12;]
true 84 pick-up[b2;]
true 170 stack[b2,b12;]
true 201 __method_precondition_m1_do_put_on_1_precondition[;]
true 196 __method_precondition_m6_do_clear_6_precondition[b9;]
true 141 nop[;]
true 173 __method_precondition_m6_do_clear_6_precondition[b2;]
true 202 nop[;]
true 128 __method_precondition_m3_do_on_table_3_precondition[b2;]
true 90 nop[;]
true 34 __method_precondition_m4_do_move_4_precondition[b9,b2;]
true 61 pick-up[b9;]
true 112 stack[b9,b2;]
true 177 __method_precondition_m1_do_put_on_1_precondition[;]
true 88 __method_precondition_m6_do_clear_6_precondition[b7;]
true 64 nop[;]
true 71 __method_precondition_m6_do_clear_6_precondition[b9;]
true 39 nop[;]
true 180 __method_precondition_m3_do_on_table_3_precondition[b9;]
true 2 nop[;]
true 155 __method_precondition_m4_do_move_4_precondition[b7,b9;]
true 187 pick-up[b7;]
true 70 stack[b7,b9;]
true 181 __method_precondition_m1_do_put_on_1_precondition[;]
true 189 __method_precondition_m6_do_clear_6_precondition[b3;]
true 123 nop[;]
true 38 __method_precondition_m6_do_clear_6_precondition[b7;]
true 50 nop[;]
true 156 __method_precondition_m3_do_on_table_3_precondition[b7;]
true 186 nop[;]
true 193 __method_precondition_m4_do_move_4_precondition[b3,b7;]
true 122 pick-up[b3;]
true 12 stack[b3,b7;]
true 148 __method_precondition_m1_do_put_on_1_precondition[;]
true 31 __method_precondition_m6_do_clear_6_precondition[b1;]
true 116 nop[;]
true 165 __method_precondition_m6_do_clear_6_precondition[b3;]
true 158 nop[;]
true 197 __method_precondition_m3_do_on_table_3_precondition[b3;]
true 152 nop[;]
true 10 __method_precondition_m4_do_move_4_precondition[b1,b3;]
true 114 pick-up[b1;]
true 133 stack[b1,b3;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 220822584
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 85
number of actions                    = 200
number of abstract actions           = 50
number of primitive actions          = 150
number of methods                    = 116
number of primitive shop actions     = 93
number of primitive non-shop actions = 57
size of largest method               = 12
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 74788
number of clauses               = 272199
average size of clauses         = 2.022663565993997
number of assert                = 46
number of horn                  = 256110
K offset                        = 0
K chosen value                  = 7
state formula                   = 261259
method children clauses         = 0
number of paths                 = 420
maximum plan length             = 420
number of decomposition clauses = 10940
number of ordering clauses      = 0
number of state clauses         = 261259
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 7147
============ parsing ============
total                         = 905
file parser                   = 525
sort expansion                = 142
closed world assumption       = 67
inherit preconditions         = 0
shop methods                  = 13
eliminate identical variables = 88
strip domain of hybridity     = 2
flatten formula               = 66
============ preprocessing ============
total                                      = 1092
compile negative preconditions             = 33
compile unit methods                       = 0
split parameter                            = 11
expand choiceless abstract tasks           = 0
compile methods with identical tasks       = 4
removing unnecessary predicates            = 26
lifted reachabiltiy analysis               = 55
grounded planning graph analysis           = 465
grounded task decomposition graph analysis = 377
grounding                                  = 109
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 241
============ sat ============
total                                        = 3624
generate formula                             = 2568
generate path decomposition tree             = 324
normalise path decomposition tree            = 89
sog optimisation                             = 85
translate path decomposition tree to clauses = 324
generate state formula                       = 2486
generate state invariant formula             = 630
transform to DIMACS                          = 433
SAT solver                                   = 230
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 30
SAT solver for K=0005                        = 40
SAT solver for K=0006                        = 50
SAT solver for K=0007                        = 100

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="150";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="50";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="220822584";"40 sat:20:state formula"="261259";"40 sat:01:number of variables"="74788";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="420";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="116";"30 problem:07:number of primitive shop actions"="93";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="200";"30 problem:08:number of primitive non-shop actions"="57";"30 problem:02:number of predicates"="85";"40 sat:03:number of horn"="256110";"40 sat:15:K chosen value"="7";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="12";"40 sat:03:average size of clauses"="2.022663565993997";"40 sat:02:number of clauses"="272199";"40 sat:50:number of state clauses"="261259";"40 sat:03:number of assert"="46";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="420";"40 sat:50:number of decomposition clauses"="10940";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="525";"01 parsing:08:flatten formula"="66";"40 sat:41:SAT solver for K=0004"="30";"40 sat:00:total"="3624";"40 sat:16:generate state formula"="2486";"40 sat:20:transform to DIMACS"="433";"40 sat:11:generate path decomposition tree"="324";"02 preprocessing:07:compile methods with identical tasks"="4";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="26";"01 parsing:03:closed world assumption"="67";"02 preprocessing:11:lifted reachabiltiy analysis"="55";"01 parsing:02:sort expansion"="142";"40 sat:12:normalise path decomposition tree"="89";"40 sat:40:SAT solver"="230";"01 parsing:00:total"="905";"40 sat:10:generate formula"="2568";"40 sat:41:SAT solver for K=0005"="40";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="33";"00 total:00:total"="7147";"40 sat:13:sog optimisation"="85";"02 preprocessing:12:grounded planning graph analysis"="465";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="377";"40 sat:41:SAT solver for K=0006"="50";"02 preprocessing:04:split parameter"="11";"01 parsing:05:shop methods"="13";"10 search preparation:02:compute state invariants"="241";"01 parsing:06:eliminate identical variables"="88";"40 sat:15:translate path decomposition tree to clauses"="324";"02 preprocessing:05:expand choiceless abstract tasks"="0";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="630";"02 preprocessing:00:total"="1092";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="109";"40 sat:41:SAT solver for K=0007"="100"
#!verify __method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b4];nop[];__method_precondition_m7_do_clear_7_precondition[b13,b9];__method_precondition_m7_do_clear_7_precondition[b9,b5];__method_precondition_m7_do_clear_7_precondition[b5,b1];__method_precondition_m7_do_clear_7_precondition[b1,b7];__method_precondition_m6_do_clear_6_precondition[b7];nop[];unstack[b7,b1];put-down[b7];unstack[b1,b5];put-down[b1];unstack[b5,b9];put-down[b5];unstack[b9,b13];put-down[b9];__method_precondition_m2_do_on_table_2_precondition[b13];unstack[b13,b12];put-down[b13];__method_precondition_m4_do_move_4_precondition[b4,b13];pick-up[b4];stack[b4,b13];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b8];nop[];__method_precondition_m6_do_clear_6_precondition[b4];nop[];__method_precondition_m3_do_on_table_3_precondition[b4];nop[];__method_precondition_m5_do_move_5_precondition[b8,b4];unstack[b8,b3];stack[b8,b4];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b11];nop[];__method_precondition_m6_do_clear_6_precondition[b8];nop[];__method_precondition_m3_do_on_table_3_precondition[b8];nop[];__method_precondition_m4_do_move_4_precondition[b11,b8];pick-up[b11];stack[b11,b8];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m7_do_clear_7_precondition[b10,b3];__method_precondition_m6_do_clear_6_precondition[b3];nop[];unstack[b3,b10];put-down[b3];__method_precondition_m6_do_clear_6_precondition[b11];nop[];__method_precondition_m3_do_on_table_3_precondition[b11];nop[];__method_precondition_m4_do_move_4_precondition[b10,b11];pick-up[b10];stack[b10,b11];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b5];nop[];__method_precondition_m6_do_clear_6_precondition[b10];nop[];__method_precondition_m3_do_on_table_3_precondition[b10];nop[];__method_precondition_m4_do_move_4_precondition[b5,b10];pick-up[b5];stack[b5,b10];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b6];nop[];__method_precondition_m6_do_clear_6_precondition[b5];nop[];__method_precondition_m3_do_on_table_3_precondition[b5];nop[];__method_precondition_m4_do_move_4_precondition[b6,b5];pick-up[b6];stack[b6,b5];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b12];nop[];__method_precondition_m6_do_clear_6_precondition[b6];nop[];__method_precondition_m3_do_on_table_3_precondition[b6];nop[];__method_precondition_m4_do_move_4_precondition[b12,b6];pick-up[b12];stack[b12,b6];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b2];nop[];__method_precondition_m6_do_clear_6_precondition[b12];nop[];__method_precondition_m2_do_on_table_2_precondition[b12];unstack[b12,b6];put-down[b12];__method_precondition_m4_do_move_4_precondition[b2,b12];pick-up[b2];stack[b2,b12];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b9];nop[];__method_precondition_m6_do_clear_6_precondition[b2];nop[];__method_precondition_m3_do_on_table_3_precondition[b2];nop[];__method_precondition_m4_do_move_4_precondition[b9,b2];pick-up[b9];stack[b9,b2];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b7];nop[];__method_precondition_m6_do_clear_6_precondition[b9];nop[];__method_precondition_m3_do_on_table_3_precondition[b9];nop[];__method_precondition_m4_do_move_4_precondition[b7,b9];pick-up[b7];stack[b7,b9];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b3];nop[];__method_precondition_m6_do_clear_6_precondition[b7];nop[];__method_precondition_m3_do_on_table_3_precondition[b7];nop[];__method_precondition_m4_do_move_4_precondition[b3,b7];pick-up[b3];stack[b3,b7];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b1];nop[];__method_precondition_m6_do_clear_6_precondition[b3];nop[];__method_precondition_m3_do_on_table_3_precondition[b3];nop[];__method_precondition_m4_do_move_4_precondition[b1,b3];pick-up[b1];stack[b1,b3]
==>
0 __method_precondition_m1_do_put_on_1_precondition  
1 __method_precondition_m6_do_clear_6_precondition b4 
2 nop  
3 __method_precondition_m7_do_clear_7_precondition b13 b9 
4 __method_precondition_m7_do_clear_7_precondition b9 b5 
5 __method_precondition_m7_do_clear_7_precondition b5 b1 
6 __method_precondition_m7_do_clear_7_precondition b1 b7 
7 __method_precondition_m6_do_clear_6_precondition b7 
8 nop  
9 unstack b7 b1 
10 put-down b7 
11 unstack b1 b5 
12 put-down b1 
13 unstack b5 b9 
14 put-down b5 
15 unstack b9 b13 
16 put-down b9 
17 __method_precondition_m2_do_on_table_2_precondition b13 
18 unstack b13 b12 
19 put-down b13 
20 __method_precondition_m4_do_move_4_precondition b4 b13 
21 pick-up b4 
22 stack b4 b13 
23 __method_precondition_m1_do_put_on_1_precondition  
24 __method_precondition_m6_do_clear_6_precondition b8 
25 nop  
26 __method_precondition_m6_do_clear_6_precondition b4 
27 nop  
28 __method_precondition_m3_do_on_table_3_precondition b4 
29 nop  
30 __method_precondition_m5_do_move_5_precondition b8 b4 
31 unstack b8 b3 
32 stack b8 b4 
33 __method_precondition_m1_do_put_on_1_precondition  
34 __method_precondition_m6_do_clear_6_precondition b11 
35 nop  
36 __method_precondition_m6_do_clear_6_precondition b8 
37 nop  
38 __method_precondition_m3_do_on_table_3_precondition b8 
39 nop  
40 __method_precondition_m4_do_move_4_precondition b11 b8 
41 pick-up b11 
42 stack b11 b8 
43 __method_precondition_m1_do_put_on_1_precondition  
44 __method_precondition_m7_do_clear_7_precondition b10 b3 
45 __method_precondition_m6_do_clear_6_precondition b3 
46 nop  
47 unstack b3 b10 
48 put-down b3 
49 __method_precondition_m6_do_clear_6_precondition b11 
50 nop  
51 __method_precondition_m3_do_on_table_3_precondition b11 
52 nop  
53 __method_precondition_m4_do_move_4_precondition b10 b11 
54 pick-up b10 
55 stack b10 b11 
56 __method_precondition_m1_do_put_on_1_precondition  
57 __method_precondition_m6_do_clear_6_precondition b5 
58 nop  
59 __method_precondition_m6_do_clear_6_precondition b10 
60 nop  
61 __method_precondition_m3_do_on_table_3_precondition b10 
62 nop  
63 __method_precondition_m4_do_move_4_precondition b5 b10 
64 pick-up b5 
65 stack b5 b10 
66 __method_precondition_m1_do_put_on_1_precondition  
67 __method_precondition_m6_do_clear_6_precondition b6 
68 nop  
69 __method_precondition_m6_do_clear_6_precondition b5 
70 nop  
71 __method_precondition_m3_do_on_table_3_precondition b5 
72 nop  
73 __method_precondition_m4_do_move_4_precondition b6 b5 
74 pick-up b6 
75 stack b6 b5 
76 __method_precondition_m1_do_put_on_1_precondition  
77 __method_precondition_m6_do_clear_6_precondition b12 
78 nop  
79 __method_precondition_m6_do_clear_6_precondition b6 
80 nop  
81 __method_precondition_m3_do_on_table_3_precondition b6 
82 nop  
83 __method_precondition_m4_do_move_4_precondition b12 b6 
84 pick-up b12 
85 stack b12 b6 
86 __method_precondition_m1_do_put_on_1_precondition  
87 __method_precondition_m6_do_clear_6_precondition b2 
88 nop  
89 __method_precondition_m6_do_clear_6_precondition b12 
90 nop  
91 __method_precondition_m2_do_on_table_2_precondition b12 
92 unstack b12 b6 
93 put-down b12 
94 __method_precondition_m4_do_move_4_precondition b2 b12 
95 pick-up b2 
96 stack b2 b12 
97 __method_precondition_m1_do_put_on_1_precondition  
98 __method_precondition_m6_do_clear_6_precondition b9 
99 nop  
100 __method_precondition_m6_do_clear_6_precondition b2 
101 nop  
102 __method_precondition_m3_do_on_table_3_precondition b2 
103 nop  
104 __method_precondition_m4_do_move_4_precondition b9 b2 
105 pick-up b9 
106 stack b9 b2 
107 __method_precondition_m1_do_put_on_1_precondition  
108 __method_precondition_m6_do_clear_6_precondition b7 
109 nop  
110 __method_precondition_m6_do_clear_6_precondition b9 
111 nop  
112 __method_precondition_m3_do_on_table_3_precondition b9 
113 nop  
114 __method_precondition_m4_do_move_4_precondition b7 b9 
115 pick-up b7 
116 stack b7 b9 
117 __method_precondition_m1_do_put_on_1_precondition  
118 __method_precondition_m6_do_clear_6_precondition b3 
119 nop  
120 __method_precondition_m6_do_clear_6_precondition b7 
121 nop  
122 __method_precondition_m3_do_on_table_3_precondition b7 
123 nop  
124 __method_precondition_m4_do_move_4_precondition b3 b7 
125 pick-up b3 
126 stack b3 b7 
127 __method_precondition_m1_do_put_on_1_precondition  
128 __method_precondition_m6_do_clear_6_precondition b1 
129 nop  
130 __method_precondition_m6_do_clear_6_precondition b3 
131 nop  
132 __method_precondition_m3_do_on_table_3_precondition b3 
133 nop  
134 __method_precondition_m4_do_move_4_precondition b1 b3 
135 pick-up b1 
136 stack b1 b3 
root 201
137 do_move b12 b6  -> m4_do_move 83 84 85
138 do_on_table b4  -> m3_do_on_table 28 29
139 do_move b1 b3  -> m4_do_move 134 135 136
140 do_clear b4  -> m6_do_clear 1 2
141 do_clear b13  -> m7_do_clear 3 178 15 16
142 do_clear b1  -> m7_do_clear 6 189 9 10
143 do_on_table b6  -> m3_do_on_table 81 82
144 do_put_on b1 b3  -> m1_do_put_on 127 180 149 158 139
145 do_clear b9  -> m6_do_clear 98 99
146 do_clear b12  -> m6_do_clear 89 90
147 do_move b3 b7  -> m4_do_move 124 125 126
148 do_move b8 b4  -> m5_do_move 30 31 32
149 do_clear b3  -> m6_do_clear 130 131
150 do_on_table b12  -> m2_do_on_table 91 92 93
151 do_move b7 b9  -> m4_do_move 114 115 116
152 do_clear b2  -> m6_do_clear 100 101
153 do_clear b4  -> m6_do_clear 26 27
154 do_put_on b5 b10  -> m1_do_put_on 56 159 199 161 190
155 do_clear b9  -> m6_do_clear 110 111
156 do_move b9 b2  -> m4_do_move 104 105 106
157 do_on_table b9  -> m3_do_on_table 112 113
158 do_on_table b3  -> m3_do_on_table 132 133
159 do_clear b5  -> m6_do_clear 57 58
160 do_put_on b7 b9  -> m1_do_put_on 107 169 155 157 151
161 do_on_table b10  -> m3_do_on_table 61 62
162 do_put_on b10 b11  -> m1_do_put_on 43 200 167 168 183
163 do_clear b3  -> m6_do_clear 45 46
164 do_move b11 b8  -> m4_do_move 40 41 42
165 do_clear b6  -> m6_do_clear 67 68
166 do_put_on b12 b6  -> m1_do_put_on 76 191 174 143 137
167 do_clear b11  -> m6_do_clear 49 50
168 do_on_table b11  -> m3_do_on_table 51 52
169 do_clear b7  -> m6_do_clear 108 109
170 do_move b2 b12  -> m4_do_move 94 95 96
171 do_move b4 b13  -> m4_do_move 20 21 22
172 do_put_on b9 b2  -> m1_do_put_on 97 145 152 194 156
173 do_on_table b7  -> m3_do_on_table 122 123
174 do_clear b6  -> m6_do_clear 79 80
175 do_on_table b8  -> m3_do_on_table 38 39
176 do_clear b8  -> m6_do_clear 24 25
177 do_put_on b8 b4  -> m1_do_put_on 23 176 153 138 148
178 do_clear b9  -> m7_do_clear 4 188 13 14
179 do_clear b5  -> m6_do_clear 69 70
180 do_clear b1  -> m6_do_clear 128 129
181 do_put_on b4 b13  -> m1_do_put_on 0 140 141 185 171
182 do_put_on b3 b7  -> m1_do_put_on 117 195 184 173 147
183 do_move b10 b11  -> m4_do_move 53 54 55
184 do_clear b7  -> m6_do_clear 120 121
185 do_on_table b13  -> m2_do_on_table 17 18 19
186 do_on_table b5  -> m3_do_on_table 71 72
187 do_clear b2  -> m6_do_clear 87 88
188 do_clear b5  -> m7_do_clear 5 142 11 12
189 do_clear b7  -> m6_do_clear 7 8
190 do_move b5 b10  -> m4_do_move 63 64 65
191 do_clear b12  -> m6_do_clear 77 78
192 do_clear b8  -> m6_do_clear 36 37
193 do_clear b11  -> m6_do_clear 34 35
194 do_on_table b2  -> m3_do_on_table 102 103
195 do_clear b3  -> m6_do_clear 118 119
196 do_put_on b2 b12  -> m1_do_put_on 86 187 146 150 170
197 do_put_on b6 b5  -> m1_do_put_on 66 165 179 186 198
198 do_move b6 b5  -> m4_do_move 73 74 75
199 do_clear b10  -> m6_do_clear 59 60
200 do_clear b10  -> m7_do_clear 44 163 47 48
201 __artificialTopCompilation__top_1  -> __top_1 181 177 202 162 154 197 166 196 172 160 182 144
202 do_put_on b11 b8  -> m1_do_put_on 33 193 192 175 164

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 8.229 MEMPEAK_KBS 365496.32
