PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/barman/domain.hddl instances/barman/p10.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p10.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p10.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounded planning graph ... done in 526ms.
	Number of Grounded Actions 2363
	Number of Grounded Literals 372
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounding ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 372
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 348ms.
	Number of Grounded Actions 2341
	Number of Grounded Literals 343
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3895
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3895
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3895
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 169ms.
	Number of Grounded Actions 2341
	Number of Grounded Literals 343
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3895
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3635
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3635
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3635
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3635
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3635
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Tasks 2341 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767879ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767455
done
initial PDT has 279 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 279 leafs
SHOP LEAFS 93
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 175959
Size 175959 at 0/2341
Size 175156 at 500/2341
Size 144717 at 1000/2341
Size 44822 at 1500/2341
Size 20962 at 2000/2341
Size 20906
Size 20906 at 0/2341
Size 20898 at 500/2341
Size 11412 at 1000/2341
Size 11370 at 1500/2341
Size 11362 at 2000/2341
Size 11362
Size 11362 at 0/2341
Size 11362 at 500/2341
Size 3351 at 1000/2341
Size 3312 at 1500/2341
Size 3234 at 2000/2341
Size 3234
Size 3234 at 0/2341
Size 3234 at 500/2341
Size 3104 at 1000/2341
Size 3104 at 1500/2341
Size 3104 at 2000/2341
Size 3104
Size 3104 at 0/2341
Size 3104 at 500/2341
Size 3028 at 1000/2341
Size 3028 at 1500/2341
Size 3028 at 2000/2341
Size 3028
Size 3028 at 0/2341
Size 3028 at 500/2341
Size 3028 at 1000/2341
Size 3028 at 1500/2341
Size 3028 at 2000/2341
Size 3028
Invariant time: 2.057
Number of invariants: 3028
Invariant Clauses 847840
NUMBER OF CLAUSES 1393264
NUMBER OF STATE CLAUSES 1121419
NUMBER OF DECOMPOSITION CLAUSES 271845
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 80.49% 19.51% 0.0% 
NUMBER OF PATHS 279
Starting cryptominisat
Setting starttime of solver to 1603870651957
Command exited with non-zero status 10
0.72 0.01

Time command gave the following runtime for the solver: 730
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_8;1;3,2542 2542 _m2_get_first_ingredient_4
8;1;3 276 pathaction!3_8;1;3,767
Consider method^1_2,500 500 m0_do_cocktail_in_shot1
2 360 pathaction!1_2,1491
Consider method^2_2;2,1005 1005 m3_get_second_ingredient
2;2 385 pathaction!2_2;2,1604
Consider method^2_4;1,2535 2535 m2_get_first_ingredient
4;1 167 pathaction!2_4;1,555
Consider method^2_6;3,53 53 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 82 pathaction!2_6;3,2852
Consider method^2_6;2,1073 1073 m3_get_second_ingredient
6;2 20 pathaction!2_6;2,1610
Consider method^2_10;3,2943 2943 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot11,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 246 pathaction!2_10;3,2847
Consider method^3_11;1;2,1675 1675 _m2_get_first_ingredient_3
11;1;2 172 pathaction!3_11;1;2,1166
Consider method^1_5,1021 1021 m0_do_cocktail_in_shot1
5 160 pathaction!1_5,1496
Consider method^3_13;1;1,149 149 m9_do_fill_shot
13;1;1 357 pathaction!3_13;1;1,942
Consider method^3_7;1;2,76 76 _m2_get_first_ingredient_3
7;1;2 126 pathaction!3_7;1;2,1212
Consider method^3_3;2;1,3197 3197 _m3_get_second_ingredient_2
3;2;1 149 pathaction!3_3;2;1,745
Consider method^3_1;1;1,386 386 m9_do_fill_shot
1;1;1 199 pathaction!3_1;1;1,969
Consider method^3_8;1;2,76 76 _m2_get_first_ingredient_3
8;1;2 4 pathaction!3_8;1;2,1212
Consider method^3_8;2;1,241 241 _m3_get_second_ingredient_2
8;2;1 134 pathaction!3_8;2;1,723
Consider method^3_11;1;3,1320 1320 _m2_get_first_ingredient_4
11;1;3 287 pathaction!3_11;1;3,787
Consider method^3_11;2;1,526 526 _m3_get_second_ingredient_2
11;2;1 194 pathaction!3_11;2;1,631
Consider method^3_1;2;1,3517 3517 _m3_get_second_ingredient_2
1;2;1 189 pathaction!3_1;2;1,634
Consider method^2_11;3,3059 3059 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 92 pathaction!2_11;3,2853
Consider method^3_9;2;1,3602 3602 _m3_get_second_ingredient_2
9;2;1 330 pathaction!3_9;2;1,671
Consider method^3_8;2;2,1474 1474 _m3_get_second_ingredient_3
8;2;2 237 pathaction!3_8;2;2,2921
Consider method^3_10;3;1,642 642 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail2,right];m5_do_clean_shot;0;-1,-2>
10;3;1 206 pathaction!3_10;3;1,1058
Consider method^3_7;1;3,2542 2542 _m2_get_first_ingredient_4
7;1;3 125 pathaction!3_7;1;3,767
Consider method^2_1;3,3284 3284 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 317 pathaction!2_1;3,2846
Consider method^2_8;2,980 980 m3_get_second_ingredient
8;2 331 pathaction!2_8;2,1612
Consider method^2_13;1,1814 1814 m2_get_first_ingredient
13;1 340 pathaction!2_13;1,554
Consider method^1_12,1002 1002 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
12 29 pathaction!1_12,1065
Consider method^3_0;1;3,1320 1320 _m2_get_first_ingredient_4
0;1;3 72 pathaction!3_0;1;3,787
Consider method^2_7;1,3138 3138 m2_get_first_ingredient
7;1 146 pathaction!2_7;1,558
Consider method^3_4;1;1,2661 2661 m7_do_fill_shot
4;1;1 66 pathaction!3_4;1;1,1021
Consider method^3_1;1;2,973 973 _m2_get_first_ingredient_3
1;1;2 187 pathaction!3_1;1;2,1199
Consider method^2_0;1,83 83 m2_get_first_ingredient
0;1 252 pathaction!2_0;1,542
Consider method^2_9;3,2874 2874 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 401 pathaction!2_9;3,2851
Consider method^3_10;2;2,338 338 _m3_get_second_ingredient_3
10;2;2 279 pathaction!3_10;2;2,2939
Consider method^3_3;1;1,1257 1257 m9_do_fill_shot
3;1;1 298 pathaction!3_3;1;1,963
Consider method^1_4,2283 2283 m0_do_cocktail_in_shot1
4 325 pathaction!1_4,1501
Consider method^3_1;3;1,393 393 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2>
1;3;1 110 pathaction!3_1;3;1,1057
Consider method^3_3;3;1,951 951 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2>
3;3;1 14 pathaction!3_3;3;1,1060
Consider method^2_13;3,128 128 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot14,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
13;3 165 pathaction!2_13;3,2849
Consider method^2_3;3,977 977 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 31 pathaction!2_3;3,2844
Consider method^2_11;2,2155 2155 m3_get_second_ingredient
11;2 37 pathaction!2_11;2,1591
Consider method^3_6;3;1,1899 1899 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 93 pathaction!3_6;3;1,1050
Consider method^2_13;2,44 44 m3_get_second_ingredient
13;2 348 pathaction!2_13;2,1605
Consider method^2_5;3,1246 1246 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 291 pathaction!2_5;3,2850
Consider method^3_7;2;2,1412 1412 _m3_get_second_ingredient_3
7;2;2 127 pathaction!3_7;2;2,2926
Consider method^3_10;1;2,973 973 _m2_get_first_ingredient_3
10;1;2 324 pathaction!3_10;1;2,1199
Consider method^1_9,1140 1140 m0_do_cocktail_in_shot1
9 342 pathaction!1_9,1497
Consider method^3_2;1;2,58 58 _m2_get_first_ingredient_3
2;1;2 315 pathaction!3_2;1;2,1209
Consider method^3_8;1;1,356 356 m9_do_fill_shot
8;1;1 106 pathaction!3_8;1;1,939
Consider method^3_3;2;2,2593 2593 _m3_get_second_ingredient_3
3;2;2 274 pathaction!3_3;2;2,2872
Consider method^3_2;2;2,895 895 _m3_get_second_ingredient_3
2;2;2 253 pathaction!3_2;2;2,2941
Consider method^2_2;1,2240 2240 m2_get_first_ingredient
2;1 397 pathaction!2_2;1,553
Consider method^3_9;2;2,800 800 _m3_get_second_ingredient_3
9;2;2 210 pathaction!3_9;2;2,2949
Consider method^2_11;1,1620 1620 m2_get_first_ingredient
11;1 334 pathaction!2_11;1,540
Consider method^3_4;1;2,6 6 _m2_get_first_ingredient_3
4;1;2 218 pathaction!3_4;1;2,1202
Consider method^3_6;2;1,3609 3609 _m3_get_second_ingredient_2
6;2;1 181 pathaction!3_6;2;1,725
Consider method^1_8,374 374 m0_do_cocktail_in_shot1
8 74 pathaction!1_8,1494
Consider method^3_5;1;3,1568 1568 _m2_get_first_ingredient_4
5;1;3 344 pathaction!3_5;1;3,751
Consider method^3_11;1;1,2663 2663 m7_do_fill_shot
11;1;1 388 pathaction!3_11;1;1,959
Consider method^2_3;1,2923 2923 m2_get_first_ingredient
3;1 30 pathaction!2_3;1,544
Consider method^3_5;1;1,230 230 m9_do_fill_shot
5;1;1 400 pathaction!3_5;1;1,923
Consider method^2_10;2,664 664 m3_get_second_ingredient
10;2 112 pathaction!2_10;2,1597
Consider method^3_7;3;1,778 778 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 133 pathaction!3_7;3;1,1043
Consider method^3_0;2;2,2541 2541 _m3_get_second_ingredient_3
0;2;2 224 pathaction!3_0;2;2,2870
Consider method^3_4;2;2,1824 1824 _m3_get_second_ingredient_3
4;2;2 316 pathaction!3_4;2;2,2874
Consider method^3_10;2;1,1444 1444 _m3_get_second_ingredient_2
10;2;1 61 pathaction!3_10;2;1,647
Consider method^1_13,3016 3016 m0_do_cocktail_in_shot1
13 99 pathaction!1_13,1495
Consider method^3_2;3;1,604 604 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2>
2;3;1 289 pathaction!3_2;3;1,1056
Consider method^1_6,55 55 m0_do_cocktail_in_shot1
6 124 pathaction!1_6,1498
Consider method^3_5;3;1,510 510 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 141 pathaction!3_5;3;1,1061
Consider method^2_3;2,1754 1754 m3_get_second_ingredient
3;2 89 pathaction!2_3;2,1595
Consider method^3_5;2;2,2541 2541 _m3_get_second_ingredient_3
5;2;2 176 pathaction!3_5;2;2,2870
Consider method^2_0;3,2625 2625 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 387 pathaction!2_0;3,2856
Consider method^3_6;1;3,3477 3477 _m2_get_first_ingredient_4
6;1;3 152 pathaction!3_6;1;3,791
Consider method^3_1;2;2,2679 2679 _m3_get_second_ingredient_3
1;2;2 217 pathaction!3_1;2;2,2917
Consider method^3_6;1;2,2468 2468 _m2_get_first_ingredient_3
6;1;2 272 pathaction!3_6;1;2,1222
Consider method^3_0;2;1,516 516 _m3_get_second_ingredient_2
0;2;1 1 pathaction!3_0;2;1,676
Consider method^3_9;1;2,940 940 _m2_get_first_ingredient_3
9;1;2 7 pathaction!3_9;1;2,1214
Consider method^3_9;1;1,3514 3514 m7_do_fill_shot
9;1;1 376 pathaction!3_9;1;1,1017
Consider method^3_2;2;1,3609 3609 _m3_get_second_ingredient_2
2;2;1 383 pathaction!3_2;2;1,725
Consider method^2_9;1,2319 2319 m2_get_first_ingredient
9;1 77 pathaction!2_9;1,545
Consider method^3_2;1;1,3597 3597 m8_do_fill_shot
2;1;1 33 pathaction!3_2;1;1,942
Consider method^3_13;1;3,2228 2228 _m2_get_first_ingredient_4
13;1;3 191 pathaction!3_13;1;3,770
Consider method^3_0;1;2,1675 1675 _m2_get_first_ingredient_3
0;1;2 162 pathaction!3_0;1;2,1166
Consider method^3_13;1;2,58 58 _m2_get_first_ingredient_3
13;1;2 326 pathaction!3_13;1;2,1209
Consider method^3_11;3;1,647 647 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2>
11;3;1 168 pathaction!3_11;3;1,1039
Consider method^2_4;2,369 369 m3_get_second_ingredient
4;2 84 pathaction!2_4;2,1606
Consider method^3_6;1;1,3275 3275 m7_do_fill_shot
6;1;1 341 pathaction!3_6;1;1,963
Consider method^3_5;2;1,516 516 _m3_get_second_ingredient_2
5;2;1 362 pathaction!3_5;2;1,676
Consider method^1_11,2793 2793 m0_do_cocktail_in_shot1
11 107 pathaction!1_11,1499
Consider method^1_10,1694 1694 m0_do_cocktail_in_shot1
10 36 pathaction!1_10,1493
Consider method^2_1;2,2148 2148 m3_get_second_ingredient
1;2 83 pathaction!2_1;2,1598
Consider method^2_12;1,3254 3254 m9_do_fill_shot
12;1 59 pathaction!2_12;1,959
Consider method^3_13;3;1,2742 2742 <_m4_serve_shot_2;do_clean_shot[shot14,cocktail8,right];m5_do_clean_shot;0;-1,-2>
13;3;1 132 pathaction!3_13;3;1,1051
Consider method^3_11;2;2,333 333 _m3_get_second_ingredient_3
11;2;2 171 pathaction!3_11;2;2,2964
Consider method^2_9;2,1628 1628 m3_get_second_ingredient
9;2 102 pathaction!2_9;2,1596
Consider method^1_1,3123 3123 m0_do_cocktail_in_shot1
1 256 pathaction!1_1,1492
Consider method^0_,3634 3634 __top_1
 391 pathaction!0_,3142
Consider method^3_8;3;1,3329 3329 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2>
8;3;1 292 pathaction!3_8;3;1,1049
Consider method^2_8;1,251 251 m2_get_first_ingredient
8;1 365 pathaction!2_8;1,561
Consider method^3_7;2;1,164 164 _m3_get_second_ingredient_2
7;2;1 87 pathaction!3_7;2;1,677
Consider method^3_13;2;2,800 800 _m3_get_second_ingredient_3
13;2;2 327 pathaction!3_13;2;2,2949
Consider method^3_13;2;1,3602 3602 _m3_get_second_ingredient_2
13;2;1 139 pathaction!3_13;2;1,671
Consider method^3_0;1;1,3207 3207 m8_do_fill_shot
0;1;1 56 pathaction!3_0;1;1,959
Consider method^3_4;1;3,271 271 _m2_get_first_ingredient_4
4;1;3 202 pathaction!3_4;1;3,849
Consider method^2_10;1,2739 2739 m2_get_first_ingredient
10;1 299 pathaction!2_10;1,546
Consider method^2_7;3,912 912 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 156 pathaction!2_7;3,2854
Consider method^1_7,1860 1860 m0_do_cocktail_in_shot1
7 200 pathaction!1_7,1500
Consider method^3_4;2;1,2976 2976 _m3_get_second_ingredient_2
4;2;1 374 pathaction!3_4;2;1,684
Consider method^3_3;1;2,2468 2468 _m2_get_first_ingredient_3
3;1;2 95 pathaction!3_3;1;2,1222
Consider method^1_0,2176 2176 m0_do_cocktail_in_shot1
0 157 pathaction!1_0,1502
Consider method^3_2;1;3,2228 2228 _m2_get_first_ingredient_4
2;1;3 349 pathaction!3_2;1;3,770
Consider method^2_8;3,537 537 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 345 pathaction!2_8;3,2848
Consider method^2_4;3,1114 1114 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 48 pathaction!2_4;3,2855
Consider method^3_6;2;2,895 895 _m3_get_second_ingredient_3
6;2;2 244 pathaction!3_6;2;2,2941
Consider method^3_0;3;1,1482 1482 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 38 pathaction!3_0;3;1,1053
Consider method^3_7;1;1,2839 2839 m9_do_fill_shot
7;1;1 154 pathaction!3_7;1;1,939
Consider method^2_1;1,1542 1542 m2_get_first_ingredient
1;1 251 pathaction!2_1;1,547
Consider method^2_6;1,2604 2604 m2_get_first_ingredient
6;1 114 pathaction!2_6;1,559
Consider method^3_10;1;1,2092 2092 m9_do_fill_shot
10;1;1 18 pathaction!3_10;1;1,969
Consider method^2_5;1,3430 3430 m2_get_first_ingredient
5;1 190 pathaction!2_5;1,557
Consider method^3_9;1;3,2227 2227 _m2_get_first_ingredient_4
9;1;3 243 pathaction!3_9;1;3,845
Consider method^3_3;1;3,3477 3477 _m2_get_first_ingredient_4
3;1;3 6 pathaction!3_3;1;3,791
Consider method^2_7;2,3223 3223 m3_get_second_ingredient
7;2 153 pathaction!2_7;2,1609
Consider method^3_10;1;3,1701 1701 _m2_get_first_ingredient_4
10;1;3 402 pathaction!3_10;1;3,797
Consider method^3_9;3;1,2095 2095 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2>
9;3;1 216 pathaction!3_9;3;1,1062
Consider method^1_3,1602 1602 m0_do_cocktail_in_shot1
3 50 pathaction!1_3,1490
Consider method^3_5;1;2,484 484 _m2_get_first_ingredient_3
5;1;2 241 pathaction!3_5;1;2,1237
Consider method^3_4;3;1,159 159 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 336 pathaction!3_4;3;1,1040
Consider method^2_5;2,2509 2509 m3_get_second_ingredient
5;2 375 pathaction!2_5;2,1608
Consider method^2_0;2,1347 1347 m3_get_second_ingredient
0;2 249 pathaction!2_0;2,1593
Consider method^3_1;1;3,1701 1701 _m2_get_first_ingredient_4
1;1;3 226 pathaction!3_1;1;3,797
Consider method^2_2;3,1301 1301 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 242 pathaction!2_2;3,2845


CHECKING primitive solution of length 273 ...
true 158 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 254 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot13;]
true 356 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4;]
true 164 grasp[right,shot13;]
true 258 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 305 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 378 clean-shot[shot13,ingredient4,right,left;]
true 184 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,right,shot13;]
true 161 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 394 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2;]
true 321 leave[right,shot13;]
true 138 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3;]
true 377 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 97 nop[;]
true 308 grasp[left,shaker1;]
true 230 shake[cocktail5,ingredient4,ingredient3,shaker1,left,right;]
true 32 pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1;]
true 41 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 135 clean-shaker[left,right,shaker1;]
true 403 leave[left,shaker1;]
true 113 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 131 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot13;]
true 319 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient3,dispenser1;]
true 269 grasp[left,shot13;]
true 212 clean-shot[shot13,ingredient3,left,right;]
true 60 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 118 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 148 clean-shot[shot13,ingredient1,left,right;]
true 195 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot13;]
true 137 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 144 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 62 leave[left,shot13;]
true 350 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient3;]
true 355 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 211 nop[;]
true 43 grasp[left,shaker1;]
true 68 shake[cocktail10,ingredient1,ingredient3,shaker1,left,right;]
true 266 pour-shaker-to-shot[cocktail10,shot2,left,shaker1,l2,l1;]
true 303 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 55 clean-shaker[left,right,shaker1;]
true 264 leave[left,shaker1;]
true 42 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 310 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot15;]
true 178 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4;]
true 119 grasp[left,shot15;]
true 295 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 245 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 205 clean-shot[shot15,ingredient4,left,right;]
true 69 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,left,shot15;]
true 209 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 405 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 122 leave[left,shot15;]
true 78 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient2;]
true 35 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 28 nop[;]
true 313 grasp[left,shaker1;]
true 142 shake[cocktail9,ingredient4,ingredient2,shaker1,left,right;]
true 286 pour-shaker-to-shot[cocktail9,shot3,left,shaker1,l2,l1;]
true 3 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 85 clean-shaker[left,right,shaker1;]
true 203 leave[left,shaker1;]
true 233 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 368 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot15;]
true 273 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient2,dispenser3;]
true 104 grasp[left,shot15;]
true 318 clean-shot[shot15,ingredient2,left,right;]
true 333 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 177 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 2 clean-shot[shot15,ingredient3,left,right;]
true 332 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,left,shot15;]
true 259 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 79 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,left,l1,l2;]
true 207 leave[left,shot15;]
true 19 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1;]
true 257 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 335 nop[;]
true 197 grasp[left,shaker1;]
true 115 shake[cocktail1,ingredient3,ingredient1,shaker1,left,right;]
true 192 pour-shaker-to-shot[cocktail1,shot4,left,shaker1,l2,l1;]
true 366 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 359 clean-shaker[left,right,shaker1;]
true 294 leave[left,shaker1;]
true 231 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 337 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot15;]
true 8 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient1,dispenser1;]
true 213 grasp[right,shot15;]
true 354 refill-shot[shot15,ingredient1,right,left,dispenser1;]
true 371 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1;]
true 361 clean-shot[shot15,ingredient1,right,left;]
true 182 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,right,shot15;]
true 111 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 302 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 351 leave[right,shot15;]
true 70 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient3;]
true 404 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 51 nop[;]
true 386 grasp[left,shaker1;]
true 81 shake[cocktail3,ingredient1,ingredient3,shaker1,left,right;]
true 270 pour-shaker-to-shot[cocktail3,shot5,left,shaker1,l2,l1;]
true 271 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 260 clean-shaker[left,right,shaker1;]
true 54 leave[left,shaker1;]
true 39 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 96 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot13;]
true 238 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2;]
true 309 grasp[right,shot13;]
true 196 clean-shot[shot13,ingredient3,right,left;]
true 263 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 12 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,right,l0,l1;]
true 34 clean-shot[shot13,ingredient2,right,left;]
true 312 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,right,shot13;]
true 175 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 64 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2;]
true 91 leave[right,shot13;]
true 130 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3;]
true 306 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 123 nop[;]
true 283 grasp[left,shaker1;]
true 204 shake[cocktail6,ingredient2,ingredient3,shaker1,left,right;]
true 346 pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1;]
true 27 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 166 clean-shaker[left,right,shaker1;]
true 395 leave[left,shaker1;]
true 75 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 52 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot15;]
true 186 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient3,dispenser3;]
true 215 grasp[left,shot15;]
true 47 refill-shot[shot15,ingredient3,left,right,dispenser3;]
true 284 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 225 clean-shot[shot15,ingredient3,left,right;]
true 173 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot15;]
true 147 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 151 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 347 leave[left,shot15;]
true 155 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2;]
true 301 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 40 nop[;]
true 280 grasp[left,shaker1;]
true 380 shake[cocktail8,ingredient3,ingredient2,shaker1,left,right;]
true 208 pour-shaker-to-shot[cocktail8,shot7,left,shaker1,l2,l1;]
true 13 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 293 clean-shaker[left,right,shaker1;]
true 239 leave[left,shaker1;]
true 367 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 65 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13;]
true 227 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient3,dispenser4;]
true 267 grasp[left,shot13;]
true 364 clean-shot[shot13,ingredient3,left,right;]
true 236 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 94 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1;]
true 63 clean-shot[shot13,ingredient4,left,right;]
true 0 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,left,shot13;]
true 285 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 90 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 150 leave[left,shot13;]
true 255 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient1;]
true 297 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 46 nop[;]
true 223 grasp[right,shaker1;]
true 275 shake[cocktail2,ingredient4,ingredient1,shaker1,right,left;]
true 67 pour-shaker-to-shot[cocktail2,shot8,right,shaker1,l2,l1;]
true 219 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 372 clean-shaker[right,left,shaker1;]
true 396 leave[right,shaker1;]
true 86 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 248 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot13;]
true 363 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient1,dispenser4;]
true 23 grasp[left,shot13;]
true 288 clean-shot[shot13,ingredient1,left,right;]
true 103 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 300 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1;]
true 265 clean-shot[shot13,ingredient4,left,right;]
true 10 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot13;]
true 373 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 392 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 193 leave[left,shot13;]
true 45 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2;]
true 247 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 24 nop[;]
true 352 grasp[left,shaker1;]
true 338 shake[cocktail11,ingredient4,ingredient2,shaker1,left,right;]
true 136 pour-shaker-to-shot[cocktail11,shot9,left,shaker1,l2,l1;]
true 389 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 53 clean-shaker[left,right,shaker1;]
true 76 leave[left,shaker1;]
true 101 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 261 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot15;]
true 250 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient2,dispenser2;]
true 339 grasp[left,shot15;]
true 17 refill-shot[shot15,ingredient2,left,right,dispenser2;]
true 26 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1;]
true 328 clean-shot[shot15,ingredient2,left,right;]
true 221 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,left,shot15;]
true 11 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 304 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 129 leave[left,shot15;]
true 329 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient3;]
true 109 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 290 nop[;]
true 268 grasp[left,shaker1;]
true 398 shake[cocktail7,ingredient2,ingredient3,shaker1,left,right;]
true 222 pour-shaker-to-shot[cocktail7,shot10,left,shaker1,l2,l1;]
true 80 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 25 clean-shaker[left,right,shaker1;]
true 390 leave[left,shaker1;]
true 22 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 188 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot13;]
true 232 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1;]
true 393 grasp[left,shot13;]
true 399 clean-shot[shot13,ingredient2,left,right;]
true 73 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 185 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 369 clean-shot[shot13,ingredient1,left,right;]
true 128 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,left,shot13;]
true 296 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 240 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2;]
true 307 leave[left,shot13;]
true 343 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient4;]
true 116 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 120 nop[;]
true 370 grasp[left,shaker1;]
true 100 shake[cocktail4,ingredient1,ingredient4,shaker1,left,right;]
true 121 pour-shaker-to-shot[cocktail4,shot11,left,shaker1,l2,l1;]
true 311 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 140 clean-shaker[left,right,shaker1;]
true 382 leave[left,shaker1;]
true 15 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right;]
true 282 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot13;]
true 98 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient4,dispenser4;]
true 9 grasp[right,shot13;]
true 174 refill-shot[shot13,ingredient4,right,left,dispenser4;]
true 381 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 71 clean-shot[shot13,ingredient4,right,left;]
true 169 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,right,shot13;]
true 281 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 163 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2;]
true 57 leave[right,shot13;]
true 235 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2;]
true 170 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 88 nop[;]
true 108 grasp[right,shaker1;]
true 58 shake[cocktail11,ingredient4,ingredient2,shaker1,right,left;]
true 277 pour-shaker-to-shot[cocktail11,shot12,right,shaker1,l2,l1;]
true 179 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 16 clean-shaker[right,left,shaker1;]
true 198 leave[right,shaker1;]
true 5 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 180 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient2,dispenser4;]
true 183 grasp[right,shot13;]
true 201 clean-shot[shot13,ingredient2,right,left;]
true 234 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 214 leave[right,shot13;]
true 229 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left;]
true 143 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot15;]
true 145 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient3,dispenser4;]
true 117 grasp[left,shot15;]
true 262 clean-shot[shot15,ingredient3,left,right;]
true 49 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 220 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 228 clean-shot[shot15,ingredient4,left,right;]
true 159 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,left,shot15;]
true 353 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 322 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 278 leave[left,shot15;]
true 320 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3;]
true 323 __method_precondition_m5_do_clean_shot_5_precondition[shot14;]
true 105 nop[;]
true 379 grasp[left,shaker1;]
true 314 shake[cocktail5,ingredient4,ingredient3,shaker1,left,right;]
true 384 pour-shaker-to-shot[cocktail5,shot14,left,shaker1,l2,l1;]
true 358 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 21 clean-shaker[left,right,shaker1;]
true 44 leave[left,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 450902568
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 343
number of actions                    = 3143
number of abstract actions           = 802
number of primitive actions          = 2341
number of methods                    = 3635
number of primitive shop actions     = 932
number of primitive non-shop actions = 1409
size of largest method               = 14
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 218756
number of clauses               = 1393264
average size of clauses         = 2.4037066916248464
number of assert                = 156
number of horn                  = 1220914
K offset                        = 0
K chosen value                  = 4
state formula                   = 1121419
method children clauses         = 0
number of paths                 = 279
maximum plan length             = 279
number of decomposition clauses = 271845
number of ordering clauses      = 0
number of state clauses         = 1121419
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 17025
============ parsing ============
total                         = 1099
file parser                   = 601
sort expansion                = 224
closed world assumption       = 130
inherit preconditions         = 0
shop methods                  = 27
eliminate identical variables = 56
strip domain of hybridity     = 1
flatten formula               = 59
============ preprocessing ============
total                                      = 6256
compile negative preconditions             = 54
compile unit methods                       = 0
split parameter                            = 59
expand choiceless abstract tasks           = 577
compile methods with identical tasks       = 34
removing unnecessary predicates            = 1143
lifted reachabiltiy analysis               = 78
grounded planning graph analysis           = 1593
grounded task decomposition graph analysis = 2124
grounding                                  = 557
create artificial top task                 = 21
============ search preparation ============
compute state invariants = 2261
============ sat ============
total                                        = 7011
generate formula                             = 5442
generate path decomposition tree             = 388
normalise path decomposition tree            = 151
sog optimisation                             = 119
translate path decomposition tree to clauses = 756
generate state formula                       = 5353
generate state invariant formula             = 559
transform to DIMACS                          = 482
SAT solver                                   = 730
SAT solver for K=0004                        = 730

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2341";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="802";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="450902568";"40 sat:20:state formula"="1121419";"40 sat:01:number of variables"="218756";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="279";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="3635";"30 problem:07:number of primitive shop actions"="932";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3143";"30 problem:08:number of primitive non-shop actions"="1409";"30 problem:02:number of predicates"="343";"40 sat:03:number of horn"="1220914";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="14";"40 sat:03:average size of clauses"="2.4037066916248464";"40 sat:02:number of clauses"="1393264";"40 sat:50:number of state clauses"="1121419";"40 sat:03:number of assert"="156";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="279";"40 sat:50:number of decomposition clauses"="271845";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="601";"01 parsing:08:flatten formula"="59";"40 sat:41:SAT solver for K=0004"="730";"40 sat:00:total"="7011";"40 sat:16:generate state formula"="5353";"40 sat:20:transform to DIMACS"="482";"40 sat:11:generate path decomposition tree"="388";"02 preprocessing:07:compile methods with identical tasks"="34";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="1143";"01 parsing:03:closed world assumption"="130";"02 preprocessing:11:lifted reachabiltiy analysis"="78";"01 parsing:02:sort expansion"="224";"40 sat:12:normalise path decomposition tree"="151";"40 sat:40:SAT solver"="730";"01 parsing:00:total"="1099";"40 sat:10:generate formula"="5442";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="54";"00 total:00:total"="17025";"40 sat:13:sog optimisation"="119";"02 preprocessing:12:grounded planning graph analysis"="1593";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="2124";"02 preprocessing:04:split parameter"="59";"01 parsing:05:shop methods"="27";"10 search preparation:02:compute state invariants"="2261";"01 parsing:06:eliminate identical variables"="56";"40 sat:15:translate path decomposition tree to clauses"="756";"02 preprocessing:05:expand choiceless abstract tasks"="577";"40 sat:17:generate state invariant formula"="559";"02 preprocessing:00:total"="6256";"02 preprocessing:99:create artificial top task"="21";"02 preprocessing:84:grounding"="557"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4];grasp[right,shot13];fill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1];clean-shot[shot13,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,right,shot13];fill-shot[shot13,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail5,ingredient4,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient3,dispenser1];grasp[left,shot13];clean-shot[shot13,ingredient3,left,right];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1];clean-shot[shot13,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[left,shaker1];shake[cocktail10,ingredient1,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot2,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4];grasp[left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1];clean-shot[shot15,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,left,shot15];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[left,shaker1];shake[cocktail9,ingredient4,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail9,shot3,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail9,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient2,dispenser3];grasp[left,shot15];clean-shot[shot15,ingredient2,left,right];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1];clean-shot[shot15,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,left,shot15];fill-shot[shot15,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot15,ingredient1,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail1,ingredient3,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient1,dispenser1];grasp[right,shot15];refill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1];clean-shot[shot15,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,right,shot15];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail3,ingredient1,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2];grasp[right,shot13];clean-shot[shot13,ingredient3,right,left];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,right,l0,l1];clean-shot[shot13,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,right,shot13];fill-shot[shot13,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail6,ingredient2,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient3,dispenser3];grasp[left,shot15];refill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1];clean-shot[shot15,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot15];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail8,ingredient3,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail8,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail8,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient3,dispenser4];grasp[left,shot13];clean-shot[shot13,ingredient3,left,right];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1];clean-shot[shot13,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,left,shot13];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail2,ingredient4,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient1,dispenser4];grasp[left,shot13];clean-shot[shot13,ingredient1,left,right];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1];clean-shot[shot13,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot13];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[left,shaker1];shake[cocktail11,ingredient4,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail11,shot9,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail11,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient2,dispenser2];grasp[left,shot15];refill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1];clean-shot[shot15,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail7,ingredient2,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1];grasp[left,shot13];clean-shot[shot13,ingredient2,left,right];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1];clean-shot[shot13,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,left,shot13];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[left,shaker1];shake[cocktail4,ingredient1,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail4,shot11,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail4,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot13];__method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient4,dispenser4];grasp[right,shot13];refill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1];clean-shot[shot13,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,right,shot13];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[right,shaker1];shake[cocktail11,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot12,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient2,dispenser4];grasp[right,shot13];clean-shot[shot13,ingredient2,right,left];fill-shot[shot13,ingredient4,right,left,dispenser4];leave[right,shot13];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient3,dispenser4];grasp[left,shot15];clean-shot[shot15,ingredient3,left,right];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1];clean-shot[shot15,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot14];nop[];grasp[left,shaker1];shake[cocktail5,ingredient4,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot14,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 right 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient4 shot13 
2 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser4 ingredient4 
3 grasp right shot13 
4 fill-shot shot13 ingredient4 right left dispenser4 
5 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 
6 clean-shot shot13 ingredient4 right left 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient3 right shot13 
8 fill-shot shot13 ingredient3 right left dispenser3 
9 pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 
10 leave right shot13 
11 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient4 ingredient3 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail5 ingredient4 ingredient3 shaker1 left right 
16 pour-shaker-to-shot cocktail5 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail5 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 left 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot13 
22 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient3 dispenser1 
23 grasp left shot13 
24 clean-shot shot13 ingredient3 left right 
25 fill-shot shot13 ingredient1 left right dispenser1 
26 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 left l0 l1 
27 clean-shot shot13 ingredient1 left right 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient3 left shot13 
29 fill-shot shot13 ingredient3 left right dispenser3 
30 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
31 leave left shot13 
32 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient3 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp left shaker1 
36 shake cocktail10 ingredient1 ingredient3 shaker1 left right 
37 pour-shaker-to-shot cocktail10 shot2 left shaker1 l2 l1 
38 empty-shaker left shaker1 cocktail10 l1 l0 
39 clean-shaker left right shaker1 
40 leave left shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient4 shot15 
43 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser4 ingredient4 
44 grasp left shot15 
45 fill-shot shot15 ingredient4 left right dispenser4 
46 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 
47 clean-shot shot15 ingredient4 left right 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient2 left shot15 
49 fill-shot shot15 ingredient2 left right dispenser2 
50 pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 
51 leave left shot15 
52 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient4 ingredient2 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp left shaker1 
56 shake cocktail9 ingredient4 ingredient2 shaker1 left right 
57 pour-shaker-to-shot cocktail9 shot3 left shaker1 l2 l1 
58 empty-shaker left shaker1 cocktail9 l1 l0 
59 clean-shaker left right shaker1 
60 leave left shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient3 shot15 
63 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient3 ingredient2 dispenser3 
64 grasp left shot15 
65 clean-shot shot15 ingredient2 left right 
66 fill-shot shot15 ingredient3 left right dispenser3 
67 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 
68 clean-shot shot15 ingredient3 left right 
69 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient1 left shot15 
70 fill-shot shot15 ingredient1 left right dispenser1 
71 pour-shot-to-used-shaker shot15 ingredient1 shaker1 left l1 l2 
72 leave left shot15 
73 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient3 ingredient1 
74 __method_precondition_m5_do_clean_shot_5_precondition shot4 
75 nop  
76 grasp left shaker1 
77 shake cocktail1 ingredient3 ingredient1 shaker1 left right 
78 pour-shaker-to-shot cocktail1 shot4 left shaker1 l2 l1 
79 empty-shaker left shaker1 cocktail1 l1 l0 
80 clean-shaker left right shaker1 
81 leave left shaker1 
82 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 right 
83 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient1 shot15 
84 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient1 dispenser1 
85 grasp right shot15 
86 refill-shot shot15 ingredient1 right left dispenser1 
87 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 
88 clean-shot shot15 ingredient1 right left 
89 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient3 right shot15 
90 fill-shot shot15 ingredient3 right left dispenser3 
91 pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 
92 leave right shot15 
93 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient1 ingredient3 
94 __method_precondition_m5_do_clean_shot_5_precondition shot5 
95 nop  
96 grasp left shaker1 
97 shake cocktail3 ingredient1 ingredient3 shaker1 left right 
98 pour-shaker-to-shot cocktail3 shot5 left shaker1 l2 l1 
99 empty-shaker left shaker1 cocktail3 l1 l0 
100 clean-shaker left right shaker1 
101 leave left shaker1 
102 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 right 
103 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient2 shot13 
104 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient2 ingredient3 dispenser2 
105 grasp right shot13 
106 clean-shot shot13 ingredient3 right left 
107 fill-shot shot13 ingredient2 right left dispenser2 
108 pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 
109 clean-shot shot13 ingredient2 right left 
110 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient3 right shot13 
111 fill-shot shot13 ingredient3 right left dispenser3 
112 pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 
113 leave right shot13 
114 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient2 ingredient3 
115 __method_precondition_m5_do_clean_shot_5_precondition shot6 
116 nop  
117 grasp left shaker1 
118 shake cocktail6 ingredient2 ingredient3 shaker1 left right 
119 pour-shaker-to-shot cocktail6 shot6 left shaker1 l2 l1 
120 empty-shaker left shaker1 cocktail6 l1 l0 
121 clean-shaker left right shaker1 
122 leave left shaker1 
123 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
124 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot15 
125 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient3 dispenser3 
126 grasp left shot15 
127 refill-shot shot15 ingredient3 left right dispenser3 
128 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 
129 clean-shot shot15 ingredient3 left right 
130 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient2 left shot15 
131 fill-shot shot15 ingredient2 left right dispenser2 
132 pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 
133 leave left shot15 
134 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient2 
135 __method_precondition_m5_do_clean_shot_5_precondition shot7 
136 nop  
137 grasp left shaker1 
138 shake cocktail8 ingredient3 ingredient2 shaker1 left right 
139 pour-shaker-to-shot cocktail8 shot7 left shaker1 l2 l1 
140 empty-shaker left shaker1 cocktail8 l1 l0 
141 clean-shaker left right shaker1 
142 leave left shaker1 
143 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 left 
144 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot13 
145 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient3 dispenser4 
146 grasp left shot13 
147 clean-shot shot13 ingredient3 left right 
148 fill-shot shot13 ingredient4 left right dispenser4 
149 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 left l0 l1 
150 clean-shot shot13 ingredient4 left right 
151 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient1 left shot13 
152 fill-shot shot13 ingredient1 left right dispenser1 
153 pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 
154 leave left shot13 
155 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient1 
156 __method_precondition_m5_do_clean_shot_5_precondition shot8 
157 nop  
158 grasp right shaker1 
159 shake cocktail2 ingredient4 ingredient1 shaker1 right left 
160 pour-shaker-to-shot cocktail2 shot8 right shaker1 l2 l1 
161 empty-shaker right shaker1 cocktail2 l1 l0 
162 clean-shaker right left shaker1 
163 leave right shaker1 
164 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 left 
165 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient4 shot13 
166 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient1 dispenser4 
167 grasp left shot13 
168 clean-shot shot13 ingredient1 left right 
169 fill-shot shot13 ingredient4 left right dispenser4 
170 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 left l0 l1 
171 clean-shot shot13 ingredient4 left right 
172 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient2 left shot13 
173 fill-shot shot13 ingredient2 left right dispenser2 
174 pour-shot-to-used-shaker shot13 ingredient2 shaker1 left l1 l2 
175 leave left shot13 
176 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient4 ingredient2 
177 __method_precondition_m5_do_clean_shot_5_precondition shot9 
178 nop  
179 grasp left shaker1 
180 shake cocktail11 ingredient4 ingredient2 shaker1 left right 
181 pour-shaker-to-shot cocktail11 shot9 left shaker1 l2 l1 
182 empty-shaker left shaker1 cocktail11 l1 l0 
183 clean-shaker left right shaker1 
184 leave left shaker1 
185 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
186 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient2 shot15 
187 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient2 dispenser2 
188 grasp left shot15 
189 refill-shot shot15 ingredient2 left right dispenser2 
190 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 
191 clean-shot shot15 ingredient2 left right 
192 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient3 left shot15 
193 fill-shot shot15 ingredient3 left right dispenser3 
194 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
195 leave left shot15 
196 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient2 ingredient3 
197 __method_precondition_m5_do_clean_shot_5_precondition shot10 
198 nop  
199 grasp left shaker1 
200 shake cocktail7 ingredient2 ingredient3 shaker1 left right 
201 pour-shaker-to-shot cocktail7 shot10 left shaker1 l2 l1 
202 empty-shaker left shaker1 cocktail7 l1 l0 
203 clean-shaker left right shaker1 
204 leave left shaker1 
205 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
206 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient1 shot13 
207 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient2 dispenser1 
208 grasp left shot13 
209 clean-shot shot13 ingredient2 left right 
210 fill-shot shot13 ingredient1 left right dispenser1 
211 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 left l0 l1 
212 clean-shot shot13 ingredient1 left right 
213 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient4 left shot13 
214 fill-shot shot13 ingredient4 left right dispenser4 
215 pour-shot-to-used-shaker shot13 ingredient4 shaker1 left l1 l2 
216 leave left shot13 
217 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient1 ingredient4 
218 __method_precondition_m5_do_clean_shot_5_precondition shot11 
219 nop  
220 grasp left shaker1 
221 shake cocktail4 ingredient1 ingredient4 shaker1 left right 
222 pour-shaker-to-shot cocktail4 shot11 left shaker1 l2 l1 
223 empty-shaker left shaker1 cocktail4 l1 l0 
224 clean-shaker left right shaker1 
225 leave left shaker1 
226 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 right 
227 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient4 shot13 
228 __method_precondition_m7_do_fill_shot_7_precondition shot13 ingredient4 dispenser4 
229 grasp right shot13 
230 refill-shot shot13 ingredient4 right left dispenser4 
231 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 
232 clean-shot shot13 ingredient4 right left 
233 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient2 right shot13 
234 fill-shot shot13 ingredient2 right left dispenser2 
235 pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 
236 leave right shot13 
237 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient4 ingredient2 
238 __method_precondition_m5_do_clean_shot_5_precondition shot12 
239 nop  
240 grasp right shaker1 
241 shake cocktail11 ingredient4 ingredient2 shaker1 right left 
242 pour-shaker-to-shot cocktail11 shot12 right shaker1 l2 l1 
243 empty-shaker right shaker1 cocktail11 l1 l0 
244 clean-shaker right left shaker1 
245 leave right shaker1 
246 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser4 ingredient4 
247 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient2 dispenser4 
248 grasp right shot13 
249 clean-shot shot13 ingredient2 right left 
250 fill-shot shot13 ingredient4 right left dispenser4 
251 leave right shot13 
252 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot14 left 
253 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient4 shot15 
254 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient4 ingredient3 dispenser4 
255 grasp left shot15 
256 clean-shot shot15 ingredient3 left right 
257 fill-shot shot15 ingredient4 left right dispenser4 
258 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 
259 clean-shot shot15 ingredient4 left right 
260 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient3 left shot15 
261 fill-shot shot15 ingredient3 left right dispenser3 
262 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
263 leave left shot15 
264 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient4 ingredient3 
265 __method_precondition_m5_do_clean_shot_5_precondition shot14 
266 nop  
267 grasp left shaker1 
268 shake cocktail5 ingredient4 ingredient3 shaker1 left right 
269 pour-shaker-to-shot cocktail5 shot14 left shaker1 l2 l1 
270 empty-shaker left shaker1 cocktail5 l1 l0 
271 clean-shaker left right shaker1 
272 leave left shaker1 
root 394
273 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 1 297 279 321
274 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 71
275 get_first_ingredient cocktail9 left  -> m2_get_first_ingredient 42 402 348 336
276 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 right  -> _m3_get_second_ingredient_2 8
277 get_first_ingredient cocktail11 right  -> m2_get_first_ingredient 227 369 337 306
278 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 9
279 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 5
280 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 28 351 294 31
281 do_cocktail_in_shot1 shot10 cocktail7  -> m0_do_cocktail_in_shot1 185 295 332 338
282 do_cocktail_in_shot1 shot6 cocktail6  -> m0_do_cocktail_in_shot1 102 328 349 302
283 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 149
284 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2> 74 75
285 do_clean_shot_m4_serve_shot_sip_2 shot9 right  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2> 177 178
286 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient2 right  -> _m2_get_first_ingredient_4 109
287 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 206 335 347 320
288 do_fill_shot shot15 ingredient3 left  -> m9_do_fill_shot 63 64 65 66
289 get_second_ingredient cocktail3 right  -> m3_get_second_ingredient 89 293 390 92
290 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 21 292 362 305
291 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 124 296 354 304
292 do_fill_shot shot13 ingredient1 left  -> m9_do_fill_shot 22 23 24 25
293 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 right  -> _m3_get_second_ingredient_2 90
294 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 30
295 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 186 301 334 380
296 do_fill_shot shot15 ingredient3 left  -> m7_do_fill_shot 125 126 127
297 do_fill_shot shot13 ingredient4 right  -> m8_do_fill_shot 2 3 4
298 do_cocktail_in_shot1 shot9 cocktail11  -> m0_do_cocktail_in_shot1 164 378 366 333
299 serve_shot shot1 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 309 14 15 16 17 18 19
300 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 135 136
301 do_fill_shot shot15 ingredient2 left  -> m7_do_fill_shot 187 188 189
302 serve_shot shot6 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 114 365 117 118 119 120 121 122
303 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 194
304 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 left  -> _m2_get_first_ingredient_4 129
305 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 left  -> _m2_get_first_ingredient_4 27
306 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 right  -> _m2_get_first_ingredient_4 232
307 do_cocktail_in_shot1 shot11 cocktail4  -> m0_do_cocktail_in_shot1 205 287 352 339
308 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 left  -> _m3_get_second_ingredient_2 173
309 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
310 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient4 left  -> _m3_get_second_ingredient_2 214
311 do_fill_shot shot13 ingredient4 left  -> m9_do_fill_shot 145 146 147 148
312 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 130 340 317 133
313 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 170
314 get_second_ingredient cocktail2 left  -> m3_get_second_ingredient 151 322 392 154
315 do_fill_shot shot15 ingredient4 left  -> m9_do_fill_shot 254 255 256 257
316 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 87
317 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 132
318 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 174
319 do_cocktail_in_shot1 shot8 cocktail2  -> m0_do_cocktail_in_shot1 143 385 314 330
320 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 left  -> _m2_get_first_ingredient_4 212
321 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 right  -> _m2_get_first_ingredient_4 6
322 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 left  -> _m3_get_second_ingredient_2 152
323 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 right  -> _m3_get_second_ingredient_2 234
324 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 left  -> _m2_get_first_ingredient_4 171
325 do_cocktail_in_shot1 shot14 cocktail5  -> m0_do_cocktail_in_shot1 252 383 346 358
326 do_clean_shot_m4_serve_shot_sip_2 shot3 right  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2> 53 54
327 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 156 157
328 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 103 386 360 286
329 serve_shot shot5 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 93 393 96 97 98 99 100 101
330 serve_shot shot8 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 155 327 158 159 160 161 162 163
331 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 258
332 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 192 367 303 195
333 serve_shot shot9 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 176 285 179 180 181 182 183 184
334 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 190
335 do_fill_shot shot13 ingredient1 left  -> m9_do_fill_shot 207 208 209 210
336 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 left  -> _m2_get_first_ingredient_4 47
337 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 231
338 serve_shot shot10 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 196 379 199 200 201 202 203 204
339 serve_shot shot11 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot11,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 217 377 220 221 222 223 224 225
340 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 left  -> _m3_get_second_ingredient_2 131
341 do_cocktail_in_shot1 shot4 cocktail1  -> m0_do_cocktail_in_shot1 61 381 384 396
342 do_cocktail_in_shot1 shot1 cocktail5  -> m0_do_cocktail_in_shot1 0 273 375 299
343 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 261
344 do_cocktail_in_shot1 shot7 cocktail8  -> m0_do_cocktail_in_shot1 123 291 312 374
345 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 left  -> _m3_get_second_ingredient_2 49
346 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 260 343 389 263
347 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 211
348 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 46
349 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 110 388 356 113
350 do_cocktail_in_shot1 shot3 cocktail9  -> m0_do_cocktail_in_shot1 41 275 371 399
351 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 29
352 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 213 310 355 216
353 do_fill_shot shot13 ingredient4 right  -> m9_do_fill_shot 247 248 249 250
354 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 128
355 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 215
356 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 112
357 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 right  -> _m2_get_first_ingredient_4 88
358 serve_shot shot14 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot14,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 264 382 267 268 269 270 271 272
359 do_clean_shot_m4_serve_shot_sip_2 shot12 left  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2> 238 239
360 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 108
361 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 235
362 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 26
363 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient1 left  -> _m3_get_second_ingredient_2 70
364 do_cocktail_in_shot2 shot13 ingredient4  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 246 353 251
365 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 115 116
366 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 172 308 318 175
367 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 193
368 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 67
369 do_fill_shot shot13 ingredient4 right  -> m7_do_fill_shot 228 229 230
370 get_second_ingredient cocktail11 right  -> m3_get_second_ingredient 233 323 361 236
371 get_second_ingredient cocktail9 left  -> m3_get_second_ingredient 48 345 400 51
372 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 left  -> _m2_get_first_ingredient_4 259
373 do_cocktail_in_shot1 shot2 cocktail10  -> m0_do_cocktail_in_shot1 20 290 280 391
374 serve_shot shot7 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 134 300 137 138 139 140 141 142
375 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 7 276 278 10
376 get_first_ingredient cocktail3 right  -> m2_get_first_ingredient 83 398 316 357
377 do_clean_shot_m4_serve_shot_sip_2 shot11 right  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail2,right];m5_do_clean_shot;0;-1,-2> 218 219
378 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 165 403 313 324
379 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2> 197 198
380 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 left  -> _m2_get_first_ingredient_4 191
381 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 62 288 368 405
382 do_clean_shot_m4_serve_shot_sip_2 shot14 right  -> <_m4_serve_shot_2;do_clean_shot[shot14,cocktail8,right];m5_do_clean_shot;0;-1,-2> 265 266
383 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 253 315 331 372
384 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 69 363 274 72
385 get_first_ingredient cocktail2 left  -> m2_get_first_ingredient 144 311 283 387
386 do_fill_shot shot13 ingredient2 right  -> m9_do_fill_shot 104 105 106 107
387 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 left  -> _m2_get_first_ingredient_4 150
388 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 right  -> _m3_get_second_ingredient_2 111
389 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 262
390 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 91
391 serve_shot shot2 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 32 401 35 36 37 38 39 40
392 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 153
393 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 94 95
394 __choicelessATCompilation__top_1  -> __top_1 342 373 350 341 397 282 344 319 298 281 307 395 364 325
395 do_cocktail_in_shot1 shot12 cocktail11  -> m0_do_cocktail_in_shot1 226 277 370 404
396 serve_shot shot4 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 73 284 76 77 78 79 80 81
397 do_cocktail_in_shot1 shot5 cocktail3  -> m0_do_cocktail_in_shot1 82 376 289 329
398 do_fill_shot shot15 ingredient1 right  -> m7_do_fill_shot 84 85 86
399 serve_shot shot3 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 52 326 55 56 57 58 59 60
400 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 50
401 do_clean_shot_m4_serve_shot_sip_2 shot2 right  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2> 33 34
402 do_fill_shot shot15 ingredient4 left  -> m8_do_fill_shot 43 44 45
403 do_fill_shot shot13 ingredient4 left  -> m9_do_fill_shot 166 167 168 169
404 serve_shot shot12 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 237 359 240 241 242 243 244 245
405 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 left  -> _m2_get_first_ingredient_4 68

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 18.911 MEMPEAK_KBS 654626.816
