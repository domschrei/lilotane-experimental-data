PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/childsnack/domain.hddl instances/childsnack/p10.hddl"


Planner Configuration
=====================
Domain: instances/childsnack/domain.hddl
Problem: instances/childsnack/p10.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p10.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 13
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 72
Compiling negative preconditions ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 72
Compiling split parameters ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 72
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 72
Grounded planning graph ... done in 1125ms.
	Number of Grounded Actions 25101
	Number of Grounded Literals 237
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 72
Two Way TDG ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 72
Grounding ... done.
	number of abstract tasks = 15
	number of tasks = 22233
	number of decomposition methods = 56700
	number of predicates = 267
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 15
	number of tasks = 22233
	number of decomposition methods = 56700
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1810ms.
	Number of Grounded Actions 22218
	Number of Grounded Literals 177
	number of abstract tasks = 15
	number of tasks = 22233
	number of decomposition methods = 56700
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 22233
	number of decomposition methods = 56700
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 15
	number of tasks = 22233
	number of decomposition methods = 56700
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1319ms.
	Number of Grounded Actions 22218
	Number of Grounded Literals 177
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Tasks 22218 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854729306ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854727937
done
initial PDT has 90 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 90 leafs
SHOP LEAFS 15
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 46728
Size 46728 at 0/22218
Size 44028 at 500/22218
Size 44028 at 1000/22218
Size 44028 at 1500/22218
Size 44028 at 2000/22218
Size 44028 at 2500/22218
Size 44028 at 3000/22218
Size 44028 at 3500/22218
Size 44028 at 4000/22218
Size 44028 at 4500/22218
Size 28116 at 5000/22218
Size 28033 at 5500/22218
Size 22707 at 6000/22218
Size 22703 at 6500/22218
Size 22703 at 7000/22218
Size 22703 at 7500/22218
Size 22703 at 8000/22218
Size 22703 at 8500/22218
Size 22703 at 9000/22218
Size 22703 at 9500/22218
Size 22703 at 10000/22218
Size 22703 at 10500/22218
Size 22703 at 11000/22218
Size 22703 at 11500/22218
Size 22703 at 12000/22218
Size 22703 at 12500/22218
Size 22703 at 13000/22218
Size 22703 at 13500/22218
Size 22703 at 14000/22218
Size 22703 at 14500/22218
Size 22703 at 15000/22218
Size 22703 at 15500/22218
Size 22703 at 16000/22218
Size 22703 at 16500/22218
Size 22703 at 17000/22218
Size 22703 at 17500/22218
Size 22703 at 18000/22218
Size 22703 at 18500/22218
Size 22703 at 19000/22218
Size 22703 at 19500/22218
Size 22703 at 20000/22218
Size 22703 at 20500/22218
Size 22703 at 21000/22218
Size 22703 at 21500/22218
Size 22703 at 22000/22218
Size 4633
Size 4633 at 0/22218
Size 2830 at 500/22218
Size 2830 at 1000/22218
Size 2830 at 1500/22218
Size 2830 at 2000/22218
Size 2830 at 2500/22218
Size 2830 at 3000/22218
Size 2830 at 3500/22218
Size 2830 at 4000/22218
Size 2830 at 4500/22218
Size 2830 at 5000/22218
Size 238 at 5500/22218
Size 238 at 6000/22218
Size 238 at 6500/22218
Size 238 at 7000/22218
Size 238 at 7500/22218
Size 238 at 8000/22218
Size 238 at 8500/22218
Size 238 at 9000/22218
Size 238 at 9500/22218
Size 238 at 10000/22218
Size 238 at 10500/22218
Size 238 at 11000/22218
Size 238 at 11500/22218
Size 238 at 12000/22218
Size 238 at 12500/22218
Size 238 at 13000/22218
Size 238 at 13500/22218
Size 238 at 14000/22218
Size 238 at 14500/22218
Size 238 at 15000/22218
Size 238 at 15500/22218
Size 238 at 16000/22218
Size 238 at 16500/22218
Size 238 at 17000/22218
Size 238 at 17500/22218
Size 238 at 18000/22218
Size 238 at 18500/22218
Size 238 at 19000/22218
Size 238 at 19500/22218
Size 238 at 20000/22218
Size 238 at 20500/22218
Size 238 at 21000/22218
Size 238 at 21500/22218
Size 238 at 22000/22218
Size 238
Size 238 at 0/22218
Size 238 at 500/22218
Size 238 at 1000/22218
Size 238 at 1500/22218
Size 238 at 2000/22218
Size 238 at 2500/22218
Size 238 at 3000/22218
Size 238 at 3500/22218
Size 238 at 4000/22218
Size 238 at 4500/22218
Size 238 at 5000/22218
Size 238 at 5500/22218
Size 238 at 6000/22218
Size 238 at 6500/22218
Size 238 at 7000/22218
Size 238 at 7500/22218
Size 238 at 8000/22218
Size 238 at 8500/22218
Size 238 at 9000/22218
Size 238 at 9500/22218
Size 238 at 10000/22218
Size 238 at 10500/22218
Size 238 at 11000/22218
Size 238 at 11500/22218
Size 238 at 12000/22218
Size 238 at 12500/22218
Size 238 at 13000/22218
Size 238 at 13500/22218
Size 238 at 14000/22218
Size 238 at 14500/22218
Size 238 at 15000/22218
Size 238 at 15500/22218
Size 238 at 16000/22218
Size 238 at 16500/22218
Size 238 at 17000/22218
Size 238 at 17500/22218
Size 238 at 18000/22218
Size 238 at 18500/22218
Size 238 at 19000/22218
Size 238 at 19500/22218
Size 238 at 20000/22218
Size 238 at 20500/22218
Size 238 at 21000/22218
Size 238 at 21500/22218
Size 238 at 22000/22218
Size 238
Invariant time: 1.86
Number of invariants: 238
Invariant Clauses 21658
NUMBER OF CLAUSES 1852694
NUMBER OF STATE CLAUSES 217060
NUMBER OF DECOMPOSITION CLAUSES 1635634
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 11.72% 88.28% 0.0% 
NUMBER OF PATHS 90
Starting cryptominisat
Setting starttime of solver to 1603872755462
Command exited with non-zero status 10
0.64 0.02

Time command gave the following runtime for the solver: 660
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_11,56597 56597 m1_serve
11 77 pathaction!1_11,22231
Consider method^1_3,4444 4444 m1_serve
3 100 pathaction!1_3,22221
Consider method^1_0,19142 19142 m1_serve
0 62 pathaction!1_0,22220
Consider method^1_6,18150 18150 m1_serve
6 39 pathaction!1_6,22222
Consider method^1_9,14825 14825 m0_serve
9 58 pathaction!1_9,22226
Consider method^1_2,7404 7404 m0_serve
2 83 pathaction!1_2,22228
Consider method^1_1,37369 37369 m0_serve
1 57 pathaction!1_1,22225
Consider method^1_14,56644 56644 m0_serve
14 38 pathaction!1_14,22219
Consider method^1_5,44288 44288 m1_serve
5 25 pathaction!1_5,22230
Consider method^1_7,23323 23323 m1_serve
7 21 pathaction!1_7,22218
Consider method^1_10,15805 15805 m0_serve
10 102 pathaction!1_10,22232
Consider method^0_,56700 56700 __top_1
 75 pathaction!0_,22233
Consider method^1_8,6204 6204 m1_serve
8 51 pathaction!1_8,22229
Consider method^1_4,55379 55379 m0_serve
4 28 pathaction!1_4,22223
Consider method^1_13,981 981 m1_serve
13 18 pathaction!1_13,22224
Consider method^1_12,56356 56356 m1_serve
12 9 pathaction!1_12,22227


CHECKING primitive solution of length 90 ...
true 90 __method_precondition_m1_serve_1_precondition[table1,sandw2,bread10,content12,child1;]
true 34 make_sandwich[sandw2,bread10,content12;]
true 4 put_on_tray[sandw2,tray2;kitchen]
true 76 move_tray[tray2,kitchen,table1;]
true 98 serve_sandwich[sandw2,child1,tray2,table1;]
true 11 move_tray[tray2,table1,kitchen;]
true 53 __method_precondition_m0_serve_0_precondition[table2,bread9,sandw12,content9,child2;]
true 36 make_sandwich_no_gluten[sandw12,bread9,content9;]
true 33 put_on_tray[sandw12,tray2;kitchen]
true 6 move_tray[tray2,kitchen,table2;]
true 40 serve_sandwich_no_gluten[sandw12,child2,tray2,table2;]
true 96 move_tray[tray2,table2,kitchen;]
true 48 __method_precondition_m0_serve_0_precondition[table2,bread3,sandw13,content10,child3;]
true 65 make_sandwich_no_gluten[sandw13,bread3,content10;]
true 54 put_on_tray[sandw13,tray2;kitchen]
true 59 move_tray[tray2,kitchen,table2;]
true 79 serve_sandwich_no_gluten[sandw13,child3,tray2,table2;]
true 23 move_tray[tray2,table2,kitchen;]
true 93 __method_precondition_m1_serve_1_precondition[table1,sandw15,bread4,content5,child4;]
true 32 make_sandwich[sandw15,bread4,content5;]
true 88 put_on_tray[sandw15,tray1;kitchen]
true 17 move_tray[tray1,kitchen,table1;]
true 5 serve_sandwich[sandw15,child4,tray1,table1;]
true 41 move_tray[tray1,table1,kitchen;]
true 2 __method_precondition_m0_serve_0_precondition[table2,bread7,sandw1,content3,child5;]
true 7 make_sandwich_no_gluten[sandw1,bread7,content3;]
true 8 put_on_tray[sandw1,tray2;kitchen]
true 44 move_tray[tray2,kitchen,table2;]
true 73 serve_sandwich_no_gluten[sandw1,child5,tray2,table2;]
true 84 move_tray[tray2,table2,kitchen;]
true 13 __method_precondition_m1_serve_1_precondition[table1,sandw6,bread11,content7,child6;]
true 47 make_sandwich[sandw6,bread11,content7;]
true 60 put_on_tray[sandw6,tray1;kitchen]
true 10 move_tray[tray1,kitchen,table1;]
true 24 serve_sandwich[sandw6,child6,tray1,table1;]
true 29 move_tray[tray1,table1,kitchen;]
true 20 __method_precondition_m1_serve_1_precondition[table1,sandw18,bread8,content2,child7;]
true 42 make_sandwich[sandw18,bread8,content2;]
true 85 put_on_tray[sandw18,tray2;kitchen]
true 103 move_tray[tray2,kitchen,table1;]
true 66 serve_sandwich[sandw18,child7,tray2,table1;]
true 99 move_tray[tray2,table1,kitchen;]
true 64 __method_precondition_m1_serve_1_precondition[table3,sandw4,bread14,content11,child8;]
true 97 make_sandwich[sandw4,bread14,content11;]
true 82 put_on_tray[sandw4,tray2;kitchen]
true 14 move_tray[tray2,kitchen,table3;]
true 81 serve_sandwich[sandw4,child8,tray2,table3;]
true 27 move_tray[tray2,table3,kitchen;]
true 12 __method_precondition_m1_serve_1_precondition[table3,sandw10,bread15,content1,child9;]
true 67 make_sandwich[sandw10,bread15,content1;]
true 15 put_on_tray[sandw10,tray3;kitchen]
true 95 move_tray[tray3,kitchen,table3;]
true 92 serve_sandwich[sandw10,child9,tray3,table3;]
true 50 move_tray[tray3,table3,kitchen;]
true 86 __method_precondition_m0_serve_0_precondition[table2,bread6,sandw8,content15,child10;]
true 0 make_sandwich_no_gluten[sandw8,bread6,content15;]
true 31 put_on_tray[sandw8,tray2;kitchen]
true 63 move_tray[tray2,kitchen,table2;]
true 71 serve_sandwich_no_gluten[sandw8,child10,tray2,table2;]
true 43 move_tray[tray2,table2,kitchen;]
true 87 __method_precondition_m0_serve_0_precondition[table3,bread13,sandw17,content4,child11;]
true 74 make_sandwich_no_gluten[sandw17,bread13,content4;]
true 37 put_on_tray[sandw17,tray1;kitchen]
true 26 move_tray[tray1,kitchen,table3;]
true 35 serve_sandwich_no_gluten[sandw17,child11,tray1,table3;]
true 61 move_tray[tray1,table3,kitchen;]
true 56 __method_precondition_m1_serve_1_precondition[table2,sandw16,bread2,content8,child12;]
true 22 make_sandwich[sandw16,bread2,content8;]
true 94 put_on_tray[sandw16,tray3;kitchen]
true 55 move_tray[tray3,kitchen,table2;]
true 52 serve_sandwich[sandw16,child12,tray3,table2;]
true 30 move_tray[tray3,table2,kitchen;]
true 3 __method_precondition_m1_serve_1_precondition[table2,sandw19,bread1,content13,child13;]
true 68 make_sandwich[sandw19,bread1,content13;]
true 69 put_on_tray[sandw19,tray2;kitchen]
true 72 move_tray[tray2,kitchen,table2;]
true 46 serve_sandwich[sandw19,child13,tray2,table2;]
true 78 move_tray[tray2,table2,kitchen;]
true 1 __method_precondition_m1_serve_1_precondition[table2,sandw3,bread5,content6,child14;]
true 70 make_sandwich[sandw3,bread5,content6;]
true 49 put_on_tray[sandw3,tray3;kitchen]
true 19 move_tray[tray3,kitchen,table2;]
true 80 serve_sandwich[sandw3,child14,tray3,table2;]
true 104 move_tray[tray3,table2,kitchen;]
true 45 __method_precondition_m0_serve_0_precondition[table2,bread12,sandw7,content14,child15;]
true 89 make_sandwich_no_gluten[sandw7,bread12,content14;]
true 101 put_on_tray[sandw7,tray3;kitchen]
true 91 move_tray[tray3,kitchen,table2;]
true 105 serve_sandwich_no_gluten[sandw7,child15,tray3,table2;]
true 16 move_tray[tray3,table2,kitchen;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 2535346528
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 177
number of actions                    = 22234
number of abstract actions           = 16
number of primitive actions          = 22218
number of methods                    = 56701
number of primitive shop actions     = 18900
number of primitive non-shop actions = 3318
size of largest method               = 15
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 125273
number of clauses               = 1852694
average size of clauses         = 2.0756692686433915
number of assert                = 69
number of horn                  = 1849430
K offset                        = 0
K chosen value                  = 2
state formula                   = 217060
method children clauses         = 0
number of paths                 = 90
maximum plan length             = 90
number of decomposition clauses = 1635634
number of ordering clauses      = 0
number of state clauses         = 217060
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 64358
============ parsing ============
total                         = 1056
file parser                   = 583
sort expansion                = 189
closed world assumption       = 170
inherit preconditions         = 0
shop methods                  = 26
eliminate identical variables = 40
strip domain of hybridity     = 2
flatten formula               = 46
============ preprocessing ============
total                                      = 39288
compile negative preconditions             = 34
compile unit methods                       = 0
split parameter                            = 31
expand choiceless abstract tasks           = 60
compile methods with identical tasks       = 354
removing unnecessary predicates            = 10446
lifted reachabiltiy analysis               = 66
grounded planning graph analysis           = 7297
grounded task decomposition graph analysis = 16544
grounding                                  = 4223
create artificial top task                 = 127
============ search preparation ============
compute state invariants = 1972
============ sat ============
total                                        = 13954
generate formula                             = 12773
generate path decomposition tree             = 3948
normalise path decomposition tree            = 321
sog optimisation                             = 682
translate path decomposition tree to clauses = 4727
generate state formula                       = 12661
generate state invariant formula             = 236
transform to DIMACS                          = 345
SAT solver                                   = 660
SAT solver for K=0002                        = 660

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="22218";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="16";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="2535346528";"40 sat:20:state formula"="217060";"40 sat:01:number of variables"="125273";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="90";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="56701";"30 problem:07:number of primitive shop actions"="18900";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="22234";"30 problem:08:number of primitive non-shop actions"="3318";"30 problem:02:number of predicates"="177";"40 sat:03:number of horn"="1849430";"40 sat:15:K chosen value"="2";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="15";"40 sat:03:average size of clauses"="2.0756692686433915";"40 sat:02:number of clauses"="1852694";"40 sat:50:number of state clauses"="217060";"40 sat:03:number of assert"="69";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="90";"40 sat:50:number of decomposition clauses"="1635634";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="583";"01 parsing:08:flatten formula"="46";"40 sat:00:total"="13954";"40 sat:16:generate state formula"="12661";"40 sat:20:transform to DIMACS"="345";"40 sat:11:generate path decomposition tree"="3948";"02 preprocessing:07:compile methods with identical tasks"="354";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="10446";"01 parsing:03:closed world assumption"="170";"02 preprocessing:11:lifted reachabiltiy analysis"="66";"01 parsing:02:sort expansion"="189";"40 sat:12:normalise path decomposition tree"="321";"40 sat:40:SAT solver"="660";"01 parsing:00:total"="1056";"40 sat:10:generate formula"="12773";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="660";"02 preprocessing:01:compile negative preconditions"="34";"00 total:00:total"="64358";"40 sat:13:sog optimisation"="682";"02 preprocessing:12:grounded planning graph analysis"="7297";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="16544";"02 preprocessing:04:split parameter"="31";"01 parsing:05:shop methods"="26";"10 search preparation:02:compute state invariants"="1972";"01 parsing:06:eliminate identical variables"="40";"40 sat:15:translate path decomposition tree to clauses"="4727";"02 preprocessing:05:expand choiceless abstract tasks"="60";"40 sat:17:generate state invariant formula"="236";"02 preprocessing:00:total"="39288";"02 preprocessing:99:create artificial top task"="127";"02 preprocessing:84:grounding"="4223"
#!verify __method_precondition_m1_serve_1_precondition[table1,sandw2,bread10,content12,child1];make_sandwich[sandw2,bread10,content12];put_on_tray[sandw2,tray2];move_tray[tray2,kitchen,table1];serve_sandwich[sandw2,child1,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m0_serve_0_precondition[table2,bread9,sandw12,content9,child2];make_sandwich_no_gluten[sandw12,bread9,content9];put_on_tray[sandw12,tray2];move_tray[tray2,kitchen,table2];serve_sandwich_no_gluten[sandw12,child2,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m0_serve_0_precondition[table2,bread3,sandw13,content10,child3];make_sandwich_no_gluten[sandw13,bread3,content10];put_on_tray[sandw13,tray2];move_tray[tray2,kitchen,table2];serve_sandwich_no_gluten[sandw13,child3,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m1_serve_1_precondition[table1,sandw15,bread4,content5,child4];make_sandwich[sandw15,bread4,content5];put_on_tray[sandw15,tray1];move_tray[tray1,kitchen,table1];serve_sandwich[sandw15,child4,tray1,table1];move_tray[tray1,table1,kitchen];__method_precondition_m0_serve_0_precondition[table2,bread7,sandw1,content3,child5];make_sandwich_no_gluten[sandw1,bread7,content3];put_on_tray[sandw1,tray2];move_tray[tray2,kitchen,table2];serve_sandwich_no_gluten[sandw1,child5,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m1_serve_1_precondition[table1,sandw6,bread11,content7,child6];make_sandwich[sandw6,bread11,content7];put_on_tray[sandw6,tray1];move_tray[tray1,kitchen,table1];serve_sandwich[sandw6,child6,tray1,table1];move_tray[tray1,table1,kitchen];__method_precondition_m1_serve_1_precondition[table1,sandw18,bread8,content2,child7];make_sandwich[sandw18,bread8,content2];put_on_tray[sandw18,tray2];move_tray[tray2,kitchen,table1];serve_sandwich[sandw18,child7,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m1_serve_1_precondition[table3,sandw4,bread14,content11,child8];make_sandwich[sandw4,bread14,content11];put_on_tray[sandw4,tray2];move_tray[tray2,kitchen,table3];serve_sandwich[sandw4,child8,tray2,table3];move_tray[tray2,table3,kitchen];__method_precondition_m1_serve_1_precondition[table3,sandw10,bread15,content1,child9];make_sandwich[sandw10,bread15,content1];put_on_tray[sandw10,tray3];move_tray[tray3,kitchen,table3];serve_sandwich[sandw10,child9,tray3,table3];move_tray[tray3,table3,kitchen];__method_precondition_m0_serve_0_precondition[table2,bread6,sandw8,content15,child10];make_sandwich_no_gluten[sandw8,bread6,content15];put_on_tray[sandw8,tray2];move_tray[tray2,kitchen,table2];serve_sandwich_no_gluten[sandw8,child10,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m0_serve_0_precondition[table3,bread13,sandw17,content4,child11];make_sandwich_no_gluten[sandw17,bread13,content4];put_on_tray[sandw17,tray1];move_tray[tray1,kitchen,table3];serve_sandwich_no_gluten[sandw17,child11,tray1,table3];move_tray[tray1,table3,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw16,bread2,content8,child12];make_sandwich[sandw16,bread2,content8];put_on_tray[sandw16,tray3];move_tray[tray3,kitchen,table2];serve_sandwich[sandw16,child12,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw19,bread1,content13,child13];make_sandwich[sandw19,bread1,content13];put_on_tray[sandw19,tray2];move_tray[tray2,kitchen,table2];serve_sandwich[sandw19,child13,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw3,bread5,content6,child14];make_sandwich[sandw3,bread5,content6];put_on_tray[sandw3,tray3];move_tray[tray3,kitchen,table2];serve_sandwich[sandw3,child14,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m0_serve_0_precondition[table2,bread12,sandw7,content14,child15];make_sandwich_no_gluten[sandw7,bread12,content14];put_on_tray[sandw7,tray3];move_tray[tray3,kitchen,table2];serve_sandwich_no_gluten[sandw7,child15,tray3,table2];move_tray[tray3,table2,kitchen]
==>
0 __method_precondition_m1_serve_1_precondition table1 sandw2 bread10 content12 child1 
1 make_sandwich sandw2 bread10 content12 
2 put_on_tray sandw2 tray2 
3 move_tray tray2 kitchen table1 
4 serve_sandwich sandw2 child1 tray2 table1 
5 move_tray tray2 table1 kitchen 
6 __method_precondition_m0_serve_0_precondition table2 bread9 sandw12 content9 child2 
7 make_sandwich_no_gluten sandw12 bread9 content9 
8 put_on_tray sandw12 tray2 
9 move_tray tray2 kitchen table2 
10 serve_sandwich_no_gluten sandw12 child2 tray2 table2 
11 move_tray tray2 table2 kitchen 
12 __method_precondition_m0_serve_0_precondition table2 bread3 sandw13 content10 child3 
13 make_sandwich_no_gluten sandw13 bread3 content10 
14 put_on_tray sandw13 tray2 
15 move_tray tray2 kitchen table2 
16 serve_sandwich_no_gluten sandw13 child3 tray2 table2 
17 move_tray tray2 table2 kitchen 
18 __method_precondition_m1_serve_1_precondition table1 sandw15 bread4 content5 child4 
19 make_sandwich sandw15 bread4 content5 
20 put_on_tray sandw15 tray1 
21 move_tray tray1 kitchen table1 
22 serve_sandwich sandw15 child4 tray1 table1 
23 move_tray tray1 table1 kitchen 
24 __method_precondition_m0_serve_0_precondition table2 bread7 sandw1 content3 child5 
25 make_sandwich_no_gluten sandw1 bread7 content3 
26 put_on_tray sandw1 tray2 
27 move_tray tray2 kitchen table2 
28 serve_sandwich_no_gluten sandw1 child5 tray2 table2 
29 move_tray tray2 table2 kitchen 
30 __method_precondition_m1_serve_1_precondition table1 sandw6 bread11 content7 child6 
31 make_sandwich sandw6 bread11 content7 
32 put_on_tray sandw6 tray1 
33 move_tray tray1 kitchen table1 
34 serve_sandwich sandw6 child6 tray1 table1 
35 move_tray tray1 table1 kitchen 
36 __method_precondition_m1_serve_1_precondition table1 sandw18 bread8 content2 child7 
37 make_sandwich sandw18 bread8 content2 
38 put_on_tray sandw18 tray2 
39 move_tray tray2 kitchen table1 
40 serve_sandwich sandw18 child7 tray2 table1 
41 move_tray tray2 table1 kitchen 
42 __method_precondition_m1_serve_1_precondition table3 sandw4 bread14 content11 child8 
43 make_sandwich sandw4 bread14 content11 
44 put_on_tray sandw4 tray2 
45 move_tray tray2 kitchen table3 
46 serve_sandwich sandw4 child8 tray2 table3 
47 move_tray tray2 table3 kitchen 
48 __method_precondition_m1_serve_1_precondition table3 sandw10 bread15 content1 child9 
49 make_sandwich sandw10 bread15 content1 
50 put_on_tray sandw10 tray3 
51 move_tray tray3 kitchen table3 
52 serve_sandwich sandw10 child9 tray3 table3 
53 move_tray tray3 table3 kitchen 
54 __method_precondition_m0_serve_0_precondition table2 bread6 sandw8 content15 child10 
55 make_sandwich_no_gluten sandw8 bread6 content15 
56 put_on_tray sandw8 tray2 
57 move_tray tray2 kitchen table2 
58 serve_sandwich_no_gluten sandw8 child10 tray2 table2 
59 move_tray tray2 table2 kitchen 
60 __method_precondition_m0_serve_0_precondition table3 bread13 sandw17 content4 child11 
61 make_sandwich_no_gluten sandw17 bread13 content4 
62 put_on_tray sandw17 tray1 
63 move_tray tray1 kitchen table3 
64 serve_sandwich_no_gluten sandw17 child11 tray1 table3 
65 move_tray tray1 table3 kitchen 
66 __method_precondition_m1_serve_1_precondition table2 sandw16 bread2 content8 child12 
67 make_sandwich sandw16 bread2 content8 
68 put_on_tray sandw16 tray3 
69 move_tray tray3 kitchen table2 
70 serve_sandwich sandw16 child12 tray3 table2 
71 move_tray tray3 table2 kitchen 
72 __method_precondition_m1_serve_1_precondition table2 sandw19 bread1 content13 child13 
73 make_sandwich sandw19 bread1 content13 
74 put_on_tray sandw19 tray2 
75 move_tray tray2 kitchen table2 
76 serve_sandwich sandw19 child13 tray2 table2 
77 move_tray tray2 table2 kitchen 
78 __method_precondition_m1_serve_1_precondition table2 sandw3 bread5 content6 child14 
79 make_sandwich sandw3 bread5 content6 
80 put_on_tray sandw3 tray3 
81 move_tray tray3 kitchen table2 
82 serve_sandwich sandw3 child14 tray3 table2 
83 move_tray tray3 table2 kitchen 
84 __method_precondition_m0_serve_0_precondition table2 bread12 sandw7 content14 child15 
85 make_sandwich_no_gluten sandw7 bread12 content14 
86 put_on_tray sandw7 tray3 
87 move_tray tray3 kitchen table2 
88 serve_sandwich_no_gluten sandw7 child15 tray3 table2 
89 move_tray tray3 table2 kitchen 
root 104
90 serve child6  -> m1_serve 30 31 32 33 34 35
91 serve child2  -> m0_serve 6 7 8 9 10 11
92 serve child15  -> m0_serve 84 85 86 87 88 89
93 serve child3  -> m0_serve 12 13 14 15 16 17
94 serve child1  -> m1_serve 0 1 2 3 4 5
95 serve child9  -> m1_serve 48 49 50 51 52 53
96 serve child13  -> m1_serve 72 73 74 75 76 77
97 serve child7  -> m1_serve 36 37 38 39 40 41
98 serve child14  -> m1_serve 78 79 80 81 82 83
99 serve child10  -> m0_serve 54 55 56 57 58 59
100 serve child8  -> m1_serve 42 43 44 45 46 47
101 serve child4  -> m1_serve 18 19 20 21 22 23
102 serve child5  -> m0_serve 24 25 26 27 28 29
103 serve child11  -> m0_serve 60 61 62 63 64 65
104 __artificialTopCompilation__top_1  -> __top_1 94 91 93 101 102 90 97 100 95 99 103 105 96 98 92
105 serve child12  -> m1_serve 66 67 68 69 70 71

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 65.401 MEMPEAK_KBS 2851232.768
