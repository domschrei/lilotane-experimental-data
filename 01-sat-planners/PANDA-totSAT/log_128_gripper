PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/gripper/domain.hddl instances/gripper/p16.hddl"


Planner Configuration
=====================
Domain: instances/gripper/domain.hddl
Problem: instances/gripper/p16.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p16.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 38
Compiling negative preconditions ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 38
Compiling split parameters ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 38
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 38
Grounded planning graph ... done in 261ms.
	Number of Grounded Actions 247
	Number of Grounded Literals 140
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 38
Two Way TDG ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 38
Grounding ... done.
	number of abstract tasks = 19
	number of tasks = 265
	number of decomposition methods = 140
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 19
	number of tasks = 265
	number of decomposition methods = 140
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 67ms.
	Number of Grounded Actions 246
	Number of Grounded Literals 140
	number of abstract tasks = 19
	number of tasks = 265
	number of decomposition methods = 140
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 19
	number of tasks = 265
	number of decomposition methods = 140
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 19
	number of tasks = 265
	number of decomposition methods = 140
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 28ms.
	Number of Grounded Actions 246
	Number of Grounded Literals 140
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Tasks 246 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773379ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854773318
done
initial PDT has 136 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 136 leafs
SHOP LEAFS 34
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 29190
Size 29190 at 0/246
Size 10187
Size 10187 at 0/246
Size 1464
Size 1464 at 0/246
Size 1396
Size 1396 at 0/246
Size 1396
Invariant time: 0.225
Number of invariants: 1396
Invariant Clauses 191252
NUMBER OF CLAUSES 234236
NUMBER OF STATE CLAUSES 230951
NUMBER OF DECOMPOSITION CLAUSES 3285
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.60000000000001% 1.4000000000000001% 0.0% 
NUMBER OF PATHS 136
Starting cryptominisat
Setting starttime of solver to 1603876550694
Command exited with non-zero status 10
0.08 0.00

Time command gave the following runtime for the solver: 80
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_5,100 100 m0_move_two_balls
5 47 pathaction!1_5,16
Consider method^2_13;1,67 67 m3_goto
13;1 145 pathaction!2_13;1,52
Consider method^2_4;1,67 67 m3_goto
4;1 46 pathaction!2_4;1,52
Consider method^2_11;1,67 67 m3_goto
11;1 148 pathaction!2_11;1,52
Consider method^2_9;1,67 67 m3_goto
9;1 109 pathaction!2_9;1,52
Consider method^2_6;1,67 67 m3_goto
6;1 35 pathaction!2_6;1,52
Consider method^2_3;1,67 67 m3_goto
3;1 139 pathaction!2_3;1,52
Consider method^2_16;1,67 67 m3_goto
16;1 91 pathaction!2_16;1,52
Consider method^2_8;1,67 67 m3_goto
8;1 6 pathaction!2_8;1,52
Consider method^2_5;1,67 67 m3_goto
5;1 53 pathaction!2_5;1,52
Consider method^1_12,53 53 m0_move_two_balls
12 121 pathaction!1_12,4
Consider method^1_6,71 71 m0_move_two_balls
6 38 pathaction!1_6,12
Consider method^2_2;1,67 67 m3_goto
2;1 16 pathaction!2_2;1,52
Consider method^1_2,31 31 m0_move_two_balls
2 170 pathaction!1_2,6
Consider method^2_10;1,67 67 m3_goto
10;1 163 pathaction!2_10;1,52
Consider method^2_1;1,67 67 m3_goto
1;1 136 pathaction!2_1;1,52
Consider method^1_7,94 94 m0_move_two_balls
7 130 pathaction!1_7,9
Consider method^1_13,14 14 m0_move_two_balls
13 31 pathaction!1_13,15
Consider method^1_10,83 83 m0_move_two_balls
10 162 pathaction!1_10,3
Consider method^1_0,126 126 m0_move_two_balls
0 29 pathaction!1_0,5
Consider method^2_14;1,67 67 m3_goto
14;1 102 pathaction!2_14;1,52
Consider method^2_15;1,67 67 m3_goto
15;1 125 pathaction!2_15;1,52
Consider method^2_12;1,67 67 m3_goto
12;1 82 pathaction!2_12;1,52
Consider method^1_14,108 108 m0_move_two_balls
14 90 pathaction!1_14,11
Consider method^1_9,119 119 m0_move_two_balls
9 127 pathaction!1_9,8
Consider method^2_0;1,63 63 m2_goto
0;1 140 pathaction!2_0;1,52
Consider method^1_11,39 39 m0_move_two_balls
11 114 pathaction!1_11,14
Consider method^1_15,49 49 m0_move_two_balls
15 95 pathaction!1_15,1
Consider method^1_3,46 46 m0_move_two_balls
3 13 pathaction!1_3,2
Consider method^0_,140 140 __top_1
 86 pathaction!0_,265
Consider method^1_8,113 113 m0_move_two_balls
8 143 pathaction!1_8,10
Consider method^1_16,106 106 m0_move_two_balls
16 73 pathaction!1_16,7
Consider method^1_1,127 127 m0_move_two_balls
1 99 pathaction!1_1,0
Consider method^1_4,125 125 m0_move_two_balls
4 117 pathaction!1_4,13
Consider method^2_7;1,67 67 m3_goto
7;1 25 pathaction!2_7;1,52


CHECKING primitive solution of length 136 ...
true 138 __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2;]
true 96 __method_precondition_m2_goto_2_precondition[rooma;]
true 155 nop[;]
true 12 pick[ball1,rooma,right;]
true 89 pick[ball2,rooma,left;]
true 93 move[rooma,roomb;]
true 75 drop[ball1,roomb,right;]
true 111 drop[ball2,roomb,left;]
true 141 __method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4;]
true 167 __method_precondition_m3_goto_3_precondition[roomb;]
true 92 move[roomb,rooma;]
true 70 pick[ball3,rooma,right;]
true 66 pick[ball4,rooma,left;]
true 149 move[rooma,roomb;]
true 124 drop[ball3,roomb,right;]
true 151 drop[ball4,roomb,left;]
true 15 __method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6;]
true 32 __method_precondition_m3_goto_3_precondition[roomb;]
true 76 move[roomb,rooma;]
true 104 pick[ball5,rooma,right;]
true 1 pick[ball6,rooma,left;]
true 156 move[rooma,roomb;]
true 77 drop[ball5,roomb,right;]
true 152 drop[ball6,roomb,left;]
true 19 __method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8;]
true 128 __method_precondition_m3_goto_3_precondition[roomb;]
true 23 move[roomb,rooma;]
true 20 pick[ball7,rooma,right;]
true 41 pick[ball8,rooma,left;]
true 81 move[rooma,roomb;]
true 40 drop[ball7,roomb,right;]
true 58 drop[ball8,roomb,left;]
true 63 __method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10;]
true 154 __method_precondition_m3_goto_3_precondition[roomb;]
true 26 move[roomb,rooma;]
true 67 pick[ball9,rooma,left;]
true 61 pick[ball10,rooma,right;]
true 126 move[rooma,roomb;]
true 118 drop[ball9,roomb,left;]
true 133 drop[ball10,roomb,right;]
true 39 __method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12;]
true 72 __method_precondition_m3_goto_3_precondition[roomb;]
true 14 move[roomb,rooma;]
true 105 pick[ball11,rooma,left;]
true 48 pick[ball12,rooma,right;]
true 33 move[rooma,roomb;]
true 78 drop[ball11,roomb,left;]
true 30 drop[ball12,roomb,right;]
true 166 __method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14;]
true 108 __method_precondition_m3_goto_3_precondition[roomb;]
true 34 move[roomb,rooma;]
true 50 pick[ball13,rooma,left;]
true 116 pick[ball14,rooma,right;]
true 17 move[rooma,roomb;]
true 161 drop[ball13,roomb,left;]
true 64 drop[ball14,roomb,right;]
true 85 __method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16;]
true 9 __method_precondition_m3_goto_3_precondition[roomb;]
true 11 move[roomb,rooma;]
true 88 pick[ball15,rooma,left;]
true 2 pick[ball16,rooma,right;]
true 97 move[rooma,roomb;]
true 65 drop[ball15,roomb,left;]
true 62 drop[ball16,roomb,right;]
true 158 __method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18;]
true 69 __method_precondition_m3_goto_3_precondition[roomb;]
true 134 move[roomb,rooma;]
true 3 pick[ball17,rooma,left;]
true 74 pick[ball18,rooma,right;]
true 52 move[rooma,roomb;]
true 22 drop[ball17,roomb,left;]
true 168 drop[ball18,roomb,right;]
true 21 __method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20;]
true 159 __method_precondition_m3_goto_3_precondition[roomb;]
true 123 move[roomb,rooma;]
true 135 pick[ball19,rooma,left;]
true 0 pick[ball20,rooma,right;]
true 49 move[rooma,roomb;]
true 147 drop[ball19,roomb,left;]
true 57 drop[ball20,roomb,right;]
true 42 __method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22;]
true 44 __method_precondition_m3_goto_3_precondition[roomb;]
true 5 move[roomb,rooma;]
true 137 pick[ball21,rooma,left;]
true 55 pick[ball22,rooma,right;]
true 157 move[rooma,roomb;]
true 56 drop[ball21,roomb,left;]
true 83 drop[ball22,roomb,right;]
true 115 __method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24;]
true 119 __method_precondition_m3_goto_3_precondition[roomb;]
true 8 move[roomb,rooma;]
true 59 pick[ball23,rooma,left;]
true 94 pick[ball24,rooma,right;]
true 142 move[rooma,roomb;]
true 24 drop[ball23,roomb,left;]
true 43 drop[ball24,roomb,right;]
true 103 __method_precondition_m0_move_two_balls_0_precondition[ball25,rooma,ball26;]
true 150 __method_precondition_m3_goto_3_precondition[roomb;]
true 10 move[roomb,rooma;]
true 160 pick[ball25,rooma,left;]
true 87 pick[ball26,rooma,right;]
true 110 move[rooma,roomb;]
true 146 drop[ball25,roomb,left;]
true 71 drop[ball26,roomb,right;]
true 106 __method_precondition_m0_move_two_balls_0_precondition[ball27,rooma,ball28;]
true 28 __method_precondition_m3_goto_3_precondition[roomb;]
true 80 move[roomb,rooma;]
true 101 pick[ball27,rooma,left;]
true 27 pick[ball28,rooma,right;]
true 84 move[rooma,roomb;]
true 165 drop[ball27,roomb,left;]
true 131 drop[ball28,roomb,right;]
true 54 __method_precondition_m0_move_two_balls_0_precondition[ball29,rooma,ball30;]
true 60 __method_precondition_m3_goto_3_precondition[roomb;]
true 120 move[roomb,rooma;]
true 79 pick[ball29,rooma,left;]
true 68 pick[ball30,rooma,right;]
true 7 move[rooma,roomb;]
true 36 drop[ball29,roomb,left;]
true 113 drop[ball30,roomb,right;]
true 4 __method_precondition_m0_move_two_balls_0_precondition[ball31,rooma,ball32;]
true 112 __method_precondition_m3_goto_3_precondition[roomb;]
true 100 move[roomb,rooma;]
true 51 pick[ball31,rooma,left;]
true 132 pick[ball32,rooma,right;]
true 107 move[rooma,roomb;]
true 169 drop[ball31,roomb,left;]
true 129 drop[ball32,roomb,right;]
true 164 __method_precondition_m0_move_two_balls_0_precondition[ball33,rooma,ball34;]
true 37 __method_precondition_m3_goto_3_precondition[roomb;]
true 98 move[roomb,rooma;]
true 153 pick[ball33,rooma,left;]
true 45 pick[ball34,rooma,right;]
true 18 move[rooma,roomb;]
true 122 drop[ball33,roomb,left;]
true 144 drop[ball34,roomb,right;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 186153424
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 140
number of actions                    = 266
number of abstract actions           = 20
number of primitive actions          = 246
number of methods                    = 141
number of primitive shop actions     = 38
number of primitive non-shop actions = 208
size of largest method               = 17
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 39314
number of clauses               = 234236
average size of clauses         = 2.0039703546850185
number of assert                = 38
number of horn                  = 233385
K offset                        = 0
K chosen value                  = 3
state formula                   = 230951
method children clauses         = 0
number of paths                 = 136
maximum plan length             = 136
number of decomposition clauses = 3285
number of ordering clauses      = 0
number of state clauses         = 230951
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 5000
============ parsing ============
total                         = 973
file parser                   = 540
sort expansion                = 186
closed world assumption       = 127
inherit preconditions         = 0
shop methods                  = 5
eliminate identical variables = 53
strip domain of hybridity     = 1
flatten formula               = 59
============ preprocessing ============
total                                      = 1296
compile negative preconditions             = 38
compile unit methods                       = 0
split parameter                            = 29
expand choiceless abstract tasks           = 0
compile methods with identical tasks       = 3
removing unnecessary predicates            = 27
lifted reachabiltiy analysis               = 64
grounded planning graph analysis           = 491
grounded task decomposition graph analysis = 452
grounding                                  = 142
create artificial top task                 = 16
============ search preparation ============
compute state invariants = 321
============ sat ============
total                                        = 1786
generate formula                             = 1385
generate path decomposition tree             = 127
normalise path decomposition tree            = 34
sog optimisation                             = 22
translate path decomposition tree to clauses = 121
generate state formula                       = 1341
generate state invariant formula             = 395
transform to DIMACS                          = 191
SAT solver                                   = 80
SAT solver for K=0003                        = 80

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="246";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="20";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="186153424";"40 sat:20:state formula"="230951";"40 sat:01:number of variables"="39314";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="136";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="141";"30 problem:07:number of primitive shop actions"="38";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="266";"30 problem:08:number of primitive non-shop actions"="208";"30 problem:02:number of predicates"="140";"40 sat:03:number of horn"="233385";"40 sat:15:K chosen value"="3";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="17";"40 sat:03:average size of clauses"="2.0039703546850185";"40 sat:02:number of clauses"="234236";"40 sat:50:number of state clauses"="230951";"40 sat:03:number of assert"="38";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="136";"40 sat:50:number of decomposition clauses"="3285";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="540";"01 parsing:08:flatten formula"="59";"40 sat:00:total"="1786";"40 sat:16:generate state formula"="1341";"40 sat:20:transform to DIMACS"="191";"40 sat:11:generate path decomposition tree"="127";"02 preprocessing:07:compile methods with identical tasks"="3";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="27";"01 parsing:03:closed world assumption"="127";"02 preprocessing:11:lifted reachabiltiy analysis"="64";"01 parsing:02:sort expansion"="186";"40 sat:12:normalise path decomposition tree"="34";"40 sat:40:SAT solver"="80";"01 parsing:00:total"="973";"40 sat:10:generate formula"="1385";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="38";"00 total:00:total"="5000";"40 sat:13:sog optimisation"="22";"02 preprocessing:12:grounded planning graph analysis"="491";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="452";"02 preprocessing:04:split parameter"="29";"01 parsing:05:shop methods"="5";"10 search preparation:02:compute state invariants"="321";"01 parsing:06:eliminate identical variables"="53";"40 sat:15:translate path decomposition tree to clauses"="121";"02 preprocessing:05:expand choiceless abstract tasks"="0";"40 sat:41:SAT solver for K=0003"="80";"40 sat:17:generate state invariant formula"="395";"02 preprocessing:00:total"="1296";"02 preprocessing:99:create artificial top task"="16";"02 preprocessing:84:grounding"="142"
#!verify __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2];__method_precondition_m2_goto_2_precondition[rooma];nop[];pick[ball1,rooma,right];pick[ball2,rooma,left];move[rooma,roomb];drop[ball1,roomb,right];drop[ball2,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball3,rooma,right];pick[ball4,rooma,left];move[rooma,roomb];drop[ball3,roomb,right];drop[ball4,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball5,rooma,right];pick[ball6,rooma,left];move[rooma,roomb];drop[ball5,roomb,right];drop[ball6,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball7,rooma,right];pick[ball8,rooma,left];move[rooma,roomb];drop[ball7,roomb,right];drop[ball8,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball9,rooma,left];pick[ball10,rooma,right];move[rooma,roomb];drop[ball9,roomb,left];drop[ball10,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball11,rooma,left];pick[ball12,rooma,right];move[rooma,roomb];drop[ball11,roomb,left];drop[ball12,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball13,rooma,left];pick[ball14,rooma,right];move[rooma,roomb];drop[ball13,roomb,left];drop[ball14,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball15,rooma,left];pick[ball16,rooma,right];move[rooma,roomb];drop[ball15,roomb,left];drop[ball16,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball17,rooma,left];pick[ball18,rooma,right];move[rooma,roomb];drop[ball17,roomb,left];drop[ball18,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball19,rooma,left];pick[ball20,rooma,right];move[rooma,roomb];drop[ball19,roomb,left];drop[ball20,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball21,rooma,left];pick[ball22,rooma,right];move[rooma,roomb];drop[ball21,roomb,left];drop[ball22,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball23,rooma,left];pick[ball24,rooma,right];move[rooma,roomb];drop[ball23,roomb,left];drop[ball24,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball25,rooma,ball26];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball25,rooma,left];pick[ball26,rooma,right];move[rooma,roomb];drop[ball25,roomb,left];drop[ball26,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball27,rooma,ball28];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball27,rooma,left];pick[ball28,rooma,right];move[rooma,roomb];drop[ball27,roomb,left];drop[ball28,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball29,rooma,ball30];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball29,rooma,left];pick[ball30,rooma,right];move[rooma,roomb];drop[ball29,roomb,left];drop[ball30,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball31,rooma,ball32];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball31,rooma,left];pick[ball32,rooma,right];move[rooma,roomb];drop[ball31,roomb,left];drop[ball32,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball33,rooma,ball34];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball33,rooma,left];pick[ball34,rooma,right];move[rooma,roomb];drop[ball33,roomb,left];drop[ball34,roomb,right]
==>
0 __method_precondition_m0_move_two_balls_0_precondition ball1 rooma ball2 
1 __method_precondition_m2_goto_2_precondition rooma 
2 nop  
3 pick ball1 rooma right 
4 pick ball2 rooma left 
5 move rooma roomb 
6 drop ball1 roomb right 
7 drop ball2 roomb left 
8 __method_precondition_m0_move_two_balls_0_precondition ball3 rooma ball4 
9 __method_precondition_m3_goto_3_precondition roomb 
10 move roomb rooma 
11 pick ball3 rooma right 
12 pick ball4 rooma left 
13 move rooma roomb 
14 drop ball3 roomb right 
15 drop ball4 roomb left 
16 __method_precondition_m0_move_two_balls_0_precondition ball5 rooma ball6 
17 __method_precondition_m3_goto_3_precondition roomb 
18 move roomb rooma 
19 pick ball5 rooma right 
20 pick ball6 rooma left 
21 move rooma roomb 
22 drop ball5 roomb right 
23 drop ball6 roomb left 
24 __method_precondition_m0_move_two_balls_0_precondition ball7 rooma ball8 
25 __method_precondition_m3_goto_3_precondition roomb 
26 move roomb rooma 
27 pick ball7 rooma right 
28 pick ball8 rooma left 
29 move rooma roomb 
30 drop ball7 roomb right 
31 drop ball8 roomb left 
32 __method_precondition_m0_move_two_balls_0_precondition ball9 rooma ball10 
33 __method_precondition_m3_goto_3_precondition roomb 
34 move roomb rooma 
35 pick ball9 rooma left 
36 pick ball10 rooma right 
37 move rooma roomb 
38 drop ball9 roomb left 
39 drop ball10 roomb right 
40 __method_precondition_m0_move_two_balls_0_precondition ball11 rooma ball12 
41 __method_precondition_m3_goto_3_precondition roomb 
42 move roomb rooma 
43 pick ball11 rooma left 
44 pick ball12 rooma right 
45 move rooma roomb 
46 drop ball11 roomb left 
47 drop ball12 roomb right 
48 __method_precondition_m0_move_two_balls_0_precondition ball13 rooma ball14 
49 __method_precondition_m3_goto_3_precondition roomb 
50 move roomb rooma 
51 pick ball13 rooma left 
52 pick ball14 rooma right 
53 move rooma roomb 
54 drop ball13 roomb left 
55 drop ball14 roomb right 
56 __method_precondition_m0_move_two_balls_0_precondition ball15 rooma ball16 
57 __method_precondition_m3_goto_3_precondition roomb 
58 move roomb rooma 
59 pick ball15 rooma left 
60 pick ball16 rooma right 
61 move rooma roomb 
62 drop ball15 roomb left 
63 drop ball16 roomb right 
64 __method_precondition_m0_move_two_balls_0_precondition ball17 rooma ball18 
65 __method_precondition_m3_goto_3_precondition roomb 
66 move roomb rooma 
67 pick ball17 rooma left 
68 pick ball18 rooma right 
69 move rooma roomb 
70 drop ball17 roomb left 
71 drop ball18 roomb right 
72 __method_precondition_m0_move_two_balls_0_precondition ball19 rooma ball20 
73 __method_precondition_m3_goto_3_precondition roomb 
74 move roomb rooma 
75 pick ball19 rooma left 
76 pick ball20 rooma right 
77 move rooma roomb 
78 drop ball19 roomb left 
79 drop ball20 roomb right 
80 __method_precondition_m0_move_two_balls_0_precondition ball21 rooma ball22 
81 __method_precondition_m3_goto_3_precondition roomb 
82 move roomb rooma 
83 pick ball21 rooma left 
84 pick ball22 rooma right 
85 move rooma roomb 
86 drop ball21 roomb left 
87 drop ball22 roomb right 
88 __method_precondition_m0_move_two_balls_0_precondition ball23 rooma ball24 
89 __method_precondition_m3_goto_3_precondition roomb 
90 move roomb rooma 
91 pick ball23 rooma left 
92 pick ball24 rooma right 
93 move rooma roomb 
94 drop ball23 roomb left 
95 drop ball24 roomb right 
96 __method_precondition_m0_move_two_balls_0_precondition ball25 rooma ball26 
97 __method_precondition_m3_goto_3_precondition roomb 
98 move roomb rooma 
99 pick ball25 rooma left 
100 pick ball26 rooma right 
101 move rooma roomb 
102 drop ball25 roomb left 
103 drop ball26 roomb right 
104 __method_precondition_m0_move_two_balls_0_precondition ball27 rooma ball28 
105 __method_precondition_m3_goto_3_precondition roomb 
106 move roomb rooma 
107 pick ball27 rooma left 
108 pick ball28 rooma right 
109 move rooma roomb 
110 drop ball27 roomb left 
111 drop ball28 roomb right 
112 __method_precondition_m0_move_two_balls_0_precondition ball29 rooma ball30 
113 __method_precondition_m3_goto_3_precondition roomb 
114 move roomb rooma 
115 pick ball29 rooma left 
116 pick ball30 rooma right 
117 move rooma roomb 
118 drop ball29 roomb left 
119 drop ball30 roomb right 
120 __method_precondition_m0_move_two_balls_0_precondition ball31 rooma ball32 
121 __method_precondition_m3_goto_3_precondition roomb 
122 move roomb rooma 
123 pick ball31 rooma left 
124 pick ball32 rooma right 
125 move rooma roomb 
126 drop ball31 roomb left 
127 drop ball32 roomb right 
128 __method_precondition_m0_move_two_balls_0_precondition ball33 rooma ball34 
129 __method_precondition_m3_goto_3_precondition roomb 
130 move roomb rooma 
131 pick ball33 rooma left 
132 pick ball34 rooma right 
133 move rooma roomb 
134 drop ball33 roomb left 
135 drop ball34 roomb right 
root 167
136 move_two_balls ball11 ball12 roomb  -> m0_move_two_balls 40 170 43 44 45 46 47
137 goto rooma  -> m3_goto 65 66
138 goto rooma  -> m3_goto 73 74
139 move_two_balls ball3 ball4 roomb  -> m0_move_two_balls 8 161 11 12 13 14 15
140 move_two_balls ball31 ball32 roomb  -> m0_move_two_balls 120 162 123 124 125 126 127
141 move_two_balls ball7 ball8 roomb  -> m0_move_two_balls 24 147 27 28 29 30 31
142 move_two_balls ball13 ball14 roomb  -> m0_move_two_balls 48 145 51 52 53 54 55
143 goto rooma  -> m3_goto 105 106
144 move_two_balls ball15 ball16 roomb  -> m0_move_two_balls 56 146 59 60 61 62 63
145 goto rooma  -> m3_goto 49 50
146 goto rooma  -> m3_goto 57 58
147 goto rooma  -> m3_goto 25 26
148 move_two_balls ball19 ball20 roomb  -> m0_move_two_balls 72 138 75 76 77 78 79
149 move_two_balls ball29 ball30 roomb  -> m0_move_two_balls 112 169 115 116 117 118 119
150 move_two_balls ball27 ball28 roomb  -> m0_move_two_balls 104 143 107 108 109 110 111
151 move_two_balls ball21 ball22 roomb  -> m0_move_two_balls 80 153 83 84 85 86 87
152 move_two_balls ball25 ball26 roomb  -> m0_move_two_balls 96 166 99 100 101 102 103
153 goto rooma  -> m3_goto 81 82
154 move_two_balls ball5 ball6 roomb  -> m0_move_two_balls 16 155 19 20 21 22 23
155 goto rooma  -> m3_goto 17 18
156 move_two_balls ball9 ball10 roomb  -> m0_move_two_balls 32 164 35 36 37 38 39
157 goto rooma  -> m2_goto 1 2
158 move_two_balls ball23 ball24 roomb  -> m0_move_two_balls 88 168 91 92 93 94 95
159 goto rooma  -> m3_goto 129 130
160 move_two_balls ball1 ball2 roomb  -> m0_move_two_balls 0 157 3 4 5 6 7
161 goto rooma  -> m3_goto 9 10
162 goto rooma  -> m3_goto 121 122
163 move_two_balls ball33 ball34 roomb  -> m0_move_two_balls 128 159 131 132 133 134 135
164 goto rooma  -> m3_goto 33 34
165 move_two_balls ball17 ball18 roomb  -> m0_move_two_balls 64 137 67 68 69 70 71
166 goto rooma  -> m3_goto 97 98
167 __artificialTopCompilation__top_1  -> __top_1 160 139 154 141 156 136 142 144 165 148 151 158 152 150 149 140 163
168 goto rooma  -> m3_goto 89 90
169 goto rooma  -> m3_goto 113 114
170 goto rooma  -> m3_goto 41 42

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 5.997 MEMPEAK_KBS 312756.224
