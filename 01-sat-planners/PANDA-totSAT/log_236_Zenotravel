PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/Zenotravel/domain.hddl instances/Zenotravel/p14.hddl"


Planner Configuration
=====================
Domain: instances/Zenotravel/domain.hddl
Problem: instances/Zenotravel/p14.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p14.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 5
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 4
	number of sorts = 6
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 32
Compiling negative preconditions ... done.
	number of abstract tasks = 5
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 32
Compiling split parameters ... done.
	number of abstract tasks = 5
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 32
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 5
	number of tasks = 22
	number of decomposition methods = 12
	number of predicates = 7
	number of sorts = 6
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 32
Grounded planning graph ... done in 1457ms.
	Number of Grounded Actions 29050
	Number of Grounded Literals 484
	number of abstract tasks = 5
	number of tasks = 22
	number of decomposition methods = 12
	number of predicates = 7
	number of sorts = 6
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 32
Two Way TDG ... done.
	number of abstract tasks = 5
	number of tasks = 22
	number of decomposition methods = 12
	number of predicates = 7
	number of sorts = 6
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 32
Grounding ... done.
	number of abstract tasks = 604
	number of tasks = 29654
	number of decomposition methods = 24749
	number of predicates = 533
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 604
	number of tasks = 29654
	number of decomposition methods = 24749
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 2654ms.
	Number of Grounded Actions 29050
	Number of Grounded Literals 435
	number of abstract tasks = 604
	number of tasks = 29654
	number of decomposition methods = 24749
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 604
	number of tasks = 29654
	number of decomposition methods = 24749
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 110
	number of tasks = 29160
	number of decomposition methods = 24255
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 110
	number of tasks = 29160
	number of decomposition methods = 24255
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 110
	number of tasks = 29160
	number of decomposition methods = 24255
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 972ms.
	Number of Grounded Actions 29050
	Number of Grounded Literals 435
	number of abstract tasks = 110
	number of tasks = 29160
	number of decomposition methods = 24255
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 110
	number of tasks = 29160
	number of decomposition methods = 24255
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 110
	number of tasks = 29160
	number of decomposition methods = 24255
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 110
	number of tasks = 29160
	number of decomposition methods = 24255
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 380
	number of tasks = 29430
	number of decomposition methods = 24525
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 380
	number of tasks = 29430
	number of decomposition methods = 24525
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 24749
	number of epsilon methods = 0
	number of primitive tasks = 29050
	number of constants = 0
Tasks 29050 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854748244ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854744018
done
initial PDT has 201 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 39 leafs
SHOP LEAFS 30
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 283185
Size 283185 at 0/29050
Size 283185 at 500/29050
Size 283185 at 1000/29050
Size 283185 at 1500/29050
Size 283185 at 2000/29050
Size 283185 at 2500/29050
Size 283185 at 3000/29050
Size 283185 at 3500/29050
Size 283185 at 4000/29050
Size 283185 at 4500/29050
Size 283185 at 5000/29050
Size 264904 at 5500/29050
Size 236033 at 6000/29050
Size 221481 at 6500/29050
Size 221477 at 7000/29050
Size 221477 at 7500/29050
Size 221477 at 8000/29050
Size 221477 at 8500/29050
Size 221477 at 9000/29050
Size 216655 at 9500/29050
Size 216655 at 10000/29050
Size 216655 at 10500/29050
Size 216655 at 11000/29050
Size 216655 at 11500/29050
Size 216655 at 12000/29050
Size 216655 at 12500/29050
Size 216655 at 13000/29050
Size 216655 at 13500/29050
Size 216655 at 14000/29050
Size 216655 at 14500/29050
Size 216655 at 15000/29050
Size 216655 at 15500/29050
Size 216655 at 16000/29050
Size 216655 at 16500/29050
Size 216655 at 17000/29050
Size 216655 at 17500/29050
Size 216655 at 18000/29050
Size 216655 at 18500/29050
Size 216655 at 19000/29050
Size 216655 at 19500/29050
Size 216655 at 20000/29050
Size 216655 at 20500/29050
Size 216655 at 21000/29050
Size 216655 at 21500/29050
Size 216655 at 22000/29050
Size 216655 at 22500/29050
Size 216655 at 23000/29050
Size 216655 at 23500/29050
Size 216655 at 24000/29050
Size 216655 at 24500/29050
Size 216655 at 25000/29050
Size 216655 at 25500/29050
Size 216655 at 26000/29050
Size 216655 at 26500/29050
Size 216655 at 27000/29050
Size 216655 at 27500/29050
Size 216443 at 28000/29050
Size 214765 at 28500/29050
Size 146003 at 29000/29050
Size 142247
Size 142247 at 0/29050
Size 142247 at 500/29050
Size 142247 at 1000/29050
Size 142247 at 1500/29050
Size 142247 at 2000/29050
Size 142247 at 2500/29050
Size 142247 at 3000/29050
Size 142247 at 3500/29050
Size 142247 at 4000/29050
Size 142247 at 4500/29050
Size 142247 at 5000/29050
Size 140665 at 5500/29050
Size 140661 at 6000/29050
Size 140661 at 6500/29050
Size 140661 at 7000/29050
Size 140661 at 7500/29050
Size 140661 at 8000/29050
Size 140661 at 8500/29050
Size 140661 at 9000/29050
Size 140661 at 9500/29050
Size 140661 at 10000/29050
Size 140661 at 10500/29050
Size 140661 at 11000/29050
Size 140661 at 11500/29050
Size 140661 at 12000/29050
Size 140661 at 12500/29050
Size 140661 at 13000/29050
Size 140661 at 13500/29050
Size 140661 at 14000/29050
Size 140661 at 14500/29050
Size 140661 at 15000/29050
Size 140661 at 15500/29050
Size 140661 at 16000/29050
Size 140661 at 16500/29050
Size 140661 at 17000/29050
Size 140661 at 17500/29050
Size 140661 at 18000/29050
Size 140661 at 18500/29050
Size 140661 at 19000/29050
Size 140661 at 19500/29050
Size 140661 at 20000/29050
Size 140661 at 20500/29050
Size 140661 at 21000/29050
Size 140661 at 21500/29050
Size 140661 at 22000/29050
Size 140661 at 22500/29050
Size 140661 at 23000/29050
Size 140661 at 23500/29050
Size 140661 at 24000/29050
Size 140661 at 24500/29050
Size 140661 at 25000/29050
Size 140661 at 25500/29050
Size 140661 at 26000/29050
Size 140661 at 26500/29050
Size 140661 at 27000/29050
Size 140661 at 27500/29050
Size 87389 at 28000/29050
Size 6201 at 28500/29050
Size 5605 at 29000/29050
Size 5605
Size 5605 at 0/29050
Size 5605 at 500/29050
Size 5605 at 1000/29050
Size 5605 at 1500/29050
Size 5605 at 2000/29050
Size 5605 at 2500/29050
Size 5605 at 3000/29050
Size 5605 at 3500/29050
Size 5605 at 4000/29050
Size 5605 at 4500/29050
Size 5605 at 5000/29050
Size 5605 at 5500/29050
Size 5605 at 6000/29050
Size 5605 at 6500/29050
Size 5605 at 7000/29050
Size 5605 at 7500/29050
Size 5605 at 8000/29050
Size 5605 at 8500/29050
Size 5605 at 9000/29050
Size 5605 at 9500/29050
Size 5605 at 10000/29050
Size 5605 at 10500/29050
Size 5605 at 11000/29050
Size 5605 at 11500/29050
Size 5605 at 12000/29050
Size 5605 at 12500/29050
Size 5605 at 13000/29050
Size 5605 at 13500/29050
Size 5605 at 14000/29050
Size 5605 at 14500/29050
Size 5605 at 15000/29050
Size 5605 at 15500/29050
Size 5605 at 16000/29050
Size 5605 at 16500/29050
Size 5605 at 17000/29050
Size 5605 at 17500/29050
Size 5605 at 18000/29050
Size 5605 at 18500/29050
Size 5605 at 19000/29050
Size 5605 at 19500/29050
Size 5605 at 20000/29050
Size 5605 at 20500/29050
Size 5605 at 21000/29050
Size 5605 at 21500/29050
Size 5605 at 22000/29050
Size 5605 at 22500/29050
Size 5605 at 23000/29050
Size 5605 at 23500/29050
Size 5605 at 24000/29050
Size 5605 at 24500/29050
Size 5605 at 25000/29050
Size 5605 at 25500/29050
Size 5605 at 26000/29050
Size 5605 at 26500/29050
Size 5605 at 27000/29050
Size 5605 at 27500/29050
Size 5605 at 28000/29050
Size 5605 at 28500/29050
Size 5605 at 29000/29050
Size 5605
Invariant time: 9.729
Number of invariants: 5605
Invariant Clauses 224200
NUMBER OF CLAUSES 512456
NUMBER OF STATE CLAUSES 271513
NUMBER OF DECOMPOSITION CLAUSES 240943
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 52.980000000000004% 47.02% 0.0% 
NUMBER OF PATHS 39
Starting cryptominisat
Setting starttime of solver to 1603885846307
Command exited with non-zero status 20
0.12 0.00

Time command gave the following runtime for the solver: 120
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854728798
done
initial PDT has 381 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 282 leafs
SHOP LEAFS 156
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 71028 will abort at 9223372036854728798

RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 178.116 MEMPEAK_KBS 8050502.656
