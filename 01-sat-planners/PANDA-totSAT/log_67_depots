PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/depots/domain.hddl instances/depots/p07.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p07.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p07.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 20
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 20
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 20
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 20
Grounded planning graph ... done in 224ms.
	Number of Grounded Actions 244
	Number of Grounded Literals 109
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 20
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 20
Grounding ... done.
	number of abstract tasks = 89
	number of tasks = 266
	number of decomposition methods = 196
	number of predicates = 118
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 89
	number of tasks = 266
	number of decomposition methods = 196
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 42ms.
	Number of Grounded Actions 177
	Number of Grounded Literals 87
	number of abstract tasks = 89
	number of tasks = 266
	number of decomposition methods = 196
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 89
	number of tasks = 266
	number of decomposition methods = 196
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 52
	number of tasks = 229
	number of decomposition methods = 159
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 52
	number of tasks = 229
	number of decomposition methods = 159
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 52
	number of tasks = 229
	number of decomposition methods = 159
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 11ms.
	Number of Grounded Actions 177
	Number of Grounded Literals 87
	number of abstract tasks = 52
	number of tasks = 229
	number of decomposition methods = 159
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 52
	number of tasks = 229
	number of decomposition methods = 159
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 36
	number of tasks = 213
	number of decomposition methods = 143
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 36
	number of tasks = 213
	number of decomposition methods = 143
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 36
	number of tasks = 213
	number of decomposition methods = 143
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 15ms.
	Number of Grounded Actions 177
	Number of Grounded Literals 87
	number of abstract tasks = 36
	number of tasks = 213
	number of decomposition methods = 143
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 36
	number of tasks = 213
	number of decomposition methods = 143
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 31
	number of tasks = 208
	number of decomposition methods = 138
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 31
	number of tasks = 208
	number of decomposition methods = 138
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 31
	number of tasks = 208
	number of decomposition methods = 138
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 6ms.
	Number of Grounded Actions 177
	Number of Grounded Literals 87
	number of abstract tasks = 31
	number of tasks = 208
	number of decomposition methods = 138
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 31
	number of tasks = 208
	number of decomposition methods = 138
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 31
	number of tasks = 208
	number of decomposition methods = 138
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 31
	number of tasks = 208
	number of decomposition methods = 138
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 31
	number of tasks = 208
	number of decomposition methods = 138
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 31
	number of tasks = 208
	number of decomposition methods = 138
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 105
	number of epsilon methods = 0
	number of primitive tasks = 177
	number of constants = 0
Tasks 177 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772788ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 36 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 10 leafs
SHOP LEAFS 10
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 122 will abort at 9223372036854772759
done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 11223
Size 11223 at 0/177
Size 5268
Size 5268 at 0/177
Size 2576
Size 2576 at 0/177
Size 812
Size 812 at 0/177
Size 737
Size 737 at 0/177
Size 711
Size 711 at 0/177
Size 686
Size 686 at 0/177
Size 677
Size 677 at 0/177
Size 677
Invariant time: 0.18
Number of invariants: 677
Invariant Clauses 7447
NUMBER OF CLAUSES 9343
NUMBER OF STATE CLAUSES 9279
NUMBER OF DECOMPOSITION CLAUSES 64
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.31% 0.6900000000000001% 0.0% 
NUMBER OF PATHS 10
Starting cryptominisat
Setting starttime of solver to 1603874362066
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 106 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 68 leafs
SHOP LEAFS 37
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854772082
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 46713
NUMBER OF CLAUSES 63813
NUMBER OF STATE CLAUSES 59785
NUMBER OF DECOMPOSITION CLAUSES 4028
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 93.69% 6.3100000000000005% 0.0% 
NUMBER OF PATHS 68
Starting cryptominisat
Setting starttime of solver to 1603874362617
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 167 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 141 leafs
SHOP LEAFS 72
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771524
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 96134
NUMBER OF CLAUSES 131819
NUMBER OF STATE CLAUSES 123123
NUMBER OF DECOMPOSITION CLAUSES 8696
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 93.4% 6.6000000000000005% 0.0% 
NUMBER OF PATHS 141
Starting cryptominisat
Setting starttime of solver to 1603874363343
Command exited with non-zero status 10
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_3;6,7 7 m6_do_get_truck
3;6 3 pathaction!2_3;6,162
Consider method^2_3;7,85 85 m4_do_clear
3;7 90 pathaction!2_3;7,182
Consider method^2_4;1,108 108 m7_do_get_truck
4;1 67 pathaction!2_4;1,159
Consider method^2_1;2,32 32 m5_do_clear
1;2 55 pathaction!2_1;2,183
Consider method^3_1;2;1,92 92 m4_do_clear
1;2;1 61 pathaction!3_1;2;1,185
Consider method^2_0;1,129 129 m7_do_get_truck
0;1 26 pathaction!2_0;1,158
Consider method^2_0;8,65 65 m4_do_clear
0;8 58 pathaction!2_0;8,181
Consider method^1_4,132 132 <<<<m3_do_put_on;do_unload_truck[crate5,crate1,distributor1,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate5,depot0,truck0];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate5,pallet0,depot0,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate5,depot0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9>
4 27 pathaction!1_4,177
Consider method^1_0,96 96 <<<<m3_do_put_on;do_unload_truck[crate3,pallet1,distributor0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate3,distributor1,truck1];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate3,crate2,distributor1,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate3,distributor1];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9>
0 87 pathaction!1_0,175
Consider method^3_1;2;3,31 31 m6_do_get_truck
1;2;3 28 pathaction!3_1;2;3,161
Consider method^3_2;7;1,56 56 m4_do_clear
2;7;1 60 pathaction!3_2;7;1,184
Consider method^2_1;4,67 67 m9_do_lift_crate
1;4 63 pathaction!2_1;4,54
Consider method^2_2;7,116 116 m5_do_clear
2;7 34 pathaction!2_2;7,180
Consider method^2_1;3,75 75 m4_do_clear
1;3 24 pathaction!2_1;3,179
Consider method^0_,137 137 __top_1
 37 pathaction!0_,207
Consider method^1_3,49 49 m2_do_put_on
3 41 pathaction!1_3,174
Consider method^2_4;8,56 56 m4_do_clear
4;8 56 pathaction!2_4;8,184
Consider method^1_1,34 34 m1_do_put_on
1 91 pathaction!1_1,173
Consider method^1_2,84 84 m2_do_put_on
2 35 pathaction!1_2,176
Consider method^2_2;6,37 37 m7_do_get_truck
2;6 68 pathaction!2_2;6,158
Consider method^3_2;7;3,7 7 m6_do_get_truck
2;7;3 18 pathaction!3_2;7;3,162


CHECKING primitive solution of length 58 ...
true 13 __method_precondition_m10_do_load_truck_10_precondition[crate3,distributor1,crate2,hoist2;]
true 47 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 53 Drive[truck1,depot0,distributor1;]
true 50 __method_precondition_m4_do_clear_4_precondition[crate3,distributor1;]
true 10 nop[;]
true 86 Lift[hoist2,crate3,crate2,distributor1;]
true 39 Load[hoist2,crate3,truck1,distributor1;]
true 17 Drive[truck1,distributor1,distributor0;]
true 5 __method_precondition_m11_do_unload_truck_11_precondition[truck1,pallet1,hoist1,crate3,distributor0;]
true 36 __method_precondition_m4_do_clear_4_precondition[pallet1,distributor0;]
true 89 nop[;]
true 71 Unload[hoist1,crate3,truck1,distributor0;]
true 80 Drop[hoist1,crate3,pallet1,distributor0;]
true 81 __method_precondition_m1_do_put_on_1_precondition[crate0,distributor0;]
true 45 __method_precondition_m5_do_clear_5_precondition[crate0,crate4,distributor0,hoist1;]
true 2 __method_precondition_m4_do_clear_4_precondition[crate4,distributor0;]
true 30 nop[;]
true 65 Lift[hoist1,crate4,crate0,distributor0;]
true 16 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 22 nop[;]
true 84 Load[hoist1,crate4,truck1,distributor0;]
true 21 __method_precondition_m4_do_clear_4_precondition[pallet3,distributor0;]
true 42 nop[;]
true 20 __method_precondition_m9_do_lift_crate_9_precondition[crate0,pallet4,distributor0,hoist1;]
true 1 Lift[hoist1,crate0,pallet4,distributor0;]
true 76 Drop[hoist1,crate0,pallet3,distributor0;]
true 75 __method_precondition_m2_do_put_on_2_precondition[crate4,truck1;]
true 57 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 78 Drive[truck1,distributor0,distributor1;]
true 29 __method_precondition_m5_do_clear_5_precondition[pallet5,crate1,distributor1,hoist2;]
true 46 __method_precondition_m4_do_clear_4_precondition[crate1,distributor1;]
true 11 nop[;]
true 59 Lift[hoist2,crate1,pallet5,distributor1;]
true 73 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 4 nop[;]
true 14 Load[hoist2,crate1,truck0,distributor1;]
true 66 Unload[hoist2,crate4,truck1,distributor1;]
true 88 Drop[hoist2,crate4,pallet5,distributor1;]
true 9 __method_precondition_m2_do_put_on_2_precondition[crate1,truck0;]
true 32 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 49 nop[;]
true 79 __method_precondition_m4_do_clear_4_precondition[crate4,distributor1;]
true 19 nop[;]
true 74 Unload[hoist2,crate1,truck0,distributor1;]
true 43 Drop[hoist2,crate1,crate4,distributor1;]
true 48 __method_precondition_m10_do_load_truck_10_precondition[crate5,depot0,pallet0,hoist0;]
true 12 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot0;]
true 82 Drive[truck0,distributor1,depot0;]
true 64 __method_precondition_m4_do_clear_4_precondition[crate5,depot0;]
true 44 nop[;]
true 62 Lift[hoist0,crate5,pallet0,depot0;]
true 38 Load[hoist0,crate5,truck0,depot0;]
true 69 Drive[truck0,depot0,distributor1;]
true 0 __method_precondition_m11_do_unload_truck_11_precondition[truck0,crate1,hoist2,crate5,distributor1;]
true 8 __method_precondition_m4_do_clear_4_precondition[crate1,distributor1;]
true 83 nop[;]
true 31 Unload[hoist2,crate5,truck0,distributor1;]
true 77 Drop[hoist2,crate5,crate1,distributor1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 169893448
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 87
number of actions                    = 208
number of abstract actions           = 31
number of primitive actions          = 177
number of methods                    = 138
number of primitive shop actions     = 105
number of primitive non-shop actions = 72
size of largest method               = 11
average method size                  = 4
============ sat ============
plan length                     = -1
number of variables             = 26587
number of clauses               = 131819
average size of clauses         = 2.0462300578823993
number of assert                = 31
number of horn                  = 121056
K offset                        = 0
K chosen value                  = 4
state formula                   = 123123
method children clauses         = 0
number of paths                 = 141
maximum plan length             = 141
number of decomposition clauses = 8696
number of ordering clauses      = 0
number of state clauses         = 123123
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 5333
============ parsing ============
total                         = 989
file parser                   = 538
sort expansion                = 180
closed world assumption       = 99
inherit preconditions         = 0
shop methods                  = 17
eliminate identical variables = 68
strip domain of hybridity     = 1
flatten formula               = 77
============ preprocessing ============
total                                      = 1892
compile negative preconditions             = 42
compile unit methods                       = 0
split parameter                            = 36
expand choiceless abstract tasks           = 341
compile methods with identical tasks       = 2
removing unnecessary predicates            = 126
lifted reachabiltiy analysis               = 63
grounded planning graph analysis           = 539
grounded task decomposition graph analysis = 606
grounding                                  = 124
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 213
============ sat ============
total                                        = 1667
generate formula                             = 1153
generate path decomposition tree             = 165
normalise path decomposition tree            = 30
sog optimisation                             = 55
translate path decomposition tree to clauses = 191
generate state formula                       = 1135
generate state invariant formula             = 244
transform to DIMACS                          = 136
SAT solver                                   = 60
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 50

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="177";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="31";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="169893448";"40 sat:20:state formula"="123123";"40 sat:01:number of variables"="26587";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="141";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="138";"30 problem:07:number of primitive shop actions"="105";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="208";"30 problem:08:number of primitive non-shop actions"="72";"30 problem:02:number of predicates"="87";"40 sat:03:number of horn"="121056";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="4";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="11";"40 sat:03:average size of clauses"="2.0462300578823993";"40 sat:02:number of clauses"="131819";"40 sat:50:number of state clauses"="123123";"40 sat:03:number of assert"="31";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="141";"40 sat:50:number of decomposition clauses"="8696";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="538";"01 parsing:08:flatten formula"="77";"40 sat:41:SAT solver for K=0004"="50";"40 sat:00:total"="1667";"40 sat:16:generate state formula"="1135";"40 sat:20:transform to DIMACS"="136";"40 sat:11:generate path decomposition tree"="165";"02 preprocessing:07:compile methods with identical tasks"="2";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="126";"01 parsing:03:closed world assumption"="99";"02 preprocessing:11:lifted reachabiltiy analysis"="63";"01 parsing:02:sort expansion"="180";"40 sat:12:normalise path decomposition tree"="30";"40 sat:40:SAT solver"="60";"01 parsing:00:total"="989";"40 sat:10:generate formula"="1153";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="42";"00 total:00:total"="5333";"40 sat:13:sog optimisation"="55";"02 preprocessing:12:grounded planning graph analysis"="539";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="606";"02 preprocessing:04:split parameter"="36";"01 parsing:05:shop methods"="17";"10 search preparation:02:compute state invariants"="213";"01 parsing:06:eliminate identical variables"="68";"40 sat:15:translate path decomposition tree to clauses"="191";"02 preprocessing:05:expand choiceless abstract tasks"="341";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="244";"02 preprocessing:00:total"="1892";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="124"
#!verify __method_precondition_m10_do_load_truck_10_precondition[crate3,distributor1,crate2,hoist2];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1];Drive[truck1,depot0,distributor1];__method_precondition_m4_do_clear_4_precondition[crate3,distributor1];nop[];Lift[hoist2,crate3,crate2,distributor1];Load[hoist2,crate3,truck1,distributor1];Drive[truck1,distributor1,distributor0];__method_precondition_m11_do_unload_truck_11_precondition[truck1,pallet1,hoist1,crate3,distributor0];__method_precondition_m4_do_clear_4_precondition[pallet1,distributor0];nop[];Unload[hoist1,crate3,truck1,distributor0];Drop[hoist1,crate3,pallet1,distributor0];__method_precondition_m1_do_put_on_1_precondition[crate0,distributor0];__method_precondition_m5_do_clear_5_precondition[crate0,crate4,distributor0,hoist1];__method_precondition_m4_do_clear_4_precondition[crate4,distributor0];nop[];Lift[hoist1,crate4,crate0,distributor0];__method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0];nop[];Load[hoist1,crate4,truck1,distributor0];__method_precondition_m4_do_clear_4_precondition[pallet3,distributor0];nop[];__method_precondition_m9_do_lift_crate_9_precondition[crate0,pallet4,distributor0,hoist1];Lift[hoist1,crate0,pallet4,distributor0];Drop[hoist1,crate0,pallet3,distributor0];__method_precondition_m2_do_put_on_2_precondition[crate4,truck1];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1];Drive[truck1,distributor0,distributor1];__method_precondition_m5_do_clear_5_precondition[pallet5,crate1,distributor1,hoist2];__method_precondition_m4_do_clear_4_precondition[crate1,distributor1];nop[];Lift[hoist2,crate1,pallet5,distributor1];__method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1];nop[];Load[hoist2,crate1,truck0,distributor1];Unload[hoist2,crate4,truck1,distributor1];Drop[hoist2,crate4,pallet5,distributor1];__method_precondition_m2_do_put_on_2_precondition[crate1,truck0];__method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1];nop[];__method_precondition_m4_do_clear_4_precondition[crate4,distributor1];nop[];Unload[hoist2,crate1,truck0,distributor1];Drop[hoist2,crate1,crate4,distributor1];__method_precondition_m10_do_load_truck_10_precondition[crate5,depot0,pallet0,hoist0];__method_precondition_m7_do_get_truck_7_precondition[truck0,depot0];Drive[truck0,distributor1,depot0];__method_precondition_m4_do_clear_4_precondition[crate5,depot0];nop[];Lift[hoist0,crate5,pallet0,depot0];Load[hoist0,crate5,truck0,depot0];Drive[truck0,depot0,distributor1];__method_precondition_m11_do_unload_truck_11_precondition[truck0,crate1,hoist2,crate5,distributor1];__method_precondition_m4_do_clear_4_precondition[crate1,distributor1];nop[];Unload[hoist2,crate5,truck0,distributor1];Drop[hoist2,crate5,crate1,distributor1]
==>
0 __method_precondition_m10_do_load_truck_10_precondition crate3 distributor1 crate2 hoist2 
1 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor1 
2 Drive truck1 depot0 distributor1 
3 __method_precondition_m4_do_clear_4_precondition crate3 distributor1 
4 nop  
5 Lift hoist2 crate3 crate2 distributor1 
6 Load hoist2 crate3 truck1 distributor1 
7 Drive truck1 distributor1 distributor0 
8 __method_precondition_m11_do_unload_truck_11_precondition truck1 pallet1 hoist1 crate3 distributor0 
9 __method_precondition_m4_do_clear_4_precondition pallet1 distributor0 
10 nop  
11 Unload hoist1 crate3 truck1 distributor0 
12 Drop hoist1 crate3 pallet1 distributor0 
13 __method_precondition_m1_do_put_on_1_precondition crate0 distributor0 
14 __method_precondition_m5_do_clear_5_precondition crate0 crate4 distributor0 hoist1 
15 __method_precondition_m4_do_clear_4_precondition crate4 distributor0 
16 nop  
17 Lift hoist1 crate4 crate0 distributor0 
18 __method_precondition_m6_do_get_truck_6_precondition truck1 distributor0 
19 nop  
20 Load hoist1 crate4 truck1 distributor0 
21 __method_precondition_m4_do_clear_4_precondition pallet3 distributor0 
22 nop  
23 __method_precondition_m9_do_lift_crate_9_precondition crate0 pallet4 distributor0 hoist1 
24 Lift hoist1 crate0 pallet4 distributor0 
25 Drop hoist1 crate0 pallet3 distributor0 
26 __method_precondition_m2_do_put_on_2_precondition crate4 truck1 
27 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor1 
28 Drive truck1 distributor0 distributor1 
29 __method_precondition_m5_do_clear_5_precondition pallet5 crate1 distributor1 hoist2 
30 __method_precondition_m4_do_clear_4_precondition crate1 distributor1 
31 nop  
32 Lift hoist2 crate1 pallet5 distributor1 
33 __method_precondition_m6_do_get_truck_6_precondition truck0 distributor1 
34 nop  
35 Load hoist2 crate1 truck0 distributor1 
36 Unload hoist2 crate4 truck1 distributor1 
37 Drop hoist2 crate4 pallet5 distributor1 
38 __method_precondition_m2_do_put_on_2_precondition crate1 truck0 
39 __method_precondition_m6_do_get_truck_6_precondition truck0 distributor1 
40 nop  
41 __method_precondition_m4_do_clear_4_precondition crate4 distributor1 
42 nop  
43 Unload hoist2 crate1 truck0 distributor1 
44 Drop hoist2 crate1 crate4 distributor1 
45 __method_precondition_m10_do_load_truck_10_precondition crate5 depot0 pallet0 hoist0 
46 __method_precondition_m7_do_get_truck_7_precondition truck0 depot0 
47 Drive truck0 distributor1 depot0 
48 __method_precondition_m4_do_clear_4_precondition crate5 depot0 
49 nop  
50 Lift hoist0 crate5 pallet0 depot0 
51 Load hoist0 crate5 truck0 depot0 
52 Drive truck0 depot0 distributor1 
53 __method_precondition_m11_do_unload_truck_11_precondition truck0 crate1 hoist2 crate5 distributor1 
54 __method_precondition_m4_do_clear_4_precondition crate1 distributor1 
55 nop  
56 Unload hoist2 crate5 truck0 distributor1 
57 Drop hoist2 crate5 crate1 distributor1 
root 69
58 do_put_on crate5 crate1  -> <<<<m3_do_put_on;do_unload_truck[crate5,crate1,distributor1,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate5,depot0,truck0];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate5,pallet0,depot0,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate5,depot0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9> 45 65 48 49 50 51 52 53 74 56 57
59 do_put_on crate0 pallet3  -> m1_do_put_on 13 68 60 70 25
60 do_clear pallet3 distributor0  -> m4_do_clear 21 22
61 do_clear crate4 distributor0  -> m4_do_clear 15 16
62 do_put_on crate1 crate4  -> m2_do_put_on 38 63 72 43 44
63 do_get_truck truck0 distributor1  -> m6_do_get_truck 39 40
64 do_clear pallet5 distributor1  -> m5_do_clear 29 77 32 76 35
65 do_get_truck truck0 depot0  -> m7_do_get_truck 46 47
66 do_get_truck truck1 distributor1  -> m7_do_get_truck 27 28
67 do_put_on crate3 pallet1  -> <<<<m3_do_put_on;do_unload_truck[crate3,pallet1,distributor0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate3,distributor1,truck1];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate3,crate2,distributor1,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate3,distributor1];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9> 0 73 3 4 5 6 7 8 71 11 12
68 do_clear crate0 distributor0  -> m5_do_clear 14 61 17 78 20
69 __choicelessATCompilation__top_1  -> __top_1 67 59 75 62 58
70 do_lift_crate crate0 distributor0 hoist1  -> m9_do_lift_crate 23 24
71 do_clear pallet1 distributor0  -> m4_do_clear 9 10
72 do_clear crate4 distributor1  -> m4_do_clear 41 42
73 do_get_truck truck1 distributor1  -> m7_do_get_truck 1 2
74 do_clear crate1 distributor1  -> m4_do_clear 54 55
75 do_put_on crate4 pallet5  -> m2_do_put_on 26 66 64 36 37
76 do_get_truck truck0 distributor1  -> m6_do_get_truck 33 34
77 do_clear crate1 distributor1  -> m4_do_clear 30 31
78 do_get_truck truck1 distributor0  -> m6_do_get_truck 18 19

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 6.295 MEMPEAK_KBS 554866.688
