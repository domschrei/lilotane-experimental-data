PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/gripper/domain.hddl instances/gripper/p14.hddl"


Planner Configuration
=====================
Domain: instances/gripper/domain.hddl
Problem: instances/gripper/p14.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p14.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 34
Compiling negative preconditions ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 34
Compiling split parameters ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 34
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 34
Grounded planning graph ... done in 264ms.
	Number of Grounded Actions 219
	Number of Grounded Literals 124
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 34
Two Way TDG ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 34
Grounding ... done.
	number of abstract tasks = 17
	number of tasks = 235
	number of decomposition methods = 124
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 17
	number of tasks = 235
	number of decomposition methods = 124
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 50ms.
	Number of Grounded Actions 218
	Number of Grounded Literals 124
	number of abstract tasks = 17
	number of tasks = 235
	number of decomposition methods = 124
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 17
	number of tasks = 235
	number of decomposition methods = 124
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 17
	number of tasks = 235
	number of decomposition methods = 124
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 18
	number of tasks = 236
	number of decomposition methods = 125
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 18
	number of tasks = 236
	number of decomposition methods = 125
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 25ms.
	Number of Grounded Actions 218
	Number of Grounded Literals 124
	number of abstract tasks = 18
	number of tasks = 236
	number of decomposition methods = 125
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 18
	number of tasks = 236
	number of decomposition methods = 125
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 18
	number of tasks = 236
	number of decomposition methods = 125
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 18
	number of tasks = 236
	number of decomposition methods = 125
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 18
	number of tasks = 236
	number of decomposition methods = 125
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 18
	number of tasks = 236
	number of decomposition methods = 125
	number of predicates = 124
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 34
	number of epsilon methods = 0
	number of primitive tasks = 218
	number of constants = 0
Tasks 218 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773477ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 105 will abort at 9223372036854773441
done
initial PDT has 120 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 120 leafs
SHOP LEAFS 30
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 22878
Size 22878 at 0/218
Size 7939
Size 7939 at 0/218
Size 1112
Size 1112 at 0/218
Size 1112
Invariant time: 0.169
Number of invariants: 1112
Invariant Clauses 134552
NUMBER OF CLAUSES 168640
NUMBER OF STATE CLAUSES 165741
NUMBER OF DECOMPOSITION CLAUSES 2899
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.28% 1.72% 0.0% 
NUMBER OF PATHS 120
Starting cryptominisat
Setting starttime of solver to 1603876538751
Command exited with non-zero status 10
0.06 0.00

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_5;1,62 62 m3_goto
5;1 139 pathaction!2_5;1,4
Consider method^1_4,40 40 m0_move_two_balls
4 62 pathaction!1_4,231
Consider method^1_7,65 65 m0_move_two_balls
7 74 pathaction!1_7,227
Consider method^1_12,27 27 m0_move_two_balls
12 123 pathaction!1_12,223
Consider method^2_10;1,62 62 m3_goto
10;1 47 pathaction!2_10;1,4
Consider method^1_10,96 96 m0_move_two_balls
10 12 pathaction!1_10,222
Consider method^0_,124 124 __top_1
 143 pathaction!0_,235
Consider method^1_6,110 110 m0_move_two_balls
6 120 pathaction!1_6,230
Consider method^2_8;1,62 62 m3_goto
8;1 30 pathaction!2_8;1,4
Consider method^2_9;1,62 62 m3_goto
9;1 18 pathaction!2_9;1,4
Consider method^2_13;1,62 62 m3_goto
13;1 48 pathaction!2_13;1,4
Consider method^2_0;1,56 56 m2_goto
0;1 51 pathaction!2_0;1,4
Consider method^2_11;1,62 62 m3_goto
11;1 57 pathaction!2_11;1,4
Consider method^2_7;1,62 62 m3_goto
7;1 88 pathaction!2_7;1,4
Consider method^2_6;1,62 62 m3_goto
6;1 14 pathaction!2_6;1,4
Consider method^1_9,33 33 m0_move_two_balls
9 24 pathaction!1_9,226
Consider method^2_3;1,62 62 m3_goto
3;1 41 pathaction!2_3;1,4
Consider method^2_4;1,62 62 m3_goto
4;1 94 pathaction!2_4;1,4
Consider method^1_11,98 98 m0_move_two_balls
11 97 pathaction!1_11,232
Consider method^2_12;1,62 62 m3_goto
12;1 38 pathaction!2_12;1,4
Consider method^1_0,99 99 m0_move_two_balls
0 112 pathaction!1_0,224
Consider method^2_1;1,62 62 m3_goto
1;1 22 pathaction!2_1;1,4
Consider method^1_3,103 103 m0_move_two_balls
3 91 pathaction!1_3,221
Consider method^1_8,21 21 m0_move_two_balls
8 64 pathaction!1_8,228
Consider method^2_2;1,62 62 m3_goto
2;1 135 pathaction!2_2;1,4
Consider method^1_13,84 84 m0_move_two_balls
13 109 pathaction!1_13,233
Consider method^1_5,81 81 m0_move_two_balls
5 84 pathaction!1_5,234
Consider method^1_14,61 61 m0_move_two_balls
14 122 pathaction!1_14,229
Consider method^2_14;1,62 62 m3_goto
14;1 78 pathaction!2_14;1,4
Consider method^1_1,107 107 m0_move_two_balls
1 46 pathaction!1_1,220
Consider method^1_2,77 77 m0_move_two_balls
2 58 pathaction!1_2,225


CHECKING primitive solution of length 120 ...
true 16 __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2;]
true 90 __method_precondition_m2_goto_2_precondition[rooma;]
true 17 nop[;]
true 10 pick[ball1,rooma,left;]
true 130 pick[ball2,rooma,right;]
true 72 move[rooma,roomb;]
true 76 drop[ball1,roomb,left;]
true 56 drop[ball2,roomb,right;]
true 50 __method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4;]
true 37 __method_precondition_m3_goto_3_precondition[roomb;]
true 36 move[roomb,rooma;]
true 116 pick[ball3,rooma,right;]
true 98 pick[ball4,rooma,left;]
true 102 move[rooma,roomb;]
true 92 drop[ball3,roomb,right;]
true 29 drop[ball4,roomb,left;]
true 4 __method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6;]
true 127 __method_precondition_m3_goto_3_precondition[roomb;]
true 96 move[roomb,rooma;]
true 53 pick[ball5,rooma,left;]
true 68 pick[ball6,rooma,right;]
true 87 move[rooma,roomb;]
true 118 drop[ball5,roomb,left;]
true 89 drop[ball6,roomb,right;]
true 31 __method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8;]
true 115 __method_precondition_m3_goto_3_precondition[roomb;]
true 148 move[roomb,rooma;]
true 142 pick[ball7,rooma,left;]
true 3 pick[ball8,rooma,right;]
true 49 move[rooma,roomb;]
true 136 drop[ball7,roomb,left;]
true 133 drop[ball8,roomb,right;]
true 21 __method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10;]
true 70 __method_precondition_m3_goto_3_precondition[roomb;]
true 140 move[roomb,rooma;]
true 25 pick[ball9,rooma,left;]
true 15 pick[ball10,rooma,right;]
true 45 move[rooma,roomb;]
true 99 drop[ball9,roomb,left;]
true 8 drop[ball10,roomb,right;]
true 121 __method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12;]
true 111 __method_precondition_m3_goto_3_precondition[roomb;]
true 54 move[roomb,rooma;]
true 42 pick[ball11,rooma,right;]
true 144 pick[ball12,rooma,left;]
true 43 move[rooma,roomb;]
true 55 drop[ball11,roomb,right;]
true 1 drop[ball12,roomb,left;]
true 101 __method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14;]
true 79 __method_precondition_m3_goto_3_precondition[roomb;]
true 39 move[roomb,rooma;]
true 128 pick[ball13,rooma,left;]
true 129 pick[ball14,rooma,right;]
true 126 move[rooma,roomb;]
true 60 drop[ball13,roomb,left;]
true 113 drop[ball14,roomb,right;]
true 59 __method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16;]
true 138 __method_precondition_m3_goto_3_precondition[roomb;]
true 134 move[roomb,rooma;]
true 75 pick[ball15,rooma,right;]
true 103 pick[ball16,rooma,left;]
true 131 move[rooma,roomb;]
true 69 drop[ball15,roomb,right;]
true 105 drop[ball16,roomb,left;]
true 124 __method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18;]
true 119 __method_precondition_m3_goto_3_precondition[roomb;]
true 26 move[roomb,rooma;]
true 107 pick[ball17,rooma,right;]
true 80 pick[ball18,rooma,left;]
true 5 move[rooma,roomb;]
true 65 drop[ball17,roomb,right;]
true 19 drop[ball18,roomb,left;]
true 7 __method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20;]
true 125 __method_precondition_m3_goto_3_precondition[roomb;]
true 81 move[roomb,rooma;]
true 6 pick[ball19,rooma,right;]
true 149 pick[ball20,rooma,left;]
true 34 move[rooma,roomb;]
true 147 drop[ball19,roomb,right;]
true 67 drop[ball20,roomb,left;]
true 11 __method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22;]
true 40 __method_precondition_m3_goto_3_precondition[roomb;]
true 132 move[roomb,rooma;]
true 44 pick[ball21,rooma,left;]
true 137 pick[ball22,rooma,right;]
true 95 move[rooma,roomb;]
true 2 drop[ball21,roomb,left;]
true 114 drop[ball22,roomb,right;]
true 85 __method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24;]
true 23 __method_precondition_m3_goto_3_precondition[roomb;]
true 100 move[roomb,rooma;]
true 13 pick[ball23,rooma,left;]
true 32 pick[ball24,rooma,right;]
true 35 move[rooma,roomb;]
true 83 drop[ball23,roomb,left;]
true 141 drop[ball24,roomb,right;]
true 28 __method_precondition_m0_move_two_balls_0_precondition[ball25,rooma,ball26;]
true 117 __method_precondition_m3_goto_3_precondition[roomb;]
true 63 move[roomb,rooma;]
true 20 pick[ball25,rooma,left;]
true 106 pick[ball26,rooma,right;]
true 108 move[rooma,roomb;]
true 82 drop[ball25,roomb,left;]
true 86 drop[ball26,roomb,right;]
true 73 __method_precondition_m0_move_two_balls_0_precondition[ball27,rooma,ball28;]
true 66 __method_precondition_m3_goto_3_precondition[roomb;]
true 52 move[roomb,rooma;]
true 33 pick[ball27,rooma,left;]
true 146 pick[ball28,rooma,right;]
true 61 move[rooma,roomb;]
true 110 drop[ball27,roomb,left;]
true 0 drop[ball28,roomb,right;]
true 9 __method_precondition_m0_move_two_balls_0_precondition[ball29,rooma,ball30;]
true 104 __method_precondition_m3_goto_3_precondition[roomb;]
true 145 move[roomb,rooma;]
true 27 pick[ball29,rooma,right;]
true 93 pick[ball30,rooma,left;]
true 77 move[rooma,roomb;]
true 71 drop[ball29,roomb,right;]
true 150 drop[ball30,roomb,left;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 177782744
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 124
number of actions                    = 236
number of abstract actions           = 18
number of primitive actions          = 218
number of methods                    = 125
number of primitive shop actions     = 34
number of primitive non-shop actions = 184
size of largest method               = 15
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 30850
number of clauses               = 168640
average size of clauses         = 2.0048624288425048
number of assert                = 34
number of horn                  = 167889
K offset                        = 0
K chosen value                  = 3
state formula                   = 165741
method children clauses         = 0
number of paths                 = 120
maximum plan length             = 120
number of decomposition clauses = 2899
number of ordering clauses      = 0
number of state clauses         = 165741
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 4367
============ parsing ============
total                         = 911
file parser                   = 534
sort expansion                = 168
closed world assumption       = 80
inherit preconditions         = 0
shop methods                  = 9
eliminate identical variables = 56
strip domain of hybridity     = 1
flatten formula               = 63
============ preprocessing ============
total                                      = 1287
compile negative preconditions             = 49
compile unit methods                       = 0
split parameter                            = 42
expand choiceless abstract tasks           = 0
compile methods with identical tasks       = 19
removing unnecessary predicates            = 25
lifted reachabiltiy analysis               = 51
grounded planning graph analysis           = 482
grounded task decomposition graph analysis = 473
grounding                                  = 120
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 241
============ sat ============
total                                        = 1380
generate formula                             = 1012
generate path decomposition tree             = 123
normalise path decomposition tree            = 28
sog optimisation                             = 29
translate path decomposition tree to clauses = 112
generate state formula                       = 975
generate state invariant formula             = 166
transform to DIMACS                          = 189
SAT solver                                   = 60
SAT solver for K=0003                        = 60

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="218";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="18";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="177782744";"40 sat:20:state formula"="165741";"40 sat:01:number of variables"="30850";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="120";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="125";"30 problem:07:number of primitive shop actions"="34";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="236";"30 problem:08:number of primitive non-shop actions"="184";"30 problem:02:number of predicates"="124";"40 sat:03:number of horn"="167889";"40 sat:15:K chosen value"="3";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="15";"40 sat:03:average size of clauses"="2.0048624288425048";"40 sat:02:number of clauses"="168640";"40 sat:50:number of state clauses"="165741";"40 sat:03:number of assert"="34";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="120";"40 sat:50:number of decomposition clauses"="2899";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="534";"01 parsing:08:flatten formula"="63";"40 sat:00:total"="1380";"40 sat:16:generate state formula"="975";"40 sat:20:transform to DIMACS"="189";"40 sat:11:generate path decomposition tree"="123";"02 preprocessing:07:compile methods with identical tasks"="19";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="25";"01 parsing:03:closed world assumption"="80";"02 preprocessing:11:lifted reachabiltiy analysis"="51";"01 parsing:02:sort expansion"="168";"40 sat:12:normalise path decomposition tree"="28";"40 sat:40:SAT solver"="60";"01 parsing:00:total"="911";"40 sat:10:generate formula"="1012";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="49";"00 total:00:total"="4367";"40 sat:13:sog optimisation"="29";"02 preprocessing:12:grounded planning graph analysis"="482";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="473";"02 preprocessing:04:split parameter"="42";"01 parsing:05:shop methods"="9";"10 search preparation:02:compute state invariants"="241";"01 parsing:06:eliminate identical variables"="56";"40 sat:15:translate path decomposition tree to clauses"="112";"02 preprocessing:05:expand choiceless abstract tasks"="0";"40 sat:41:SAT solver for K=0003"="60";"40 sat:17:generate state invariant formula"="166";"02 preprocessing:00:total"="1287";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="120"
#!verify __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2];__method_precondition_m2_goto_2_precondition[rooma];nop[];pick[ball1,rooma,left];pick[ball2,rooma,right];move[rooma,roomb];drop[ball1,roomb,left];drop[ball2,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball3,rooma,right];pick[ball4,rooma,left];move[rooma,roomb];drop[ball3,roomb,right];drop[ball4,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball5,rooma,left];pick[ball6,rooma,right];move[rooma,roomb];drop[ball5,roomb,left];drop[ball6,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball7,rooma,left];pick[ball8,rooma,right];move[rooma,roomb];drop[ball7,roomb,left];drop[ball8,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball9,rooma,left];pick[ball10,rooma,right];move[rooma,roomb];drop[ball9,roomb,left];drop[ball10,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball11,rooma,right];pick[ball12,rooma,left];move[rooma,roomb];drop[ball11,roomb,right];drop[ball12,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball13,rooma,left];pick[ball14,rooma,right];move[rooma,roomb];drop[ball13,roomb,left];drop[ball14,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball15,rooma,right];pick[ball16,rooma,left];move[rooma,roomb];drop[ball15,roomb,right];drop[ball16,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball17,rooma,right];pick[ball18,rooma,left];move[rooma,roomb];drop[ball17,roomb,right];drop[ball18,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball19,rooma,right];pick[ball20,rooma,left];move[rooma,roomb];drop[ball19,roomb,right];drop[ball20,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball21,rooma,left];pick[ball22,rooma,right];move[rooma,roomb];drop[ball21,roomb,left];drop[ball22,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball23,rooma,left];pick[ball24,rooma,right];move[rooma,roomb];drop[ball23,roomb,left];drop[ball24,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball25,rooma,ball26];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball25,rooma,left];pick[ball26,rooma,right];move[rooma,roomb];drop[ball25,roomb,left];drop[ball26,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball27,rooma,ball28];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball27,rooma,left];pick[ball28,rooma,right];move[rooma,roomb];drop[ball27,roomb,left];drop[ball28,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball29,rooma,ball30];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball29,rooma,right];pick[ball30,rooma,left];move[rooma,roomb];drop[ball29,roomb,right];drop[ball30,roomb,left]
==>
0 __method_precondition_m0_move_two_balls_0_precondition ball1 rooma ball2 
1 __method_precondition_m2_goto_2_precondition rooma 
2 nop  
3 pick ball1 rooma left 
4 pick ball2 rooma right 
5 move rooma roomb 
6 drop ball1 roomb left 
7 drop ball2 roomb right 
8 __method_precondition_m0_move_two_balls_0_precondition ball3 rooma ball4 
9 __method_precondition_m3_goto_3_precondition roomb 
10 move roomb rooma 
11 pick ball3 rooma right 
12 pick ball4 rooma left 
13 move rooma roomb 
14 drop ball3 roomb right 
15 drop ball4 roomb left 
16 __method_precondition_m0_move_two_balls_0_precondition ball5 rooma ball6 
17 __method_precondition_m3_goto_3_precondition roomb 
18 move roomb rooma 
19 pick ball5 rooma left 
20 pick ball6 rooma right 
21 move rooma roomb 
22 drop ball5 roomb left 
23 drop ball6 roomb right 
24 __method_precondition_m0_move_two_balls_0_precondition ball7 rooma ball8 
25 __method_precondition_m3_goto_3_precondition roomb 
26 move roomb rooma 
27 pick ball7 rooma left 
28 pick ball8 rooma right 
29 move rooma roomb 
30 drop ball7 roomb left 
31 drop ball8 roomb right 
32 __method_precondition_m0_move_two_balls_0_precondition ball9 rooma ball10 
33 __method_precondition_m3_goto_3_precondition roomb 
34 move roomb rooma 
35 pick ball9 rooma left 
36 pick ball10 rooma right 
37 move rooma roomb 
38 drop ball9 roomb left 
39 drop ball10 roomb right 
40 __method_precondition_m0_move_two_balls_0_precondition ball11 rooma ball12 
41 __method_precondition_m3_goto_3_precondition roomb 
42 move roomb rooma 
43 pick ball11 rooma right 
44 pick ball12 rooma left 
45 move rooma roomb 
46 drop ball11 roomb right 
47 drop ball12 roomb left 
48 __method_precondition_m0_move_two_balls_0_precondition ball13 rooma ball14 
49 __method_precondition_m3_goto_3_precondition roomb 
50 move roomb rooma 
51 pick ball13 rooma left 
52 pick ball14 rooma right 
53 move rooma roomb 
54 drop ball13 roomb left 
55 drop ball14 roomb right 
56 __method_precondition_m0_move_two_balls_0_precondition ball15 rooma ball16 
57 __method_precondition_m3_goto_3_precondition roomb 
58 move roomb rooma 
59 pick ball15 rooma right 
60 pick ball16 rooma left 
61 move rooma roomb 
62 drop ball15 roomb right 
63 drop ball16 roomb left 
64 __method_precondition_m0_move_two_balls_0_precondition ball17 rooma ball18 
65 __method_precondition_m3_goto_3_precondition roomb 
66 move roomb rooma 
67 pick ball17 rooma right 
68 pick ball18 rooma left 
69 move rooma roomb 
70 drop ball17 roomb right 
71 drop ball18 roomb left 
72 __method_precondition_m0_move_two_balls_0_precondition ball19 rooma ball20 
73 __method_precondition_m3_goto_3_precondition roomb 
74 move roomb rooma 
75 pick ball19 rooma right 
76 pick ball20 rooma left 
77 move rooma roomb 
78 drop ball19 roomb right 
79 drop ball20 roomb left 
80 __method_precondition_m0_move_two_balls_0_precondition ball21 rooma ball22 
81 __method_precondition_m3_goto_3_precondition roomb 
82 move roomb rooma 
83 pick ball21 rooma left 
84 pick ball22 rooma right 
85 move rooma roomb 
86 drop ball21 roomb left 
87 drop ball22 roomb right 
88 __method_precondition_m0_move_two_balls_0_precondition ball23 rooma ball24 
89 __method_precondition_m3_goto_3_precondition roomb 
90 move roomb rooma 
91 pick ball23 rooma left 
92 pick ball24 rooma right 
93 move rooma roomb 
94 drop ball23 roomb left 
95 drop ball24 roomb right 
96 __method_precondition_m0_move_two_balls_0_precondition ball25 rooma ball26 
97 __method_precondition_m3_goto_3_precondition roomb 
98 move roomb rooma 
99 pick ball25 rooma left 
100 pick ball26 rooma right 
101 move rooma roomb 
102 drop ball25 roomb left 
103 drop ball26 roomb right 
104 __method_precondition_m0_move_two_balls_0_precondition ball27 rooma ball28 
105 __method_precondition_m3_goto_3_precondition roomb 
106 move roomb rooma 
107 pick ball27 rooma left 
108 pick ball28 rooma right 
109 move rooma roomb 
110 drop ball27 roomb left 
111 drop ball28 roomb right 
112 __method_precondition_m0_move_two_balls_0_precondition ball29 rooma ball30 
113 __method_precondition_m3_goto_3_precondition roomb 
114 move roomb rooma 
115 pick ball29 rooma right 
116 pick ball30 rooma left 
117 move rooma roomb 
118 drop ball29 roomb right 
119 drop ball30 roomb left 
root 138
120 goto rooma  -> m3_goto 97 98
121 goto rooma  -> m2_goto 1 2
122 move_two_balls ball19 ball20 roomb  -> m0_move_two_balls 72 145 75 76 77 78 79
123 goto rooma  -> m3_goto 89 90
124 move_two_balls ball13 ball14 roomb  -> m0_move_two_balls 48 146 51 52 53 54 55
125 goto rooma  -> m3_goto 105 106
126 goto rooma  -> m3_goto 41 42
127 move_two_balls ball21 ball22 roomb  -> m0_move_two_balls 80 133 83 84 85 86 87
128 goto rooma  -> m3_goto 9 10
129 move_two_balls ball29 ball30 roomb  -> m0_move_two_balls 112 144 115 116 117 118 119
130 move_two_balls ball15 ball16 roomb  -> m0_move_two_balls 56 140 59 60 61 62 63
131 goto rooma  -> m3_goto 17 18
132 move_two_balls ball11 ball12 roomb  -> m0_move_two_balls 40 126 43 44 45 46 47
133 goto rooma  -> m3_goto 81 82
134 move_two_balls ball27 ball28 roomb  -> m0_move_two_balls 104 125 107 108 109 110 111
135 move_two_balls ball3 ball4 roomb  -> m0_move_two_balls 8 128 11 12 13 14 15
136 move_two_balls ball17 ball18 roomb  -> m0_move_two_balls 64 139 67 68 69 70 71
137 goto rooma  -> m3_goto 33 34
138 __artificialTopCompilation__top_1  -> __top_1 150 135 141 143 147 132 124 130 136 122 127 148 142 134 129
139 goto rooma  -> m3_goto 65 66
140 goto rooma  -> m3_goto 57 58
141 move_two_balls ball5 ball6 roomb  -> m0_move_two_balls 16 131 19 20 21 22 23
142 move_two_balls ball25 ball26 roomb  -> m0_move_two_balls 96 120 99 100 101 102 103
143 move_two_balls ball7 ball8 roomb  -> m0_move_two_balls 24 149 27 28 29 30 31
144 goto rooma  -> m3_goto 113 114
145 goto rooma  -> m3_goto 73 74
146 goto rooma  -> m3_goto 49 50
147 move_two_balls ball9 ball10 roomb  -> m0_move_two_balls 32 137 35 36 37 38 39
148 move_two_balls ball23 ball24 roomb  -> m0_move_two_balls 88 123 91 92 93 94 95
149 goto rooma  -> m3_goto 25 26
150 move_two_balls ball1 ball2 roomb  -> m0_move_two_balls 0 121 3 4 5 6 7

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 5.413 MEMPEAK_KBS 301415.424
