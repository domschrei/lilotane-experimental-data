PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/gripper/domain.hddl instances/gripper/p15.hddl"


Planner Configuration
=====================
Domain: instances/gripper/domain.hddl
Problem: instances/gripper/p15.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p15.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 36
Compiling negative preconditions ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 36
Compiling split parameters ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 36
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 36
Grounded planning graph ... done in 237ms.
	Number of Grounded Actions 233
	Number of Grounded Literals 132
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 36
Two Way TDG ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 36
Grounding ... done.
	number of abstract tasks = 18
	number of tasks = 250
	number of decomposition methods = 132
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 18
	number of tasks = 250
	number of decomposition methods = 132
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 84ms.
	Number of Grounded Actions 232
	Number of Grounded Literals 132
	number of abstract tasks = 18
	number of tasks = 250
	number of decomposition methods = 132
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 18
	number of tasks = 250
	number of decomposition methods = 132
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 18
	number of tasks = 250
	number of decomposition methods = 132
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 19
	number of tasks = 251
	number of decomposition methods = 133
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 19
	number of tasks = 251
	number of decomposition methods = 133
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 30ms.
	Number of Grounded Actions 232
	Number of Grounded Literals 132
	number of abstract tasks = 19
	number of tasks = 251
	number of decomposition methods = 133
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 19
	number of tasks = 251
	number of decomposition methods = 133
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 19
	number of tasks = 251
	number of decomposition methods = 133
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 19
	number of tasks = 251
	number of decomposition methods = 133
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 19
	number of tasks = 251
	number of decomposition methods = 133
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 19
	number of tasks = 251
	number of decomposition methods = 133
	number of predicates = 132
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 36
	number of epsilon methods = 0
	number of primitive tasks = 232
	number of constants = 0
Tasks 232 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773301ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854773258
done
initial PDT has 128 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 128 leafs
SHOP LEAFS 32
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 25938
Size 25938 at 0/232
Size 3266
Size 3266 at 0/232
Size 1250
Size 1250 at 0/232
Size 1250
Invariant time: 0.184
Number of invariants: 1250
Invariant Clauses 161250
NUMBER OF CLAUSES 199658
NUMBER OF STATE CLAUSES 196566
NUMBER OF DECOMPOSITION CLAUSES 3092
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.45% 1.55% 0.0% 
NUMBER OF PATHS 128
Starting cryptominisat
Setting starttime of solver to 1603876544637
Command exited with non-zero status 10
0.05 0.02

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_14;1,60 60 m3_goto
14;1 98 pathaction!2_14;1,17
Consider method^2_0;1,55 55 m2_goto
0;1 72 pathaction!2_0;1,17
Consider method^0_,132 132 __top_1
 126 pathaction!0_,250
Consider method^2_15;1,60 60 m3_goto
15;1 6 pathaction!2_15;1,17
Consider method^1_5,44 44 m0_move_two_balls
5 110 pathaction!1_5,15
Consider method^2_1;1,60 60 m3_goto
1;1 105 pathaction!2_1;1,17
Consider method^1_13,21 21 m0_move_two_balls
13 61 pathaction!1_13,14
Consider method^1_1,4 4 m0_move_two_balls
1 90 pathaction!1_1,0
Consider method^1_8,38 38 m0_move_two_balls
8 47 pathaction!1_8,9
Consider method^2_2;1,60 60 m3_goto
2;1 155 pathaction!2_2;1,17
Consider method^2_4;1,60 60 m3_goto
4;1 82 pathaction!2_4;1,17
Consider method^1_15,120 120 m0_move_two_balls
15 85 pathaction!1_15,1
Consider method^1_12,62 62 m0_move_two_balls
12 106 pathaction!1_12,4
Consider method^1_4,102 102 m0_move_two_balls
4 127 pathaction!1_4,12
Consider method^1_6,109 109 m0_move_two_balls
6 131 pathaction!1_6,11
Consider method^2_12;1,60 60 m3_goto
12;1 87 pathaction!2_12;1,17
Consider method^1_3,84 84 m0_move_two_balls
3 14 pathaction!1_3,2
Consider method^2_3;1,60 60 m3_goto
3;1 20 pathaction!2_3;1,17
Consider method^1_0,104 104 m0_move_two_balls
0 26 pathaction!1_0,5
Consider method^2_7;1,60 60 m3_goto
7;1 29 pathaction!2_7;1,17
Consider method^1_2,69 69 m0_move_two_balls
2 158 pathaction!1_2,6
Consider method^1_10,58 58 m0_move_two_balls
10 151 pathaction!1_10,3
Consider method^2_5;1,60 60 m3_goto
5;1 32 pathaction!2_5;1,17
Consider method^2_8;1,60 60 m3_goto
8;1 109 pathaction!2_8;1,17
Consider method^2_6;1,60 60 m3_goto
6;1 159 pathaction!2_6;1,17
Consider method^1_14,94 94 m0_move_two_balls
14 115 pathaction!1_14,10
Consider method^2_9;1,60 60 m3_goto
9;1 119 pathaction!2_9;1,17
Consider method^2_10;1,60 60 m3_goto
10;1 2 pathaction!2_10;1,17
Consider method^1_9,96 96 m0_move_two_balls
9 75 pathaction!1_9,7
Consider method^2_11;1,60 60 m3_goto
11;1 130 pathaction!2_11;1,17
Consider method^2_13;1,60 60 m3_goto
13;1 148 pathaction!2_13;1,17
Consider method^1_11,90 90 m0_move_two_balls
11 58 pathaction!1_11,13
Consider method^1_7,2 2 m0_move_two_balls
7 86 pathaction!1_7,8


CHECKING primitive solution of length 128 ...
true 147 __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2;]
true 113 __method_precondition_m2_goto_2_precondition[rooma;]
true 156 nop[;]
true 80 pick[ball1,rooma,right;]
true 116 pick[ball2,rooma,left;]
true 78 move[rooma,roomb;]
true 59 drop[ball1,roomb,right;]
true 35 drop[ball2,roomb,left;]
true 68 __method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4;]
true 120 __method_precondition_m3_goto_3_precondition[roomb;]
true 49 move[roomb,rooma;]
true 54 pick[ball3,rooma,right;]
true 125 pick[ball4,rooma,left;]
true 52 move[rooma,roomb;]
true 57 drop[ball3,roomb,right;]
true 97 drop[ball4,roomb,left;]
true 46 __method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6;]
true 89 __method_precondition_m3_goto_3_precondition[roomb;]
true 136 move[roomb,rooma;]
true 139 pick[ball5,rooma,left;]
true 67 pick[ball6,rooma,right;]
true 111 move[rooma,roomb;]
true 160 drop[ball5,roomb,left;]
true 154 drop[ball6,roomb,right;]
true 74 __method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8;]
true 135 __method_precondition_m3_goto_3_precondition[roomb;]
true 142 move[roomb,rooma;]
true 124 pick[ball7,rooma,left;]
true 99 pick[ball8,rooma,right;]
true 84 move[rooma,roomb;]
true 128 drop[ball7,roomb,left;]
true 152 drop[ball8,roomb,right;]
true 157 __method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10;]
true 31 __method_precondition_m3_goto_3_precondition[roomb;]
true 134 move[roomb,rooma;]
true 62 pick[ball9,rooma,left;]
true 23 pick[ball10,rooma,right;]
true 63 move[rooma,roomb;]
true 145 drop[ball9,roomb,left;]
true 43 drop[ball10,roomb,right;]
true 22 __method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12;]
true 108 __method_precondition_m3_goto_3_precondition[roomb;]
true 132 move[roomb,rooma;]
true 146 pick[ball11,rooma,right;]
true 112 pick[ball12,rooma,left;]
true 70 move[rooma,roomb;]
true 7 drop[ball11,roomb,right;]
true 4 drop[ball12,roomb,left;]
true 95 __method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14;]
true 94 __method_precondition_m3_goto_3_precondition[roomb;]
true 36 move[roomb,rooma;]
true 41 pick[ball13,rooma,left;]
true 71 pick[ball14,rooma,right;]
true 65 move[rooma,roomb;]
true 117 drop[ball13,roomb,left;]
true 53 drop[ball14,roomb,right;]
true 27 __method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16;]
true 129 __method_precondition_m3_goto_3_precondition[roomb;]
true 34 move[roomb,rooma;]
true 50 pick[ball15,rooma,right;]
true 102 pick[ball16,rooma,left;]
true 137 move[rooma,roomb;]
true 39 drop[ball15,roomb,right;]
true 96 drop[ball16,roomb,left;]
true 144 __method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18;]
true 140 __method_precondition_m3_goto_3_precondition[roomb;]
true 21 move[roomb,rooma;]
true 88 pick[ball17,rooma,left;]
true 55 pick[ball18,rooma,right;]
true 64 move[rooma,roomb;]
true 40 drop[ball17,roomb,left;]
true 141 drop[ball18,roomb,right;]
true 5 __method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20;]
true 60 __method_precondition_m3_goto_3_precondition[roomb;]
true 103 move[roomb,rooma;]
true 121 pick[ball19,rooma,left;]
true 0 pick[ball20,rooma,right;]
true 138 move[rooma,roomb;]
true 8 drop[ball19,roomb,left;]
true 37 drop[ball20,roomb,right;]
true 76 __method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22;]
true 48 __method_precondition_m3_goto_3_precondition[roomb;]
true 123 move[roomb,rooma;]
true 15 pick[ball21,rooma,left;]
true 56 pick[ball22,rooma,right;]
true 101 move[rooma,roomb;]
true 11 drop[ball21,roomb,left;]
true 107 drop[ball22,roomb,right;]
true 9 __method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24;]
true 149 __method_precondition_m3_goto_3_precondition[roomb;]
true 150 move[roomb,rooma;]
true 24 pick[ball23,rooma,left;]
true 79 pick[ball24,rooma,right;]
true 93 move[rooma,roomb;]
true 92 drop[ball23,roomb,left;]
true 73 drop[ball24,roomb,right;]
true 3 __method_precondition_m0_move_two_balls_0_precondition[ball25,rooma,ball26;]
true 13 __method_precondition_m3_goto_3_precondition[roomb;]
true 83 move[roomb,rooma;]
true 38 pick[ball25,rooma,left;]
true 81 pick[ball26,rooma,right;]
true 1 move[rooma,roomb;]
true 44 drop[ball25,roomb,left;]
true 12 drop[ball26,roomb,right;]
true 30 __method_precondition_m0_move_two_balls_0_precondition[ball27,rooma,ball28;]
true 100 __method_precondition_m3_goto_3_precondition[roomb;]
true 118 move[roomb,rooma;]
true 25 pick[ball27,rooma,left;]
true 91 pick[ball28,rooma,right;]
true 114 move[rooma,roomb;]
true 33 drop[ball27,roomb,left;]
true 69 drop[ball28,roomb,right;]
true 42 __method_precondition_m0_move_two_balls_0_precondition[ball29,rooma,ball30;]
true 66 __method_precondition_m3_goto_3_precondition[roomb;]
true 19 move[roomb,rooma;]
true 77 pick[ball29,rooma,right;]
true 153 pick[ball30,rooma,left;]
true 143 move[rooma,roomb;]
true 122 drop[ball29,roomb,right;]
true 104 drop[ball30,roomb,left;]
true 10 __method_precondition_m0_move_two_balls_0_precondition[ball31,rooma,ball32;]
true 45 __method_precondition_m3_goto_3_precondition[roomb;]
true 18 move[roomb,rooma;]
true 51 pick[ball31,rooma,left;]
true 28 pick[ball32,rooma,right;]
true 17 move[rooma,roomb;]
true 133 drop[ball31,roomb,left;]
true 16 drop[ball32,roomb,right;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 189730328
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 132
number of actions                    = 251
number of abstract actions           = 19
number of primitive actions          = 232
number of methods                    = 133
number of primitive shop actions     = 36
number of primitive non-shop actions = 196
size of largest method               = 16
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 34954
number of clauses               = 199658
average size of clauses         = 2.004382494064851
number of assert                = 36
number of horn                  = 198857
K offset                        = 0
K chosen value                  = 3
state formula                   = 196566
method children clauses         = 0
number of paths                 = 128
maximum plan length             = 128
number of decomposition clauses = 3092
number of ordering clauses      = 0
number of state clauses         = 196566
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 4796
============ parsing ============
total                         = 973
file parser                   = 555
sort expansion                = 165
closed world assumption       = 101
inherit preconditions         = 0
shop methods                  = 6
eliminate identical variables = 65
strip domain of hybridity     = 1
flatten formula               = 79
============ preprocessing ============
total                                      = 1357
compile negative preconditions             = 30
compile unit methods                       = 0
split parameter                            = 26
expand choiceless abstract tasks           = 0
compile methods with identical tasks       = 4
removing unnecessary predicates            = 11
lifted reachabiltiy analysis               = 89
grounded planning graph analysis           = 513
grounded task decomposition graph analysis = 526
grounding                                  = 147
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 272
============ sat ============
total                                        = 1626
generate formula                             = 1206
generate path decomposition tree             = 124
normalise path decomposition tree            = 22
sog optimisation                             = 14
translate path decomposition tree to clauses = 154
generate state formula                       = 1193
generate state invariant formula             = 228
transform to DIMACS                          = 194
SAT solver                                   = 70
SAT solver for K=0003                        = 70

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="232";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="19";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="189730328";"40 sat:20:state formula"="196566";"40 sat:01:number of variables"="34954";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="128";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="133";"30 problem:07:number of primitive shop actions"="36";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="251";"30 problem:08:number of primitive non-shop actions"="196";"30 problem:02:number of predicates"="132";"40 sat:03:number of horn"="198857";"40 sat:15:K chosen value"="3";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="16";"40 sat:03:average size of clauses"="2.004382494064851";"40 sat:02:number of clauses"="199658";"40 sat:50:number of state clauses"="196566";"40 sat:03:number of assert"="36";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="128";"40 sat:50:number of decomposition clauses"="3092";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="555";"01 parsing:08:flatten formula"="79";"40 sat:00:total"="1626";"40 sat:16:generate state formula"="1193";"40 sat:20:transform to DIMACS"="194";"40 sat:11:generate path decomposition tree"="124";"02 preprocessing:07:compile methods with identical tasks"="4";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="11";"01 parsing:03:closed world assumption"="101";"02 preprocessing:11:lifted reachabiltiy analysis"="89";"01 parsing:02:sort expansion"="165";"40 sat:12:normalise path decomposition tree"="22";"40 sat:40:SAT solver"="70";"01 parsing:00:total"="973";"40 sat:10:generate formula"="1206";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="30";"00 total:00:total"="4796";"40 sat:13:sog optimisation"="14";"02 preprocessing:12:grounded planning graph analysis"="513";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="526";"02 preprocessing:04:split parameter"="26";"01 parsing:05:shop methods"="6";"10 search preparation:02:compute state invariants"="272";"01 parsing:06:eliminate identical variables"="65";"40 sat:15:translate path decomposition tree to clauses"="154";"02 preprocessing:05:expand choiceless abstract tasks"="0";"40 sat:41:SAT solver for K=0003"="70";"40 sat:17:generate state invariant formula"="228";"02 preprocessing:00:total"="1357";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="147"
#!verify __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2];__method_precondition_m2_goto_2_precondition[rooma];nop[];pick[ball1,rooma,right];pick[ball2,rooma,left];move[rooma,roomb];drop[ball1,roomb,right];drop[ball2,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball3,rooma,right];pick[ball4,rooma,left];move[rooma,roomb];drop[ball3,roomb,right];drop[ball4,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball5,rooma,left];pick[ball6,rooma,right];move[rooma,roomb];drop[ball5,roomb,left];drop[ball6,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball7,rooma,left];pick[ball8,rooma,right];move[rooma,roomb];drop[ball7,roomb,left];drop[ball8,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball9,rooma,left];pick[ball10,rooma,right];move[rooma,roomb];drop[ball9,roomb,left];drop[ball10,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball11,rooma,right];pick[ball12,rooma,left];move[rooma,roomb];drop[ball11,roomb,right];drop[ball12,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball13,rooma,left];pick[ball14,rooma,right];move[rooma,roomb];drop[ball13,roomb,left];drop[ball14,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball15,rooma,right];pick[ball16,rooma,left];move[rooma,roomb];drop[ball15,roomb,right];drop[ball16,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball17,rooma,left];pick[ball18,rooma,right];move[rooma,roomb];drop[ball17,roomb,left];drop[ball18,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball19,rooma,left];pick[ball20,rooma,right];move[rooma,roomb];drop[ball19,roomb,left];drop[ball20,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball21,rooma,left];pick[ball22,rooma,right];move[rooma,roomb];drop[ball21,roomb,left];drop[ball22,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball23,rooma,left];pick[ball24,rooma,right];move[rooma,roomb];drop[ball23,roomb,left];drop[ball24,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball25,rooma,ball26];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball25,rooma,left];pick[ball26,rooma,right];move[rooma,roomb];drop[ball25,roomb,left];drop[ball26,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball27,rooma,ball28];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball27,rooma,left];pick[ball28,rooma,right];move[rooma,roomb];drop[ball27,roomb,left];drop[ball28,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball29,rooma,ball30];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball29,rooma,right];pick[ball30,rooma,left];move[rooma,roomb];drop[ball29,roomb,right];drop[ball30,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball31,rooma,ball32];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball31,rooma,left];pick[ball32,rooma,right];move[rooma,roomb];drop[ball31,roomb,left];drop[ball32,roomb,right]
==>
0 __method_precondition_m0_move_two_balls_0_precondition ball1 rooma ball2 
1 __method_precondition_m2_goto_2_precondition rooma 
2 nop  
3 pick ball1 rooma right 
4 pick ball2 rooma left 
5 move rooma roomb 
6 drop ball1 roomb right 
7 drop ball2 roomb left 
8 __method_precondition_m0_move_two_balls_0_precondition ball3 rooma ball4 
9 __method_precondition_m3_goto_3_precondition roomb 
10 move roomb rooma 
11 pick ball3 rooma right 
12 pick ball4 rooma left 
13 move rooma roomb 
14 drop ball3 roomb right 
15 drop ball4 roomb left 
16 __method_precondition_m0_move_two_balls_0_precondition ball5 rooma ball6 
17 __method_precondition_m3_goto_3_precondition roomb 
18 move roomb rooma 
19 pick ball5 rooma left 
20 pick ball6 rooma right 
21 move rooma roomb 
22 drop ball5 roomb left 
23 drop ball6 roomb right 
24 __method_precondition_m0_move_two_balls_0_precondition ball7 rooma ball8 
25 __method_precondition_m3_goto_3_precondition roomb 
26 move roomb rooma 
27 pick ball7 rooma left 
28 pick ball8 rooma right 
29 move rooma roomb 
30 drop ball7 roomb left 
31 drop ball8 roomb right 
32 __method_precondition_m0_move_two_balls_0_precondition ball9 rooma ball10 
33 __method_precondition_m3_goto_3_precondition roomb 
34 move roomb rooma 
35 pick ball9 rooma left 
36 pick ball10 rooma right 
37 move rooma roomb 
38 drop ball9 roomb left 
39 drop ball10 roomb right 
40 __method_precondition_m0_move_two_balls_0_precondition ball11 rooma ball12 
41 __method_precondition_m3_goto_3_precondition roomb 
42 move roomb rooma 
43 pick ball11 rooma right 
44 pick ball12 rooma left 
45 move rooma roomb 
46 drop ball11 roomb right 
47 drop ball12 roomb left 
48 __method_precondition_m0_move_two_balls_0_precondition ball13 rooma ball14 
49 __method_precondition_m3_goto_3_precondition roomb 
50 move roomb rooma 
51 pick ball13 rooma left 
52 pick ball14 rooma right 
53 move rooma roomb 
54 drop ball13 roomb left 
55 drop ball14 roomb right 
56 __method_precondition_m0_move_two_balls_0_precondition ball15 rooma ball16 
57 __method_precondition_m3_goto_3_precondition roomb 
58 move roomb rooma 
59 pick ball15 rooma right 
60 pick ball16 rooma left 
61 move rooma roomb 
62 drop ball15 roomb right 
63 drop ball16 roomb left 
64 __method_precondition_m0_move_two_balls_0_precondition ball17 rooma ball18 
65 __method_precondition_m3_goto_3_precondition roomb 
66 move roomb rooma 
67 pick ball17 rooma left 
68 pick ball18 rooma right 
69 move rooma roomb 
70 drop ball17 roomb left 
71 drop ball18 roomb right 
72 __method_precondition_m0_move_two_balls_0_precondition ball19 rooma ball20 
73 __method_precondition_m3_goto_3_precondition roomb 
74 move roomb rooma 
75 pick ball19 rooma left 
76 pick ball20 rooma right 
77 move rooma roomb 
78 drop ball19 roomb left 
79 drop ball20 roomb right 
80 __method_precondition_m0_move_two_balls_0_precondition ball21 rooma ball22 
81 __method_precondition_m3_goto_3_precondition roomb 
82 move roomb rooma 
83 pick ball21 rooma left 
84 pick ball22 rooma right 
85 move rooma roomb 
86 drop ball21 roomb left 
87 drop ball22 roomb right 
88 __method_precondition_m0_move_two_balls_0_precondition ball23 rooma ball24 
89 __method_precondition_m3_goto_3_precondition roomb 
90 move roomb rooma 
91 pick ball23 rooma left 
92 pick ball24 rooma right 
93 move rooma roomb 
94 drop ball23 roomb left 
95 drop ball24 roomb right 
96 __method_precondition_m0_move_two_balls_0_precondition ball25 rooma ball26 
97 __method_precondition_m3_goto_3_precondition roomb 
98 move roomb rooma 
99 pick ball25 rooma left 
100 pick ball26 rooma right 
101 move rooma roomb 
102 drop ball25 roomb left 
103 drop ball26 roomb right 
104 __method_precondition_m0_move_two_balls_0_precondition ball27 rooma ball28 
105 __method_precondition_m3_goto_3_precondition roomb 
106 move roomb rooma 
107 pick ball27 rooma left 
108 pick ball28 rooma right 
109 move rooma roomb 
110 drop ball27 roomb left 
111 drop ball28 roomb right 
112 __method_precondition_m0_move_two_balls_0_precondition ball29 rooma ball30 
113 __method_precondition_m3_goto_3_precondition roomb 
114 move roomb rooma 
115 pick ball29 rooma right 
116 pick ball30 rooma left 
117 move rooma roomb 
118 drop ball29 roomb right 
119 drop ball30 roomb left 
120 __method_precondition_m0_move_two_balls_0_precondition ball31 rooma ball32 
121 __method_precondition_m3_goto_3_precondition roomb 
122 move roomb rooma 
123 pick ball31 rooma left 
124 pick ball32 rooma right 
125 move rooma roomb 
126 drop ball31 roomb left 
127 drop ball32 roomb right 
root 148
128 goto rooma  -> m3_goto 121 122
129 goto rooma  -> m3_goto 65 66
130 move_two_balls ball11 ball12 roomb  -> m0_move_two_balls 40 133 43 44 45 46 47
131 move_two_balls ball9 ball10 roomb  -> m0_move_two_balls 32 154 35 36 37 38 39
132 move_two_balls ball17 ball18 roomb  -> m0_move_two_balls 64 129 67 68 69 70 71
133 goto rooma  -> m3_goto 41 42
134 move_two_balls ball7 ball8 roomb  -> m0_move_two_balls 24 149 27 28 29 30 31
135 move_two_balls ball3 ball4 roomb  -> m0_move_two_balls 8 159 11 12 13 14 15
136 move_two_balls ball1 ball2 roomb  -> m0_move_two_balls 0 140 3 4 5 6 7
137 goto rooma  -> m3_goto 49 50
138 move_two_balls ball19 ball20 roomb  -> m0_move_two_balls 72 143 75 76 77 78 79
139 move_two_balls ball25 ball26 roomb  -> m0_move_two_balls 96 141 99 100 101 102 103
140 goto rooma  -> m2_goto 1 2
141 goto rooma  -> m3_goto 97 98
142 move_two_balls ball21 ball22 roomb  -> m0_move_two_balls 80 155 83 84 85 86 87
143 goto rooma  -> m3_goto 73 74
144 goto rooma  -> m3_goto 17 18
145 goto rooma  -> m3_goto 89 90
146 goto rooma  -> m3_goto 113 114
147 move_two_balls ball15 ball16 roomb  -> m0_move_two_balls 56 157 59 60 61 62 63
148 __artificialTopCompilation__top_1  -> __top_1 136 135 150 134 131 130 156 147 132 138 142 153 139 151 152 160
149 goto rooma  -> m3_goto 25 26
150 move_two_balls ball5 ball6 roomb  -> m0_move_two_balls 16 144 19 20 21 22 23
151 move_two_balls ball27 ball28 roomb  -> m0_move_two_balls 104 158 107 108 109 110 111
152 move_two_balls ball29 ball30 roomb  -> m0_move_two_balls 112 146 115 116 117 118 119
153 move_two_balls ball23 ball24 roomb  -> m0_move_two_balls 88 145 91 92 93 94 95
154 goto rooma  -> m3_goto 33 34
155 goto rooma  -> m3_goto 81 82
156 move_two_balls ball13 ball14 roomb  -> m0_move_two_balls 48 137 51 52 53 54 55
157 goto rooma  -> m3_goto 57 58
158 goto rooma  -> m3_goto 105 106
159 goto rooma  -> m3_goto 9 10
160 move_two_balls ball31 ball32 roomb  -> m0_move_two_balls 120 128 123 124 125 126 127

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 5.888 MEMPEAK_KBS 309969.92
