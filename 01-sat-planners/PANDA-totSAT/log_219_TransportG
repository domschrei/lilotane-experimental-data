PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile27.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile27.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile27.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Grounded planning graph ... done in 328ms.
	Number of Grounded Actions 770
	Number of Grounded Literals 246
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Grounding ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 246
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 109ms.
	Number of Grounded Actions 770
	Number of Grounded Literals 195
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 51ms.
	Number of Grounded Actions 770
	Number of Grounded Literals 195
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 466
	number of tasks = 1236
	number of decomposition methods = 1316
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 466
	number of tasks = 1236
	number of decomposition methods = 1316
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Tasks 770 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772437ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854772302
done
initial PDT has 60 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 60 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 56745
Size 56745 at 0/770
Size 51729 at 500/770
Size 37013
Size 37013 at 0/770
Size 18567 at 500/770
Size 10029
Size 10029 at 0/770
Size 1181 at 500/770
Size 857
Size 857 at 0/770
Size 855 at 500/770
Size 855
Size 855 at 0/770
Size 855 at 500/770
Size 855
Invariant time: 0.736
Number of invariants: 855
Invariant Clauses 52155
NUMBER OF CLAUSES 92704
NUMBER OF STATE CLAUSES 79360
NUMBER OF DECOMPOSITION CLAUSES 13344
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 85.61% 14.39% 0.0% 
NUMBER OF PATHS 60
Starting cryptominisat
Setting starttime of solver to 1603884935412
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770232
done
initial PDT has 90 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 90 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 77805
NUMBER OF CLAUSES 214174
NUMBER OF STATE CLAUSES 125005
NUMBER OF DECOMPOSITION CLAUSES 89169
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 58.370000000000005% 41.63% 0.0% 
NUMBER OF PATHS 90
Starting cryptominisat
Setting starttime of solver to 1603884936556
Command exited with non-zero status 20
0.07 0.00

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 120 will abort at 9223372036854769152
done
initial PDT has 145 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 145 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 124830
NUMBER OF CLAUSES 618689
NUMBER OF STATE CLAUSES 214225
NUMBER OF DECOMPOSITION CLAUSES 404464
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 34.63% 65.37% 0.0% 
NUMBER OF PATHS 145
Starting cryptominisat
Setting starttime of solver to 1603884938677
Command exited with non-zero status 10
0.28 0.03

Time command gave the following runtime for the solver: 310
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_1;2;0,1070 1070 m-drive-to-via
1;2;0 158 pathaction!3_1;2;0,702
Consider method^1_2,265 265 m-deliver
2 155 pathaction!1_2,164
Consider method^4_13;2;0;0,577 577 m-drive-to
13;2;0;0 198 pathaction!4_13;2;0;0,759
Consider method^2_5;2,260 260 m-drive-to-via
5;2 62 pathaction!2_5;2,699
Consider method^2_13;0,175 175 m-drive-to-via
13;0 147 pathaction!2_13;0,710
Consider method^3_14;2;0,626 626 m-drive-to-via
14;2;0 27 pathaction!3_14;2;0,705
Consider method^2_10;2,673 673 m-drive-to-via
10;2 105 pathaction!2_10;2,717
Consider method^4_12;2;0;0,124 124 m-drive-to
12;2;0;0 178 pathaction!4_12;2;0;0,727
Consider method^4_7;2;0;0,1279 1279 m-drive-to
7;2;0;0 94 pathaction!4_7;2;0;0,745
Consider method^2_12;3,334 334 m-unload
12;3 15 pathaction!2_12;3,1075
Consider method^3_13;2;0,493 493 m-drive-to-via
13;2;0 5 pathaction!3_13;2;0,738
Consider method^1_6,675 675 m-deliver
6 154 pathaction!1_6,155
Consider method^3_6;0;0,1140 1140 m-drive-to
6;0;0 126 pathaction!3_6;0;0,724
Consider method^2_3;1,651 651 m-load
3;1 140 pathaction!2_3;1,3
Consider method^3_2;2;0,212 212 m-drive-to-via
2;2;0 67 pathaction!3_2;2;0,724
Consider method^1_9,1267 1267 m-deliver
9 66 pathaction!1_9,160
Consider method^3_10;2;0,789 789 m-drive-to
10;2;0 112 pathaction!3_10;2;0,749
Consider method^2_12;2,827 827 m-drive-to-via
12;2 139 pathaction!2_12;2,760
Consider method^2_7;0,552 552 m-drive-to-via
7;0 193 pathaction!2_7;0,739
Consider method^2_6;2,172 172 m-drive-to-via
6;2 72 pathaction!2_6;2,698
Consider method^4_4;0;0;0,789 789 m-drive-to
4;0;0;0 55 pathaction!4_4;0;0;0,749
Consider method^2_8;0,291 291 m-drive-to
8;0 196 pathaction!2_8;0,710
Consider method^4_9;2;0;0,373 373 m-drive-to
9;2;0;0 122 pathaction!4_9;2;0;0,738
Consider method^2_0;3,631 631 m-unload
0;3 222 pathaction!2_0;3,1079
Consider method^2_10;3,1148 1148 m-unload
10;3 64 pathaction!2_10;3,1051
Consider method^1_7,1306 1306 m-deliver
7 59 pathaction!1_7,152
Consider method^3_1;0;0,581 581 m-drive-to-via
1;0;0 24 pathaction!3_1;0;0,706
Consider method^2_1;2,936 936 m-drive-to-via
1;2 28 pathaction!2_1;2,742
Consider method^2_9;0,1145 1145 m-drive-to-via
9;0 40 pathaction!2_9;0,701
Consider method^0_,1315 1315 __top_1
 103 pathaction!0_,1085
Consider method^4_3;0;0;0,792 792 m-drive-to
3;0;0;0 81 pathaction!4_3;0;0;0,715
Consider method^3_11;2;0,1128 1128 m-drive-to-via
11;2;0 37 pathaction!3_11;2;0,696
Consider method^2_13;2,836 836 m-drive-to-via
13;2 48 pathaction!2_13;2,701
Consider method^2_7;3,534 534 m-unload
7;3 31 pathaction!2_7;3,1067
Consider method^2_5;3,465 465 m-unload
5;3 107 pathaction!2_5;3,1021
Consider method^2_13;1,1100 1100 m-load
13;1 189 pathaction!2_13;1,133
Consider method^3_3;2;0,94 94 m-drive-to
3;2;0 246 pathaction!3_3;2;0,722
Consider method^2_1;3,235 235 m-unload
1;3 39 pathaction!2_1;3,1057
Consider method^2_9;2,654 654 m-drive-to-via
9;2 143 pathaction!2_9;2,732
Consider method^3_9;0;0,204 204 m-drive-to
9;0;0 180 pathaction!3_9;0;0,745
Consider method^3_5;2;0,423 423 m-drive-to-via
5;2;0 121 pathaction!3_5;2;0,734
Consider method^3_0;2;0,717 717 m-drive-to-via
0;2;0 12 pathaction!3_0;2;0,708
Consider method^1_3,269 269 m-deliver
3 137 pathaction!1_3,156
Consider method^2_12;1,441 441 m-load
12;1 165 pathaction!2_12;1,13
Consider method^4_7;0;0;0,1075 1075 m-drive-to
7;0;0;0 224 pathaction!4_7;0;0;0,741
Consider method^2_7;2,298 298 m-drive-to-via
7;2 13 pathaction!2_7;2,759
Consider method^3_3;0;0,297 297 m-drive-to-via
3;0;0 115 pathaction!3_3;0;0,716
Consider method^2_11;0,923 923 m-drive-to-via
11;0 68 pathaction!2_11;0,764
Consider method^4_5;2;0;0,14 14 m-drive-to
5;2;0;0 152 pathaction!4_5;2;0;0,702
Consider method^4_4;2;0;0,114 114 m-drive-to
4;2;0;0 95 pathaction!4_4;2;0;0,717
Consider method^2_2;2,1189 1189 m-drive-to-via
2;2 114 pathaction!2_2;2,759
Consider method^2_11;3,721 721 m-unload
11;3 25 pathaction!2_11;3,1039
Consider method^3_7;2;0,683 683 m-drive-to-via
7;2;0 255 pathaction!3_7;2;0,693
Consider method^3_4;2;0,421 421 m-drive-to-via
4;2;0 182 pathaction!3_4;2;0,749
Consider method^2_6;1,186 186 m-load
6;1 46 pathaction!2_6;1,103
Consider method^2_11;2,1176 1176 m-drive-to-via
11;2 45 pathaction!2_11;2,725
Consider method^1_10,65 65 m-deliver
10 157 pathaction!1_10,162
Consider method^2_5;0,1253 1253 m-i-am-there
5;0 166 pathaction!2_5;0,742
Consider method^2_13;3,0 0 m-unload
13;3 208 pathaction!2_13;3,1017
Consider method^2_1;1,643 643 m-load
1;1 161 pathaction!2_1;1,119
Consider method^2_2;3,1084 1084 m-unload
2;3 8 pathaction!2_2;3,1049
Consider method^2_2;1,344 344 m-load
2;1 235 pathaction!2_2;1,4
Consider method^3_12;2;0,513 513 m-drive-to-via
12;2;0 247 pathaction!3_12;2;0,730
Consider method^3_12;0;0,809 809 m-drive-to-via
12;0;0 60 pathaction!3_12;0;0,727
Consider method^3_4;0;0,673 673 m-drive-to-via
4;0;0 88 pathaction!3_4;0;0,717
Consider method^2_7;1,481 481 m-load
7;1 19 pathaction!2_7;1,109
Consider method^2_14;3,443 443 m-unload
14;3 227 pathaction!2_14;3,1032
Consider method^4_6;2;0;0,12 12 m-drive-to
6;2;0;0 49 pathaction!4_6;2;0;0,741
Consider method^2_5;1,685 685 m-load
5;1 33 pathaction!2_5;1,74
Consider method^1_1,700 700 m-deliver
1 201 pathaction!1_1,151
Consider method^2_8;3,1250 1250 m-unload
8;3 142 pathaction!2_8;3,1081
Consider method^2_1;0,537 537 m-drive-to-via
1;0 89 pathaction!2_1;0,702
Consider method^2_0;2,351 351 m-drive-to-via
0;2 51 pathaction!2_0;2,752
Consider method^2_14;1,747 747 m-load
14;1 129 pathaction!2_14;1,39
Consider method^2_6;3,196 196 m-unload
6;3 136 pathaction!2_6;3,1076
Consider method^4_10;0;0;0,890 890 m-drive-to
10;0;0;0 93 pathaction!4_10;0;0;0,749
Consider method^3_0;0;0,245 245 m-drive-to-via
0;0;0 251 pathaction!3_0;0;0,759
Consider method^3_7;0;0,459 459 m-drive-to-via
7;0;0 83 pathaction!3_7;0;0,745
Consider method^4_14;2;0;0,99 99 m-drive-to
14;2;0;0 148 pathaction!4_14;2;0;0,751
Consider method^4_12;0;0;0,544 544 m-drive-to
12;0;0;0 186 pathaction!4_12;0;0;0,749
Consider method^2_8;1,967 967 m-load
8;1 32 pathaction!2_8;1,64
Consider method^3_10;0;0,809 809 m-drive-to-via
10;0;0 164 pathaction!3_10;0;0,727
Consider method^3_13;0;0,298 298 m-drive-to-via
13;0;0 244 pathaction!3_13;0;0,759
Consider method^1_11,1049 1049 m-deliver
11 238 pathaction!1_11,163
Consider method^2_3;0,575 575 m-drive-to-via
3;0 134 pathaction!2_3;0,715
Consider method^4_13;0;0;0,800 800 m-drive-to
13;0;0;0 38 pathaction!4_13;0;0;0,693
Consider method^4_0;2;0;0,577 577 m-drive-to
0;2;0;0 92 pathaction!4_0;2;0;0,759
Consider method^2_0;0,175 175 m-drive-to-via
0;0 128 pathaction!2_0;0,710
Consider method^2_4;2,1028 1028 m-drive-to-via
4;2 80 pathaction!2_4;2,754
Consider method^2_4;0,1206 1206 m-drive-to-via
4;0 250 pathaction!2_4;0,723
Consider method^4_2;0;0;0,682 682 m-drive-to
2;0;0;0 212 pathaction!4_2;0;0;0,741
Consider method^3_6;2;0,1086 1086 m-drive-to-via
6;2;0 205 pathaction!3_6;2;0,741
Consider method^4_0;0;0;0,26 26 m-drive-to
0;0;0;0 183 pathaction!4_0;0;0;0,738
Consider method^3_8;2;0,981 981 m-drive-to-via
8;2;0 108 pathaction!3_8;2;0,745
Consider method^2_14;0,941 941 m-drive-to-via
14;0 77 pathaction!2_14;0,690
Consider method^1_8,594 594 m-deliver
8 79 pathaction!1_8,150
Consider method^1_12,515 515 m-deliver
12 260 pathaction!1_12,161
Consider method^4_2;2;0;0,32 32 m-drive-to
2;2;0;0 194 pathaction!4_2;2;0;0,698
Consider method^2_9;3,1192 1192 m-unload
9;3 153 pathaction!2_9;3,1037
Consider method^2_9;1,1254 1254 m-load
9;1 169 pathaction!2_9;1,52
Consider method^2_10;0,463 463 m-drive-to-via
10;0 173 pathaction!2_10;0,700
Consider method^2_2;0,848 848 m-drive-to-via
2;0 131 pathaction!2_2;0,741
Consider method^2_12;0,87 87 m-drive-to-via
12;0 253 pathaction!2_12;0,749
Consider method^4_8;2;0;0,577 577 m-drive-to
8;2;0;0 130 pathaction!4_8;2;0;0,759
Consider method^2_4;1,480 480 m-load
4;1 100 pathaction!2_4;1,132
Consider method^4_1;2;0;0,1258 1258 m-drive-to
1;2;0;0 256 pathaction!4_1;2;0;0,691
Consider method^1_13,98 98 m-deliver
13 181 pathaction!1_13,154
Consider method^2_3;2,923 923 m-drive-to-via
3;2 203 pathaction!2_3;2,764
Consider method^2_11;1,740 740 m-load
11;1 111 pathaction!2_11;1,144
Consider method^2_10;1,209 209 m-load
10;1 188 pathaction!2_10;1,77
Consider method^1_14,1146 1146 m-deliver
14 210 pathaction!1_14,158
Consider method^3_11;0;0,125 125 m-drive-to
11;0;0 119 pathaction!3_11;0;0,722
Consider method^2_4;3,900 900 m-unload
4;3 252 pathaction!2_4;3,1073
Consider method^4_11;2;0;0,125 125 m-drive-to
11;2;0;0 200 pathaction!4_11;2;0;0,722
Consider method^1_0,1096 1096 m-deliver
0 47 pathaction!1_0,157
Consider method^2_0;1,402 402 m-load
0;1 145 pathaction!2_0;1,111
Consider method^3_14;0;0,399 399 m-drive-to
14;0;0 257 pathaction!3_14;0;0,751
Consider method^1_4,1107 1107 m-deliver
4 127 pathaction!1_4,153
Consider method^2_3;3,927 927 m-unload
3;3 232 pathaction!2_3;3,1029
Consider method^3_2;0;0,172 172 m-drive-to-via
2;0;0 144 pathaction!3_2;0;0,698
Consider method^3_9;2;0,810 810 m-drive-to-via
9;2;0 117 pathaction!3_9;2;0,732
Consider method^2_14;2,277 277 m-drive-to-via
14;2 150 pathaction!2_14;2,729
Consider method^4_1;0;0;0,776 776 m-drive-to
1;0;0;0 233 pathaction!4_1;0;0;0,714
Consider method^1_5,1042 1042 m-deliver
5 225 pathaction!1_5,159
Consider method^2_6;0,63 63 m-drive-to-via
6;0 87 pathaction!2_6;0,712
Consider method^2_8;2,642 642 m-drive-to-via
8;2 199 pathaction!2_8;2,741


CHECKING primitive solution of length 110 ...
true 86 drive[truck-4,city-loc-12,city-loc-14;]
true 236 drive[truck-4,city-loc-14,city-loc-8;]
true 132 drive[truck-4,city-loc-8,city-loc-5;]
true 204 pick-up[truck-4,city-loc-5,package-0,capacity-1,capacity-2;]
true 9 drive[truck-4,city-loc-5,city-loc-8;]
true 184 drive[truck-4,city-loc-8,city-loc-4;]
true 162 drive[truck-4,city-loc-4,city-loc-9;]
true 26 drop[truck-4,city-loc-9,package-0,capacity-1,capacity-2;]
true 116 drive[truck-0,city-loc-12,city-loc-14;]
true 36 drive[truck-0,city-loc-14,city-loc-8;]
true 124 drive[truck-0,city-loc-8,city-loc-2;]
true 18 pick-up[truck-0,city-loc-2,package-1,capacity-1,capacity-2;]
true 58 drive[truck-0,city-loc-2,city-loc-10;]
true 85 drive[truck-0,city-loc-10,city-loc-2;]
true 90 drive[truck-0,city-loc-2,city-loc-0;]
true 156 drop[truck-0,city-loc-0,package-1,capacity-1,capacity-2;]
true 96 drive[truck-4,city-loc-9,city-loc-11;]
true 191 drive[truck-4,city-loc-11,city-loc-1;]
true 125 drive[truck-4,city-loc-1,city-loc-11;]
true 146 pick-up[truck-4,city-loc-11,package-2,capacity-1,capacity-2;]
true 63 drive[truck-4,city-loc-11,city-loc-1;]
true 190 drive[truck-4,city-loc-1,city-loc-3;]
true 228 drive[truck-4,city-loc-3,city-loc-8;]
true 78 drop[truck-4,city-loc-8,package-2,capacity-1,capacity-2;]
true 0 drive[truck-1,city-loc-3,city-loc-8;]
true 243 drive[truck-1,city-loc-8,city-loc-4;]
true 185 drive[truck-1,city-loc-4,city-loc-8;]
true 141 pick-up[truck-1,city-loc-8,package-3,capacity-1,capacity-2;]
true 172 drive[truck-1,city-loc-8,city-loc-2;]
true 17 drive[truck-1,city-loc-2,city-loc-6;]
true 195 drop[truck-1,city-loc-6,package-3,capacity-1,capacity-2;]
true 53 drive[truck-3,city-loc-3,city-loc-8;]
true 219 drive[truck-3,city-loc-8,city-loc-4;]
true 6 drive[truck-3,city-loc-4,city-loc-7;]
true 216 pick-up[truck-3,city-loc-7,package-4,capacity-1,capacity-2;]
true 50 drive[truck-3,city-loc-7,city-loc-4;]
true 16 drive[truck-3,city-loc-4,city-loc-8;]
true 249 drive[truck-3,city-loc-8,city-loc-13;]
true 113 drop[truck-3,city-loc-13,package-4,capacity-1,capacity-2;]
true 21 noop[truck-0,city-loc-0;]
true 54 pick-up[truck-0,city-loc-0,package-5,capacity-1,capacity-2;]
true 135 drive[truck-0,city-loc-0,city-loc-2;]
true 91 drive[truck-0,city-loc-2,city-loc-11;]
true 160 drive[truck-0,city-loc-11,city-loc-9;]
true 231 drop[truck-0,city-loc-9,package-5,capacity-1,capacity-2;]
true 207 drive[truck-4,city-loc-8,city-loc-3;]
true 202 drive[truck-4,city-loc-3,city-loc-13;]
true 14 pick-up[truck-4,city-loc-13,package-6,capacity-1,capacity-2;]
true 151 drive[truck-4,city-loc-13,city-loc-11;]
true 106 drive[truck-4,city-loc-11,city-loc-11;]
true 176 drive[truck-4,city-loc-11,city-loc-1;]
true 187 drop[truck-4,city-loc-1,package-6,capacity-1,capacity-2;]
true 149 drive[truck-4,city-loc-1,city-loc-11;]
true 245 drive[truck-4,city-loc-11,city-loc-2;]
true 41 drive[truck-4,city-loc-2,city-loc-6;]
true 226 pick-up[truck-4,city-loc-6,package-7,capacity-1,capacity-2;]
true 34 drive[truck-4,city-loc-6,city-loc-2;]
true 1 drive[truck-4,city-loc-2,city-loc-10;]
true 44 drive[truck-4,city-loc-10,city-loc-8;]
true 254 drop[truck-4,city-loc-8,package-7,capacity-1,capacity-2;]
true 230 drive[truck-4,city-loc-8,city-loc-5;]
true 217 pick-up[truck-4,city-loc-5,package-8,capacity-1,capacity-2;]
true 174 drive[truck-4,city-loc-5,city-loc-8;]
true 221 drive[truck-4,city-loc-8,city-loc-2;]
true 168 drive[truck-4,city-loc-2,city-loc-11;]
true 74 drop[truck-4,city-loc-11,package-8,capacity-1,capacity-2;]
true 30 drive[truck-4,city-loc-11,city-loc-2;]
true 258 drive[truck-4,city-loc-2,city-loc-0;]
true 179 pick-up[truck-4,city-loc-0,package-9,capacity-1,capacity-2;]
true 213 drive[truck-4,city-loc-0,city-loc-14;]
true 170 drive[truck-4,city-loc-14,city-loc-12;]
true 73 drive[truck-4,city-loc-12,city-loc-12;]
true 218 drop[truck-4,city-loc-12,package-9,capacity-1,capacity-2;]
true 159 drive[truck-3,city-loc-13,city-loc-8;]
true 223 drive[truck-3,city-loc-8,city-loc-10;]
true 229 drive[truck-3,city-loc-10,city-loc-3;]
true 61 pick-up[truck-3,city-loc-3,package-10,capacity-1,capacity-2;]
true 163 drive[truck-3,city-loc-3,city-loc-8;]
true 10 drive[truck-3,city-loc-8,city-loc-4;]
true 206 drop[truck-3,city-loc-4,package-10,capacity-1,capacity-2;]
true 133 drive[truck-1,city-loc-6,city-loc-2;]
true 192 drive[truck-1,city-loc-2,city-loc-6;]
true 29 pick-up[truck-1,city-loc-6,package-11,capacity-1,capacity-2;]
true 70 drive[truck-1,city-loc-6,city-loc-2;]
true 215 drive[truck-1,city-loc-2,city-loc-11;]
true 56 drive[truck-1,city-loc-11,city-loc-1;]
true 99 drop[truck-1,city-loc-1,package-11,capacity-1,capacity-2;]
true 120 drive[truck-3,city-loc-4,city-loc-8;]
true 3 drive[truck-3,city-loc-8,city-loc-10;]
true 65 drive[truck-3,city-loc-10,city-loc-8;]
true 43 pick-up[truck-3,city-loc-8,package-12,capacity-1,capacity-2;]
true 102 drive[truck-3,city-loc-8,city-loc-10;]
true 237 drive[truck-3,city-loc-10,city-loc-2;]
true 23 drive[truck-3,city-loc-2,city-loc-6;]
true 241 drop[truck-3,city-loc-6,package-12,capacity-1,capacity-2;]
true 171 drive[truck-4,city-loc-12,city-loc-10;]
true 138 drive[truck-4,city-loc-10,city-loc-8;]
true 104 drive[truck-4,city-loc-8,city-loc-5;]
true 76 pick-up[truck-4,city-loc-5,package-13,capacity-1,capacity-2;]
true 197 drive[truck-4,city-loc-5,city-loc-8;]
true 2 drive[truck-4,city-loc-8,city-loc-14;]
true 84 drive[truck-4,city-loc-14,city-loc-0;]
true 4 drop[truck-4,city-loc-0,package-13,capacity-1,capacity-2;]
true 259 drive[truck-2,city-loc-7,city-loc-4;]
true 109 drive[truck-2,city-loc-4,city-loc-9;]
true 110 pick-up[truck-2,city-loc-9,package-14,capacity-1,capacity-2;]
true 82 drive[truck-2,city-loc-9,city-loc-4;]
true 118 drive[truck-2,city-loc-4,city-loc-8;]
true 234 drive[truck-2,city-loc-8,city-loc-5;]
true 101 drop[truck-2,city-loc-5,package-14,capacity-1,capacity-2;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 294561648
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 195
number of actions                    = 1236
number of abstract actions           = 466
number of primitive actions          = 770
number of methods                    = 1316
number of primitive shop actions     = 0
number of primitive non-shop actions = 770
size of largest method               = 15
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 96088
number of clauses               = 618689
average size of clauses         = 3.5505674094739037
number of assert                = 26
number of horn                  = 578199
K offset                        = 0
K chosen value                  = 5
state formula                   = 214225
method children clauses         = 0
number of paths                 = 145
maximum plan length             = 145
number of decomposition clauses = 404464
number of ordering clauses      = 0
number of state clauses         = 214225
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 9873
============ parsing ============
total                         = 956
file parser                   = 537
sort expansion                = 184
closed world assumption       = 133
inherit preconditions         = 0
shop methods                  = 1
eliminate identical variables = 70
strip domain of hybridity     = 1
flatten formula               = 29
============ preprocessing ============
total                                      = 2197
compile negative preconditions             = 20
compile unit methods                       = 0
split parameter                            = 55
expand choiceless abstract tasks           = 2
compile methods with identical tasks       = 56
removing unnecessary predicates            = 230
lifted reachabiltiy analysis               = 68
grounded planning graph analysis           = 720
grounded task decomposition graph analysis = 708
grounding                                  = 300
create artificial top task                 = 21
============ search preparation ============
compute state invariants = 879
============ sat ============
total                                        = 5221
generate formula                             = 4263
generate path decomposition tree             = 584
normalise path decomposition tree            = 173
sog optimisation                             = 127
translate path decomposition tree to clauses = 1274
generate state formula                       = 4190
generate state invariant formula             = 384
transform to DIMACS                          = 342
SAT solver                                   = 400
SAT solver for K=0003                        = 20
SAT solver for K=0004                        = 70
SAT solver for K=0005                        = 310

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="770";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="466";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="294561648";"40 sat:20:state formula"="214225";"40 sat:01:number of variables"="96088";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="145";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="1316";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="1236";"30 problem:08:number of primitive non-shop actions"="770";"30 problem:02:number of predicates"="195";"40 sat:03:number of horn"="578199";"40 sat:15:K chosen value"="5";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="15";"40 sat:03:average size of clauses"="3.5505674094739037";"40 sat:02:number of clauses"="618689";"40 sat:50:number of state clauses"="214225";"40 sat:03:number of assert"="26";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="145";"40 sat:50:number of decomposition clauses"="404464";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="537";"01 parsing:08:flatten formula"="29";"40 sat:41:SAT solver for K=0004"="70";"40 sat:00:total"="5221";"40 sat:16:generate state formula"="4190";"40 sat:20:transform to DIMACS"="342";"40 sat:11:generate path decomposition tree"="584";"02 preprocessing:07:compile methods with identical tasks"="56";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="230";"01 parsing:03:closed world assumption"="133";"02 preprocessing:11:lifted reachabiltiy analysis"="68";"01 parsing:02:sort expansion"="184";"40 sat:12:normalise path decomposition tree"="173";"40 sat:40:SAT solver"="400";"01 parsing:00:total"="956";"40 sat:10:generate formula"="4263";"40 sat:41:SAT solver for K=0005"="310";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="20";"00 total:00:total"="9873";"40 sat:13:sog optimisation"="127";"02 preprocessing:12:grounded planning graph analysis"="720";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="708";"02 preprocessing:04:split parameter"="55";"01 parsing:05:shop methods"="1";"10 search preparation:02:compute state invariants"="879";"01 parsing:06:eliminate identical variables"="70";"40 sat:15:translate path decomposition tree to clauses"="1274";"02 preprocessing:05:expand choiceless abstract tasks"="2";"40 sat:41:SAT solver for K=0003"="20";"40 sat:17:generate state invariant formula"="384";"02 preprocessing:00:total"="2197";"02 preprocessing:99:create artificial top task"="21";"02 preprocessing:84:grounding"="300"
#!verify drive[truck-4,city-loc-12,city-loc-14];drive[truck-4,city-loc-14,city-loc-8];drive[truck-4,city-loc-8,city-loc-5];pick-up[truck-4,city-loc-5,package-0,capacity-1,capacity-2];drive[truck-4,city-loc-5,city-loc-8];drive[truck-4,city-loc-8,city-loc-4];drive[truck-4,city-loc-4,city-loc-9];drop[truck-4,city-loc-9,package-0,capacity-1,capacity-2];drive[truck-0,city-loc-12,city-loc-14];drive[truck-0,city-loc-14,city-loc-8];drive[truck-0,city-loc-8,city-loc-2];pick-up[truck-0,city-loc-2,package-1,capacity-1,capacity-2];drive[truck-0,city-loc-2,city-loc-10];drive[truck-0,city-loc-10,city-loc-2];drive[truck-0,city-loc-2,city-loc-0];drop[truck-0,city-loc-0,package-1,capacity-1,capacity-2];drive[truck-4,city-loc-9,city-loc-11];drive[truck-4,city-loc-11,city-loc-1];drive[truck-4,city-loc-1,city-loc-11];pick-up[truck-4,city-loc-11,package-2,capacity-1,capacity-2];drive[truck-4,city-loc-11,city-loc-1];drive[truck-4,city-loc-1,city-loc-3];drive[truck-4,city-loc-3,city-loc-8];drop[truck-4,city-loc-8,package-2,capacity-1,capacity-2];drive[truck-1,city-loc-3,city-loc-8];drive[truck-1,city-loc-8,city-loc-4];drive[truck-1,city-loc-4,city-loc-8];pick-up[truck-1,city-loc-8,package-3,capacity-1,capacity-2];drive[truck-1,city-loc-8,city-loc-2];drive[truck-1,city-loc-2,city-loc-6];drop[truck-1,city-loc-6,package-3,capacity-1,capacity-2];drive[truck-3,city-loc-3,city-loc-8];drive[truck-3,city-loc-8,city-loc-4];drive[truck-3,city-loc-4,city-loc-7];pick-up[truck-3,city-loc-7,package-4,capacity-1,capacity-2];drive[truck-3,city-loc-7,city-loc-4];drive[truck-3,city-loc-4,city-loc-8];drive[truck-3,city-loc-8,city-loc-13];drop[truck-3,city-loc-13,package-4,capacity-1,capacity-2];noop[truck-0,city-loc-0];pick-up[truck-0,city-loc-0,package-5,capacity-1,capacity-2];drive[truck-0,city-loc-0,city-loc-2];drive[truck-0,city-loc-2,city-loc-11];drive[truck-0,city-loc-11,city-loc-9];drop[truck-0,city-loc-9,package-5,capacity-1,capacity-2];drive[truck-4,city-loc-8,city-loc-3];drive[truck-4,city-loc-3,city-loc-13];pick-up[truck-4,city-loc-13,package-6,capacity-1,capacity-2];drive[truck-4,city-loc-13,city-loc-11];drive[truck-4,city-loc-11,city-loc-11];drive[truck-4,city-loc-11,city-loc-1];drop[truck-4,city-loc-1,package-6,capacity-1,capacity-2];drive[truck-4,city-loc-1,city-loc-11];drive[truck-4,city-loc-11,city-loc-2];drive[truck-4,city-loc-2,city-loc-6];pick-up[truck-4,city-loc-6,package-7,capacity-1,capacity-2];drive[truck-4,city-loc-6,city-loc-2];drive[truck-4,city-loc-2,city-loc-10];drive[truck-4,city-loc-10,city-loc-8];drop[truck-4,city-loc-8,package-7,capacity-1,capacity-2];drive[truck-4,city-loc-8,city-loc-5];pick-up[truck-4,city-loc-5,package-8,capacity-1,capacity-2];drive[truck-4,city-loc-5,city-loc-8];drive[truck-4,city-loc-8,city-loc-2];drive[truck-4,city-loc-2,city-loc-11];drop[truck-4,city-loc-11,package-8,capacity-1,capacity-2];drive[truck-4,city-loc-11,city-loc-2];drive[truck-4,city-loc-2,city-loc-0];pick-up[truck-4,city-loc-0,package-9,capacity-1,capacity-2];drive[truck-4,city-loc-0,city-loc-14];drive[truck-4,city-loc-14,city-loc-12];drive[truck-4,city-loc-12,city-loc-12];drop[truck-4,city-loc-12,package-9,capacity-1,capacity-2];drive[truck-3,city-loc-13,city-loc-8];drive[truck-3,city-loc-8,city-loc-10];drive[truck-3,city-loc-10,city-loc-3];pick-up[truck-3,city-loc-3,package-10,capacity-1,capacity-2];drive[truck-3,city-loc-3,city-loc-8];drive[truck-3,city-loc-8,city-loc-4];drop[truck-3,city-loc-4,package-10,capacity-1,capacity-2];drive[truck-1,city-loc-6,city-loc-2];drive[truck-1,city-loc-2,city-loc-6];pick-up[truck-1,city-loc-6,package-11,capacity-1,capacity-2];drive[truck-1,city-loc-6,city-loc-2];drive[truck-1,city-loc-2,city-loc-11];drive[truck-1,city-loc-11,city-loc-1];drop[truck-1,city-loc-1,package-11,capacity-1,capacity-2];drive[truck-3,city-loc-4,city-loc-8];drive[truck-3,city-loc-8,city-loc-10];drive[truck-3,city-loc-10,city-loc-8];pick-up[truck-3,city-loc-8,package-12,capacity-1,capacity-2];drive[truck-3,city-loc-8,city-loc-10];drive[truck-3,city-loc-10,city-loc-2];drive[truck-3,city-loc-2,city-loc-6];drop[truck-3,city-loc-6,package-12,capacity-1,capacity-2];drive[truck-4,city-loc-12,city-loc-10];drive[truck-4,city-loc-10,city-loc-8];drive[truck-4,city-loc-8,city-loc-5];pick-up[truck-4,city-loc-5,package-13,capacity-1,capacity-2];drive[truck-4,city-loc-5,city-loc-8];drive[truck-4,city-loc-8,city-loc-14];drive[truck-4,city-loc-14,city-loc-0];drop[truck-4,city-loc-0,package-13,capacity-1,capacity-2];drive[truck-2,city-loc-7,city-loc-4];drive[truck-2,city-loc-4,city-loc-9];pick-up[truck-2,city-loc-9,package-14,capacity-1,capacity-2];drive[truck-2,city-loc-9,city-loc-4];drive[truck-2,city-loc-4,city-loc-8];drive[truck-2,city-loc-8,city-loc-5];drop[truck-2,city-loc-5,package-14,capacity-1,capacity-2]
==>
0 drive truck-4 city-loc-12 city-loc-14 
1 drive truck-4 city-loc-14 city-loc-8 
2 drive truck-4 city-loc-8 city-loc-5 
3 pick-up truck-4 city-loc-5 package-0 capacity-1 capacity-2 
4 drive truck-4 city-loc-5 city-loc-8 
5 drive truck-4 city-loc-8 city-loc-4 
6 drive truck-4 city-loc-4 city-loc-9 
7 drop truck-4 city-loc-9 package-0 capacity-1 capacity-2 
8 drive truck-0 city-loc-12 city-loc-14 
9 drive truck-0 city-loc-14 city-loc-8 
10 drive truck-0 city-loc-8 city-loc-2 
11 pick-up truck-0 city-loc-2 package-1 capacity-1 capacity-2 
12 drive truck-0 city-loc-2 city-loc-10 
13 drive truck-0 city-loc-10 city-loc-2 
14 drive truck-0 city-loc-2 city-loc-0 
15 drop truck-0 city-loc-0 package-1 capacity-1 capacity-2 
16 drive truck-4 city-loc-9 city-loc-11 
17 drive truck-4 city-loc-11 city-loc-1 
18 drive truck-4 city-loc-1 city-loc-11 
19 pick-up truck-4 city-loc-11 package-2 capacity-1 capacity-2 
20 drive truck-4 city-loc-11 city-loc-1 
21 drive truck-4 city-loc-1 city-loc-3 
22 drive truck-4 city-loc-3 city-loc-8 
23 drop truck-4 city-loc-8 package-2 capacity-1 capacity-2 
24 drive truck-1 city-loc-3 city-loc-8 
25 drive truck-1 city-loc-8 city-loc-4 
26 drive truck-1 city-loc-4 city-loc-8 
27 pick-up truck-1 city-loc-8 package-3 capacity-1 capacity-2 
28 drive truck-1 city-loc-8 city-loc-2 
29 drive truck-1 city-loc-2 city-loc-6 
30 drop truck-1 city-loc-6 package-3 capacity-1 capacity-2 
31 drive truck-3 city-loc-3 city-loc-8 
32 drive truck-3 city-loc-8 city-loc-4 
33 drive truck-3 city-loc-4 city-loc-7 
34 pick-up truck-3 city-loc-7 package-4 capacity-1 capacity-2 
35 drive truck-3 city-loc-7 city-loc-4 
36 drive truck-3 city-loc-4 city-loc-8 
37 drive truck-3 city-loc-8 city-loc-13 
38 drop truck-3 city-loc-13 package-4 capacity-1 capacity-2 
39 noop truck-0 city-loc-0 
40 pick-up truck-0 city-loc-0 package-5 capacity-1 capacity-2 
41 drive truck-0 city-loc-0 city-loc-2 
42 drive truck-0 city-loc-2 city-loc-11 
43 drive truck-0 city-loc-11 city-loc-9 
44 drop truck-0 city-loc-9 package-5 capacity-1 capacity-2 
45 drive truck-4 city-loc-8 city-loc-3 
46 drive truck-4 city-loc-3 city-loc-13 
47 pick-up truck-4 city-loc-13 package-6 capacity-1 capacity-2 
48 drive truck-4 city-loc-13 city-loc-11 
49 drive truck-4 city-loc-11 city-loc-11 
50 drive truck-4 city-loc-11 city-loc-1 
51 drop truck-4 city-loc-1 package-6 capacity-1 capacity-2 
52 drive truck-4 city-loc-1 city-loc-11 
53 drive truck-4 city-loc-11 city-loc-2 
54 drive truck-4 city-loc-2 city-loc-6 
55 pick-up truck-4 city-loc-6 package-7 capacity-1 capacity-2 
56 drive truck-4 city-loc-6 city-loc-2 
57 drive truck-4 city-loc-2 city-loc-10 
58 drive truck-4 city-loc-10 city-loc-8 
59 drop truck-4 city-loc-8 package-7 capacity-1 capacity-2 
60 drive truck-4 city-loc-8 city-loc-5 
61 pick-up truck-4 city-loc-5 package-8 capacity-1 capacity-2 
62 drive truck-4 city-loc-5 city-loc-8 
63 drive truck-4 city-loc-8 city-loc-2 
64 drive truck-4 city-loc-2 city-loc-11 
65 drop truck-4 city-loc-11 package-8 capacity-1 capacity-2 
66 drive truck-4 city-loc-11 city-loc-2 
67 drive truck-4 city-loc-2 city-loc-0 
68 pick-up truck-4 city-loc-0 package-9 capacity-1 capacity-2 
69 drive truck-4 city-loc-0 city-loc-14 
70 drive truck-4 city-loc-14 city-loc-12 
71 drive truck-4 city-loc-12 city-loc-12 
72 drop truck-4 city-loc-12 package-9 capacity-1 capacity-2 
73 drive truck-3 city-loc-13 city-loc-8 
74 drive truck-3 city-loc-8 city-loc-10 
75 drive truck-3 city-loc-10 city-loc-3 
76 pick-up truck-3 city-loc-3 package-10 capacity-1 capacity-2 
77 drive truck-3 city-loc-3 city-loc-8 
78 drive truck-3 city-loc-8 city-loc-4 
79 drop truck-3 city-loc-4 package-10 capacity-1 capacity-2 
80 drive truck-1 city-loc-6 city-loc-2 
81 drive truck-1 city-loc-2 city-loc-6 
82 pick-up truck-1 city-loc-6 package-11 capacity-1 capacity-2 
83 drive truck-1 city-loc-6 city-loc-2 
84 drive truck-1 city-loc-2 city-loc-11 
85 drive truck-1 city-loc-11 city-loc-1 
86 drop truck-1 city-loc-1 package-11 capacity-1 capacity-2 
87 drive truck-3 city-loc-4 city-loc-8 
88 drive truck-3 city-loc-8 city-loc-10 
89 drive truck-3 city-loc-10 city-loc-8 
90 pick-up truck-3 city-loc-8 package-12 capacity-1 capacity-2 
91 drive truck-3 city-loc-8 city-loc-10 
92 drive truck-3 city-loc-10 city-loc-2 
93 drive truck-3 city-loc-2 city-loc-6 
94 drop truck-3 city-loc-6 package-12 capacity-1 capacity-2 
95 drive truck-4 city-loc-12 city-loc-10 
96 drive truck-4 city-loc-10 city-loc-8 
97 drive truck-4 city-loc-8 city-loc-5 
98 pick-up truck-4 city-loc-5 package-13 capacity-1 capacity-2 
99 drive truck-4 city-loc-5 city-loc-8 
100 drive truck-4 city-loc-8 city-loc-14 
101 drive truck-4 city-loc-14 city-loc-0 
102 drop truck-4 city-loc-0 package-13 capacity-1 capacity-2 
103 drive truck-2 city-loc-7 city-loc-4 
104 drive truck-2 city-loc-4 city-loc-9 
105 pick-up truck-2 city-loc-9 package-14 capacity-1 capacity-2 
106 drive truck-2 city-loc-9 city-loc-4 
107 drive truck-2 city-loc-4 city-loc-8 
108 drive truck-2 city-loc-8 city-loc-5 
109 drop truck-2 city-loc-5 package-14 capacity-1 capacity-2 
root 229
110 get-to truck-4 city-loc-11  -> m-drive-to 16
111 unload truck-0 city-loc-9 package-5  -> m-unload 44
112 deliver package-10 city-loc-4  -> m-deliver 199 190 183 168
113 deliver package-2 city-loc-8  -> m-deliver 174 145 125 231
114 load truck-4 city-loc-5 package-0  -> m-load 3
115 get-to truck-4 city-loc-11  -> m-drive-to 48
116 get-to truck-0 city-loc-2  -> m-drive-to-via 175 10
117 deliver package-3 city-loc-6  -> m-deliver 149 144 157 136
118 get-to truck-2 city-loc-4  -> m-drive-to 106
119 get-to truck-1 city-loc-4  -> m-drive-to-via 171 25
120 unload truck-0 city-loc-0 package-1  -> m-unload 15
121 get-to truck-4 city-loc-0  -> m-drive-to-via 213 101
122 get-to truck-4 city-loc-11  -> m-drive-to-via 115 49
123 get-to truck-1 city-loc-2  -> m-drive-to 28
124 deliver package-9 city-loc-12  -> m-deliver 176 196 140 221
125 get-to truck-4 city-loc-8  -> m-drive-to-via 146 22
126 get-to truck-3 city-loc-6  -> m-drive-to-via 162 93
127 get-to truck-4 city-loc-4  -> m-drive-to-via 188 5
128 deliver package-12 city-loc-6  -> m-deliver 179 215 126 197
129 load truck-4 city-loc-5 package-13  -> m-load 98
130 get-to truck-4 city-loc-14  -> m-drive-to 0
131 get-to truck-4 city-loc-1  -> m-drive-to-via 110 17
132 unload truck-4 city-loc-1 package-6  -> m-unload 51
133 get-to truck-3 city-loc-10  -> m-drive-to-via 198 88
134 get-to truck-4 city-loc-10  -> m-drive-to-via 189 57
135 get-to truck-4 city-loc-5  -> m-drive-to-via 216 2
136 unload truck-1 city-loc-6 package-3  -> m-unload 30
137 unload truck-1 city-loc-1 package-11  -> m-unload 86
138 get-to truck-4 city-loc-1  -> m-drive-to 20
139 load truck-0 city-loc-2 package-1  -> m-load 11
140 get-to truck-4 city-loc-12  -> m-drive-to-via 201 71
141 deliver package-7 city-loc-8  -> m-deliver 193 178 161 208
142 get-to truck-3 city-loc-10  -> m-drive-to 91
143 get-to truck-4 city-loc-9  -> m-drive-to-via 127 6
144 load truck-1 city-loc-8 package-3  -> m-load 27
145 load truck-4 city-loc-11 package-2  -> m-load 19
146 get-to truck-4 city-loc-3  -> m-drive-to-via 138 21
147 get-to truck-3 city-loc-8  -> m-drive-to 77
148 get-to truck-0 city-loc-2  -> m-drive-to-via 223 13
149 get-to truck-1 city-loc-8  -> m-drive-to-via 119 26
150 get-to truck-4 city-loc-5  -> m-drive-to-via 192 97
151 get-to truck-4 city-loc-2  -> m-drive-to-via 155 63
152 unload truck-3 city-loc-13 package-4  -> m-unload 38
153 get-to truck-3 city-loc-8  -> m-drive-to 73
154 load truck-4 city-loc-5 package-8  -> m-load 61
155 get-to truck-4 city-loc-8  -> m-drive-to 62
156 unload truck-2 city-loc-5 package-14  -> m-unload 109
157 get-to truck-1 city-loc-6  -> m-drive-to-via 123 29
158 get-to truck-4 city-loc-10  -> m-drive-to 95
159 get-to truck-1 city-loc-2  -> m-drive-to 80
160 get-to truck-3 city-loc-4  -> m-drive-to-via 191 32
161 get-to truck-4 city-loc-8  -> m-drive-to-via 134 58
162 get-to truck-3 city-loc-2  -> m-drive-to-via 142 92
163 deliver package-4 city-loc-13  -> m-deliver 214 180 228 152
164 get-to truck-4 city-loc-13  -> m-drive-to-via 173 46
165 get-to truck-0 city-loc-0  -> m-i-am-there 39
166 deliver package-8 city-loc-11  -> m-deliver 233 154 226 235
167 load truck-2 city-loc-9 package-14  -> m-load 105
168 unload truck-3 city-loc-4 package-10  -> m-unload 79
169 get-to truck-4 city-loc-14  -> m-drive-to 69
170 deliver package-1 city-loc-0  -> m-deliver 116 139 185 120
171 get-to truck-1 city-loc-8  -> m-drive-to 24
172 get-to truck-1 city-loc-2  -> m-drive-to 83
173 get-to truck-4 city-loc-3  -> m-drive-to 45
174 get-to truck-4 city-loc-11  -> m-drive-to-via 131 18
175 get-to truck-0 city-loc-8  -> m-drive-to-via 227 9
176 get-to truck-4 city-loc-0  -> m-drive-to-via 210 67
177 get-to truck-0 city-loc-11  -> m-drive-to-via 218 42
178 load truck-4 city-loc-6 package-7  -> m-load 55
179 get-to truck-3 city-loc-8  -> m-drive-to-via 133 89
180 load truck-3 city-loc-7 package-4  -> m-load 34
181 get-to truck-4 city-loc-11  -> m-drive-to 52
182 unload truck-4 city-loc-0 package-13  -> m-unload 102
183 get-to truck-3 city-loc-4  -> m-drive-to-via 147 78
184 get-to truck-2 city-loc-8  -> m-drive-to-via 118 107
185 get-to truck-0 city-loc-0  -> m-drive-to-via 148 14
186 get-to truck-1 city-loc-6  -> m-drive-to-via 159 81
187 unload truck-4 city-loc-9 package-0  -> m-unload 7
188 get-to truck-4 city-loc-8  -> m-drive-to 4
189 get-to truck-4 city-loc-2  -> m-drive-to 56
190 load truck-3 city-loc-3 package-10  -> m-load 76
191 get-to truck-3 city-loc-8  -> m-drive-to 31
192 get-to truck-4 city-loc-8  -> m-drive-to-via 158 96
193 get-to truck-4 city-loc-6  -> m-drive-to-via 234 54
194 get-to truck-3 city-loc-4  -> m-drive-to 35
195 load truck-0 city-loc-0 package-5  -> m-load 40
196 load truck-4 city-loc-0 package-9  -> m-load 68
197 unload truck-3 city-loc-6 package-12  -> m-unload 94
198 get-to truck-3 city-loc-8  -> m-drive-to 87
199 get-to truck-3 city-loc-3  -> m-drive-to-via 232 75
200 deliver package-5 city-loc-9  -> m-deliver 165 195 222 111
201 get-to truck-4 city-loc-12  -> m-drive-to-via 169 70
202 get-to truck-4 city-loc-8  -> m-drive-to 99
203 load truck-4 city-loc-13 package-6  -> m-load 47
204 get-to truck-3 city-loc-8  -> m-drive-to-via 194 36
205 get-to truck-4 city-loc-1  -> m-drive-to-via 122 50
206 get-to truck-2 city-loc-4  -> m-drive-to 103
207 deliver package-14 city-loc-5  -> m-deliver 230 167 212 156
208 unload truck-4 city-loc-8 package-7  -> m-unload 59
209 get-to truck-1 city-loc-11  -> m-drive-to-via 172 84
210 get-to truck-4 city-loc-2  -> m-drive-to 66
211 deliver package-11 city-loc-1  -> m-deliver 186 220 219 137
212 get-to truck-2 city-loc-5  -> m-drive-to-via 184 108
213 get-to truck-4 city-loc-14  -> m-drive-to-via 202 100
214 get-to truck-3 city-loc-7  -> m-drive-to-via 160 33
215 load truck-3 city-loc-8 package-12  -> m-load 90
216 get-to truck-4 city-loc-8  -> m-drive-to-via 130 1
217 deliver package-0 city-loc-9  -> m-deliver 135 114 143 187
218 get-to truck-0 city-loc-2  -> m-drive-to 41
219 get-to truck-1 city-loc-1  -> m-drive-to-via 209 85
220 load truck-1 city-loc-6 package-11  -> m-load 82
221 unload truck-4 city-loc-12 package-9  -> m-unload 72
222 get-to truck-0 city-loc-9  -> m-drive-to-via 177 43
223 get-to truck-0 city-loc-10  -> m-drive-to 12
224 deliver package-13 city-loc-0  -> m-deliver 150 129 121 182
225 deliver package-6 city-loc-1  -> m-deliver 164 203 205 132
226 get-to truck-4 city-loc-11  -> m-drive-to-via 151 64
227 get-to truck-0 city-loc-14  -> m-drive-to 8
228 get-to truck-3 city-loc-13  -> m-drive-to-via 204 37
229 __artificialTopCompilation__top_1  -> __top_1 217 170 113 117 163 200 225 141 166 124 112 211 128 224 207
230 get-to truck-2 city-loc-9  -> m-drive-to-via 206 104
231 unload truck-4 city-loc-8 package-2  -> m-unload 23
232 get-to truck-3 city-loc-10  -> m-drive-to-via 153 74
233 get-to truck-4 city-loc-5  -> m-drive-to 60
234 get-to truck-4 city-loc-2  -> m-drive-to-via 181 53
235 unload truck-4 city-loc-11 package-8  -> m-unload 65

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 11.073 MEMPEAK_KBS 472210.432
