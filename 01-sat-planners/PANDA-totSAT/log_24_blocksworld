PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/blocksworld/domain.hddl instances/blocksworld/p04.hddl"


Planner Configuration
=====================
Domain: instances/blocksworld/domain.hddl
Problem: instances/blocksworld/p04.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p04.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 5
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Grounded planning graph ... done in 150ms.
	Number of Grounded Actions 114
	Number of Grounded Literals 73
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Grounding ... done.
	number of abstract tasks = 35
	number of tasks = 149
	number of decomposition methods = 87
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 35
	number of tasks = 149
	number of decomposition methods = 87
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 53ms.
	Number of Grounded Actions 114
	Number of Grounded Literals 73
	number of abstract tasks = 35
	number of tasks = 149
	number of decomposition methods = 87
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 35
	number of tasks = 149
	number of decomposition methods = 87
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 35
	number of tasks = 149
	number of decomposition methods = 87
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 35
	number of tasks = 149
	number of decomposition methods = 87
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 47
	number of tasks = 161
	number of decomposition methods = 99
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 47
	number of tasks = 161
	number of decomposition methods = 99
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Tasks 114 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773858ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 65 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 104 will abort at 9223372036854773801
done
PDT has 52 leafs
SHOP LEAFS 40
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 7884
Size 7884 at 0/114
Size 5964
Size 5964 at 0/114
Size 3765
Size 3765 at 0/114
Size 1318
Size 1318 at 0/114
Size 620
Size 620 at 0/114
Size 524
Size 524 at 0/114
Size 523
Size 523 at 0/114
Size 523
Invariant time: 0.14
Number of invariants: 523
Invariant Clauses 27719
NUMBER OF CLAUSES 36184
NUMBER OF STATE CLAUSES 35607
NUMBER OF DECOMPOSITION CLAUSES 577
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.41% 1.59% 0.0% 
NUMBER OF PATHS 52
Starting cryptominisat
Setting starttime of solver to 1603870876845
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 198 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 174 leafs
SHOP LEAFS 106
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854772784
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 91525
NUMBER OF CLAUSES 120650
NUMBER OF STATE CLAUSES 118245
NUMBER OF DECOMPOSITION CLAUSES 2405
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.01% 1.99% 0.0% 
NUMBER OF PATHS 174
Starting cryptominisat
Setting starttime of solver to 1603870877607
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 288 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 267 leafs
SHOP LEAFS 139
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771916
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 140164
NUMBER OF CLAUSES 185983
NUMBER OF STATE CLAUSES 181622
NUMBER OF DECOMPOSITION CLAUSES 4361
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.66% 2.34% 0.0% 
NUMBER OF PATHS 267
Starting cryptominisat
Setting starttime of solver to 1603870878463
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 379 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 360 leafs
SHOP LEAFS 174
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771267
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 188803
NUMBER OF CLAUSES 253286
NUMBER OF STATE CLAUSES 245581
NUMBER OF DECOMPOSITION CLAUSES 7705
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.96000000000001% 3.04% 0.0% 
NUMBER OF PATHS 360
Starting cryptominisat
Setting starttime of solver to 1603870879203
Command exited with non-zero status 20
0.06 0.00

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 478 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 464 leafs
SHOP LEAFS 214
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770489
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 243195
NUMBER OF CLAUSES 331081
NUMBER OF STATE CLAUSES 317744
NUMBER OF DECOMPOSITION CLAUSES 13337
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.97% 4.03% 0.0% 
NUMBER OF PATHS 464
Starting cryptominisat
Setting starttime of solver to 1603870879989
Command exited with non-zero status 20
0.08 0.00

Time command gave the following runtime for the solver: 80
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 580 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 570 leafs
SHOP LEAFS 258
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854769523
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 298633
NUMBER OF CLAUSES 414152
NUMBER OF STATE CLAUSES 392235
NUMBER OF DECOMPOSITION CLAUSES 21917
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 94.71000000000001% 5.29% 0.0% 
NUMBER OF PATHS 570
Starting cryptominisat
Setting starttime of solver to 1603870881182
Command exited with non-zero status 10
0.14 0.00

Time command gave the following runtime for the solver: 140
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_5,88 88 __UNIQUE-replacement_2
5 10 pathaction!1_5,151
Consider method^1_8,95 95 __UNIQUE-replacement_9
8 169 pathaction!1_8,158
Consider method^3_10;0;4,12 12 m4_do_move
10;0;4 128 pathaction!3_10;0;4,80
Consider method^3_0;0;2,3 3 m6_do_clear
0;0;2 119 pathaction!3_0;0;2,87
Consider method^1_0,97 97 __UNIQUE-replacement_11
0 173 pathaction!1_0,160
Consider method^3_3;0;1,77 77 m6_do_clear
3;0;1 87 pathaction!3_3;0;1,90
Consider method^2_0;0,55 55 m1_do_put_on
0;0 174 pathaction!2_0;0,29
Consider method^2_13;3,8 8 m6_do_clear
13;3 88 pathaction!2_13;3,84
Consider method^3_3;0;3,9 9 m3_do_on_table
3;0;3 116 pathaction!3_3;0;3,70
Consider method^1_13,5 5 <m1_do_put_on;do_clear[b7];m6_do_clear;1;0,-1,-2,2,3,4>
13 150 pathaction!1_13,27
Consider method^6_0;0;1;1;1;2,14 14 m7_do_clear
0;0;1;1;1;2 6 pathaction!6_0;0;1;1;1;2,88
Consider method^3_10;0;1,25 25 m7_do_clear
10;0;1 31 pathaction!3_10;0;1,93
Consider method^2_12;3,51 51 m2_do_on_table
12;3 23 pathaction!2_12;3,72
Consider method^3_3;0;2,74 74 m6_do_clear
3;0;2 137 pathaction!3_3;0;2,86
Consider method^2_8;0,4 4 m0_do_put_on
8;0 114 pathaction!2_8;0,30
Consider method^1_2,94 94 __UNIQUE-replacement_8
2 84 pathaction!1_2,157
Consider method^1_7,87 87 __UNIQUE-replacement_1
7 143 pathaction!1_7,150
Consider method^2_12;4,78 78 m4_do_move
12;4 1 pathaction!2_12;4,81
Consider method^2_1;0,21 21 m1_do_put_on
1;0 147 pathaction!2_1;0,28
Consider method^3_5;0;2,85 85 m6_do_clear
5;0;2 68 pathaction!3_5;0;2,93
Consider method^2_10;0,29 29 m1_do_put_on
10;0 197 pathaction!2_10;0,31
Consider method^2_13;4,24 24 m3_do_on_table
13;4 200 pathaction!2_13;4,68
Consider method^3_5;0;4,16 16 m4_do_move
5;0;4 32 pathaction!3_5;0;4,83
Consider method^3_11;0;3,82 82 m3_do_on_table
11;0;3 199 pathaction!3_11;0;3,75
Consider method^3_2;0;2,73 73 m6_do_clear
2;0;2 190 pathaction!3_2;0;2,85
Consider method^2_12;1,8 8 m6_do_clear
12;1 50 pathaction!2_12;1,84
Consider method^1_3,90 90 __UNIQUE-replacement_4
3 161 pathaction!1_3,153
Consider method^5_1;0;1;1;2,20 20 m7_do_clear
1;0;1;1;2 111 pathaction!5_1;0;1;1;2,90
Consider method^2_3;0,50 50 m1_do_put_on
3;0 192 pathaction!2_3;0,33
Consider method^3_10;0;2,56 56 m7_do_clear
10;0;2 97 pathaction!3_10;0;2,90
Consider method^1_12,40 40 m1_do_put_on
12 213 pathaction!1_12,32
Consider method^3_2;0;1,74 74 m6_do_clear
2;0;1 92 pathaction!3_2;0;1,86
Consider method^3_1;0;2,58 58 m6_do_clear
1;0;2 13 pathaction!3_1;0;2,92
Consider method^6_1;0;1;1;2;1,74 74 m6_do_clear
1;0;1;1;2;1 211 pathaction!6_1;0;1;1;2;1,86
Consider method^4_10;0;2;1,85 85 m6_do_clear
10;0;2;1 36 pathaction!4_10;0;2;1,93
Consider method^3_4;0;2,77 77 m6_do_clear
4;0;2 35 pathaction!3_4;0;2,90
Consider method^3_5;0;1,2 2 m6_do_clear
5;0;1 157 pathaction!3_5;0;1,88
Consider method^1_1,86 86 __UNIQUE-replacement_0
1 156 pathaction!1_1,149
Consider method^7_0;0;1;1;1;2;1,46 46 <m7_do_clear;do_clear[b7];m6_do_clear;1;0,-1,-2,2,3>
0;0;1;1;1;2;1 210 pathaction!7_0;0;1;1;1;2;1,87
Consider method^3_0;0;1,18 18 m7_do_clear
0;0;1 151 pathaction!3_0;0;1,92
Consider method^2_9;0,19 19 m0_do_put_on
9;0 0 pathaction!2_9;0,33
Consider method^3_10;0;3,72 72 m3_do_on_table
10;0;3 206 pathaction!3_10;0;3,73
Consider method^4_1;0;1;1,11 11 m7_do_clear
1;0;1;1 109 pathaction!4_1;0;1;1,84
Consider method^0_,98 98 __top_1
 12 pathaction!0_,148
Consider method^2_2;0,44 44 m1_do_put_on
2;0 132 pathaction!2_2;0,30
Consider method^2_12;2,2 2 m6_do_clear
12;2 49 pathaction!2_12;2,88
Consider method^3_5;0;3,82 82 m3_do_on_table
5;0;3 177 pathaction!3_5;0;3,75
Consider method^4_0;0;1;1,79 79 m7_do_clear
0;0;1;1 120 pathaction!4_0;0;1;1,91
Consider method^3_1;0;4,61 61 m4_do_move
1;0;4 34 pathaction!3_1;0;4,77
Consider method^2_13;5,67 67 m4_do_move
13;5 29 pathaction!2_13;5,76
Consider method^3_2;0;4,60 60 m4_do_move
2;0;4 148 pathaction!3_2;0;4,79
Consider method^2_4;0,29 29 m1_do_put_on
4;0 155 pathaction!2_4;0,31
Consider method^3_11;0;2,85 85 m6_do_clear
11;0;2 217 pathaction!3_11;0;2,93
Consider method^3_2;0;3,41 41 m3_do_on_table
2;0;3 176 pathaction!3_2;0;3,69
Consider method^3_4;0;3,72 72 m3_do_on_table
4;0;3 11 pathaction!3_4;0;3,73
Consider method^1_10,92 92 __UNIQUE-replacement_6
10 129 pathaction!1_10,155
Consider method^1_9,91 91 __UNIQUE-replacement_5
9 201 pathaction!1_9,154
Consider method^3_4;0;1,85 85 m6_do_clear
4;0;1 193 pathaction!3_4;0;1,93
Consider method^3_1;0;1,32 32 m7_do_clear
1;0;1 30 pathaction!3_1;0;1,85
Consider method^4_10;0;1;1,2 2 m6_do_clear
10;0;1;1 196 pathaction!4_10;0;1;1,88
Consider method^3_0;0;4,23 23 m5_do_move
0;0;4 64 pathaction!3_0;0;4,78
Consider method^3_11;0;4,16 16 m4_do_move
11;0;4 152 pathaction!3_11;0;4,83
Consider method^1_4,93 93 __UNIQUE-replacement_7
4 124 pathaction!1_4,156
Consider method^2_6;0,53 53 m0_do_put_on
6;0 131 pathaction!2_6;0,29
Consider method^3_1;0;3,39 39 m3_do_on_table
1;0;3 69 pathaction!3_1;0;3,74
Consider method^2_5;0,38 38 m1_do_put_on
5;0 82 pathaction!2_5;0,34
Consider method^3_11;0;1,2 2 m6_do_clear
11;0;1 89 pathaction!3_11;0;1,88
Consider method^3_0;0;3,57 57 m3_do_on_table
0;0;3 160 pathaction!3_0;0;3,71
Consider method^3_3;0;4,27 27 m4_do_move
3;0;4 42 pathaction!3_3;0;4,82
Consider method^1_11,89 89 __UNIQUE-replacement_3
11 188 pathaction!1_11,152
Consider method^5_0;0;1;1;1,6 6 m7_do_clear
0;0;1;1;1 198 pathaction!5_0;0;1;1;1,89
Consider method^1_6,96 96 __UNIQUE-replacement_10
6 162 pathaction!1_6,159
Consider method^2_11;0,38 38 m1_do_put_on
11;0 140 pathaction!2_11;0,34
Consider method^2_7;0,10 10 m0_do_put_on
7;0 3 pathaction!2_7;0,28
Consider method^3_4;0;4,12 12 m4_do_move
4;0;4 96 pathaction!3_4;0;4,80


CHECKING primitive solution of length 139 ...
true 83 __method_precondition_m1_do_put_on_1_precondition[;]
true 126 __method_precondition_m7_do_clear_7_precondition[b10,b3;]
true 62 __method_precondition_m7_do_clear_7_precondition[b3,b8;]
true 99 __method_precondition_m7_do_clear_7_precondition[b8,b11;]
true 195 __method_precondition_m7_do_clear_7_precondition[b11,b6;]
true 207 __method_precondition_m7_do_clear_7_precondition[b6,b7;]
true 130 __method_precondition_m6_do_clear_6_precondition[b7;]
true 19 nop[;]
true 184 unstack[b7,b6;]
true 106 put-down[b7;]
true 104 unstack[b6,b11;]
true 205 put-down[b6;]
true 90 unstack[b11,b8;]
true 76 put-down[b11;]
true 43 unstack[b8,b3;]
true 57 put-down[b8;]
true 44 unstack[b3,b10;]
true 179 put-down[b3;]
true 146 __method_precondition_m6_do_clear_6_precondition[b6;]
true 56 nop[;]
true 105 __method_precondition_m3_do_on_table_3_precondition[b6;]
true 203 nop[;]
true 63 __method_precondition_m5_do_move_5_precondition[b10,b6;]
true 139 unstack[b10,b1;]
true 37 stack[b10,b6;]
true 165 __method_precondition_m1_do_put_on_1_precondition[;]
true 39 __method_precondition_m7_do_clear_7_precondition[b5,b4;]
true 103 __method_precondition_m7_do_clear_7_precondition[b4,b9;]
true 45 __method_precondition_m7_do_clear_7_precondition[b9,b2;]
true 138 __method_precondition_m6_do_clear_6_precondition[b2;]
true 51 nop[;]
true 178 unstack[b2,b9;]
true 164 put-down[b2;]
true 22 unstack[b9,b4;]
true 158 put-down[b9;]
true 101 unstack[b4,b5;]
true 67 put-down[b4;]
true 18 __method_precondition_m6_do_clear_6_precondition[b10;]
true 134 nop[;]
true 33 __method_precondition_m3_do_on_table_3_precondition[b10;]
true 115 nop[;]
true 117 __method_precondition_m4_do_move_4_precondition[b5,b10;]
true 220 pick-up[b5;]
true 79 stack[b5,b10;]
true 144 __method_precondition_m1_do_put_on_1_precondition[;]
true 41 __method_precondition_m6_do_clear_6_precondition[b2;]
true 125 nop[;]
true 28 __method_precondition_m6_do_clear_6_precondition[b5;]
true 142 nop[;]
true 81 __method_precondition_m3_do_on_table_3_precondition[b5;]
true 94 nop[;]
true 58 __method_precondition_m4_do_move_4_precondition[b2,b5;]
true 194 pick-up[b2;]
true 113 stack[b2,b5;]
true 181 __method_precondition_m1_do_put_on_1_precondition[;]
true 216 __method_precondition_m6_do_clear_6_precondition[b9;]
true 15 nop[;]
true 204 __method_precondition_m6_do_clear_6_precondition[b2;]
true 95 nop[;]
true 59 __method_precondition_m3_do_on_table_3_precondition[b2;]
true 74 nop[;]
true 25 __method_precondition_m4_do_move_4_precondition[b9,b2;]
true 159 pick-up[b9;]
true 73 stack[b9,b2;]
true 121 __method_precondition_m1_do_put_on_1_precondition[;]
true 118 __method_precondition_m6_do_clear_6_precondition[b1;]
true 91 nop[;]
true 26 __method_precondition_m6_do_clear_6_precondition[b9;]
true 163 nop[;]
true 209 __method_precondition_m3_do_on_table_3_precondition[b9;]
true 133 nop[;]
true 100 __method_precondition_m4_do_move_4_precondition[b1,b9;]
true 16 pick-up[b1;]
true 7 stack[b1,b9;]
true 127 __method_precondition_m1_do_put_on_1_precondition[;]
true 149 __method_precondition_m6_do_clear_6_precondition[b11;]
true 24 nop[;]
true 185 __method_precondition_m6_do_clear_6_precondition[b1;]
true 214 nop[;]
true 186 __method_precondition_m3_do_on_table_3_precondition[b1;]
true 171 nop[;]
true 182 __method_precondition_m4_do_move_4_precondition[b11,b1;]
true 20 pick-up[b11;]
true 102 stack[b11,b1;]
true 221 __method_precondition_m0_do_put_on_0_precondition[b10,b6;]
true 17 nop[;]
true 48 __method_precondition_m0_do_put_on_0_precondition[b5,b10;]
true 187 nop[;]
true 21 __method_precondition_m0_do_put_on_0_precondition[b2,b5;]
true 75 nop[;]
true 72 __method_precondition_m0_do_put_on_0_precondition[b9,b2;]
true 167 nop[;]
true 60 __method_precondition_m1_do_put_on_1_precondition[;]
true 191 __method_precondition_m7_do_clear_7_precondition[b1,b11;]
true 66 __method_precondition_m6_do_clear_6_precondition[b11;]
true 122 nop[;]
true 166 unstack[b11,b1;]
true 123 put-down[b11;]
true 168 __method_precondition_m7_do_clear_7_precondition[b9,b1;]
true 8 __method_precondition_m6_do_clear_6_precondition[b1;]
true 2 nop[;]
true 9 unstack[b1,b9;]
true 180 put-down[b1;]
true 77 __method_precondition_m3_do_on_table_3_precondition[b9;]
true 55 nop[;]
true 85 __method_precondition_m4_do_move_4_precondition[b1,b9;]
true 175 pick-up[b1;]
true 5 stack[b1,b9;]
true 93 __method_precondition_m1_do_put_on_1_precondition[;]
true 218 __method_precondition_m6_do_clear_6_precondition[b11;]
true 61 nop[;]
true 172 __method_precondition_m6_do_clear_6_precondition[b1;]
true 153 nop[;]
true 38 __method_precondition_m3_do_on_table_3_precondition[b1;]
true 52 nop[;]
true 202 __method_precondition_m4_do_move_4_precondition[b11,b1;]
true 86 pick-up[b11;]
true 78 stack[b11,b1;]
true 183 __method_precondition_m1_do_put_on_1_precondition[;]
true 136 __method_precondition_m6_do_clear_6_precondition[b4;]
true 4 nop[;]
true 219 __method_precondition_m6_do_clear_6_precondition[b11;]
true 70 nop[;]
true 47 __method_precondition_m2_do_on_table_2_precondition[b11;]
true 98 unstack[b11,b1;]
true 53 put-down[b11;]
true 189 __method_precondition_m4_do_move_4_precondition[b4,b11;]
true 107 pick-up[b4;]
true 80 stack[b4,b11;]
true 65 __method_precondition_m1_do_put_on_1_precondition[;]
true 40 __method_precondition_m6_do_clear_6_precondition[b7;]
true 145 nop[;]
true 110 __method_precondition_m6_do_clear_6_precondition[b4;]
true 154 nop[;]
true 27 __method_precondition_m3_do_on_table_3_precondition[b4;]
true 208 nop[;]
true 141 __method_precondition_m4_do_move_4_precondition[b7,b4;]
true 112 pick-up[b7;]
true 215 stack[b7,b4;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 273809648
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 73
number of actions                    = 161
number of abstract actions           = 47
number of primitive actions          = 114
number of methods                    = 99
number of primitive shop actions     = 69
number of primitive non-shop actions = 45
size of largest method               = 14
average method size                  = 2
============ sat ============
plan length                     = -1
number of variables             = 88717
number of clauses               = 414152
average size of clauses         = 2.0366290637253956
number of assert                = 40
number of horn                  = 390923
K offset                        = 0
K chosen value                  = 8
state formula                   = 392235
method children clauses         = 0
number of paths                 = 570
maximum plan length             = 570
number of decomposition clauses = 21917
number of ordering clauses      = 0
number of state clauses         = 392235
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 8021
============ parsing ============
total                         = 863
file parser                   = 513
sort expansion                = 141
closed world assumption       = 62
inherit preconditions         = 0
shop methods                  = 20
eliminate identical variables = 63
strip domain of hybridity     = 1
flatten formula               = 63
============ preprocessing ============
total                                      = 1002
compile negative preconditions             = 48
compile unit methods                       = 0
split parameter                            = 36
expand choiceless abstract tasks           = 69
compile methods with identical tasks       = 8
removing unnecessary predicates            = 9
lifted reachabiltiy analysis               = 45
grounded planning graph analysis           = 335
grounded task decomposition graph analysis = 331
grounding                                  = 111
create artificial top task                 = 1
============ search preparation ============
compute state invariants = 261
============ sat ============
total                                        = 4344
generate formula                             = 3036
generate path decomposition tree             = 357
normalise path decomposition tree            = 114
sog optimisation                             = 116
translate path decomposition tree to clauses = 359
generate state formula                       = 2902
generate state invariant formula             = 802
transform to DIMACS                          = 601
SAT solver                                   = 350
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 20
SAT solver for K=0005                        = 40
SAT solver for K=0006                        = 60
SAT solver for K=0007                        = 80
SAT solver for K=0008                        = 140

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="114";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="47";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="273809648";"40 sat:20:state formula"="392235";"40 sat:01:number of variables"="88717";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="570";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="99";"30 problem:07:number of primitive shop actions"="69";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="161";"30 problem:08:number of primitive non-shop actions"="45";"30 problem:02:number of predicates"="73";"40 sat:03:number of horn"="390923";"40 sat:15:K chosen value"="8";"30 problem:10:average method size"="2";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="14";"40 sat:03:average size of clauses"="2.0366290637253956";"40 sat:02:number of clauses"="414152";"40 sat:50:number of state clauses"="392235";"40 sat:03:number of assert"="40";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="570";"40 sat:50:number of decomposition clauses"="21917";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="513";"01 parsing:08:flatten formula"="63";"40 sat:41:SAT solver for K=0004"="20";"40 sat:00:total"="4344";"40 sat:16:generate state formula"="2902";"40 sat:20:transform to DIMACS"="601";"40 sat:11:generate path decomposition tree"="357";"02 preprocessing:07:compile methods with identical tasks"="8";"01 parsing:07:strip domain of hybridity"="1";"40 sat:41:SAT solver for K=0008"="140";"02 preprocessing:08:removing unnecessary predicates"="9";"01 parsing:03:closed world assumption"="62";"02 preprocessing:11:lifted reachabiltiy analysis"="45";"01 parsing:02:sort expansion"="141";"40 sat:12:normalise path decomposition tree"="114";"40 sat:40:SAT solver"="350";"01 parsing:00:total"="863";"40 sat:10:generate formula"="3036";"40 sat:41:SAT solver for K=0005"="40";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="48";"00 total:00:total"="8021";"40 sat:13:sog optimisation"="116";"02 preprocessing:12:grounded planning graph analysis"="335";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="331";"40 sat:41:SAT solver for K=0006"="60";"02 preprocessing:04:split parameter"="36";"01 parsing:05:shop methods"="20";"10 search preparation:02:compute state invariants"="261";"01 parsing:06:eliminate identical variables"="63";"40 sat:15:translate path decomposition tree to clauses"="359";"02 preprocessing:05:expand choiceless abstract tasks"="69";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="802";"02 preprocessing:00:total"="1002";"02 preprocessing:99:create artificial top task"="1";"02 preprocessing:84:grounding"="111";"40 sat:41:SAT solver for K=0007"="80"
#!verify __method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m7_do_clear_7_precondition[b10,b3];__method_precondition_m7_do_clear_7_precondition[b3,b8];__method_precondition_m7_do_clear_7_precondition[b8,b11];__method_precondition_m7_do_clear_7_precondition[b11,b6];__method_precondition_m7_do_clear_7_precondition[b6,b7];__method_precondition_m6_do_clear_6_precondition[b7];nop[];unstack[b7,b6];put-down[b7];unstack[b6,b11];put-down[b6];unstack[b11,b8];put-down[b11];unstack[b8,b3];put-down[b8];unstack[b3,b10];put-down[b3];__method_precondition_m6_do_clear_6_precondition[b6];nop[];__method_precondition_m3_do_on_table_3_precondition[b6];nop[];__method_precondition_m5_do_move_5_precondition[b10,b6];unstack[b10,b1];stack[b10,b6];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m7_do_clear_7_precondition[b5,b4];__method_precondition_m7_do_clear_7_precondition[b4,b9];__method_precondition_m7_do_clear_7_precondition[b9,b2];__method_precondition_m6_do_clear_6_precondition[b2];nop[];unstack[b2,b9];put-down[b2];unstack[b9,b4];put-down[b9];unstack[b4,b5];put-down[b4];__method_precondition_m6_do_clear_6_precondition[b10];nop[];__method_precondition_m3_do_on_table_3_precondition[b10];nop[];__method_precondition_m4_do_move_4_precondition[b5,b10];pick-up[b5];stack[b5,b10];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b2];nop[];__method_precondition_m6_do_clear_6_precondition[b5];nop[];__method_precondition_m3_do_on_table_3_precondition[b5];nop[];__method_precondition_m4_do_move_4_precondition[b2,b5];pick-up[b2];stack[b2,b5];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b9];nop[];__method_precondition_m6_do_clear_6_precondition[b2];nop[];__method_precondition_m3_do_on_table_3_precondition[b2];nop[];__method_precondition_m4_do_move_4_precondition[b9,b2];pick-up[b9];stack[b9,b2];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b1];nop[];__method_precondition_m6_do_clear_6_precondition[b9];nop[];__method_precondition_m3_do_on_table_3_precondition[b9];nop[];__method_precondition_m4_do_move_4_precondition[b1,b9];pick-up[b1];stack[b1,b9];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b11];nop[];__method_precondition_m6_do_clear_6_precondition[b1];nop[];__method_precondition_m3_do_on_table_3_precondition[b1];nop[];__method_precondition_m4_do_move_4_precondition[b11,b1];pick-up[b11];stack[b11,b1];__method_precondition_m0_do_put_on_0_precondition[b10,b6];nop[];__method_precondition_m0_do_put_on_0_precondition[b5,b10];nop[];__method_precondition_m0_do_put_on_0_precondition[b2,b5];nop[];__method_precondition_m0_do_put_on_0_precondition[b9,b2];nop[];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m7_do_clear_7_precondition[b1,b11];__method_precondition_m6_do_clear_6_precondition[b11];nop[];unstack[b11,b1];put-down[b11];__method_precondition_m7_do_clear_7_precondition[b9,b1];__method_precondition_m6_do_clear_6_precondition[b1];nop[];unstack[b1,b9];put-down[b1];__method_precondition_m3_do_on_table_3_precondition[b9];nop[];__method_precondition_m4_do_move_4_precondition[b1,b9];pick-up[b1];stack[b1,b9];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b11];nop[];__method_precondition_m6_do_clear_6_precondition[b1];nop[];__method_precondition_m3_do_on_table_3_precondition[b1];nop[];__method_precondition_m4_do_move_4_precondition[b11,b1];pick-up[b11];stack[b11,b1];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b4];nop[];__method_precondition_m6_do_clear_6_precondition[b11];nop[];__method_precondition_m2_do_on_table_2_precondition[b11];unstack[b11,b1];put-down[b11];__method_precondition_m4_do_move_4_precondition[b4,b11];pick-up[b4];stack[b4,b11];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b7];nop[];__method_precondition_m6_do_clear_6_precondition[b4];nop[];__method_precondition_m3_do_on_table_3_precondition[b4];nop[];__method_precondition_m4_do_move_4_precondition[b7,b4];pick-up[b7];stack[b7,b4]
==>
0 __method_precondition_m1_do_put_on_1_precondition  
1 __method_precondition_m7_do_clear_7_precondition b10 b3 
2 __method_precondition_m7_do_clear_7_precondition b3 b8 
3 __method_precondition_m7_do_clear_7_precondition b8 b11 
4 __method_precondition_m7_do_clear_7_precondition b11 b6 
5 __method_precondition_m7_do_clear_7_precondition b6 b7 
6 __method_precondition_m6_do_clear_6_precondition b7 
7 nop  
8 unstack b7 b6 
9 put-down b7 
10 unstack b6 b11 
11 put-down b6 
12 unstack b11 b8 
13 put-down b11 
14 unstack b8 b3 
15 put-down b8 
16 unstack b3 b10 
17 put-down b3 
18 __method_precondition_m6_do_clear_6_precondition b6 
19 nop  
20 __method_precondition_m3_do_on_table_3_precondition b6 
21 nop  
22 __method_precondition_m5_do_move_5_precondition b10 b6 
23 unstack b10 b1 
24 stack b10 b6 
25 __method_precondition_m1_do_put_on_1_precondition  
26 __method_precondition_m7_do_clear_7_precondition b5 b4 
27 __method_precondition_m7_do_clear_7_precondition b4 b9 
28 __method_precondition_m7_do_clear_7_precondition b9 b2 
29 __method_precondition_m6_do_clear_6_precondition b2 
30 nop  
31 unstack b2 b9 
32 put-down b2 
33 unstack b9 b4 
34 put-down b9 
35 unstack b4 b5 
36 put-down b4 
37 __method_precondition_m6_do_clear_6_precondition b10 
38 nop  
39 __method_precondition_m3_do_on_table_3_precondition b10 
40 nop  
41 __method_precondition_m4_do_move_4_precondition b5 b10 
42 pick-up b5 
43 stack b5 b10 
44 __method_precondition_m1_do_put_on_1_precondition  
45 __method_precondition_m6_do_clear_6_precondition b2 
46 nop  
47 __method_precondition_m6_do_clear_6_precondition b5 
48 nop  
49 __method_precondition_m3_do_on_table_3_precondition b5 
50 nop  
51 __method_precondition_m4_do_move_4_precondition b2 b5 
52 pick-up b2 
53 stack b2 b5 
54 __method_precondition_m1_do_put_on_1_precondition  
55 __method_precondition_m6_do_clear_6_precondition b9 
56 nop  
57 __method_precondition_m6_do_clear_6_precondition b2 
58 nop  
59 __method_precondition_m3_do_on_table_3_precondition b2 
60 nop  
61 __method_precondition_m4_do_move_4_precondition b9 b2 
62 pick-up b9 
63 stack b9 b2 
64 __method_precondition_m1_do_put_on_1_precondition  
65 __method_precondition_m6_do_clear_6_precondition b1 
66 nop  
67 __method_precondition_m6_do_clear_6_precondition b9 
68 nop  
69 __method_precondition_m3_do_on_table_3_precondition b9 
70 nop  
71 __method_precondition_m4_do_move_4_precondition b1 b9 
72 pick-up b1 
73 stack b1 b9 
74 __method_precondition_m1_do_put_on_1_precondition  
75 __method_precondition_m6_do_clear_6_precondition b11 
76 nop  
77 __method_precondition_m6_do_clear_6_precondition b1 
78 nop  
79 __method_precondition_m3_do_on_table_3_precondition b1 
80 nop  
81 __method_precondition_m4_do_move_4_precondition b11 b1 
82 pick-up b11 
83 stack b11 b1 
84 __method_precondition_m0_do_put_on_0_precondition b10 b6 
85 nop  
86 __method_precondition_m0_do_put_on_0_precondition b5 b10 
87 nop  
88 __method_precondition_m0_do_put_on_0_precondition b2 b5 
89 nop  
90 __method_precondition_m0_do_put_on_0_precondition b9 b2 
91 nop  
92 __method_precondition_m1_do_put_on_1_precondition  
93 __method_precondition_m7_do_clear_7_precondition b1 b11 
94 __method_precondition_m6_do_clear_6_precondition b11 
95 nop  
96 unstack b11 b1 
97 put-down b11 
98 __method_precondition_m7_do_clear_7_precondition b9 b1 
99 __method_precondition_m6_do_clear_6_precondition b1 
100 nop  
101 unstack b1 b9 
102 put-down b1 
103 __method_precondition_m3_do_on_table_3_precondition b9 
104 nop  
105 __method_precondition_m4_do_move_4_precondition b1 b9 
106 pick-up b1 
107 stack b1 b9 
108 __method_precondition_m1_do_put_on_1_precondition  
109 __method_precondition_m6_do_clear_6_precondition b11 
110 nop  
111 __method_precondition_m6_do_clear_6_precondition b1 
112 nop  
113 __method_precondition_m3_do_on_table_3_precondition b1 
114 nop  
115 __method_precondition_m4_do_move_4_precondition b11 b1 
116 pick-up b11 
117 stack b11 b1 
118 __method_precondition_m1_do_put_on_1_precondition  
119 __method_precondition_m6_do_clear_6_precondition b4 
120 nop  
121 __method_precondition_m6_do_clear_6_precondition b11 
122 nop  
123 __method_precondition_m2_do_on_table_2_precondition b11 
124 unstack b11 b1 
125 put-down b11 
126 __method_precondition_m4_do_move_4_precondition b4 b11 
127 pick-up b4 
128 stack b4 b11 
129 __method_precondition_m1_do_put_on_1_precondition  
130 __method_precondition_m6_do_clear_6_precondition b7 
131 nop  
132 __method_precondition_m6_do_clear_6_precondition b4 
133 nop  
134 __method_precondition_m3_do_on_table_3_precondition b4 
135 nop  
136 __method_precondition_m4_do_move_4_precondition b7 b4 
137 pick-up b7 
138 stack b7 b4 
root 156
139 do_move b11 b1  -> m4_do_move 115 116 117
140 do_put_on b5 b10  -> m1_do_put_on 25 164 142 207 145
141 do_put_on b2 b5  -> m0_do_put_on 88 89
142 do_clear b10  -> m6_do_clear 37 38
143 do_clear b6  -> m6_do_clear 18 19
144 do_move b10 b6  -> m5_do_move 22 23 24
145 do_move b5 b10  -> m4_do_move 41 42 43
146 do_clear b9  -> m7_do_clear 28 148 31 32
147 do_put_on b2 b5  -> __UNIQUE-replacement_8 188
148 do_clear b2  -> m6_do_clear 29 30
149 do_clear b6  -> <m7_do_clear;do_clear[b7];m6_do_clear;1;0,-1,-2,2,3> 5 6 7 8 9
150 do_put_on b1 b9  -> m1_do_put_on 92 167 157 168 210
151 do_move b11 b1  -> m4_do_move 81 82 83
152 do_clear b9  -> m6_do_clear 55 56
153 do_on_table b9  -> m3_do_on_table 69 70
154 do_clear b3  -> m7_do_clear 2 181 14 15
155 do_put_on b1 b9  -> __UNIQUE-replacement_7 204
156 __choicelessATCompilation__top_1  -> __top_1 201 182 147 211 155 180 176 165 184 203 197 206 190 179
157 do_clear b9  -> m7_do_clear 98 172 101 102
158 do_on_table b11  -> m2_do_on_table 123 124 125
159 do_clear b11  -> m7_do_clear 4 149 10 11
160 do_put_on b11 b1  -> m1_do_put_on 74 185 175 200 151
161 do_clear b10  -> m7_do_clear 1 154 16 17
162 do_move b9 b2  -> m4_do_move 61 62 63
163 do_move b2 b5  -> m4_do_move 51 52 53
164 do_clear b5  -> m7_do_clear 26 174 35 36
165 do_put_on b5 b10  -> __UNIQUE-replacement_1 198
166 do_clear b4  -> m6_do_clear 119 120
167 do_clear b1  -> m7_do_clear 93 178 96 97
168 do_on_table b9  -> m3_do_on_table 103 104
169 do_on_table b4  -> m3_do_on_table 134 135
170 do_clear b11  -> m6_do_clear 109 110
171 do_move b4 b11  -> m4_do_move 126 127 128
172 do_clear b1  -> m6_do_clear 99 100
173 do_move b7 b4  -> m4_do_move 136 137 138
174 do_clear b4  -> m7_do_clear 27 146 33 34
175 do_clear b1  -> m6_do_clear 77 78
176 do_put_on b10 b6  -> __UNIQUE-replacement_10 208
177 do_clear b5  -> m6_do_clear 47 48
178 do_clear b11  -> m6_do_clear 94 95
179 do_put_on b7 b4  -> <m1_do_put_on;do_clear[b7];m6_do_clear;1;0,-1,-2,2,3,4> 129 130 131 205 169 173
180 do_put_on b11 b1  -> __UNIQUE-replacement_2 160
181 do_clear b8  -> m7_do_clear 3 159 12 13
182 do_put_on b5 b10  -> __UNIQUE-replacement_0 140
183 do_on_table b2  -> m3_do_on_table 59 60
184 do_put_on b2 b5  -> __UNIQUE-replacement_9 141
185 do_clear b11  -> m6_do_clear 75 76
186 do_on_table b5  -> m3_do_on_table 49 50
187 do_clear b2  -> m6_do_clear 45 46
188 do_put_on b2 b5  -> m1_do_put_on 44 187 177 186 163
189 do_clear b9  -> m6_do_clear 67 68
190 do_put_on b4 b11  -> m1_do_put_on 118 166 209 158 171
191 do_on_table b6  -> m3_do_on_table 20 21
192 do_clear b1  -> m6_do_clear 65 66
193 do_put_on b10 b6  -> m1_do_put_on 0 161 143 191 144
194 do_clear b1  -> m6_do_clear 111 112
195 do_on_table b1  -> m3_do_on_table 113 114
196 do_put_on b9 b2  -> m0_do_put_on 90 91
197 do_put_on b1 b9  -> __UNIQUE-replacement_6 150
198 do_put_on b5 b10  -> m0_do_put_on 86 87
199 do_clear b2  -> m6_do_clear 57 58
200 do_on_table b1  -> m3_do_on_table 79 80
201 do_put_on b10 b6  -> __UNIQUE-replacement_11 193
202 do_put_on b11 b1  -> m1_do_put_on 108 170 194 195 139
203 do_put_on b9 b2  -> __UNIQUE-replacement_5 196
204 do_put_on b1 b9  -> m1_do_put_on 64 192 189 153 212
205 do_clear b4  -> m6_do_clear 132 133
206 do_put_on b11 b1  -> __UNIQUE-replacement_3 202
207 do_on_table b10  -> m3_do_on_table 39 40
208 do_put_on b10 b6  -> m0_do_put_on 84 85
209 do_clear b11  -> m6_do_clear 121 122
210 do_move b1 b9  -> m4_do_move 105 106 107
211 do_put_on b9 b2  -> __UNIQUE-replacement_4 213
212 do_move b1 b9  -> m4_do_move 71 72 73
213 do_put_on b9 b2  -> m1_do_put_on 54 152 199 183 162

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 9.150 MEMPEAK_KBS 472825.856
