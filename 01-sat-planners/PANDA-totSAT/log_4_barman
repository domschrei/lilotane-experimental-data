PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/barman/domain.hddl instances/barman/p04.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p04.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p04.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounded planning graph ... done in 499ms.
	Number of Grounded Actions 2013
	Number of Grounded Literals 327
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounding ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 327
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 327ms.
	Number of Grounded Actions 1993
	Number of Grounded Literals 300
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 175ms.
	Number of Grounded Actions 1993
	Number of Grounded Literals 300
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Tasks 1993 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768616ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854768374
done
initial PDT has 237 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 237 leafs
SHOP LEAFS 79
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 134550
Size 134543 at 0/1993
Size 133671 at 500/1993
Size 133647 at 1000/1993
Size 132989 at 1500/1993
Size 109883
Size 109855 at 0/1993
Size 108835 at 500/1993
Size 108825 at 1000/1993
Size 20427 at 1500/1993
Size 19315
Size 19048 at 0/1993
Size 11485 at 500/1993
Size 11481 at 1000/1993
Size 11476 at 1500/1993
Size 10538
Size 9811 at 0/1993
Size 2798 at 500/1993
Size 2798 at 1000/1993
Size 2759 at 1500/1993
Size 2718
Size 2718 at 0/1993
Size 2674 at 500/1993
Size 2674 at 1000/1993
Size 2674 at 1500/1993
Size 2674
Size 2664 at 0/1993
Size 2521 at 500/1993
Size 2521 at 1000/1993
Size 2521 at 1500/1993
Size 2521
Size 2521 at 0/1993
Size 2521 at 500/1993
Size 2521 at 1000/1993
Size 2521 at 1500/1993
Size 2521
Invariant time: 2.579
Number of invariants: 2521
Invariant Clauses 599998
NUMBER OF CLAUSES 990909
NUMBER OF STATE CLAUSES 802832
NUMBER OF DECOMPOSITION CLAUSES 188077
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 81.02% 18.98% 0.0% 
NUMBER OF PATHS 237
Starting cryptominisat
Setting starttime of solver to 1603870534518
Command exited with non-zero status 10
0.56 0.02

Time command gave the following runtime for the solver: 580
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_5;3;1,473 473 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 233 pathaction!3_5;3;1,457
Consider method^1_1,308 308 m0_do_cocktail_in_shot1
1 107 pathaction!1_1,2335
Consider method^3_6;1;3,2532 2532 _m2_get_first_ingredient_4
6;1;3 48 pathaction!3_6;1;3,1796
Consider method^2_10;1,1579 1579 m2_get_first_ingredient
10;1 174 pathaction!2_10;1,7
Consider method^1_4,1145 1145 m0_do_cocktail_in_shot1
4 167 pathaction!1_4,2340
Consider method^3_4;1;3,1408 1408 _m2_get_first_ingredient_4
4;1;3 282 pathaction!3_4;1;3,1712
Consider method^2_6;1,1032 1032 m2_get_first_ingredient
6;1 298 pathaction!2_6;1,15
Consider method^2_2;3,656 656 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 157 pathaction!2_2;3,2328
Consider method^1_2,2770 2770 m0_do_cocktail_in_shot1
2 175 pathaction!1_2,2339
Consider method^3_2;1;1,270 270 m9_do_fill_shot
2;1;1 126 pathaction!3_2;1;1,2594
Consider method^3_1;1;3,2699 2699 _m2_get_first_ingredient_4
1;1;3 152 pathaction!3_1;1;3,1743
Consider method^2_6;3,515 515 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 275 pathaction!2_6;3,2322
Consider method^3_7;3;1,2467 2467 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2>
7;3;1 96 pathaction!3_7;3;1,443
Consider method^3_10;1;1,858 858 m9_do_fill_shot
10;1;1 166 pathaction!3_10;1;1,2594
Consider method^2_2;2,2972 2972 m3_get_second_ingredient
2;2 85 pathaction!2_2;2,415
Consider method^2_5;2,523 523 m3_get_second_ingredient
5;2 321 pathaction!2_5;2,420
Consider method^2_7;1,2631 2631 m2_get_first_ingredient
7;1 289 pathaction!2_7;1,1
Consider method^3_6;3;1,1424 1424 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2>
6;3;1 334 pathaction!3_6;3;1,451
Consider method^2_9;1,1961 1961 m2_get_first_ingredient
9;1 123 pathaction!2_9;1,10
Consider method^3_6;1;1,1438 1438 m7_do_fill_shot
6;1;1 221 pathaction!3_6;1;1,2641
Consider method^1_7,728 728 m0_do_cocktail_in_shot1
7 292 pathaction!1_7,2337
Consider method^3_2;3;1,1773 1773 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 209 pathaction!3_2;3;1,460
Consider method^2_0;1,614 614 m2_get_first_ingredient
0;1 300 pathaction!2_0;1,8
Consider method^3_0;2;1,490 490 _m3_get_second_ingredient_2
0;2;1 290 pathaction!3_0;2;1,2449
Consider method^2_7;3,139 139 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 35 pathaction!2_7;3,2326
Consider method^3_8;2;2,2513 2513 _m3_get_second_ingredient_3
8;2;2 295 pathaction!3_8;2;2,2375
Consider method^3_4;2;2,1962 1962 _m3_get_second_ingredient_3
4;2;2 249 pathaction!3_4;2;2,2386
Consider method^3_5;2;1,1652 1652 _m3_get_second_ingredient_2
5;2;1 318 pathaction!3_5;2;1,2537
Consider method^3_10;3;1,590 590 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 106 pathaction!3_10;3;1,455
Consider method^3_6;2;1,1780 1780 _m3_get_second_ingredient_2
6;2;1 110 pathaction!3_6;2;1,2521
Consider method^1_0,2689 2689 m0_do_cocktail_in_shot1
0 302 pathaction!1_0,2336
Consider method^3_5;1;2,1571 1571 _m2_get_first_ingredient_3
5;1;2 211 pathaction!3_5;1;2,1231
Consider method^2_9;3,886 886 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 97 pathaction!2_9;3,2327
Consider method^2_11;1,192 192 m7_do_fill_shot
11;1 92 pathaction!2_11;1,2558
Consider method^3_4;2;1,769 769 _m3_get_second_ingredient_2
4;2;1 38 pathaction!3_4;2;1,2480
Consider method^3_8;1;3,2699 2699 _m2_get_first_ingredient_4
8;1;3 270 pathaction!3_8;1;3,1743
Consider method^3_4;1;2,448 448 _m2_get_first_ingredient_3
4;1;2 116 pathaction!3_4;1;2,1281
Consider method^3_8;1;2,636 636 _m2_get_first_ingredient_3
8;1;2 134 pathaction!3_8;1;2,1233
Consider method^3_9;1;3,2707 2707 _m2_get_first_ingredient_4
9;1;3 317 pathaction!3_9;1;3,1732
Consider method^2_4;2,2668 2668 m3_get_second_ingredient
4;2 77 pathaction!2_4;2,417
Consider method^3_7;2;2,1962 1962 _m3_get_second_ingredient_3
7;2;2 177 pathaction!3_7;2;2,2386
Consider method^1_10,135 135 m0_do_cocktail_in_shot1
10 64 pathaction!1_10,2330
Consider method^3_0;1;2,289 289 _m2_get_first_ingredient_3
0;1;2 88 pathaction!3_0;1;2,1201
Consider method^3_3;1;1,2515 2515 m9_do_fill_shot
3;1;1 278 pathaction!3_3;1;1,2559
Consider method^3_1;3;1,2793 2793 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 190 pathaction!3_1;3;1,459
Consider method^2_1;3,2276 2276 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 46 pathaction!2_1;3,2324
Consider method^2_9;2,74 74 m3_get_second_ingredient
9;2 230 pathaction!2_9;2,418
Consider method^2_8;1,2653 2653 m2_get_first_ingredient
8;1 61 pathaction!2_8;1,20
Consider method^3_3;1;3,1390 1390 _m2_get_first_ingredient_4
3;1;3 315 pathaction!3_3;1;3,1714
Consider method^3_9;2;2,2921 2921 _m3_get_second_ingredient_3
9;2;2 241 pathaction!3_9;2;2,2443
Consider method^3_3;2;1,153 153 _m3_get_second_ingredient_2
3;2;1 69 pathaction!3_3;2;1,2486
Consider method^2_3;1,2251 2251 m2_get_first_ingredient
3;1 162 pathaction!2_3;1,19
Consider method^3_7;1;3,2318 2318 _m2_get_first_ingredient_4
7;1;3 155 pathaction!3_7;1;3,1748
Consider method^3_8;3;1,2825 2825 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2>
8;3;1 343 pathaction!3_8;3;1,447
Consider method^2_0;2,21 21 m3_get_second_ingredient
0;2 183 pathaction!2_0;2,416
Consider method^2_4;3,2772 2772 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 250 pathaction!2_4;3,2329
Consider method^3_5;1;1,1135 1135 m8_do_fill_shot
5;1;1 296 pathaction!3_5;1;1,2578
Consider method^3_4;1;1,878 878 m9_do_fill_shot
4;1;1 158 pathaction!3_4;1;1,2557
Consider method^2_7;2,2511 2511 m3_get_second_ingredient
7;2 187 pathaction!2_7;2,409
Consider method^3_9;1;1,3058 3058 m9_do_fill_shot
9;1;1 237 pathaction!3_9;1;1,2577
Consider method^1_8,356 356 m0_do_cocktail_in_shot1
8 143 pathaction!1_8,2332
Consider method^3_2;1;2,902 902 _m2_get_first_ingredient_3
2;1;2 53 pathaction!3_2;1;2,1250
Consider method^3_0;3;1,1541 1541 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2>
0;3;1 20 pathaction!3_0;3;1,440
Consider method^2_3;3,2665 2665 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 159 pathaction!2_3;3,2320
Consider method^3_4;3;1,2743 2743 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2>
4;3;1 147 pathaction!3_4;3;1,444
Consider method^2_2;1,1579 1579 m2_get_first_ingredient
2;1 10 pathaction!2_2;1,7
Consider method^1_9,1306 1306 m0_do_cocktail_in_shot1
9 329 pathaction!1_9,2338
Consider method^1_5,2048 2048 m0_do_cocktail_in_shot1
5 219 pathaction!1_5,2334
Consider method^3_9;1;2,1694 1694 _m2_get_first_ingredient_3
9;1;2 3 pathaction!3_9;1;2,1214
Consider method^3_7;1;2,289 289 _m2_get_first_ingredient_3
7;1;2 80 pathaction!3_7;1;2,1201
Consider method^3_0;1;3,2318 2318 _m2_get_first_ingredient_4
0;1;3 39 pathaction!3_0;1;3,1748
Consider method^1_3,568 568 m0_do_cocktail_in_shot1
3 170 pathaction!1_3,2331
Consider method^1_11,2617 2617 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
11 180 pathaction!1_11,0
Consider method^3_1;1;1,2415 2415 m9_do_fill_shot
1;1;1 114 pathaction!3_1;1;1,2588
Consider method^3_6;2;2,2921 2921 _m3_get_second_ingredient_3
6;2;2 43 pathaction!3_6;2;2,2443
Consider method^2_5;1,475 475 m2_get_first_ingredient
5;1 130 pathaction!2_5;1,12
Consider method^3_9;2;1,1780 1780 _m3_get_second_ingredient_2
9;2;1 197 pathaction!3_9;2;1,2521
Consider method^3_3;1;2,813 813 _m2_get_first_ingredient_3
3;1;2 277 pathaction!3_3;1;2,1242
Consider method^2_10;3,2259 2259 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 337 pathaction!2_10;3,2319
Consider method^3_1;1;2,636 636 _m2_get_first_ingredient_3
1;1;2 218 pathaction!3_1;1;2,1233
Consider method^3_2;1;3,1521 1521 _m2_get_first_ingredient_4
2;1;3 203 pathaction!3_2;1;3,1749
Consider method^3_1;2;2,317 317 _m3_get_second_ingredient_3
1;2;2 204 pathaction!3_1;2;2,2434
Consider method^1_6,756 756 m0_do_cocktail_in_shot1
6 25 pathaction!1_6,2333
Consider method^3_2;2;1,1295 1295 _m3_get_second_ingredient_2
2;2;1 19 pathaction!3_2;2;1,2462
Consider method^3_7;1;1,2722 2722 m9_do_fill_shot
7;1;1 253 pathaction!3_7;1;1,2593
Consider method^2_3;2,2555 2555 m3_get_second_ingredient
3;2 30 pathaction!2_3;2,427
Consider method^3_3;3;1,880 880 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail5,right];m5_do_clean_shot;0;-1,-2>
3;3;1 327 pathaction!3_3;3;1,456
Consider method^3_0;1;1,2497 2497 m8_do_fill_shot
0;1;1 57 pathaction!3_0;1;1,2593
Consider method^3_8;1;1,999 999 m7_do_fill_shot
8;1;1 222 pathaction!3_8;1;1,2588
Consider method^3_10;1;3,1521 1521 _m2_get_first_ingredient_4
10;1;3 118 pathaction!3_10;1;3,1749
Consider method^2_1;1,1159 1159 m2_get_first_ingredient
1;1 332 pathaction!2_1;1,2
Consider method^3_1;2;1,490 490 _m3_get_second_ingredient_2
1;2;1 257 pathaction!3_1;2;1,2449
Consider method^2_0;3,935 935 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 75 pathaction!2_0;3,2325
Consider method^3_10;2;1,1295 1295 _m3_get_second_ingredient_2
10;2;1 149 pathaction!3_10;2;1,2462
Consider method^2_8;2,415 415 m3_get_second_ingredient
8;2 196 pathaction!2_8;2,428
Consider method^3_5;1;3,1027 1027 _m2_get_first_ingredient_4
5;1;3 16 pathaction!3_5;1;3,1733
Consider method^3_8;2;1,2562 2562 _m3_get_second_ingredient_2
8;2;1 60 pathaction!3_8;2;1,2479
Consider method^2_4;1,2123 2123 m2_get_first_ingredient
4;1 238 pathaction!2_4;1,9
Consider method^3_2;2;2,320 320 _m3_get_second_ingredient_3
2;2;2 342 pathaction!3_2;2;2,2412
Consider method^3_3;2;2,1266 1266 _m3_get_second_ingredient_3
3;2;2 40 pathaction!3_3;2;2,2403
Consider method^3_0;2;2,317 317 _m3_get_second_ingredient_3
0;2;2 6 pathaction!3_0;2;2,2434
Consider method^2_6;2,1838 1838 m3_get_second_ingredient
6;2 217 pathaction!2_6;2,423
Consider method^2_10;2,2972 2972 m3_get_second_ingredient
10;2 1 pathaction!2_10;2,415
Consider method^2_8;3,2215 2215 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 58 pathaction!2_8;3,2321
Consider method^3_9;3;1,775 775 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2>
9;3;1 248 pathaction!3_9;3;1,441
Consider method^3_10;1;2,902 902 _m2_get_first_ingredient_3
10;1;2 163 pathaction!3_10;1;2,1250
Consider method^2_1;2,2178 2178 m3_get_second_ingredient
1;2 154 pathaction!2_1;2,410
Consider method^2_5;3,2186 2186 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 291 pathaction!2_5;3,2323
Consider method^3_7;2;1,769 769 _m3_get_second_ingredient_2
7;2;1 15 pathaction!3_7;2;1,2480
Consider method^3_6;1;2,402 402 _m2_get_first_ingredient_3
6;1;2 226 pathaction!3_6;1;2,1265
Consider method^3_10;2;2,320 320 _m3_get_second_ingredient_3
10;2;2 262 pathaction!3_10;2;2,2412
Consider method^0_,3086 3086 __top_1
 67 pathaction!0_,2686
Consider method^3_5;2;2,1660 1660 _m3_get_second_ingredient_3
5;2;2 328 pathaction!3_5;2;2,2435


CHECKING primitive solution of length 232 ...
true 260 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 94 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot13;]
true 41 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3;]
true 82 grasp[right,shot13;]
true 31 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 273 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1;]
true 179 clean-shot[shot13,ingredient3,right,left;]
true 312 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot13;]
true 251 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 201 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2;]
true 68 leave[right,shot13;]
true 169 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient2;]
true 78 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 243 nop[;]
true 186 grasp[right,shaker1;]
true 160 shake[cocktail4,ingredient3,ingredient2,shaker1,right,left;]
true 272 pour-shaker-to-shot[cocktail4,shot1,right,shaker1,l2,l1;]
true 161 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 32 clean-shaker[right,left,shaker1;]
true 79 leave[right,shaker1;]
true 93 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 213 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot13;]
true 212 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1;]
true 294 grasp[right,shot13;]
true 261 clean-shot[shot13,ingredient2,right,left;]
true 66 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 232 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1;]
true 47 clean-shot[shot13,ingredient1,right,left;]
true 299 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot13;]
true 108 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 258 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2;]
true 304 leave[right,shot13;]
true 150 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient2;]
true 324 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 323 nop[;]
true 98 grasp[right,shaker1;]
true 331 shake[cocktail5,ingredient1,ingredient2,shaker1,right,left;]
true 344 pour-shaker-to-shot[cocktail5,shot2,right,shaker1,l2,l1;]
true 338 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 339 clean-shaker[right,left,shaker1;]
true 293 leave[right,shaker1;]
true 49 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 22 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot13;]
true 242 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1;]
true 225 grasp[left,shot13;]
true 168 clean-shot[shot13,ingredient2,left,right;]
true 210 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 281 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 14 clean-shot[shot13,ingredient1,left,right;]
true 240 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot13;]
true 17 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 319 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2;]
true 285 leave[left,shot13;]
true 139 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4;]
true 207 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 176 nop[;]
true 301 grasp[right,shaker1;]
true 326 shake[cocktail10,ingredient1,ingredient4,shaker1,right,left;]
true 316 pour-shaker-to-shot[cocktail10,shot3,right,shaker1,l2,l1;]
true 27 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 120 clean-shaker[right,left,shaker1;]
true 254 leave[right,shaker1;]
true 286 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 9 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot13;]
true 307 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient4,dispenser3;]
true 269 grasp[left,shot13;]
true 235 clean-shot[shot13,ingredient4,left,right;]
true 83 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 189 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 100 clean-shot[shot13,ingredient3,left,right;]
true 214 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,left,shot13;]
true 245 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 71 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 135 leave[left,shot13;]
true 117 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient1;]
true 91 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 330 nop[;]
true 45 grasp[left,shaker1;]
true 287 shake[cocktail8,ingredient3,ingredient1,shaker1,left,right;]
true 192 pour-shaker-to-shot[cocktail8,shot4,left,shaker1,l2,l1;]
true 72 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 24 clean-shaker[left,right,shaker1;]
true 220 leave[left,shaker1;]
true 333 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 28 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot13;]
true 86 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient1,dispenser2;]
true 54 grasp[right,shot13;]
true 199 clean-shot[shot13,ingredient1,right,left;]
true 227 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 188 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,right,l0,l1;]
true 136 clean-shot[shot13,ingredient2,right,left;]
true 184 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,right,shot13;]
true 104 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 5 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,right,l1,l2;]
true 341 leave[right,shot13;]
true 146 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient1;]
true 112 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 215 nop[;]
true 276 grasp[right,shaker1;]
true 195 shake[cocktail9,ingredient2,ingredient1,shaker1,right,left;]
true 297 pour-shaker-to-shot[cocktail9,shot5,right,shaker1,l2,l1;]
true 148 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 234 clean-shaker[right,left,shaker1;]
true 133 leave[right,shaker1;]
true 21 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 34 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot12;]
true 310 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser4,ingredient4;]
true 122 grasp[left,shot12;]
true 256 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 128 pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,left,l0,l1;]
true 252 clean-shot[shot12,ingredient4,left,right;]
true 231 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot12;]
true 63 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 283 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2;]
true 37 leave[left,shot12;]
true 2 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1;]
true 280 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 185 nop[;]
true 173 grasp[left,shaker1;]
true 144 shake[cocktail6,ingredient4,ingredient1,shaker1,left,right;]
true 132 pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1;]
true 113 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 89 clean-shaker[left,right,shaker1;]
true 56 leave[left,shaker1;]
true 4 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 224 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot12;]
true 70 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient1,dispenser1;]
true 259 grasp[right,shot12;]
true 7 refill-shot[shot12,ingredient1,right,left,dispenser1;]
true 23 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,right,l0,l1;]
true 137 clean-shot[shot12,ingredient1,right,left;]
true 73 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,right,shot12;]
true 8 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 216 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,right,l1,l2;]
true 0 leave[right,shot12;]
true 129 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient3;]
true 198 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 205 nop[;]
true 171 grasp[right,shaker1;]
true 36 shake[cocktail3,ingredient1,ingredient3,shaker1,right,left;]
true 228 pour-shaker-to-shot[cocktail3,shot7,right,shaker1,l2,l1;]
true 50 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 145 clean-shaker[right,left,shaker1;]
true 288 leave[right,shaker1;]
true 124 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 172 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot13;]
true 314 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient1,dispenser3;]
true 99 grasp[right,shot13;]
true 255 clean-shot[shot13,ingredient1,right,left;]
true 151 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 303 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1;]
true 109 clean-shot[shot13,ingredient3,right,left;]
true 101 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,right,shot13;]
true 322 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 102 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,right,l1,l2;]
true 18 leave[right,shot13;]
true 11 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1;]
true 164 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 81 nop[;]
true 52 grasp[left,shaker1;]
true 84 shake[cocktail1,ingredient3,ingredient1,shaker1,left,right;]
true 138 pour-shaker-to-shot[cocktail1,shot8,left,shaker1,l2,l1;]
true 74 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 131 clean-shaker[left,right,shaker1;]
true 191 leave[left,shaker1;]
true 267 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 308 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot13;]
true 246 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient1,dispenser1;]
true 42 grasp[right,shot13;]
true 125 refill-shot[shot13,ingredient1,right,left,dispenser1;]
true 153 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1;]
true 87 clean-shot[shot13,ingredient1,right,left;]
true 59 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,right,shot13;]
true 13 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 263 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,right,l1,l2;]
true 65 leave[right,shot13;]
true 62 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient4;]
true 194 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 121 nop[;]
true 202 grasp[left,shaker1;]
true 115 shake[cocktail7,ingredient1,ingredient4,shaker1,left,right;]
true 313 pour-shaker-to-shot[cocktail7,shot9,left,shaker1,l2,l1;]
true 51 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 44 clean-shaker[left,right,shaker1;]
true 247 leave[left,shaker1;]
true 320 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 266 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot12;]
true 244 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient3,dispenser4;]
true 264 grasp[right,shot12;]
true 284 clean-shot[shot12,ingredient3,right,left;]
true 336 fill-shot[shot12,ingredient4,right,left,dispenser4;]
true 335 pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,right,l0,l1;]
true 200 clean-shot[shot12,ingredient4,right,left;]
true 340 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot12;]
true 193 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 29 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,right,l1,l2;]
true 236 leave[right,shot12;]
true 309 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 111 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 76 nop[;]
true 103 grasp[right,shaker1;]
true 229 shake[cocktail2,ingredient4,ingredient3,shaker1,right,left;]
true 311 pour-shaker-to-shot[cocktail2,shot10,right,shaker1,l2,l1;]
true 182 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 279 clean-shaker[right,left,shaker1;]
true 105 leave[right,shaker1;]
true 265 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 239 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot13;]
true 33 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient4,dispenser1;]
true 268 grasp[left,shot13;]
true 26 clean-shot[shot13,ingredient4,left,right;]
true 90 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 140 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 178 clean-shot[shot13,ingredient1,left,right;]
true 306 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot13;]
true 141 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 12 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2;]
true 156 leave[left,shot13;]
true 223 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4;]
true 208 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 274 nop[;]
true 142 grasp[right,shaker1;]
true 305 shake[cocktail10,ingredient1,ingredient4,shaker1,right,left;]
true 206 pour-shaker-to-shot[cocktail10,shot11,right,shaker1,l2,l1;]
true 271 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 181 clean-shaker[right,left,shaker1;]
true 127 leave[right,shaker1;]
true 165 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 119 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient3,dispenser3;]
true 55 grasp[left,shot12;]
true 325 refill-shot[shot12,ingredient3,left,right,dispenser3;]
true 95 leave[left,shot12;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 379843544
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 300
number of actions                    = 2687
number of abstract actions           = 694
number of primitive actions          = 1993
number of methods                    = 3087
number of primitive shop actions     = 768
number of primitive non-shop actions = 1225
size of largest method               = 12
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 162625
number of clauses               = 990909
average size of clauses         = 2.3644522352708472
number of assert                = 136
number of horn                  = 870027
K offset                        = 0
K chosen value                  = 4
state formula                   = 802832
method children clauses         = 0
number of paths                 = 237
maximum plan length             = 237
number of decomposition clauses = 188077
number of ordering clauses      = 0
number of state clauses         = 802832
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 15391
============ parsing ============
total                         = 1121
file parser                   = 617
sort expansion                = 235
closed world assumption       = 117
inherit preconditions         = 0
shop methods                  = 18
eliminate identical variables = 61
strip domain of hybridity     = 1
flatten formula               = 72
============ preprocessing ============
total                                      = 5557
compile negative preconditions             = 41
compile unit methods                       = 0
split parameter                            = 40
expand choiceless abstract tasks           = 579
compile methods with identical tasks       = 32
removing unnecessary predicates            = 881
lifted reachabiltiy analysis               = 84
grounded planning graph analysis           = 1498
grounded task decomposition graph analysis = 1817
grounding                                  = 543
create artificial top task                 = 7
============ search preparation ============
compute state invariants = 2814
============ sat ============
total                                        = 6551
generate formula                             = 5395
generate path decomposition tree             = 316
normalise path decomposition tree            = 82
sog optimisation                             = 76
translate path decomposition tree to clauses = 593
generate state formula                       = 5329
generate state invariant formula             = 449
transform to DIMACS                          = 355
SAT solver                                   = 580
SAT solver for K=0004                        = 580

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="1993";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="694";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="379843544";"40 sat:20:state formula"="802832";"40 sat:01:number of variables"="162625";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="237";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="3087";"30 problem:07:number of primitive shop actions"="768";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="2687";"30 problem:08:number of primitive non-shop actions"="1225";"30 problem:02:number of predicates"="300";"40 sat:03:number of horn"="870027";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="12";"40 sat:03:average size of clauses"="2.3644522352708472";"40 sat:02:number of clauses"="990909";"40 sat:50:number of state clauses"="802832";"40 sat:03:number of assert"="136";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="237";"40 sat:50:number of decomposition clauses"="188077";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="617";"01 parsing:08:flatten formula"="72";"40 sat:41:SAT solver for K=0004"="580";"40 sat:00:total"="6551";"40 sat:16:generate state formula"="5329";"40 sat:20:transform to DIMACS"="355";"40 sat:11:generate path decomposition tree"="316";"02 preprocessing:07:compile methods with identical tasks"="32";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="881";"01 parsing:03:closed world assumption"="117";"02 preprocessing:11:lifted reachabiltiy analysis"="84";"01 parsing:02:sort expansion"="235";"40 sat:12:normalise path decomposition tree"="82";"40 sat:40:SAT solver"="580";"01 parsing:00:total"="1121";"40 sat:10:generate formula"="5395";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="41";"00 total:00:total"="15391";"40 sat:13:sog optimisation"="76";"02 preprocessing:12:grounded planning graph analysis"="1498";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1817";"02 preprocessing:04:split parameter"="40";"01 parsing:05:shop methods"="18";"10 search preparation:02:compute state invariants"="2814";"01 parsing:06:eliminate identical variables"="61";"40 sat:15:translate path decomposition tree to clauses"="593";"02 preprocessing:05:expand choiceless abstract tasks"="579";"40 sat:17:generate state invariant formula"="449";"02 preprocessing:00:total"="5557";"02 preprocessing:99:create artificial top task"="7";"02 preprocessing:84:grounding"="543"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3];grasp[right,shot13];fill-shot[shot13,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1];clean-shot[shot13,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot13];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[right,shaker1];shake[cocktail4,ingredient3,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot1,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1];grasp[right,shot13];clean-shot[shot13,ingredient2,right,left];fill-shot[shot13,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1];clean-shot[shot13,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot13];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail5,ingredient1,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1];grasp[left,shot13];clean-shot[shot13,ingredient2,left,right];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1];clean-shot[shot13,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot13];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail10,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient4,dispenser3];grasp[left,shot13];clean-shot[shot13,ingredient4,left,right];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1];clean-shot[shot13,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,left,shot13];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail8,ingredient3,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail8,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail8,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient1,dispenser2];grasp[right,shot13];clean-shot[shot13,ingredient1,right,left];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,right,l0,l1];clean-shot[shot13,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,right,shot13];fill-shot[shot13,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[right,shaker1];shake[cocktail9,ingredient2,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot5,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot12];__method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser4,ingredient4];grasp[left,shot12];fill-shot[shot12,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,left,l0,l1];clean-shot[shot12,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot12];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail6,ingredient4,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot12];__method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient1,dispenser1];grasp[right,shot12];refill-shot[shot12,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,right,l0,l1];clean-shot[shot12,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,right,shot12];fill-shot[shot12,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot12,ingredient3,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[right,shaker1];shake[cocktail3,ingredient1,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail3,shot7,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail3,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient1,dispenser3];grasp[right,shot13];clean-shot[shot13,ingredient1,right,left];fill-shot[shot13,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1];clean-shot[shot13,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,right,shot13];fill-shot[shot13,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[left,shaker1];shake[cocktail1,ingredient3,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot8,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot13];__method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient1,dispenser1];grasp[right,shot13];refill-shot[shot13,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1];clean-shot[shot13,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,right,shot13];fill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot13,ingredient4,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[left,shaker1];shake[cocktail7,ingredient1,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot9,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient3,dispenser4];grasp[right,shot12];clean-shot[shot12,ingredient3,right,left];fill-shot[shot12,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,right,l0,l1];clean-shot[shot12,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot12];fill-shot[shot12,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot12,ingredient3,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[right,shaker1];shake[cocktail2,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot10,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient4,dispenser1];grasp[left,shot13];clean-shot[shot13,ingredient4,left,right];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1];clean-shot[shot13,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot13];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail10,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3];__method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient3,dispenser3];grasp[left,shot12];refill-shot[shot12,ingredient3,left,right,dispenser3];leave[left,shot12]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 right 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient3 shot13 
2 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser3 ingredient3 
3 grasp right shot13 
4 fill-shot shot13 ingredient3 right left dispenser3 
5 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 
6 clean-shot shot13 ingredient3 right left 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 right shot13 
8 fill-shot shot13 ingredient2 right left dispenser2 
9 pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 
10 leave right shot13 
11 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient3 ingredient2 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp right shaker1 
15 shake cocktail4 ingredient3 ingredient2 shaker1 right left 
16 pour-shaker-to-shot cocktail4 shot1 right shaker1 l2 l1 
17 empty-shaker right shaker1 cocktail4 l1 l0 
18 clean-shaker right left shaker1 
19 leave right shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient1 shot13 
22 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient2 dispenser1 
23 grasp right shot13 
24 clean-shot shot13 ingredient2 right left 
25 fill-shot shot13 ingredient1 right left dispenser1 
26 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 
27 clean-shot shot13 ingredient1 right left 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient2 right shot13 
29 fill-shot shot13 ingredient2 right left dispenser2 
30 pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 
31 leave right shot13 
32 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient1 ingredient2 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp right shaker1 
36 shake cocktail5 ingredient1 ingredient2 shaker1 right left 
37 pour-shaker-to-shot cocktail5 shot2 right shaker1 l2 l1 
38 empty-shaker right shaker1 cocktail5 l1 l0 
39 clean-shaker right left shaker1 
40 leave right shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot13 
43 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient2 dispenser1 
44 grasp left shot13 
45 clean-shot shot13 ingredient2 left right 
46 fill-shot shot13 ingredient1 left right dispenser1 
47 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 left l0 l1 
48 clean-shot shot13 ingredient1 left right 
49 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient4 left shot13 
50 fill-shot shot13 ingredient4 left right dispenser4 
51 pour-shot-to-used-shaker shot13 ingredient4 shaker1 left l1 l2 
52 leave left shot13 
53 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient4 
54 __method_precondition_m5_do_clean_shot_5_precondition shot3 
55 nop  
56 grasp right shaker1 
57 shake cocktail10 ingredient1 ingredient4 shaker1 right left 
58 pour-shaker-to-shot cocktail10 shot3 right shaker1 l2 l1 
59 empty-shaker right shaker1 cocktail10 l1 l0 
60 clean-shaker right left shaker1 
61 leave right shaker1 
62 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
63 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot13 
64 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient3 ingredient4 dispenser3 
65 grasp left shot13 
66 clean-shot shot13 ingredient4 left right 
67 fill-shot shot13 ingredient3 left right dispenser3 
68 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 
69 clean-shot shot13 ingredient3 left right 
70 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient1 left shot13 
71 fill-shot shot13 ingredient1 left right dispenser1 
72 pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 
73 leave left shot13 
74 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient1 
75 __method_precondition_m5_do_clean_shot_5_precondition shot4 
76 nop  
77 grasp left shaker1 
78 shake cocktail8 ingredient3 ingredient1 shaker1 left right 
79 pour-shaker-to-shot cocktail8 shot4 left shaker1 l2 l1 
80 empty-shaker left shaker1 cocktail8 l1 l0 
81 clean-shaker left right shaker1 
82 leave left shaker1 
83 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 right 
84 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient2 shot13 
85 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient2 ingredient1 dispenser2 
86 grasp right shot13 
87 clean-shot shot13 ingredient1 right left 
88 fill-shot shot13 ingredient2 right left dispenser2 
89 pour-shot-to-clean-shaker shot13 ingredient2 shaker1 right l0 l1 
90 clean-shot shot13 ingredient2 right left 
91 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient1 right shot13 
92 fill-shot shot13 ingredient1 right left dispenser1 
93 pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 
94 leave right shot13 
95 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient2 ingredient1 
96 __method_precondition_m5_do_clean_shot_5_precondition shot5 
97 nop  
98 grasp right shaker1 
99 shake cocktail9 ingredient2 ingredient1 shaker1 right left 
100 pour-shaker-to-shot cocktail9 shot5 right shaker1 l2 l1 
101 empty-shaker right shaker1 cocktail9 l1 l0 
102 clean-shaker right left shaker1 
103 leave right shaker1 
104 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
105 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient4 shot12 
106 __method_precondition_m8_do_fill_shot_8_precondition shot12 dispenser4 ingredient4 
107 grasp left shot12 
108 fill-shot shot12 ingredient4 left right dispenser4 
109 pour-shot-to-clean-shaker shot12 ingredient4 shaker1 left l0 l1 
110 clean-shot shot12 ingredient4 left right 
111 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient1 left shot12 
112 fill-shot shot12 ingredient1 left right dispenser1 
113 pour-shot-to-used-shaker shot12 ingredient1 shaker1 left l1 l2 
114 leave left shot12 
115 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient4 ingredient1 
116 __method_precondition_m5_do_clean_shot_5_precondition shot6 
117 nop  
118 grasp left shaker1 
119 shake cocktail6 ingredient4 ingredient1 shaker1 left right 
120 pour-shaker-to-shot cocktail6 shot6 left shaker1 l2 l1 
121 empty-shaker left shaker1 cocktail6 l1 l0 
122 clean-shaker left right shaker1 
123 leave left shaker1 
124 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 right 
125 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient1 shot12 
126 __method_precondition_m7_do_fill_shot_7_precondition shot12 ingredient1 dispenser1 
127 grasp right shot12 
128 refill-shot shot12 ingredient1 right left dispenser1 
129 pour-shot-to-clean-shaker shot12 ingredient1 shaker1 right l0 l1 
130 clean-shot shot12 ingredient1 right left 
131 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient3 right shot12 
132 fill-shot shot12 ingredient3 right left dispenser3 
133 pour-shot-to-used-shaker shot12 ingredient3 shaker1 right l1 l2 
134 leave right shot12 
135 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient1 ingredient3 
136 __method_precondition_m5_do_clean_shot_5_precondition shot7 
137 nop  
138 grasp right shaker1 
139 shake cocktail3 ingredient1 ingredient3 shaker1 right left 
140 pour-shaker-to-shot cocktail3 shot7 right shaker1 l2 l1 
141 empty-shaker right shaker1 cocktail3 l1 l0 
142 clean-shaker right left shaker1 
143 leave right shaker1 
144 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
145 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient3 shot13 
146 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient3 ingredient1 dispenser3 
147 grasp right shot13 
148 clean-shot shot13 ingredient1 right left 
149 fill-shot shot13 ingredient3 right left dispenser3 
150 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 
151 clean-shot shot13 ingredient3 right left 
152 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient1 right shot13 
153 fill-shot shot13 ingredient1 right left dispenser1 
154 pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 
155 leave right shot13 
156 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient3 ingredient1 
157 __method_precondition_m5_do_clean_shot_5_precondition shot8 
158 nop  
159 grasp left shaker1 
160 shake cocktail1 ingredient3 ingredient1 shaker1 left right 
161 pour-shaker-to-shot cocktail1 shot8 left shaker1 l2 l1 
162 empty-shaker left shaker1 cocktail1 l1 l0 
163 clean-shaker left right shaker1 
164 leave left shaker1 
165 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
166 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient1 shot13 
167 __method_precondition_m7_do_fill_shot_7_precondition shot13 ingredient1 dispenser1 
168 grasp right shot13 
169 refill-shot shot13 ingredient1 right left dispenser1 
170 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 
171 clean-shot shot13 ingredient1 right left 
172 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient4 right shot13 
173 fill-shot shot13 ingredient4 right left dispenser4 
174 pour-shot-to-used-shaker shot13 ingredient4 shaker1 right l1 l2 
175 leave right shot13 
176 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient1 ingredient4 
177 __method_precondition_m5_do_clean_shot_5_precondition shot9 
178 nop  
179 grasp left shaker1 
180 shake cocktail7 ingredient1 ingredient4 shaker1 left right 
181 pour-shaker-to-shot cocktail7 shot9 left shaker1 l2 l1 
182 empty-shaker left shaker1 cocktail7 l1 l0 
183 clean-shaker left right shaker1 
184 leave left shaker1 
185 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 right 
186 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot12 
187 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient4 ingredient3 dispenser4 
188 grasp right shot12 
189 clean-shot shot12 ingredient3 right left 
190 fill-shot shot12 ingredient4 right left dispenser4 
191 pour-shot-to-clean-shaker shot12 ingredient4 shaker1 right l0 l1 
192 clean-shot shot12 ingredient4 right left 
193 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 right shot12 
194 fill-shot shot12 ingredient3 right left dispenser3 
195 pour-shot-to-used-shaker shot12 ingredient3 shaker1 right l1 l2 
196 leave right shot12 
197 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient3 
198 __method_precondition_m5_do_clean_shot_5_precondition shot10 
199 nop  
200 grasp right shaker1 
201 shake cocktail2 ingredient4 ingredient3 shaker1 right left 
202 pour-shaker-to-shot cocktail2 shot10 right shaker1 l2 l1 
203 empty-shaker right shaker1 cocktail2 l1 l0 
204 clean-shaker right left shaker1 
205 leave right shaker1 
206 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
207 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot13 
208 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient4 dispenser1 
209 grasp left shot13 
210 clean-shot shot13 ingredient4 left right 
211 fill-shot shot13 ingredient1 left right dispenser1 
212 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 left l0 l1 
213 clean-shot shot13 ingredient1 left right 
214 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient4 left shot13 
215 fill-shot shot13 ingredient4 left right dispenser4 
216 pour-shot-to-used-shaker shot13 ingredient4 shaker1 left l1 l2 
217 leave left shot13 
218 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient4 
219 __method_precondition_m5_do_clean_shot_5_precondition shot11 
220 nop  
221 grasp right shaker1 
222 shake cocktail10 ingredient1 ingredient4 shaker1 right left 
223 pour-shaker-to-shot cocktail10 shot11 right shaker1 l2 l1 
224 empty-shaker right shaker1 cocktail10 l1 l0 
225 clean-shaker right left shaker1 
226 leave right shaker1 
227 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser3 ingredient3 
228 __method_precondition_m7_do_fill_shot_7_precondition shot12 ingredient3 dispenser3 
229 grasp left shot12 
230 refill-shot shot12 ingredient3 left right dispenser3 
231 leave left shot12 
root 304
232 do_clean_shot_m4_serve_shot_sip_2 shot10 left  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2> 198 199
233 do_fill_shot shot12 ingredient4 left  -> m8_do_fill_shot 106 107 108
234 do_fill_shot shot12 ingredient1 right  -> m7_do_fill_shot 126 127 128
235 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 72
236 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 212
237 do_cocktail_in_shot2 shot12 ingredient3  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 227 279 231
238 get_first_ingredient cocktail7 right  -> m2_get_first_ingredient 166 284 291 339
239 do_cocktail_in_shot1 shot10 cocktail2  -> m0_do_cocktail_in_shot1 185 241 243 311
240 serve_shot shot5 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 95 257 98 99 100 101 102 103
241 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 186 327 256 297
242 do_clean_shot_m4_serve_shot_sip_2 shot9 right  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2> 177 178
243 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 193 333 314 196
244 serve_shot shot2 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 32 269 35 36 37 38 39 40
245 do_cocktail_in_shot1 shot6 cocktail6  -> m0_do_cocktail_in_shot1 104 289 312 262
246 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 left  -> _m2_get_first_ingredient_4 69
247 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 right  -> _m2_get_first_ingredient_4 27
248 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 right  -> _m2_get_first_ingredient_4 151
249 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient4 left  -> _m2_get_first_ingredient_4 110
250 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 63 342 329 246
251 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient4 left  -> _m3_get_second_ingredient_2 215
252 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 207 322 236 267
253 do_cocktail_in_shot1 shot8 cocktail1  -> m0_do_cocktail_in_shot1 144 293 323 274
254 do_fill_shot shot13 ingredient3 right  -> m8_do_fill_shot 2 3 4
255 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient3 right  -> _m3_get_second_ingredient_2 132
256 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 191
257 do_clean_shot_m4_serve_shot_sip_2 shot5 left  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2> 96 97
258 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient1 left  -> _m3_get_second_ingredient_2 112
259 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 left  -> _m3_get_second_ingredient_2 71
260 serve_shot shot3 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 53 325 56 57 58 59 60 61
261 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 left  -> _m2_get_first_ingredient_4 48
262 serve_shot shot6 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 115 303 118 119 120 121 122 123
263 get_second_ingredient cocktail4 right  -> m3_get_second_ingredient 7 277 285 10
264 get_first_ingredient cocktail3 right  -> m2_get_first_ingredient 125 234 334 292
265 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 154
266 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 right  -> _m2_get_first_ingredient_4 6
267 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 left  -> _m2_get_first_ingredient_4 213
268 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 right  -> _m3_get_second_ingredient_2 92
269 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 33 34
270 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 right  -> _m3_get_second_ingredient_2 153
271 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 47
272 do_fill_shot shot13 ingredient1 right  -> m9_do_fill_shot 22 23 24 25
273 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail5,right];m5_do_clean_shot;0;-1,-2> 75 76
274 serve_shot shot8 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 156 294 159 160 161 162 163 164
275 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 84 331 282 317
276 do_cocktail_in_shot1 shot1 cocktail4  -> m0_do_cocktail_in_shot1 0 299 263 305
277 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 right  -> _m3_get_second_ingredient_2 8
278 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 70 259 235 73
279 do_fill_shot shot12 ingredient3 left  -> m7_do_fill_shot 228 229 230
280 do_fill_shot shot13 ingredient3 right  -> m9_do_fill_shot 146 147 148 149
281 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 49 328 318 52
282 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 89
283 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 21 272 338 247
284 do_fill_shot shot13 ingredient1 right  -> m7_do_fill_shot 167 168 169
285 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 9
286 do_cocktail_in_shot1 shot11 cocktail10  -> m0_do_cocktail_in_shot1 206 252 319 335
287 do_cocktail_in_shot1 shot4 cocktail8  -> m0_do_cocktail_in_shot1 62 250 278 310
288 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 5
289 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 105 233 326 249
290 do_cocktail_in_shot1 shot5 cocktail9  -> m0_do_cocktail_in_shot1 83 275 344 240
291 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 170
292 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient1 right  -> _m2_get_first_ingredient_4 130
293 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 145 280 315 248
294 do_clean_shot_m4_serve_shot_sip_2 shot8 right  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2> 157 158
295 do_cocktail_in_shot1 shot2 cocktail5  -> m0_do_cocktail_in_shot1 20 283 296 244
296 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 28 300 340 31
297 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient4 right  -> _m2_get_first_ingredient_4 192
298 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 216
299 get_first_ingredient cocktail4 right  -> m2_get_first_ingredient 1 254 288 266
300 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 right  -> _m3_get_second_ingredient_2 29
301 do_cocktail_in_shot1 shot3 cocktail10  -> m0_do_cocktail_in_shot1 41 321 281 260
302 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 113
303 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 116 117
304 __choicelessATCompilation__top_1  -> __top_1 276 295 301 287 290 245 343 253 309 239 286 237
305 serve_shot shot1 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 330 14 15 16 17 18 19
306 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient4 right  -> _m3_get_second_ingredient_2 173
307 serve_shot shot9 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 176 242 179 180 181 182 183 184
308 do_fill_shot shot13 ingredient1 left  -> m9_do_fill_shot 43 44 45 46
309 do_cocktail_in_shot1 shot9 cocktail7  -> m0_do_cocktail_in_shot1 165 238 313 307
310 serve_shot shot4 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 74 273 77 78 79 80 81 82
311 serve_shot shot10 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 197 232 200 201 202 203 204 205
312 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 111 258 302 114
313 get_second_ingredient cocktail7 right  -> m3_get_second_ingredient 172 306 324 175
314 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 195
315 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 150
316 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 93
317 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient2 right  -> _m2_get_first_ingredient_4 90
318 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 51
319 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 214 251 298 217
320 serve_shot shot7 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 135 341 138 139 140 141 142 143
321 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 42 308 271 261
322 do_fill_shot shot13 ingredient1 left  -> m9_do_fill_shot 208 209 210 211
323 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 152 270 265 155
324 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 174
325 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 54 55
326 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 109
327 do_fill_shot shot12 ingredient4 right  -> m9_do_fill_shot 187 188 189 190
328 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient4 left  -> _m3_get_second_ingredient_2 50
329 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 68
330 do_clean_shot_m4_serve_shot_sip_2 shot1 left  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2> 12 13
331 do_fill_shot shot13 ingredient2 right  -> m9_do_fill_shot 85 86 87 88
332 get_second_ingredient cocktail3 right  -> m3_get_second_ingredient 131 255 337 134
333 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient3 right  -> _m3_get_second_ingredient_2 194
334 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 129
335 serve_shot shot11 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 218 336 221 222 223 224 225 226
336 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 219 220
337 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 133
338 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 26
339 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 right  -> _m2_get_first_ingredient_4 171
340 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 30
341 do_clean_shot_m4_serve_shot_sip_2 shot7 left  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2> 136 137
342 do_fill_shot shot13 ingredient3 left  -> m9_do_fill_shot 64 65 66 67
343 do_cocktail_in_shot1 shot7 cocktail3  -> m0_do_cocktail_in_shot1 124 264 332 320
344 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 91 268 316 94

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 16.852 MEMPEAK_KBS 580469.76
