PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile19.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile19.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile19.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Grounded planning graph ... done in 214ms.
	Number of Grounded Actions 278
	Number of Grounded Literals 107
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Grounding ... done.
	number of abstract tasks = 101
	number of tasks = 379
	number of decomposition methods = 378
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 101
	number of tasks = 379
	number of decomposition methods = 378
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 88ms.
	Number of Grounded Actions 278
	Number of Grounded Literals 76
	number of abstract tasks = 101
	number of tasks = 379
	number of decomposition methods = 378
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 101
	number of tasks = 379
	number of decomposition methods = 378
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 101
	number of tasks = 379
	number of decomposition methods = 378
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 41ms.
	Number of Grounded Actions 278
	Number of Grounded Literals 76
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 146
	number of tasks = 424
	number of decomposition methods = 423
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 146
	number of tasks = 424
	number of decomposition methods = 423
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Tasks 278 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773281ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854773218
done
initial PDT has 44 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 44 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 8550
Size 8550 at 0/278
Size 3702
Size 3702 at 0/278
Size 939
Size 939 at 0/278
Size 259
Size 259 at 0/278
Size 210
Size 210 at 0/278
Size 210
Invariant time: 0.164
Number of invariants: 210
Invariant Clauses 9450
NUMBER OF CLAUSES 20932
NUMBER OF STATE CLAUSES 17506
NUMBER OF DECOMPOSITION CLAUSES 3426
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.63% 16.37% 0.0% 
NUMBER OF PATHS 44
Starting cryptominisat
Setting starttime of solver to 1603884684104
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 66 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 66 leafs
SHOP LEAFS 0
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854772202
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 14070
NUMBER OF CLAUSES 42028
NUMBER OF STATE CLAUSES 27156
NUMBER OF DECOMPOSITION CLAUSES 14872
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 64.61% 35.39% 0.0% 
NUMBER OF PATHS 66
Starting cryptominisat
Setting starttime of solver to 1603884684761
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 108 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 108 leafs
SHOP LEAFS 0
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854771653
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 22890
NUMBER OF CLAUSES 86872
NUMBER OF STATE CLAUSES 45256
NUMBER OF DECOMPOSITION CLAUSES 41616
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 52.1% 47.9% 0.0% 
NUMBER OF PATHS 108
Starting cryptominisat
Setting starttime of solver to 1603884685412
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 150 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854770954
done
PDT has 150 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 31710
NUMBER OF CLAUSES 159220
NUMBER OF STATE CLAUSES 65156
NUMBER OF DECOMPOSITION CLAUSES 94064
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 40.92% 59.08% 0.0% 
NUMBER OF PATHS 150
Starting cryptominisat
Setting starttime of solver to 1603884686296
Command exited with non-zero status 10
0.07 0.00

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_2;2,340 340 m-drive-to-via
2;2 102 pathaction!2_2;2,132
Consider method^4_2;2;0;0,346 346 m-drive-to
2;2;0;0 189 pathaction!4_2;2;0;0,132
Consider method^2_5;3,219 219 m-unload
5;3 30 pathaction!2_5;3,35
Consider method^5_9;0;0;0;0,155 155 m-drive-to
9;0;0;0;0 37 pathaction!5_9;0;0;0;0,118
Consider method^4_6;0;0;0,175 175 m-drive-to-via
6;0;0;0 4 pathaction!4_6;0;0;0,123
Consider method^5_1;0;0;0;0,0 0 m-drive-to
1;0;0;0;0 192 pathaction!5_1;0;0;0;0,112
Consider method^4_5;0;0;0,2 2 m-drive-to-via
5;0;0;0 20 pathaction!4_5;0;0;0,123
Consider method^5_0;0;0;0;0,0 0 m-drive-to
0;0;0;0;0 9 pathaction!5_0;0;0;0;0,112
Consider method^2_6;2,378 378 m-drive-to-via
6;2 128 pathaction!2_6;2,113
Consider method^3_7;2;0,249 249 m-drive-to-via
7;2;0 232 pathaction!3_7;2;0,121
Consider method^2_5;2,145 145 m-drive-to-via
5;2 119 pathaction!2_5;2,133
Consider method^3_2;0;0,139 139 m-drive-to-via
2;0;0 27 pathaction!3_2;0;0,132
Consider method^2_10;0,352 352 m-drive-to-via
10;0 218 pathaction!2_10;0,128
Consider method^2_8;2,132 132 m-drive-to-via
8;2 160 pathaction!2_8;2,116
Consider method^3_7;0;0,412 412 m-drive-to-via
7;0;0 184 pathaction!3_7;0;0,124
Consider method^4_7;0;0;0,286 286 m-drive-to-via
7;0;0;0 164 pathaction!4_7;0;0;0,120
Consider method^2_2;3,74 74 m-unload
2;3 7 pathaction!2_2;3,30
Consider method^2_10;3,304 304 m-unload
10;3 177 pathaction!2_10;3,39
Consider method^3_0;2;0,150 150 m-drive-to-via
0;2;0 31 pathaction!3_0;2;0,112
Consider method^2_7;2,76 76 m-drive-to-via
7;2 100 pathaction!2_7;2,132
Consider method^1_10,52 52 m-deliver
10 133 pathaction!1_10,246
Consider method^5_1;2;0;0;0,421 421 m-drive-to
1;2;0;0;0 220 pathaction!5_1;2;0;0;0,114
Consider method^2_6;3,399 399 m-unload
6;3 117 pathaction!2_6;3,24
Consider method^5_2;0;0;0;0,85 85 m-drive-to
2;0;0;0;0 142 pathaction!5_2;0;0;0;0,122
Consider method^4_3;2;0;0,192 192 m-drive-to-via
3;2;0;0 88 pathaction!4_3;2;0;0,130
Consider method^5_6;0;0;0;0,205 205 m-drive-to
6;0;0;0;0 217 pathaction!5_6;0;0;0;0,121
Consider method^1_0,16 16 m-deliver
0 110 pathaction!1_0,239
Consider method^3_1;0;0,331 331 m-drive-to-via
1;0;0 57 pathaction!3_1;0;0,114
Consider method^2_8;3,51 51 m-unload
8;3 22 pathaction!2_8;3,38
Consider method^2_0;2,91 91 m-drive-to-via
0;2 6 pathaction!2_0;2,127
Consider method^2_0;1,107 107 m-load
0;1 32 pathaction!2_0;1,212
Consider method^3_3;2;0,234 234 m-drive-to-via
3;2;0 202 pathaction!3_3;2;0,117
Consider method^2_4;3,72 72 m-unload
4;3 136 pathaction!2_4;3,29
Consider method^2_2;1,87 87 m-load
2;1 46 pathaction!2_2;1,233
Consider method^3_9;2;0,395 395 m-drive-to-via
9;2;0 98 pathaction!3_9;2;0,112
Consider method^3_10;2;0,6 6 m-drive-to
10;2;0 84 pathaction!3_10;2;0,118
Consider method^2_5;1,308 308 m-load
5;1 79 pathaction!2_5;1,219
Consider method^4_1;2;0;0,99 99 m-drive-to-via
1;2;0;0 225 pathaction!4_1;2;0;0,130
Consider method^3_5;0;0,265 265 m-drive-to-via
5;0;0 114 pathaction!3_5;0;0,122
Consider method^2_7;0,203 203 m-drive-to-via
7;0 228 pathaction!2_7;0,122
Consider method^4_5;2;0;0,416 416 m-drive-to-via
5;2;0;0 139 pathaction!4_5;2;0;0,123
Consider method^2_10;2,192 192 m-drive-to-via
10;2 216 pathaction!2_10;2,130
Consider method^4_8;0;0;0,384 384 m-drive-to-via
8;0;0;0 134 pathaction!4_8;0;0;0,112
Consider method^4_9;2;0;0,113 113 m-drive-to
9;2;0;0 182 pathaction!4_9;2;0;0,127
Consider method^1_8,122 122 m-deliver
8 113 pathaction!1_8,245
Consider method^5_8;0;0;0;0,227 227 m-drive-to
8;0;0;0;0 131 pathaction!5_8;0;0;0;0,117
Consider method^4_10;0;0;0,165 165 m-drive-to
10;0;0;0 186 pathaction!4_10;0;0;0,130
Consider method^2_9;2,140 140 m-drive-to-via
9;2 93 pathaction!2_9;2,117
Consider method^2_3;0,352 352 m-drive-to-via
3;0 159 pathaction!2_3;0,128
Consider method^4_4;2;0;0,192 192 m-drive-to-via
4;2;0;0 28 pathaction!4_4;2;0;0,130
Consider method^1_2,223 223 m-deliver
2 130 pathaction!1_2,241
Consider method^3_4;2;0,234 234 m-drive-to-via
4;2;0 111 pathaction!3_4;2;0,117
Consider method^4_7;2;0;0,416 416 m-drive-to-via
7;2;0;0 24 pathaction!4_7;2;0;0,123
Consider method^5_3;2;0;0;0,6 6 m-drive-to
3;2;0;0;0 183 pathaction!5_3;2;0;0;0,118
Consider method^3_1;2;0,329 329 m-drive-to-via
1;2;0 214 pathaction!3_1;2;0,118
Consider method^5_7;2;0;0;0,396 396 m-i-am-there
7;2;0;0;0 1 pathaction!5_7;2;0;0;0,122
Consider method^2_5;0,273 273 m-drive-to-via
5;0 42 pathaction!2_5;0,131
Consider method^4_2;0;0;0,402 402 m-drive-to-via
2;0;0;0 185 pathaction!4_2;0;0;0,124
Consider method^3_3;0;0,404 404 m-drive-to-via
3;0;0 181 pathaction!3_3;0;0,118
Consider method^1_3,64 64 m-deliver
3 195 pathaction!1_3,244
Consider method^3_2;2;0,378 378 m-drive-to-via
2;2;0 116 pathaction!3_2;2;0,113
Consider method^5_3;0;0;0;0,335 335 m-drive-to
3;0;0;0;0 34 pathaction!5_3;0;0;0;0,118
Consider method^2_4;0,124 124 m-drive-to-via
4;0 14 pathaction!2_4;0,130
Consider method^2_3;3,201 201 m-unload
3;3 173 pathaction!2_3;3,34
Consider method^4_0;2;0;0,183 183 m-drive-to-via
0;2;0;0 39 pathaction!4_0;2;0;0,114
Consider method^5_5;0;0;0;0,134 134 m-drive-to
5;0;0;0;0 33 pathaction!5_5;0;0;0;0,120
Consider method^0_,422 422 __top_1
 209 pathaction!0_,379
Consider method^2_7;1,309 309 m-load
7;1 176 pathaction!2_7;1,210
Consider method^2_4;1,128 128 m-load
4;1 18 pathaction!2_4;1,229
Consider method^3_9;0;0,331 331 m-drive-to-via
9;0;0 17 pathaction!3_9;0;0,114
Consider method^2_1;0,150 150 m-drive-to-via
1;0 74 pathaction!2_1;0,112
Consider method^2_1;2,263 263 m-drive-to-via
1;2 224 pathaction!2_1;2,134
Consider method^2_6;0,412 412 m-drive-to-via
6;0 29 pathaction!2_6;0,124
Consider method^2_7;3,385 385 m-unload
7;3 72 pathaction!2_7;3,36
Consider method^2_9;1,247 247 m-load
9;1 178 pathaction!2_9;1,200
Consider method^3_4;0;0,227 227 m-drive-to
4;0;0 104 pathaction!3_4;0;0,117
Consider method^3_6;0;0,302 302 m-drive-to-via
6;0;0 92 pathaction!3_6;0;0,120
Consider method^1_5,202 202 m-deliver
5 89 pathaction!1_5,236
Consider method^2_9;3,251 251 m-unload
9;3 154 pathaction!2_9;3,37
Consider method^2_9;0,150 150 m-drive-to-via
9;0 61 pathaction!2_9;0,112
Consider method^5_0;2;0;0;0,363 363 m-drive-to
0;2;0;0;0 5 pathaction!5_0;2;0;0;0,112
Consider method^2_3;1,37 37 m-load
3;1 157 pathaction!2_3;1,226
Consider method^5_4;2;0;0;0,394 394 m-drive-to
4;2;0;0;0 146 pathaction!5_4;2;0;0;0,118
Consider method^5_5;2;0;0;0,332 332 m-drive-to
5;2;0;0;0 70 pathaction!5_5;2;0;0;0,122
Consider method^2_8;0,285 285 m-drive-to-via
8;0 66 pathaction!2_8;0,115
Consider method^2_3;2,101 101 m-drive-to-via
3;2 215 pathaction!2_3;2,119
Consider method^3_10;0;0,329 329 m-drive-to-via
10;0;0 52 pathaction!3_10;0;0,118
Consider method^4_1;0;0;0,348 348 m-drive-to-via
1;0;0;0 56 pathaction!4_1;0;0;0,115
Consider method^2_2;0,378 378 m-drive-to-via
2;0 172 pathaction!2_2;0,113
Consider method^2_1;1,176 176 m-load
1;1 81 pathaction!2_1;1,199
Consider method^2_0;0,234 234 m-drive-to-via
0;0 59 pathaction!2_0;0,117
Consider method^4_9;0;0;0,377 377 m-drive-to-via
9;0;0;0 166 pathaction!4_9;0;0;0,115
Consider method^2_6;1,158 158 m-load
6;1 208 pathaction!2_6;1,202
Consider method^2_0;3,161 161 m-unload
0;3 82 pathaction!2_0;3,42
Consider method^2_8;1,153 153 m-load
8;1 77 pathaction!2_8;1,213
Consider method^3_8;2;0,179 179 m-drive-to
8;2;0 201 pathaction!3_8;2;0,118
Consider method^1_9,196 196 m-deliver
9 38 pathaction!1_9,243
Consider method^3_8;0;0,183 183 m-drive-to-via
8;0;0 75 pathaction!3_8;0;0,114
Consider method^1_7,243 243 m-deliver
7 168 pathaction!1_7,237
Consider method^5_6;2;0;0;0,168 168 m-drive-to
6;2;0;0;0 76 pathaction!5_6;2;0;0;0,122
Consider method^2_1;3,420 420 m-unload
1;3 45 pathaction!2_1;3,41
Consider method^1_6,9 9 m-deliver
6 175 pathaction!1_6,242
Consider method^4_3;0;0;0,377 377 m-drive-to-via
3;0;0;0 219 pathaction!4_3;0;0;0,115
Consider method^4_6;2;0;0,402 402 m-drive-to-via
6;2;0;0 132 pathaction!4_6;2;0;0,124
Consider method^3_5;2;0,249 249 m-drive-to-via
5;2;0 206 pathaction!3_5;2;0,121
Consider method^2_10;1,163 163 m-load
10;1 165 pathaction!2_10;1,228
Consider method^3_6;2;0,139 139 m-drive-to-via
6;2;0 44 pathaction!3_6;2;0,132
Consider method^1_1,406 406 m-deliver
1 71 pathaction!1_1,238
Consider method^2_4;2,101 101 m-drive-to-via
4;2 67 pathaction!2_4;2,119
Consider method^3_0;0;0,99 99 m-drive-to-via
0;0;0 211 pathaction!3_0;0;0,130
Consider method^5_7;0;0;0;0,346 346 m-drive-to
7;0;0;0;0 36 pathaction!5_7;0;0;0;0,132
Consider method^1_4,167 167 m-deliver
4 227 pathaction!1_4,240
Consider method^4_0;0;0;0,183 183 m-drive-to-via
0;0;0;0 96 pathaction!4_0;0;0;0,114


CHECKING primitive solution of length 101 ...
true 171 drive[truck-0,city-loc-11,city-loc-10;]
true 13 drive[truck-0,city-loc-10,city-loc-9;]
true 65 drive[truck-0,city-loc-9,city-loc-0;]
true 162 drive[truck-0,city-loc-0,city-loc-8;]
true 80 pick-up[truck-0,city-loc-8,package-0,capacity-2,capacity-3;]
true 68 drive[truck-0,city-loc-8,city-loc-10;]
true 150 drive[truck-0,city-loc-10,city-loc-9;]
true 60 drive[truck-0,city-loc-9,city-loc-10;]
true 226 drive[truck-0,city-loc-10,city-loc-11;]
true 187 drop[truck-0,city-loc-11,package-0,capacity-2,capacity-3;]
true 141 drive[truck-0,city-loc-11,city-loc-10;]
true 83 drive[truck-0,city-loc-10,city-loc-2;]
true 118 drive[truck-0,city-loc-2,city-loc-9;]
true 197 drive[truck-0,city-loc-9,city-loc-10;]
true 144 pick-up[truck-0,city-loc-10,package-1,capacity-2,capacity-3;]
true 41 drive[truck-0,city-loc-10,city-loc-9;]
true 196 drive[truck-0,city-loc-9,city-loc-0;]
true 123 drive[truck-0,city-loc-0,city-loc-4;]
true 125 drive[truck-0,city-loc-4,city-loc-3;]
true 231 drop[truck-0,city-loc-3,package-1,capacity-2,capacity-3;]
true 204 drive[truck-1,city-loc-1,city-loc-4;]
true 47 drive[truck-1,city-loc-4,city-loc-2;]
true 63 drive[truck-1,city-loc-2,city-loc-10;]
true 230 drive[truck-1,city-loc-10,city-loc-11;]
true 91 pick-up[truck-1,city-loc-11,package-2,capacity-2,capacity-3;]
true 199 drive[truck-1,city-loc-11,city-loc-10;]
true 8 drive[truck-1,city-loc-10,city-loc-11;]
true 145 drive[truck-1,city-loc-11,city-loc-10;]
true 97 drop[truck-1,city-loc-10,package-2,capacity-2,capacity-3;]
true 129 drive[truck-0,city-loc-3,city-loc-4;]
true 16 drive[truck-0,city-loc-4,city-loc-2;]
true 3 drive[truck-0,city-loc-2,city-loc-4;]
true 205 drive[truck-0,city-loc-4,city-loc-1;]
true 2 pick-up[truck-0,city-loc-1,package-3,capacity-2,capacity-3;]
true 179 drive[truck-0,city-loc-1,city-loc-4;]
true 10 drive[truck-0,city-loc-4,city-loc-0;]
true 221 drive[truck-0,city-loc-0,city-loc-8;]
true 169 drive[truck-0,city-loc-8,city-loc-5;]
true 0 drop[truck-0,city-loc-5,package-3,capacity-2,capacity-3;]
true 203 drive[truck-0,city-loc-5,city-loc-8;]
true 73 drive[truck-0,city-loc-8,city-loc-0;]
true 53 pick-up[truck-0,city-loc-0,package-4,capacity-2,capacity-3;]
true 200 drive[truck-0,city-loc-0,city-loc-4;]
true 50 drive[truck-0,city-loc-4,city-loc-0;]
true 213 drive[truck-0,city-loc-0,city-loc-8;]
true 12 drive[truck-0,city-loc-8,city-loc-5;]
true 222 drop[truck-0,city-loc-5,package-4,capacity-2,capacity-3;]
true 25 drive[truck-1,city-loc-10,city-loc-9;]
true 26 drive[truck-1,city-loc-9,city-loc-0;]
true 140 drive[truck-1,city-loc-0,city-loc-4;]
true 21 drive[truck-1,city-loc-4,city-loc-3;]
true 103 pick-up[truck-1,city-loc-3,package-5,capacity-2,capacity-3;]
true 223 drive[truck-1,city-loc-3,city-loc-4;]
true 156 drive[truck-1,city-loc-4,city-loc-0;]
true 115 drive[truck-1,city-loc-0,city-loc-8;]
true 198 drive[truck-1,city-loc-8,city-loc-5;]
true 163 drop[truck-1,city-loc-5,package-5,capacity-2,capacity-3;]
true 147 drive[truck-1,city-loc-5,city-loc-8;]
true 188 drive[truck-1,city-loc-8,city-loc-0;]
true 62 drive[truck-1,city-loc-0,city-loc-9;]
true 191 drive[truck-1,city-loc-9,city-loc-2;]
true 120 pick-up[truck-1,city-loc-2,package-6,capacity-2,capacity-3;]
true 151 drive[truck-1,city-loc-2,city-loc-4;]
true 40 drive[truck-1,city-loc-4,city-loc-2;]
true 15 drive[truck-1,city-loc-2,city-loc-10;]
true 109 drive[truck-1,city-loc-10,city-loc-11;]
true 94 drop[truck-1,city-loc-11,package-6,capacity-2,capacity-3;]
true 137 drive[truck-1,city-loc-11,city-loc-10;]
true 121 drive[truck-1,city-loc-10,city-loc-9;]
true 49 drive[truck-1,city-loc-9,city-loc-2;]
true 107 drive[truck-1,city-loc-2,city-loc-4;]
true 152 pick-up[truck-1,city-loc-4,package-7,capacity-2,capacity-3;]
true 127 noop[truck-1,city-loc-4;]
true 174 drive[truck-1,city-loc-4,city-loc-0;]
true 158 drive[truck-1,city-loc-0,city-loc-8;]
true 153 drive[truck-1,city-loc-8,city-loc-10;]
true 23 drop[truck-1,city-loc-10,package-7,capacity-2,capacity-3;]
true 58 drive[truck-0,city-loc-5,city-loc-8;]
true 180 drive[truck-0,city-loc-8,city-loc-10;]
true 161 drive[truck-0,city-loc-10,city-loc-9;]
true 95 drive[truck-0,city-loc-9,city-loc-2;]
true 90 pick-up[truck-0,city-loc-2,package-8,capacity-2,capacity-3;]
true 143 drive[truck-0,city-loc-2,city-loc-4;]
true 149 drive[truck-0,city-loc-4,city-loc-7;]
true 229 drop[truck-0,city-loc-7,package-8,capacity-2,capacity-3;]
true 85 drive[truck-0,city-loc-7,city-loc-4;]
true 207 drive[truck-0,city-loc-4,city-loc-2;]
true 212 drive[truck-0,city-loc-2,city-loc-9;]
true 43 drive[truck-0,city-loc-9,city-loc-10;]
true 170 pick-up[truck-0,city-loc-10,package-9,capacity-2,capacity-3;]
true 35 drive[truck-0,city-loc-10,city-loc-11;]
true 78 drive[truck-0,city-loc-11,city-loc-10;]
true 210 drive[truck-0,city-loc-10,city-loc-8;]
true 135 drop[truck-0,city-loc-8,package-9,capacity-2,capacity-3;]
true 55 drive[truck-0,city-loc-8,city-loc-0;]
true 148 drive[truck-0,city-loc-0,city-loc-4;]
true 64 drive[truck-0,city-loc-4,city-loc-1;]
true 87 pick-up[truck-0,city-loc-1,package-10,capacity-2,capacity-3;]
true 86 drive[truck-0,city-loc-1,city-loc-4;]
true 105 drive[truck-0,city-loc-4,city-loc-0;]
true 233 drop[truck-0,city-loc-0,package-10,capacity-2,capacity-3;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 197744272
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 76
number of actions                    = 424
number of abstract actions           = 146
number of primitive actions          = 278
number of methods                    = 423
number of primitive shop actions     = 0
number of primitive non-shop actions = 278
size of largest method               = 11
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 37372
number of clauses               = 159220
average size of clauses         = 2.677527948750157
number of assert                = 16
number of horn                  = 144664
K offset                        = 0
K chosen value                  = 6
state formula                   = 65156
method children clauses         = 0
number of paths                 = 150
maximum plan length             = 150
number of decomposition clauses = 94064
number of ordering clauses      = 0
number of state clauses         = 65156
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 6373
============ parsing ============
total                         = 900
file parser                   = 539
sort expansion                = 150
closed world assumption       = 84
inherit preconditions         = 0
shop methods                  = 2
eliminate identical variables = 76
strip domain of hybridity     = 1
flatten formula               = 48
============ preprocessing ============
total                                      = 1451
compile negative preconditions             = 34
compile unit methods                       = 0
split parameter                            = 54
expand choiceless abstract tasks           = 0
compile methods with identical tasks       = 26
removing unnecessary predicates            = 132
lifted reachabiltiy analysis               = 51
grounded planning graph analysis           = 558
grounded task decomposition graph analysis = 410
grounding                                  = 165
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 215
============ sat ============
total                                        = 2732
generate formula                             = 1957
generate path decomposition tree             = 332
normalise path decomposition tree            = 135
sog optimisation                             = 113
translate path decomposition tree to clauses = 541
generate state formula                       = 1919
generate state invariant formula             = 147
transform to DIMACS                          = 163
SAT solver                                   = 110
SAT solver for K=0003                        = 0
SAT solver for K=0004                        = 0
SAT solver for K=0005                        = 40
SAT solver for K=0006                        = 70

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="278";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="146";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="197744272";"40 sat:20:state formula"="65156";"40 sat:01:number of variables"="37372";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="150";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="423";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="424";"30 problem:08:number of primitive non-shop actions"="278";"30 problem:02:number of predicates"="76";"40 sat:03:number of horn"="144664";"40 sat:15:K chosen value"="6";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="11";"40 sat:03:average size of clauses"="2.677527948750157";"40 sat:02:number of clauses"="159220";"40 sat:50:number of state clauses"="65156";"40 sat:03:number of assert"="16";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="150";"40 sat:50:number of decomposition clauses"="94064";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="539";"01 parsing:08:flatten formula"="48";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="2732";"40 sat:16:generate state formula"="1919";"40 sat:20:transform to DIMACS"="163";"40 sat:11:generate path decomposition tree"="332";"02 preprocessing:07:compile methods with identical tasks"="26";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="132";"01 parsing:03:closed world assumption"="84";"02 preprocessing:11:lifted reachabiltiy analysis"="51";"01 parsing:02:sort expansion"="150";"40 sat:12:normalise path decomposition tree"="135";"40 sat:40:SAT solver"="110";"01 parsing:00:total"="900";"40 sat:10:generate formula"="1957";"40 sat:41:SAT solver for K=0005"="40";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="34";"00 total:00:total"="6373";"40 sat:13:sog optimisation"="113";"02 preprocessing:12:grounded planning graph analysis"="558";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="410";"40 sat:41:SAT solver for K=0006"="70";"02 preprocessing:04:split parameter"="54";"01 parsing:05:shop methods"="2";"10 search preparation:02:compute state invariants"="215";"01 parsing:06:eliminate identical variables"="76";"40 sat:15:translate path decomposition tree to clauses"="541";"02 preprocessing:05:expand choiceless abstract tasks"="0";"40 sat:41:SAT solver for K=0003"="0";"40 sat:17:generate state invariant formula"="147";"02 preprocessing:00:total"="1451";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="165"
#!verify drive[truck-0,city-loc-11,city-loc-10];drive[truck-0,city-loc-10,city-loc-9];drive[truck-0,city-loc-9,city-loc-0];drive[truck-0,city-loc-0,city-loc-8];pick-up[truck-0,city-loc-8,package-0,capacity-2,capacity-3];drive[truck-0,city-loc-8,city-loc-10];drive[truck-0,city-loc-10,city-loc-9];drive[truck-0,city-loc-9,city-loc-10];drive[truck-0,city-loc-10,city-loc-11];drop[truck-0,city-loc-11,package-0,capacity-2,capacity-3];drive[truck-0,city-loc-11,city-loc-10];drive[truck-0,city-loc-10,city-loc-2];drive[truck-0,city-loc-2,city-loc-9];drive[truck-0,city-loc-9,city-loc-10];pick-up[truck-0,city-loc-10,package-1,capacity-2,capacity-3];drive[truck-0,city-loc-10,city-loc-9];drive[truck-0,city-loc-9,city-loc-0];drive[truck-0,city-loc-0,city-loc-4];drive[truck-0,city-loc-4,city-loc-3];drop[truck-0,city-loc-3,package-1,capacity-2,capacity-3];drive[truck-1,city-loc-1,city-loc-4];drive[truck-1,city-loc-4,city-loc-2];drive[truck-1,city-loc-2,city-loc-10];drive[truck-1,city-loc-10,city-loc-11];pick-up[truck-1,city-loc-11,package-2,capacity-2,capacity-3];drive[truck-1,city-loc-11,city-loc-10];drive[truck-1,city-loc-10,city-loc-11];drive[truck-1,city-loc-11,city-loc-10];drop[truck-1,city-loc-10,package-2,capacity-2,capacity-3];drive[truck-0,city-loc-3,city-loc-4];drive[truck-0,city-loc-4,city-loc-2];drive[truck-0,city-loc-2,city-loc-4];drive[truck-0,city-loc-4,city-loc-1];pick-up[truck-0,city-loc-1,package-3,capacity-2,capacity-3];drive[truck-0,city-loc-1,city-loc-4];drive[truck-0,city-loc-4,city-loc-0];drive[truck-0,city-loc-0,city-loc-8];drive[truck-0,city-loc-8,city-loc-5];drop[truck-0,city-loc-5,package-3,capacity-2,capacity-3];drive[truck-0,city-loc-5,city-loc-8];drive[truck-0,city-loc-8,city-loc-0];pick-up[truck-0,city-loc-0,package-4,capacity-2,capacity-3];drive[truck-0,city-loc-0,city-loc-4];drive[truck-0,city-loc-4,city-loc-0];drive[truck-0,city-loc-0,city-loc-8];drive[truck-0,city-loc-8,city-loc-5];drop[truck-0,city-loc-5,package-4,capacity-2,capacity-3];drive[truck-1,city-loc-10,city-loc-9];drive[truck-1,city-loc-9,city-loc-0];drive[truck-1,city-loc-0,city-loc-4];drive[truck-1,city-loc-4,city-loc-3];pick-up[truck-1,city-loc-3,package-5,capacity-2,capacity-3];drive[truck-1,city-loc-3,city-loc-4];drive[truck-1,city-loc-4,city-loc-0];drive[truck-1,city-loc-0,city-loc-8];drive[truck-1,city-loc-8,city-loc-5];drop[truck-1,city-loc-5,package-5,capacity-2,capacity-3];drive[truck-1,city-loc-5,city-loc-8];drive[truck-1,city-loc-8,city-loc-0];drive[truck-1,city-loc-0,city-loc-9];drive[truck-1,city-loc-9,city-loc-2];pick-up[truck-1,city-loc-2,package-6,capacity-2,capacity-3];drive[truck-1,city-loc-2,city-loc-4];drive[truck-1,city-loc-4,city-loc-2];drive[truck-1,city-loc-2,city-loc-10];drive[truck-1,city-loc-10,city-loc-11];drop[truck-1,city-loc-11,package-6,capacity-2,capacity-3];drive[truck-1,city-loc-11,city-loc-10];drive[truck-1,city-loc-10,city-loc-9];drive[truck-1,city-loc-9,city-loc-2];drive[truck-1,city-loc-2,city-loc-4];pick-up[truck-1,city-loc-4,package-7,capacity-2,capacity-3];noop[truck-1,city-loc-4];drive[truck-1,city-loc-4,city-loc-0];drive[truck-1,city-loc-0,city-loc-8];drive[truck-1,city-loc-8,city-loc-10];drop[truck-1,city-loc-10,package-7,capacity-2,capacity-3];drive[truck-0,city-loc-5,city-loc-8];drive[truck-0,city-loc-8,city-loc-10];drive[truck-0,city-loc-10,city-loc-9];drive[truck-0,city-loc-9,city-loc-2];pick-up[truck-0,city-loc-2,package-8,capacity-2,capacity-3];drive[truck-0,city-loc-2,city-loc-4];drive[truck-0,city-loc-4,city-loc-7];drop[truck-0,city-loc-7,package-8,capacity-2,capacity-3];drive[truck-0,city-loc-7,city-loc-4];drive[truck-0,city-loc-4,city-loc-2];drive[truck-0,city-loc-2,city-loc-9];drive[truck-0,city-loc-9,city-loc-10];pick-up[truck-0,city-loc-10,package-9,capacity-2,capacity-3];drive[truck-0,city-loc-10,city-loc-11];drive[truck-0,city-loc-11,city-loc-10];drive[truck-0,city-loc-10,city-loc-8];drop[truck-0,city-loc-8,package-9,capacity-2,capacity-3];drive[truck-0,city-loc-8,city-loc-0];drive[truck-0,city-loc-0,city-loc-4];drive[truck-0,city-loc-4,city-loc-1];pick-up[truck-0,city-loc-1,package-10,capacity-2,capacity-3];drive[truck-0,city-loc-1,city-loc-4];drive[truck-0,city-loc-4,city-loc-0];drop[truck-0,city-loc-0,package-10,capacity-2,capacity-3]
==>
0 drive truck-0 city-loc-11 city-loc-10 
1 drive truck-0 city-loc-10 city-loc-9 
2 drive truck-0 city-loc-9 city-loc-0 
3 drive truck-0 city-loc-0 city-loc-8 
4 pick-up truck-0 city-loc-8 package-0 capacity-2 capacity-3 
5 drive truck-0 city-loc-8 city-loc-10 
6 drive truck-0 city-loc-10 city-loc-9 
7 drive truck-0 city-loc-9 city-loc-10 
8 drive truck-0 city-loc-10 city-loc-11 
9 drop truck-0 city-loc-11 package-0 capacity-2 capacity-3 
10 drive truck-0 city-loc-11 city-loc-10 
11 drive truck-0 city-loc-10 city-loc-2 
12 drive truck-0 city-loc-2 city-loc-9 
13 drive truck-0 city-loc-9 city-loc-10 
14 pick-up truck-0 city-loc-10 package-1 capacity-2 capacity-3 
15 drive truck-0 city-loc-10 city-loc-9 
16 drive truck-0 city-loc-9 city-loc-0 
17 drive truck-0 city-loc-0 city-loc-4 
18 drive truck-0 city-loc-4 city-loc-3 
19 drop truck-0 city-loc-3 package-1 capacity-2 capacity-3 
20 drive truck-1 city-loc-1 city-loc-4 
21 drive truck-1 city-loc-4 city-loc-2 
22 drive truck-1 city-loc-2 city-loc-10 
23 drive truck-1 city-loc-10 city-loc-11 
24 pick-up truck-1 city-loc-11 package-2 capacity-2 capacity-3 
25 drive truck-1 city-loc-11 city-loc-10 
26 drive truck-1 city-loc-10 city-loc-11 
27 drive truck-1 city-loc-11 city-loc-10 
28 drop truck-1 city-loc-10 package-2 capacity-2 capacity-3 
29 drive truck-0 city-loc-3 city-loc-4 
30 drive truck-0 city-loc-4 city-loc-2 
31 drive truck-0 city-loc-2 city-loc-4 
32 drive truck-0 city-loc-4 city-loc-1 
33 pick-up truck-0 city-loc-1 package-3 capacity-2 capacity-3 
34 drive truck-0 city-loc-1 city-loc-4 
35 drive truck-0 city-loc-4 city-loc-0 
36 drive truck-0 city-loc-0 city-loc-8 
37 drive truck-0 city-loc-8 city-loc-5 
38 drop truck-0 city-loc-5 package-3 capacity-2 capacity-3 
39 drive truck-0 city-loc-5 city-loc-8 
40 drive truck-0 city-loc-8 city-loc-0 
41 pick-up truck-0 city-loc-0 package-4 capacity-2 capacity-3 
42 drive truck-0 city-loc-0 city-loc-4 
43 drive truck-0 city-loc-4 city-loc-0 
44 drive truck-0 city-loc-0 city-loc-8 
45 drive truck-0 city-loc-8 city-loc-5 
46 drop truck-0 city-loc-5 package-4 capacity-2 capacity-3 
47 drive truck-1 city-loc-10 city-loc-9 
48 drive truck-1 city-loc-9 city-loc-0 
49 drive truck-1 city-loc-0 city-loc-4 
50 drive truck-1 city-loc-4 city-loc-3 
51 pick-up truck-1 city-loc-3 package-5 capacity-2 capacity-3 
52 drive truck-1 city-loc-3 city-loc-4 
53 drive truck-1 city-loc-4 city-loc-0 
54 drive truck-1 city-loc-0 city-loc-8 
55 drive truck-1 city-loc-8 city-loc-5 
56 drop truck-1 city-loc-5 package-5 capacity-2 capacity-3 
57 drive truck-1 city-loc-5 city-loc-8 
58 drive truck-1 city-loc-8 city-loc-0 
59 drive truck-1 city-loc-0 city-loc-9 
60 drive truck-1 city-loc-9 city-loc-2 
61 pick-up truck-1 city-loc-2 package-6 capacity-2 capacity-3 
62 drive truck-1 city-loc-2 city-loc-4 
63 drive truck-1 city-loc-4 city-loc-2 
64 drive truck-1 city-loc-2 city-loc-10 
65 drive truck-1 city-loc-10 city-loc-11 
66 drop truck-1 city-loc-11 package-6 capacity-2 capacity-3 
67 drive truck-1 city-loc-11 city-loc-10 
68 drive truck-1 city-loc-10 city-loc-9 
69 drive truck-1 city-loc-9 city-loc-2 
70 drive truck-1 city-loc-2 city-loc-4 
71 pick-up truck-1 city-loc-4 package-7 capacity-2 capacity-3 
72 noop truck-1 city-loc-4 
73 drive truck-1 city-loc-4 city-loc-0 
74 drive truck-1 city-loc-0 city-loc-8 
75 drive truck-1 city-loc-8 city-loc-10 
76 drop truck-1 city-loc-10 package-7 capacity-2 capacity-3 
77 drive truck-0 city-loc-5 city-loc-8 
78 drive truck-0 city-loc-8 city-loc-10 
79 drive truck-0 city-loc-10 city-loc-9 
80 drive truck-0 city-loc-9 city-loc-2 
81 pick-up truck-0 city-loc-2 package-8 capacity-2 capacity-3 
82 drive truck-0 city-loc-2 city-loc-4 
83 drive truck-0 city-loc-4 city-loc-7 
84 drop truck-0 city-loc-7 package-8 capacity-2 capacity-3 
85 drive truck-0 city-loc-7 city-loc-4 
86 drive truck-0 city-loc-4 city-loc-2 
87 drive truck-0 city-loc-2 city-loc-9 
88 drive truck-0 city-loc-9 city-loc-10 
89 pick-up truck-0 city-loc-10 package-9 capacity-2 capacity-3 
90 drive truck-0 city-loc-10 city-loc-11 
91 drive truck-0 city-loc-11 city-loc-10 
92 drive truck-0 city-loc-10 city-loc-8 
93 drop truck-0 city-loc-8 package-9 capacity-2 capacity-3 
94 drive truck-0 city-loc-8 city-loc-0 
95 drive truck-0 city-loc-0 city-loc-4 
96 drive truck-0 city-loc-4 city-loc-1 
97 pick-up truck-0 city-loc-1 package-10 capacity-2 capacity-3 
98 drive truck-0 city-loc-1 city-loc-4 
99 drive truck-0 city-loc-4 city-loc-0 
100 drop truck-0 city-loc-0 package-10 capacity-2 capacity-3 
root 119
101 get-to truck-0 city-loc-10  -> m-drive-to 0
102 load truck-1 city-loc-4 package-7  -> m-load 71
103 get-to truck-1 city-loc-0  -> m-drive-to-via 194 48
104 get-to truck-0 city-loc-3  -> m-drive-to-via 139 18
105 get-to truck-0 city-loc-4  -> m-drive-to 34
106 get-to truck-0 city-loc-11  -> m-drive-to-via 127 8
107 get-to truck-0 city-loc-10  -> m-drive-to 5
108 get-to truck-1 city-loc-9  -> m-drive-to-via 187 59
109 load truck-0 city-loc-1 package-3  -> m-load 33
110 get-to truck-0 city-loc-10  -> m-drive-to 10
111 load truck-0 city-loc-10 package-1  -> m-load 14
112 get-to truck-0 city-loc-0  -> m-drive-to-via 105 35
113 get-to truck-1 city-loc-11  -> m-drive-to-via 175 23
114 get-to truck-0 city-loc-8  -> m-drive-to-via 112 36
115 load truck-1 city-loc-2 package-6  -> m-load 61
116 get-to truck-0 city-loc-0  -> m-drive-to-via 170 2
117 get-to truck-0 city-loc-9  -> m-drive-to-via 107 6
118 get-to truck-1 city-loc-10  -> m-drive-to-via 132 75
119 __artificialTopCompilation__top_1  -> __top_1 138 185 180 152 193 137 186 163 211 210 197
120 get-to truck-0 city-loc-0  -> m-drive-to-via 199 99
121 get-to truck-0 city-loc-9  -> m-drive-to-via 192 12
122 get-to truck-0 city-loc-5  -> m-drive-to-via 183 45
123 get-to truck-0 city-loc-4  -> m-drive-to 29
124 get-to truck-0 city-loc-2  -> m-drive-to-via 123 30
125 get-to truck-1 city-loc-4  -> m-drive-to 52
126 get-to truck-0 city-loc-1  -> m-drive-to-via 143 96
127 get-to truck-0 city-loc-10  -> m-drive-to-via 117 7
128 get-to truck-1 city-loc-9  -> m-drive-to-via 135 68
129 get-to truck-0 city-loc-2  -> m-drive-to-via 207 80
130 get-to truck-0 city-loc-9  -> m-drive-to-via 164 87
131 get-to truck-1 city-loc-3  -> m-drive-to-via 191 50
132 get-to truck-1 city-loc-8  -> m-drive-to-via 150 74
133 get-to truck-0 city-loc-4  -> m-drive-to 82
134 get-to truck-1 city-loc-10  -> m-drive-to 25
135 get-to truck-1 city-loc-10  -> m-drive-to 67
136 get-to truck-1 city-loc-4  -> m-drive-to 62
137 deliver package-5 city-loc-5  -> m-deliver 131 208 181 146
138 deliver package-0 city-loc-11  -> m-deliver 154 162 106 147
139 get-to truck-0 city-loc-4  -> m-drive-to-via 165 17
140 get-to truck-1 city-loc-2  -> m-drive-to-via 136 63
141 unload truck-0 city-loc-5 package-3  -> m-unload 38
142 get-to truck-1 city-loc-4  -> m-drive-to-via 174 70
143 get-to truck-0 city-loc-4  -> m-drive-to-via 172 95
144 unload truck-0 city-loc-7 package-8  -> m-unload 84
145 get-to truck-0 city-loc-4  -> m-drive-to 42
146 unload truck-1 city-loc-5 package-5  -> m-unload 56
147 unload truck-0 city-loc-11 package-0  -> m-unload 9
148 get-to truck-1 city-loc-10  -> m-drive-to-via 177 27
149 get-to truck-1 city-loc-8  -> m-drive-to-via 209 54
150 get-to truck-1 city-loc-0  -> m-drive-to-via 203 73
151 unload truck-1 city-loc-10 package-7  -> m-unload 76
152 deliver package-3 city-loc-5  -> m-deliver 166 109 167 141
153 unload truck-0 city-loc-8 package-9  -> m-unload 93
154 get-to truck-0 city-loc-8  -> m-drive-to-via 116 3
155 load truck-0 city-loc-1 package-10  -> m-load 97
156 get-to truck-0 city-loc-9  -> m-drive-to 15
157 get-to truck-1 city-loc-11  -> m-drive-to-via 182 65
158 get-to truck-0 city-loc-0  -> m-drive-to-via 145 43
159 load truck-0 city-loc-0 package-4  -> m-load 41
160 unload truck-0 city-loc-0 package-10  -> m-unload 100
161 load truck-1 city-loc-11 package-2  -> m-load 24
162 load truck-0 city-loc-8 package-0  -> m-load 4
163 deliver package-7 city-loc-10  -> m-deliver 142 102 118 151
164 get-to truck-0 city-loc-2  -> m-drive-to-via 201 86
165 get-to truck-0 city-loc-0  -> m-drive-to-via 156 16
166 get-to truck-0 city-loc-1  -> m-drive-to-via 176 32
167 get-to truck-0 city-loc-5  -> m-drive-to-via 114 37
168 get-to truck-0 city-loc-0  -> m-drive-to-via 188 40
169 load truck-0 city-loc-2 package-8  -> m-load 81
170 get-to truck-0 city-loc-9  -> m-drive-to-via 101 1
171 unload truck-1 city-loc-11 package-6  -> m-unload 66
172 get-to truck-0 city-loc-0  -> m-drive-to 94
173 unload truck-0 city-loc-5 package-4  -> m-unload 46
174 get-to truck-1 city-loc-2  -> m-drive-to-via 128 69
175 get-to truck-1 city-loc-10  -> m-drive-to-via 212 22
176 get-to truck-0 city-loc-4  -> m-drive-to-via 124 31
177 get-to truck-1 city-loc-11  -> m-drive-to-via 134 26
178 get-to truck-0 city-loc-11  -> m-drive-to 90
179 get-to truck-1 city-loc-2  -> m-drive-to-via 108 60
180 deliver package-2 city-loc-10  -> m-deliver 113 161 148 206
181 get-to truck-1 city-loc-5  -> m-drive-to-via 149 55
182 get-to truck-1 city-loc-10  -> m-drive-to-via 140 64
183 get-to truck-0 city-loc-8  -> m-drive-to-via 158 44
184 get-to truck-0 city-loc-8  -> m-drive-to 77
185 deliver package-1 city-loc-3  -> m-deliver 213 111 104 195
186 deliver package-6 city-loc-11  -> m-deliver 179 115 157 171
187 get-to truck-1 city-loc-0  -> m-drive-to-via 200 58
188 get-to truck-0 city-loc-8  -> m-drive-to 39
189 get-to truck-0 city-loc-10  -> m-drive-to-via 178 91
190 get-to truck-0 city-loc-10  -> m-drive-to-via 184 78
191 get-to truck-1 city-loc-4  -> m-drive-to-via 103 49
192 get-to truck-0 city-loc-2  -> m-drive-to-via 110 11
193 deliver package-4 city-loc-5  -> m-deliver 168 159 122 173
194 get-to truck-1 city-loc-9  -> m-drive-to 47
195 unload truck-0 city-loc-3 package-1  -> m-unload 19
196 get-to truck-0 city-loc-10  -> m-drive-to-via 130 88
197 deliver package-10 city-loc-0  -> m-deliver 126 155 120 160
198 get-to truck-0 city-loc-7  -> m-drive-to-via 133 83
199 get-to truck-0 city-loc-4  -> m-drive-to 98
200 get-to truck-1 city-loc-8  -> m-drive-to 57
201 get-to truck-0 city-loc-4  -> m-drive-to 85
202 load truck-0 city-loc-10 package-9  -> m-load 89
203 get-to truck-1 city-loc-4  -> m-i-am-there 72
204 get-to truck-1 city-loc-4  -> m-drive-to 20
205 get-to truck-0 city-loc-8  -> m-drive-to-via 189 92
206 unload truck-1 city-loc-10 package-2  -> m-unload 28
207 get-to truck-0 city-loc-9  -> m-drive-to-via 190 79
208 load truck-1 city-loc-3 package-5  -> m-load 51
209 get-to truck-1 city-loc-0  -> m-drive-to-via 125 53
210 deliver package-9 city-loc-8  -> m-deliver 196 202 205 153
211 deliver package-8 city-loc-7  -> m-deliver 129 169 198 144
212 get-to truck-1 city-loc-2  -> m-drive-to-via 204 21
213 get-to truck-0 city-loc-10  -> m-drive-to-via 121 13

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 7.454 MEMPEAK_KBS 555522.048
