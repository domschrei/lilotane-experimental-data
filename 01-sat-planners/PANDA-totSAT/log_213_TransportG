PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile21.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile21.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile21.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 23
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 23
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 23
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 23
Grounded planning graph ... done in 219ms.
	Number of Grounded Actions 255
	Number of Grounded Literals 103
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 23
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 23
Grounding ... done.
	number of abstract tasks = 114
	number of tasks = 369
	number of decomposition methods = 378
	number of predicates = 103
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 114
	number of tasks = 369
	number of decomposition methods = 378
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 76ms.
	Number of Grounded Actions 255
	Number of Grounded Literals 78
	number of abstract tasks = 114
	number of tasks = 369
	number of decomposition methods = 378
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 114
	number of tasks = 369
	number of decomposition methods = 378
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 114
	number of tasks = 369
	number of decomposition methods = 378
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 115
	number of tasks = 370
	number of decomposition methods = 379
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 9
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 115
	number of tasks = 370
	number of decomposition methods = 379
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 9
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 24ms.
	Number of Grounded Actions 255
	Number of Grounded Literals 78
	number of abstract tasks = 115
	number of tasks = 370
	number of decomposition methods = 379
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 9
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 115
	number of tasks = 370
	number of decomposition methods = 379
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 9
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 115
	number of tasks = 370
	number of decomposition methods = 379
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 9
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 115
	number of tasks = 370
	number of decomposition methods = 379
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 9
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 169
	number of tasks = 424
	number of decomposition methods = 433
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 9
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 169
	number of tasks = 424
	number of decomposition methods = 433
	number of predicates = 78
	number of sorts = 0
	number of tasks in largest method = 9
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 255
	number of constants = 0
Tasks 255 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773274ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854773198
done
initial PDT has 36 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 36 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 9009
Size 9006 at 0/255
Size 6641
Size 6640 at 0/255
Size 2951
Size 2946 at 0/255
Size 535
Size 522 at 0/255
Size 192
Size 192 at 0/255
Size 185
Size 185 at 0/255
Size 183
Size 183 at 0/255
Size 183
Invariant time: 0.185
Number of invariants: 183
Invariant Clauses 6771
NUMBER OF CLAUSES 17482
NUMBER OF STATE CLAUSES 13665
NUMBER OF DECOMPOSITION CLAUSES 3817
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 78.17% 21.830000000000002% 0.0% 
NUMBER OF PATHS 36
Starting cryptominisat
Setting starttime of solver to 1603884700392
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 54 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 54 leafs
SHOP LEAFS 0
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854772177
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 10065
NUMBER OF CLAUSES 40234
NUMBER OF STATE CLAUSES 21615
NUMBER OF DECOMPOSITION CLAUSES 18619
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 53.72% 46.28% 0.0% 
NUMBER OF PATHS 54
Starting cryptominisat
Setting starttime of solver to 1603884701052
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 85 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854771512
done
PDT has 85 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 15738
NUMBER OF CLAUSES 89794
NUMBER OF STATE CLAUSES 35466
NUMBER OF DECOMPOSITION CLAUSES 54328
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 39.5% 60.5% 0.0% 
NUMBER OF PATHS 85
Starting cryptominisat
Setting starttime of solver to 1603884701876
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 116 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854770599
done
PDT has 116 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 21411
NUMBER OF CLAUSES 171937
NUMBER OF STATE CLAUSES 50880
NUMBER OF DECOMPOSITION CLAUSES 121057
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.59% 70.41% 0.0% 
NUMBER OF PATHS 116
Starting cryptominisat
Setting starttime of solver to 1603884703062
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854769518
done
initial PDT has 147 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 147 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 27084
NUMBER OF CLAUSES 282730
NUMBER OF STATE CLAUSES 67305
NUMBER OF DECOMPOSITION CLAUSES 215425
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 23.81% 76.19% 0.0% 
NUMBER OF PATHS 147
Starting cryptominisat
Setting starttime of solver to 1603884704324
Command exited with non-zero status 10
0.15 0.00

Time command gave the following runtime for the solver: 150
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^4_4;0;0;0,191 191 m-drive-to-via
4;0;0;0 179 pathaction!4_4;0;0;0,1
Consider method^6_3;2;0;0;0;0,392 392 m-drive-to
3;2;0;0;0;0 68 pathaction!6_3;2;0;0;0;0,3
Consider method^3_1;2;0,268 268 m-drive-to
1;2;0 156 pathaction!3_1;2;0,17
Consider method^1_4,76 76 m-deliver
4 95 pathaction!1_4,362
Consider method^5_0;0;0;0;0,10 10 m-drive-to-via
0;0;0;0;0 15 pathaction!5_0;0;0;0;0,0
Consider method^1_6,70 70 m-deliver
6 62 pathaction!1_6,363
Consider method^2_3;2,78 78 m-drive-to-via
3;2 35 pathaction!2_3;2,13
Consider method^2_8;0,288 288 m-drive-to-via
8;0 55 pathaction!2_8;0,23
Consider method^2_5;2,197 197 m-drive-to-via
5;2 142 pathaction!2_5;2,16
Consider method^2_6;3,376 376 m-unload
6;3 102 pathaction!2_6;3,36
Consider method^2_5;3,301 301 m-unload
5;3 130 pathaction!2_5;3,37
Consider method^3_2;2;0,331 331 m-drive-to-via
2;2;0 93 pathaction!3_2;2;0,11
Consider method^5_3;0;0;0;0,307 307 m-drive-to-via
3;0;0;0;0 199 pathaction!5_3;0;0;0;0,4
Consider method^5_1;0;0;0;0,281 281 m-drive-to-via
1;0;0;0;0 82 pathaction!5_1;0;0;0;0,5
Consider method^6_2;2;0;0;0;0,403 403 m-drive-to
2;2;0;0;0;0 153 pathaction!6_2;2;0;0;0;0,18
Consider method^4_8;2;0;0,417 417 m-drive-to-via
8;2;0;0 65 pathaction!4_8;2;0;0,7
Consider method^2_5;1,340 340 m-load
5;1 195 pathaction!2_5;1,344
Consider method^2_8;3,20 20 m-unload
8;3 94 pathaction!2_8;3,46
Consider method^2_2;2,156 156 m-drive-to-via
2;2 189 pathaction!2_2;2,8
Consider method^3_5;2;0,338 338 m-drive-to
5;2;0 38 pathaction!3_5;2;0,3
Consider method^6_4;2;0;0;0;0,269 269 m-drive-to
4;2;0;0;0;0 86 pathaction!6_4;2;0;0;0;0,14
Consider method^2_7;2,197 197 m-drive-to-via
7;2 212 pathaction!2_7;2,16
Consider method^3_0;2;0,68 68 m-drive-to-via
0;2;0 40 pathaction!3_0;2;0,20
Consider method^2_4;1,178 178 m-load
4;1 147 pathaction!2_4;1,310
Consider method^4_7;0;0;0,381 381 m-i-am-there
7;0;0;0 194 pathaction!4_7;0;0;0,22
Consider method^1_3,85 85 m-deliver
3 168 pathaction!1_3,360
Consider method^5_7;2;0;0;0,317 317 m-drive-to-via
7;2;0;0;0 138 pathaction!5_7;2;0;0;0,4
Consider method^2_2;0,220 220 m-drive-to-via
2;0 170 pathaction!2_2;0,23
Consider method^2_8;1,319 319 m-load
8;1 8 pathaction!2_8;1,356
Consider method^4_3;2;0;0,126 126 m-drive-to-via
3;2;0;0 176 pathaction!4_3;2;0;0,4
Consider method^6_1;0;0;0;0;0,176 176 m-drive-to
1;0;0;0;0;0 16 pathaction!6_1;0;0;0;0;0,7
Consider method^2_1;3,188 188 m-unload
1;3 141 pathaction!2_1;3,26
Consider method^1_0,180 180 m-deliver
0 200 pathaction!1_0,365
Consider method^2_2;1,131 131 m-load
2;1 73 pathaction!2_2;1,337
Consider method^4_7;2;0;0,22 22 m-drive-to-via
7;2;0;0 154 pathaction!4_7;2;0;0,22
Consider method^2_7;1,400 400 m-load
7;1 197 pathaction!2_7;1,317
Consider method^2_8;2,417 417 m-drive-to-via
8;2 162 pathaction!2_8;2,7
Consider method^2_6;0,72 72 m-drive-to-via
6;0 206 pathaction!2_6;0,3
Consider method^5_0;2;0;0;0,426 426 m-drive-to-via
0;2;0;0;0 87 pathaction!5_0;2;0;0;0,21
Consider method^5_8;2;0;0;0,306 306 m-drive-to-via
8;2;0;0;0 171 pathaction!5_8;2;0;0;0,5
Consider method^3_7;2;0,72 72 m-drive-to-via
7;2;0 114 pathaction!3_7;2;0,3
Consider method^6_3;0;0;0;0;0,23 23 m-drive-to
3;0;0;0;0;0 120 pathaction!6_3;0;0;0;0;0,14
Consider method^3_2;0;0,9 9 m-drive-to-via
2;0;0 106 pathaction!3_2;0;0,11
Consider method^1_5,166 166 m-deliver
5 98 pathaction!1_5,367
Consider method^4_6;2;0;0,383 383 m-drive-to
6;2;0;0 204 pathaction!4_6;2;0;0,22
Consider method^4_0;2;0;0,263 263 m-drive-to-via
0;2;0;0 25 pathaction!4_0;2;0;0,10
Consider method^3_0;0;0,418 418 m-drive-to-via
0;0;0 161 pathaction!3_0;0;0,19
Consider method^1_8,385 385 m-deliver
8 27 pathaction!1_8,364
Consider method^1_1,386 386 m-deliver
1 99 pathaction!1_1,368
Consider method^3_3;0;0,72 72 m-drive-to-via
3;0;0 6 pathaction!3_3;0;0,3
Consider method^3_6;2;0,126 126 m-drive-to-via
6;2;0 29 pathaction!3_6;2;0,4
Consider method^2_1;1,45 45 m-load
1;1 43 pathaction!2_1;1,354
Consider method^2_1;2,44 44 m-drive-to-via
1;2 84 pathaction!2_1;2,23
Consider method^4_4;2;0;0,78 78 m-drive-to-via
4;2;0;0 76 pathaction!4_4;2;0;0,13
Consider method^2_6;1,389 389 m-load
6;1 109 pathaction!2_6;1,327
Consider method^5_3;2;0;0;0,279 279 m-drive-to-via
3;2;0;0;0 136 pathaction!5_3;2;0;0;0,22
Consider method^6_8;2;0;0;0;0,396 396 m-drive-to
8;2;0;0;0;0 7 pathaction!6_8;2;0;0;0;0,17
Consider method^1_2,335 335 m-deliver
2 77 pathaction!1_2,366
Consider method^2_3;0,197 197 m-drive-to-via
3;0 149 pathaction!2_3;0,16
Consider method^6_7;2;0;0;0;0,242 242 m-i-am-there
7;2;0;0;0;0 71 pathaction!6_7;2;0;0;0;0,2
Consider method^2_7;3,274 274 m-unload
7;3 144 pathaction!2_7;3,43
Consider method^5_2;0;0;0;0,0 0 m-drive-to
2;0;0;0;0 117 pathaction!5_2;0;0;0;0,11
Consider method^2_0;1,214 214 m-load
0;1 63 pathaction!2_0;1,350
Consider method^4_8;0;0;0,337 337 m-drive-to-via
8;0;0;0 70 pathaction!4_8;0;0;0,17
Consider method^4_3;0;0;0,22 22 m-drive-to-via
3;0;0;0 126 pathaction!4_3;0;0;0,22
Consider method^4_5;0;0;0,95 95 m-drive-to
5;0;0;0 181 pathaction!4_5;0;0;0,2
Consider method^5_2;2;0;0;0,86 86 m-drive-to-via
2;2;0;0;0 44 pathaction!5_2;2;0;0;0,17
Consider method^2_6;2,22 22 m-drive-to-via
6;2 207 pathaction!2_6;2,22
Consider method^6_0;0;0;0;0;0,207 207 m-drive-to
0;0;0;0;0;0 81 pathaction!6_0;0;0;0;0;0,20
Consider method^3_8;2;0,281 281 m-drive-to-via
8;2;0 89 pathaction!3_8;2;0,5
Consider method^2_1;0,179 179 m-drive-to-via
1;0 146 pathaction!2_1;0,5
Consider method^5_6;0;0;0;0,424 424 m-drive-to-via
6;0;0;0;0 56 pathaction!5_6;0;0;0;0,3
Consider method^2_7;0,113 113 m-drive-to-via
7;0 66 pathaction!2_7;0,2
Consider method^3_7;0;0,135 135 m-drive-to-via
7;0;0 105 pathaction!3_7;0;0,14
Consider method^6_6;0;0;0;0;0,392 392 m-drive-to
6;0;0;0;0;0 34 pathaction!6_6;0;0;0;0;0,3
Consider method^3_4;0;0,152 152 m-drive-to-via
4;0;0 14 pathaction!3_4;0;0,13
Consider method^2_2;3,61 61 m-unload
2;3 166 pathaction!2_2;3,40
Consider method^2_3;1,111 111 m-load
3;1 193 pathaction!2_3;1,306
Consider method^4_6;0;0;0,424 424 m-drive-to-via
6;0;0;0 4 pathaction!4_6;0;0;0,3
Consider method^4_1;0;0;0,417 417 m-drive-to-via
1;0;0;0 80 pathaction!4_1;0;0;0,7
Consider method^3_4;2;0,191 191 m-drive-to-via
4;2;0 210 pathaction!3_4;2;0,1
Consider method^2_0;3,222 222 m-unload
0;3 24 pathaction!2_0;3,41
Consider method^2_0;0,173 173 m-drive-to-via
0;0 192 pathaction!2_0;0,6
Consider method^4_0;0;0;0,40 40 m-drive-to-via
0;0;0;0 158 pathaction!4_0;0;0;0,21
Consider method^5_4;0;0;0;0,152 152 m-drive-to-via
4;0;0;0;0 152 pathaction!5_4;0;0;0;0,13
Consider method^2_4;0,151 151 m-drive-to-via
4;0 0 pathaction!2_4;0,2
Consider method^3_3;2;0,171 171 m-drive-to-via
3;2;0 91 pathaction!3_3;2;0,2
Consider method^2_4;3,431 431 m-unload
4;3 148 pathaction!2_4;3,34
Consider method^2_4;2,87 87 m-drive-to-via
4;2 211 pathaction!2_4;2,1
Consider method^3_6;0;0,279 279 m-drive-to-via
6;0;0 58 pathaction!3_6;0;0,22
Consider method^6_0;2;0;0;0;0,380 380 m-drive-to
0;2;0;0;0;0 191 pathaction!6_0;2;0;0;0;0,19
Consider method^3_5;0;0,317 317 m-drive-to-via
5;0;0 123 pathaction!3_5;0;0,4
Consider method^2_0;2,272 272 m-drive-to-via
0;2 59 pathaction!2_0;2,15
Consider method^5_8;0;0;0;0,220 220 m-drive-to-via
8;0;0;0;0 3 pathaction!5_8;0;0;0;0,23
Consider method^3_8;0;0,50 50 m-drive-to-via
8;0;0 165 pathaction!3_8;0;0,18
Consider method^2_3;3,84 84 m-unload
3;3 79 pathaction!2_3;3,47
Consider method^4_2;0;0;0,156 156 m-drive-to-via
2;0;0;0 74 pathaction!4_2;0;0;0,8
Consider method^6_4;0;0;0;0;0,154 154 m-drive-to
4;0;0;0;0;0 85 pathaction!6_4;0;0;0;0;0,1
Consider method^1_7,344 344 m-deliver
7 19 pathaction!1_7,361
Consider method^5_4;2;0;0;0,113 113 m-drive-to-via
4;2;0;0;0 108 pathaction!5_4;2;0;0;0,2
Consider method^3_1;0;0,281 281 m-drive-to-via
1;0;0 132 pathaction!3_1;0;0,5
Consider method^2_5;0,22 22 m-drive-to-via
5;0 11 pathaction!2_5;0,22
Consider method^0_,432 432 __top_1
 157 pathaction!0_,369
Consider method^4_2;2;0;0,44 44 m-drive-to-via
2;2;0;0 182 pathaction!4_2;2;0;0,23
Consider method^6_8;0;0;0;0;0,60 60 m-drive-to
8;0;0;0;0;0 22 pathaction!6_8;0;0;0;0;0,11


CHECKING primitive solution of length 95 ...
true 26 drive[truck-2,city-loc-2,city-loc-7;]
true 110 drive[truck-2,city-loc-7,city-loc-6;]
true 48 drive[truck-2,city-loc-6,city-loc-3;]
true 2 drive[truck-2,city-loc-3,city-loc-4;]
true 196 drive[truck-2,city-loc-4,city-loc-0;]
true 208 pick-up[truck-2,city-loc-0,package-0,capacity-1,capacity-2;]
true 101 drive[truck-2,city-loc-0,city-loc-4;]
true 169 drive[truck-2,city-loc-4,city-loc-3;]
true 45 drive[truck-2,city-loc-3,city-loc-5;]
true 164 drive[truck-2,city-loc-5,city-loc-7;]
true 78 drive[truck-2,city-loc-7,city-loc-2;]
true 53 drop[truck-2,city-loc-2,package-0,capacity-1,capacity-2;]
true 49 drive[truck-1,city-loc-4,city-loc-0;]
true 127 drive[truck-1,city-loc-0,city-loc-4;]
true 112 drive[truck-1,city-loc-4,city-loc-0;]
true 30 drive[truck-1,city-loc-0,city-loc-4;]
true 183 drive[truck-1,city-loc-4,city-loc-4;]
true 209 pick-up[truck-1,city-loc-4,package-1,capacity-1,capacity-2;]
true 61 drive[truck-1,city-loc-4,city-loc-3;]
true 119 drive[truck-1,city-loc-3,city-loc-6;]
true 50 drop[truck-1,city-loc-6,package-1,capacity-1,capacity-2;]
true 107 drive[truck-1,city-loc-6,city-loc-7;]
true 121 drive[truck-1,city-loc-7,city-loc-2;]
true 67 drive[truck-1,city-loc-2,city-loc-7;]
true 54 drive[truck-1,city-loc-7,city-loc-6;]
true 12 pick-up[truck-1,city-loc-6,package-2,capacity-1,capacity-2;]
true 41 drive[truck-1,city-loc-6,city-loc-5;]
true 203 drive[truck-1,city-loc-5,city-loc-3;]
true 163 drive[truck-1,city-loc-3,city-loc-6;]
true 42 drive[truck-1,city-loc-6,city-loc-7;]
true 116 drive[truck-1,city-loc-7,city-loc-2;]
true 104 drop[truck-1,city-loc-2,package-2,capacity-1,capacity-2;]
true 97 drive[truck-0,city-loc-5,city-loc-6;]
true 173 drive[truck-0,city-loc-6,city-loc-5;]
true 160 drive[truck-0,city-loc-5,city-loc-3;]
true 129 drive[truck-0,city-loc-3,city-loc-4;]
true 128 drive[truck-0,city-loc-4,city-loc-0;]
true 88 pick-up[truck-0,city-loc-0,package-3,capacity-1,capacity-2;]
true 28 drive[truck-0,city-loc-0,city-loc-4;]
true 23 drive[truck-0,city-loc-4,city-loc-3;]
true 131 drive[truck-0,city-loc-3,city-loc-5;]
true 178 drive[truck-0,city-loc-5,city-loc-7;]
true 133 drive[truck-0,city-loc-7,city-loc-1;]
true 52 drop[truck-0,city-loc-1,package-3,capacity-1,capacity-2;]
true 32 drive[truck-0,city-loc-1,city-loc-2;]
true 122 drive[truck-0,city-loc-2,city-loc-1;]
true 37 drive[truck-0,city-loc-1,city-loc-2;]
true 17 drive[truck-0,city-loc-2,city-loc-1;]
true 31 drive[truck-0,city-loc-1,city-loc-7;]
true 184 pick-up[truck-0,city-loc-7,package-4,capacity-1,capacity-2;]
true 159 drive[truck-0,city-loc-7,city-loc-6;]
true 64 drive[truck-0,city-loc-6,city-loc-7;]
true 150 drive[truck-0,city-loc-7,city-loc-1;]
true 180 drive[truck-0,city-loc-1,city-loc-2;]
true 5 drive[truck-0,city-loc-2,city-loc-2;]
true 190 drop[truck-0,city-loc-2,package-4,capacity-1,capacity-2;]
true 10 drive[truck-0,city-loc-2,city-loc-7;]
true 167 drive[truck-0,city-loc-7,city-loc-5;]
true 125 drive[truck-0,city-loc-5,city-loc-3;]
true 172 pick-up[truck-0,city-loc-3,package-5,capacity-1,capacity-2;]
true 118 drive[truck-0,city-loc-3,city-loc-4;]
true 134 drive[truck-0,city-loc-4,city-loc-0;]
true 103 drop[truck-0,city-loc-0,package-5,capacity-1,capacity-2;]
true 186 drive[truck-0,city-loc-0,city-loc-4;]
true 205 drive[truck-0,city-loc-4,city-loc-4;]
true 177 drive[truck-0,city-loc-4,city-loc-4;]
true 135 drive[truck-0,city-loc-4,city-loc-3;]
true 145 drive[truck-0,city-loc-3,city-loc-4;]
true 36 pick-up[truck-0,city-loc-4,package-6,capacity-1,capacity-2;]
true 57 drive[truck-0,city-loc-4,city-loc-3;]
true 111 drive[truck-0,city-loc-3,city-loc-5;]
true 175 drive[truck-0,city-loc-5,city-loc-3;]
true 115 drop[truck-0,city-loc-3,package-6,capacity-1,capacity-2;]
true 143 noop[truck-0,city-loc-3;]
true 174 drive[truck-0,city-loc-3,city-loc-6;]
true 46 drive[truck-0,city-loc-6,city-loc-7;]
true 39 pick-up[truck-0,city-loc-7,package-7,capacity-1,capacity-2;]
true 155 noop[truck-0,city-loc-7;]
true 20 drive[truck-0,city-loc-7,city-loc-5;]
true 33 drive[truck-0,city-loc-5,city-loc-3;]
true 60 drive[truck-0,city-loc-3,city-loc-4;]
true 9 drive[truck-0,city-loc-4,city-loc-0;]
true 151 drop[truck-0,city-loc-0,package-7,capacity-1,capacity-2;]
true 202 drive[truck-1,city-loc-2,city-loc-7;]
true 1 drive[truck-1,city-loc-7,city-loc-6;]
true 187 drive[truck-1,city-loc-6,city-loc-3;]
true 13 drive[truck-1,city-loc-3,city-loc-5;]
true 69 drive[truck-1,city-loc-5,city-loc-6;]
true 188 pick-up[truck-1,city-loc-6,package-8,capacity-1,capacity-2;]
true 137 drive[truck-1,city-loc-6,city-loc-3;]
true 124 drive[truck-1,city-loc-3,city-loc-4;]
true 90 drive[truck-1,city-loc-4,city-loc-0;]
true 96 drive[truck-1,city-loc-0,city-loc-4;]
true 75 drive[truck-1,city-loc-4,city-loc-0;]
true 92 drop[truck-1,city-loc-0,package-8,capacity-1,capacity-2;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 223009696
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 78
number of actions                    = 424
number of abstract actions           = 169
number of primitive actions          = 255
number of methods                    = 433
number of primitive shop actions     = 0
number of primitive non-shop actions = 255
size of largest method               = 9
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 48508
number of clauses               = 282730
average size of clauses         = 3.0769851094683975
number of assert                = 16
number of horn                  = 257872
K offset                        = 0
K chosen value                  = 7
state formula                   = 67305
method children clauses         = 0
number of paths                 = 147
maximum plan length             = 147
number of decomposition clauses = 215425
number of ordering clauses      = 0
number of state clauses         = 67305
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 8161
============ parsing ============
total                         = 914
file parser                   = 529
sort expansion                = 151
closed world assumption       = 122
inherit preconditions         = 0
shop methods                  = 1
eliminate identical variables = 59
strip domain of hybridity     = 2
flatten formula               = 50
============ preprocessing ============
total                                      = 1466
compile negative preconditions             = 24
compile unit methods                       = 0
split parameter                            = 51
expand choiceless abstract tasks           = 1
compile methods with identical tasks       = 35
removing unnecessary predicates            = 165
lifted reachabiltiy analysis               = 46
grounded planning graph analysis           = 509
grounded task decomposition graph analysis = 458
grounding                                  = 156
create artificial top task                 = 13
============ search preparation ============
compute state invariants = 230
============ sat ============
total                                        = 4136
generate formula                             = 3037
generate path decomposition tree             = 437
normalise path decomposition tree            = 198
sog optimisation                             = 138
translate path decomposition tree to clauses = 1134
generate state formula                       = 2959
generate state invariant formula             = 108
transform to DIMACS                          = 414
SAT solver                                   = 240
SAT solver for K=0003                        = 0
SAT solver for K=0004                        = 10
SAT solver for K=0005                        = 30
SAT solver for K=0006                        = 50
SAT solver for K=0007                        = 150

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="255";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="169";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="223009696";"40 sat:20:state formula"="67305";"40 sat:01:number of variables"="48508";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="147";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="433";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="424";"30 problem:08:number of primitive non-shop actions"="255";"30 problem:02:number of predicates"="78";"40 sat:03:number of horn"="257872";"40 sat:15:K chosen value"="7";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="9";"40 sat:03:average size of clauses"="3.0769851094683975";"40 sat:02:number of clauses"="282730";"40 sat:50:number of state clauses"="67305";"40 sat:03:number of assert"="16";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="147";"40 sat:50:number of decomposition clauses"="215425";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="529";"01 parsing:08:flatten formula"="50";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="4136";"40 sat:16:generate state formula"="2959";"40 sat:20:transform to DIMACS"="414";"40 sat:11:generate path decomposition tree"="437";"02 preprocessing:07:compile methods with identical tasks"="35";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="165";"01 parsing:03:closed world assumption"="122";"02 preprocessing:11:lifted reachabiltiy analysis"="46";"01 parsing:02:sort expansion"="151";"40 sat:12:normalise path decomposition tree"="198";"40 sat:40:SAT solver"="240";"01 parsing:00:total"="914";"40 sat:10:generate formula"="3037";"40 sat:41:SAT solver for K=0005"="30";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="24";"00 total:00:total"="8161";"40 sat:13:sog optimisation"="138";"02 preprocessing:12:grounded planning graph analysis"="509";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="458";"40 sat:41:SAT solver for K=0006"="50";"02 preprocessing:04:split parameter"="51";"01 parsing:05:shop methods"="1";"10 search preparation:02:compute state invariants"="230";"01 parsing:06:eliminate identical variables"="59";"40 sat:15:translate path decomposition tree to clauses"="1134";"02 preprocessing:05:expand choiceless abstract tasks"="1";"40 sat:41:SAT solver for K=0003"="0";"40 sat:17:generate state invariant formula"="108";"02 preprocessing:00:total"="1466";"02 preprocessing:99:create artificial top task"="13";"02 preprocessing:84:grounding"="156";"40 sat:41:SAT solver for K=0007"="150"
#!verify drive[truck-2,city-loc-2,city-loc-7];drive[truck-2,city-loc-7,city-loc-6];drive[truck-2,city-loc-6,city-loc-3];drive[truck-2,city-loc-3,city-loc-4];drive[truck-2,city-loc-4,city-loc-0];pick-up[truck-2,city-loc-0,package-0,capacity-1,capacity-2];drive[truck-2,city-loc-0,city-loc-4];drive[truck-2,city-loc-4,city-loc-3];drive[truck-2,city-loc-3,city-loc-5];drive[truck-2,city-loc-5,city-loc-7];drive[truck-2,city-loc-7,city-loc-2];drop[truck-2,city-loc-2,package-0,capacity-1,capacity-2];drive[truck-1,city-loc-4,city-loc-0];drive[truck-1,city-loc-0,city-loc-4];drive[truck-1,city-loc-4,city-loc-0];drive[truck-1,city-loc-0,city-loc-4];drive[truck-1,city-loc-4,city-loc-4];pick-up[truck-1,city-loc-4,package-1,capacity-1,capacity-2];drive[truck-1,city-loc-4,city-loc-3];drive[truck-1,city-loc-3,city-loc-6];drop[truck-1,city-loc-6,package-1,capacity-1,capacity-2];drive[truck-1,city-loc-6,city-loc-7];drive[truck-1,city-loc-7,city-loc-2];drive[truck-1,city-loc-2,city-loc-7];drive[truck-1,city-loc-7,city-loc-6];pick-up[truck-1,city-loc-6,package-2,capacity-1,capacity-2];drive[truck-1,city-loc-6,city-loc-5];drive[truck-1,city-loc-5,city-loc-3];drive[truck-1,city-loc-3,city-loc-6];drive[truck-1,city-loc-6,city-loc-7];drive[truck-1,city-loc-7,city-loc-2];drop[truck-1,city-loc-2,package-2,capacity-1,capacity-2];drive[truck-0,city-loc-5,city-loc-6];drive[truck-0,city-loc-6,city-loc-5];drive[truck-0,city-loc-5,city-loc-3];drive[truck-0,city-loc-3,city-loc-4];drive[truck-0,city-loc-4,city-loc-0];pick-up[truck-0,city-loc-0,package-3,capacity-1,capacity-2];drive[truck-0,city-loc-0,city-loc-4];drive[truck-0,city-loc-4,city-loc-3];drive[truck-0,city-loc-3,city-loc-5];drive[truck-0,city-loc-5,city-loc-7];drive[truck-0,city-loc-7,city-loc-1];drop[truck-0,city-loc-1,package-3,capacity-1,capacity-2];drive[truck-0,city-loc-1,city-loc-2];drive[truck-0,city-loc-2,city-loc-1];drive[truck-0,city-loc-1,city-loc-2];drive[truck-0,city-loc-2,city-loc-1];drive[truck-0,city-loc-1,city-loc-7];pick-up[truck-0,city-loc-7,package-4,capacity-1,capacity-2];drive[truck-0,city-loc-7,city-loc-6];drive[truck-0,city-loc-6,city-loc-7];drive[truck-0,city-loc-7,city-loc-1];drive[truck-0,city-loc-1,city-loc-2];drive[truck-0,city-loc-2,city-loc-2];drop[truck-0,city-loc-2,package-4,capacity-1,capacity-2];drive[truck-0,city-loc-2,city-loc-7];drive[truck-0,city-loc-7,city-loc-5];drive[truck-0,city-loc-5,city-loc-3];pick-up[truck-0,city-loc-3,package-5,capacity-1,capacity-2];drive[truck-0,city-loc-3,city-loc-4];drive[truck-0,city-loc-4,city-loc-0];drop[truck-0,city-loc-0,package-5,capacity-1,capacity-2];drive[truck-0,city-loc-0,city-loc-4];drive[truck-0,city-loc-4,city-loc-4];drive[truck-0,city-loc-4,city-loc-4];drive[truck-0,city-loc-4,city-loc-3];drive[truck-0,city-loc-3,city-loc-4];pick-up[truck-0,city-loc-4,package-6,capacity-1,capacity-2];drive[truck-0,city-loc-4,city-loc-3];drive[truck-0,city-loc-3,city-loc-5];drive[truck-0,city-loc-5,city-loc-3];drop[truck-0,city-loc-3,package-6,capacity-1,capacity-2];noop[truck-0,city-loc-3];drive[truck-0,city-loc-3,city-loc-6];drive[truck-0,city-loc-6,city-loc-7];pick-up[truck-0,city-loc-7,package-7,capacity-1,capacity-2];noop[truck-0,city-loc-7];drive[truck-0,city-loc-7,city-loc-5];drive[truck-0,city-loc-5,city-loc-3];drive[truck-0,city-loc-3,city-loc-4];drive[truck-0,city-loc-4,city-loc-0];drop[truck-0,city-loc-0,package-7,capacity-1,capacity-2];drive[truck-1,city-loc-2,city-loc-7];drive[truck-1,city-loc-7,city-loc-6];drive[truck-1,city-loc-6,city-loc-3];drive[truck-1,city-loc-3,city-loc-5];drive[truck-1,city-loc-5,city-loc-6];pick-up[truck-1,city-loc-6,package-8,capacity-1,capacity-2];drive[truck-1,city-loc-6,city-loc-3];drive[truck-1,city-loc-3,city-loc-4];drive[truck-1,city-loc-4,city-loc-0];drive[truck-1,city-loc-0,city-loc-4];drive[truck-1,city-loc-4,city-loc-0];drop[truck-1,city-loc-0,package-8,capacity-1,capacity-2]
==>
0 drive truck-2 city-loc-2 city-loc-7 
1 drive truck-2 city-loc-7 city-loc-6 
2 drive truck-2 city-loc-6 city-loc-3 
3 drive truck-2 city-loc-3 city-loc-4 
4 drive truck-2 city-loc-4 city-loc-0 
5 pick-up truck-2 city-loc-0 package-0 capacity-1 capacity-2 
6 drive truck-2 city-loc-0 city-loc-4 
7 drive truck-2 city-loc-4 city-loc-3 
8 drive truck-2 city-loc-3 city-loc-5 
9 drive truck-2 city-loc-5 city-loc-7 
10 drive truck-2 city-loc-7 city-loc-2 
11 drop truck-2 city-loc-2 package-0 capacity-1 capacity-2 
12 drive truck-1 city-loc-4 city-loc-0 
13 drive truck-1 city-loc-0 city-loc-4 
14 drive truck-1 city-loc-4 city-loc-0 
15 drive truck-1 city-loc-0 city-loc-4 
16 drive truck-1 city-loc-4 city-loc-4 
17 pick-up truck-1 city-loc-4 package-1 capacity-1 capacity-2 
18 drive truck-1 city-loc-4 city-loc-3 
19 drive truck-1 city-loc-3 city-loc-6 
20 drop truck-1 city-loc-6 package-1 capacity-1 capacity-2 
21 drive truck-1 city-loc-6 city-loc-7 
22 drive truck-1 city-loc-7 city-loc-2 
23 drive truck-1 city-loc-2 city-loc-7 
24 drive truck-1 city-loc-7 city-loc-6 
25 pick-up truck-1 city-loc-6 package-2 capacity-1 capacity-2 
26 drive truck-1 city-loc-6 city-loc-5 
27 drive truck-1 city-loc-5 city-loc-3 
28 drive truck-1 city-loc-3 city-loc-6 
29 drive truck-1 city-loc-6 city-loc-7 
30 drive truck-1 city-loc-7 city-loc-2 
31 drop truck-1 city-loc-2 package-2 capacity-1 capacity-2 
32 drive truck-0 city-loc-5 city-loc-6 
33 drive truck-0 city-loc-6 city-loc-5 
34 drive truck-0 city-loc-5 city-loc-3 
35 drive truck-0 city-loc-3 city-loc-4 
36 drive truck-0 city-loc-4 city-loc-0 
37 pick-up truck-0 city-loc-0 package-3 capacity-1 capacity-2 
38 drive truck-0 city-loc-0 city-loc-4 
39 drive truck-0 city-loc-4 city-loc-3 
40 drive truck-0 city-loc-3 city-loc-5 
41 drive truck-0 city-loc-5 city-loc-7 
42 drive truck-0 city-loc-7 city-loc-1 
43 drop truck-0 city-loc-1 package-3 capacity-1 capacity-2 
44 drive truck-0 city-loc-1 city-loc-2 
45 drive truck-0 city-loc-2 city-loc-1 
46 drive truck-0 city-loc-1 city-loc-2 
47 drive truck-0 city-loc-2 city-loc-1 
48 drive truck-0 city-loc-1 city-loc-7 
49 pick-up truck-0 city-loc-7 package-4 capacity-1 capacity-2 
50 drive truck-0 city-loc-7 city-loc-6 
51 drive truck-0 city-loc-6 city-loc-7 
52 drive truck-0 city-loc-7 city-loc-1 
53 drive truck-0 city-loc-1 city-loc-2 
54 drive truck-0 city-loc-2 city-loc-2 
55 drop truck-0 city-loc-2 package-4 capacity-1 capacity-2 
56 drive truck-0 city-loc-2 city-loc-7 
57 drive truck-0 city-loc-7 city-loc-5 
58 drive truck-0 city-loc-5 city-loc-3 
59 pick-up truck-0 city-loc-3 package-5 capacity-1 capacity-2 
60 drive truck-0 city-loc-3 city-loc-4 
61 drive truck-0 city-loc-4 city-loc-0 
62 drop truck-0 city-loc-0 package-5 capacity-1 capacity-2 
63 drive truck-0 city-loc-0 city-loc-4 
64 drive truck-0 city-loc-4 city-loc-4 
65 drive truck-0 city-loc-4 city-loc-4 
66 drive truck-0 city-loc-4 city-loc-3 
67 drive truck-0 city-loc-3 city-loc-4 
68 pick-up truck-0 city-loc-4 package-6 capacity-1 capacity-2 
69 drive truck-0 city-loc-4 city-loc-3 
70 drive truck-0 city-loc-3 city-loc-5 
71 drive truck-0 city-loc-5 city-loc-3 
72 drop truck-0 city-loc-3 package-6 capacity-1 capacity-2 
73 noop truck-0 city-loc-3 
74 drive truck-0 city-loc-3 city-loc-6 
75 drive truck-0 city-loc-6 city-loc-7 
76 pick-up truck-0 city-loc-7 package-7 capacity-1 capacity-2 
77 noop truck-0 city-loc-7 
78 drive truck-0 city-loc-7 city-loc-5 
79 drive truck-0 city-loc-5 city-loc-3 
80 drive truck-0 city-loc-3 city-loc-4 
81 drive truck-0 city-loc-4 city-loc-0 
82 drop truck-0 city-loc-0 package-7 capacity-1 capacity-2 
83 drive truck-1 city-loc-2 city-loc-7 
84 drive truck-1 city-loc-7 city-loc-6 
85 drive truck-1 city-loc-6 city-loc-3 
86 drive truck-1 city-loc-3 city-loc-5 
87 drive truck-1 city-loc-5 city-loc-6 
88 pick-up truck-1 city-loc-6 package-8 capacity-1 capacity-2 
89 drive truck-1 city-loc-6 city-loc-3 
90 drive truck-1 city-loc-3 city-loc-4 
91 drive truck-1 city-loc-4 city-loc-0 
92 drive truck-1 city-loc-0 city-loc-4 
93 drive truck-1 city-loc-4 city-loc-0 
94 drop truck-1 city-loc-0 package-8 capacity-1 capacity-2 
root 146
95 deliver package-6 city-loc-3  -> m-deliver 180 172 119 113
96 unload truck-0 city-loc-0 package-7  -> m-unload 82
97 get-to truck-0 city-loc-1  -> m-drive-to-via 156 47
98 get-to truck-0 city-loc-3  -> m-drive-to-via 164 66
99 get-to truck-0 city-loc-4  -> m-drive-to-via 149 35
100 load truck-0 city-loc-0 package-3  -> m-load 37
101 get-to truck-0 city-loc-3  -> m-drive-to 69
102 deliver package-1 city-loc-6  -> m-deliver 194 108 174 152
103 load truck-0 city-loc-3 package-5  -> m-load 59
104 get-to truck-2 city-loc-4  -> m-drive-to 6
105 get-to truck-0 city-loc-4  -> m-drive-to 60
106 get-to truck-2 city-loc-5  -> m-drive-to-via 111 8
107 get-to truck-2 city-loc-0  -> m-drive-to-via 175 4
108 load truck-1 city-loc-4 package-1  -> m-load 17
109 get-to truck-1 city-loc-7  -> m-drive-to 21
110 get-to truck-0 city-loc-5  -> m-drive-to-via 131 33
111 get-to truck-2 city-loc-3  -> m-drive-to-via 104 7
112 get-to truck-0 city-loc-0  -> m-drive-to-via 99 36
113 unload truck-0 city-loc-3 package-6  -> m-unload 72
114 load truck-1 city-loc-6 package-2  -> m-load 25
115 get-to truck-0 city-loc-3  -> m-drive-to-via 144 58
116 get-to truck-1 city-loc-4  -> m-drive-to-via 165 90
117 unload truck-0 city-loc-0 package-5  -> m-unload 62
118 deliver package-5 city-loc-0  -> m-deliver 115 103 170 117
119 get-to truck-0 city-loc-3  -> m-drive-to-via 142 71
120 get-to truck-1 city-loc-6  -> m-drive-to-via 166 87
121 deliver package-8 city-loc-0  -> m-deliver 120 159 196 187
122 get-to truck-0 city-loc-7  -> m-drive-to-via 125 41
123 get-to truck-0 city-loc-4  -> m-drive-to 63
124 get-to truck-0 city-loc-7  -> m-drive-to-via 193 51
125 get-to truck-0 city-loc-5  -> m-drive-to-via 141 40
126 unload truck-0 city-loc-1 package-3  -> m-unload 43
127 deliver package-3 city-loc-1  -> m-deliver 112 100 150 126
128 get-to truck-1 city-loc-7  -> m-drive-to 83
129 get-to truck-0 city-loc-6  -> m-drive-to-via 160 74
130 get-to truck-2 city-loc-7  -> m-drive-to-via 106 9
131 get-to truck-0 city-loc-6  -> m-drive-to 32
132 get-to truck-1 city-loc-0  -> m-drive-to 12
133 get-to truck-0 city-loc-4  -> m-drive-to-via 123 64
134 load truck-0 city-loc-7 package-7  -> m-load 76
135 get-to truck-1 city-loc-2  -> m-drive-to-via 109 22
136 get-to truck-1 city-loc-0  -> m-drive-to-via 188 14
137 get-to truck-0 city-loc-7  -> m-drive-to-via 129 75
138 get-to truck-0 city-loc-0  -> m-drive-to-via 148 81
139 get-to truck-1 city-loc-6  -> m-drive-to-via 140 24
140 get-to truck-1 city-loc-7  -> m-drive-to-via 135 23
141 get-to truck-0 city-loc-3  -> m-drive-to-via 184 39
142 get-to truck-0 city-loc-5  -> m-drive-to-via 101 70
143 get-to truck-0 city-loc-5  -> m-drive-to-via 163 78
144 get-to truck-0 city-loc-5  -> m-drive-to-via 153 57
145 get-to truck-1 city-loc-0  -> m-drive-to-via 116 91
146 __artificialTopCompilation__top_1  -> __top_1 176 102 195 127 178 118 95 197 121
147 get-to truck-2 city-loc-6  -> m-drive-to-via 173 1
148 get-to truck-0 city-loc-4  -> m-drive-to-via 169 80
149 get-to truck-0 city-loc-3  -> m-drive-to-via 110 34
150 get-to truck-0 city-loc-1  -> m-drive-to-via 122 42
151 get-to truck-0 city-loc-1  -> m-drive-to-via 186 45
152 unload truck-1 city-loc-6 package-1  -> m-unload 20
153 get-to truck-0 city-loc-7  -> m-drive-to 56
154 get-to truck-1 city-loc-3  -> m-drive-to-via 190 85
155 get-to truck-1 city-loc-4  -> m-drive-to-via 136 15
156 get-to truck-0 city-loc-2  -> m-drive-to-via 151 46
157 load truck-0 city-loc-7 package-4  -> m-load 49
158 get-to truck-0 city-loc-2  -> m-drive-to-via 179 54
159 load truck-1 city-loc-6 package-8  -> m-load 88
160 get-to truck-0 city-loc-3  -> m-i-am-there 73
161 unload truck-2 city-loc-2 package-0  -> m-unload 11
162 get-to truck-1 city-loc-3  -> m-drive-to 18
163 get-to truck-0 city-loc-7  -> m-i-am-there 77
164 get-to truck-0 city-loc-4  -> m-drive-to-via 133 65
165 get-to truck-1 city-loc-3  -> m-drive-to 89
166 get-to truck-1 city-loc-5  -> m-drive-to-via 154 86
167 unload truck-1 city-loc-2 package-2  -> m-unload 31
168 get-to truck-0 city-loc-1  -> m-drive-to-via 124 52
169 get-to truck-0 city-loc-3  -> m-drive-to-via 143 79
170 get-to truck-0 city-loc-0  -> m-drive-to-via 105 61
171 get-to truck-2 city-loc-3  -> m-drive-to-via 147 2
172 load truck-0 city-loc-4 package-6  -> m-load 68
173 get-to truck-2 city-loc-7  -> m-drive-to 0
174 get-to truck-1 city-loc-6  -> m-drive-to-via 162 19
175 get-to truck-2 city-loc-4  -> m-drive-to-via 171 3
176 deliver package-0 city-loc-2  -> m-deliver 107 198 183 161
177 get-to truck-1 city-loc-2  -> m-drive-to-via 181 30
178 deliver package-4 city-loc-2  -> m-deliver 192 157 158 185
179 get-to truck-0 city-loc-2  -> m-drive-to-via 168 53
180 get-to truck-0 city-loc-4  -> m-drive-to-via 98 67
181 get-to truck-1 city-loc-7  -> m-drive-to-via 191 29
182 get-to truck-1 city-loc-3  -> m-drive-to-via 189 27
183 get-to truck-2 city-loc-2  -> m-drive-to-via 130 10
184 get-to truck-0 city-loc-4  -> m-drive-to 38
185 unload truck-0 city-loc-2 package-4  -> m-unload 55
186 get-to truck-0 city-loc-2  -> m-drive-to 44
187 unload truck-1 city-loc-0 package-8  -> m-unload 94
188 get-to truck-1 city-loc-4  -> m-drive-to-via 132 13
189 get-to truck-1 city-loc-5  -> m-drive-to 26
190 get-to truck-1 city-loc-6  -> m-drive-to-via 128 84
191 get-to truck-1 city-loc-6  -> m-drive-to-via 182 28
192 get-to truck-0 city-loc-7  -> m-drive-to-via 97 48
193 get-to truck-0 city-loc-6  -> m-drive-to 50
194 get-to truck-1 city-loc-4  -> m-drive-to-via 155 16
195 deliver package-2 city-loc-2  -> m-deliver 139 114 177 167
196 get-to truck-1 city-loc-0  -> m-drive-to-via 199 93
197 deliver package-7 city-loc-0  -> m-deliver 137 134 138 96
198 load truck-2 city-loc-0 package-0  -> m-load 5
199 get-to truck-1 city-loc-4  -> m-drive-to-via 145 92

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 9.269 MEMPEAK_KBS 523849.728
