PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/blocksworld/domain.hddl instances/blocksworld/p03.hddl"


Planner Configuration
=====================
Domain: instances/blocksworld/domain.hddl
Problem: instances/blocksworld/p03.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p03.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 5
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 9
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 9
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 9
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 9
Grounded planning graph ... done in 159ms.
	Number of Grounded Actions 77
	Number of Grounded Literals 56
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 9
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 9
Grounding ... done.
	number of abstract tasks = 24
	number of tasks = 101
	number of decomposition methods = 57
	number of predicates = 57
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 24
	number of tasks = 101
	number of decomposition methods = 57
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 57ms.
	Number of Grounded Actions 77
	Number of Grounded Literals 55
	number of abstract tasks = 24
	number of tasks = 101
	number of decomposition methods = 57
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 24
	number of tasks = 101
	number of decomposition methods = 57
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 23
	number of tasks = 100
	number of decomposition methods = 56
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 23
	number of tasks = 100
	number of decomposition methods = 56
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 23
	number of tasks = 100
	number of decomposition methods = 56
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 5ms.
	Number of Grounded Actions 77
	Number of Grounded Literals 55
	number of abstract tasks = 23
	number of tasks = 100
	number of decomposition methods = 56
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 23
	number of tasks = 100
	number of decomposition methods = 56
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 23
	number of tasks = 100
	number of decomposition methods = 56
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 23
	number of tasks = 100
	number of decomposition methods = 56
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 23
	number of tasks = 100
	number of decomposition methods = 56
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 23
	number of tasks = 100
	number of decomposition methods = 56
	number of predicates = 55
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 46
	number of epsilon methods = 0
	number of primitive tasks = 77
	number of constants = 0
Tasks 77 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773961ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 16 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 10 leafs
SHOP LEAFS 10
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 102 will abort at 9223372036854773912
done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 4455
Size 4455 at 0/77
Size 3084
Size 3084 at 0/77
Size 2248
Size 2248 at 0/77
Size 1498
Size 1498 at 0/77
Size 591
Size 591 at 0/77
Size 478
Size 478 at 0/77
Size 472
Size 472 at 0/77
Size 472
Invariant time: 0.091
Number of invariants: 472
Invariant Clauses 5192
NUMBER OF CLAUSES 6420
NUMBER OF STATE CLAUSES 6356
NUMBER OF DECOMPOSITION CLAUSES 64
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.0% 1.0% 0.0% 
NUMBER OF PATHS 10
Starting cryptominisat
Setting starttime of solver to 1603870869842
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 68 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 60 leafs
SHOP LEAFS 38
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Still waiting ... running for 100 will abort at 9223372036854773372
Invariant Clauses 28792
NUMBER OF CLAUSES 36604
NUMBER OF STATE CLAUSES 35848
NUMBER OF DECOMPOSITION CLAUSES 756
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.93% 2.07% 0.0% 
NUMBER OF PATHS 60
Starting cryptominisat
Setting starttime of solver to 1603870870246
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 102 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 95 leafs
SHOP LEAFS 51
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854772908
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 45312
NUMBER OF CLAUSES 57964
NUMBER OF STATE CLAUSES 56596
NUMBER OF DECOMPOSITION CLAUSES 1368
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.64% 2.36% 0.0% 
NUMBER OF PATHS 95
Starting cryptominisat
Setting starttime of solver to 1603870870716
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 139 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 134 leafs
SHOP LEAFS 66
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Still waiting ... running for 100 will abort at 9223372036854772441
Invariant Clauses 63720
NUMBER OF CLAUSES 82143
NUMBER OF STATE CLAUSES 79819
NUMBER OF DECOMPOSITION CLAUSES 2324
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.17% 2.83% 0.0% 
NUMBER OF PATHS 134
Starting cryptominisat
Setting starttime of solver to 1603870871229
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 174 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 169 leafs
SHOP LEAFS 81
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Still waiting ... running for 100 will abort at 9223372036854772000
Invariant Clauses 80240
NUMBER OF CLAUSES 104349
NUMBER OF STATE CLAUSES 100798
NUMBER OF DECOMPOSITION CLAUSES 3551
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.60000000000001% 3.4% 0.0% 
NUMBER OF PATHS 169
Starting cryptominisat
Setting starttime of solver to 1603870871617
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 211 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 207 leafs
SHOP LEAFS 97
Assignment implications
Generating clauses representing decomposition ... done
Still waiting ... running for 100 will abort at 9223372036854771555
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 98176
NUMBER OF CLAUSES 128694
NUMBER OF STATE CLAUSES 123633
NUMBER OF DECOMPOSITION CLAUSES 5061
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.07000000000001% 3.93% 0.0% 
NUMBER OF PATHS 207
Starting cryptominisat
Setting starttime of solver to 1603870872054
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 249 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 246 leafs
SHOP LEAFS 114
Assignment implications
Generating clauses representing decomposition ... done
Still waiting ... running for 101 will abort at 9223372036854771120
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 116584
NUMBER OF CLAUSES 153976
NUMBER OF STATE CLAUSES 147142
NUMBER OF DECOMPOSITION CLAUSES 6834
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.56% 4.44% 0.0% 
NUMBER OF PATHS 246
Starting cryptominisat
Setting starttime of solver to 1603870872567
Command exited with non-zero status 10
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_1;4,42 42 m4_do_move
1;4 35 pathaction!2_1;4,35
Consider method^1_4,19 19 m1_do_put_on
4 84 pathaction!1_4,14
Consider method^2_3;2,45 45 m6_do_clear
3;2 25 pathaction!2_3;2,25
Consider method^3_0;2;1,3 3 m6_do_clear
0;2;1 100 pathaction!3_0;2;1,26
Consider method^4_0;1;1;1,12 12 m7_do_clear
0;1;1;1 54 pathaction!4_0;1;1;1,27
Consider method^2_3;4,47 47 m4_do_move
3;4 21 pathaction!2_3;4,31
Consider method^7_0;1;1;1;2;2;1,10 10 <m7_do_clear;do_clear[b7];m6_do_clear;1;0,-1,-2,2,3>
0;1;1;1;2;2;1 73 pathaction!7_0;1;1;1;2;2;1,25
Consider method^2_2;3,29 29 m2_do_on_table
2;3 58 pathaction!2_2;3,10
Consider method^5_0;1;1;1;2,17 17 m7_do_clear
0;1;1;1;2 44 pathaction!5_0;1;1;1;2,28
Consider method^1_3,36 36 m1_do_put_on
3 27 pathaction!1_3,13
Consider method^2_4;2,51 51 m6_do_clear
4;2 9 pathaction!2_4;2,30
Consider method^2_0;1,28 28 m7_do_clear
0;1 101 pathaction!2_0;1,29
Consider method^2_1;1,3 3 m6_do_clear
1;1 31 pathaction!2_1;1,26
Consider method^2_4;3,50 50 m3_do_on_table
4;3 68 pathaction!2_4;3,12
Consider method^2_1;3,0 0 m3_do_on_table
1;3 22 pathaction!2_1;3,11
Consider method^2_2;2,3 3 m6_do_clear
2;2 76 pathaction!2_2;2,26
Consider method^2_3;1,51 51 m6_do_clear
3;1 98 pathaction!2_3;1,30
Consider method^0_,55 55 __top_1
 81 pathaction!0_,99
Consider method^2_2;4,32 32 m4_do_move
2;4 67 pathaction!2_2;4,34
Consider method^1_0,33 33 <m1_do_put_on;do_on_table[b4];m3_do_on_table;3;0,1,2,-1,-2,4>
0 33 pathaction!1_0,15
Consider method^2_4;1,44 44 m6_do_clear
4;1 92 pathaction!2_4;1,24
Consider method^2_1;2,18 18 m6_do_clear
1;2 63 pathaction!2_1;2,29
Consider method^2_0;5,34 34 m4_do_move
0;5 29 pathaction!2_0;5,33
Consider method^2_2;1,45 45 m6_do_clear
2;1 12 pathaction!2_2;1,25
Consider method^2_3;3,7 7 m3_do_on_table
3;3 62 pathaction!2_3;3,9
Consider method^3_0;1;1,23 23 m7_do_clear
0;1;1 66 pathaction!3_0;1;1,30
Consider method^6_0;1;1;1;2;2,37 37 m7_do_clear
0;1;1;1;2;2 28 pathaction!6_0;1;1;1;2;2,24
Consider method^1_2,8 8 m1_do_put_on
2 74 pathaction!1_2,16
Consider method^2_4;4,5 5 m4_do_move
4;4 78 pathaction!2_4;4,32
Consider method^1_1,11 11 m1_do_put_on
1 14 pathaction!1_1,17
Consider method^2_0;2,15 15 m7_do_clear
0;2 38 pathaction!2_0;2,23


CHECKING primitive solution of length 72 ...
true 37 __method_precondition_m1_do_put_on_1_precondition[;]
true 11 __method_precondition_m7_do_clear_7_precondition[b3,b1;]
true 71 __method_precondition_m7_do_clear_7_precondition[b1,b8;]
true 2 __method_precondition_m7_do_clear_7_precondition[b8,b9;]
true 51 __method_precondition_m7_do_clear_7_precondition[b9,b5;]
true 10 __method_precondition_m7_do_clear_7_precondition[b5,b2;]
true 70 __method_precondition_m7_do_clear_7_precondition[b2,b7;]
true 20 __method_precondition_m6_do_clear_6_precondition[b7;]
true 86 nop[;]
true 15 unstack[b7,b2;]
true 56 put-down[b7;]
true 26 unstack[b2,b5;]
true 79 put-down[b2;]
true 24 unstack[b5,b9;]
true 40 put-down[b5;]
true 64 unstack[b9,b8;]
true 99 put-down[b9;]
true 87 unstack[b8,b1;]
true 23 put-down[b8;]
true 39 unstack[b1,b3;]
true 4 put-down[b1;]
true 82 __method_precondition_m7_do_clear_7_precondition[b4,b6;]
true 91 __method_precondition_m6_do_clear_6_precondition[b6;]
true 30 nop[;]
true 80 unstack[b6,b4;]
true 5 put-down[b6;]
true 36 __method_precondition_m3_do_on_table_3_precondition[b4;]
true 32 nop[;]
true 1 __method_precondition_m4_do_move_4_precondition[b3,b4;]
true 18 pick-up[b3;]
true 17 stack[b3,b4;]
true 65 __method_precondition_m1_do_put_on_1_precondition[;]
true 60 __method_precondition_m6_do_clear_6_precondition[b6;]
true 55 nop[;]
true 34 __method_precondition_m6_do_clear_6_precondition[b3;]
true 19 nop[;]
true 85 __method_precondition_m3_do_on_table_3_precondition[b3;]
true 61 nop[;]
true 72 __method_precondition_m4_do_move_4_precondition[b6,b3;]
true 83 pick-up[b6;]
true 89 stack[b6,b3;]
true 96 __method_precondition_m1_do_put_on_1_precondition[;]
true 47 __method_precondition_m6_do_clear_6_precondition[b2;]
true 46 nop[;]
true 53 __method_precondition_m6_do_clear_6_precondition[b6;]
true 90 nop[;]
true 6 __method_precondition_m2_do_on_table_2_precondition[b6;]
true 3 unstack[b6,b3;]
true 50 put-down[b6;]
true 69 __method_precondition_m4_do_move_4_precondition[b2,b6;]
true 16 pick-up[b2;]
true 102 stack[b2,b6;]
true 94 __method_precondition_m1_do_put_on_1_precondition[;]
true 77 __method_precondition_m6_do_clear_6_precondition[b1;]
true 59 nop[;]
true 48 __method_precondition_m6_do_clear_6_precondition[b2;]
true 88 nop[;]
true 45 __method_precondition_m3_do_on_table_3_precondition[b2;]
true 57 nop[;]
true 13 __method_precondition_m4_do_move_4_precondition[b1,b2;]
true 95 pick-up[b1;]
true 7 stack[b1,b2;]
true 52 __method_precondition_m1_do_put_on_1_precondition[;]
true 8 __method_precondition_m6_do_clear_6_precondition[b5;]
true 0 nop[;]
true 75 __method_precondition_m6_do_clear_6_precondition[b1;]
true 97 nop[;]
true 41 __method_precondition_m3_do_on_table_3_precondition[b1;]
true 42 nop[;]
true 43 __method_precondition_m4_do_move_4_precondition[b5,b1;]
true 49 pick-up[b5;]
true 93 stack[b5,b1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 168699152
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 55
number of actions                    = 100
number of abstract actions           = 23
number of primitive actions          = 77
number of methods                    = 56
number of primitive shop actions     = 46
number of primitive non-shop actions = 31
size of largest method               = 6
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 29009
number of clauses               = 153976
average size of clauses         = 2.027257494674495
number of assert                = 30
number of horn                  = 141442
K offset                        = 0
K chosen value                  = 8
state formula                   = 147142
method children clauses         = 0
number of paths                 = 246
maximum plan length             = 246
number of decomposition clauses = 6834
number of ordering clauses      = 0
number of state clauses         = 147142
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 5438
============ parsing ============
total                         = 815
file parser                   = 508
sort expansion                = 143
closed world assumption       = 55
inherit preconditions         = 0
shop methods                  = 7
eliminate identical variables = 42
strip domain of hybridity     = 1
flatten formula               = 58
============ preprocessing ============
total                                      = 964
compile negative preconditions             = 50
compile unit methods                       = 0
split parameter                            = 12
expand choiceless abstract tasks           = 58
compile methods with identical tasks       = 2
removing unnecessary predicates            = 47
lifted reachabiltiy analysis               = 71
grounded planning graph analysis           = 339
grounded task decomposition graph analysis = 258
grounding                                  = 94
create artificial top task                 = 1
============ search preparation ============
compute state invariants = 143
============ sat ============
total                                        = 2391
generate formula                             = 1707
generate path decomposition tree             = 250
normalise path decomposition tree            = 83
sog optimisation                             = 71
translate path decomposition tree to clauses = 297
generate state formula                       = 1611
generate state invariant formula             = 321
transform to DIMACS                          = 254
SAT solver                                   = 120
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 10
SAT solver for K=0005                        = 10
SAT solver for K=0006                        = 20
SAT solver for K=0007                        = 30
SAT solver for K=0008                        = 40

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="77";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="23";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="168699152";"40 sat:20:state formula"="147142";"40 sat:01:number of variables"="29009";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="246";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="56";"30 problem:07:number of primitive shop actions"="46";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="100";"30 problem:08:number of primitive non-shop actions"="31";"30 problem:02:number of predicates"="55";"40 sat:03:number of horn"="141442";"40 sat:15:K chosen value"="8";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="6";"40 sat:03:average size of clauses"="2.027257494674495";"40 sat:02:number of clauses"="153976";"40 sat:50:number of state clauses"="147142";"40 sat:03:number of assert"="30";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="246";"40 sat:50:number of decomposition clauses"="6834";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="508";"01 parsing:08:flatten formula"="58";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="2391";"40 sat:16:generate state formula"="1611";"40 sat:20:transform to DIMACS"="254";"40 sat:11:generate path decomposition tree"="250";"02 preprocessing:07:compile methods with identical tasks"="2";"01 parsing:07:strip domain of hybridity"="1";"40 sat:41:SAT solver for K=0008"="40";"02 preprocessing:08:removing unnecessary predicates"="47";"01 parsing:03:closed world assumption"="55";"02 preprocessing:11:lifted reachabiltiy analysis"="71";"01 parsing:02:sort expansion"="143";"40 sat:12:normalise path decomposition tree"="83";"40 sat:40:SAT solver"="120";"01 parsing:00:total"="815";"40 sat:10:generate formula"="1707";"40 sat:41:SAT solver for K=0005"="10";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="50";"00 total:00:total"="5438";"40 sat:13:sog optimisation"="71";"02 preprocessing:12:grounded planning graph analysis"="339";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="258";"40 sat:41:SAT solver for K=0006"="20";"02 preprocessing:04:split parameter"="12";"01 parsing:05:shop methods"="7";"10 search preparation:02:compute state invariants"="143";"01 parsing:06:eliminate identical variables"="42";"40 sat:15:translate path decomposition tree to clauses"="297";"02 preprocessing:05:expand choiceless abstract tasks"="58";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="321";"02 preprocessing:00:total"="964";"02 preprocessing:99:create artificial top task"="1";"02 preprocessing:84:grounding"="94";"40 sat:41:SAT solver for K=0007"="30"
#!verify __method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m7_do_clear_7_precondition[b3,b1];__method_precondition_m7_do_clear_7_precondition[b1,b8];__method_precondition_m7_do_clear_7_precondition[b8,b9];__method_precondition_m7_do_clear_7_precondition[b9,b5];__method_precondition_m7_do_clear_7_precondition[b5,b2];__method_precondition_m7_do_clear_7_precondition[b2,b7];__method_precondition_m6_do_clear_6_precondition[b7];nop[];unstack[b7,b2];put-down[b7];unstack[b2,b5];put-down[b2];unstack[b5,b9];put-down[b5];unstack[b9,b8];put-down[b9];unstack[b8,b1];put-down[b8];unstack[b1,b3];put-down[b1];__method_precondition_m7_do_clear_7_precondition[b4,b6];__method_precondition_m6_do_clear_6_precondition[b6];nop[];unstack[b6,b4];put-down[b6];__method_precondition_m3_do_on_table_3_precondition[b4];nop[];__method_precondition_m4_do_move_4_precondition[b3,b4];pick-up[b3];stack[b3,b4];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b6];nop[];__method_precondition_m6_do_clear_6_precondition[b3];nop[];__method_precondition_m3_do_on_table_3_precondition[b3];nop[];__method_precondition_m4_do_move_4_precondition[b6,b3];pick-up[b6];stack[b6,b3];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b2];nop[];__method_precondition_m6_do_clear_6_precondition[b6];nop[];__method_precondition_m2_do_on_table_2_precondition[b6];unstack[b6,b3];put-down[b6];__method_precondition_m4_do_move_4_precondition[b2,b6];pick-up[b2];stack[b2,b6];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b1];nop[];__method_precondition_m6_do_clear_6_precondition[b2];nop[];__method_precondition_m3_do_on_table_3_precondition[b2];nop[];__method_precondition_m4_do_move_4_precondition[b1,b2];pick-up[b1];stack[b1,b2];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b5];nop[];__method_precondition_m6_do_clear_6_precondition[b1];nop[];__method_precondition_m3_do_on_table_3_precondition[b1];nop[];__method_precondition_m4_do_move_4_precondition[b5,b1];pick-up[b5];stack[b5,b1]
==>
0 __method_precondition_m1_do_put_on_1_precondition  
1 __method_precondition_m7_do_clear_7_precondition b3 b1 
2 __method_precondition_m7_do_clear_7_precondition b1 b8 
3 __method_precondition_m7_do_clear_7_precondition b8 b9 
4 __method_precondition_m7_do_clear_7_precondition b9 b5 
5 __method_precondition_m7_do_clear_7_precondition b5 b2 
6 __method_precondition_m7_do_clear_7_precondition b2 b7 
7 __method_precondition_m6_do_clear_6_precondition b7 
8 nop  
9 unstack b7 b2 
10 put-down b7 
11 unstack b2 b5 
12 put-down b2 
13 unstack b5 b9 
14 put-down b5 
15 unstack b9 b8 
16 put-down b9 
17 unstack b8 b1 
18 put-down b8 
19 unstack b1 b3 
20 put-down b1 
21 __method_precondition_m7_do_clear_7_precondition b4 b6 
22 __method_precondition_m6_do_clear_6_precondition b6 
23 nop  
24 unstack b6 b4 
25 put-down b6 
26 __method_precondition_m3_do_on_table_3_precondition b4 
27 nop  
28 __method_precondition_m4_do_move_4_precondition b3 b4 
29 pick-up b3 
30 stack b3 b4 
31 __method_precondition_m1_do_put_on_1_precondition  
32 __method_precondition_m6_do_clear_6_precondition b6 
33 nop  
34 __method_precondition_m6_do_clear_6_precondition b3 
35 nop  
36 __method_precondition_m3_do_on_table_3_precondition b3 
37 nop  
38 __method_precondition_m4_do_move_4_precondition b6 b3 
39 pick-up b6 
40 stack b6 b3 
41 __method_precondition_m1_do_put_on_1_precondition  
42 __method_precondition_m6_do_clear_6_precondition b2 
43 nop  
44 __method_precondition_m6_do_clear_6_precondition b6 
45 nop  
46 __method_precondition_m2_do_on_table_2_precondition b6 
47 unstack b6 b3 
48 put-down b6 
49 __method_precondition_m4_do_move_4_precondition b2 b6 
50 pick-up b2 
51 stack b2 b6 
52 __method_precondition_m1_do_put_on_1_precondition  
53 __method_precondition_m6_do_clear_6_precondition b1 
54 nop  
55 __method_precondition_m6_do_clear_6_precondition b2 
56 nop  
57 __method_precondition_m3_do_on_table_3_precondition b2 
58 nop  
59 __method_precondition_m4_do_move_4_precondition b1 b2 
60 pick-up b1 
61 stack b1 b2 
62 __method_precondition_m1_do_put_on_1_precondition  
63 __method_precondition_m6_do_clear_6_precondition b5 
64 nop  
65 __method_precondition_m6_do_clear_6_precondition b1 
66 nop  
67 __method_precondition_m3_do_on_table_3_precondition b1 
68 nop  
69 __method_precondition_m4_do_move_4_precondition b5 b1 
70 pick-up b5 
71 stack b5 b1 
root 89
72 do_clear b1  -> m7_do_clear 2 88 17 18
73 do_move b6 b3  -> m4_do_move 38 39 40
74 do_clear b5  -> m7_do_clear 5 93 11 12
75 do_clear b3  -> m7_do_clear 1 72 19 20
76 do_clear b1  -> m6_do_clear 65 66
77 do_clear b1  -> m6_do_clear 53 54
78 do_on_table b2  -> m3_do_on_table 57 58
79 do_on_table b3  -> m3_do_on_table 36 37
80 do_put_on b6 b3  -> m1_do_put_on 31 90 92 79 73
81 do_clear b2  -> m6_do_clear 42 43
82 do_clear b6  -> m6_do_clear 22 23
83 do_move b3 b4  -> m4_do_move 28 29 30
84 do_put_on b3 b4  -> <m1_do_put_on;do_on_table[b4];m3_do_on_table;3;0,1,2,-1,-2,4> 0 75 100 26 27 83
85 do_move b2 b6  -> m4_do_move 49 50 51
86 do_on_table b1  -> m3_do_on_table 67 68
87 do_move b5 b1  -> m4_do_move 69 70 71
88 do_clear b8  -> m7_do_clear 3 97 15 16
89 __choicelessATCompilation__top_1  -> __top_1 84 80 96 95 91
90 do_clear b6  -> m6_do_clear 32 33
91 do_put_on b5 b1  -> m1_do_put_on 62 99 76 86 87
92 do_clear b3  -> m6_do_clear 34 35
93 do_clear b2  -> <m7_do_clear;do_clear[b7];m6_do_clear;1;0,-1,-2,2,3> 6 7 8 9 10
94 do_on_table b6  -> m2_do_on_table 46 47 48
95 do_put_on b1 b2  -> m1_do_put_on 52 77 102 78 101
96 do_put_on b2 b6  -> m1_do_put_on 41 81 98 94 85
97 do_clear b9  -> m7_do_clear 4 74 13 14
98 do_clear b6  -> m6_do_clear 44 45
99 do_clear b5  -> m6_do_clear 63 64
100 do_clear b4  -> m7_do_clear 21 82 24 25
101 do_move b1 b2  -> m4_do_move 59 60 61
102 do_clear b2  -> m6_do_clear 55 56

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 6.455 MEMPEAK_KBS 308547.584
