PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/barman/domain.hddl instances/barman/p17.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p17.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p17.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounded planning graph ... done in 492ms.
	Number of Grounded Actions 2013
	Number of Grounded Literals 327
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounding ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 327
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 308ms.
	Number of Grounded Actions 1993
	Number of Grounded Literals 300
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 158ms.
	Number of Grounded Actions 1993
	Number of Grounded Literals 300
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Tasks 1993 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768728ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854768423
done
initial PDT has 237 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 237 leafs
SHOP LEAFS 79
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 134550
Size 134543 at 0/1993
Size 133671 at 500/1993
Size 133647 at 1000/1993
Size 132989 at 1500/1993
Size 109883
Size 109855 at 0/1993
Size 108835 at 500/1993
Size 108825 at 1000/1993
Size 20427 at 1500/1993
Size 19315
Size 19048 at 0/1993
Size 11485 at 500/1993
Size 11481 at 1000/1993
Size 11476 at 1500/1993
Size 10538
Size 9811 at 0/1993
Size 2798 at 500/1993
Size 2798 at 1000/1993
Size 2759 at 1500/1993
Size 2718
Size 2718 at 0/1993
Size 2674 at 500/1993
Size 2674 at 1000/1993
Size 2674 at 1500/1993
Size 2674
Size 2664 at 0/1993
Size 2521 at 500/1993
Size 2521 at 1000/1993
Size 2521 at 1500/1993
Size 2521
Size 2521 at 0/1993
Size 2521 at 500/1993
Size 2521 at 1000/1993
Size 2521 at 1500/1993
Size 2521
Invariant time: 4.1
Number of invariants: 2521
Invariant Clauses 599998
NUMBER OF CLAUSES 990909
NUMBER OF STATE CLAUSES 802832
NUMBER OF DECOMPOSITION CLAUSES 188077
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 81.02% 18.98% 0.0% 
NUMBER OF PATHS 237
Starting cryptominisat
Setting starttime of solver to 1603870794296
Command exited with non-zero status 10
0.49 0.02

Time command gave the following runtime for the solver: 510
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_11;2,568 568 m3_get_second_ingredient
11;2 1 pathaction!2_11;2,422
Consider method^2_3;3,128 128 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 88 pathaction!2_3;3,2327
Consider method^3_3;2;1,2551 2551 _m3_get_second_ingredient_2
3;2;1 198 pathaction!3_3;2;1,2479
Consider method^1_3,930 930 m0_do_cocktail_in_shot1
3 40 pathaction!1_3,2338
Consider method^2_5;1,996 996 m2_get_first_ingredient
5;1 73 pathaction!2_5;1,8
Consider method^3_7;1;2,2235 2235 _m2_get_first_ingredient_3
7;1;2 313 pathaction!3_7;1;2,1253
Consider method^3_9;2;1,2551 2551 _m3_get_second_ingredient_2
9;2;1 246 pathaction!3_9;2;1,2479
Consider method^3_8;1;1,2503 2503 m9_do_fill_shot
8;1;1 174 pathaction!3_8;1;1,2559
Consider method^2_8;3,2579 2579 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 78 pathaction!2_8;3,2321
Consider method^3_8;1;2,802 802 _m2_get_first_ingredient_3
8;1;2 196 pathaction!3_8;1;2,1242
Consider method^2_6;1,1119 1119 m2_get_first_ingredient
6;1 312 pathaction!2_6;1,15
Consider method^3_0;1;3,565 565 _m2_get_first_ingredient_4
0;1;3 295 pathaction!3_0;1;3,1779
Consider method^1_4,1845 1845 m0_do_cocktail_in_shot1
4 94 pathaction!1_4,2337
Consider method^3_7;2;2,2903 2903 _m3_get_second_ingredient_3
7;2;2 222 pathaction!3_7;2;2,2363
Consider method^3_1;1;2,1508 1508 _m2_get_first_ingredient_3
1;1;2 270 pathaction!3_1;1;2,1222
Consider method^3_9;2;2,2501 2501 _m3_get_second_ingredient_3
9;2;2 129 pathaction!3_9;2;2,2375
Consider method^1_5,1607 1607 m0_do_cocktail_in_shot1
5 228 pathaction!1_5,2335
Consider method^3_6;1;3,257 257 _m2_get_first_ingredient_4
6;1;3 166 pathaction!3_6;1;3,1786
Consider method^3_1;3;1,352 352 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2>
1;3;1 322 pathaction!3_1;3;1,455
Consider method^2_2;1,495 495 m2_get_first_ingredient
2;1 13 pathaction!2_2;1,7
Consider method^3_9;1;1,231 231 m9_do_fill_shot
9;1;1 63 pathaction!3_9;1;1,2593
Consider method^2_8;2,1460 1460 m3_get_second_ingredient
8;2 52 pathaction!2_8;2,427
Consider method^3_2;3;1,1773 1773 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 244 pathaction!3_2;3;1,460
Consider method^1_7,1684 1684 m0_do_cocktail_in_shot1
7 39 pathaction!1_7,2330
Consider method^3_5;3;1,1732 1732 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail3,left];m5_do_clean_shot;0;-1,-2>
5;3;1 130 pathaction!3_5;3;1,447
Consider method^3_9;1;2,285 285 _m2_get_first_ingredient_3
9;1;2 265 pathaction!3_9;1;2,1201
Consider method^2_9;2,1751 1751 m3_get_second_ingredient
9;2 82 pathaction!2_9;2,409
Consider method^2_3;2,2676 2676 m3_get_second_ingredient
3;2 216 pathaction!2_3;2,425
Consider method^3_7;3;1,709 709 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 125 pathaction!3_7;3;1,443
Consider method^3_2;1;3,1382 1382 _m2_get_first_ingredient_4
2;1;3 80 pathaction!3_2;1;3,1714
Consider method^3_11;1;2,246 246 _m2_get_first_ingredient_3
11;1;2 36 pathaction!3_11;1;2,1246
Consider method^2_0;3,1062 1062 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 170 pathaction!2_0;3,2329
Consider method^2_7;1,1620 1620 m2_get_first_ingredient
7;1 179 pathaction!2_7;1,9
Consider method^2_2;2,2977 2977 m3_get_second_ingredient
2;2 113 pathaction!2_2;2,415
Consider method^3_8;3;1,2580 2580 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 300 pathaction!3_8;3;1,446
Consider method^3_4;3;1,145 145 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 163 pathaction!3_4;3;1,440
Consider method^3_9;1;3,2308 2308 _m2_get_first_ingredient_4
9;1;3 61 pathaction!3_9;1;3,1748
Consider method^3_6;1;2,3084 3084 _m2_get_first_ingredient_3
6;1;2 14 pathaction!3_6;1;2,1274
Consider method^3_5;2;2,252 252 _m3_get_second_ingredient_3
5;2;2 314 pathaction!3_5;2;2,2427
Consider method^3_3;1;2,627 627 _m2_get_first_ingredient_3
3;1;2 6 pathaction!3_3;1;2,1233
Consider method^3_11;3;1,1005 1005 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2>
11;3;1 181 pathaction!3_11;3;1,453
Consider method^3_0;2;2,1687 1687 _m3_get_second_ingredient_3
0;2;2 336 pathaction!3_0;2;2,2347
Consider method^3_7;1;1,2688 2688 m9_do_fill_shot
7;1;1 146 pathaction!3_7;1;1,2647
Consider method^2_7;3,2886 2886 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 168 pathaction!2_7;3,2319
Consider method^3_5;1;1,2034 2034 m9_do_fill_shot
5;1;1 219 pathaction!3_5;1;1,2613
Consider method^2_2;3,2578 2578 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 197 pathaction!2_2;3,2328
Consider method^3_1;1;3,1183 1183 _m2_get_first_ingredient_4
1;1;3 258 pathaction!3_1;1;3,1742
Consider method^3_4;2;1,2371 2371 _m3_get_second_ingredient_2
4;2;1 264 pathaction!3_4;2;1,2482
Consider method^1_0,1410 1410 m0_do_cocktail_in_shot1
0 288 pathaction!1_0,2340
Consider method^3_5;1;2,125 125 _m2_get_first_ingredient_3
5;1;2 119 pathaction!3_5;1;2,1252
Consider method^3_1;2;1,473 473 _m3_get_second_ingredient_2
1;2;1 206 pathaction!3_1;2;1,2485
Consider method^3_6;2;1,2710 2710 _m3_get_second_ingredient_2
6;2;1 172 pathaction!3_6;2;1,2505
Consider method^2_11;1,3072 3072 m2_get_first_ingredient
11;1 5 pathaction!2_11;1,14
Consider method^2_9;1,2630 2630 m2_get_first_ingredient
9;1 99 pathaction!2_9;1,1
Consider method^2_3;1,1132 1132 m2_get_first_ingredient
3;1 69 pathaction!2_3;1,17
Consider method^2_4;3,1846 1846 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 2 pathaction!2_4;3,2326
Consider method^1_1,1399 1399 m0_do_cocktail_in_shot1
1 241 pathaction!1_1,2336
Consider method^3_6;1;1,3040 3040 m7_do_fill_shot
6;1;1 167 pathaction!3_6;1;1,2631
Consider method^3_4;2;2,2862 2862 _m3_get_second_ingredient_3
4;2;2 309 pathaction!3_4;2;2,2432
Consider method^3_5;2;1,2204 2204 _m3_get_second_ingredient_2
5;2;1 124 pathaction!3_5;2;1,2523
Consider method^3_6;3;1,1421 1421 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2>
6;3;1 301 pathaction!3_6;3;1,452
Consider method^3_3;1;3,2697 2697 _m2_get_first_ingredient_4
3;1;3 230 pathaction!3_3;1;3,1743
Consider method^1_11,249 249 m0_do_cocktail_in_shot1
11 248 pathaction!1_11,2331
Consider method^3_11;1;3,2148 2148 _m2_get_first_ingredient_4
11;1;3 175 pathaction!3_11;1;3,1792
Consider method^2_5;2,2150 2150 m3_get_second_ingredient
5;2 242 pathaction!2_5;2,416
Consider method^2_8;1,2251 2251 m2_get_first_ingredient
8;1 59 pathaction!2_8;1,19
Consider method^2_1;2,207 207 m3_get_second_ingredient
1;2 326 pathaction!2_1;2,418
Consider method^3_1;2;2,2207 2207 _m3_get_second_ingredient_3
1;2;2 186 pathaction!3_1;2;2,2354
Consider method^2_4;2,214 214 m3_get_second_ingredient
4;2 15 pathaction!2_4;2,413
Consider method^3_0;2;1,665 665 _m3_get_second_ingredient_2
0;2;1 109 pathaction!3_0;2;1,2483
Consider method^2_4;1,1584 1584 m2_get_first_ingredient
4;1 132 pathaction!2_4;1,5
Consider method^3_1;1;1,1361 1361 m8_do_fill_shot
1;1;1 274 pathaction!3_1;1;1,2587
Consider method^3_5;1;3,1585 1585 _m2_get_first_ingredient_4
5;1;3 3 pathaction!3_5;1;3,1768
Consider method^2_9;3,374 374 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 203 pathaction!2_9;3,2323
Consider method^3_9;3;1,1857 1857 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail5,right];m5_do_clean_shot;0;-1,-2>
9;3;1 284 pathaction!3_9;3;1,458
Consider method^2_6;2,1477 1477 m3_get_second_ingredient
6;2 256 pathaction!2_6;2,423
Consider method^1_2,2766 2766 m0_do_cocktail_in_shot1
2 212 pathaction!1_2,2339
Consider method^3_0;1;1,2730 2730 m8_do_fill_shot
0;1;1 153 pathaction!3_0;1;1,2624
Consider method^3_3;2;2,2501 2501 _m3_get_second_ingredient_3
3;2;2 277 pathaction!3_3;2;2,2375
Consider method^2_6;3,2536 2536 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 294 pathaction!2_6;3,2322
Consider method^3_2;2;1,1285 1285 _m3_get_second_ingredient_2
2;2;1 24 pathaction!3_2;2;1,2462
Consider method^2_0;1,678 678 m2_get_first_ingredient
0;1 308 pathaction!2_0;1,14
Consider method^1_6,745 745 m0_do_cocktail_in_shot1
6 32 pathaction!1_6,2333
Consider method^3_0;1;2,816 816 _m2_get_first_ingredient_3
0;1;2 120 pathaction!3_0;1;2,1226
Consider method^3_2;2;2,312 312 _m3_get_second_ingredient_3
2;2;2 342 pathaction!3_2;2;2,2412
Consider method^1_10,2635 2635 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
10 138 pathaction!1_10,0
Consider method^2_0;2,119 119 m3_get_second_ingredient
0;2 131 pathaction!2_0;2,422
Consider method^3_2;1;1,2691 2691 m7_do_fill_shot
2;1;1 344 pathaction!3_2;1;1,2559
Consider method^2_10;1,9 9 m9_do_fill_shot
10;1 275 pathaction!2_10;1,2631
Consider method^3_11;1;1,2005 2005 m9_do_fill_shot
11;1;1 54 pathaction!3_11;1;1,2637
Consider method^3_3;1;1,1531 1531 m9_do_fill_shot
3;1;1 209 pathaction!3_3;1;1,2588
Consider method^1_8,613 613 m0_do_cocktail_in_shot1
8 191 pathaction!1_8,2332
Consider method^1_9,837 837 m0_do_cocktail_in_shot1
9 107 pathaction!1_9,2334
Consider method^2_5;3,1114 1114 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot6,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 57 pathaction!2_5;3,2324
Consider method^3_0;3;1,1325 1325 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 91 pathaction!3_0;3;1,451
Consider method^3_4;1;1,1312 1312 m7_do_fill_shot
4;1;1 218 pathaction!3_4;1;1,2591
Consider method^3_7;2;1,617 617 _m3_get_second_ingredient_2
7;2;1 340 pathaction!3_7;2;1,2464
Consider method^3_11;2;1,148 148 _m3_get_second_ingredient_2
11;2;1 34 pathaction!3_11;2;1,2486
Consider method^3_7;1;3,1400 1400 _m2_get_first_ingredient_4
7;1;3 269 pathaction!3_7;1;3,1802
Consider method^3_6;2;2,138 138 _m3_get_second_ingredient_3
6;2;2 286 pathaction!3_6;2;2,2405
Consider method^3_11;2;2,1258 1258 _m3_get_second_ingredient_3
11;2;2 22 pathaction!3_11;2;2,2403
Consider method^3_4;1;2,2984 2984 _m2_get_first_ingredient_3
4;1;2 261 pathaction!3_4;1;2,1194
Consider method^2_11;3,1056 1056 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 339 pathaction!2_11;3,2320
Consider method^2_7;2,679 679 m3_get_second_ingredient
7;2 81 pathaction!2_7;2,417
Consider method^3_8;2;2,1317 1317 _m3_get_second_ingredient_3
8;2;2 55 pathaction!3_8;2;2,2399
Consider method^3_4;1;3,2783 2783 _m2_get_first_ingredient_4
4;1;3 189 pathaction!3_4;1;3,1746
Consider method^3_8;1;3,1382 1382 _m2_get_first_ingredient_4
8;1;3 98 pathaction!3_8;1;3,1714
Consider method^3_3;3;1,396 396 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail5,left];m5_do_clean_shot;0;-1,-2>
3;3;1 140 pathaction!3_3;3;1,450
Consider method^3_2;1;2,802 802 _m2_get_first_ingredient_3
2;1;2 28 pathaction!3_2;1;2,1242
Consider method^2_1;3,1904 1904 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 267 pathaction!2_1;3,2325
Consider method^2_1;1,2394 2394 m2_get_first_ingredient
1;1 214 pathaction!2_1;1,10
Consider method^3_8;2;1,223 223 _m3_get_second_ingredient_2
8;2;1 283 pathaction!3_8;2;1,2529
Consider method^0_,3086 3086 __top_1
 92 pathaction!0_,2686


CHECKING primitive solution of length 232 ...
true 71 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 147 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot11;]
true 145 __method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser2,ingredient2;]
true 38 grasp[left,shot11;]
true 215 fill-shot[shot11,ingredient2,left,right,dispenser2;]
true 46 pour-shot-to-clean-shaker[shot11,ingredient2,shaker1,left,l0,l1;]
true 42 clean-shot[shot11,ingredient2,left,right;]
true 310 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot11;]
true 12 fill-shot[shot11,ingredient1,left,right,dispenser1;]
true 90 pour-shot-to-used-shaker[shot11,ingredient1,shaker1,left,l1,l2;]
true 341 leave[left,shot11;]
true 208 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient1;]
true 29 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 279 nop[;]
true 139 grasp[left,shaker1;]
true 296 shake[cocktail5,ingredient2,ingredient1,shaker1,left,right;]
true 249 pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1;]
true 238 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 280 clean-shaker[left,right,shaker1;]
true 250 leave[left,shaker1;]
true 317 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 262 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13;]
true 272 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4;]
true 245 grasp[right,shot13;]
true 48 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 156 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 152 clean-shot[shot13,ingredient4,right,left;]
true 8 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot13;]
true 27 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 273 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2;]
true 318 leave[right,shot13;]
true 194 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 268 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 333 nop[;]
true 324 grasp[left,shaker1;]
true 148 shake[cocktail2,ingredient4,ingredient3,shaker1,left,right;]
true 75 pour-shaker-to-shot[cocktail2,shot2,left,shaker1,l2,l1;]
true 236 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 289 clean-shaker[left,right,shaker1;]
true 143 leave[left,shaker1;]
true 66 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 323 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot13;]
true 321 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient3,dispenser3;]
true 95 grasp[left,shot13;]
true 21 refill-shot[shot13,ingredient3,left,right,dispenser3;]
true 328 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 114 clean-shot[shot13,ingredient3,left,right;]
true 10 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot13;]
true 23 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 329 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2;]
true 304 leave[left,shot13;]
true 234 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient4;]
true 100 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 217 nop[;]
true 315 grasp[right,shaker1;]
true 65 shake[cocktail10,ingredient3,ingredient4,shaker1,right,left;]
true 123 pour-shaker-to-shot[cocktail10,shot3,right,shaker1,l2,l1;]
true 35 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 160 clean-shaker[right,left,shaker1;]
true 287 leave[right,shaker1;]
true 343 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 263 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot13;]
true 133 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient4,dispenser1;]
true 184 grasp[right,shot13;]
true 225 clean-shot[shot13,ingredient4,right,left;]
true 4 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 307 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1;]
true 9 clean-shot[shot13,ingredient1,right,left;]
true 316 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,right,shot13;]
true 311 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 319 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,right,l1,l2;]
true 297 leave[right,shot13;]
true 134 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient4;]
true 155 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 338 nop[;]
true 151 grasp[right,shaker1;]
true 33 shake[cocktail6,ingredient1,ingredient4,shaker1,right,left;]
true 106 pour-shaker-to-shot[cocktail6,shot4,right,shaker1,l2,l1;]
true 290 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 105 clean-shaker[right,left,shaker1;]
true 102 leave[right,shaker1;]
true 37 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 173 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot11;]
true 137 __method_precondition_m7_do_fill_shot_7_precondition[shot11,ingredient1,dispenser1;]
true 177 grasp[left,shot11;]
true 157 refill-shot[shot11,ingredient1,left,right,dispenser1;]
true 141 pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,left,l0,l1;]
true 320 clean-shot[shot11,ingredient1,left,right;]
true 171 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,left,shot11;]
true 291 fill-shot[shot11,ingredient4,left,right,dispenser4;]
true 30 pour-shot-to-used-shaker[shot11,ingredient4,shaker1,left,l1,l2;]
true 254 leave[left,shot11;]
true 240 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient4;]
true 62 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 251 nop[;]
true 72 grasp[left,shaker1;]
true 126 shake[cocktail7,ingredient1,ingredient4,shaker1,left,right;]
true 303 pour-shaker-to-shot[cocktail7,shot5,left,shaker1,l2,l1;]
true 231 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 117 clean-shaker[left,right,shaker1;]
true 207 leave[left,shaker1;]
true 154 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 47 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot11;]
true 83 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient1,ingredient4,dispenser1;]
true 337 grasp[right,shot11;]
true 17 clean-shot[shot11,ingredient4,right,left;]
true 96 fill-shot[shot11,ingredient1,right,left,dispenser1;]
true 51 pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,right,l0,l1;]
true 185 clean-shot[shot11,ingredient1,right,left;]
true 16 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot11;]
true 49 fill-shot[shot11,ingredient2,right,left,dispenser2;]
true 201 pour-shot-to-used-shaker[shot11,ingredient2,shaker1,right,l1,l2;]
true 325 leave[right,shot11;]
true 169 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2;]
true 158 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 226 nop[;]
true 213 grasp[right,shaker1;]
true 93 shake[cocktail4,ingredient1,ingredient2,shaker1,right,left;]
true 229 pour-shaker-to-shot[cocktail4,shot6,right,shaker1,l2,l1;]
true 199 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 85 clean-shaker[right,left,shaker1;]
true 188 leave[right,shaker1;]
true 135 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 221 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot11;]
true 79 __method_precondition_m7_do_fill_shot_7_precondition[shot11,ingredient2,dispenser2;]
true 178 grasp[right,shot11;]
true 112 refill-shot[shot11,ingredient2,right,left,dispenser2;]
true 45 pour-shot-to-clean-shaker[shot11,ingredient2,shaker1,right,l0,l1;]
true 331 clean-shot[shot11,ingredient2,right,left;]
true 205 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,right,shot11;]
true 110 fill-shot[shot11,ingredient1,right,left,dispenser1;]
true 7 pour-shot-to-used-shaker[shot11,ingredient1,shaker1,right,l1,l2;]
true 271 leave[right,shot11;]
true 50 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient1;]
true 183 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 243 nop[;]
true 210 grasp[right,shaker1;]
true 144 shake[cocktail3,ingredient2,ingredient1,shaker1,right,left;]
true 180 pour-shaker-to-shot[cocktail3,shot7,right,shaker1,l2,l1;]
true 68 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 192 clean-shaker[right,left,shaker1;]
true 305 leave[right,shaker1;]
true 224 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 74 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot11;]
true 298 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient4,ingredient1,dispenser4;]
true 276 grasp[right,shot11;]
true 195 clean-shot[shot11,ingredient1,right,left;]
true 257 fill-shot[shot11,ingredient4,right,left,dispenser4;]
true 53 pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,right,l0,l1;]
true 64 clean-shot[shot11,ingredient4,right,left;]
true 87 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,right,shot11;]
true 136 fill-shot[shot11,ingredient3,right,left,dispenser3;]
true 285 pour-shot-to-used-shaker[shot11,ingredient3,shaker1,right,l1,l2;]
true 149 leave[right,shot11;]
true 193 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient3;]
true 200 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 111 nop[;]
true 121 grasp[right,shaker1;]
true 332 shake[cocktail9,ingredient4,ingredient3,shaker1,right,left;]
true 233 pour-shaker-to-shot[cocktail9,shot8,right,shaker1,l2,l1;]
true 335 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 56 clean-shaker[right,left,shaker1;]
true 282 leave[right,shaker1;]
true 18 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 306 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot13;]
true 223 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient4,dispenser3;]
true 266 grasp[left,shot13;]
true 25 clean-shot[shot13,ingredient4,left,right;]
true 31 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 237 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 41 clean-shot[shot13,ingredient3,left,right;]
true 67 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot13;]
true 187 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 77 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 164 leave[left,shot13;]
true 299 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2;]
true 235 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 161 nop[;]
true 182 grasp[right,shaker1;]
true 19 shake[cocktail8,ingredient3,ingredient2,shaker1,right,left;]
true 292 pour-shaker-to-shot[cocktail8,shot9,right,shaker1,l2,l1;]
true 20 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 162 clean-shaker[right,left,shaker1;]
true 97 leave[right,shaker1;]
true 330 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 227 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot13;]
true 278 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient2,dispenser3;]
true 232 grasp[right,shot13;]
true 86 clean-shot[shot13,ingredient2,right,left;]
true 142 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 211 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1;]
true 150 clean-shot[shot13,ingredient3,right,left;]
true 108 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,right,shot13;]
true 255 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 293 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,right,l1,l2;]
true 118 leave[right,shot13;]
true 70 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient4;]
true 101 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 104 nop[;]
true 334 grasp[left,shaker1;]
true 253 shake[cocktail1,ingredient3,ingredient4,shaker1,left,right;]
true 220 pour-shaker-to-shot[cocktail1,shot10,left,shaker1,l2,l1;]
true 247 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 128 clean-shaker[left,right,shaker1;]
true 43 leave[left,shaker1;]
true 252 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2;]
true 260 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient2,ingredient3,dispenser2;]
true 165 grasp[right,shot11;]
true 204 clean-shot[shot11,ingredient3,right,left;]
true 281 fill-shot[shot11,ingredient2,right,left,dispenser2;]
true 327 leave[right,shot11;]
true 11 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 84 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot13;]
true 302 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient4,dispenser2;]
true 159 grasp[left,shot13;]
true 259 clean-shot[shot13,ingredient4,left,right;]
true 60 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 44 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 127 clean-shot[shot13,ingredient2,left,right;]
true 122 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot13;]
true 58 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 115 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 76 leave[left,shot13;]
true 26 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient1;]
true 103 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 202 nop[;]
true 190 grasp[left,shaker1;]
true 0 shake[cocktail5,ingredient2,ingredient1,shaker1,left,right;]
true 176 pour-shaker-to-shot[cocktail5,shot12,left,shaker1,l2,l1;]
true 239 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 116 clean-shaker[left,right,shaker1;]
true 89 leave[left,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 388322456
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 300
number of actions                    = 2687
number of abstract actions           = 694
number of primitive actions          = 1993
number of methods                    = 3087
number of primitive shop actions     = 768
number of primitive non-shop actions = 1225
size of largest method               = 12
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 162625
number of clauses               = 990909
average size of clauses         = 2.3644522352708472
number of assert                = 136
number of horn                  = 870027
K offset                        = 0
K chosen value                  = 4
state formula                   = 802832
method children clauses         = 0
number of paths                 = 237
maximum plan length             = 237
number of decomposition clauses = 188077
number of ordering clauses      = 0
number of state clauses         = 802832
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 16675
============ parsing ============
total                         = 1095
file parser                   = 621
sort expansion                = 211
closed world assumption       = 132
inherit preconditions         = 0
shop methods                  = 29
eliminate identical variables = 45
strip domain of hybridity     = 1
flatten formula               = 56
============ preprocessing ============
total                                      = 5471
compile negative preconditions             = 38
compile unit methods                       = 0
split parameter                            = 42
expand choiceless abstract tasks           = 515
compile methods with identical tasks       = 28
removing unnecessary predicates            = 984
lifted reachabiltiy analysis               = 69
grounded planning graph analysis           = 1386
grounded task decomposition graph analysis = 1835
grounding                                  = 543
create artificial top task                 = 5
============ search preparation ============
compute state invariants = 4312
============ sat ============
total                                        = 7928
generate formula                             = 6802
generate path decomposition tree             = 361
normalise path decomposition tree            = 85
sog optimisation                             = 105
translate path decomposition tree to clauses = 576
generate state formula                       = 6741
generate state invariant formula             = 388
transform to DIMACS                          = 397
SAT solver                                   = 510
SAT solver for K=0004                        = 510

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="1993";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="694";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="388322456";"40 sat:20:state formula"="802832";"40 sat:01:number of variables"="162625";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="237";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="3087";"30 problem:07:number of primitive shop actions"="768";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="2687";"30 problem:08:number of primitive non-shop actions"="1225";"30 problem:02:number of predicates"="300";"40 sat:03:number of horn"="870027";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="12";"40 sat:03:average size of clauses"="2.3644522352708472";"40 sat:02:number of clauses"="990909";"40 sat:50:number of state clauses"="802832";"40 sat:03:number of assert"="136";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="237";"40 sat:50:number of decomposition clauses"="188077";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="621";"01 parsing:08:flatten formula"="56";"40 sat:41:SAT solver for K=0004"="510";"40 sat:00:total"="7928";"40 sat:16:generate state formula"="6741";"40 sat:20:transform to DIMACS"="397";"40 sat:11:generate path decomposition tree"="361";"02 preprocessing:07:compile methods with identical tasks"="28";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="984";"01 parsing:03:closed world assumption"="132";"02 preprocessing:11:lifted reachabiltiy analysis"="69";"01 parsing:02:sort expansion"="211";"40 sat:12:normalise path decomposition tree"="85";"40 sat:40:SAT solver"="510";"01 parsing:00:total"="1095";"40 sat:10:generate formula"="6802";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="38";"00 total:00:total"="16675";"40 sat:13:sog optimisation"="105";"02 preprocessing:12:grounded planning graph analysis"="1386";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1835";"02 preprocessing:04:split parameter"="42";"01 parsing:05:shop methods"="29";"10 search preparation:02:compute state invariants"="4312";"01 parsing:06:eliminate identical variables"="45";"40 sat:15:translate path decomposition tree to clauses"="576";"02 preprocessing:05:expand choiceless abstract tasks"="515";"40 sat:17:generate state invariant formula"="388";"02 preprocessing:00:total"="5471";"02 preprocessing:99:create artificial top task"="5";"02 preprocessing:84:grounding"="543"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot11];__method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser2,ingredient2];grasp[left,shot11];fill-shot[shot11,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot11,ingredient2,shaker1,left,l0,l1];clean-shot[shot11,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot11];fill-shot[shot11,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot11,ingredient1,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail5,ingredient2,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4];grasp[right,shot13];fill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1];clean-shot[shot13,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot13];fill-shot[shot13,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[left,shaker1];shake[cocktail2,ingredient4,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail2,shot2,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail2,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot13];__method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient3,dispenser3];grasp[left,shot13];refill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1];clean-shot[shot13,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot13];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail10,ingredient3,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient4,dispenser1];grasp[right,shot13];clean-shot[shot13,ingredient4,right,left];fill-shot[shot13,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1];clean-shot[shot13,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,right,shot13];fill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot13,ingredient4,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[right,shaker1];shake[cocktail6,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot4,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot11];__method_precondition_m7_do_fill_shot_7_precondition[shot11,ingredient1,dispenser1];grasp[left,shot11];refill-shot[shot11,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,left,l0,l1];clean-shot[shot11,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,left,shot11];fill-shot[shot11,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot11,ingredient4,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail7,ingredient1,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient1,ingredient4,dispenser1];grasp[right,shot11];clean-shot[shot11,ingredient4,right,left];fill-shot[shot11,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,right,l0,l1];clean-shot[shot11,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot11];fill-shot[shot11,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot11,ingredient2,shaker1,right,l1,l2];leave[right,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[right,shaker1];shake[cocktail4,ingredient1,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot6,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot11];__method_precondition_m7_do_fill_shot_7_precondition[shot11,ingredient2,dispenser2];grasp[right,shot11];refill-shot[shot11,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot11,ingredient2,shaker1,right,l0,l1];clean-shot[shot11,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,right,shot11];fill-shot[shot11,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot11,ingredient1,shaker1,right,l1,l2];leave[right,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[right,shaker1];shake[cocktail3,ingredient2,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail3,shot7,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail3,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient4,ingredient1,dispenser4];grasp[right,shot11];clean-shot[shot11,ingredient1,right,left];fill-shot[shot11,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,right,l0,l1];clean-shot[shot11,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,right,shot11];fill-shot[shot11,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot11,ingredient3,shaker1,right,l1,l2];leave[right,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail9,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient4,dispenser3];grasp[left,shot13];clean-shot[shot13,ingredient4,left,right];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1];clean-shot[shot13,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot13];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail8,ingredient3,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient2,dispenser3];grasp[right,shot13];clean-shot[shot13,ingredient2,right,left];fill-shot[shot13,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1];clean-shot[shot13,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,right,shot13];fill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot13,ingredient4,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail1,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient2,ingredient3,dispenser2];grasp[right,shot11];clean-shot[shot11,ingredient3,right,left];fill-shot[shot11,ingredient2,right,left,dispenser2];leave[right,shot11];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient4,dispenser2];grasp[left,shot13];clean-shot[shot13,ingredient4,left,right];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1];clean-shot[shot13,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot13];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[left,shaker1];shake[cocktail5,ingredient2,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot12,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient2 shot11 
2 __method_precondition_m8_do_fill_shot_8_precondition shot11 dispenser2 ingredient2 
3 grasp left shot11 
4 fill-shot shot11 ingredient2 left right dispenser2 
5 pour-shot-to-clean-shaker shot11 ingredient2 shaker1 left l0 l1 
6 clean-shot shot11 ingredient2 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient1 left shot11 
8 fill-shot shot11 ingredient1 left right dispenser1 
9 pour-shot-to-used-shaker shot11 ingredient1 shaker1 left l1 l2 
10 leave left shot11 
11 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient2 ingredient1 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail5 ingredient2 ingredient1 shaker1 left right 
16 pour-shaker-to-shot cocktail5 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail5 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot13 
22 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser4 ingredient4 
23 grasp right shot13 
24 fill-shot shot13 ingredient4 right left dispenser4 
25 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 
26 clean-shot shot13 ingredient4 right left 
27 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 right shot13 
28 fill-shot shot13 ingredient3 right left dispenser3 
29 pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 
30 leave right shot13 
31 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient3 
32 __method_precondition_m5_do_clean_shot_5_precondition shot2 
33 nop  
34 grasp left shaker1 
35 shake cocktail2 ingredient4 ingredient3 shaker1 left right 
36 pour-shaker-to-shot cocktail2 shot2 left shaker1 l2 l1 
37 empty-shaker left shaker1 cocktail2 l1 l0 
38 clean-shaker left right shaker1 
39 leave left shaker1 
40 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
41 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient3 shot13 
42 __method_precondition_m7_do_fill_shot_7_precondition shot13 ingredient3 dispenser3 
43 grasp left shot13 
44 refill-shot shot13 ingredient3 left right dispenser3 
45 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 
46 clean-shot shot13 ingredient3 left right 
47 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient4 left shot13 
48 fill-shot shot13 ingredient4 left right dispenser4 
49 pour-shot-to-used-shaker shot13 ingredient4 shaker1 left l1 l2 
50 leave left shot13 
51 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient3 ingredient4 
52 __method_precondition_m5_do_clean_shot_5_precondition shot3 
53 nop  
54 grasp right shaker1 
55 shake cocktail10 ingredient3 ingredient4 shaker1 right left 
56 pour-shaker-to-shot cocktail10 shot3 right shaker1 l2 l1 
57 empty-shaker right shaker1 cocktail10 l1 l0 
58 clean-shaker right left shaker1 
59 leave right shaker1 
60 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 right 
61 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient1 shot13 
62 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient4 dispenser1 
63 grasp right shot13 
64 clean-shot shot13 ingredient4 right left 
65 fill-shot shot13 ingredient1 right left dispenser1 
66 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 
67 clean-shot shot13 ingredient1 right left 
68 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient4 right shot13 
69 fill-shot shot13 ingredient4 right left dispenser4 
70 pour-shot-to-used-shaker shot13 ingredient4 shaker1 right l1 l2 
71 leave right shot13 
72 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient1 ingredient4 
73 __method_precondition_m5_do_clean_shot_5_precondition shot4 
74 nop  
75 grasp right shaker1 
76 shake cocktail6 ingredient1 ingredient4 shaker1 right left 
77 pour-shaker-to-shot cocktail6 shot4 right shaker1 l2 l1 
78 empty-shaker right shaker1 cocktail6 l1 l0 
79 clean-shaker right left shaker1 
80 leave right shaker1 
81 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
82 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient1 shot11 
83 __method_precondition_m7_do_fill_shot_7_precondition shot11 ingredient1 dispenser1 
84 grasp left shot11 
85 refill-shot shot11 ingredient1 left right dispenser1 
86 pour-shot-to-clean-shaker shot11 ingredient1 shaker1 left l0 l1 
87 clean-shot shot11 ingredient1 left right 
88 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient4 left shot11 
89 fill-shot shot11 ingredient4 left right dispenser4 
90 pour-shot-to-used-shaker shot11 ingredient4 shaker1 left l1 l2 
91 leave left shot11 
92 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient1 ingredient4 
93 __method_precondition_m5_do_clean_shot_5_precondition shot5 
94 nop  
95 grasp left shaker1 
96 shake cocktail7 ingredient1 ingredient4 shaker1 left right 
97 pour-shaker-to-shot cocktail7 shot5 left shaker1 l2 l1 
98 empty-shaker left shaker1 cocktail7 l1 l0 
99 clean-shaker left right shaker1 
100 leave left shaker1 
101 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 right 
102 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient1 shot11 
103 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient1 ingredient4 dispenser1 
104 grasp right shot11 
105 clean-shot shot11 ingredient4 right left 
106 fill-shot shot11 ingredient1 right left dispenser1 
107 pour-shot-to-clean-shaker shot11 ingredient1 shaker1 right l0 l1 
108 clean-shot shot11 ingredient1 right left 
109 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 right shot11 
110 fill-shot shot11 ingredient2 right left dispenser2 
111 pour-shot-to-used-shaker shot11 ingredient2 shaker1 right l1 l2 
112 leave right shot11 
113 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient1 ingredient2 
114 __method_precondition_m5_do_clean_shot_5_precondition shot6 
115 nop  
116 grasp right shaker1 
117 shake cocktail4 ingredient1 ingredient2 shaker1 right left 
118 pour-shaker-to-shot cocktail4 shot6 right shaker1 l2 l1 
119 empty-shaker right shaker1 cocktail4 l1 l0 
120 clean-shaker right left shaker1 
121 leave right shaker1 
122 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 right 
123 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient2 shot11 
124 __method_precondition_m7_do_fill_shot_7_precondition shot11 ingredient2 dispenser2 
125 grasp right shot11 
126 refill-shot shot11 ingredient2 right left dispenser2 
127 pour-shot-to-clean-shaker shot11 ingredient2 shaker1 right l0 l1 
128 clean-shot shot11 ingredient2 right left 
129 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient1 right shot11 
130 fill-shot shot11 ingredient1 right left dispenser1 
131 pour-shot-to-used-shaker shot11 ingredient1 shaker1 right l1 l2 
132 leave right shot11 
133 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient2 ingredient1 
134 __method_precondition_m5_do_clean_shot_5_precondition shot7 
135 nop  
136 grasp right shaker1 
137 shake cocktail3 ingredient2 ingredient1 shaker1 right left 
138 pour-shaker-to-shot cocktail3 shot7 right shaker1 l2 l1 
139 empty-shaker right shaker1 cocktail3 l1 l0 
140 clean-shaker right left shaker1 
141 leave right shaker1 
142 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
143 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient4 shot11 
144 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient4 ingredient1 dispenser4 
145 grasp right shot11 
146 clean-shot shot11 ingredient1 right left 
147 fill-shot shot11 ingredient4 right left dispenser4 
148 pour-shot-to-clean-shaker shot11 ingredient4 shaker1 right l0 l1 
149 clean-shot shot11 ingredient4 right left 
150 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient3 right shot11 
151 fill-shot shot11 ingredient3 right left dispenser3 
152 pour-shot-to-used-shaker shot11 ingredient3 shaker1 right l1 l2 
153 leave right shot11 
154 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient4 ingredient3 
155 __method_precondition_m5_do_clean_shot_5_precondition shot8 
156 nop  
157 grasp right shaker1 
158 shake cocktail9 ingredient4 ingredient3 shaker1 right left 
159 pour-shaker-to-shot cocktail9 shot8 right shaker1 l2 l1 
160 empty-shaker right shaker1 cocktail9 l1 l0 
161 clean-shaker right left shaker1 
162 leave right shaker1 
163 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 left 
164 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot13 
165 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient3 ingredient4 dispenser3 
166 grasp left shot13 
167 clean-shot shot13 ingredient4 left right 
168 fill-shot shot13 ingredient3 left right dispenser3 
169 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 
170 clean-shot shot13 ingredient3 left right 
171 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient2 left shot13 
172 fill-shot shot13 ingredient2 left right dispenser2 
173 pour-shot-to-used-shaker shot13 ingredient2 shaker1 left l1 l2 
174 leave left shot13 
175 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient2 
176 __method_precondition_m5_do_clean_shot_5_precondition shot9 
177 nop  
178 grasp right shaker1 
179 shake cocktail8 ingredient3 ingredient2 shaker1 right left 
180 pour-shaker-to-shot cocktail8 shot9 right shaker1 l2 l1 
181 empty-shaker right shaker1 cocktail8 l1 l0 
182 clean-shaker right left shaker1 
183 leave right shaker1 
184 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 right 
185 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient3 shot13 
186 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient3 ingredient2 dispenser3 
187 grasp right shot13 
188 clean-shot shot13 ingredient2 right left 
189 fill-shot shot13 ingredient3 right left dispenser3 
190 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 
191 clean-shot shot13 ingredient3 right left 
192 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient4 right shot13 
193 fill-shot shot13 ingredient4 right left dispenser4 
194 pour-shot-to-used-shaker shot13 ingredient4 shaker1 right l1 l2 
195 leave right shot13 
196 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient3 ingredient4 
197 __method_precondition_m5_do_clean_shot_5_precondition shot10 
198 nop  
199 grasp left shaker1 
200 shake cocktail1 ingredient3 ingredient4 shaker1 left right 
201 pour-shaker-to-shot cocktail1 shot10 left shaker1 l2 l1 
202 empty-shaker left shaker1 cocktail1 l1 l0 
203 clean-shaker left right shaker1 
204 leave left shaker1 
205 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser2 ingredient2 
206 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient2 ingredient3 dispenser2 
207 grasp right shot11 
208 clean-shot shot11 ingredient3 right left 
209 fill-shot shot11 ingredient2 right left dispenser2 
210 leave right shot11 
211 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 left 
212 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient2 shot13 
213 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient2 ingredient4 dispenser2 
214 grasp left shot13 
215 clean-shot shot13 ingredient4 left right 
216 fill-shot shot13 ingredient2 left right dispenser2 
217 pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 
218 clean-shot shot13 ingredient2 left right 
219 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient1 left shot13 
220 fill-shot shot13 ingredient1 left right dispenser1 
221 pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 
222 leave left shot13 
223 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient2 ingredient1 
224 __method_precondition_m5_do_clean_shot_5_precondition shot12 
225 nop  
226 grasp left shaker1 
227 shake cocktail5 ingredient2 ingredient1 shaker1 left right 
228 pour-shaker-to-shot cocktail5 shot12 left shaker1 l2 l1 
229 empty-shaker left shaker1 cocktail5 l1 l0 
230 clean-shaker left right shaker1 
231 leave left shaker1 
root 299
232 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 152
233 serve_shot shot4 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 72 283 75 76 77 78 79 80
234 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 221
235 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 left  -> _m2_get_first_ingredient_4 46
236 serve_shot shot2 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 31 334 34 35 36 37 38 39
237 serve_shot shot5 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 92 263 95 96 97 98 99 100
238 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 173
239 do_cocktail_in_shot1 shot7 cocktail3  -> m0_do_cocktail_in_shot1 122 274 339 280
240 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 131
241 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 68 331 338 71
242 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 88 278 322 91
243 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 1 335 342 294
244 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient1 left  -> _m3_get_second_ingredient_2 8
245 do_cocktail_in_shot2 shot11 ingredient2  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 205 275 210
246 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 27 286 316 30
247 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 right  -> _m2_get_first_ingredient_4 26
248 serve_shot shot10 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 196 295 199 200 201 202 203 204
249 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 150 289 232 153
250 do_cocktail_in_shot1 shot5 cocktail7  -> m0_do_cocktail_in_shot1 81 296 242 237
251 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient1 right  -> _m3_get_second_ingredient_2 130
252 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 45
253 serve_shot shot12 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 223 276 226 227 228 229 230 231
254 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient2 left  -> _m2_get_first_ingredient_4 218
255 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 right  -> _m2_get_first_ingredient_4 191
256 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 right  -> _m2_get_first_ingredient_4 67
257 get_second_ingredient cocktail4 right  -> m3_get_second_ingredient 109 277 310 112
258 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient4 left  -> _m3_get_second_ingredient_2 48
259 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 171 312 238 174
260 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 7 244 269 10
261 do_fill_shot shot11 ingredient1 right  -> m9_do_fill_shot 103 104 105 106
262 serve_shot shot6 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot6,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 113 314 116 117 118 119 120 121
263 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 93 94
264 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 25
265 do_fill_shot shot11 ingredient4 right  -> m9_do_fill_shot 144 145 146 147
266 do_cocktail_in_shot1 shot4 cocktail6  -> m0_do_cocktail_in_shot1 60 308 241 233
267 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 194
268 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 185 320 315 255
269 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 9
270 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 left  -> _m3_get_second_ingredient_2 220
271 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
272 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 148
273 do_fill_shot shot13 ingredient3 left  -> m7_do_fill_shot 42 43 44
274 get_first_ingredient cocktail3 right  -> m2_get_first_ingredient 123 317 301 302
275 do_fill_shot shot11 ingredient2 right  -> m9_do_fill_shot 206 207 208 209
276 do_clean_shot_m4_serve_shot_sip_2 shot12 right  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2> 224 225
277 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient2 right  -> _m3_get_second_ingredient_2 110
278 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient4 left  -> _m3_get_second_ingredient_2 89
279 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 192 306 267 195
280 serve_shot shot7 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 133 291 136 137 138 139 140 141
281 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 212 344 321 254
282 do_cocktail_in_shot1 shot1 cocktail5  -> m0_do_cocktail_in_shot1 0 243 260 341
283 do_clean_shot_m4_serve_shot_sip_2 shot4 left  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail5,left];m5_do_clean_shot;0;-1,-2> 73 74
284 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 left  -> _m2_get_first_ingredient_4 170
285 do_cocktail_in_shot1 shot9 cocktail8  -> m0_do_cocktail_in_shot1 163 303 259 309
286 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 right  -> _m3_get_second_ingredient_2 28
287 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 219 270 234 222
288 serve_shot shot8 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 154 326 157 158 159 160 161 162
289 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient3 right  -> _m3_get_second_ingredient_2 151
290 do_cocktail_in_shot1 shot10 cocktail1  -> m0_do_cocktail_in_shot1 184 268 279 248
291 do_clean_shot_m4_serve_shot_sip_2 shot7 left  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2> 134 135
292 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 41 273 252 235
293 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 47 258 305 50
294 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient2 left  -> _m2_get_first_ingredient_4 6
295 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail5,right];m5_do_clean_shot;0;-1,-2> 197 198
296 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 82 336 307 337
297 do_fill_shot shot13 ingredient1 right  -> m9_do_fill_shot 62 63 64 65
298 do_fill_shot shot13 ingredient4 right  -> m8_do_fill_shot 22 23 24
299 __choicelessATCompilation__top_1  -> __top_1 282 311 319 266 250 343 239 313 285 290 245 318
300 do_fill_shot shot13 ingredient3 left  -> m9_do_fill_shot 165 166 167 168
301 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 127
302 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient2 right  -> _m2_get_first_ingredient_4 128
303 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 164 300 333 284
304 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 66
305 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 49
306 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient4 right  -> _m3_get_second_ingredient_2 193
307 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 86
308 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 61 297 304 256
309 serve_shot shot9 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 175 325 178 179 180 181 182 183
310 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 111
311 do_cocktail_in_shot1 shot2 cocktail2  -> m0_do_cocktail_in_shot1 20 332 246 236
312 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 left  -> _m3_get_second_ingredient_2 172
313 do_cocktail_in_shot1 shot8 cocktail9  -> m0_do_cocktail_in_shot1 142 324 249 288
314 do_clean_shot_m4_serve_shot_sip_2 shot6 left  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail3,left];m5_do_clean_shot;0;-1,-2> 114 115
315 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 190
316 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 29
317 do_fill_shot shot11 ingredient2 right  -> m7_do_fill_shot 124 125 126
318 do_cocktail_in_shot1 shot12 cocktail5  -> m0_do_cocktail_in_shot1 211 281 287 253
319 do_cocktail_in_shot1 shot3 cocktail10  -> m0_do_cocktail_in_shot1 40 292 293 329
320 do_fill_shot shot13 ingredient3 right  -> m9_do_fill_shot 186 187 188 189
321 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 217
322 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 90
323 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient1 right  -> _m2_get_first_ingredient_4 108
324 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 143 265 272 328
325 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 176 177
326 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 155 156
327 get_first_ingredient cocktail4 right  -> m2_get_first_ingredient 102 261 330 323
328 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient4 right  -> _m2_get_first_ingredient_4 149
329 serve_shot shot3 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 51 340 54 55 56 57 58 59
330 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 107
331 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient4 right  -> _m3_get_second_ingredient_2 69
332 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 21 298 264 247
333 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 169
334 do_clean_shot_m4_serve_shot_sip_2 shot2 right  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2> 32 33
335 do_fill_shot shot11 ingredient2 left  -> m8_do_fill_shot 2 3 4
336 do_fill_shot shot11 ingredient1 left  -> m7_do_fill_shot 83 84 85
337 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient1 left  -> _m2_get_first_ingredient_4 87
338 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 70
339 get_second_ingredient cocktail3 right  -> m3_get_second_ingredient 129 251 240 132
340 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 52 53
341 serve_shot shot1 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 271 14 15 16 17 18 19
342 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 5
343 do_cocktail_in_shot1 shot6 cocktail4  -> m0_do_cocktail_in_shot1 101 327 257 262
344 do_fill_shot shot13 ingredient2 left  -> m9_do_fill_shot 213 214 215 216

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 18.306 MEMPEAK_KBS 585435.136
