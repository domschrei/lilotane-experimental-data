PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile24.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile24.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile24.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Grounded planning graph ... done in 233ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 107
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Grounding ... done.
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 68ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 88
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 113
	number of tasks = 343
	number of decomposition methods = 321
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 113
	number of tasks = 343
	number of decomposition methods = 321
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 113
	number of tasks = 343
	number of decomposition methods = 321
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 27ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 88
	number of abstract tasks = 113
	number of tasks = 343
	number of decomposition methods = 321
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 113
	number of tasks = 343
	number of decomposition methods = 321
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 33ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 88
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 168
	number of tasks = 398
	number of decomposition methods = 376
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 168
	number of tasks = 398
	number of decomposition methods = 376
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Tasks 230 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772593ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854772522
done
initial PDT has 56 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 56 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 11484
Size 11481 at 0/230
Size 5044
Size 4929 at 0/230
Size 2128
Size 2125 at 0/230
Size 454
Size 452 at 0/230
Size 224
Size 224 at 0/230
Size 205
Size 205 at 0/230
Size 204
Size 204 at 0/230
Size 204
Invariant time: 0.167
Number of invariants: 204
Invariant Clauses 11628
NUMBER OF CLAUSES 25372
NUMBER OF STATE CLAUSES 22559
NUMBER OF DECOMPOSITION CLAUSES 2813
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 88.91% 11.09% 0.0% 
NUMBER OF PATHS 56
Starting cryptominisat
Setting starttime of solver to 1603884730460
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 70 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 70 leafs
Still waiting ... running for 100 will abort at 9223372036854771575
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 14484
NUMBER OF CLAUSES 39341
NUMBER OF STATE CLAUSES 28932
NUMBER OF DECOMPOSITION CLAUSES 10409
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 73.54% 26.46% 0.0% 
NUMBER OF PATHS 70
Starting cryptominisat
Setting starttime of solver to 1603884731047
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 98 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 98 leafs
SHOP LEAFS 14
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854770904
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 20196
NUMBER OF CLAUSES 67399
NUMBER OF STATE CLAUSES 41087
NUMBER OF DECOMPOSITION CLAUSES 26312
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 60.96% 39.04% 0.0% 
NUMBER OF PATHS 98
Starting cryptominisat
Setting starttime of solver to 1603884731727
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 126 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 126 leafs
Still waiting ... running for 101 will abort at 9223372036854770361
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 25908
NUMBER OF CLAUSES 101949
NUMBER OF STATE CLAUSES 53692
NUMBER OF DECOMPOSITION CLAUSES 48257
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 52.67% 47.33% 0.0% 
NUMBER OF PATHS 126
Starting cryptominisat
Setting starttime of solver to 1603884732372
Command exited with non-zero status 10
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_30,372 372 __UNIQUE-replacement_53
30 8 pathaction!1_30,395
Consider method^4_22;0;0;0,159 159 m-drive-to-via
22;0;0;0 179 pathaction!4_22;0;0;0,183
Consider method^2_23;2,226 226 m-drive-to-via
23;2 67 pathaction!2_23;2,174
Consider method^5_22;0;0;0;0,36 36 m-drive-to
22;0;0;0;0 31 pathaction!5_22;0;0;0;0,178
Consider method^2_34;3,96 96 m-unload
34;3 81 pathaction!2_34;3,66
Consider method^1_24,367 367 __UNIQUE-replacement_48
24 96 pathaction!1_24,390
Consider method^2_0;1,100 100 m-load
0;1 148 pathaction!2_0;1,335
Consider method^5_33;2;0;0;0,182 182 m-drive-to
33;2;0;0;0 88 pathaction!5_33;2;0;0;0,175
Consider method^2_32;1,108 108 m-load
32;1 172 pathaction!2_32;1,309
Consider method^3_32;0;0,232 232 m-drive-to
32;0;0 116 pathaction!3_32;0;0,175
Consider method^2_33;2,273 273 m-drive-to-via
33;2 48 pathaction!2_33;2,171
Consider method^1_28,371 371 __UNIQUE-replacement_52
28 41 pathaction!1_28,394
Consider method^5_34;2;0;0;0,83 83 m-drive-to
34;2;0;0;0 175 pathaction!5_34;2;0;0;0,179
Consider method^1_21,326 326 m-unload
21 113 pathaction!1_21,65
Consider method^1_18,363 363 __UNIQUE-replacement_44
18 121 pathaction!1_18,386
Consider method^1_9,247 247 m-unload
9 141 pathaction!1_9,63
Consider method^1_6,373 373 __UNIQUE-replacement_54
6 76 pathaction!1_6,396
Consider method^2_1;1,173 173 m-load
1;1 126 pathaction!2_1;1,329
Consider method^1_34,188 188 m-deliver
34 0 pathaction!1_34,90
Consider method^1_10,361 361 __UNIQUE-replacement_42
10 46 pathaction!1_10,384
Consider method^4_22;2;0;0,350 350 m-drive-to
22;2;0;0 108 pathaction!4_22;2;0;0,178
Consider method^2_1;0,317 317 m-drive-to-via
1;0 74 pathaction!2_1;0,171
Consider method^3_22;2;0,159 159 m-drive-to-via
22;2;0 191 pathaction!3_22;2;0,183
Consider method^1_19,165 165 m-load
19 75 pathaction!1_19,305
Consider method^1_23,24 24 m-deliver
23 146 pathaction!1_23,85
Consider method^2_33;0,62 62 m-drive-to-via
33;0 130 pathaction!2_33;0,186
Consider method^3_22;0;0,82 82 m-drive-to-via
22;0;0 14 pathaction!3_22;0;0,178
Consider method^1_27,308 308 m-unload
27 139 pathaction!1_27,68
Consider method^3_0;2;0,19 19 m-drive-to
0;2;0 173 pathaction!3_0;2;0,178
Consider method^1_32,360 360 m-deliver
32 163 pathaction!1_32,84
Consider method^4_34;2;0;0,103 103 m-drive-to-via
34;2;0;0 171 pathaction!4_34;2;0;0,187
Consider method^2_23;1,216 216 m-load
23;1 57 pathaction!2_23;1,296
Consider method^1_8,374 374 __UNIQUE-replacement_55
8 144 pathaction!1_8,397
Consider method^1_26,368 368 __UNIQUE-replacement_49
26 43 pathaction!1_26,391
Consider method^1_2,369 369 __UNIQUE-replacement_50
2 182 pathaction!1_2,392
Consider method^2_32;0,62 62 m-drive-to-via
32;0 7 pathaction!2_32;0,186
Consider method^1_1,141 141 m-deliver
1 35 pathaction!1_1,89
Consider method^2_33;1,113 113 m-load
33;1 45 pathaction!2_33;1,306
Consider method^1_14,365 365 __UNIQUE-replacement_46
14 53 pathaction!1_14,388
Consider method^1_22,127 127 m-deliver
22 33 pathaction!1_22,87
Consider method^4_23;0;0;0,273 273 m-drive-to-via
23;0;0;0 125 pathaction!4_23;0;0;0,171
Consider method^4_34;0;0;0,190 190 m-drive-to
34;0;0;0 78 pathaction!4_34;0;0;0,191
Consider method^2_22;1,20 20 m-load
22;1 152 pathaction!2_22;1,322
Consider method^2_33;3,248 248 m-unload
33;3 185 pathaction!2_33;3,83
Consider method^1_5,267 267 m-unload
5 19 pathaction!1_5,74
Consider method^1_4,370 370 __UNIQUE-replacement_51
4 149 pathaction!1_4,393
Consider method^3_1;0;0,232 232 m-drive-to
1;0;0 112 pathaction!3_1;0;0,175
Consider method^3_1;2;0,335 335 m-drive-to
1;2;0 156 pathaction!3_1;2;0,188
Consider method^3_33;2;0,253 253 m-drive-to-via
33;2;0 114 pathaction!3_33;2;0,188
Consider method^4_23;2;0;0,226 226 m-drive-to-via
23;2;0;0 140 pathaction!4_23;2;0;0,174
Consider method^4_33;0;0;0,273 273 m-drive-to-via
33;0;0;0 30 pathaction!4_33;0;0;0,171
Consider method^3_23;2;0,147 147 m-drive-to-via
23;2;0 131 pathaction!3_23;2;0,175
Consider method^5_23;2;0;0;0,182 182 m-drive-to
23;2;0;0;0 154 pathaction!5_23;2;0;0;0,175
Consider method^1_0,208 208 m-deliver
0 189 pathaction!1_0,86
Consider method^1_17,64 64 m-unload
17 65 pathaction!1_17,71
Consider method^2_1;2,180 180 m-drive-to-via
1;2 138 pathaction!2_1;2,177
Consider method^1_33,285 285 m-deliver
33 34 pathaction!1_33,88
Consider method^1_11,137 137 m-load
11 133 pathaction!1_11,338
Consider method^1_16,366 366 __UNIQUE-replacement_47
16 26 pathaction!1_16,389
Consider method^5_23;0;0;0;0,177 177 m-drive-to
23;0;0;0;0 151 pathaction!5_23;0;0;0;0,188
Consider method^2_32;2,179 179 m-drive-to-via
32;2 136 pathaction!2_32;2,172
Consider method^2_22;3,318 318 m-unload
22;3 59 pathaction!2_22;3,58
Consider method^2_23;3,153 153 m-unload
23;3 174 pathaction!2_23;3,59
Consider method^2_32;3,227 227 m-unload
32;3 92 pathaction!2_32;3,78
Consider method^1_15,183 183 m-load
15 20 pathaction!1_15,317
Consider method^2_34;1,299 299 m-load
34;1 193 pathaction!2_34;1,315
Consider method^2_0;2,327 327 m-drive-to-via
0;2 180 pathaction!2_0;2,176
Consider method^3_34;2;0,73 73 m-drive-to-via
34;2;0 188 pathaction!3_34;2;0,179
Consider method^2_0;3,11 11 m-unload
0;3 186 pathaction!2_0;3,77
Consider method^4_33;2;0;0,317 317 m-drive-to-via
33;2;0;0 192 pathaction!4_33;2;0;0,171
Consider method^1_3,27 27 m-load
3 118 pathaction!1_3,325
Consider method^2_1;3,3 3 m-unload
1;3 1 pathaction!2_1;3,73
Consider method^2_22;2,337 337 m-drive-to-via
22;2 42 pathaction!2_22;2,193
Consider method^4_32;2;0;0,317 317 m-drive-to-via
32;2;0;0 147 pathaction!4_32;2;0;0,171
Consider method^3_34;0;0,84 84 m-drive-to-via
34;0;0 3 pathaction!3_34;0;0,179
Consider method^2_22;0,124 124 m-drive-to-via
22;0 23 pathaction!2_22;0,189
Consider method^2_34;2,322 322 m-drive-to-via
34;2 100 pathaction!2_34;2,182
Consider method^1_29,94 94 m-load
29 187 pathaction!1_29,310
Consider method^1_20,364 364 __UNIQUE-replacement_45
20 38 pathaction!1_20,387
Consider method^1_7,135 135 m-load
7 77 pathaction!1_7,301
Consider method^1_31,231 231 m-unload
31 97 pathaction!1_31,67
Consider method^3_23;0;0,340 340 m-drive-to-via
23;0;0 128 pathaction!3_23;0;0,175
Consider method^1_13,259 259 m-unload
13 105 pathaction!1_13,82
Consider method^2_0;0,159 159 m-drive-to-via
0;0 40 pathaction!2_0;0,183
Consider method^3_33;0;0,340 340 m-drive-to-via
33;0;0 73 pathaction!3_33;0;0,175
Consider method^2_23;0,62 62 m-drive-to-via
23;0 137 pathaction!2_23;0,186
Consider method^5_33;0;0;0;0,349 349 m-drive-to
33;0;0;0;0 177 pathaction!5_33;0;0;0;0,188
Consider method^1_25,176 176 m-load
25 94 pathaction!1_25,311
Consider method^0_,375 375 <<<<<<<<<<<<<<<<<<<<<__top_1;deliver[package-4,city-loc-3];m-deliver;4;0,1,2,3,-1,-2,-3,-4,5,6,7,8,9,10,11,12,13>;deliver[package-6,city-loc-3];m-deliver;9;0,1,2,3,4,5,6,7,8,-1,-2,-3,-4,10,11,12,13,14,15,16>;deliver[package-5,city-loc-3];m-deliver;8;0,1,2,3,4,5,6,7,-1,-2,-3,-4,9,10,11,12,13,14,15,16,17,18,19>;deliver[package-9,city-loc-3];m-deliver;18;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,-1,-2,-3,-4,19,20,21,22>;deliver[package-2,city-loc-3];m-deliver;2;0,1,-1,-2,-3,-4,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25>;deliver[package-10,city-loc-3];m-deliver;25;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,-1,-2,-3,-4,26,27,28>;deliver[package-3,city-loc-3];m-deliver;6;0,1,2,3,4,5,-1,-2,-3,-4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31>;get-to[truck-1,city-loc-3];m-i-am-there;10;0,1,2,3,4,5,6,7,8,9,-1,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;12;0,1,2,3,4,5,6,7,8,9,10,11,-1,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;18;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,-1,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;20;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,-1,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;14;0,1,2,3,4,5,6,7,8,9,10,11,12,13,-1,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;16;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,-1,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;24;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,-1,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;26;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;2;0,1,-1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;4;0,1,2,3,-1,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;28;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,-1,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;30;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,-1,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;6;0,1,2,3,4,5,-1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;8;0,1,2,3,4,5,6,7,-1,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>
 89 pathaction!0_,341
Consider method^5_32;2;0;0;0,182 182 m-drive-to
32;2;0;0;0 52 pathaction!5_32;2;0;0;0,175
Consider method^3_0;0;0,302 302 m-i-am-there
0;0;0 91 pathaction!3_0;0;0,178
Consider method^2_34;0,212 212 m-drive-to-via
34;0 28 pathaction!2_34;0,191
Consider method^1_12,362 362 __UNIQUE-replacement_43
12 62 pathaction!1_12,385
Consider method^3_32;2;0,253 253 m-drive-to-via
32;2;0 123 pathaction!3_32;2;0,188


CHECKING primitive solution of length 86 ...
true 99 noop[truck-3,city-loc-4;]
true 106 drive[truck-3,city-loc-4,city-loc-2;]
true 68 pick-up[truck-3,city-loc-2,package-0,capacity-1,capacity-2;]
true 166 drive[truck-3,city-loc-2,city-loc-4;]
true 167 drive[truck-3,city-loc-4,city-loc-1;]
true 165 drop[truck-3,city-loc-1,package-0,capacity-1,capacity-2;]
true 37 drive[truck-0,city-loc-8,city-loc-4;]
true 5 drive[truck-0,city-loc-4,city-loc-2;]
true 72 pick-up[truck-0,city-loc-2,package-1,capacity-1,capacity-2;]
true 153 drive[truck-0,city-loc-2,city-loc-0;]
true 170 drive[truck-0,city-loc-0,city-loc-5;]
true 169 drop[truck-0,city-loc-5,package-1,capacity-1,capacity-2;]
true 142 noop[truck-1,city-loc-3;]
true 49 pick-up[truck-1,city-loc-3,package-2,capacity-1,capacity-2;]
true 161 noop[truck-1,city-loc-3;]
true 101 drop[truck-1,city-loc-3,package-2,capacity-1,capacity-2;]
true 79 noop[truck-1,city-loc-3;]
true 60 pick-up[truck-1,city-loc-3,package-3,capacity-1,capacity-2;]
true 159 noop[truck-1,city-loc-3;]
true 162 drop[truck-1,city-loc-3,package-3,capacity-1,capacity-2;]
true 51 noop[truck-1,city-loc-3;]
true 21 pick-up[truck-1,city-loc-3,package-4,capacity-1,capacity-2;]
true 183 noop[truck-1,city-loc-3;]
true 155 drop[truck-1,city-loc-3,package-4,capacity-1,capacity-2;]
true 32 noop[truck-1,city-loc-3;]
true 168 pick-up[truck-1,city-loc-3,package-5,capacity-1,capacity-2;]
true 58 noop[truck-1,city-loc-3;]
true 83 drop[truck-1,city-loc-3,package-5,capacity-1,capacity-2;]
true 95 noop[truck-1,city-loc-3;]
true 80 pick-up[truck-1,city-loc-3,package-6,capacity-1,capacity-2;]
true 17 noop[truck-1,city-loc-3;]
true 93 drop[truck-1,city-loc-3,package-6,capacity-1,capacity-2;]
true 178 drive[truck-3,city-loc-1,city-loc-4;]
true 55 drive[truck-3,city-loc-4,city-loc-2;]
true 143 drive[truck-3,city-loc-2,city-loc-4;]
true 16 drive[truck-3,city-loc-4,city-loc-8;]
true 110 pick-up[truck-3,city-loc-8,package-7,capacity-1,capacity-2;]
true 4 drive[truck-3,city-loc-8,city-loc-4;]
true 13 drive[truck-3,city-loc-4,city-loc-2;]
true 11 drive[truck-3,city-loc-2,city-loc-0;]
true 103 drop[truck-3,city-loc-0,package-7,capacity-1,capacity-2;]
true 129 drive[truck-0,city-loc-5,city-loc-0;]
true 29 drive[truck-0,city-loc-0,city-loc-2;]
true 119 drive[truck-0,city-loc-2,city-loc-4;]
true 109 drive[truck-0,city-loc-4,city-loc-6;]
true 56 pick-up[truck-0,city-loc-6,package-8,capacity-1,capacity-2;]
true 86 drive[truck-0,city-loc-6,city-loc-4;]
true 47 drive[truck-0,city-loc-4,city-loc-8;]
true 176 drive[truck-0,city-loc-8,city-loc-4;]
true 160 drive[truck-0,city-loc-4,city-loc-8;]
true 135 drop[truck-0,city-loc-8,package-8,capacity-1,capacity-2;]
true 61 noop[truck-1,city-loc-3;]
true 134 pick-up[truck-1,city-loc-3,package-9,capacity-1,capacity-2;]
true 98 noop[truck-1,city-loc-3;]
true 127 drop[truck-1,city-loc-3,package-9,capacity-1,capacity-2;]
true 117 noop[truck-1,city-loc-3;]
true 18 pick-up[truck-1,city-loc-3,package-10,capacity-1,capacity-2;]
true 90 noop[truck-1,city-loc-3;]
true 184 drop[truck-1,city-loc-3,package-10,capacity-1,capacity-2;]
true 2 drive[truck-0,city-loc-8,city-loc-4;]
true 24 drive[truck-0,city-loc-4,city-loc-6;]
true 9 pick-up[truck-0,city-loc-6,package-11,capacity-1,capacity-2;]
true 69 drive[truck-0,city-loc-6,city-loc-4;]
true 63 drive[truck-0,city-loc-4,city-loc-2;]
true 82 drive[truck-0,city-loc-2,city-loc-0;]
true 84 drive[truck-0,city-loc-0,city-loc-7;]
true 22 drop[truck-0,city-loc-7,package-11,capacity-1,capacity-2;]
true 85 drive[truck-0,city-loc-7,city-loc-0;]
true 181 drive[truck-0,city-loc-0,city-loc-2;]
true 87 drive[truck-0,city-loc-2,city-loc-4;]
true 111 drive[truck-0,city-loc-4,city-loc-6;]
true 6 pick-up[truck-0,city-loc-6,package-12,capacity-1,capacity-2;]
true 104 drive[truck-0,city-loc-6,city-loc-4;]
true 120 drive[truck-0,city-loc-4,city-loc-2;]
true 115 drive[truck-0,city-loc-2,city-loc-0;]
true 122 drive[truck-0,city-loc-0,city-loc-2;]
true 150 drop[truck-0,city-loc-2,package-12,capacity-1,capacity-2;]
true 132 drive[truck-2,city-loc-9,city-loc-7;]
true 124 drive[truck-2,city-loc-7,city-loc-0;]
true 27 drive[truck-2,city-loc-0,city-loc-7;]
true 39 pick-up[truck-2,city-loc-7,package-13,capacity-1,capacity-2;]
true 44 drive[truck-2,city-loc-7,city-loc-0;]
true 70 drive[truck-2,city-loc-0,city-loc-2;]
true 12 drive[truck-2,city-loc-2,city-loc-0;]
true 36 drive[truck-2,city-loc-0,city-loc-5;]
true 190 drop[truck-2,city-loc-5,package-13,capacity-1,capacity-2;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 176041856
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 88
number of actions                    = 398
number of abstract actions           = 168
number of primitive actions          = 230
number of methods                    = 376
number of primitive shop actions     = 0
number of primitive non-shop actions = 230
size of largest method               = 35
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 30741
number of clauses               = 101949
average size of clauses         = 2.4750022069858457
number of assert                = 22
number of horn                  = 92825
K offset                        = 0
K chosen value                  = 6
state formula                   = 53692
method children clauses         = 0
number of paths                 = 126
maximum plan length             = 126
number of decomposition clauses = 48257
number of ordering clauses      = 0
number of state clauses         = 53692
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 6548
============ parsing ============
total                         = 921
file parser                   = 534
sort expansion                = 143
closed world assumption       = 112
inherit preconditions         = 0
shop methods                  = 1
eliminate identical variables = 62
strip domain of hybridity     = 2
flatten formula               = 67
============ preprocessing ============
total                                      = 1952
compile negative preconditions             = 46
compile unit methods                       = 0
split parameter                            = 28
expand choiceless abstract tasks           = 352
compile methods with identical tasks       = 81
removing unnecessary predicates            = 129
lifted reachabiltiy analysis               = 60
grounded planning graph analysis           = 588
grounded task decomposition graph analysis = 498
grounding                                  = 160
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 208
============ sat ============
total                                        = 2289
generate formula                             = 1721
generate path decomposition tree             = 272
normalise path decomposition tree            = 102
sog optimisation                             = 92
translate path decomposition tree to clauses = 465
generate state formula                       = 1682
generate state invariant formula             = 101
transform to DIMACS                          = 172
SAT solver                                   = 90
SAT solver for K=0003                        = 0
SAT solver for K=0004                        = 10
SAT solver for K=0005                        = 40
SAT solver for K=0006                        = 40

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="230";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="168";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="176041856";"40 sat:20:state formula"="53692";"40 sat:01:number of variables"="30741";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="126";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="376";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="398";"30 problem:08:number of primitive non-shop actions"="230";"30 problem:02:number of predicates"="88";"40 sat:03:number of horn"="92825";"40 sat:15:K chosen value"="6";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="35";"40 sat:03:average size of clauses"="2.4750022069858457";"40 sat:02:number of clauses"="101949";"40 sat:50:number of state clauses"="53692";"40 sat:03:number of assert"="22";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="126";"40 sat:50:number of decomposition clauses"="48257";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="534";"01 parsing:08:flatten formula"="67";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="2289";"40 sat:16:generate state formula"="1682";"40 sat:20:transform to DIMACS"="172";"40 sat:11:generate path decomposition tree"="272";"02 preprocessing:07:compile methods with identical tasks"="81";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="129";"01 parsing:03:closed world assumption"="112";"02 preprocessing:11:lifted reachabiltiy analysis"="60";"01 parsing:02:sort expansion"="143";"40 sat:12:normalise path decomposition tree"="102";"40 sat:40:SAT solver"="90";"01 parsing:00:total"="921";"40 sat:10:generate formula"="1721";"40 sat:41:SAT solver for K=0005"="40";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="46";"00 total:00:total"="6548";"40 sat:13:sog optimisation"="92";"02 preprocessing:12:grounded planning graph analysis"="588";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="498";"40 sat:41:SAT solver for K=0006"="40";"02 preprocessing:04:split parameter"="28";"01 parsing:05:shop methods"="1";"10 search preparation:02:compute state invariants"="208";"01 parsing:06:eliminate identical variables"="62";"40 sat:15:translate path decomposition tree to clauses"="465";"02 preprocessing:05:expand choiceless abstract tasks"="352";"40 sat:41:SAT solver for K=0003"="0";"40 sat:17:generate state invariant formula"="101";"02 preprocessing:00:total"="1952";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="160"
#!verify noop[truck-3,city-loc-4];drive[truck-3,city-loc-4,city-loc-2];pick-up[truck-3,city-loc-2,package-0,capacity-1,capacity-2];drive[truck-3,city-loc-2,city-loc-4];drive[truck-3,city-loc-4,city-loc-1];drop[truck-3,city-loc-1,package-0,capacity-1,capacity-2];drive[truck-0,city-loc-8,city-loc-4];drive[truck-0,city-loc-4,city-loc-2];pick-up[truck-0,city-loc-2,package-1,capacity-1,capacity-2];drive[truck-0,city-loc-2,city-loc-0];drive[truck-0,city-loc-0,city-loc-5];drop[truck-0,city-loc-5,package-1,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-2,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-2,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-3,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-3,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-4,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-4,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-5,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-5,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-6,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-6,capacity-1,capacity-2];drive[truck-3,city-loc-1,city-loc-4];drive[truck-3,city-loc-4,city-loc-2];drive[truck-3,city-loc-2,city-loc-4];drive[truck-3,city-loc-4,city-loc-8];pick-up[truck-3,city-loc-8,package-7,capacity-1,capacity-2];drive[truck-3,city-loc-8,city-loc-4];drive[truck-3,city-loc-4,city-loc-2];drive[truck-3,city-loc-2,city-loc-0];drop[truck-3,city-loc-0,package-7,capacity-1,capacity-2];drive[truck-0,city-loc-5,city-loc-0];drive[truck-0,city-loc-0,city-loc-2];drive[truck-0,city-loc-2,city-loc-4];drive[truck-0,city-loc-4,city-loc-6];pick-up[truck-0,city-loc-6,package-8,capacity-1,capacity-2];drive[truck-0,city-loc-6,city-loc-4];drive[truck-0,city-loc-4,city-loc-8];drive[truck-0,city-loc-8,city-loc-4];drive[truck-0,city-loc-4,city-loc-8];drop[truck-0,city-loc-8,package-8,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-9,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-9,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-10,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-10,capacity-1,capacity-2];drive[truck-0,city-loc-8,city-loc-4];drive[truck-0,city-loc-4,city-loc-6];pick-up[truck-0,city-loc-6,package-11,capacity-1,capacity-2];drive[truck-0,city-loc-6,city-loc-4];drive[truck-0,city-loc-4,city-loc-2];drive[truck-0,city-loc-2,city-loc-0];drive[truck-0,city-loc-0,city-loc-7];drop[truck-0,city-loc-7,package-11,capacity-1,capacity-2];drive[truck-0,city-loc-7,city-loc-0];drive[truck-0,city-loc-0,city-loc-2];drive[truck-0,city-loc-2,city-loc-4];drive[truck-0,city-loc-4,city-loc-6];pick-up[truck-0,city-loc-6,package-12,capacity-1,capacity-2];drive[truck-0,city-loc-6,city-loc-4];drive[truck-0,city-loc-4,city-loc-2];drive[truck-0,city-loc-2,city-loc-0];drive[truck-0,city-loc-0,city-loc-2];drop[truck-0,city-loc-2,package-12,capacity-1,capacity-2];drive[truck-2,city-loc-9,city-loc-7];drive[truck-2,city-loc-7,city-loc-0];drive[truck-2,city-loc-0,city-loc-7];pick-up[truck-2,city-loc-7,package-13,capacity-1,capacity-2];drive[truck-2,city-loc-7,city-loc-0];drive[truck-2,city-loc-0,city-loc-2];drive[truck-2,city-loc-2,city-loc-0];drive[truck-2,city-loc-0,city-loc-5];drop[truck-2,city-loc-5,package-13,capacity-1,capacity-2]
==>
0 noop truck-3 city-loc-4 
1 drive truck-3 city-loc-4 city-loc-2 
2 pick-up truck-3 city-loc-2 package-0 capacity-1 capacity-2 
3 drive truck-3 city-loc-2 city-loc-4 
4 drive truck-3 city-loc-4 city-loc-1 
5 drop truck-3 city-loc-1 package-0 capacity-1 capacity-2 
6 drive truck-0 city-loc-8 city-loc-4 
7 drive truck-0 city-loc-4 city-loc-2 
8 pick-up truck-0 city-loc-2 package-1 capacity-1 capacity-2 
9 drive truck-0 city-loc-2 city-loc-0 
10 drive truck-0 city-loc-0 city-loc-5 
11 drop truck-0 city-loc-5 package-1 capacity-1 capacity-2 
12 noop truck-1 city-loc-3 
13 pick-up truck-1 city-loc-3 package-2 capacity-1 capacity-2 
14 noop truck-1 city-loc-3 
15 drop truck-1 city-loc-3 package-2 capacity-1 capacity-2 
16 noop truck-1 city-loc-3 
17 pick-up truck-1 city-loc-3 package-3 capacity-1 capacity-2 
18 noop truck-1 city-loc-3 
19 drop truck-1 city-loc-3 package-3 capacity-1 capacity-2 
20 noop truck-1 city-loc-3 
21 pick-up truck-1 city-loc-3 package-4 capacity-1 capacity-2 
22 noop truck-1 city-loc-3 
23 drop truck-1 city-loc-3 package-4 capacity-1 capacity-2 
24 noop truck-1 city-loc-3 
25 pick-up truck-1 city-loc-3 package-5 capacity-1 capacity-2 
26 noop truck-1 city-loc-3 
27 drop truck-1 city-loc-3 package-5 capacity-1 capacity-2 
28 noop truck-1 city-loc-3 
29 pick-up truck-1 city-loc-3 package-6 capacity-1 capacity-2 
30 noop truck-1 city-loc-3 
31 drop truck-1 city-loc-3 package-6 capacity-1 capacity-2 
32 drive truck-3 city-loc-1 city-loc-4 
33 drive truck-3 city-loc-4 city-loc-2 
34 drive truck-3 city-loc-2 city-loc-4 
35 drive truck-3 city-loc-4 city-loc-8 
36 pick-up truck-3 city-loc-8 package-7 capacity-1 capacity-2 
37 drive truck-3 city-loc-8 city-loc-4 
38 drive truck-3 city-loc-4 city-loc-2 
39 drive truck-3 city-loc-2 city-loc-0 
40 drop truck-3 city-loc-0 package-7 capacity-1 capacity-2 
41 drive truck-0 city-loc-5 city-loc-0 
42 drive truck-0 city-loc-0 city-loc-2 
43 drive truck-0 city-loc-2 city-loc-4 
44 drive truck-0 city-loc-4 city-loc-6 
45 pick-up truck-0 city-loc-6 package-8 capacity-1 capacity-2 
46 drive truck-0 city-loc-6 city-loc-4 
47 drive truck-0 city-loc-4 city-loc-8 
48 drive truck-0 city-loc-8 city-loc-4 
49 drive truck-0 city-loc-4 city-loc-8 
50 drop truck-0 city-loc-8 package-8 capacity-1 capacity-2 
51 noop truck-1 city-loc-3 
52 pick-up truck-1 city-loc-3 package-9 capacity-1 capacity-2 
53 noop truck-1 city-loc-3 
54 drop truck-1 city-loc-3 package-9 capacity-1 capacity-2 
55 noop truck-1 city-loc-3 
56 pick-up truck-1 city-loc-3 package-10 capacity-1 capacity-2 
57 noop truck-1 city-loc-3 
58 drop truck-1 city-loc-3 package-10 capacity-1 capacity-2 
59 drive truck-0 city-loc-8 city-loc-4 
60 drive truck-0 city-loc-4 city-loc-6 
61 pick-up truck-0 city-loc-6 package-11 capacity-1 capacity-2 
62 drive truck-0 city-loc-6 city-loc-4 
63 drive truck-0 city-loc-4 city-loc-2 
64 drive truck-0 city-loc-2 city-loc-0 
65 drive truck-0 city-loc-0 city-loc-7 
66 drop truck-0 city-loc-7 package-11 capacity-1 capacity-2 
67 drive truck-0 city-loc-7 city-loc-0 
68 drive truck-0 city-loc-0 city-loc-2 
69 drive truck-0 city-loc-2 city-loc-4 
70 drive truck-0 city-loc-4 city-loc-6 
71 pick-up truck-0 city-loc-6 package-12 capacity-1 capacity-2 
72 drive truck-0 city-loc-6 city-loc-4 
73 drive truck-0 city-loc-4 city-loc-2 
74 drive truck-0 city-loc-2 city-loc-0 
75 drive truck-0 city-loc-0 city-loc-2 
76 drop truck-0 city-loc-2 package-12 capacity-1 capacity-2 
77 drive truck-2 city-loc-9 city-loc-7 
78 drive truck-2 city-loc-7 city-loc-0 
79 drive truck-2 city-loc-0 city-loc-7 
80 pick-up truck-2 city-loc-7 package-13 capacity-1 capacity-2 
81 drive truck-2 city-loc-7 city-loc-0 
82 drive truck-2 city-loc-0 city-loc-2 
83 drive truck-2 city-loc-2 city-loc-0 
84 drive truck-2 city-loc-0 city-loc-5 
85 drop truck-2 city-loc-5 package-13 capacity-1 capacity-2 
root 164
86 unload truck-1 city-loc-3 package-10  -> m-unload 58
87 noop truck-1 city-loc-3  -> __UNIQUE-replacement_48 51
88 get-to truck-0 city-loc-8  -> m-drive-to-via 146 47
89 load truck-1 city-loc-3 package-3  -> m-load 17
90 get-to truck-2 city-loc-0  -> m-drive-to-via 101 83
91 load truck-3 city-loc-8 package-7  -> m-load 36
92 get-to truck-0 city-loc-2  -> m-drive-to-via 122 68
93 get-to truck-3 city-loc-1  -> m-drive-to-via 97 4
94 get-to truck-0 city-loc-4  -> m-drive-to-via 138 43
95 deliver package-7 city-loc-0  -> m-deliver 149 91 147 134
96 load truck-0 city-loc-6 package-8  -> m-load 45
97 get-to truck-3 city-loc-4  -> m-drive-to 3
98 get-to truck-2 city-loc-0  -> m-drive-to 81
99 get-to truck-3 city-loc-2  -> m-drive-to-via 114 33
100 get-to truck-0 city-loc-2  -> m-drive-to-via 103 73
101 get-to truck-2 city-loc-2  -> m-drive-to-via 98 82
102 get-to truck-0 city-loc-2  -> m-drive-to-via 158 75
103 get-to truck-0 city-loc-4  -> m-drive-to 72
104 noop truck-1 city-loc-3  -> __UNIQUE-replacement_46 24
105 deliver package-12 city-loc-2  -> m-deliver 107 178 102 157
106 deliver package-8 city-loc-8  -> m-deliver 115 96 169 109
107 get-to truck-0 city-loc-6  -> m-drive-to-via 131 70
108 noop truck-1 city-loc-3  -> __UNIQUE-replacement_51 14
109 unload truck-0 city-loc-8 package-8  -> m-unload 50
110 deliver package-11 city-loc-7  -> m-deliver 176 128 116 136
111 get-to truck-2 city-loc-0  -> m-drive-to-via 151 78
112 deliver package-0 city-loc-1  -> m-deliver 179 156 93 129
113 get-to truck-0 city-loc-0  -> m-drive-to-via 148 64
114 get-to truck-3 city-loc-4  -> m-drive-to 32
115 get-to truck-0 city-loc-6  -> m-drive-to-via 94 44
116 get-to truck-0 city-loc-7  -> m-drive-to-via 113 65
117 unload truck-1 city-loc-3 package-5  -> m-unload 27
118 get-to truck-0 city-loc-0  -> m-drive-to 41
119 load truck-1 city-loc-3 package-5  -> m-load 25
120 get-to truck-0 city-loc-4  -> m-drive-to 6
121 noop truck-1 city-loc-3  -> __UNIQUE-replacement_47 26
122 get-to truck-0 city-loc-0  -> m-drive-to 67
123 load truck-1 city-loc-3 package-9  -> m-load 52
124 unload truck-2 city-loc-5 package-13  -> m-unload 85
125 load truck-1 city-loc-3 package-6  -> m-load 29
126 load truck-0 city-loc-2 package-1  -> m-load 8
127 noop truck-1 city-loc-3  -> __UNIQUE-replacement_42 20
128 load truck-0 city-loc-6 package-11  -> m-load 61
129 unload truck-3 city-loc-1 package-0  -> m-unload 5
130 noop truck-1 city-loc-3  -> __UNIQUE-replacement_44 28
131 get-to truck-0 city-loc-4  -> m-drive-to-via 92 69
132 unload truck-1 city-loc-3 package-4  -> m-unload 23
133 noop truck-1 city-loc-3  -> __UNIQUE-replacement_54 16
134 unload truck-3 city-loc-0 package-7  -> m-unload 40
135 get-to truck-0 city-loc-4  -> m-drive-to 62
136 unload truck-0 city-loc-7 package-11  -> m-unload 66
137 get-to truck-0 city-loc-5  -> m-drive-to-via 153 10
138 get-to truck-0 city-loc-2  -> m-drive-to-via 118 42
139 get-to truck-3 city-loc-2  -> m-drive-to-via 161 38
140 unload truck-1 city-loc-3 package-9  -> m-unload 54
141 get-to truck-2 city-loc-5  -> m-drive-to-via 90 84
142 get-to truck-2 city-loc-7  -> m-drive-to-via 111 79
143 get-to truck-0 city-loc-2  -> m-drive-to-via 120 7
144 load truck-1 city-loc-3 package-4  -> m-load 21
145 noop truck-1 city-loc-3  -> __UNIQUE-replacement_52 55
146 get-to truck-0 city-loc-4  -> m-drive-to 46
147 get-to truck-3 city-loc-0  -> m-drive-to-via 139 39
148 get-to truck-0 city-loc-2  -> m-drive-to-via 135 63
149 get-to truck-3 city-loc-8  -> m-drive-to-via 165 35
150 noop truck-1 city-loc-3  -> __UNIQUE-replacement_55 18
151 get-to truck-2 city-loc-7  -> m-drive-to 77
152 deliver package-1 city-loc-5  -> m-deliver 143 126 137 177
153 get-to truck-0 city-loc-0  -> m-drive-to 9
154 noop truck-1 city-loc-3  -> __UNIQUE-replacement_49 53
155 noop truck-1 city-loc-3  -> __UNIQUE-replacement_50 12
156 load truck-3 city-loc-2 package-0  -> m-load 2
157 unload truck-0 city-loc-2 package-12  -> m-unload 76
158 get-to truck-0 city-loc-0  -> m-drive-to-via 100 74
159 load truck-1 city-loc-3 package-2  -> m-load 13
160 unload truck-1 city-loc-3 package-2  -> m-unload 15
161 get-to truck-3 city-loc-4  -> m-drive-to 37
162 get-to truck-3 city-loc-4  -> m-i-am-there 0
163 noop truck-1 city-loc-3  -> __UNIQUE-replacement_53 57
164 __choicelessATCompilation__top_1  -> <<<<<<<<<<<<<<<<<<<<<__top_1;deliver[package-4,city-loc-3];m-deliver;4;0,1,2,3,-1,-2,-3,-4,5,6,7,8,9,10,11,12,13>;deliver[package-6,city-loc-3];m-deliver;9;0,1,2,3,4,5,6,7,8,-1,-2,-3,-4,10,11,12,13,14,15,16>;deliver[package-5,city-loc-3];m-deliver;8;0,1,2,3,4,5,6,7,-1,-2,-3,-4,9,10,11,12,13,14,15,16,17,18,19>;deliver[package-9,city-loc-3];m-deliver;18;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,-1,-2,-3,-4,19,20,21,22>;deliver[package-2,city-loc-3];m-deliver;2;0,1,-1,-2,-3,-4,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25>;deliver[package-10,city-loc-3];m-deliver;25;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,-1,-2,-3,-4,26,27,28>;deliver[package-3,city-loc-3];m-deliver;6;0,1,2,3,4,5,-1,-2,-3,-4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31>;get-to[truck-1,city-loc-3];m-i-am-there;10;0,1,2,3,4,5,6,7,8,9,-1,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;12;0,1,2,3,4,5,6,7,8,9,10,11,-1,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;18;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,-1,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;20;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,-1,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;14;0,1,2,3,4,5,6,7,8,9,10,11,12,13,-1,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;16;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,-1,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;24;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,-1,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;26;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;2;0,1,-1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;4;0,1,2,3,-1,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;28;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,-1,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;30;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,-1,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;6;0,1,2,3,4,5,-1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;8;0,1,2,3,4,5,6,7,-1,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34> 112 152 155 159 108 160 133 89 150 170 127 144 171 132 104 119 121 117 130 125 166 174 95 106 87 123 154 140 145 175 163 86 110 105 172
165 get-to truck-3 city-loc-4  -> m-drive-to-via 99 34
166 noop truck-1 city-loc-3  -> __UNIQUE-replacement_45 30
167 get-to truck-0 city-loc-4  -> m-drive-to 59
168 load truck-2 city-loc-7 package-13  -> m-load 80
169 get-to truck-0 city-loc-8  -> m-drive-to-via 173 49
170 unload truck-1 city-loc-3 package-3  -> m-unload 19
171 noop truck-1 city-loc-3  -> __UNIQUE-replacement_43 22
172 deliver package-13 city-loc-5  -> m-deliver 142 168 141 124
173 get-to truck-0 city-loc-4  -> m-drive-to-via 88 48
174 unload truck-1 city-loc-3 package-6  -> m-unload 31
175 load truck-1 city-loc-3 package-10  -> m-load 56
176 get-to truck-0 city-loc-6  -> m-drive-to-via 167 60
177 unload truck-0 city-loc-5 package-1  -> m-unload 11
178 load truck-0 city-loc-6 package-12  -> m-load 71
179 get-to truck-3 city-loc-2  -> m-drive-to-via 162 1

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 7.532 MEMPEAK_KBS 309918.72
