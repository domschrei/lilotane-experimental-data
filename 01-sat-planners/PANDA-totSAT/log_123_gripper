PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/gripper/domain.hddl instances/gripper/p11.hddl"


Planner Configuration
=====================
Domain: instances/gripper/domain.hddl
Problem: instances/gripper/p11.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p11.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 28
Compiling negative preconditions ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 28
Compiling split parameters ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 28
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 28
Grounded planning graph ... done in 215ms.
	Number of Grounded Actions 177
	Number of Grounded Literals 100
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 28
Two Way TDG ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 28
Grounding ... done.
	number of abstract tasks = 14
	number of tasks = 190
	number of decomposition methods = 100
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 14
	number of tasks = 190
	number of decomposition methods = 100
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 70ms.
	Number of Grounded Actions 176
	Number of Grounded Literals 100
	number of abstract tasks = 14
	number of tasks = 190
	number of decomposition methods = 100
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 14
	number of tasks = 190
	number of decomposition methods = 100
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 14
	number of tasks = 190
	number of decomposition methods = 100
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 15
	number of tasks = 191
	number of decomposition methods = 101
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 15
	number of tasks = 191
	number of decomposition methods = 101
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 29ms.
	Number of Grounded Actions 176
	Number of Grounded Literals 100
	number of abstract tasks = 15
	number of tasks = 191
	number of decomposition methods = 101
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 191
	number of decomposition methods = 101
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 15
	number of tasks = 191
	number of decomposition methods = 101
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 15
	number of tasks = 191
	number of decomposition methods = 101
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 15
	number of tasks = 191
	number of decomposition methods = 101
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 15
	number of tasks = 191
	number of decomposition methods = 101
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 176
	number of constants = 0
Tasks 176 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773631ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 103 will abort at 9223372036854773589
done
initial PDT has 96 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 96 leafs
SHOP LEAFS 24
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 14850
Size 14850 at 0/176
Size 794
Size 794 at 0/176
Size 746
Size 746 at 0/176
Size 746
Invariant time: 0.118
Number of invariants: 746
Invariant Clauses 72362
NUMBER OF CLAUSES 95026
NUMBER OF STATE CLAUSES 92706
NUMBER OF DECOMPOSITION CLAUSES 2320
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.56% 2.44% 0.0% 
NUMBER OF PATHS 96
Starting cryptominisat
Setting starttime of solver to 1603876522576
Command exited with non-zero status 10
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_5;1,43 43 m3_goto
5;1 108 pathaction!2_5;1,133
Consider method^1_9,97 97 m0_move_two_balls
9 20 pathaction!1_9,5
Consider method^2_9;1,43 43 m3_goto
9;1 15 pathaction!2_9;1,133
Consider method^2_7;1,43 43 m3_goto
7;1 12 pathaction!2_7;1,133
Consider method^1_5,75 75 m0_move_two_balls
5 113 pathaction!1_5,11
Consider method^2_2;1,43 43 m3_goto
2;1 109 pathaction!2_2;1,133
Consider method^2_8;1,43 43 m3_goto
8;1 36 pathaction!2_8;1,133
Consider method^1_6,32 32 m0_move_two_balls
6 91 pathaction!1_6,8
Consider method^1_3,82 82 m0_move_two_balls
3 105 pathaction!1_3,1
Consider method^1_2,9 9 m0_move_two_balls
2 1 pathaction!1_2,4
Consider method^2_11;1,43 43 m3_goto
11;1 16 pathaction!2_11;1,133
Consider method^1_10,4 4 m0_move_two_balls
10 76 pathaction!1_10,2
Consider method^1_4,18 18 m0_move_two_balls
4 67 pathaction!1_4,9
Consider method^1_11,8 8 m0_move_two_balls
11 98 pathaction!1_11,10
Consider method^2_6;1,43 43 m3_goto
6;1 54 pathaction!2_6;1,133
Consider method^1_8,76 76 m0_move_two_balls
8 31 pathaction!1_8,7
Consider method^2_0;1,39 39 m2_goto
0;1 59 pathaction!2_0;1,133
Consider method^2_10;1,43 43 m3_goto
10;1 11 pathaction!2_10;1,133
Consider method^1_1,93 93 m0_move_two_balls
1 62 pathaction!1_1,0
Consider method^2_3;1,43 43 m3_goto
3;1 41 pathaction!2_3;1,133
Consider method^1_7,42 42 m0_move_two_balls
7 5 pathaction!1_7,6
Consider method^2_4;1,43 43 m3_goto
4;1 18 pathaction!2_4;1,133
Consider method^2_1;1,43 43 m3_goto
1;1 23 pathaction!2_1;1,133
Consider method^1_0,6 6 m0_move_two_balls
0 72 pathaction!1_0,3
Consider method^0_,100 100 __top_1
 87 pathaction!0_,190


CHECKING primitive solution of length 96 ...
true 101 __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2;]
true 82 __method_precondition_m2_goto_2_precondition[rooma;]
true 70 nop[;]
true 104 pick[ball1,rooma,right;]
true 117 pick[ball2,rooma,left;]
true 66 move[rooma,roomb;]
true 49 drop[ball1,roomb,right;]
true 9 drop[ball2,roomb,left;]
true 78 __method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4;]
true 90 __method_precondition_m3_goto_3_precondition[roomb;]
true 102 move[roomb,rooma;]
true 73 pick[ball3,rooma,left;]
true 85 pick[ball4,rooma,right;]
true 29 move[rooma,roomb;]
true 53 drop[ball3,roomb,left;]
true 69 drop[ball4,roomb,right;]
true 115 __method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6;]
true 89 __method_precondition_m3_goto_3_precondition[roomb;]
true 48 move[roomb,rooma;]
true 77 pick[ball5,rooma,right;]
true 74 pick[ball6,rooma,left;]
true 33 move[rooma,roomb;]
true 55 drop[ball5,roomb,right;]
true 25 drop[ball6,roomb,left;]
true 26 __method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8;]
true 21 __method_precondition_m3_goto_3_precondition[roomb;]
true 61 move[roomb,rooma;]
true 119 pick[ball7,rooma,left;]
true 71 pick[ball8,rooma,right;]
true 79 move[rooma,roomb;]
true 22 drop[ball7,roomb,left;]
true 112 drop[ball8,roomb,right;]
true 56 __method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10;]
true 40 __method_precondition_m3_goto_3_precondition[roomb;]
true 93 move[roomb,rooma;]
true 6 pick[ball9,rooma,left;]
true 37 pick[ball10,rooma,right;]
true 103 move[rooma,roomb;]
true 118 drop[ball9,roomb,left;]
true 63 drop[ball10,roomb,right;]
true 43 __method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12;]
true 116 __method_precondition_m3_goto_3_precondition[roomb;]
true 19 move[roomb,rooma;]
true 28 pick[ball11,rooma,left;]
true 0 pick[ball12,rooma,right;]
true 17 move[rooma,roomb;]
true 107 drop[ball11,roomb,left;]
true 4 drop[ball12,roomb,right;]
true 114 __method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14;]
true 75 __method_precondition_m3_goto_3_precondition[roomb;]
true 8 move[roomb,rooma;]
true 34 pick[ball13,rooma,left;]
true 50 pick[ball14,rooma,right;]
true 2 move[rooma,roomb;]
true 58 drop[ball13,roomb,left;]
true 95 drop[ball14,roomb,right;]
true 14 __method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16;]
true 38 __method_precondition_m3_goto_3_precondition[roomb;]
true 111 move[roomb,rooma;]
true 96 pick[ball15,rooma,right;]
true 42 pick[ball16,rooma,left;]
true 86 move[rooma,roomb;]
true 3 drop[ball15,roomb,right;]
true 92 drop[ball16,roomb,left;]
true 60 __method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18;]
true 24 __method_precondition_m3_goto_3_precondition[roomb;]
true 7 move[roomb,rooma;]
true 110 pick[ball17,rooma,right;]
true 39 pick[ball18,rooma,left;]
true 30 move[rooma,roomb;]
true 68 drop[ball17,roomb,right;]
true 51 drop[ball18,roomb,left;]
true 57 __method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20;]
true 44 __method_precondition_m3_goto_3_precondition[roomb;]
true 45 move[roomb,rooma;]
true 88 pick[ball19,rooma,right;]
true 64 pick[ball20,rooma,left;]
true 13 move[rooma,roomb;]
true 84 drop[ball19,roomb,right;]
true 99 drop[ball20,roomb,left;]
true 32 __method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22;]
true 46 __method_precondition_m3_goto_3_precondition[roomb;]
true 106 move[roomb,rooma;]
true 47 pick[ball21,rooma,right;]
true 52 pick[ball22,rooma,left;]
true 10 move[rooma,roomb;]
true 94 drop[ball21,roomb,right;]
true 35 drop[ball22,roomb,left;]
true 80 __method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24;]
true 65 __method_precondition_m3_goto_3_precondition[roomb;]
true 120 move[roomb,rooma;]
true 83 pick[ball23,rooma,left;]
true 100 pick[ball24,rooma,right;]
true 27 move[rooma,roomb;]
true 81 drop[ball23,roomb,left;]
true 97 drop[ball24,roomb,right;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 168419376
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 100
number of actions                    = 191
number of abstract actions           = 15
number of primitive actions          = 176
number of methods                    = 101
number of primitive shop actions     = 28
number of primitive non-shop actions = 148
size of largest method               = 12
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 20074
number of clauses               = 95026
average size of clauses         = 2.0068928503777914
number of assert                = 28
number of horn                  = 94425
K offset                        = 0
K chosen value                  = 3
state formula                   = 92706
method children clauses         = 0
number of paths                 = 96
maximum plan length             = 96
number of decomposition clauses = 2320
number of ordering clauses      = 0
number of state clauses         = 92706
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 3784
============ parsing ============
total                         = 917
file parser                   = 527
sort expansion                = 123
closed world assumption       = 92
inherit preconditions         = 0
shop methods                  = 15
eliminate identical variables = 68
strip domain of hybridity     = 21
flatten formula               = 68
============ preprocessing ============
total                                      = 1123
compile negative preconditions             = 24
compile unit methods                       = 0
split parameter                            = 43
expand choiceless abstract tasks           = 0
compile methods with identical tasks       = 3
removing unnecessary predicates            = 9
lifted reachabiltiy analysis               = 45
grounded planning graph analysis           = 453
grounded task decomposition graph analysis = 405
grounding                                  = 132
create artificial top task                 = 1
============ search preparation ============
compute state invariants = 194
============ sat ============
total                                        = 1044
generate formula                             = 797
generate path decomposition tree             = 112
normalise path decomposition tree            = 30
sog optimisation                             = 37
translate path decomposition tree to clauses = 130
generate state formula                       = 790
generate state invariant formula             = 85
transform to DIMACS                          = 109
SAT solver                                   = 30
SAT solver for K=0003                        = 30

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="176";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="15";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="168419376";"40 sat:20:state formula"="92706";"40 sat:01:number of variables"="20074";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="96";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="101";"30 problem:07:number of primitive shop actions"="28";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="191";"30 problem:08:number of primitive non-shop actions"="148";"30 problem:02:number of predicates"="100";"40 sat:03:number of horn"="94425";"40 sat:15:K chosen value"="3";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="12";"40 sat:03:average size of clauses"="2.0068928503777914";"40 sat:02:number of clauses"="95026";"40 sat:50:number of state clauses"="92706";"40 sat:03:number of assert"="28";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="96";"40 sat:50:number of decomposition clauses"="2320";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="527";"01 parsing:08:flatten formula"="68";"40 sat:00:total"="1044";"40 sat:16:generate state formula"="790";"40 sat:20:transform to DIMACS"="109";"40 sat:11:generate path decomposition tree"="112";"02 preprocessing:07:compile methods with identical tasks"="3";"01 parsing:07:strip domain of hybridity"="21";"02 preprocessing:08:removing unnecessary predicates"="9";"01 parsing:03:closed world assumption"="92";"02 preprocessing:11:lifted reachabiltiy analysis"="45";"01 parsing:02:sort expansion"="123";"40 sat:12:normalise path decomposition tree"="30";"40 sat:40:SAT solver"="30";"01 parsing:00:total"="917";"40 sat:10:generate formula"="797";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="24";"00 total:00:total"="3784";"40 sat:13:sog optimisation"="37";"02 preprocessing:12:grounded planning graph analysis"="453";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="405";"02 preprocessing:04:split parameter"="43";"01 parsing:05:shop methods"="15";"10 search preparation:02:compute state invariants"="194";"01 parsing:06:eliminate identical variables"="68";"40 sat:15:translate path decomposition tree to clauses"="130";"02 preprocessing:05:expand choiceless abstract tasks"="0";"40 sat:41:SAT solver for K=0003"="30";"40 sat:17:generate state invariant formula"="85";"02 preprocessing:00:total"="1123";"02 preprocessing:99:create artificial top task"="1";"02 preprocessing:84:grounding"="132"
#!verify __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2];__method_precondition_m2_goto_2_precondition[rooma];nop[];pick[ball1,rooma,right];pick[ball2,rooma,left];move[rooma,roomb];drop[ball1,roomb,right];drop[ball2,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball3,rooma,left];pick[ball4,rooma,right];move[rooma,roomb];drop[ball3,roomb,left];drop[ball4,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball5,rooma,right];pick[ball6,rooma,left];move[rooma,roomb];drop[ball5,roomb,right];drop[ball6,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball7,rooma,left];pick[ball8,rooma,right];move[rooma,roomb];drop[ball7,roomb,left];drop[ball8,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball9,rooma,left];pick[ball10,rooma,right];move[rooma,roomb];drop[ball9,roomb,left];drop[ball10,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball11,rooma,left];pick[ball12,rooma,right];move[rooma,roomb];drop[ball11,roomb,left];drop[ball12,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball13,rooma,left];pick[ball14,rooma,right];move[rooma,roomb];drop[ball13,roomb,left];drop[ball14,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball15,rooma,right];pick[ball16,rooma,left];move[rooma,roomb];drop[ball15,roomb,right];drop[ball16,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball17,rooma,right];pick[ball18,rooma,left];move[rooma,roomb];drop[ball17,roomb,right];drop[ball18,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball19,rooma,right];pick[ball20,rooma,left];move[rooma,roomb];drop[ball19,roomb,right];drop[ball20,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball21,rooma,right];pick[ball22,rooma,left];move[rooma,roomb];drop[ball21,roomb,right];drop[ball22,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball23,rooma,left];pick[ball24,rooma,right];move[rooma,roomb];drop[ball23,roomb,left];drop[ball24,roomb,right]
==>
0 __method_precondition_m0_move_two_balls_0_precondition ball1 rooma ball2 
1 __method_precondition_m2_goto_2_precondition rooma 
2 nop  
3 pick ball1 rooma right 
4 pick ball2 rooma left 
5 move rooma roomb 
6 drop ball1 roomb right 
7 drop ball2 roomb left 
8 __method_precondition_m0_move_two_balls_0_precondition ball3 rooma ball4 
9 __method_precondition_m3_goto_3_precondition roomb 
10 move roomb rooma 
11 pick ball3 rooma left 
12 pick ball4 rooma right 
13 move rooma roomb 
14 drop ball3 roomb left 
15 drop ball4 roomb right 
16 __method_precondition_m0_move_two_balls_0_precondition ball5 rooma ball6 
17 __method_precondition_m3_goto_3_precondition roomb 
18 move roomb rooma 
19 pick ball5 rooma right 
20 pick ball6 rooma left 
21 move rooma roomb 
22 drop ball5 roomb right 
23 drop ball6 roomb left 
24 __method_precondition_m0_move_two_balls_0_precondition ball7 rooma ball8 
25 __method_precondition_m3_goto_3_precondition roomb 
26 move roomb rooma 
27 pick ball7 rooma left 
28 pick ball8 rooma right 
29 move rooma roomb 
30 drop ball7 roomb left 
31 drop ball8 roomb right 
32 __method_precondition_m0_move_two_balls_0_precondition ball9 rooma ball10 
33 __method_precondition_m3_goto_3_precondition roomb 
34 move roomb rooma 
35 pick ball9 rooma left 
36 pick ball10 rooma right 
37 move rooma roomb 
38 drop ball9 roomb left 
39 drop ball10 roomb right 
40 __method_precondition_m0_move_two_balls_0_precondition ball11 rooma ball12 
41 __method_precondition_m3_goto_3_precondition roomb 
42 move roomb rooma 
43 pick ball11 rooma left 
44 pick ball12 rooma right 
45 move rooma roomb 
46 drop ball11 roomb left 
47 drop ball12 roomb right 
48 __method_precondition_m0_move_two_balls_0_precondition ball13 rooma ball14 
49 __method_precondition_m3_goto_3_precondition roomb 
50 move roomb rooma 
51 pick ball13 rooma left 
52 pick ball14 rooma right 
53 move rooma roomb 
54 drop ball13 roomb left 
55 drop ball14 roomb right 
56 __method_precondition_m0_move_two_balls_0_precondition ball15 rooma ball16 
57 __method_precondition_m3_goto_3_precondition roomb 
58 move roomb rooma 
59 pick ball15 rooma right 
60 pick ball16 rooma left 
61 move rooma roomb 
62 drop ball15 roomb right 
63 drop ball16 roomb left 
64 __method_precondition_m0_move_two_balls_0_precondition ball17 rooma ball18 
65 __method_precondition_m3_goto_3_precondition roomb 
66 move roomb rooma 
67 pick ball17 rooma right 
68 pick ball18 rooma left 
69 move rooma roomb 
70 drop ball17 roomb right 
71 drop ball18 roomb left 
72 __method_precondition_m0_move_two_balls_0_precondition ball19 rooma ball20 
73 __method_precondition_m3_goto_3_precondition roomb 
74 move roomb rooma 
75 pick ball19 rooma right 
76 pick ball20 rooma left 
77 move rooma roomb 
78 drop ball19 roomb right 
79 drop ball20 roomb left 
80 __method_precondition_m0_move_two_balls_0_precondition ball21 rooma ball22 
81 __method_precondition_m3_goto_3_precondition roomb 
82 move roomb rooma 
83 pick ball21 rooma right 
84 pick ball22 rooma left 
85 move rooma roomb 
86 drop ball21 roomb right 
87 drop ball22 roomb left 
88 __method_precondition_m0_move_two_balls_0_precondition ball23 rooma ball24 
89 __method_precondition_m3_goto_3_precondition roomb 
90 move roomb rooma 
91 pick ball23 rooma left 
92 pick ball24 rooma right 
93 move rooma roomb 
94 drop ball23 roomb left 
95 drop ball24 roomb right 
root 112
96 goto rooma  -> m3_goto 17 18
97 goto rooma  -> m3_goto 65 66
98 move_two_balls ball15 ball16 roomb  -> m0_move_two_balls 56 109 59 60 61 62 63
99 goto rooma  -> m3_goto 49 50
100 move_two_balls ball9 ball10 roomb  -> m0_move_two_balls 32 118 35 36 37 38 39
101 move_two_balls ball21 ball22 roomb  -> m0_move_two_balls 80 102 83 84 85 86 87
102 goto rooma  -> m3_goto 81 82
103 goto rooma  -> m3_goto 89 90
104 move_two_balls ball11 ball12 roomb  -> m0_move_two_balls 40 111 43 44 45 46 47
105 move_two_balls ball5 ball6 roomb  -> m0_move_two_balls 16 96 19 20 21 22 23
106 move_two_balls ball7 ball8 roomb  -> m0_move_two_balls 24 120 27 28 29 30 31
107 move_two_balls ball1 ball2 roomb  -> m0_move_two_balls 0 113 3 4 5 6 7
108 goto rooma  -> m3_goto 9 10
109 goto rooma  -> m3_goto 57 58
110 goto rooma  -> m3_goto 73 74
111 goto rooma  -> m3_goto 41 42
112 __artificialTopCompilation__top_1  -> __top_1 107 116 105 106 100 104 117 98 119 115 101 114
113 goto rooma  -> m2_goto 1 2
114 move_two_balls ball23 ball24 roomb  -> m0_move_two_balls 88 103 91 92 93 94 95
115 move_two_balls ball19 ball20 roomb  -> m0_move_two_balls 72 110 75 76 77 78 79
116 move_two_balls ball3 ball4 roomb  -> m0_move_two_balls 8 108 11 12 13 14 15
117 move_two_balls ball13 ball14 roomb  -> m0_move_two_balls 48 99 51 52 53 54 55
118 goto rooma  -> m3_goto 33 34
119 move_two_balls ball17 ball18 roomb  -> m0_move_two_balls 64 97 67 68 69 70 71
120 goto rooma  -> m3_goto 25 26

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 4.815 MEMPEAK_KBS 284678.144
