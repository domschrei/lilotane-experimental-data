PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile25.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile25.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile25.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Grounded planning graph ... done in 345ms.
	Number of Grounded Actions 600
	Number of Grounded Literals 209
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Grounding ... done.
	number of abstract tasks = 268
	number of tasks = 868
	number of decomposition methods = 884
	number of predicates = 209
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 268
	number of tasks = 868
	number of decomposition methods = 884
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 107ms.
	Number of Grounded Actions 600
	Number of Grounded Literals 168
	number of abstract tasks = 268
	number of tasks = 868
	number of decomposition methods = 884
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 268
	number of tasks = 868
	number of decomposition methods = 884
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 268
	number of tasks = 868
	number of decomposition methods = 884
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 54ms.
	Number of Grounded Actions 600
	Number of Grounded Literals 168
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 397
	number of tasks = 997
	number of decomposition methods = 1013
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 397
	number of tasks = 997
	number of decomposition methods = 1013
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Tasks 600 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772523ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854772391
done
initial PDT has 64 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 64 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 42084
Size 42083 at 0/600
Size 20299 at 500/600
Size 20258
Size 20257 at 0/600
Size 2863 at 500/600
Size 2861
Size 2861 at 0/600
Size 870 at 500/600
Size 870
Size 869 at 0/600
Size 687 at 500/600
Size 687
Size 686 at 0/600
Size 672 at 500/600
Size 672
Size 672 at 0/600
Size 672 at 500/600
Size 672
Invariant time: 0.409
Number of invariants: 672
Invariant Clauses 43680
NUMBER OF CLAUSES 77848
NUMBER OF STATE CLAUSES 68288
NUMBER OF DECOMPOSITION CLAUSES 9560
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 87.72% 12.280000000000001% 0.0% 
NUMBER OF PATHS 64
Starting cryptominisat
Setting starttime of solver to 1603884738867
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770740
done
initial PDT has 96 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 96 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 65184
NUMBER OF CLAUSES 154628
NUMBER OF STATE CLAUSES 105148
NUMBER OF DECOMPOSITION CLAUSES 49480
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 68.0% 32.0% 0.0% 
NUMBER OF PATHS 96
Starting cryptominisat
Setting starttime of solver to 1603884739865
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854769764
done
initial PDT has 155 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 155 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 104832
NUMBER OF CLAUSES 334448
NUMBER OF STATE CLAUSES 173948
NUMBER OF DECOMPOSITION CLAUSES 160500
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 52.01% 47.99% 0.0% 
NUMBER OF PATHS 155
Starting cryptominisat
Setting starttime of solver to 1603884741321
Command exited with non-zero status 20
0.37 0.00

Time command gave the following runtime for the solver: 370
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854767925
done
initial PDT has 214 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 214 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 144480
NUMBER OF CLAUSES 686032
NUMBER OF STATE CLAUSES 250124
NUMBER OF DECOMPOSITION CLAUSES 435908
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 36.46% 63.54% 0.0% 
NUMBER OF PATHS 214
Starting cryptominisat
Setting starttime of solver to 1603884743839
Command exited with non-zero status 10
0.81 0.01

Time command gave the following runtime for the solver: 820
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^4_3;0;0;0,749 749 m-drive-to
3;0;0;0 230 pathaction!4_3;0;0;0,591
Consider method^3_12;2;0,84 84 m-drive-to-via
12;2;0 28 pathaction!3_12;2;0,578
Consider method^4_10;2;0;0,703 703 m-drive-to
10;2;0;0 3 pathaction!4_10;2;0;0,605
Consider method^4_7;2;0;0,447 447 m-drive-to-via
7;2;0;0 276 pathaction!4_7;2;0;0,586
Consider method^3_14;2;0,70 70 m-drive-to-via
14;2;0 33 pathaction!3_14;2;0,590
Consider method^2_7;1,156 156 m-load
7;1 201 pathaction!2_7;1,685
Consider method^2_6;0,775 775 m-drive-to
6;0 291 pathaction!2_6;0,581
Consider method^3_6;2;0,871 871 m-drive-to
6;2;0 128 pathaction!3_6;2;0,597
Consider method^1_14,272 272 m-deliver
14 65 pathaction!1_14,549
Consider method^2_3;0,472 472 m-drive-to-via
3;0 172 pathaction!2_3;0,562
Consider method^3_11;2;0,935 935 m-drive-to-via
11;2;0 143 pathaction!3_11;2;0,581
Consider method^2_14;3,499 499 m-unload
14;3 69 pathaction!2_14;3,654
Consider method^2_4;2,509 509 m-drive-to-via
4;2 115 pathaction!2_4;2,575
Consider method^1_9,587 587 m-deliver
9 61 pathaction!1_9,554
Consider method^2_5;2,955 955 m-drive-to-via
5;2 278 pathaction!2_5;2,613
Consider method^3_5;2;0,819 819 m-drive-to-via
5;2;0 52 pathaction!3_5;2;0,559
Consider method^2_5;1,412 412 m-load
5;1 105 pathaction!2_5;1,799
Consider method^4_4;2;0;0,11 11 m-drive-to-via
4;2;0;0 86 pathaction!4_4;2;0;0,575
Consider method^2_11;0,676 676 m-drive-to-via
11;0 264 pathaction!2_11;0,565
Consider method^2_1;2,957 957 m-drive-to-via
1;2 9 pathaction!2_1;2,580
Consider method^2_13;0,602 602 m-drive-to-via
13;0 83 pathaction!2_13;0,587
Consider method^2_10;0,497 497 m-drive-to
10;0 101 pathaction!2_10;0,610
Consider method^2_6;1,370 370 m-load
6;1 290 pathaction!2_6;1,702
Consider method^3_3;0;0,13 13 m-drive-to-via
3;0;0 227 pathaction!3_3;0;0,573
Consider method^5_0;2;0;0;0,367 367 m-drive-to
0;2;0;0;0 124 pathaction!5_0;2;0;0;0,600
Consider method^2_15;0,957 957 m-drive-to-via
15;0 32 pathaction!2_15;0,580
Consider method^2_10;2,602 602 m-drive-to-via
10;2 161 pathaction!2_10;2,587
Consider method^1_11,281 281 m-deliver
11 71 pathaction!1_11,540
Consider method^2_0;3,549 549 m-unload
0;3 8 pathaction!2_0;3,629
Consider method^4_5;0;0;0,446 446 m-drive-to-via
5;0;0;0 93 pathaction!4_5;0;0;0,588
Consider method^2_2;3,128 128 m-unload
2;3 155 pathaction!2_2;3,675
Consider method^2_12;2,116 116 m-drive-to-via
12;2 111 pathaction!2_12;2,605
Consider method^4_3;2;0;0,603 603 m-drive-to
3;2;0;0 67 pathaction!4_3;2;0;0,573
Consider method^4_13;0;0;0,602 602 m-drive-to-via
13;0;0;0 92 pathaction!4_13;0;0;0,587
Consider method^1_4,728 728 m-deliver
4 174 pathaction!1_4,546
Consider method^2_14;2,2 2 m-drive-to-via
14;2 164 pathaction!2_14;2,601
Consider method^2_0;1,230 230 m-load
0;1 22 pathaction!2_0;1,697
Consider method^1_6,857 857 m-deliver
6 224 pathaction!1_6,551
Consider method^4_5;2;0;0,740 740 m-drive-to-via
5;2;0;0 178 pathaction!4_5;2;0;0,563
Consider method^2_4;0,933 933 m-drive-to-via
4;0 132 pathaction!2_4;0,599
Consider method^3_8;0;0,984 984 m-drive-to-via
8;0;0 180 pathaction!3_8;0;0,591
Consider method^4_11;0;0;0,226 226 m-drive-to-via
11;0;0;0 76 pathaction!4_11;0;0;0,581
Consider method^2_11;2,401 401 m-drive-to-via
11;2 57 pathaction!2_11;2,597
Consider method^4_14;2;0;0,115 115 m-drive-to-via
14;2;0;0 116 pathaction!4_14;2;0;0,609
Consider method^2_13;3,532 532 m-unload
13;3 106 pathaction!2_13;3,676
Consider method^5_4;2;0;0;0,566 566 m-drive-to
4;2;0;0;0 209 pathaction!5_4;2;0;0;0,583
Consider method^2_4;1,533 533 m-load
4;1 44 pathaction!2_4;1,738
Consider method^2_9;0,677 677 m-drive-to-via
9;0 192 pathaction!2_9;0,566
Consider method^5_5;2;0;0;0,645 645 m-drive-to
5;2;0;0;0 81 pathaction!5_5;2;0;0;0,582
Consider method^1_12,517 517 m-deliver
12 258 pathaction!1_12,550
Consider method^1_1,346 346 m-deliver
1 251 pathaction!1_1,542
Consider method^4_4;0;0;0,265 265 m-drive-to-via
4;0;0;0 193 pathaction!4_4;0;0;0,574
Consider method^3_5;0;0,183 183 m-drive-to-via
5;0;0 260 pathaction!3_5;0;0,576
Consider method^2_13;2,860 860 m-drive-to-via
13;2 27 pathaction!2_13;2,595
Consider method^2_4;3,354 354 m-unload
4;3 77 pathaction!2_4;3,666
Consider method^3_15;0;0,946 946 m-drive-to
15;0;0 148 pathaction!3_15;0;0,560
Consider method^2_10;3,632 632 m-unload
10;3 112 pathaction!2_10;3,679
Consider method^3_0;0;0,839 839 m-drive-to
0;0;0 268 pathaction!3_0;0;0,600
Consider method^1_0,735 735 m-deliver
0 228 pathaction!1_0,543
Consider method^5_7;2;0;0;0,622 622 m-drive-to
7;2;0;0;0 144 pathaction!5_7;2;0;0;0,573
Consider method^2_3;1,218 218 m-load
3;1 120 pathaction!2_3;1,722
Consider method^3_11;0;0,509 509 m-drive-to-via
11;0;0 127 pathaction!3_11;0;0,575
Consider method^2_11;1,31 31 m-load
11;1 149 pathaction!2_11;1,708
Consider method^2_12;0,314 314 m-drive-to
12;0 265 pathaction!2_12;0,610
Consider method^2_15;3,160 160 m-unload
15;3 204 pathaction!2_15;3,631
Consider method^2_14;1,494 494 m-load
14;1 66 pathaction!2_14;1,699
Consider method^3_7;2;0,765 765 m-drive-to-via
7;2;0 282 pathaction!3_7;2;0,571
Consider method^4_7;0;0;0,749 749 m-drive-to
7;0;0;0 199 pathaction!4_7;0;0;0,591
Consider method^4_1;2;0;0,822 822 m-drive-to
1;2;0;0 283 pathaction!4_1;2;0;0,600
Consider method^4_9;2;0;0,575 575 m-drive-to-via
9;2;0;0 24 pathaction!4_9;2;0;0,564
Consider method^4_12;2;0;0,703 703 m-drive-to
12;2;0;0 136 pathaction!4_12;2;0;0,605
Consider method^1_5,330 330 m-deliver
5 108 pathaction!1_5,553
Consider method^2_5;0,918 918 m-drive-to-via
5;0 195 pathaction!2_5;0,570
Consider method^2_7;2,295 295 m-drive-to-via
7;2 62 pathaction!2_7;2,562
Consider method^2_3;3,327 327 m-unload
3;3 50 pathaction!2_3;3,621
Consider method^2_7;3,807 807 m-unload
7;3 222 pathaction!2_7;3,620
Consider method^2_6;2,98 98 m-drive-to-via
6;2 262 pathaction!2_6;2,603
Consider method^4_13;2;0;0,818 818 m-i-am-there
13;2;0;0 191 pathaction!4_13;2;0;0,587
Consider method^5_11;0;0;0;0,459 459 m-drive-to
11;0;0;0;0 113 pathaction!5_11;0;0;0;0,597
Consider method^3_4;2;0,935 935 m-drive-to-via
4;2;0 51 pathaction!3_4;2;0,581
Consider method^3_2;0;0,688 688 m-drive-to
2;0;0 159 pathaction!3_2;0;0,560
Consider method^2_9;2,135 135 m-drive-to-via
9;2 82 pathaction!2_9;2,594
Consider method^3_7;0;0,13 13 m-drive-to-via
7;0;0 18 pathaction!3_7;0;0,573
Consider method^2_2;0,143 143 m-drive-to-via
2;0 242 pathaction!2_2;0,600
Consider method^2_12;3,321 321 m-unload
12;3 205 pathaction!2_12;3,668
Consider method^0_,1012 1012 __top_1
 194 pathaction!0_,868
Consider method^2_0;2,178 178 m-drive-to-via
0;2 247 pathaction!2_0;2,597
Consider method^2_14;0,460 460 m-drive-to
14;0 215 pathaction!2_14;0,610
Consider method^2_9;3,254 254 m-unload
9;3 170 pathaction!2_9;3,648
Consider method^2_1;1,73 73 m-load
1;1 26 pathaction!2_1;1,719
Consider method^4_9;0;0;0,575 575 m-drive-to-via
9;0;0;0 23 pathaction!4_9;0;0;0,564
Consider method^2_10;1,630 630 m-load
10;1 259 pathaction!2_10;1,778
Consider method^1_15,71 71 m-deliver
15 163 pathaction!1_15,544
Consider method^4_11;2;0;0,846 846 m-drive-to
11;2;0;0 122 pathaction!4_11;2;0;0,575
Consider method^2_1;3,326 326 m-unload
1;3 256 pathaction!2_1;3,645
Consider method^2_8;0,13 13 m-drive-to-via
8;0 213 pathaction!2_8;0,573
Consider method^2_0;0,265 265 m-drive-to-via
0;0 147 pathaction!2_0;0,574
Consider method^2_6;3,727 727 m-unload
6;3 281 pathaction!2_6;3,617
Consider method^3_9;2;0,944 944 m-drive-to-via
9;2;0 74 pathaction!3_9;2;0,569
Consider method^2_3;2,777 777 m-drive-to-via
3;2 84 pathaction!2_3;2,596
Consider method^5_1;0;0;0;0,222 222 m-drive-to
1;0;0;0;0 34 pathaction!5_1;0;0;0;0,589
Consider method^5_9;2;0;0;0,823 823 m-drive-to
9;2;0;0;0 273 pathaction!5_9;2;0;0;0,614
Consider method^5_4;0;0;0;0,817 817 m-drive-to
4;0;0;0;0 64 pathaction!5_4;0;0;0;0,600
Consider method^5_13;0;0;0;0,32 32 m-drive-to
13;0;0;0;0 139 pathaction!5_13;0;0;0;0,610
Consider method^1_10,455 455 m-deliver
10 4 pathaction!1_10,548
Consider method^2_5;3,49 49 m-unload
5;3 186 pathaction!2_5;3,624
Consider method^3_10;2;0,582 582 m-drive-to-via
10;2;0 38 pathaction!3_10;2;0,610
Consider method^3_8;2;0,245 245 m-drive-to
8;2;0 59 pathaction!3_8;2;0,586
Consider method^1_3,209 209 m-deliver
3 257 pathaction!1_3,547
Consider method^2_8;3,80 80 m-unload
8;3 102 pathaction!2_8;3,646
Consider method^4_8;0;0;0,40 40 m-drive-to-via
8;0;0;0 279 pathaction!4_8;0;0;0,614
Consider method^5_9;0;0;0;0,175 175 m-drive-to
9;0;0;0;0 219 pathaction!5_9;0;0;0;0,614
Consider method^3_13;0;0,929 929 m-drive-to-via
13;0;0 157 pathaction!3_13;0;0,610
Consider method^2_1;0,374 374 m-drive-to-via
1;0 37 pathaction!2_1;0,572
Consider method^2_15;2,688 688 m-drive-to
15;2 181 pathaction!2_15;2,560
Consider method^2_2;2,300 300 m-drive-to
2;2 287 pathaction!2_2;2,560
Consider method^4_0;2;0;0,683 683 m-drive-to-via
0;2;0;0 286 pathaction!4_0;2;0;0,592
Consider method^2_7;0,447 447 m-drive-to-via
7;0 168 pathaction!2_7;0,586
Consider method^1_13,213 213 m-deliver
13 217 pathaction!1_13,545
Consider method^3_4;0;0,731 731 m-drive-to-via
4;0;0 134 pathaction!3_4;0;0,615
Consider method^2_11;3,875 875 m-unload
11;3 16 pathaction!2_11;3,625
Consider method^4_1;0;0;0,421 421 m-drive-to-via
1;0;0;0 274 pathaction!4_1;0;0;0,597
Consider method^3_1;2;0,670 670 m-drive-to-via
1;2;0 156 pathaction!3_1;2;0,560
Consider method^2_8;1,972 972 m-load
8;1 253 pathaction!2_8;1,706
Consider method^1_8,878 878 m-deliver
8 48 pathaction!1_8,552
Consider method^2_15;1,302 302 m-load
15;1 41 pathaction!2_15;1,765
Consider method^2_2;1,797 797 m-load
2;1 198 pathaction!2_2;1,802
Consider method^2_13;1,395 395 m-load
13;1 10 pathaction!2_13;1,716
Consider method^2_12;1,905 905 m-load
12;1 73 pathaction!2_12;1,754
Consider method^1_2,724 724 m-deliver
2 140 pathaction!1_2,555
Consider method^3_1;0;0,98 98 m-drive-to-via
1;0;0 236 pathaction!3_1;0;0,603
Consider method^2_8;2,765 765 m-drive-to-via
8;2 14 pathaction!2_8;2,571
Consider method^3_13;2;0,929 929 m-drive-to-via
13;2;0 6 pathaction!3_13;2;0,610
Consider method^2_9;1,847 847 m-load
9;1 0 pathaction!2_9;1,733
Consider method^5_14;2;0;0;0,74 74 m-i-am-there
14;2;0;0;0 43 pathaction!5_14;2;0;0;0,610
Consider method^3_3;2;0,842 842 m-drive-to-via
3;2;0 239 pathaction!3_3;2;0,591
Consider method^5_8;0;0;0;0,679 679 m-drive-to
8;0;0;0;0 35 pathaction!5_8;0;0;0;0,571
Consider method^5_5;0;0;0;0,891 891 m-drive-to
5;0;0;0;0 254 pathaction!5_5;0;0;0;0,576
Consider method^3_0;2;0,176 176 m-drive-to-via
0;2;0 109 pathaction!3_0;2;0,603
Consider method^3_9;0;0,708 708 m-drive-to-via
9;0;0 31 pathaction!3_9;0;0,614
Consider method^1_7,185 185 m-deliver
7 123 pathaction!1_7,541


CHECKING primitive solution of length 124 ...
true 271 drive[truck-1,city-loc-12,city-loc-14;]
true 88 drive[truck-1,city-loc-14,city-loc-8;]
true 80 pick-up[truck-1,city-loc-8,package-0,capacity-1,capacity-2;]
true 223 drive[truck-1,city-loc-8,city-loc-14;]
true 133 drive[truck-1,city-loc-14,city-loc-12;]
true 45 drive[truck-1,city-loc-12,city-loc-5;]
true 21 drive[truck-1,city-loc-5,city-loc-3;]
true 171 drop[truck-1,city-loc-3,package-0,capacity-1,capacity-2;]
true 150 drive[truck-1,city-loc-3,city-loc-7;]
true 97 drive[truck-1,city-loc-7,city-loc-3;]
true 90 drive[truck-1,city-loc-3,city-loc-5;]
true 60 drive[truck-1,city-loc-5,city-loc-9;]
true 266 pick-up[truck-1,city-loc-9,package-1,capacity-1,capacity-2;]
true 141 drive[truck-1,city-loc-9,city-loc-14;]
true 142 drive[truck-1,city-loc-14,city-loc-11;]
true 216 drive[truck-1,city-loc-11,city-loc-0;]
true 284 drop[truck-1,city-loc-0,package-1,capacity-1,capacity-2;]
true 166 drive[truck-1,city-loc-0,city-loc-11;]
true 152 drive[truck-1,city-loc-11,city-loc-14;]
true 126 pick-up[truck-1,city-loc-14,package-2,capacity-1,capacity-2;]
true 252 drive[truck-1,city-loc-14,city-loc-11;]
true 129 drop[truck-1,city-loc-11,package-2,capacity-1,capacity-2;]
true 267 drive[truck-0,city-loc-0,city-loc-11;]
true 246 drive[truck-0,city-loc-11,city-loc-14;]
true 12 drive[truck-0,city-loc-14,city-loc-9;]
true 117 pick-up[truck-0,city-loc-9,package-3,capacity-1,capacity-2;]
true 55 drive[truck-0,city-loc-9,city-loc-14;]
true 183 drive[truck-0,city-loc-14,city-loc-11;]
true 203 drive[truck-0,city-loc-11,city-loc-0;]
true 98 drop[truck-0,city-loc-0,package-3,capacity-1,capacity-2;]
true 243 drive[truck-1,city-loc-11,city-loc-14;]
true 289 drive[truck-1,city-loc-14,city-loc-8;]
true 135 drive[truck-1,city-loc-8,city-loc-6;]
true 95 drive[truck-1,city-loc-6,city-loc-10;]
true 188 pick-up[truck-1,city-loc-10,package-4,capacity-1,capacity-2;]
true 173 drive[truck-1,city-loc-10,city-loc-1;]
true 158 drive[truck-1,city-loc-1,city-loc-4;]
true 176 drive[truck-1,city-loc-4,city-loc-2;]
true 78 drive[truck-1,city-loc-2,city-loc-4;]
true 189 drop[truck-1,city-loc-4,package-4,capacity-1,capacity-2;]
true 237 drive[truck-3,city-loc-13,city-loc-4;]
true 46 drive[truck-3,city-loc-4,city-loc-2;]
true 214 drive[truck-3,city-loc-2,city-loc-4;]
true 114 drive[truck-3,city-loc-4,city-loc-1;]
true 89 pick-up[truck-3,city-loc-1,package-5,capacity-1,capacity-2;]
true 261 drive[truck-3,city-loc-1,city-loc-7;]
true 72 drive[truck-3,city-loc-7,city-loc-3;]
true 280 drive[truck-3,city-loc-3,city-loc-11;]
true 39 drive[truck-3,city-loc-11,city-loc-0;]
true 54 drop[truck-3,city-loc-0,package-5,capacity-1,capacity-2;]
true 197 drive[truck-1,city-loc-4,city-loc-2;]
true 151 pick-up[truck-1,city-loc-2,package-6,capacity-1,capacity-2;]
true 70 drive[truck-1,city-loc-2,city-loc-3;]
true 17 drive[truck-1,city-loc-3,city-loc-5;]
true 119 drop[truck-1,city-loc-5,package-6,capacity-1,capacity-2;]
true 231 drive[truck-0,city-loc-0,city-loc-11;]
true 225 drive[truck-0,city-loc-11,city-loc-14;]
true 202 drive[truck-0,city-loc-14,city-loc-12;]
true 19 pick-up[truck-0,city-loc-12,package-7,capacity-1,capacity-2;]
true 206 drive[truck-0,city-loc-12,city-loc-14;]
true 263 drive[truck-0,city-loc-14,city-loc-12;]
true 218 drive[truck-0,city-loc-12,city-loc-5;]
true 233 drive[truck-0,city-loc-5,city-loc-9;]
true 184 drop[truck-0,city-loc-9,package-7,capacity-1,capacity-2;]
true 235 drive[truck-0,city-loc-9,city-loc-5;]
true 187 drive[truck-0,city-loc-5,city-loc-3;]
true 121 drive[truck-0,city-loc-3,city-loc-11;]
true 40 drive[truck-0,city-loc-11,city-loc-14;]
true 53 pick-up[truck-0,city-loc-14,package-8,capacity-1,capacity-2;]
true 285 drive[truck-0,city-loc-14,city-loc-12;]
true 277 drive[truck-0,city-loc-12,city-loc-5;]
true 56 drop[truck-0,city-loc-5,package-8,capacity-1,capacity-2;]
true 104 drive[truck-0,city-loc-5,city-loc-3;]
true 99 drive[truck-0,city-loc-3,city-loc-2;]
true 49 drive[truck-0,city-loc-2,city-loc-3;]
true 272 drive[truck-0,city-loc-3,city-loc-7;]
true 200 pick-up[truck-0,city-loc-7,package-9,capacity-1,capacity-2;]
true 248 drive[truck-0,city-loc-7,city-loc-3;]
true 131 drive[truck-0,city-loc-3,city-loc-2;]
true 20 drive[truck-0,city-loc-2,city-loc-4;]
true 162 drive[truck-0,city-loc-4,city-loc-6;]
true 58 drop[truck-0,city-loc-6,package-9,capacity-1,capacity-2;]
true 30 drive[truck-2,city-loc-7,city-loc-3;]
true 165 pick-up[truck-2,city-loc-3,package-10,capacity-1,capacity-2;]
true 85 drive[truck-2,city-loc-3,city-loc-11;]
true 179 drive[truck-2,city-loc-11,city-loc-3;]
true 211 drive[truck-2,city-loc-3,city-loc-5;]
true 250 drop[truck-2,city-loc-5,package-10,capacity-1,capacity-2;]
true 110 drive[truck-1,city-loc-5,city-loc-3;]
true 146 drive[truck-1,city-loc-3,city-loc-2;]
true 118 drive[truck-1,city-loc-2,city-loc-4;]
true 177 drive[truck-1,city-loc-4,city-loc-13;]
true 11 pick-up[truck-1,city-loc-13,package-11,capacity-1,capacity-2;]
true 249 drive[truck-1,city-loc-13,city-loc-4;]
true 269 drive[truck-1,city-loc-4,city-loc-2;]
true 107 drive[truck-1,city-loc-2,city-loc-3;]
true 42 drop[truck-1,city-loc-3,package-11,capacity-1,capacity-2;]
true 153 drive[truck-2,city-loc-5,city-loc-3;]
true 226 pick-up[truck-2,city-loc-3,package-12,capacity-1,capacity-2;]
true 63 drive[truck-2,city-loc-3,city-loc-11;]
true 91 drive[truck-2,city-loc-11,city-loc-0;]
true 167 drive[truck-2,city-loc-0,city-loc-11;]
true 241 drop[truck-2,city-loc-11,package-12,capacity-1,capacity-2;]
true 182 drive[truck-2,city-loc-11,city-loc-3;]
true 154 drive[truck-2,city-loc-3,city-loc-5;]
true 212 drive[truck-2,city-loc-5,city-loc-3;]
true 36 drive[truck-2,city-loc-3,city-loc-5;]
true 238 pick-up[truck-2,city-loc-5,package-13,capacity-1,capacity-2;]
true 5 noop[truck-2,city-loc-5;]
true 185 drive[truck-2,city-loc-5,city-loc-3;]
true 75 drive[truck-2,city-loc-3,city-loc-2;]
true 29 drop[truck-2,city-loc-2,package-13,capacity-1,capacity-2;]
true 125 drive[truck-2,city-loc-2,city-loc-3;]
true 103 pick-up[truck-2,city-loc-3,package-14,capacity-1,capacity-2;]
true 245 noop[truck-2,city-loc-3;]
true 169 drive[truck-2,city-loc-3,city-loc-7;]
true 208 drive[truck-2,city-loc-7,city-loc-1;]
true 13 drive[truck-2,city-loc-1,city-loc-10;]
true 145 drop[truck-2,city-loc-10,package-14,capacity-1,capacity-2;]
true 175 drive[truck-1,city-loc-3,city-loc-11;]
true 288 drive[truck-1,city-loc-11,city-loc-0;]
true 190 pick-up[truck-1,city-loc-0,package-15,capacity-1,capacity-2;]
true 47 drive[truck-1,city-loc-0,city-loc-11;]
true 232 drop[truck-1,city-loc-11,package-15,capacity-1,capacity-2;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 334774296
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 168
number of actions                    = 997
number of abstract actions           = 397
number of primitive actions          = 600
number of methods                    = 1013
number of primitive shop actions     = 0
number of primitive non-shop actions = 600
size of largest method               = 16
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 118578
number of clauses               = 686032
average size of clauses         = 3.2108750029153157
number of assert                = 25
number of horn                  = 638340
K offset                        = 0
K chosen value                  = 6
state formula                   = 250124
method children clauses         = 0
number of paths                 = 214
maximum plan length             = 214
number of decomposition clauses = 435908
number of ordering clauses      = 0
number of state clauses         = 250124
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 11672
============ parsing ============
total                         = 964
file parser                   = 541
sort expansion                = 192
closed world assumption       = 115
inherit preconditions         = 0
shop methods                  = 1
eliminate identical variables = 73
strip domain of hybridity     = 2
flatten formula               = 40
============ preprocessing ============
total                                      = 2148
compile negative preconditions             = 60
compile unit methods                       = 0
split parameter                            = 31
expand choiceless abstract tasks           = 1
compile methods with identical tasks       = 57
removing unnecessary predicates            = 256
lifted reachabiltiy analysis               = 64
grounded planning graph analysis           = 760
grounded task decomposition graph analysis = 644
grounding                                  = 245
create artificial top task                 = 18
============ search preparation ============
compute state invariants = 581
============ sat ============
total                                        = 6770
generate formula                             = 4587
generate path decomposition tree             = 595
normalise path decomposition tree            = 260
sog optimisation                             = 120
translate path decomposition tree to clauses = 1443
generate state formula                       = 4490
generate state invariant formula             = 275
transform to DIMACS                          = 566
SAT solver                                   = 1250
SAT solver for K=0003                        = 20
SAT solver for K=0004                        = 40
SAT solver for K=0005                        = 370
SAT solver for K=0006                        = 820

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="600";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="397";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="334774296";"40 sat:20:state formula"="250124";"40 sat:01:number of variables"="118578";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="214";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="1013";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="997";"30 problem:08:number of primitive non-shop actions"="600";"30 problem:02:number of predicates"="168";"40 sat:03:number of horn"="638340";"40 sat:15:K chosen value"="6";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="16";"40 sat:03:average size of clauses"="3.2108750029153157";"40 sat:02:number of clauses"="686032";"40 sat:50:number of state clauses"="250124";"40 sat:03:number of assert"="25";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="214";"40 sat:50:number of decomposition clauses"="435908";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="541";"01 parsing:08:flatten formula"="40";"40 sat:41:SAT solver for K=0004"="40";"40 sat:00:total"="6770";"40 sat:16:generate state formula"="4490";"40 sat:20:transform to DIMACS"="566";"40 sat:11:generate path decomposition tree"="595";"02 preprocessing:07:compile methods with identical tasks"="57";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="256";"01 parsing:03:closed world assumption"="115";"02 preprocessing:11:lifted reachabiltiy analysis"="64";"01 parsing:02:sort expansion"="192";"40 sat:12:normalise path decomposition tree"="260";"40 sat:40:SAT solver"="1250";"01 parsing:00:total"="964";"40 sat:10:generate formula"="4587";"40 sat:41:SAT solver for K=0005"="370";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="60";"00 total:00:total"="11672";"40 sat:13:sog optimisation"="120";"02 preprocessing:12:grounded planning graph analysis"="760";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="644";"40 sat:41:SAT solver for K=0006"="820";"02 preprocessing:04:split parameter"="31";"01 parsing:05:shop methods"="1";"10 search preparation:02:compute state invariants"="581";"01 parsing:06:eliminate identical variables"="73";"40 sat:15:translate path decomposition tree to clauses"="1443";"02 preprocessing:05:expand choiceless abstract tasks"="1";"40 sat:41:SAT solver for K=0003"="20";"40 sat:17:generate state invariant formula"="275";"02 preprocessing:00:total"="2148";"02 preprocessing:99:create artificial top task"="18";"02 preprocessing:84:grounding"="245"
#!verify drive[truck-1,city-loc-12,city-loc-14];drive[truck-1,city-loc-14,city-loc-8];pick-up[truck-1,city-loc-8,package-0,capacity-1,capacity-2];drive[truck-1,city-loc-8,city-loc-14];drive[truck-1,city-loc-14,city-loc-12];drive[truck-1,city-loc-12,city-loc-5];drive[truck-1,city-loc-5,city-loc-3];drop[truck-1,city-loc-3,package-0,capacity-1,capacity-2];drive[truck-1,city-loc-3,city-loc-7];drive[truck-1,city-loc-7,city-loc-3];drive[truck-1,city-loc-3,city-loc-5];drive[truck-1,city-loc-5,city-loc-9];pick-up[truck-1,city-loc-9,package-1,capacity-1,capacity-2];drive[truck-1,city-loc-9,city-loc-14];drive[truck-1,city-loc-14,city-loc-11];drive[truck-1,city-loc-11,city-loc-0];drop[truck-1,city-loc-0,package-1,capacity-1,capacity-2];drive[truck-1,city-loc-0,city-loc-11];drive[truck-1,city-loc-11,city-loc-14];pick-up[truck-1,city-loc-14,package-2,capacity-1,capacity-2];drive[truck-1,city-loc-14,city-loc-11];drop[truck-1,city-loc-11,package-2,capacity-1,capacity-2];drive[truck-0,city-loc-0,city-loc-11];drive[truck-0,city-loc-11,city-loc-14];drive[truck-0,city-loc-14,city-loc-9];pick-up[truck-0,city-loc-9,package-3,capacity-1,capacity-2];drive[truck-0,city-loc-9,city-loc-14];drive[truck-0,city-loc-14,city-loc-11];drive[truck-0,city-loc-11,city-loc-0];drop[truck-0,city-loc-0,package-3,capacity-1,capacity-2];drive[truck-1,city-loc-11,city-loc-14];drive[truck-1,city-loc-14,city-loc-8];drive[truck-1,city-loc-8,city-loc-6];drive[truck-1,city-loc-6,city-loc-10];pick-up[truck-1,city-loc-10,package-4,capacity-1,capacity-2];drive[truck-1,city-loc-10,city-loc-1];drive[truck-1,city-loc-1,city-loc-4];drive[truck-1,city-loc-4,city-loc-2];drive[truck-1,city-loc-2,city-loc-4];drop[truck-1,city-loc-4,package-4,capacity-1,capacity-2];drive[truck-3,city-loc-13,city-loc-4];drive[truck-3,city-loc-4,city-loc-2];drive[truck-3,city-loc-2,city-loc-4];drive[truck-3,city-loc-4,city-loc-1];pick-up[truck-3,city-loc-1,package-5,capacity-1,capacity-2];drive[truck-3,city-loc-1,city-loc-7];drive[truck-3,city-loc-7,city-loc-3];drive[truck-3,city-loc-3,city-loc-11];drive[truck-3,city-loc-11,city-loc-0];drop[truck-3,city-loc-0,package-5,capacity-1,capacity-2];drive[truck-1,city-loc-4,city-loc-2];pick-up[truck-1,city-loc-2,package-6,capacity-1,capacity-2];drive[truck-1,city-loc-2,city-loc-3];drive[truck-1,city-loc-3,city-loc-5];drop[truck-1,city-loc-5,package-6,capacity-1,capacity-2];drive[truck-0,city-loc-0,city-loc-11];drive[truck-0,city-loc-11,city-loc-14];drive[truck-0,city-loc-14,city-loc-12];pick-up[truck-0,city-loc-12,package-7,capacity-1,capacity-2];drive[truck-0,city-loc-12,city-loc-14];drive[truck-0,city-loc-14,city-loc-12];drive[truck-0,city-loc-12,city-loc-5];drive[truck-0,city-loc-5,city-loc-9];drop[truck-0,city-loc-9,package-7,capacity-1,capacity-2];drive[truck-0,city-loc-9,city-loc-5];drive[truck-0,city-loc-5,city-loc-3];drive[truck-0,city-loc-3,city-loc-11];drive[truck-0,city-loc-11,city-loc-14];pick-up[truck-0,city-loc-14,package-8,capacity-1,capacity-2];drive[truck-0,city-loc-14,city-loc-12];drive[truck-0,city-loc-12,city-loc-5];drop[truck-0,city-loc-5,package-8,capacity-1,capacity-2];drive[truck-0,city-loc-5,city-loc-3];drive[truck-0,city-loc-3,city-loc-2];drive[truck-0,city-loc-2,city-loc-3];drive[truck-0,city-loc-3,city-loc-7];pick-up[truck-0,city-loc-7,package-9,capacity-1,capacity-2];drive[truck-0,city-loc-7,city-loc-3];drive[truck-0,city-loc-3,city-loc-2];drive[truck-0,city-loc-2,city-loc-4];drive[truck-0,city-loc-4,city-loc-6];drop[truck-0,city-loc-6,package-9,capacity-1,capacity-2];drive[truck-2,city-loc-7,city-loc-3];pick-up[truck-2,city-loc-3,package-10,capacity-1,capacity-2];drive[truck-2,city-loc-3,city-loc-11];drive[truck-2,city-loc-11,city-loc-3];drive[truck-2,city-loc-3,city-loc-5];drop[truck-2,city-loc-5,package-10,capacity-1,capacity-2];drive[truck-1,city-loc-5,city-loc-3];drive[truck-1,city-loc-3,city-loc-2];drive[truck-1,city-loc-2,city-loc-4];drive[truck-1,city-loc-4,city-loc-13];pick-up[truck-1,city-loc-13,package-11,capacity-1,capacity-2];drive[truck-1,city-loc-13,city-loc-4];drive[truck-1,city-loc-4,city-loc-2];drive[truck-1,city-loc-2,city-loc-3];drop[truck-1,city-loc-3,package-11,capacity-1,capacity-2];drive[truck-2,city-loc-5,city-loc-3];pick-up[truck-2,city-loc-3,package-12,capacity-1,capacity-2];drive[truck-2,city-loc-3,city-loc-11];drive[truck-2,city-loc-11,city-loc-0];drive[truck-2,city-loc-0,city-loc-11];drop[truck-2,city-loc-11,package-12,capacity-1,capacity-2];drive[truck-2,city-loc-11,city-loc-3];drive[truck-2,city-loc-3,city-loc-5];drive[truck-2,city-loc-5,city-loc-3];drive[truck-2,city-loc-3,city-loc-5];pick-up[truck-2,city-loc-5,package-13,capacity-1,capacity-2];noop[truck-2,city-loc-5];drive[truck-2,city-loc-5,city-loc-3];drive[truck-2,city-loc-3,city-loc-2];drop[truck-2,city-loc-2,package-13,capacity-1,capacity-2];drive[truck-2,city-loc-2,city-loc-3];pick-up[truck-2,city-loc-3,package-14,capacity-1,capacity-2];noop[truck-2,city-loc-3];drive[truck-2,city-loc-3,city-loc-7];drive[truck-2,city-loc-7,city-loc-1];drive[truck-2,city-loc-1,city-loc-10];drop[truck-2,city-loc-10,package-14,capacity-1,capacity-2];drive[truck-1,city-loc-3,city-loc-11];drive[truck-1,city-loc-11,city-loc-0];pick-up[truck-1,city-loc-0,package-15,capacity-1,capacity-2];drive[truck-1,city-loc-0,city-loc-11];drop[truck-1,city-loc-11,package-15,capacity-1,capacity-2]
==>
0 drive truck-1 city-loc-12 city-loc-14 
1 drive truck-1 city-loc-14 city-loc-8 
2 pick-up truck-1 city-loc-8 package-0 capacity-1 capacity-2 
3 drive truck-1 city-loc-8 city-loc-14 
4 drive truck-1 city-loc-14 city-loc-12 
5 drive truck-1 city-loc-12 city-loc-5 
6 drive truck-1 city-loc-5 city-loc-3 
7 drop truck-1 city-loc-3 package-0 capacity-1 capacity-2 
8 drive truck-1 city-loc-3 city-loc-7 
9 drive truck-1 city-loc-7 city-loc-3 
10 drive truck-1 city-loc-3 city-loc-5 
11 drive truck-1 city-loc-5 city-loc-9 
12 pick-up truck-1 city-loc-9 package-1 capacity-1 capacity-2 
13 drive truck-1 city-loc-9 city-loc-14 
14 drive truck-1 city-loc-14 city-loc-11 
15 drive truck-1 city-loc-11 city-loc-0 
16 drop truck-1 city-loc-0 package-1 capacity-1 capacity-2 
17 drive truck-1 city-loc-0 city-loc-11 
18 drive truck-1 city-loc-11 city-loc-14 
19 pick-up truck-1 city-loc-14 package-2 capacity-1 capacity-2 
20 drive truck-1 city-loc-14 city-loc-11 
21 drop truck-1 city-loc-11 package-2 capacity-1 capacity-2 
22 drive truck-0 city-loc-0 city-loc-11 
23 drive truck-0 city-loc-11 city-loc-14 
24 drive truck-0 city-loc-14 city-loc-9 
25 pick-up truck-0 city-loc-9 package-3 capacity-1 capacity-2 
26 drive truck-0 city-loc-9 city-loc-14 
27 drive truck-0 city-loc-14 city-loc-11 
28 drive truck-0 city-loc-11 city-loc-0 
29 drop truck-0 city-loc-0 package-3 capacity-1 capacity-2 
30 drive truck-1 city-loc-11 city-loc-14 
31 drive truck-1 city-loc-14 city-loc-8 
32 drive truck-1 city-loc-8 city-loc-6 
33 drive truck-1 city-loc-6 city-loc-10 
34 pick-up truck-1 city-loc-10 package-4 capacity-1 capacity-2 
35 drive truck-1 city-loc-10 city-loc-1 
36 drive truck-1 city-loc-1 city-loc-4 
37 drive truck-1 city-loc-4 city-loc-2 
38 drive truck-1 city-loc-2 city-loc-4 
39 drop truck-1 city-loc-4 package-4 capacity-1 capacity-2 
40 drive truck-3 city-loc-13 city-loc-4 
41 drive truck-3 city-loc-4 city-loc-2 
42 drive truck-3 city-loc-2 city-loc-4 
43 drive truck-3 city-loc-4 city-loc-1 
44 pick-up truck-3 city-loc-1 package-5 capacity-1 capacity-2 
45 drive truck-3 city-loc-1 city-loc-7 
46 drive truck-3 city-loc-7 city-loc-3 
47 drive truck-3 city-loc-3 city-loc-11 
48 drive truck-3 city-loc-11 city-loc-0 
49 drop truck-3 city-loc-0 package-5 capacity-1 capacity-2 
50 drive truck-1 city-loc-4 city-loc-2 
51 pick-up truck-1 city-loc-2 package-6 capacity-1 capacity-2 
52 drive truck-1 city-loc-2 city-loc-3 
53 drive truck-1 city-loc-3 city-loc-5 
54 drop truck-1 city-loc-5 package-6 capacity-1 capacity-2 
55 drive truck-0 city-loc-0 city-loc-11 
56 drive truck-0 city-loc-11 city-loc-14 
57 drive truck-0 city-loc-14 city-loc-12 
58 pick-up truck-0 city-loc-12 package-7 capacity-1 capacity-2 
59 drive truck-0 city-loc-12 city-loc-14 
60 drive truck-0 city-loc-14 city-loc-12 
61 drive truck-0 city-loc-12 city-loc-5 
62 drive truck-0 city-loc-5 city-loc-9 
63 drop truck-0 city-loc-9 package-7 capacity-1 capacity-2 
64 drive truck-0 city-loc-9 city-loc-5 
65 drive truck-0 city-loc-5 city-loc-3 
66 drive truck-0 city-loc-3 city-loc-11 
67 drive truck-0 city-loc-11 city-loc-14 
68 pick-up truck-0 city-loc-14 package-8 capacity-1 capacity-2 
69 drive truck-0 city-loc-14 city-loc-12 
70 drive truck-0 city-loc-12 city-loc-5 
71 drop truck-0 city-loc-5 package-8 capacity-1 capacity-2 
72 drive truck-0 city-loc-5 city-loc-3 
73 drive truck-0 city-loc-3 city-loc-2 
74 drive truck-0 city-loc-2 city-loc-3 
75 drive truck-0 city-loc-3 city-loc-7 
76 pick-up truck-0 city-loc-7 package-9 capacity-1 capacity-2 
77 drive truck-0 city-loc-7 city-loc-3 
78 drive truck-0 city-loc-3 city-loc-2 
79 drive truck-0 city-loc-2 city-loc-4 
80 drive truck-0 city-loc-4 city-loc-6 
81 drop truck-0 city-loc-6 package-9 capacity-1 capacity-2 
82 drive truck-2 city-loc-7 city-loc-3 
83 pick-up truck-2 city-loc-3 package-10 capacity-1 capacity-2 
84 drive truck-2 city-loc-3 city-loc-11 
85 drive truck-2 city-loc-11 city-loc-3 
86 drive truck-2 city-loc-3 city-loc-5 
87 drop truck-2 city-loc-5 package-10 capacity-1 capacity-2 
88 drive truck-1 city-loc-5 city-loc-3 
89 drive truck-1 city-loc-3 city-loc-2 
90 drive truck-1 city-loc-2 city-loc-4 
91 drive truck-1 city-loc-4 city-loc-13 
92 pick-up truck-1 city-loc-13 package-11 capacity-1 capacity-2 
93 drive truck-1 city-loc-13 city-loc-4 
94 drive truck-1 city-loc-4 city-loc-2 
95 drive truck-1 city-loc-2 city-loc-3 
96 drop truck-1 city-loc-3 package-11 capacity-1 capacity-2 
97 drive truck-2 city-loc-5 city-loc-3 
98 pick-up truck-2 city-loc-3 package-12 capacity-1 capacity-2 
99 drive truck-2 city-loc-3 city-loc-11 
100 drive truck-2 city-loc-11 city-loc-0 
101 drive truck-2 city-loc-0 city-loc-11 
102 drop truck-2 city-loc-11 package-12 capacity-1 capacity-2 
103 drive truck-2 city-loc-11 city-loc-3 
104 drive truck-2 city-loc-3 city-loc-5 
105 drive truck-2 city-loc-5 city-loc-3 
106 drive truck-2 city-loc-3 city-loc-5 
107 pick-up truck-2 city-loc-5 package-13 capacity-1 capacity-2 
108 noop truck-2 city-loc-5 
109 drive truck-2 city-loc-5 city-loc-3 
110 drive truck-2 city-loc-3 city-loc-2 
111 drop truck-2 city-loc-2 package-13 capacity-1 capacity-2 
112 drive truck-2 city-loc-2 city-loc-3 
113 pick-up truck-2 city-loc-3 package-14 capacity-1 capacity-2 
114 noop truck-2 city-loc-3 
115 drive truck-2 city-loc-3 city-loc-7 
116 drive truck-2 city-loc-7 city-loc-1 
117 drive truck-2 city-loc-1 city-loc-10 
118 drop truck-2 city-loc-10 package-14 capacity-1 capacity-2 
119 drive truck-1 city-loc-3 city-loc-11 
120 drive truck-1 city-loc-11 city-loc-0 
121 pick-up truck-1 city-loc-0 package-15 capacity-1 capacity-2 
122 drive truck-1 city-loc-0 city-loc-11 
123 drop truck-1 city-loc-11 package-15 capacity-1 capacity-2 
root 210
124 unload truck-0 city-loc-9 package-7  -> m-unload 63
125 unload truck-1 city-loc-3 package-11  -> m-unload 96
126 load truck-1 city-loc-14 package-2  -> m-load 19
127 get-to truck-2 city-loc-11  -> m-drive-to 84
128 get-to truck-1 city-loc-14  -> m-drive-to 0
129 get-to truck-1 city-loc-4  -> m-drive-to-via 157 38
130 get-to truck-2 city-loc-3  -> m-drive-to 112
131 get-to truck-2 city-loc-3  -> m-i-am-there 114
132 get-to truck-1 city-loc-1  -> m-drive-to 35
133 get-to truck-1 city-loc-14  -> m-drive-to 3
134 unload truck-2 city-loc-10 package-14  -> m-unload 118
135 get-to truck-2 city-loc-3  -> m-drive-to-via 162 109
136 get-to truck-1 city-loc-11  -> m-drive-to 20
137 get-to truck-2 city-loc-3  -> m-drive-to 103
138 get-to truck-0 city-loc-11  -> m-drive-to-via 229 27
139 get-to truck-1 city-loc-2  -> m-drive-to-via 215 94
140 get-to truck-2 city-loc-3  -> m-drive-to-via 127 85
141 get-to truck-2 city-loc-3  -> m-drive-to 97
142 get-to truck-2 city-loc-10  -> m-drive-to-via 159 117
143 get-to truck-0 city-loc-12  -> m-drive-to-via 148 57
144 unload truck-0 city-loc-6 package-9  -> m-unload 81
145 get-to truck-3 city-loc-0  -> m-drive-to-via 195 48
146 get-to truck-1 city-loc-5  -> m-drive-to-via 166 10
147 get-to truck-2 city-loc-5  -> m-drive-to-via 188 106
148 get-to truck-0 city-loc-14  -> m-drive-to-via 201 56
149 unload truck-2 city-loc-11 package-12  -> m-unload 102
150 load truck-0 city-loc-9 package-3  -> m-load 25
151 load truck-0 city-loc-7 package-9  -> m-load 76
152 get-to truck-1 city-loc-10  -> m-drive-to-via 221 33
153 get-to truck-1 city-loc-14  -> m-drive-to 13
154 get-to truck-0 city-loc-11  -> m-drive-to 22
155 get-to truck-1 city-loc-0  -> m-drive-to-via 217 120
156 deliver package-5 city-loc-0  -> m-deliver 206 169 145 259
157 get-to truck-1 city-loc-2  -> m-drive-to-via 199 37
158 load truck-0 city-loc-12 package-7  -> m-load 58
159 get-to truck-2 city-loc-1  -> m-drive-to-via 235 116
160 get-to truck-3 city-loc-7  -> m-drive-to 45
161 get-to truck-2 city-loc-0  -> m-drive-to-via 183 100
162 get-to truck-2 city-loc-5  -> m-i-am-there 108
163 deliver package-14 city-loc-10  -> m-deliver 130 241 142 134
164 get-to truck-0 city-loc-5  -> m-drive-to 64
165 get-to truck-0 city-loc-5  -> m-drive-to-via 236 61
166 get-to truck-1 city-loc-3  -> m-drive-to-via 248 9
167 get-to truck-0 city-loc-6  -> m-drive-to-via 230 80
168 get-to truck-0 city-loc-0  -> m-drive-to-via 138 28
169 load truck-3 city-loc-1 package-5  -> m-load 44
170 deliver package-9 city-loc-6  -> m-deliver 256 151 167 144
171 get-to truck-1 city-loc-3  -> m-drive-to 52
172 get-to truck-1 city-loc-13  -> m-drive-to-via 181 91
173 get-to truck-1 city-loc-14  -> m-drive-to 30
174 deliver package-4 city-loc-4  -> m-deliver 152 204 129 250
175 load truck-1 city-loc-0 package-15  -> m-load 121
176 get-to truck-1 city-loc-8  -> m-drive-to-via 173 31
177 load truck-1 city-loc-9 package-1  -> m-load 12
178 get-to truck-0 city-loc-11  -> m-drive-to-via 223 66
179 unload truck-0 city-loc-5 package-8  -> m-unload 71
180 get-to truck-0 city-loc-12  -> m-drive-to 69
181 get-to truck-1 city-loc-4  -> m-drive-to-via 224 90
182 get-to truck-1 city-loc-0  -> m-drive-to-via 200 15
183 get-to truck-2 city-loc-11  -> m-drive-to 99
184 load truck-2 city-loc-5 package-13  -> m-load 107
185 get-to truck-0 city-loc-5  -> m-drive-to-via 180 70
186 unload truck-2 city-loc-2 package-13  -> m-unload 111
187 get-to truck-0 city-loc-3  -> m-drive-to-via 219 74
188 get-to truck-2 city-loc-3  -> m-drive-to-via 252 105
189 get-to truck-0 city-loc-14  -> m-drive-to 59
190 get-to truck-2 city-loc-3  -> m-drive-to 82
191 load truck-2 city-loc-3 package-10  -> m-load 83
192 get-to truck-1 city-loc-5  -> m-drive-to-via 171 53
193 deliver package-10 city-loc-5  -> m-deliver 190 191 216 214
194 deliver package-11 city-loc-3  -> m-deliver 172 205 226 125
195 get-to truck-3 city-loc-11  -> m-drive-to-via 249 47
196 get-to truck-0 city-loc-3  -> m-drive-to 72
197 get-to truck-3 city-loc-4  -> m-drive-to 40
198 get-to truck-0 city-loc-3  -> m-drive-to 77
199 get-to truck-1 city-loc-4  -> m-drive-to-via 132 36
200 get-to truck-1 city-loc-11  -> m-drive-to-via 153 14
201 get-to truck-0 city-loc-11  -> m-drive-to 55
202 get-to truck-1 city-loc-5  -> m-drive-to-via 262 5
203 unload truck-1 city-loc-0 package-1  -> m-unload 16
204 load truck-1 city-loc-10 package-4  -> m-load 34
205 load truck-1 city-loc-13 package-11  -> m-load 92
206 get-to truck-3 city-loc-1  -> m-drive-to-via 251 43
207 get-to truck-1 city-loc-14  -> m-drive-to-via 260 18
208 get-to truck-1 city-loc-8  -> m-drive-to-via 128 1
209 load truck-0 city-loc-14 package-8  -> m-load 68
210 __artificialTopCompilation__top_1  -> __top_1 253 231 264 242 174 156 211 263 257 170 193 194 254 233 163 237
211 deliver package-6 city-loc-5  -> m-deliver 247 261 192 220
212 get-to truck-1 city-loc-9  -> m-drive-to-via 146 11
213 get-to truck-0 city-loc-14  -> m-drive-to-via 178 67
214 unload truck-2 city-loc-5 package-10  -> m-unload 87
215 get-to truck-1 city-loc-4  -> m-drive-to 93
216 get-to truck-2 city-loc-5  -> m-drive-to-via 140 86
217 get-to truck-1 city-loc-11  -> m-drive-to 119
218 load truck-2 city-loc-3 package-12  -> m-load 98
219 get-to truck-0 city-loc-2  -> m-drive-to-via 196 73
220 unload truck-1 city-loc-5 package-6  -> m-unload 54
221 get-to truck-1 city-loc-6  -> m-drive-to-via 176 32
222 unload truck-1 city-loc-3 package-0  -> m-unload 7
223 get-to truck-0 city-loc-3  -> m-drive-to-via 164 65
224 get-to truck-1 city-loc-2  -> m-drive-to-via 240 89
225 get-to truck-0 city-loc-9  -> m-drive-to-via 232 24
226 get-to truck-1 city-loc-3  -> m-drive-to-via 139 95
227 get-to truck-0 city-loc-2  -> m-drive-to-via 198 78
228 get-to truck-1 city-loc-3  -> m-drive-to-via 202 6
229 get-to truck-0 city-loc-14  -> m-drive-to 26
230 get-to truck-0 city-loc-4  -> m-drive-to-via 227 79
231 deliver package-1 city-loc-0  -> m-deliver 212 177 182 203
232 get-to truck-0 city-loc-14  -> m-drive-to-via 154 23
233 deliver package-13 city-loc-2  -> m-deliver 147 184 243 186
234 unload truck-1 city-loc-11 package-15  -> m-unload 123
235 get-to truck-2 city-loc-7  -> m-drive-to-via 131 115
236 get-to truck-0 city-loc-12  -> m-drive-to-via 189 60
237 deliver package-15 city-loc-11  -> m-deliver 155 175 258 234
238 get-to truck-3 city-loc-2  -> m-drive-to-via 197 41
239 get-to truck-2 city-loc-11  -> m-drive-to-via 161 101
240 get-to truck-1 city-loc-3  -> m-drive-to 88
241 load truck-2 city-loc-3 package-14  -> m-load 113
242 deliver package-3 city-loc-0  -> m-deliver 225 150 168 244
243 get-to truck-2 city-loc-2  -> m-drive-to-via 135 110
244 unload truck-0 city-loc-0 package-3  -> m-unload 29
245 load truck-1 city-loc-8 package-0  -> m-load 2
246 get-to truck-0 city-loc-9  -> m-drive-to-via 165 62
247 get-to truck-1 city-loc-2  -> m-drive-to 50
248 get-to truck-1 city-loc-7  -> m-drive-to 8
249 get-to truck-3 city-loc-3  -> m-drive-to-via 160 46
250 unload truck-1 city-loc-4 package-4  -> m-unload 39
251 get-to truck-3 city-loc-4  -> m-drive-to-via 238 42
252 get-to truck-2 city-loc-5  -> m-drive-to-via 137 104
253 deliver package-0 city-loc-3  -> m-deliver 208 245 228 222
254 deliver package-12 city-loc-11  -> m-deliver 141 218 239 149
255 unload truck-1 city-loc-11 package-2  -> m-unload 21
256 get-to truck-0 city-loc-7  -> m-drive-to-via 187 75
257 deliver package-8 city-loc-5  -> m-deliver 213 209 185 179
258 get-to truck-1 city-loc-11  -> m-drive-to 122
259 unload truck-3 city-loc-0 package-5  -> m-unload 49
260 get-to truck-1 city-loc-11  -> m-drive-to 17
261 load truck-1 city-loc-2 package-6  -> m-load 51
262 get-to truck-1 city-loc-12  -> m-drive-to-via 133 4
263 deliver package-7 city-loc-9  -> m-deliver 143 158 246 124
264 deliver package-2 city-loc-11  -> m-deliver 207 126 136 255

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 12.940 MEMPEAK_KBS 513756.16
