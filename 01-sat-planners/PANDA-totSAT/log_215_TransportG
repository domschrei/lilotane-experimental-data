PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile23.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile23.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile23.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Grounded planning graph ... done in 274ms.
	Number of Grounded Actions 429
	Number of Grounded Literals 148
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Grounding ... done.
	number of abstract tasks = 145
	number of tasks = 574
	number of decomposition methods = 603
	number of predicates = 148
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 145
	number of tasks = 574
	number of decomposition methods = 603
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 115ms.
	Number of Grounded Actions 429
	Number of Grounded Literals 107
	number of abstract tasks = 145
	number of tasks = 574
	number of decomposition methods = 603
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 145
	number of tasks = 574
	number of decomposition methods = 603
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 145
	number of tasks = 574
	number of decomposition methods = 603
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 33ms.
	Number of Grounded Actions 429
	Number of Grounded Literals 107
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 206
	number of tasks = 635
	number of decomposition methods = 664
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 206
	number of tasks = 635
	number of decomposition methods = 664
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Tasks 429 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773041ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854772955
done
initial PDT has 40 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 40 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 17013
Size 16802 at 0/429
Size 10824
Size 10816 at 0/429
Size 3455
Size 3452 at 0/429
Size 767
Size 767 at 0/429
Size 464
Size 464 at 0/429
Size 434
Size 434 at 0/429
Size 433
Size 433 at 0/429
Size 433
Invariant time: 0.307
Number of invariants: 433
Invariant Clauses 17753
NUMBER OF CLAUSES 33574
NUMBER OF STATE CLAUSES 28223
NUMBER OF DECOMPOSITION CLAUSES 5351
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.06% 15.94% 0.0% 
NUMBER OF PATHS 40
Starting cryptominisat
Setting starttime of solver to 1603884719713
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 60 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 60 leafs
SHOP LEAFS 0
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854771801
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 26413
NUMBER OF CLAUSES 67565
NUMBER OF STATE CLAUSES 43581
NUMBER OF DECOMPOSITION CLAUSES 23984
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 64.5% 35.5% 0.0% 
NUMBER OF PATHS 60
Starting cryptominisat
Setting starttime of solver to 1603884720341
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854771123
done
initial PDT has 99 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 99 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 43300
NUMBER OF CLAUSES 141476
NUMBER OF STATE CLAUSES 72975
NUMBER OF DECOMPOSITION CLAUSES 68501
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 51.58% 48.42% 0.0% 
NUMBER OF PATHS 99
Starting cryptominisat
Setting starttime of solver to 1603884721296
Command exited with non-zero status 20
0.04 0.01

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770271
done
initial PDT has 138 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 138 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 60187
NUMBER OF CLAUSES 266090
NUMBER OF STATE CLAUSES 105021
NUMBER OF DECOMPOSITION CLAUSES 161069
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 39.47% 60.53% 0.0% 
NUMBER OF PATHS 138
Starting cryptominisat
Setting starttime of solver to 1603884722484
Command exited with non-zero status 20
0.11 0.00

Time command gave the following runtime for the solver: 110
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854769032
done
initial PDT has 177 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 177 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 77074
NUMBER OF CLAUSES 468938
NUMBER OF STATE CLAUSES 139980
NUMBER OF DECOMPOSITION CLAUSES 328958
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.85% 70.15% 0.0% 
NUMBER OF PATHS 177
Starting cryptominisat
Setting starttime of solver to 1603884724023
Command exited with non-zero status 10
0.26 0.02

Time command gave the following runtime for the solver: 280
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^4_7;0;0;0,463 463 m-drive-to-via
7;0;0;0 167 pathaction!4_7;0;0;0,519
Consider method^2_4;2,258 258 m-drive-to-via
4;2 127 pathaction!2_4;2,527
Consider method^2_3;0,349 349 m-drive-to-via
3;0 106 pathaction!2_3;0,504
Consider method^3_0;2;0,503 503 m-drive-to-via
0;2;0 122 pathaction!3_0;2;0,540
Consider method^6_5;0;0;0;0;0,368 368 m-drive-to
5;0;0;0;0;0 48 pathaction!6_5;0;0;0;0;0,525
Consider method^6_8;0;0;0;0;0,374 374 m-drive-to
8;0;0;0;0;0 43 pathaction!6_8;0;0;0;0;0,533
Consider method^3_0;0;0,103 103 m-drive-to-via
0;0;0 144 pathaction!3_0;0;0,516
Consider method^1_2,393 393 m-deliver
2 74 pathaction!1_2,399
Consider method^3_9;2;0,647 647 m-drive-to-via
9;2;0 169 pathaction!3_9;2;0,533
Consider method^2_4;0,404 404 m-drive-to-via
4;0 129 pathaction!2_4;0,512
Consider method^3_2;2;0,589 589 m-drive-to
2;2;0 62 pathaction!3_2;2;0,503
Consider method^4_9;0;0;0,164 164 m-drive-to-via
9;0;0;0 85 pathaction!4_9;0;0;0,543
Consider method^2_7;0,563 563 m-drive-to-via
7;0 202 pathaction!2_7;0,531
Consider method^2_1;2,641 641 m-drive-to-via
1;2 141 pathaction!2_1;2,507
Consider method^4_3;2;0;0,255 255 m-drive-to-via
3;2;0;0 42 pathaction!4_3;2;0;0,500
Consider method^3_3;0;0,525 525 m-drive-to-via
3;0;0 118 pathaction!3_3;0;0,512
Consider method^6_6;0;0;0;0;0,546 546 m-drive-to
6;0;0;0;0;0 114 pathaction!6_6;0;0;0;0;0,532
Consider method^6_3;2;0;0;0;0,165 165 m-drive-to
3;2;0;0;0;0 24 pathaction!6_3;2;0;0;0;0,512
Consider method^6_1;2;0;0;0;0,631 631 m-drive-to
1;2;0;0;0;0 54 pathaction!6_1;2;0;0;0;0,540
Consider method^2_0;0,403 403 m-drive-to-via
0;0 194 pathaction!2_0;0,524
Consider method^2_6;3,609 609 m-unload
6;3 174 pathaction!2_6;3,544
Consider method^1_7,581 581 m-deliver
7 125 pathaction!1_7,400
Consider method^6_4;2;0;0;0;0,499 499 m-drive-to
4;2;0;0;0;0 120 pathaction!6_4;2;0;0;0;0,504
Consider method^5_7;2;0;0;0,501 501 m-drive-to
7;2;0;0;0 110 pathaction!5_7;2;0;0;0,533
Consider method^2_8;0,164 164 m-drive-to-via
8;0 33 pathaction!2_8;0,543
Consider method^5_1;2;0;0;0,569 569 m-drive-to-via
1;2;0;0;0 46 pathaction!5_1;2;0;0;0,541
Consider method^3_1;0;0,541 541 m-drive-to-via
1;0;0 142 pathaction!3_1;0;0,529
Consider method^2_5;2,442 442 m-drive-to-via
5;2 146 pathaction!2_5;2,506
Consider method^5_5;0;0;0;0,654 654 m-drive-to-via
5;0;0;0;0 105 pathaction!5_5;0;0;0;0,527
Consider method^4_6;0;0;0,647 647 m-drive-to-via
6;0;0;0 4 pathaction!4_6;0;0;0,533
Consider method^3_7;2;0,175 175 m-drive-to-via
7;2;0 135 pathaction!3_7;2;0,518
Consider method^2_6;1,545 545 m-load
6;1 55 pathaction!2_6;1,344
Consider method^5_0;2;0;0;0,200 200 m-drive-to-via
0;2;0;0;0 19 pathaction!5_0;2;0;0;0,529
Consider method^2_5;0,366 366 m-drive-to-via
5;0 136 pathaction!2_5;0,521
Consider method^4_4;2;0;0,258 258 m-drive-to-via
4;2;0;0 221 pathaction!4_4;2;0;0,527
Consider method^2_0;2,561 561 m-drive-to-via
0;2 20 pathaction!2_0;2,540
Consider method^5_6;2;0;0;0,636 636 m-drive-to-via
6;2;0;0;0 36 pathaction!5_6;2;0;0;0,533
Consider method^4_5;2;0;0,232 232 m-drive-to-via
5;2;0;0 102 pathaction!4_5;2;0;0,512
Consider method^0_,663 663 __top_1
 230 pathaction!0_,574
Consider method^4_0;2;0;0,390 390 m-drive-to-via
0;2;0;0 236 pathaction!4_0;2;0;0,541
Consider method^1_9,153 153 m-deliver
9 226 pathaction!1_9,407
Consider method^3_6;0;0,213 213 m-drive-to-via
6;0;0 159 pathaction!3_6;0;0,511
Consider method^2_5;1,240 240 m-load
5;1 5 pathaction!2_5;1,348
Consider method^4_6;2;0;0,72 72 m-drive-to-via
6;2;0;0 143 pathaction!4_6;2;0;0,535
Consider method^2_7;2,463 463 m-drive-to-via
7;2 161 pathaction!2_7;2,519
Consider method^3_2;0;0,349 349 m-drive-to-via
2;0;0 10 pathaction!3_2;0;0,504
Consider method^2_2;0,472 472 m-drive-to-via
2;0 179 pathaction!2_2;0,530
Consider method^5_6;0;0;0;0,505 505 m-drive-to-via
6;0;0;0;0 88 pathaction!5_6;0;0;0;0,535
Consider method^5_3;2;0;0;0,188 188 m-drive-to-via
3;2;0;0;0 17 pathaction!5_3;2;0;0;0,510
Consider method^2_2;3,44 44 m-unload
2;3 100 pathaction!2_2;3,565
Consider method^2_6;2,583 583 m-drive-to-via
6;2 181 pathaction!2_6;2,502
Consider method^2_3;1,423 423 m-load
3;1 75 pathaction!2_3;1,356
Consider method^1_4,315 315 m-deliver
4 139 pathaction!1_4,408
Consider method^2_9;1,592 592 m-load
9;1 99 pathaction!2_9;1,359
Consider method^6_9;0;0;0;0;0,22 22 m-i-am-there
9;0;0;0;0;0 11 pathaction!6_9;0;0;0;0;0,518
Consider method^6_5;2;0;0;0;0,552 552 m-i-am-there
5;2;0;0;0;0 193 pathaction!6_5;2;0;0;0;0,521
Consider method^1_5,97 97 m-deliver
5 86 pathaction!1_5,402
Consider method^3_8;2;0,648 648 m-drive-to
8;2;0 44 pathaction!3_8;2;0,520
Consider method^2_1;3,627 627 m-unload
1;3 245 pathaction!2_1;3,553
Consider method^6_6;2;0;0;0;0,432 432 m-drive-to
6;2;0;0;0;0 63 pathaction!6_6;2;0;0;0;0,511
Consider method^5_8;0;0;0;0,213 213 m-drive-to-via
8;0;0;0;0 234 pathaction!5_8;0;0;0;0,511
Consider method^3_8;0;0,316 316 m-drive-to-via
8;0;0 164 pathaction!3_8;0;0,520
Consider method^2_2;1,343 343 m-load
2;1 158 pathaction!2_2;1,357
Consider method^3_4;0;0,360 360 m-drive-to-via
4;0;0 81 pathaction!3_4;0;0,509
Consider method^3_5;0;0,500 500 m-drive-to-via
5;0;0 61 pathaction!3_5;0;0,504
Consider method^2_4;3,313 313 m-unload
4;3 32 pathaction!2_4;3,569
Consider method^4_1;0;0;0,474 474 m-drive-to
1;0;0;0 34 pathaction!4_1;0;0;0,538
Consider method^5_5;2;0;0;0,361 361 m-drive-to-via
5;2;0;0;0 225 pathaction!5_5;2;0;0;0,542
Consider method^6_0;2;0;0;0;0,263 263 m-drive-to
0;2;0;0;0;0 213 pathaction!6_0;2;0;0;0;0,516
Consider method^2_8;3,215 215 m-unload
8;3 91 pathaction!2_8;3,567
Consider method^2_1;1,321 321 m-load
1;1 151 pathaction!2_1;1,388
Consider method^5_4;0;0;0;0,368 368 m-drive-to
4;0;0;0;0 8 pathaction!5_4;0;0;0;0,525
Consider method^5_9;0;0;0;0,316 316 m-drive-to-via
9;0;0;0;0 216 pathaction!5_9;0;0;0;0,520
Consider method^1_1,192 192 m-deliver
1 121 pathaction!1_1,406
Consider method^5_0;0;0;0;0,285 285 m-drive-to-via
0;0;0;0;0 82 pathaction!5_0;0;0;0;0,541
Consider method^3_6;2;0,464 464 m-drive-to-via
6;2;0 173 pathaction!3_6;2;0,532
Consider method^4_5;0;0;0,440 440 m-drive-to-via
5;0;0;0 53 pathaction!4_5;0;0;0,530
Consider method^1_8,183 183 m-deliver
8 65 pathaction!1_8,405
Consider method^2_7;1,4 4 m-load
7;1 64 pathaction!2_7;1,387
Consider method^5_2;0;0;0;0,650 650 m-drive-to-via
2;0;0;0;0 111 pathaction!5_2;0;0;0;0,503
Consider method^4_9;2;0;0,505 505 m-drive-to-via
9;2;0;0 77 pathaction!4_9;2;0;0,535
Consider method^2_3;3,181 181 m-unload
3;3 243 pathaction!2_3;3,568
Consider method^4_3;0;0;0,334 334 m-drive-to
3;0;0;0 60 pathaction!4_3;0;0;0,503
Consider method^2_5;3,481 481 m-unload
5;3 28 pathaction!2_5;3,552
Consider method^1_3,244 244 m-deliver
3 29 pathaction!1_3,403
Consider method^2_8;2,140 140 m-drive-to-via
8;2 94 pathaction!2_8;2,518
Consider method^2_9;2,213 213 m-drive-to-via
9;2 222 pathaction!2_9;2,511
Consider method^2_3;2,654 654 m-drive-to-via
3;2 238 pathaction!2_3;2,527
Consider method^2_4;1,486 486 m-load
4;1 103 pathaction!2_4;1,342
Consider method^1_0,162 162 m-deliver
0 224 pathaction!1_0,401
Consider method^3_3;2;0,170 170 m-drive-to-via
3;2;0 206 pathaction!3_3;2;0,525
Consider method^3_9;0;0,89 89 m-drive-to-via
9;0;0 137 pathaction!3_9;0;0,520
Consider method^4_2;0;0;0,525 525 m-drive-to-via
2;0;0;0 47 pathaction!4_2;0;0;0,512
Consider method^6_2;0;0;0;0;0,102 102 m-drive-to
2;0;0;0;0;0 200 pathaction!6_2;0;0;0;0;0,506
Consider method^2_8;1,73 73 m-load
8;1 217 pathaction!2_8;1,396
Consider method^4_1;2;0;0,294 294 m-drive-to-via
1;2;0;0 147 pathaction!4_1;2;0;0,499
Consider method^2_9;0,542 542 m-drive-to-via
9;0 220 pathaction!2_9;0,502
Consider method^4_8;0;0;0,3 3 m-drive-to-via
8;0;0;0 207 pathaction!4_8;0;0;0,518
Consider method^6_7;0;0;0;0;0,377 377 m-drive-to
7;0;0;0;0;0 9 pathaction!6_7;0;0;0;0;0,520
Consider method^5_9;2;0;0;0,526 526 m-drive-to-via
9;2;0;0;0 109 pathaction!5_9;2;0;0;0,532
Consider method^3_7;0;0,63 63 m-drive-to-via
7;0;0 154 pathaction!3_7;0;0,526
Consider method^4_7;2;0;0,264 264 m-drive-to-via
7;2;0;0 84 pathaction!4_7;2;0;0,519
Consider method^2_7;3,453 453 m-unload
7;3 12 pathaction!2_7;3,546
Consider method^2_0;1,101 101 m-load
0;1 35 pathaction!2_0;1,346
Consider method^2_0;3,37 37 m-unload
0;3 113 pathaction!2_0;3,570
Consider method^2_6;0,564 564 m-drive-to-via
6;0 15 pathaction!2_6;0,523
Consider method^3_1;2;0,455 455 m-drive-to-via
1;2;0 203 pathaction!3_1;2;0,539
Consider method^4_0;0;0;0,649 649 m-drive-to-via
0;0;0;0 204 pathaction!4_0;0;0;0,529
Consider method^1_6,172 172 m-deliver
6 219 pathaction!1_6,404
Consider method^2_2;2,442 442 m-drive-to-via
2;2 18 pathaction!2_2;2,506
Consider method^4_4;0;0;0,598 598 m-drive-to-via
4;0;0;0 70 pathaction!4_4;0;0;0,500
Consider method^3_4;2;0,440 440 m-drive-to-via
4;2;0 156 pathaction!3_4;2;0,530
Consider method^5_7;0;0;0;0,140 140 m-drive-to-via
7;0;0;0;0 26 pathaction!5_7;0;0;0;0,518
Consider method^6_9;2;0;0;0;0,237 237 m-i-am-there
9;2;0;0;0;0 7 pathaction!6_9;2;0;0;0;0,502
Consider method^6_0;0;0;0;0;0,173 173 m-drive-to
0;0;0;0;0;0 235 pathaction!6_0;0;0;0;0;0,536
Consider method^3_5;2;0,300 300 m-drive-to-via
5;2;0 215 pathaction!3_5;2;0,503
Consider method^2_1;0,509 509 m-drive-to-via
1;0 157 pathaction!2_1;0,538
Consider method^5_4;2;0;0;0,472 472 m-drive-to-via
4;2;0;0;0 76 pathaction!5_4;2;0;0;0,530
Consider method^2_9;3,111 111 m-unload
9;3 198 pathaction!2_9;3,555


CHECKING primitive solution of length 108 ...
true 210 drive[truck-2,city-loc-10,city-loc-4;]
true 199 drive[truck-2,city-loc-4,city-loc-14;]
true 71 drive[truck-2,city-loc-14,city-loc-2;]
true 80 drive[truck-2,city-loc-2,city-loc-0;]
true 58 drive[truck-2,city-loc-0,city-loc-1;]
true 209 pick-up[truck-2,city-loc-1,package-0,capacity-2,capacity-3;]
true 73 drive[truck-2,city-loc-1,city-loc-0;]
true 186 drive[truck-2,city-loc-0,city-loc-2;]
true 51 drive[truck-2,city-loc-2,city-loc-14;]
true 192 drive[truck-2,city-loc-14,city-loc-3;]
true 182 drive[truck-2,city-loc-3,city-loc-3;]
true 101 drop[truck-2,city-loc-3,package-0,capacity-2,capacity-3;]
true 138 drive[truck-2,city-loc-3,city-loc-12;]
true 68 drive[truck-2,city-loc-12,city-loc-2;]
true 149 drive[truck-2,city-loc-2,city-loc-12;]
true 232 pick-up[truck-2,city-loc-12,package-1,capacity-2,capacity-3;]
true 152 drive[truck-2,city-loc-12,city-loc-3;]
true 132 drive[truck-2,city-loc-3,city-loc-14;]
true 117 drive[truck-2,city-loc-14,city-loc-9;]
true 16 drive[truck-2,city-loc-9,city-loc-7;]
true 163 drive[truck-2,city-loc-7,city-loc-8;]
true 78 drop[truck-2,city-loc-8,package-1,capacity-2,capacity-3;]
true 96 drive[truck-0,city-loc-8,city-loc-7;]
true 188 drive[truck-0,city-loc-7,city-loc-9;]
true 6 drive[truck-0,city-loc-9,city-loc-14;]
true 240 drive[truck-0,city-loc-14,city-loc-2;]
true 212 drive[truck-0,city-loc-2,city-loc-0;]
true 41 pick-up[truck-0,city-loc-0,package-2,capacity-2,capacity-3;]
true 195 drive[truck-0,city-loc-0,city-loc-9;]
true 38 drive[truck-0,city-loc-9,city-loc-7;]
true 130 drop[truck-0,city-loc-7,package-2,capacity-2,capacity-3;]
true 69 drive[truck-0,city-loc-7,city-loc-9;]
true 241 drive[truck-0,city-loc-9,city-loc-14;]
true 50 drive[truck-0,city-loc-14,city-loc-2;]
true 92 pick-up[truck-0,city-loc-2,package-3,capacity-2,capacity-3;]
true 175 drive[truck-0,city-loc-2,city-loc-14;]
true 172 drive[truck-0,city-loc-14,city-loc-5;]
true 150 drive[truck-0,city-loc-5,city-loc-10;]
true 176 drive[truck-0,city-loc-10,city-loc-11;]
true 223 drive[truck-0,city-loc-11,city-loc-1;]
true 72 drop[truck-0,city-loc-1,package-3,capacity-2,capacity-3;]
true 218 drive[truck-0,city-loc-1,city-loc-11;]
true 160 drive[truck-0,city-loc-11,city-loc-10;]
true 14 drive[truck-0,city-loc-10,city-loc-4;]
true 239 drive[truck-0,city-loc-4,city-loc-14;]
true 52 pick-up[truck-0,city-loc-14,package-4,capacity-2,capacity-3;]
true 59 drive[truck-0,city-loc-14,city-loc-2;]
true 104 drive[truck-0,city-loc-2,city-loc-0;]
true 83 drive[truck-0,city-loc-0,city-loc-1;]
true 177 drive[truck-0,city-loc-1,city-loc-0;]
true 231 drive[truck-0,city-loc-0,city-loc-1;]
true 155 drop[truck-0,city-loc-1,package-4,capacity-2,capacity-3;]
true 183 drive[truck-0,city-loc-1,city-loc-11;]
true 107 drive[truck-0,city-loc-11,city-loc-1;]
true 31 drive[truck-0,city-loc-1,city-loc-0;]
true 214 drive[truck-0,city-loc-0,city-loc-2;]
true 124 drive[truck-0,city-loc-2,city-loc-12;]
true 201 pick-up[truck-0,city-loc-12,package-5,capacity-2,capacity-3;]
true 185 noop[truck-0,city-loc-12;]
true 95 drive[truck-0,city-loc-12,city-loc-3;]
true 66 drive[truck-0,city-loc-3,city-loc-14;]
true 25 drive[truck-0,city-loc-14,city-loc-9;]
true 165 drive[truck-0,city-loc-9,city-loc-7;]
true 191 drop[truck-0,city-loc-7,package-5,capacity-2,capacity-3;]
true 93 drive[truck-1,city-loc-11,city-loc-10;]
true 37 drive[truck-1,city-loc-10,city-loc-5;]
true 244 drive[truck-1,city-loc-5,city-loc-14;]
true 168 drive[truck-1,city-loc-14,city-loc-9;]
true 184 drive[truck-1,city-loc-9,city-loc-7;]
true 49 pick-up[truck-1,city-loc-7,package-6,capacity-2,capacity-3;]
true 145 drive[truck-1,city-loc-7,city-loc-9;]
true 0 drive[truck-1,city-loc-9,city-loc-14;]
true 2 drive[truck-1,city-loc-14,city-loc-5;]
true 131 drive[truck-1,city-loc-5,city-loc-10;]
true 197 drive[truck-1,city-loc-10,city-loc-11;]
true 229 drop[truck-1,city-loc-11,package-6,capacity-2,capacity-3;]
true 119 drive[truck-1,city-loc-11,city-loc-1;]
true 187 drive[truck-1,city-loc-1,city-loc-0;]
true 196 drive[truck-1,city-loc-0,city-loc-2;]
true 87 drive[truck-1,city-loc-2,city-loc-12;]
true 23 drive[truck-1,city-loc-12,city-loc-3;]
true 205 pick-up[truck-1,city-loc-3,package-7,capacity-2,capacity-3;]
true 190 drive[truck-1,city-loc-3,city-loc-14;]
true 233 drive[truck-1,city-loc-14,city-loc-2;]
true 148 drive[truck-1,city-loc-2,city-loc-0;]
true 228 drive[truck-1,city-loc-0,city-loc-2;]
true 22 drop[truck-1,city-loc-2,package-7,capacity-2,capacity-3;]
true 237 drive[truck-1,city-loc-2,city-loc-14;]
true 98 drive[truck-1,city-loc-14,city-loc-9;]
true 67 drive[truck-1,city-loc-9,city-loc-0;]
true 3 drive[truck-1,city-loc-0,city-loc-1;]
true 89 drive[truck-1,city-loc-1,city-loc-6;]
true 30 pick-up[truck-1,city-loc-6,package-8,capacity-2,capacity-3;]
true 115 drive[truck-1,city-loc-6,city-loc-1;]
true 180 drive[truck-1,city-loc-1,city-loc-0;]
true 128 drop[truck-1,city-loc-0,package-8,capacity-2,capacity-3;]
true 171 noop[truck-1,city-loc-0;]
true 97 drive[truck-1,city-loc-0,city-loc-1;]
true 178 drive[truck-1,city-loc-1,city-loc-6;]
true 112 drive[truck-1,city-loc-6,city-loc-1;]
true 170 drive[truck-1,city-loc-1,city-loc-11;]
true 57 pick-up[truck-1,city-loc-11,package-9,capacity-2,capacity-3;]
true 153 noop[truck-1,city-loc-11;]
true 140 drive[truck-1,city-loc-11,city-loc-10;]
true 108 drive[truck-1,city-loc-10,city-loc-5;]
true 13 drive[truck-1,city-loc-5,city-loc-14;]
true 134 drive[truck-1,city-loc-14,city-loc-9;]
true 208 drop[truck-1,city-loc-9,package-9,capacity-2,capacity-3;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 256532912
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 107
number of actions                    = 635
number of abstract actions           = 206
number of primitive actions          = 429
number of methods                    = 664
number of primitive shop actions     = 0
number of primitive non-shop actions = 429
size of largest method               = 10
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 73521
number of clauses               = 468938
average size of clauses         = 3.1670817890637997
number of assert                = 17
number of horn                  = 433078
K offset                        = 0
K chosen value                  = 7
state formula                   = 139980
method children clauses         = 0
number of paths                 = 177
maximum plan length             = 177
number of decomposition clauses = 328958
number of ordering clauses      = 0
number of state clauses         = 139980
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 9244
============ parsing ============
total                         = 925
file parser                   = 546
sort expansion                = 141
closed world assumption       = 134
inherit preconditions         = 0
shop methods                  = 1
eliminate identical variables = 39
strip domain of hybridity     = 17
flatten formula               = 47
============ preprocessing ============
total                                      = 1690
compile negative preconditions             = 23
compile unit methods                       = 0
split parameter                            = 57
expand choiceless abstract tasks           = 14
compile methods with identical tasks       = 34
removing unnecessary predicates            = 197
lifted reachabiltiy analysis               = 67
grounded planning graph analysis           = 621
grounded task decomposition graph analysis = 434
grounding                                  = 211
create artificial top task                 = 19
============ search preparation ============
compute state invariants = 362
============ sat ============
total                                        = 5036
generate formula                             = 3827
generate path decomposition tree             = 545
normalise path decomposition tree            = 215
sog optimisation                             = 171
translate path decomposition tree to clauses = 1342
generate state formula                       = 3750
generate state invariant formula             = 237
transform to DIMACS                          = 430
SAT solver                                   = 460
SAT solver for K=0003                        = 0
SAT solver for K=0004                        = 20
SAT solver for K=0005                        = 50
SAT solver for K=0006                        = 110
SAT solver for K=0007                        = 280

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="429";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="206";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="256532912";"40 sat:20:state formula"="139980";"40 sat:01:number of variables"="73521";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="177";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="664";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="635";"30 problem:08:number of primitive non-shop actions"="429";"30 problem:02:number of predicates"="107";"40 sat:03:number of horn"="433078";"40 sat:15:K chosen value"="7";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="10";"40 sat:03:average size of clauses"="3.1670817890637997";"40 sat:02:number of clauses"="468938";"40 sat:50:number of state clauses"="139980";"40 sat:03:number of assert"="17";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="177";"40 sat:50:number of decomposition clauses"="328958";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="546";"01 parsing:08:flatten formula"="47";"40 sat:41:SAT solver for K=0004"="20";"40 sat:00:total"="5036";"40 sat:16:generate state formula"="3750";"40 sat:20:transform to DIMACS"="430";"40 sat:11:generate path decomposition tree"="545";"02 preprocessing:07:compile methods with identical tasks"="34";"01 parsing:07:strip domain of hybridity"="17";"02 preprocessing:08:removing unnecessary predicates"="197";"01 parsing:03:closed world assumption"="134";"02 preprocessing:11:lifted reachabiltiy analysis"="67";"01 parsing:02:sort expansion"="141";"40 sat:12:normalise path decomposition tree"="215";"40 sat:40:SAT solver"="460";"01 parsing:00:total"="925";"40 sat:10:generate formula"="3827";"40 sat:41:SAT solver for K=0005"="50";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="23";"00 total:00:total"="9244";"40 sat:13:sog optimisation"="171";"02 preprocessing:12:grounded planning graph analysis"="621";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="434";"40 sat:41:SAT solver for K=0006"="110";"02 preprocessing:04:split parameter"="57";"01 parsing:05:shop methods"="1";"10 search preparation:02:compute state invariants"="362";"01 parsing:06:eliminate identical variables"="39";"40 sat:15:translate path decomposition tree to clauses"="1342";"02 preprocessing:05:expand choiceless abstract tasks"="14";"40 sat:41:SAT solver for K=0003"="0";"40 sat:17:generate state invariant formula"="237";"02 preprocessing:00:total"="1690";"02 preprocessing:99:create artificial top task"="19";"02 preprocessing:84:grounding"="211";"40 sat:41:SAT solver for K=0007"="280"
#!verify drive[truck-2,city-loc-10,city-loc-4];drive[truck-2,city-loc-4,city-loc-14];drive[truck-2,city-loc-14,city-loc-2];drive[truck-2,city-loc-2,city-loc-0];drive[truck-2,city-loc-0,city-loc-1];pick-up[truck-2,city-loc-1,package-0,capacity-2,capacity-3];drive[truck-2,city-loc-1,city-loc-0];drive[truck-2,city-loc-0,city-loc-2];drive[truck-2,city-loc-2,city-loc-14];drive[truck-2,city-loc-14,city-loc-3];drive[truck-2,city-loc-3,city-loc-3];drop[truck-2,city-loc-3,package-0,capacity-2,capacity-3];drive[truck-2,city-loc-3,city-loc-12];drive[truck-2,city-loc-12,city-loc-2];drive[truck-2,city-loc-2,city-loc-12];pick-up[truck-2,city-loc-12,package-1,capacity-2,capacity-3];drive[truck-2,city-loc-12,city-loc-3];drive[truck-2,city-loc-3,city-loc-14];drive[truck-2,city-loc-14,city-loc-9];drive[truck-2,city-loc-9,city-loc-7];drive[truck-2,city-loc-7,city-loc-8];drop[truck-2,city-loc-8,package-1,capacity-2,capacity-3];drive[truck-0,city-loc-8,city-loc-7];drive[truck-0,city-loc-7,city-loc-9];drive[truck-0,city-loc-9,city-loc-14];drive[truck-0,city-loc-14,city-loc-2];drive[truck-0,city-loc-2,city-loc-0];pick-up[truck-0,city-loc-0,package-2,capacity-2,capacity-3];drive[truck-0,city-loc-0,city-loc-9];drive[truck-0,city-loc-9,city-loc-7];drop[truck-0,city-loc-7,package-2,capacity-2,capacity-3];drive[truck-0,city-loc-7,city-loc-9];drive[truck-0,city-loc-9,city-loc-14];drive[truck-0,city-loc-14,city-loc-2];pick-up[truck-0,city-loc-2,package-3,capacity-2,capacity-3];drive[truck-0,city-loc-2,city-loc-14];drive[truck-0,city-loc-14,city-loc-5];drive[truck-0,city-loc-5,city-loc-10];drive[truck-0,city-loc-10,city-loc-11];drive[truck-0,city-loc-11,city-loc-1];drop[truck-0,city-loc-1,package-3,capacity-2,capacity-3];drive[truck-0,city-loc-1,city-loc-11];drive[truck-0,city-loc-11,city-loc-10];drive[truck-0,city-loc-10,city-loc-4];drive[truck-0,city-loc-4,city-loc-14];pick-up[truck-0,city-loc-14,package-4,capacity-2,capacity-3];drive[truck-0,city-loc-14,city-loc-2];drive[truck-0,city-loc-2,city-loc-0];drive[truck-0,city-loc-0,city-loc-1];drive[truck-0,city-loc-1,city-loc-0];drive[truck-0,city-loc-0,city-loc-1];drop[truck-0,city-loc-1,package-4,capacity-2,capacity-3];drive[truck-0,city-loc-1,city-loc-11];drive[truck-0,city-loc-11,city-loc-1];drive[truck-0,city-loc-1,city-loc-0];drive[truck-0,city-loc-0,city-loc-2];drive[truck-0,city-loc-2,city-loc-12];pick-up[truck-0,city-loc-12,package-5,capacity-2,capacity-3];noop[truck-0,city-loc-12];drive[truck-0,city-loc-12,city-loc-3];drive[truck-0,city-loc-3,city-loc-14];drive[truck-0,city-loc-14,city-loc-9];drive[truck-0,city-loc-9,city-loc-7];drop[truck-0,city-loc-7,package-5,capacity-2,capacity-3];drive[truck-1,city-loc-11,city-loc-10];drive[truck-1,city-loc-10,city-loc-5];drive[truck-1,city-loc-5,city-loc-14];drive[truck-1,city-loc-14,city-loc-9];drive[truck-1,city-loc-9,city-loc-7];pick-up[truck-1,city-loc-7,package-6,capacity-2,capacity-3];drive[truck-1,city-loc-7,city-loc-9];drive[truck-1,city-loc-9,city-loc-14];drive[truck-1,city-loc-14,city-loc-5];drive[truck-1,city-loc-5,city-loc-10];drive[truck-1,city-loc-10,city-loc-11];drop[truck-1,city-loc-11,package-6,capacity-2,capacity-3];drive[truck-1,city-loc-11,city-loc-1];drive[truck-1,city-loc-1,city-loc-0];drive[truck-1,city-loc-0,city-loc-2];drive[truck-1,city-loc-2,city-loc-12];drive[truck-1,city-loc-12,city-loc-3];pick-up[truck-1,city-loc-3,package-7,capacity-2,capacity-3];drive[truck-1,city-loc-3,city-loc-14];drive[truck-1,city-loc-14,city-loc-2];drive[truck-1,city-loc-2,city-loc-0];drive[truck-1,city-loc-0,city-loc-2];drop[truck-1,city-loc-2,package-7,capacity-2,capacity-3];drive[truck-1,city-loc-2,city-loc-14];drive[truck-1,city-loc-14,city-loc-9];drive[truck-1,city-loc-9,city-loc-0];drive[truck-1,city-loc-0,city-loc-1];drive[truck-1,city-loc-1,city-loc-6];pick-up[truck-1,city-loc-6,package-8,capacity-2,capacity-3];drive[truck-1,city-loc-6,city-loc-1];drive[truck-1,city-loc-1,city-loc-0];drop[truck-1,city-loc-0,package-8,capacity-2,capacity-3];noop[truck-1,city-loc-0];drive[truck-1,city-loc-0,city-loc-1];drive[truck-1,city-loc-1,city-loc-6];drive[truck-1,city-loc-6,city-loc-1];drive[truck-1,city-loc-1,city-loc-11];pick-up[truck-1,city-loc-11,package-9,capacity-2,capacity-3];noop[truck-1,city-loc-11];drive[truck-1,city-loc-11,city-loc-10];drive[truck-1,city-loc-10,city-loc-5];drive[truck-1,city-loc-5,city-loc-14];drive[truck-1,city-loc-14,city-loc-9];drop[truck-1,city-loc-9,package-9,capacity-2,capacity-3]
==>
0 drive truck-2 city-loc-10 city-loc-4 
1 drive truck-2 city-loc-4 city-loc-14 
2 drive truck-2 city-loc-14 city-loc-2 
3 drive truck-2 city-loc-2 city-loc-0 
4 drive truck-2 city-loc-0 city-loc-1 
5 pick-up truck-2 city-loc-1 package-0 capacity-2 capacity-3 
6 drive truck-2 city-loc-1 city-loc-0 
7 drive truck-2 city-loc-0 city-loc-2 
8 drive truck-2 city-loc-2 city-loc-14 
9 drive truck-2 city-loc-14 city-loc-3 
10 drive truck-2 city-loc-3 city-loc-3 
11 drop truck-2 city-loc-3 package-0 capacity-2 capacity-3 
12 drive truck-2 city-loc-3 city-loc-12 
13 drive truck-2 city-loc-12 city-loc-2 
14 drive truck-2 city-loc-2 city-loc-12 
15 pick-up truck-2 city-loc-12 package-1 capacity-2 capacity-3 
16 drive truck-2 city-loc-12 city-loc-3 
17 drive truck-2 city-loc-3 city-loc-14 
18 drive truck-2 city-loc-14 city-loc-9 
19 drive truck-2 city-loc-9 city-loc-7 
20 drive truck-2 city-loc-7 city-loc-8 
21 drop truck-2 city-loc-8 package-1 capacity-2 capacity-3 
22 drive truck-0 city-loc-8 city-loc-7 
23 drive truck-0 city-loc-7 city-loc-9 
24 drive truck-0 city-loc-9 city-loc-14 
25 drive truck-0 city-loc-14 city-loc-2 
26 drive truck-0 city-loc-2 city-loc-0 
27 pick-up truck-0 city-loc-0 package-2 capacity-2 capacity-3 
28 drive truck-0 city-loc-0 city-loc-9 
29 drive truck-0 city-loc-9 city-loc-7 
30 drop truck-0 city-loc-7 package-2 capacity-2 capacity-3 
31 drive truck-0 city-loc-7 city-loc-9 
32 drive truck-0 city-loc-9 city-loc-14 
33 drive truck-0 city-loc-14 city-loc-2 
34 pick-up truck-0 city-loc-2 package-3 capacity-2 capacity-3 
35 drive truck-0 city-loc-2 city-loc-14 
36 drive truck-0 city-loc-14 city-loc-5 
37 drive truck-0 city-loc-5 city-loc-10 
38 drive truck-0 city-loc-10 city-loc-11 
39 drive truck-0 city-loc-11 city-loc-1 
40 drop truck-0 city-loc-1 package-3 capacity-2 capacity-3 
41 drive truck-0 city-loc-1 city-loc-11 
42 drive truck-0 city-loc-11 city-loc-10 
43 drive truck-0 city-loc-10 city-loc-4 
44 drive truck-0 city-loc-4 city-loc-14 
45 pick-up truck-0 city-loc-14 package-4 capacity-2 capacity-3 
46 drive truck-0 city-loc-14 city-loc-2 
47 drive truck-0 city-loc-2 city-loc-0 
48 drive truck-0 city-loc-0 city-loc-1 
49 drive truck-0 city-loc-1 city-loc-0 
50 drive truck-0 city-loc-0 city-loc-1 
51 drop truck-0 city-loc-1 package-4 capacity-2 capacity-3 
52 drive truck-0 city-loc-1 city-loc-11 
53 drive truck-0 city-loc-11 city-loc-1 
54 drive truck-0 city-loc-1 city-loc-0 
55 drive truck-0 city-loc-0 city-loc-2 
56 drive truck-0 city-loc-2 city-loc-12 
57 pick-up truck-0 city-loc-12 package-5 capacity-2 capacity-3 
58 noop truck-0 city-loc-12 
59 drive truck-0 city-loc-12 city-loc-3 
60 drive truck-0 city-loc-3 city-loc-14 
61 drive truck-0 city-loc-14 city-loc-9 
62 drive truck-0 city-loc-9 city-loc-7 
63 drop truck-0 city-loc-7 package-5 capacity-2 capacity-3 
64 drive truck-1 city-loc-11 city-loc-10 
65 drive truck-1 city-loc-10 city-loc-5 
66 drive truck-1 city-loc-5 city-loc-14 
67 drive truck-1 city-loc-14 city-loc-9 
68 drive truck-1 city-loc-9 city-loc-7 
69 pick-up truck-1 city-loc-7 package-6 capacity-2 capacity-3 
70 drive truck-1 city-loc-7 city-loc-9 
71 drive truck-1 city-loc-9 city-loc-14 
72 drive truck-1 city-loc-14 city-loc-5 
73 drive truck-1 city-loc-5 city-loc-10 
74 drive truck-1 city-loc-10 city-loc-11 
75 drop truck-1 city-loc-11 package-6 capacity-2 capacity-3 
76 drive truck-1 city-loc-11 city-loc-1 
77 drive truck-1 city-loc-1 city-loc-0 
78 drive truck-1 city-loc-0 city-loc-2 
79 drive truck-1 city-loc-2 city-loc-12 
80 drive truck-1 city-loc-12 city-loc-3 
81 pick-up truck-1 city-loc-3 package-7 capacity-2 capacity-3 
82 drive truck-1 city-loc-3 city-loc-14 
83 drive truck-1 city-loc-14 city-loc-2 
84 drive truck-1 city-loc-2 city-loc-0 
85 drive truck-1 city-loc-0 city-loc-2 
86 drop truck-1 city-loc-2 package-7 capacity-2 capacity-3 
87 drive truck-1 city-loc-2 city-loc-14 
88 drive truck-1 city-loc-14 city-loc-9 
89 drive truck-1 city-loc-9 city-loc-0 
90 drive truck-1 city-loc-0 city-loc-1 
91 drive truck-1 city-loc-1 city-loc-6 
92 pick-up truck-1 city-loc-6 package-8 capacity-2 capacity-3 
93 drive truck-1 city-loc-6 city-loc-1 
94 drive truck-1 city-loc-1 city-loc-0 
95 drop truck-1 city-loc-0 package-8 capacity-2 capacity-3 
96 noop truck-1 city-loc-0 
97 drive truck-1 city-loc-0 city-loc-1 
98 drive truck-1 city-loc-1 city-loc-6 
99 drive truck-1 city-loc-6 city-loc-1 
100 drive truck-1 city-loc-1 city-loc-11 
101 pick-up truck-1 city-loc-11 package-9 capacity-2 capacity-3 
102 noop truck-1 city-loc-11 
103 drive truck-1 city-loc-11 city-loc-10 
104 drive truck-1 city-loc-10 city-loc-5 
105 drive truck-1 city-loc-5 city-loc-14 
106 drive truck-1 city-loc-14 city-loc-9 
107 drop truck-1 city-loc-9 package-9 capacity-2 capacity-3 
root 121
108 get-to truck-2 city-loc-2  -> m-drive-to-via 145 7
109 deliver package-8 city-loc-0  -> m-deliver 193 158 167 136
110 get-to truck-1 city-loc-5  -> m-drive-to-via 191 72
111 get-to truck-0 city-loc-14  -> m-drive-to-via 117 24
112 get-to truck-1 city-loc-10  -> m-drive-to-via 160 103
113 load truck-2 city-loc-1 package-0  -> m-load 5
114 get-to truck-0 city-loc-11  -> m-drive-to-via 224 38
115 get-to truck-1 city-loc-0  -> m-drive-to-via 132 89
116 get-to truck-1 city-loc-2  -> m-drive-to-via 190 85
117 get-to truck-0 city-loc-9  -> m-drive-to-via 163 23
118 get-to truck-0 city-loc-0  -> m-drive-to-via 146 54
119 get-to truck-1 city-loc-1  -> m-drive-to 93
120 get-to truck-1 city-loc-10  -> m-drive-to-via 110 73
121 __artificialTopCompilation__top_1  -> __top_1 202 126 127 141 143 201 140 162 109 223
122 unload truck-1 city-loc-9 package-9  -> m-unload 107
123 load truck-0 city-loc-12 package-5  -> m-load 57
124 get-to truck-1 city-loc-2  -> m-drive-to-via 213 78
125 get-to truck-1 city-loc-1  -> m-drive-to-via 115 90
126 deliver package-1 city-loc-8  -> m-deliver 225 189 150 175
127 deliver package-2 city-loc-7  -> m-deliver 200 142 185 165
128 get-to truck-2 city-loc-7  -> m-drive-to-via 197 19
129 get-to truck-0 city-loc-12  -> m-i-am-there 58
130 get-to truck-2 city-loc-2  -> m-drive-to-via 219 13
131 get-to truck-0 city-loc-7  -> m-drive-to-via 164 62
132 get-to truck-1 city-loc-9  -> m-drive-to-via 217 88
133 load truck-1 city-loc-7 package-6  -> m-load 69
134 get-to truck-1 city-loc-7  -> m-drive-to-via 172 68
135 get-to truck-0 city-loc-9  -> m-drive-to 31
136 unload truck-1 city-loc-0 package-8  -> m-unload 95
137 get-to truck-1 city-loc-9  -> m-drive-to 70
138 unload truck-1 city-loc-2 package-7  -> m-unload 86
139 get-to truck-2 city-loc-2  -> m-drive-to-via 208 2
140 deliver package-6 city-loc-11  -> m-deliver 134 133 221 153
141 deliver package-3 city-loc-1  -> m-deliver 173 147 151 182
142 load truck-0 city-loc-0 package-2  -> m-load 27
143 deliver package-4 city-loc-1  -> m-deliver 166 171 186 148
144 get-to truck-0 city-loc-5  -> m-drive-to-via 196 36
145 get-to truck-2 city-loc-0  -> m-drive-to 6
146 get-to truck-0 city-loc-1  -> m-drive-to-via 214 53
147 load truck-0 city-loc-2 package-3  -> m-load 34
148 unload truck-0 city-loc-1 package-4  -> m-unload 51
149 get-to truck-2 city-loc-4  -> m-drive-to 0
150 get-to truck-2 city-loc-8  -> m-drive-to-via 128 20
151 get-to truck-0 city-loc-1  -> m-drive-to-via 114 39
152 get-to truck-1 city-loc-14  -> m-drive-to 82
153 unload truck-1 city-loc-11 package-6  -> m-unload 75
154 load truck-1 city-loc-11 package-9  -> m-load 101
155 get-to truck-2 city-loc-3  -> m-drive-to 16
156 get-to truck-0 city-loc-2  -> m-drive-to-via 118 55
157 load truck-1 city-loc-3 package-7  -> m-load 81
158 load truck-1 city-loc-6 package-8  -> m-load 92
159 get-to truck-1 city-loc-10  -> m-drive-to 64
160 get-to truck-1 city-loc-11  -> m-i-am-there 102
161 get-to truck-2 city-loc-14  -> m-drive-to-via 108 8
162 deliver package-7 city-loc-2  -> m-deliver 178 157 116 138
163 get-to truck-0 city-loc-7  -> m-drive-to 22
164 get-to truck-0 city-loc-9  -> m-drive-to-via 183 61
165 unload truck-0 city-loc-7 package-2  -> m-unload 30
166 get-to truck-0 city-loc-14  -> m-drive-to-via 205 44
167 get-to truck-1 city-loc-0  -> m-drive-to-via 119 94
168 get-to truck-2 city-loc-3  -> m-drive-to-via 161 9
169 unload truck-0 city-loc-7 package-5  -> m-unload 63
170 get-to truck-0 city-loc-11  -> m-drive-to 41
171 load truck-0 city-loc-14 package-4  -> m-load 45
172 get-to truck-1 city-loc-9  -> m-drive-to-via 192 67
173 get-to truck-0 city-loc-2  -> m-drive-to-via 220 33
174 get-to truck-1 city-loc-5  -> m-drive-to-via 159 65
175 unload truck-2 city-loc-8 package-1  -> m-unload 21
176 get-to truck-1 city-loc-5  -> m-drive-to-via 112 104
177 get-to truck-1 city-loc-11  -> m-drive-to-via 216 100
178 get-to truck-1 city-loc-3  -> m-drive-to-via 210 80
179 get-to truck-1 city-loc-6  -> m-drive-to-via 181 98
180 get-to truck-1 city-loc-14  -> m-drive-to-via 176 105
181 get-to truck-1 city-loc-1  -> m-drive-to-via 226 97
182 unload truck-0 city-loc-1 package-3  -> m-unload 40
183 get-to truck-0 city-loc-14  -> m-drive-to-via 206 60
184 unload truck-2 city-loc-3 package-0  -> m-unload 11
185 get-to truck-0 city-loc-7  -> m-drive-to-via 211 29
186 get-to truck-0 city-loc-1  -> m-drive-to-via 187 50
187 get-to truck-0 city-loc-0  -> m-drive-to-via 203 49
188 get-to truck-2 city-loc-1  -> m-drive-to-via 199 4
189 load truck-2 city-loc-12 package-1  -> m-load 15
190 get-to truck-1 city-loc-0  -> m-drive-to-via 209 84
191 get-to truck-1 city-loc-14  -> m-drive-to-via 137 71
192 get-to truck-1 city-loc-14  -> m-drive-to-via 174 66
193 get-to truck-1 city-loc-6  -> m-drive-to-via 125 91
194 get-to truck-2 city-loc-3  -> m-drive-to-via 168 10
195 get-to truck-2 city-loc-14  -> m-drive-to-via 155 17
196 get-to truck-0 city-loc-14  -> m-drive-to 35
197 get-to truck-2 city-loc-9  -> m-drive-to-via 195 18
198 get-to truck-0 city-loc-2  -> m-drive-to-via 111 25
199 get-to truck-2 city-loc-0  -> m-drive-to-via 139 3
200 get-to truck-0 city-loc-0  -> m-drive-to-via 198 26
201 deliver package-5 city-loc-7  -> m-deliver 207 123 131 169
202 deliver package-0 city-loc-3  -> m-deliver 188 113 194 184
203 get-to truck-0 city-loc-1  -> m-drive-to-via 204 48
204 get-to truck-0 city-loc-0  -> m-drive-to-via 222 47
205 get-to truck-0 city-loc-4  -> m-drive-to-via 215 43
206 get-to truck-0 city-loc-3  -> m-drive-to-via 129 59
207 get-to truck-0 city-loc-12  -> m-drive-to-via 156 56
208 get-to truck-2 city-loc-14  -> m-drive-to-via 149 1
209 get-to truck-1 city-loc-2  -> m-drive-to-via 152 83
210 get-to truck-1 city-loc-12  -> m-drive-to-via 124 79
211 get-to truck-0 city-loc-9  -> m-drive-to 28
212 get-to truck-1 city-loc-1  -> m-drive-to 76
213 get-to truck-1 city-loc-0  -> m-drive-to-via 212 77
214 get-to truck-0 city-loc-11  -> m-drive-to 52
215 get-to truck-0 city-loc-10  -> m-drive-to-via 170 42
216 get-to truck-1 city-loc-1  -> m-drive-to-via 179 99
217 get-to truck-1 city-loc-14  -> m-drive-to 87
218 get-to truck-1 city-loc-9  -> m-drive-to-via 180 106
219 get-to truck-2 city-loc-12  -> m-drive-to 12
220 get-to truck-0 city-loc-14  -> m-drive-to-via 135 32
221 get-to truck-1 city-loc-11  -> m-drive-to-via 120 74
222 get-to truck-0 city-loc-2  -> m-drive-to 46
223 deliver package-9 city-loc-9  -> m-deliver 177 154 218 122
224 get-to truck-0 city-loc-10  -> m-drive-to-via 144 37
225 get-to truck-2 city-loc-12  -> m-drive-to-via 130 14
226 get-to truck-1 city-loc-0  -> m-i-am-there 96

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 10.423 MEMPEAK_KBS 419770.368
