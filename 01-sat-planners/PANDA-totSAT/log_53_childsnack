PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/childsnack/domain.hddl instances/childsnack/p13.hddl"


Planner Configuration
=====================
Domain: instances/childsnack/domain.hddl
Problem: instances/childsnack/p13.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p13.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 13
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 82
Compiling negative preconditions ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 82
Compiling split parameters ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 82
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 82
Grounded planning graph ... done in 1615ms.
	Number of Grounded Actions 44740
	Number of Grounded Literals 296
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 82
Two Way TDG ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 82
Grounding ... done.
	number of abstract tasks = 17
	number of tasks = 40889
	number of decomposition methods = 142324
	number of predicates = 330
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 17
	number of tasks = 40889
	number of decomposition methods = 142324
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 4261ms.
	Number of Grounded Actions 40872
	Number of Grounded Literals 228
	number of abstract tasks = 17
	number of tasks = 40889
	number of decomposition methods = 142324
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 17
	number of tasks = 40889
	number of decomposition methods = 142324
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 17
	number of tasks = 40889
	number of decomposition methods = 142324
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 18
	number of tasks = 40890
	number of decomposition methods = 142325
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 18
	number of tasks = 40890
	number of decomposition methods = 142325
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 2872ms.
	Number of Grounded Actions 40872
	Number of Grounded Literals 228
	number of abstract tasks = 18
	number of tasks = 40890
	number of decomposition methods = 142325
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 18
	number of tasks = 40890
	number of decomposition methods = 142325
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 18
	number of tasks = 40890
	number of decomposition methods = 142325
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 18
	number of tasks = 40890
	number of decomposition methods = 142325
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 18
	number of tasks = 40890
	number of decomposition methods = 142325
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 18
	number of tasks = 40890
	number of decomposition methods = 142325
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 35581
	number of epsilon methods = 0
	number of primitive tasks = 40872
	number of constants = 0
Tasks 40872 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854670646ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Still waiting ... running for 295 will abort at 9223372036854666996
Generating initial PDT ... done
initial PDT has 102 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 102 leafs
SHOP LEAFS 17
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 77634
Size 77631 at 0/40872
Size 76854 at 500/40872
Size 76313 at 1000/40872
Size 54813 at 1500/40872
Size 54628 at 2000/40872
Size 22083 at 2500/40872
Size 22083 at 3000/40872
Size 22083 at 3500/40872
Size 22083 at 4000/40872
Size 22083 at 4500/40872
Size 22083 at 5000/40872
Size 22083 at 5500/40872
Size 22083 at 6000/40872
Size 22083 at 6500/40872
Size 22083 at 7000/40872
Size 22083 at 7500/40872
Size 22083 at 8000/40872
Size 22083 at 8500/40872
Size 22083 at 9000/40872
Size 22083 at 9500/40872
Size 22083 at 10000/40872
Size 22083 at 10500/40872
Size 22083 at 11000/40872
Size 22083 at 11500/40872
Size 22083 at 12000/40872
Size 22083 at 12500/40872
Size 22083 at 13000/40872
Size 22083 at 13500/40872
Size 22083 at 14000/40872
Size 22083 at 14500/40872
Size 22083 at 15000/40872
Size 22083 at 15500/40872
Size 22083 at 16000/40872
Size 22083 at 16500/40872
Size 22083 at 17000/40872
Size 22083 at 17500/40872
Size 22083 at 18000/40872
Size 22083 at 18500/40872
Size 22083 at 19000/40872
Size 22083 at 19500/40872
Size 22083 at 20000/40872
Size 22083 at 20500/40872
Size 22083 at 21000/40872
Size 22083 at 21500/40872
Size 22083 at 22000/40872
Size 22083 at 22500/40872
Size 22083 at 23000/40872
Size 22083 at 23500/40872
Size 22083 at 24000/40872
Size 22083 at 24500/40872
Size 22083 at 25000/40872
Size 22083 at 25500/40872
Size 22083 at 26000/40872
Size 22083 at 26500/40872
Size 22083 at 27000/40872
Size 22083 at 27500/40872
Size 22083 at 28000/40872
Size 22083 at 28500/40872
Size 22083 at 29000/40872
Size 22083 at 29500/40872
Size 22083 at 30000/40872
Size 22083 at 30500/40872
Size 22083 at 31000/40872
Size 22083 at 31500/40872
Size 22083 at 32000/40872
Size 22083 at 32500/40872
Size 22083 at 33000/40872
Size 15600 at 33500/40872
Size 15600 at 34000/40872
Size 15600 at 34500/40872
Size 15600 at 35000/40872
Size 15600 at 35500/40872
Size 15600 at 36000/40872
Size 15600 at 36500/40872
Size 15600 at 37000/40872
Size 15600 at 37500/40872
Size 15600 at 38000/40872
Size 6171 at 38500/40872
Size 6171 at 39000/40872
Size 6171 at 39500/40872
Size 6171 at 40000/40872
Size 6171 at 40500/40872
Size 6171
Size 5849 at 0/40872
Size 2532 at 500/40872
Size 2532 at 1000/40872
Size 2532 at 1500/40872
Size 484 at 2000/40872
Size 392 at 2500/40872
Size 392 at 3000/40872
Size 392 at 3500/40872
Size 392 at 4000/40872
Size 392 at 4500/40872
Size 392 at 5000/40872
Size 392 at 5500/40872
Size 392 at 6000/40872
Size 392 at 6500/40872
Size 392 at 7000/40872
Size 392 at 7500/40872
Size 392 at 8000/40872
Size 392 at 8500/40872
Size 392 at 9000/40872
Size 392 at 9500/40872
Size 392 at 10000/40872
Size 392 at 10500/40872
Size 392 at 11000/40872
Size 392 at 11500/40872
Size 392 at 12000/40872
Size 392 at 12500/40872
Size 392 at 13000/40872
Size 392 at 13500/40872
Size 392 at 14000/40872
Size 392 at 14500/40872
Size 392 at 15000/40872
Size 392 at 15500/40872
Size 392 at 16000/40872
Size 392 at 16500/40872
Size 392 at 17000/40872
Size 392 at 17500/40872
Size 392 at 18000/40872
Size 392 at 18500/40872
Size 392 at 19000/40872
Size 392 at 19500/40872
Size 392 at 20000/40872
Size 392 at 20500/40872
Size 392 at 21000/40872
Size 392 at 21500/40872
Size 392 at 22000/40872
Size 392 at 22500/40872
Size 392 at 23000/40872
Size 392 at 23500/40872
Size 392 at 24000/40872
Size 392 at 24500/40872
Size 392 at 25000/40872
Size 392 at 25500/40872
Size 392 at 26000/40872
Size 392 at 26500/40872
Size 392 at 27000/40872
Size 392 at 27500/40872
Size 392 at 28000/40872
Size 392 at 28500/40872
Size 392 at 29000/40872
Size 392 at 29500/40872
Size 392 at 30000/40872
Size 392 at 30500/40872
Size 392 at 31000/40872
Size 392 at 31500/40872
Size 392 at 32000/40872
Size 392 at 32500/40872
Size 392 at 33000/40872
Size 392 at 33500/40872
Size 392 at 34000/40872
Size 392 at 34500/40872
Size 392 at 35000/40872
Size 392 at 35500/40872
Size 392 at 36000/40872
Size 392 at 36500/40872
Size 392 at 37000/40872
Size 392 at 37500/40872
Size 392 at 38000/40872
Size 392 at 38500/40872
Size 392 at 39000/40872
Size 392 at 39500/40872
Size 392 at 40000/40872
Size 392 at 40500/40872
Size 392
Size 392 at 0/40872
Size 392 at 500/40872
Size 392 at 1000/40872
Size 392 at 1500/40872
Size 392 at 2000/40872
Size 392 at 2500/40872
Size 392 at 3000/40872
Size 392 at 3500/40872
Size 392 at 4000/40872
Size 392 at 4500/40872
Size 392 at 5000/40872
Size 392 at 5500/40872
Size 392 at 6000/40872
Size 392 at 6500/40872
Size 392 at 7000/40872
Size 392 at 7500/40872
Size 392 at 8000/40872
Size 392 at 8500/40872
Size 392 at 9000/40872
Size 392 at 9500/40872
Size 392 at 10000/40872
Size 392 at 10500/40872
Size 392 at 11000/40872
Size 392 at 11500/40872
Size 392 at 12000/40872
Size 392 at 12500/40872
Size 392 at 13000/40872
Size 392 at 13500/40872
Size 392 at 14000/40872
Size 392 at 14500/40872
Size 392 at 15000/40872
Size 392 at 15500/40872
Size 392 at 16000/40872
Size 392 at 16500/40872
Size 392 at 17000/40872
Size 392 at 17500/40872
Size 392 at 18000/40872
Size 392 at 18500/40872
Size 392 at 19000/40872
Size 392 at 19500/40872
Size 392 at 20000/40872
Size 392 at 20500/40872
Size 392 at 21000/40872
Size 392 at 21500/40872
Size 392 at 22000/40872
Size 392 at 22500/40872
Size 392 at 23000/40872
Size 392 at 23500/40872
Size 392 at 24000/40872
Size 392 at 24500/40872
Size 392 at 25000/40872
Size 392 at 25500/40872
Size 392 at 26000/40872
Size 392 at 26500/40872
Size 392 at 27000/40872
Size 392 at 27500/40872
Size 392 at 28000/40872
Size 392 at 28500/40872
Size 392 at 29000/40872
Size 392 at 29500/40872
Size 392 at 30000/40872
Size 392 at 30500/40872
Size 392 at 31000/40872
Size 392 at 31500/40872
Size 392 at 32000/40872
Size 392 at 32500/40872
Size 392 at 33000/40872
Size 392 at 33500/40872
Size 392 at 34000/40872
Size 392 at 34500/40872
Size 392 at 35000/40872
Size 392 at 35500/40872
Size 392 at 36000/40872
Size 392 at 36500/40872
Size 392 at 37000/40872
Size 392 at 37500/40872
Size 392 at 38000/40872
Size 392 at 38500/40872
Size 392 at 39000/40872
Size 392 at 39500/40872
Size 392 at 40000/40872
Size 392 at 40500/40872
Size 392
Invariant time: 4.04
Number of invariants: 392
Invariant Clauses 40376
NUMBER OF CLAUSES 4412343
NUMBER OF STATE CLAUSES 390221
NUMBER OF DECOMPOSITION CLAUSES 4022122
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 8.84% 91.16% 0.0% 
NUMBER OF PATHS 102
Starting cryptominisat
Setting starttime of solver to 1603873072835
Command exited with non-zero status 10
1.76 0.03

Time command gave the following runtime for the solver: 1790
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_4,119182 119182 m0_serve
4 115 pathaction!1_4,38094
Consider method^1_3,136783 136783 m0_serve
3 91 pathaction!1_3,38092
Consider method^1_7,142177 142177 m1_serve
7 20 pathaction!1_7,38089
Consider method^1_6,101194 101194 m1_serve
6 1 pathaction!1_6,38093
Consider method^1_9,16569 16569 m1_serve
9 76 pathaction!1_9,38097
Consider method^1_13,74524 74524 m1_serve
13 17 pathaction!1_13,38095
Consider method^1_2,98679 98679 m1_serve
2 116 pathaction!1_2,38099
Consider method^1_16,16715 16715 m0_serve
16 79 pathaction!1_16,38104
Consider method^1_14,126191 126191 m1_serve
14 104 pathaction!1_14,38090
Consider method^1_8,142150 142150 m1_serve
8 85 pathaction!1_8,38101
Consider method^0_,142324 142324 __top_1
 62 pathaction!0_,40889
Consider method^1_0,56566 56566 m1_serve
0 75 pathaction!1_0,38091
Consider method^1_11,41933 41933 m1_serve
11 80 pathaction!1_11,38103
Consider method^1_10,10056 10056 m0_serve
10 86 pathaction!1_10,38105
Consider method^1_5,22221 22221 m0_serve
5 45 pathaction!1_5,38102
Consider method^1_15,108356 108356 m1_serve
15 43 pathaction!1_15,38100
Consider method^1_1,141048 141048 m0_serve
1 93 pathaction!1_1,38096
Consider method^1_12,118097 118097 m1_serve
12 38 pathaction!1_12,38098


CHECKING primitive solution of length 102 ...
true 70 __method_precondition_m1_serve_1_precondition[table1,sandw22,child1,content16,bread14;]
true 54 make_sandwich[sandw22,bread14,content16;]
true 101 put_on_tray[sandw22,tray3;kitchen]
true 16 move_tray[tray3,kitchen,table1;]
true 87 serve_sandwich[sandw22,child1,tray3,table1;]
true 72 move_tray[tray3,table1,kitchen;]
true 100 __method_precondition_m0_serve_0_precondition[sandw1,child2,bread4,table2,content12;]
true 2 make_sandwich_no_gluten[sandw1,bread4,content12;]
true 53 put_on_tray[sandw1,tray4;kitchen]
true 99 move_tray[tray4,kitchen,table2;]
true 84 serve_sandwich_no_gluten[sandw1,child2,tray4,table2;]
true 55 move_tray[tray4,table2,kitchen;]
true 44 __method_precondition_m1_serve_1_precondition[table2,sandw21,child3,content14,bread2;]
true 10 make_sandwich[sandw21,bread2,content14;]
true 64 put_on_tray[sandw21,tray2;kitchen]
true 119 move_tray[tray2,kitchen,table2;]
true 47 serve_sandwich[sandw21,child3,tray2,table2;]
true 28 move_tray[tray2,table2,kitchen;]
true 4 __method_precondition_m0_serve_0_precondition[sandw16,child4,bread10,table1,content5;]
true 29 make_sandwich_no_gluten[sandw16,bread10,content5;]
true 97 put_on_tray[sandw16,tray3;kitchen]
true 26 move_tray[tray3,kitchen,table1;]
true 46 serve_sandwich_no_gluten[sandw16,child4,tray3,table1;]
true 0 move_tray[tray3,table1,kitchen;]
true 34 __method_precondition_m0_serve_0_precondition[sandw14,child5,bread13,table2,content17;]
true 49 make_sandwich_no_gluten[sandw14,bread13,content17;]
true 94 put_on_tray[sandw14,tray4;kitchen]
true 22 move_tray[tray4,kitchen,table2;]
true 95 serve_sandwich_no_gluten[sandw14,child5,tray4,table2;]
true 59 move_tray[tray4,table2,kitchen;]
true 92 __method_precondition_m0_serve_0_precondition[sandw23,child6,bread8,table1,content3;]
true 6 make_sandwich_no_gluten[sandw23,bread8,content3;]
true 90 put_on_tray[sandw23,tray3;kitchen]
true 78 move_tray[tray3,kitchen,table1;]
true 30 serve_sandwich_no_gluten[sandw23,child6,tray3,table1;]
true 57 move_tray[tray3,table1,kitchen;]
true 106 __method_precondition_m1_serve_1_precondition[table1,sandw6,child7,content13,bread6;]
true 96 make_sandwich[sandw6,bread6,content13;]
true 77 put_on_tray[sandw6,tray4;kitchen]
true 89 move_tray[tray4,kitchen,table1;]
true 40 serve_sandwich[sandw6,child7,tray4,table1;]
true 102 move_tray[tray4,table1,kitchen;]
true 37 __method_precondition_m1_serve_1_precondition[table3,sandw19,child8,content2,bread9;]
true 61 make_sandwich[sandw19,bread9,content2;]
true 68 put_on_tray[sandw19,tray2;kitchen]
true 88 move_tray[tray2,kitchen,table3;]
true 35 serve_sandwich[sandw19,child8,tray2,table3;]
true 9 move_tray[tray2,table3,kitchen;]
true 98 __method_precondition_m1_serve_1_precondition[table3,sandw13,child9,content7,bread11;]
true 74 make_sandwich[sandw13,bread11,content7;]
true 51 put_on_tray[sandw13,tray2;kitchen]
true 111 move_tray[tray2,kitchen,table3;]
true 67 serve_sandwich[sandw13,child9,tray2,table3;]
true 8 move_tray[tray2,table3,kitchen;]
true 27 __method_precondition_m1_serve_1_precondition[table2,sandw12,child10,content1,bread5;]
true 105 make_sandwich[sandw12,bread5,content1;]
true 65 put_on_tray[sandw12,tray2;kitchen]
true 23 move_tray[tray2,kitchen,table2;]
true 50 serve_sandwich[sandw12,child10,tray2,table2;]
true 36 move_tray[tray2,table2,kitchen;]
true 58 __method_precondition_m0_serve_0_precondition[sandw17,child11,bread7,table3,content10;]
true 13 make_sandwich_no_gluten[sandw17,bread7,content10;]
true 83 put_on_tray[sandw17,tray4;kitchen]
true 41 move_tray[tray4,kitchen,table3;]
true 32 serve_sandwich_no_gluten[sandw17,child11,tray4,table3;]
true 3 move_tray[tray4,table3,kitchen;]
true 11 __method_precondition_m1_serve_1_precondition[table2,sandw5,child12,content9,bread12;]
true 42 make_sandwich[sandw5,bread12,content9;]
true 108 put_on_tray[sandw5,tray2;kitchen]
true 82 move_tray[tray2,kitchen,table2;]
true 48 serve_sandwich[sandw5,child12,tray2,table2;]
true 39 move_tray[tray2,table2,kitchen;]
true 52 __method_precondition_m1_serve_1_precondition[table2,sandw7,child13,content11,bread17;]
true 56 make_sandwich[sandw7,bread17,content11;]
true 81 put_on_tray[sandw7,tray1;kitchen]
true 5 move_tray[tray1,kitchen,table2;]
true 109 serve_sandwich[sandw7,child13,tray1,table2;]
true 24 move_tray[tray1,table2,kitchen;]
true 19 __method_precondition_m1_serve_1_precondition[table2,sandw8,child14,content15,bread1;]
true 15 make_sandwich[sandw8,bread1,content15;]
true 113 put_on_tray[sandw8,tray2;kitchen]
true 71 move_tray[tray2,kitchen,table2;]
true 103 serve_sandwich[sandw8,child14,tray2,table2;]
true 112 move_tray[tray2,table2,kitchen;]
true 66 __method_precondition_m1_serve_1_precondition[table2,sandw4,child15,content8,bread3;]
true 31 make_sandwich[sandw4,bread3,content8;]
true 63 put_on_tray[sandw4,tray3;kitchen]
true 18 move_tray[tray3,kitchen,table2;]
true 118 serve_sandwich[sandw4,child15,tray3,table2;]
true 110 move_tray[tray3,table2,kitchen;]
true 21 __method_precondition_m1_serve_1_precondition[table3,sandw18,child16,content6,bread16;]
true 114 make_sandwich[sandw18,bread16,content6;]
true 25 put_on_tray[sandw18,tray1;kitchen]
true 73 move_tray[tray1,kitchen,table3;]
true 117 serve_sandwich[sandw18,child16,tray1,table3;]
true 7 move_tray[tray1,table3,kitchen;]
true 69 __method_precondition_m0_serve_0_precondition[sandw20,child17,bread15,table1,content4;]
true 14 make_sandwich_no_gluten[sandw20,bread15,content4;]
true 33 put_on_tray[sandw20,tray3;kitchen]
true 12 move_tray[tray3,kitchen,table1;]
true 107 serve_sandwich_no_gluten[sandw20,child17,tray3,table1;]
true 60 move_tray[tray3,table1,kitchen;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 5544157248
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 228
number of actions                    = 40890
number of abstract actions           = 18
number of primitive actions          = 40872
number of methods                    = 142325
number of primitive shop actions     = 35581
number of primitive non-shop actions = 5291
size of largest method               = 17
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 259400
number of clauses               = 4412343
average size of clauses         = 2.067057570093712
number of assert                = 79
number of horn                  = 4407284
K offset                        = 0
K chosen value                  = 2
state formula                   = 390221
method children clauses         = 0
number of paths                 = 102
maximum plan length             = 102
number of decomposition clauses = 4022122
number of ordering clauses      = 0
number of state clauses         = 390221
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 144483
============ parsing ============
total                         = 1093
file parser                   = 575
sort expansion                = 226
closed world assumption       = 159
inherit preconditions         = 0
shop methods                  = 32
eliminate identical variables = 50
strip domain of hybridity     = 2
flatten formula               = 49
============ preprocessing ============
total                                      = 88482
compile negative preconditions             = 52
compile unit methods                       = 0
split parameter                            = 42
expand choiceless abstract tasks           = 156
compile methods with identical tasks       = 699
removing unnecessary predicates            = 26042
lifted reachabiltiy analysis               = 81
grounded planning graph analysis           = 18142
grounded task decomposition graph analysis = 34334
grounding                                  = 8428
create artificial top task                 = 338
============ search preparation ============
compute state invariants = 4212
============ sat ============
total                                        = 29753
generate formula                             = 26893
generate path decomposition tree             = 15079
normalise path decomposition tree            = 642
sog optimisation                             = 3063
translate path decomposition tree to clauses = 4685
generate state formula                       = 26593
generate state invariant formula             = 32
transform to DIMACS                          = 835
SAT solver                                   = 1790
SAT solver for K=0002                        = 1790

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="40872";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="18";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="5544157248";"40 sat:20:state formula"="390221";"40 sat:01:number of variables"="259400";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="102";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="142325";"30 problem:07:number of primitive shop actions"="35581";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="40890";"30 problem:08:number of primitive non-shop actions"="5291";"30 problem:02:number of predicates"="228";"40 sat:03:number of horn"="4407284";"40 sat:15:K chosen value"="2";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="17";"40 sat:03:average size of clauses"="2.067057570093712";"40 sat:02:number of clauses"="4412343";"40 sat:50:number of state clauses"="390221";"40 sat:03:number of assert"="79";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="102";"40 sat:50:number of decomposition clauses"="4022122";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="575";"01 parsing:08:flatten formula"="49";"40 sat:00:total"="29753";"40 sat:16:generate state formula"="26593";"40 sat:20:transform to DIMACS"="835";"40 sat:11:generate path decomposition tree"="15079";"02 preprocessing:07:compile methods with identical tasks"="699";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="26042";"01 parsing:03:closed world assumption"="159";"02 preprocessing:11:lifted reachabiltiy analysis"="81";"01 parsing:02:sort expansion"="226";"40 sat:12:normalise path decomposition tree"="642";"40 sat:40:SAT solver"="1790";"01 parsing:00:total"="1093";"40 sat:10:generate formula"="26893";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="1790";"02 preprocessing:01:compile negative preconditions"="52";"00 total:00:total"="144483";"40 sat:13:sog optimisation"="3063";"02 preprocessing:12:grounded planning graph analysis"="18142";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="34334";"02 preprocessing:04:split parameter"="42";"01 parsing:05:shop methods"="32";"10 search preparation:02:compute state invariants"="4212";"01 parsing:06:eliminate identical variables"="50";"40 sat:15:translate path decomposition tree to clauses"="4685";"02 preprocessing:05:expand choiceless abstract tasks"="156";"40 sat:17:generate state invariant formula"="32";"02 preprocessing:00:total"="88482";"02 preprocessing:99:create artificial top task"="338";"02 preprocessing:84:grounding"="8428"
#!verify __method_precondition_m1_serve_1_precondition[table1,sandw22,child1,content16,bread14];make_sandwich[sandw22,bread14,content16];put_on_tray[sandw22,tray3];move_tray[tray3,kitchen,table1];serve_sandwich[sandw22,child1,tray3,table1];move_tray[tray3,table1,kitchen];__method_precondition_m0_serve_0_precondition[sandw1,child2,bread4,table2,content12];make_sandwich_no_gluten[sandw1,bread4,content12];put_on_tray[sandw1,tray4];move_tray[tray4,kitchen,table2];serve_sandwich_no_gluten[sandw1,child2,tray4,table2];move_tray[tray4,table2,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw21,child3,content14,bread2];make_sandwich[sandw21,bread2,content14];put_on_tray[sandw21,tray2];move_tray[tray2,kitchen,table2];serve_sandwich[sandw21,child3,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m0_serve_0_precondition[sandw16,child4,bread10,table1,content5];make_sandwich_no_gluten[sandw16,bread10,content5];put_on_tray[sandw16,tray3];move_tray[tray3,kitchen,table1];serve_sandwich_no_gluten[sandw16,child4,tray3,table1];move_tray[tray3,table1,kitchen];__method_precondition_m0_serve_0_precondition[sandw14,child5,bread13,table2,content17];make_sandwich_no_gluten[sandw14,bread13,content17];put_on_tray[sandw14,tray4];move_tray[tray4,kitchen,table2];serve_sandwich_no_gluten[sandw14,child5,tray4,table2];move_tray[tray4,table2,kitchen];__method_precondition_m0_serve_0_precondition[sandw23,child6,bread8,table1,content3];make_sandwich_no_gluten[sandw23,bread8,content3];put_on_tray[sandw23,tray3];move_tray[tray3,kitchen,table1];serve_sandwich_no_gluten[sandw23,child6,tray3,table1];move_tray[tray3,table1,kitchen];__method_precondition_m1_serve_1_precondition[table1,sandw6,child7,content13,bread6];make_sandwich[sandw6,bread6,content13];put_on_tray[sandw6,tray4];move_tray[tray4,kitchen,table1];serve_sandwich[sandw6,child7,tray4,table1];move_tray[tray4,table1,kitchen];__method_precondition_m1_serve_1_precondition[table3,sandw19,child8,content2,bread9];make_sandwich[sandw19,bread9,content2];put_on_tray[sandw19,tray2];move_tray[tray2,kitchen,table3];serve_sandwich[sandw19,child8,tray2,table3];move_tray[tray2,table3,kitchen];__method_precondition_m1_serve_1_precondition[table3,sandw13,child9,content7,bread11];make_sandwich[sandw13,bread11,content7];put_on_tray[sandw13,tray2];move_tray[tray2,kitchen,table3];serve_sandwich[sandw13,child9,tray2,table3];move_tray[tray2,table3,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw12,child10,content1,bread5];make_sandwich[sandw12,bread5,content1];put_on_tray[sandw12,tray2];move_tray[tray2,kitchen,table2];serve_sandwich[sandw12,child10,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m0_serve_0_precondition[sandw17,child11,bread7,table3,content10];make_sandwich_no_gluten[sandw17,bread7,content10];put_on_tray[sandw17,tray4];move_tray[tray4,kitchen,table3];serve_sandwich_no_gluten[sandw17,child11,tray4,table3];move_tray[tray4,table3,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw5,child12,content9,bread12];make_sandwich[sandw5,bread12,content9];put_on_tray[sandw5,tray2];move_tray[tray2,kitchen,table2];serve_sandwich[sandw5,child12,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw7,child13,content11,bread17];make_sandwich[sandw7,bread17,content11];put_on_tray[sandw7,tray1];move_tray[tray1,kitchen,table2];serve_sandwich[sandw7,child13,tray1,table2];move_tray[tray1,table2,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw8,child14,content15,bread1];make_sandwich[sandw8,bread1,content15];put_on_tray[sandw8,tray2];move_tray[tray2,kitchen,table2];serve_sandwich[sandw8,child14,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw4,child15,content8,bread3];make_sandwich[sandw4,bread3,content8];put_on_tray[sandw4,tray3];move_tray[tray3,kitchen,table2];serve_sandwich[sandw4,child15,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m1_serve_1_precondition[table3,sandw18,child16,content6,bread16];make_sandwich[sandw18,bread16,content6];put_on_tray[sandw18,tray1];move_tray[tray1,kitchen,table3];serve_sandwich[sandw18,child16,tray1,table3];move_tray[tray1,table3,kitchen];__method_precondition_m0_serve_0_precondition[sandw20,child17,bread15,table1,content4];make_sandwich_no_gluten[sandw20,bread15,content4];put_on_tray[sandw20,tray3];move_tray[tray3,kitchen,table1];serve_sandwich_no_gluten[sandw20,child17,tray3,table1];move_tray[tray3,table1,kitchen]
==>
0 __method_precondition_m1_serve_1_precondition table1 sandw22 child1 content16 bread14 
1 make_sandwich sandw22 bread14 content16 
2 put_on_tray sandw22 tray3 
3 move_tray tray3 kitchen table1 
4 serve_sandwich sandw22 child1 tray3 table1 
5 move_tray tray3 table1 kitchen 
6 __method_precondition_m0_serve_0_precondition sandw1 child2 bread4 table2 content12 
7 make_sandwich_no_gluten sandw1 bread4 content12 
8 put_on_tray sandw1 tray4 
9 move_tray tray4 kitchen table2 
10 serve_sandwich_no_gluten sandw1 child2 tray4 table2 
11 move_tray tray4 table2 kitchen 
12 __method_precondition_m1_serve_1_precondition table2 sandw21 child3 content14 bread2 
13 make_sandwich sandw21 bread2 content14 
14 put_on_tray sandw21 tray2 
15 move_tray tray2 kitchen table2 
16 serve_sandwich sandw21 child3 tray2 table2 
17 move_tray tray2 table2 kitchen 
18 __method_precondition_m0_serve_0_precondition sandw16 child4 bread10 table1 content5 
19 make_sandwich_no_gluten sandw16 bread10 content5 
20 put_on_tray sandw16 tray3 
21 move_tray tray3 kitchen table1 
22 serve_sandwich_no_gluten sandw16 child4 tray3 table1 
23 move_tray tray3 table1 kitchen 
24 __method_precondition_m0_serve_0_precondition sandw14 child5 bread13 table2 content17 
25 make_sandwich_no_gluten sandw14 bread13 content17 
26 put_on_tray sandw14 tray4 
27 move_tray tray4 kitchen table2 
28 serve_sandwich_no_gluten sandw14 child5 tray4 table2 
29 move_tray tray4 table2 kitchen 
30 __method_precondition_m0_serve_0_precondition sandw23 child6 bread8 table1 content3 
31 make_sandwich_no_gluten sandw23 bread8 content3 
32 put_on_tray sandw23 tray3 
33 move_tray tray3 kitchen table1 
34 serve_sandwich_no_gluten sandw23 child6 tray3 table1 
35 move_tray tray3 table1 kitchen 
36 __method_precondition_m1_serve_1_precondition table1 sandw6 child7 content13 bread6 
37 make_sandwich sandw6 bread6 content13 
38 put_on_tray sandw6 tray4 
39 move_tray tray4 kitchen table1 
40 serve_sandwich sandw6 child7 tray4 table1 
41 move_tray tray4 table1 kitchen 
42 __method_precondition_m1_serve_1_precondition table3 sandw19 child8 content2 bread9 
43 make_sandwich sandw19 bread9 content2 
44 put_on_tray sandw19 tray2 
45 move_tray tray2 kitchen table3 
46 serve_sandwich sandw19 child8 tray2 table3 
47 move_tray tray2 table3 kitchen 
48 __method_precondition_m1_serve_1_precondition table3 sandw13 child9 content7 bread11 
49 make_sandwich sandw13 bread11 content7 
50 put_on_tray sandw13 tray2 
51 move_tray tray2 kitchen table3 
52 serve_sandwich sandw13 child9 tray2 table3 
53 move_tray tray2 table3 kitchen 
54 __method_precondition_m1_serve_1_precondition table2 sandw12 child10 content1 bread5 
55 make_sandwich sandw12 bread5 content1 
56 put_on_tray sandw12 tray2 
57 move_tray tray2 kitchen table2 
58 serve_sandwich sandw12 child10 tray2 table2 
59 move_tray tray2 table2 kitchen 
60 __method_precondition_m0_serve_0_precondition sandw17 child11 bread7 table3 content10 
61 make_sandwich_no_gluten sandw17 bread7 content10 
62 put_on_tray sandw17 tray4 
63 move_tray tray4 kitchen table3 
64 serve_sandwich_no_gluten sandw17 child11 tray4 table3 
65 move_tray tray4 table3 kitchen 
66 __method_precondition_m1_serve_1_precondition table2 sandw5 child12 content9 bread12 
67 make_sandwich sandw5 bread12 content9 
68 put_on_tray sandw5 tray2 
69 move_tray tray2 kitchen table2 
70 serve_sandwich sandw5 child12 tray2 table2 
71 move_tray tray2 table2 kitchen 
72 __method_precondition_m1_serve_1_precondition table2 sandw7 child13 content11 bread17 
73 make_sandwich sandw7 bread17 content11 
74 put_on_tray sandw7 tray1 
75 move_tray tray1 kitchen table2 
76 serve_sandwich sandw7 child13 tray1 table2 
77 move_tray tray1 table2 kitchen 
78 __method_precondition_m1_serve_1_precondition table2 sandw8 child14 content15 bread1 
79 make_sandwich sandw8 bread1 content15 
80 put_on_tray sandw8 tray2 
81 move_tray tray2 kitchen table2 
82 serve_sandwich sandw8 child14 tray2 table2 
83 move_tray tray2 table2 kitchen 
84 __method_precondition_m1_serve_1_precondition table2 sandw4 child15 content8 bread3 
85 make_sandwich sandw4 bread3 content8 
86 put_on_tray sandw4 tray3 
87 move_tray tray3 kitchen table2 
88 serve_sandwich sandw4 child15 tray3 table2 
89 move_tray tray3 table2 kitchen 
90 __method_precondition_m1_serve_1_precondition table3 sandw18 child16 content6 bread16 
91 make_sandwich sandw18 bread16 content6 
92 put_on_tray sandw18 tray1 
93 move_tray tray1 kitchen table3 
94 serve_sandwich sandw18 child16 tray1 table3 
95 move_tray tray1 table3 kitchen 
96 __method_precondition_m0_serve_0_precondition sandw20 child17 bread15 table1 content4 
97 make_sandwich_no_gluten sandw20 bread15 content4 
98 put_on_tray sandw20 tray3 
99 move_tray tray3 kitchen table1 
100 serve_sandwich_no_gluten sandw20 child17 tray3 table1 
101 move_tray tray3 table1 kitchen 
root 109
102 serve child2  -> m0_serve 6 7 8 9 10 11
103 serve child13  -> m1_serve 72 73 74 75 76 77
104 serve child11  -> m0_serve 60 61 62 63 64 65
105 serve child15  -> m1_serve 84 85 86 87 88 89
106 serve child8  -> m1_serve 42 43 44 45 46 47
107 serve child5  -> m0_serve 24 25 26 27 28 29
108 serve child16  -> m1_serve 90 91 92 93 94 95
109 __artificialTopCompilation__top_1  -> __top_1 116 102 118 115 107 119 114 106 110 113 104 117 103 111 105 108 112
110 serve child9  -> m1_serve 48 49 50 51 52 53
111 serve child14  -> m1_serve 78 79 80 81 82 83
112 serve child17  -> m0_serve 96 97 98 99 100 101
113 serve child10  -> m1_serve 54 55 56 57 58 59
114 serve child7  -> m1_serve 36 37 38 39 40 41
115 serve child4  -> m0_serve 18 19 20 21 22 23
116 serve child1  -> m1_serve 0 1 2 3 4 5
117 serve child12  -> m1_serve 66 67 68 69 70 71
118 serve child3  -> m1_serve 12 13 14 15 16 17
119 serve child6  -> m0_serve 30 31 32 33 34 35

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 145.676 MEMPEAK_KBS 5901881.344
