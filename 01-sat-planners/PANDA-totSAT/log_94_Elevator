PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/Elevator/domain.hddl instances/Elevator/p14.hddl"


Planner Configuration
=====================
Domain: instances/Elevator/domain.hddl
Problem: instances/Elevator/p14.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p14.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Grounded planning graph ... done in 397ms.
	Number of Grounded Actions 1709
	Number of Grounded Literals 490
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 86
	number of tasks = 1552
	number of decomposition methods = 924
	number of predicates = 490
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 924
	number of epsilon methods = 0
	number of primitive tasks = 1466
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 86
	number of tasks = 1552
	number of decomposition methods = 924
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 924
	number of epsilon methods = 0
	number of primitive tasks = 1466
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 104ms.
	Number of Grounded Actions 1050
	Number of Grounded Literals 76
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 69ms.
	Number of Grounded Actions 1050
	Number of Grounded Literals 76
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Tasks 1050 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771947ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854771863
done
initial PDT has 21 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 15 leafs
SHOP LEAFS 13
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 8550
Size 8545 at 0/1050
Size 8338 at 500/1050
Size 6314 at 1000/1050
Size 6314
Size 6276 at 0/1050
Size 5398 at 500/1050
Size 3022 at 1000/1050
Size 3022
Size 2856 at 0/1050
Size 628 at 500/1050
Size 430 at 1000/1050
Size 430
Size 430 at 0/1050
Size 330 at 500/1050
Size 302 at 1000/1050
Size 302
Size 302 at 0/1050
Size 302 at 500/1050
Size 302 at 1000/1050
Size 302
Invariant time: 0.292
Number of invariants: 302
Invariant Clauses 4832
NUMBER OF CLAUSES 31091
NUMBER OF STATE CLAUSES 9023
NUMBER OF DECOMPOSITION CLAUSES 22068
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.02% 70.98% 0.0% 
NUMBER OF PATHS 15
Starting cryptominisat
Setting starttime of solver to 1603874747154
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 35 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 27 leafs
SHOP LEAFS 21
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 102 will abort at 9223372036854770691
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 8456
NUMBER OF CLAUSES 69390
NUMBER OF STATE CLAUSES 16885
NUMBER OF DECOMPOSITION CLAUSES 52505
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 24.330000000000002% 75.67% 0.0% 
NUMBER OF PATHS 27
Starting cryptominisat
Setting starttime of solver to 1603874747791
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 53 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 43 leafs
SHOP LEAFS 31
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 101 will abort at 9223372036854770144
done
Number of actions Formula: 1ms for 0 clauses
Invariant Clauses 13288
NUMBER OF CLAUSES 102173
NUMBER OF STATE CLAUSES 26297
NUMBER OF DECOMPOSITION CLAUSES 75876
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 25.740000000000002% 74.26% 0.0% 
NUMBER OF PATHS 43
Starting cryptominisat
Setting starttime of solver to 1603874748359
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 75 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 63 leafs
SHOP LEAFS 43
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854769442
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 19328
NUMBER OF CLAUSES 140095
NUMBER OF STATE CLAUSES 37808
NUMBER OF DECOMPOSITION CLAUSES 102287
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 26.990000000000002% 73.01% 0.0% 
NUMBER OF PATHS 63
Starting cryptominisat
Setting starttime of solver to 1603874749140
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 101 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 87 leafs
SHOP LEAFS 57
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768761
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 26576
NUMBER OF CLAUSES 183156
NUMBER OF STATE CLAUSES 51418
NUMBER OF DECOMPOSITION CLAUSES 131738
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 28.07% 71.93% 0.0% 
NUMBER OF PATHS 87
Starting cryptominisat
Setting starttime of solver to 1603874749915
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 131 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 115 leafs
SHOP LEAFS 73
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768017
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 35032
NUMBER OF CLAUSES 231356
NUMBER OF STATE CLAUSES 67127
NUMBER OF DECOMPOSITION CLAUSES 164229
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.01% 70.99% 0.0% 
NUMBER OF PATHS 115
Starting cryptominisat
Setting starttime of solver to 1603874750648
Command exited with non-zero status 20
0.07 0.00

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... done
initial PDT has 165 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 147 leafs
SHOP LEAFS 91
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854767277
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 44696
NUMBER OF CLAUSES 284695
NUMBER OF STATE CLAUSES 84935
NUMBER OF DECOMPOSITION CLAUSES 199760
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.830000000000002% 70.17% 0.0% 
NUMBER OF PATHS 147
Starting cryptominisat
Setting starttime of solver to 1603874751467
Command exited with non-zero status 20
0.14 0.01

Time command gave the following runtime for the solver: 150
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854766335
done
initial PDT has 203 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 183 leafs
SHOP LEAFS 111
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 55568
NUMBER OF CLAUSES 343173
NUMBER OF STATE CLAUSES 104842
NUMBER OF DECOMPOSITION CLAUSES 238331
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 30.55% 69.45% 0.0% 
NUMBER OF PATHS 183
Starting cryptominisat
Setting starttime of solver to 1603874752509
Command exited with non-zero status 20
0.22 0.01

Time command gave the following runtime for the solver: 230
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 12
Generating initial PDT ... done
initial PDT has 245 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854765301
done
PDT has 223 leafs
SHOP LEAFS 133
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 67648
NUMBER OF CLAUSES 406790
NUMBER OF STATE CLAUSES 126848
NUMBER OF DECOMPOSITION CLAUSES 279942
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.18% 68.82000000000001% 0.0% 
NUMBER OF PATHS 223
Starting cryptominisat
Setting starttime of solver to 1603874753588
Command exited with non-zero status 20
24.24 0.04

Time command gave the following runtime for the solver: 24280
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 13
Generating initial PDT ... done
initial PDT has 291 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 267 leafs
SHOP LEAFS 157
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854740161
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 80936
NUMBER OF CLAUSES 475546
NUMBER OF STATE CLAUSES 150953
NUMBER OF DECOMPOSITION CLAUSES 324593
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.740000000000002% 68.26% 0.0% 
NUMBER OF PATHS 267
Starting cryptominisat
Setting starttime of solver to 1603874778903
Command exited with non-zero status 20
36.17 0.03

Time command gave the following runtime for the solver: 36200
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 14
Generating initial PDT ... done
initial PDT has 341 leafs
Checking whether the PDT can grow any more ... Still waiting ... running for 101 will abort at 9223372036854702838
yes ... done
Normalising and optimising PDT ... done
PDT has 315 leafs
SHOP LEAFS 183
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 95432
NUMBER OF CLAUSES 549441
NUMBER OF STATE CLAUSES 177157
NUMBER OF DECOMPOSITION CLAUSES 372284
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 32.24% 67.76% 0.0% 
NUMBER OF PATHS 315
Starting cryptominisat
Setting starttime of solver to 1603874816359
Command exited with non-zero status 10
7.30 0.03

Time command gave the following runtime for the solver: 7330
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_0,467 467 <m0_do_problem;do_check_floor[f0];m1_do_check_floor;1;0,-1,-2,2,3>
0 156 pathaction!1_0,685
Consider method^13_0;3;3;3;3;3;3;3;3;3;3;2;2,559 559 m1_do_check_floor
0;3;3;3;3;3;3;3;3;3;3;2;2 50 pathaction!13_0;3;3;3;3;3;3;3;3;3;3;2;2,711
Consider method^8_0;4;1;3;3;3;2;2,454 454 m2_do_check_floor
0;4;1;3;3;3;2;2 87 pathaction!8_0;4;1;3;3;3;2;2,710
Consider method^6_0;4;1;3;2;2,563 563 m1_do_check_floor
0;4;1;3;2;2 5 pathaction!6_0;4;1;3;2;2,724
Consider method^11_0;3;3;3;3;3;3;3;3;3;2,289 289 m3_do_check_floor
0;3;3;3;3;3;3;3;3;3;2 31 pathaction!11_0;3;3;3;3;3;3;3;3;3;2,721
Consider method^13_0;4;1;3;3;3;3;3;3;3;3;2;2,257 257 m1_do_check_floor
0;4;1;3;3;3;3;3;3;3;3;2;2 113 pathaction!13_0;4;1;3;3;3;3;3;3;3;3;2;2,707
Consider method^6_0;4;1;3;3;2,139 139 m2_do_check_floor
0;4;1;3;3;2 247 pathaction!6_0;4;1;3;3;2,723
Consider method^9_0;3;3;3;3;3;3;2;2,0 0 m3_do_check_floor
0;3;3;3;3;3;3;2;2 171 pathaction!9_0;3;3;3;3;3;3;2;2,722
Consider method^5_0;3;3;2;2,626 626 m3_do_check_floor
0;3;3;2;2 158 pathaction!5_0;3;3;2;2,716
Consider method^9_0;4;1;3;3;3;3;2;2,472 472 m2_do_check_floor
0;4;1;3;3;3;3;2;2 138 pathaction!9_0;4;1;3;3;3;3;2;2,717
Consider method^12_0;3;3;3;3;3;3;3;3;3;3;2,160 160 m3_do_check_floor
0;3;3;3;3;3;3;3;3;3;3;2 149 pathaction!12_0;3;3;3;3;3;3;3;3;3;3;2,711
Consider method^2_0;4,645 645 m7_do_start_throw_all
0;4 15 pathaction!2_0;4,686
Consider method^7_0;3;3;3;3;3;2,420 420 m3_do_check_floor
0;3;3;3;3;3;2 84 pathaction!7_0;3;3;3;3;3;2,712
Consider method^7_0;4;1;3;3;2;2,207 207 m3_do_check_floor
0;4;1;3;3;2;2 120 pathaction!7_0;4;1;3;3;2;2,723
Consider method^8_0;4;1;3;3;3;3;2,9 9 m2_do_check_floor
0;4;1;3;3;3;3;2 0 pathaction!8_0;4;1;3;3;3;3;2,717
Consider method^12_0;3;3;3;3;3;3;3;3;2;2;2,550 550 m1_do_check_floor
0;3;3;3;3;3;3;3;3;2;2;2 289 pathaction!12_0;3;3;3;3;3;3;3;3;2;2;2,714
Consider method^4_0;3;3;2,566 566 m2_do_check_floor
0;3;3;2 119 pathaction!4_0;3;3;2,716
Consider method^11_0;3;3;3;3;3;3;3;3;3;3,389 389 m5_do_take_all
0;3;3;3;3;3;3;3;3;3;3 214 pathaction!11_0;3;3;3;3;3;3;3;3;3;3,48
Consider method^4_0;4;1;2,105 105 m2_do_check_floor
0;4;1;2 56 pathaction!4_0;4;1;2,709
Consider method^11_0;4;1;3;3;3;3;3;3;3;3,94 94 m9_do_throw_all
0;4;1;3;3;3;3;3;3;3;3 229 pathaction!11_0;4;1;3;3;3;3;3;3;3;3,20
Consider method^9_0;4;1;3;3;2;2;2;2,111 111 m1_do_check_floor
0;4;1;3;3;2;2;2;2 177 pathaction!9_0;4;1;3;3;2;2;2;2,723
Consider method^9_0;3;3;3;3;3;3;3;2,380 380 m3_do_check_floor
0;3;3;3;3;3;3;3;2 21 pathaction!9_0;3;3;3;3;3;3;3;2,718
Consider method^8_0;4;1;3;3;2;2;2,306 306 m2_do_check_floor
0;4;1;3;3;2;2;2 246 pathaction!8_0;4;1;3;3;2;2;2,723
Consider method^13_0;3;3;3;3;3;3;3;3;3;3;3;2,156 156 m1_do_check_floor
0;3;3;3;3;3;3;3;3;3;3;3;2 106 pathaction!13_0;3;3;3;3;3;3;3;3;3;3;3;2,710
Consider method^6_0;3;3;2;2;2,554 554 m1_do_check_floor
0;3;3;2;2;2 41 pathaction!6_0;3;3;2;2;2,716
Consider method^12_0;4;1;3;3;3;3;3;3;3;3;3,611 611 m8_do_throw_all
0;4;1;3;3;3;3;3;3;3;3;3 97 pathaction!12_0;4;1;3;3;3;3;3;3;3;3;3,14
Consider method^4_0;3;3;3,362 362 m5_do_take_all
0;3;3;3 260 pathaction!4_0;3;3;3,43
Consider method^8_0;3;3;3;3;3;3;3,128 128 m5_do_take_all
0;3;3;3;3;3;3;3 183 pathaction!8_0;3;3;3;3;3;3;3,49
Consider method^10_0;4;1;3;3;3;3;2;2;2,212 212 m2_do_check_floor
0;4;1;3;3;3;3;2;2;2 121 pathaction!10_0;4;1;3;3;3;3;2;2;2,717
Consider method^12_0;3;3;3;3;3;3;3;3;3;3;3,616 616 m6_do_take_all
0;3;3;3;3;3;3;3;3;3;3;3 125 pathaction!12_0;3;3;3;3;3;3;3;3;3;3;3,38
Consider method^6_0;3;3;3;3;3,592 592 m6_do_take_all
0;3;3;3;3;3 178 pathaction!6_0;3;3;3;3;3,47
Consider method^6_0;4;1;3;3;3,127 127 m10_do_throw_all
0;4;1;3;3;3 133 pathaction!6_0;4;1;3;3;3,30
Consider method^7_0;3;3;3;3;2;2,72 72 m1_do_check_floor
0;3;3;3;3;2;2 228 pathaction!7_0;3;3;3;3;2;2,720
Consider method^10_0;4;1;3;3;3;3;3;2;2,190 190 m1_do_check_floor
0;4;1;3;3;3;3;3;2;2 48 pathaction!10_0;4;1;3;3;3;3;3;2;2,715
Consider method^9_0;4;1;3;3;3;3;3;3,281 281 m10_do_throw_all
0;4;1;3;3;3;3;3;3 275 pathaction!9_0;4;1;3;3;3;3;3;3,22
Consider method^3_0;3;2,341 341 m3_do_check_floor
0;3;2 137 pathaction!3_0;3;2,708
Consider method^5_0;4;1;3;3,71 71 m10_do_throw_all
0;4;1;3;3 101 pathaction!5_0;4;1;3;3,31
Consider method^8_0;3;3;3;3;3;3;2,656 656 m2_do_check_floor
0;3;3;3;3;3;3;2 189 pathaction!8_0;3;3;3;3;3;3;2,722
Consider method^8_0;3;3;3;3;3;2;2,377 377 m3_do_check_floor
0;3;3;3;3;3;2;2 114 pathaction!8_0;3;3;3;3;3;2;2,712
Consider method^12_0;4;1;3;3;3;3;3;3;3;3;2,369 369 m2_do_check_floor
0;4;1;3;3;3;3;3;3;3;3;2 16 pathaction!12_0;4;1;3;3;3;3;3;3;3;3;2,707
Consider method^5_0;4;1;2;2,44 44 m1_do_check_floor
0;4;1;2;2 51 pathaction!5_0;4;1;2;2,709
Consider method^11_0;3;3;3;3;3;3;3;3;2;2,18 18 m3_do_check_floor
0;3;3;3;3;3;3;3;3;2;2 186 pathaction!11_0;3;3;3;3;3;3;3;3;2;2,714
Consider method^6_0;3;3;3;3;2,555 555 m3_do_check_floor
0;3;3;3;3;2 19 pathaction!6_0;3;3;3;3;2,720
Consider method^11_0;4;1;3;3;3;3;3;3;2;2,602 602 m1_do_check_floor
0;4;1;3;3;3;3;3;3;2;2 33 pathaction!11_0;4;1;3;3;3;3;3;3;2;2,719
Consider method^10_0;4;1;3;3;3;3;3;3;2,612 612 m2_do_check_floor
0;4;1;3;3;3;3;3;3;2 288 pathaction!10_0;4;1;3;3;3;3;3;3;2,719
Consider method^7_0;4;1;3;3;3;3,151 151 m9_do_throw_all
0;4;1;3;3;3;3 37 pathaction!7_0;4;1;3;3;3;3,17
Consider method^9_0;3;3;3;3;3;3;3;3,246 246 m5_do_take_all
0;3;3;3;3;3;3;3;3 99 pathaction!9_0;3;3;3;3;3;3;3;3,45
Consider method^5_0;3;3;3;2,655 655 m3_do_check_floor
0;3;3;3;2 153 pathaction!5_0;3;3;3;2,725
Consider method^9_0;4;1;3;3;3;2;2;2,156 156 m1_do_check_floor
0;4;1;3;3;3;2;2;2 124 pathaction!9_0;4;1;3;3;3;2;2;2,710
Consider method^3_0;3;3,191 191 m6_do_take_all
0;3;3 181 pathaction!3_0;3;3,35
Consider method^10_0;3;3;3;3;3;3;3;3;3,307 307 m6_do_take_all
0;3;3;3;3;3;3;3;3;3 7 pathaction!10_0;3;3;3;3;3;3;3;3;3,41
Consider method^9_0;4;1;3;3;3;3;3;2,350 350 m2_do_check_floor
0;4;1;3;3;3;3;3;2 269 pathaction!9_0;4;1;3;3;3;3;3;2,715
Consider method^6_0;3;3;3;2;2,601 601 m1_do_check_floor
0;3;3;3;2;2 163 pathaction!6_0;3;3;3;2;2,725
Consider method^12_0;3;3;3;3;3;3;3;3;3;2;2,290 290 m1_do_check_floor
0;3;3;3;3;3;3;3;3;3;2;2 118 pathaction!12_0;3;3;3;3;3;3;3;3;3;2;2,721
Consider method^7_0;4;1;3;3;3;2,150 150 m3_do_check_floor
0;4;1;3;3;3;2 57 pathaction!7_0;4;1;3;3;3;2,710
Consider method^7_0;3;3;3;3;3;3,334 334 m6_do_take_all
0;3;3;3;3;3;3 96 pathaction!7_0;3;3;3;3;3;3,39
Consider method^10_0;3;3;3;3;3;3;3;2;2,213 213 m1_do_check_floor
0;3;3;3;3;3;3;3;2;2 207 pathaction!10_0;3;3;3;3;3;3;3;2;2,718
Consider method^5_0;4;1;3;2,194 194 m2_do_check_floor
0;4;1;3;2 127 pathaction!5_0;4;1;3;2,724
Consider method^2_0;3,581 581 m5_do_take_all
0;3 30 pathaction!2_0;3,52
Consider method^11_0;4;1;3;3;3;3;3;3;3;2,130 130 m2_do_check_floor
0;4;1;3;3;3;3;3;3;3;2 108 pathaction!11_0;4;1;3;3;3;3;3;3;3;2,713
Consider method^3_0;4;1,19 19 m9_do_throw_all
0;4;1 20 pathaction!3_0;4;1,17
Consider method^11_0;4;1;3;3;3;3;2;2;2;2,633 633 m1_do_check_floor
0;4;1;3;3;3;3;2;2;2;2 202 pathaction!11_0;4;1;3;3;3;3;2;2;2;2,717
Consider method^8_0;4;1;3;3;3;3;3,244 244 m9_do_throw_all
0;4;1;3;3;3;3;3 297 pathaction!8_0;4;1;3;3;3;3;3,24
Consider method^12_0;4;1;3;3;3;3;3;3;3;2;2,500 500 m1_do_check_floor
0;4;1;3;3;3;3;3;3;3;2;2 230 pathaction!12_0;4;1;3;3;3;3;3;3;3;2;2,713
Consider method^9_0;3;3;3;3;3;2;2;2,196 196 m1_do_check_floor
0;3;3;3;3;3;2;2;2 143 pathaction!9_0;3;3;3;3;3;2;2;2,712
Consider method^10_0;4;1;3;3;3;3;3;3;3,464 464 m10_do_throw_all
0;4;1;3;3;3;3;3;3;3 154 pathaction!10_0;4;1;3;3;3;3;3;3;3,26
Consider method^10_0;3;3;3;3;3;3;2;2;2,393 393 m1_do_check_floor
0;3;3;3;3;3;3;2;2;2 63 pathaction!10_0;3;3;3;3;3;3;2;2;2,722
Consider method^5_0;3;3;3;3,398 398 m5_do_take_all
0;3;3;3;3 8 pathaction!5_0;3;3;3;3,53
Consider method^10_0;3;3;3;3;3;3;3;3;2,267 267 m3_do_check_floor
0;3;3;3;3;3;3;3;3;2 240 pathaction!10_0;3;3;3;3;3;3;3;3;2,714
Consider method^4_0;4;1;3,172 172 m10_do_throw_all
0;4;1;3 64 pathaction!4_0;4;1;3,16
Consider method^13_0;3;3;3;3;3;3;3;3;3;3;3;3,291 291 m4_do_take_all
0;3;3;3;3;3;3;3;3;3;3;3;3 13 pathaction!13_0;3;3;3;3;3;3;3;3;3;3;3;3,37
Consider method^4_0;3;2;2,337 337 m1_do_check_floor
0;3;2;2 249 pathaction!4_0;3;2;2,708
Consider method^0_,659 659 __top_1
 46 pathaction!0_,1111


CHECKING primitive solution of length 144 ...
true 222 __method_precondition_m0_do_problem_0_precondition[f0;]
true 147 __method_precondition_m1_do_check_floor_1_precondition[f0;]
true 104 nop[;]
true 25 __method_precondition_m5_do_take_all_5_precondition[f0,f8,p0;]
true 130 up[f0,f8;]
true 165 __method_precondition_m3_do_check_floor_3_precondition[f8,p0;]
true 192 board[f8,p0;]
true 208 __method_precondition_m1_do_check_floor_1_precondition[f8;]
true 245 nop[;]
true 162 __method_precondition_m6_do_take_all_6_precondition[f8,f1,p6;]
true 258 down[f8,f1;]
true 216 __method_precondition_m2_do_check_floor_2_precondition[f1,p0;]
true 145 depart[f1,p0;]
true 91 __method_precondition_m3_do_check_floor_3_precondition[f1,p6;]
true 166 board[f1,p6;]
true 9 __method_precondition_m1_do_check_floor_1_precondition[f1;]
true 184 nop[;]
true 49 __method_precondition_m5_do_take_all_5_precondition[f1,f14,p12;]
true 74 up[f1,f14;]
true 259 __method_precondition_m3_do_check_floor_3_precondition[f14,p12;]
true 294 board[f14,p12;]
true 201 __method_precondition_m1_do_check_floor_1_precondition[f14;]
true 131 nop[;]
true 110 __method_precondition_m5_do_take_all_5_precondition[f14,f20,p5;]
true 212 up[f14,f20;]
true 232 __method_precondition_m3_do_check_floor_3_precondition[f20,p5;]
true 36 board[f20,p5;]
true 272 __method_precondition_m1_do_check_floor_1_precondition[f20;]
true 213 nop[;]
true 65 __method_precondition_m6_do_take_all_6_precondition[f20,f16,p2;]
true 134 down[f20,f16;]
true 23 __method_precondition_m3_do_check_floor_3_precondition[f16,p11;]
true 185 board[f16,p11;]
true 94 __method_precondition_m3_do_check_floor_3_precondition[f16,p2;]
true 244 board[f16,p2;]
true 34 __method_precondition_m1_do_check_floor_1_precondition[f16;]
true 148 nop[;]
true 221 __method_precondition_m6_do_take_all_6_precondition[f16,f7,p1;]
true 217 down[f16,f7;]
true 179 __method_precondition_m2_do_check_floor_2_precondition[f7,p2;]
true 271 depart[f7,p2;]
true 129 __method_precondition_m3_do_check_floor_3_precondition[f7,p1;]
true 79 board[f7,p1;]
true 73 __method_precondition_m1_do_check_floor_1_precondition[f7;]
true 80 nop[;]
true 261 __method_precondition_m5_do_take_all_5_precondition[f7,f13,p3;]
true 277 up[f7,f13;]
true 286 __method_precondition_m3_do_check_floor_3_precondition[f13,p3;]
true 180 board[f13,p3;]
true 195 __method_precondition_m1_do_check_floor_1_precondition[f13;]
true 146 nop[;]
true 22 __method_precondition_m5_do_take_all_5_precondition[f13,f22,p9;]
true 44 up[f13,f22;]
true 27 __method_precondition_m3_do_check_floor_3_precondition[f22,p7;]
true 93 board[f22,p7;]
true 266 __method_precondition_m3_do_check_floor_3_precondition[f22,p9;]
true 262 board[f22,p9;]
true 71 __method_precondition_m1_do_check_floor_1_precondition[f22;]
true 219 nop[;]
true 112 __method_precondition_m6_do_take_all_6_precondition[f22,f3,p13;]
true 150 down[f22,f3;]
true 45 __method_precondition_m3_do_check_floor_3_precondition[f3,p13;]
true 144 board[f3,p13;]
true 248 __method_precondition_m1_do_check_floor_1_precondition[f3;]
true 68 nop[;]
true 238 __method_precondition_m5_do_take_all_5_precondition[f3,f12,p8;]
true 10 up[f3,f12;]
true 67 __method_precondition_m3_do_check_floor_3_precondition[f12,p8;]
true 122 board[f12,p8;]
true 191 __method_precondition_m1_do_check_floor_1_precondition[f12;]
true 282 nop[;]
true 102 __method_precondition_m6_do_take_all_6_precondition[f12,f2,p10;]
true 3 down[f12,f2;]
true 168 __method_precondition_m1_do_check_floor_1_precondition[f2;]
true 251 nop[;]
true 70 __method_precondition_m4_do_take_all_4_precondition[f2;]
true 283 nop[;]
true 253 __method_precondition_m7_do_start_throw_all_7_precondition[f2;]
true 164 __method_precondition_m9_do_throw_all_9_precondition[f2,f23,p11;]
true 141 up[f2,f23;]
true 172 __method_precondition_m2_do_check_floor_2_precondition[f23,p11;]
true 211 depart[f23,p11;]
true 190 __method_precondition_m1_do_check_floor_1_precondition[f23;]
true 204 nop[;]
true 69 __method_precondition_m10_do_throw_all_10_precondition[f23,f21,p7;]
true 75 down[f23,f21;]
true 188 __method_precondition_m2_do_check_floor_2_precondition[f21,p7;]
true 173 depart[f21,p7;]
true 29 __method_precondition_m1_do_check_floor_1_precondition[f21;]
true 187 nop[;]
true 227 __method_precondition_m10_do_throw_all_10_precondition[f21,f9,p12;]
true 299 down[f21,f9;]
true 293 __method_precondition_m2_do_check_floor_2_precondition[f9,p13;]
true 205 depart[f9,p13;]
true 82 __method_precondition_m3_do_check_floor_3_precondition[f9,p4;]
true 270 board[f9,p4;]
true 234 __method_precondition_m2_do_check_floor_2_precondition[f9,p12;]
true 98 depart[f9,p12;]
true 203 __method_precondition_m1_do_check_floor_1_precondition[f9;]
true 298 nop[;]
true 278 __method_precondition_m10_do_throw_all_10_precondition[f9,f2,p3;]
true 215 down[f9,f2;]
true 274 __method_precondition_m3_do_check_floor_3_precondition[f2,p10;]
true 53 board[f2,p10;]
true 263 __method_precondition_m2_do_check_floor_2_precondition[f2,p3;]
true 40 depart[f2,p3;]
true 139 __method_precondition_m1_do_check_floor_1_precondition[f2;]
true 281 nop[;]
true 152 __method_precondition_m9_do_throw_all_9_precondition[f2,f19,p4;]
true 111 up[f2,f19;]
true 170 __method_precondition_m2_do_check_floor_2_precondition[f19,p6;]
true 302 depart[f19,p6;]
true 117 __method_precondition_m2_do_check_floor_2_precondition[f19,p9;]
true 295 depart[f19,p9;]
true 239 __method_precondition_m2_do_check_floor_2_precondition[f19,p4;]
true 88 depart[f19,p4;]
true 61 __method_precondition_m1_do_check_floor_1_precondition[f19;]
true 100 nop[;]
true 257 __method_precondition_m9_do_throw_all_9_precondition[f19,f24,p1;]
true 292 up[f19,f24;]
true 89 __method_precondition_m2_do_check_floor_2_precondition[f24,p1;]
true 231 depart[f24,p1;]
true 220 __method_precondition_m1_do_check_floor_1_precondition[f24;]
true 39 nop[;]
true 242 __method_precondition_m10_do_throw_all_10_precondition[f24,f17,p10;]
true 18 down[f24,f17;]
true 300 __method_precondition_m2_do_check_floor_2_precondition[f17,p10;]
true 280 depart[f17,p10;]
true 142 __method_precondition_m1_do_check_floor_1_precondition[f17;]
true 175 nop[;]
true 86 __method_precondition_m10_do_throw_all_10_precondition[f17,f4,p5;]
true 236 down[f17,f4;]
true 290 __method_precondition_m2_do_check_floor_2_precondition[f4,p5;]
true 123 depart[f4,p5;]
true 194 __method_precondition_m1_do_check_floor_1_precondition[f4;]
true 199 nop[;]
true 161 __method_precondition_m9_do_throw_all_9_precondition[f4,f26,p8;]
true 52 up[f4,f26;]
true 47 __method_precondition_m2_do_check_floor_2_precondition[f26,p8;]
true 296 depart[f26,p8;]
true 225 __method_precondition_m1_do_check_floor_1_precondition[f26;]
true 264 nop[;]
true 254 __method_precondition_m8_do_throw_all_8_precondition[f26;]
true 72 nop[;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 394894608
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 76
number of actions                    = 1112
number of abstract actions           = 62
number of primitive actions          = 1050
number of methods                    = 660
number of primitive shop actions     = 660
number of primitive non-shop actions = 390
size of largest method               = 5
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 76924
number of clauses               = 549441
average size of clauses         = 2.8315615325394354
number of assert                = 44
number of horn                  = 508730
K offset                        = 0
K chosen value                  = 14
state formula                   = 177157
method children clauses         = 0
number of paths                 = 315
maximum plan length             = 315
number of decomposition clauses = 372284
number of ordering clauses      = 0
number of state clauses         = 177157
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 82337
============ parsing ============
total                         = 1073
file parser                   = 574
sort expansion                = 228
closed world assumption       = 142
inherit preconditions         = 0
shop methods                  = 13
eliminate identical variables = 65
strip domain of hybridity     = 1
flatten formula               = 49
============ preprocessing ============
total                                      = 2574
compile negative preconditions             = 44
compile unit methods                       = 0
split parameter                            = 31
expand choiceless abstract tasks           = 62
compile methods with identical tasks       = 6
removing unnecessary predicates            = 486
lifted reachabiltiy analysis               = 73
grounded planning graph analysis           = 745
grounded task decomposition graph analysis = 808
grounding                                  = 301
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 320
============ sat ============
total                                        = 76160
generate formula                             = 6387
generate path decomposition tree             = 805
normalise path decomposition tree            = 289
sog optimisation                             = 223
translate path decomposition tree to clauses = 2518
generate state formula                       = 6093
generate state invariant formula             = 296
transform to DIMACS                          = 860
SAT solver                                   = 68370
SAT solver for K=0004                        = 0
SAT solver for K=0005                        = 10
SAT solver for K=0006                        = 20
SAT solver for K=0007                        = 30
SAT solver for K=0008                        = 50
SAT solver for K=0009                        = 70
SAT solver for K=0010                        = 150
SAT solver for K=0011                        = 230
SAT solver for K=0012                        = 24280
SAT solver for K=0013                        = 36200
SAT solver for K=0014                        = 7330

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="1050";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="62";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="394894608";"40 sat:20:state formula"="177157";"40 sat:01:number of variables"="76924";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="315";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="660";"30 problem:07:number of primitive shop actions"="660";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="1112";"30 problem:08:number of primitive non-shop actions"="390";"30 problem:02:number of predicates"="76";"40 sat:03:number of horn"="508730";"40 sat:15:K chosen value"="14";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="5";"40 sat:03:average size of clauses"="2.8315615325394354";"40 sat:02:number of clauses"="549441";"40 sat:50:number of state clauses"="177157";"40 sat:03:number of assert"="44";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="315";"40 sat:50:number of decomposition clauses"="372284";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="574";"01 parsing:08:flatten formula"="49";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="76160";"40 sat:16:generate state formula"="6093";"40 sat:20:transform to DIMACS"="860";"40 sat:11:generate path decomposition tree"="805";"02 preprocessing:07:compile methods with identical tasks"="6";"01 parsing:07:strip domain of hybridity"="1";"40 sat:41:SAT solver for K=0008"="50";"02 preprocessing:08:removing unnecessary predicates"="486";"01 parsing:03:closed world assumption"="142";"02 preprocessing:11:lifted reachabiltiy analysis"="73";"01 parsing:02:sort expansion"="228";"40 sat:12:normalise path decomposition tree"="289";"40 sat:41:SAT solver for K=0012"="24280";"40 sat:40:SAT solver"="68370";"01 parsing:00:total"="1073";"40 sat:10:generate formula"="6387";"40 sat:41:SAT solver for K=0005"="10";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0009"="70";"02 preprocessing:01:compile negative preconditions"="44";"40 sat:41:SAT solver for K=0013"="36200";"00 total:00:total"="82337";"40 sat:41:SAT solver for K=0011"="230";"40 sat:13:sog optimisation"="223";"02 preprocessing:12:grounded planning graph analysis"="745";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="808";"40 sat:41:SAT solver for K=0006"="20";"02 preprocessing:04:split parameter"="31";"01 parsing:05:shop methods"="13";"10 search preparation:02:compute state invariants"="320";"01 parsing:06:eliminate identical variables"="65";"40 sat:15:translate path decomposition tree to clauses"="2518";"02 preprocessing:05:expand choiceless abstract tasks"="62";"40 sat:41:SAT solver for K=0014"="7330";"40 sat:17:generate state invariant formula"="296";"40 sat:41:SAT solver for K=0010"="150";"02 preprocessing:00:total"="2574";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="301";"40 sat:41:SAT solver for K=0007"="30"
#!verify __method_precondition_m0_do_problem_0_precondition[f0];__method_precondition_m1_do_check_floor_1_precondition[f0];nop[];__method_precondition_m5_do_take_all_5_precondition[f0,f8,p0];up[f0,f8];__method_precondition_m3_do_check_floor_3_precondition[f8,p0];board[f8,p0];__method_precondition_m1_do_check_floor_1_precondition[f8];nop[];__method_precondition_m6_do_take_all_6_precondition[f8,f1,p6];down[f8,f1];__method_precondition_m2_do_check_floor_2_precondition[f1,p0];depart[f1,p0];__method_precondition_m3_do_check_floor_3_precondition[f1,p6];board[f1,p6];__method_precondition_m1_do_check_floor_1_precondition[f1];nop[];__method_precondition_m5_do_take_all_5_precondition[f1,f14,p12];up[f1,f14];__method_precondition_m3_do_check_floor_3_precondition[f14,p12];board[f14,p12];__method_precondition_m1_do_check_floor_1_precondition[f14];nop[];__method_precondition_m5_do_take_all_5_precondition[f14,f20,p5];up[f14,f20];__method_precondition_m3_do_check_floor_3_precondition[f20,p5];board[f20,p5];__method_precondition_m1_do_check_floor_1_precondition[f20];nop[];__method_precondition_m6_do_take_all_6_precondition[f20,f16,p2];down[f20,f16];__method_precondition_m3_do_check_floor_3_precondition[f16,p11];board[f16,p11];__method_precondition_m3_do_check_floor_3_precondition[f16,p2];board[f16,p2];__method_precondition_m1_do_check_floor_1_precondition[f16];nop[];__method_precondition_m6_do_take_all_6_precondition[f16,f7,p1];down[f16,f7];__method_precondition_m2_do_check_floor_2_precondition[f7,p2];depart[f7,p2];__method_precondition_m3_do_check_floor_3_precondition[f7,p1];board[f7,p1];__method_precondition_m1_do_check_floor_1_precondition[f7];nop[];__method_precondition_m5_do_take_all_5_precondition[f7,f13,p3];up[f7,f13];__method_precondition_m3_do_check_floor_3_precondition[f13,p3];board[f13,p3];__method_precondition_m1_do_check_floor_1_precondition[f13];nop[];__method_precondition_m5_do_take_all_5_precondition[f13,f22,p9];up[f13,f22];__method_precondition_m3_do_check_floor_3_precondition[f22,p7];board[f22,p7];__method_precondition_m3_do_check_floor_3_precondition[f22,p9];board[f22,p9];__method_precondition_m1_do_check_floor_1_precondition[f22];nop[];__method_precondition_m6_do_take_all_6_precondition[f22,f3,p13];down[f22,f3];__method_precondition_m3_do_check_floor_3_precondition[f3,p13];board[f3,p13];__method_precondition_m1_do_check_floor_1_precondition[f3];nop[];__method_precondition_m5_do_take_all_5_precondition[f3,f12,p8];up[f3,f12];__method_precondition_m3_do_check_floor_3_precondition[f12,p8];board[f12,p8];__method_precondition_m1_do_check_floor_1_precondition[f12];nop[];__method_precondition_m6_do_take_all_6_precondition[f12,f2,p10];down[f12,f2];__method_precondition_m1_do_check_floor_1_precondition[f2];nop[];__method_precondition_m4_do_take_all_4_precondition[f2];nop[];__method_precondition_m7_do_start_throw_all_7_precondition[f2];__method_precondition_m9_do_throw_all_9_precondition[f2,f23,p11];up[f2,f23];__method_precondition_m2_do_check_floor_2_precondition[f23,p11];depart[f23,p11];__method_precondition_m1_do_check_floor_1_precondition[f23];nop[];__method_precondition_m10_do_throw_all_10_precondition[f23,f21,p7];down[f23,f21];__method_precondition_m2_do_check_floor_2_precondition[f21,p7];depart[f21,p7];__method_precondition_m1_do_check_floor_1_precondition[f21];nop[];__method_precondition_m10_do_throw_all_10_precondition[f21,f9,p12];down[f21,f9];__method_precondition_m2_do_check_floor_2_precondition[f9,p13];depart[f9,p13];__method_precondition_m3_do_check_floor_3_precondition[f9,p4];board[f9,p4];__method_precondition_m2_do_check_floor_2_precondition[f9,p12];depart[f9,p12];__method_precondition_m1_do_check_floor_1_precondition[f9];nop[];__method_precondition_m10_do_throw_all_10_precondition[f9,f2,p3];down[f9,f2];__method_precondition_m3_do_check_floor_3_precondition[f2,p10];board[f2,p10];__method_precondition_m2_do_check_floor_2_precondition[f2,p3];depart[f2,p3];__method_precondition_m1_do_check_floor_1_precondition[f2];nop[];__method_precondition_m9_do_throw_all_9_precondition[f2,f19,p4];up[f2,f19];__method_precondition_m2_do_check_floor_2_precondition[f19,p6];depart[f19,p6];__method_precondition_m2_do_check_floor_2_precondition[f19,p9];depart[f19,p9];__method_precondition_m2_do_check_floor_2_precondition[f19,p4];depart[f19,p4];__method_precondition_m1_do_check_floor_1_precondition[f19];nop[];__method_precondition_m9_do_throw_all_9_precondition[f19,f24,p1];up[f19,f24];__method_precondition_m2_do_check_floor_2_precondition[f24,p1];depart[f24,p1];__method_precondition_m1_do_check_floor_1_precondition[f24];nop[];__method_precondition_m10_do_throw_all_10_precondition[f24,f17,p10];down[f24,f17];__method_precondition_m2_do_check_floor_2_precondition[f17,p10];depart[f17,p10];__method_precondition_m1_do_check_floor_1_precondition[f17];nop[];__method_precondition_m10_do_throw_all_10_precondition[f17,f4,p5];down[f17,f4];__method_precondition_m2_do_check_floor_2_precondition[f4,p5];depart[f4,p5];__method_precondition_m1_do_check_floor_1_precondition[f4];nop[];__method_precondition_m9_do_throw_all_9_precondition[f4,f26,p8];up[f4,f26];__method_precondition_m2_do_check_floor_2_precondition[f26,p8];depart[f26,p8];__method_precondition_m1_do_check_floor_1_precondition[f26];nop[];__method_precondition_m8_do_throw_all_8_precondition[f26];nop[]
==>
0 __method_precondition_m0_do_problem_0_precondition f0 
1 __method_precondition_m1_do_check_floor_1_precondition f0 
2 nop  
3 __method_precondition_m5_do_take_all_5_precondition f0 f8 p0 
4 up f0 f8 
5 __method_precondition_m3_do_check_floor_3_precondition f8 p0 
6 board f8 p0 
7 __method_precondition_m1_do_check_floor_1_precondition f8 
8 nop  
9 __method_precondition_m6_do_take_all_6_precondition f8 f1 p6 
10 down f8 f1 
11 __method_precondition_m2_do_check_floor_2_precondition f1 p0 
12 depart f1 p0 
13 __method_precondition_m3_do_check_floor_3_precondition f1 p6 
14 board f1 p6 
15 __method_precondition_m1_do_check_floor_1_precondition f1 
16 nop  
17 __method_precondition_m5_do_take_all_5_precondition f1 f14 p12 
18 up f1 f14 
19 __method_precondition_m3_do_check_floor_3_precondition f14 p12 
20 board f14 p12 
21 __method_precondition_m1_do_check_floor_1_precondition f14 
22 nop  
23 __method_precondition_m5_do_take_all_5_precondition f14 f20 p5 
24 up f14 f20 
25 __method_precondition_m3_do_check_floor_3_precondition f20 p5 
26 board f20 p5 
27 __method_precondition_m1_do_check_floor_1_precondition f20 
28 nop  
29 __method_precondition_m6_do_take_all_6_precondition f20 f16 p2 
30 down f20 f16 
31 __method_precondition_m3_do_check_floor_3_precondition f16 p11 
32 board f16 p11 
33 __method_precondition_m3_do_check_floor_3_precondition f16 p2 
34 board f16 p2 
35 __method_precondition_m1_do_check_floor_1_precondition f16 
36 nop  
37 __method_precondition_m6_do_take_all_6_precondition f16 f7 p1 
38 down f16 f7 
39 __method_precondition_m2_do_check_floor_2_precondition f7 p2 
40 depart f7 p2 
41 __method_precondition_m3_do_check_floor_3_precondition f7 p1 
42 board f7 p1 
43 __method_precondition_m1_do_check_floor_1_precondition f7 
44 nop  
45 __method_precondition_m5_do_take_all_5_precondition f7 f13 p3 
46 up f7 f13 
47 __method_precondition_m3_do_check_floor_3_precondition f13 p3 
48 board f13 p3 
49 __method_precondition_m1_do_check_floor_1_precondition f13 
50 nop  
51 __method_precondition_m5_do_take_all_5_precondition f13 f22 p9 
52 up f13 f22 
53 __method_precondition_m3_do_check_floor_3_precondition f22 p7 
54 board f22 p7 
55 __method_precondition_m3_do_check_floor_3_precondition f22 p9 
56 board f22 p9 
57 __method_precondition_m1_do_check_floor_1_precondition f22 
58 nop  
59 __method_precondition_m6_do_take_all_6_precondition f22 f3 p13 
60 down f22 f3 
61 __method_precondition_m3_do_check_floor_3_precondition f3 p13 
62 board f3 p13 
63 __method_precondition_m1_do_check_floor_1_precondition f3 
64 nop  
65 __method_precondition_m5_do_take_all_5_precondition f3 f12 p8 
66 up f3 f12 
67 __method_precondition_m3_do_check_floor_3_precondition f12 p8 
68 board f12 p8 
69 __method_precondition_m1_do_check_floor_1_precondition f12 
70 nop  
71 __method_precondition_m6_do_take_all_6_precondition f12 f2 p10 
72 down f12 f2 
73 __method_precondition_m1_do_check_floor_1_precondition f2 
74 nop  
75 __method_precondition_m4_do_take_all_4_precondition f2 
76 nop  
77 __method_precondition_m7_do_start_throw_all_7_precondition f2 
78 __method_precondition_m9_do_throw_all_9_precondition f2 f23 p11 
79 up f2 f23 
80 __method_precondition_m2_do_check_floor_2_precondition f23 p11 
81 depart f23 p11 
82 __method_precondition_m1_do_check_floor_1_precondition f23 
83 nop  
84 __method_precondition_m10_do_throw_all_10_precondition f23 f21 p7 
85 down f23 f21 
86 __method_precondition_m2_do_check_floor_2_precondition f21 p7 
87 depart f21 p7 
88 __method_precondition_m1_do_check_floor_1_precondition f21 
89 nop  
90 __method_precondition_m10_do_throw_all_10_precondition f21 f9 p12 
91 down f21 f9 
92 __method_precondition_m2_do_check_floor_2_precondition f9 p13 
93 depart f9 p13 
94 __method_precondition_m3_do_check_floor_3_precondition f9 p4 
95 board f9 p4 
96 __method_precondition_m2_do_check_floor_2_precondition f9 p12 
97 depart f9 p12 
98 __method_precondition_m1_do_check_floor_1_precondition f9 
99 nop  
100 __method_precondition_m10_do_throw_all_10_precondition f9 f2 p3 
101 down f9 f2 
102 __method_precondition_m3_do_check_floor_3_precondition f2 p10 
103 board f2 p10 
104 __method_precondition_m2_do_check_floor_2_precondition f2 p3 
105 depart f2 p3 
106 __method_precondition_m1_do_check_floor_1_precondition f2 
107 nop  
108 __method_precondition_m9_do_throw_all_9_precondition f2 f19 p4 
109 up f2 f19 
110 __method_precondition_m2_do_check_floor_2_precondition f19 p6 
111 depart f19 p6 
112 __method_precondition_m2_do_check_floor_2_precondition f19 p9 
113 depart f19 p9 
114 __method_precondition_m2_do_check_floor_2_precondition f19 p4 
115 depart f19 p4 
116 __method_precondition_m1_do_check_floor_1_precondition f19 
117 nop  
118 __method_precondition_m9_do_throw_all_9_precondition f19 f24 p1 
119 up f19 f24 
120 __method_precondition_m2_do_check_floor_2_precondition f24 p1 
121 depart f24 p1 
122 __method_precondition_m1_do_check_floor_1_precondition f24 
123 nop  
124 __method_precondition_m10_do_throw_all_10_precondition f24 f17 p10 
125 down f24 f17 
126 __method_precondition_m2_do_check_floor_2_precondition f17 p10 
127 depart f17 p10 
128 __method_precondition_m1_do_check_floor_1_precondition f17 
129 nop  
130 __method_precondition_m10_do_throw_all_10_precondition f17 f4 p5 
131 down f17 f4 
132 __method_precondition_m2_do_check_floor_2_precondition f4 p5 
133 depart f4 p5 
134 __method_precondition_m1_do_check_floor_1_precondition f4 
135 nop  
136 __method_precondition_m9_do_throw_all_9_precondition f4 f26 p8 
137 up f4 f26 
138 __method_precondition_m2_do_check_floor_2_precondition f26 p8 
139 depart f26 p8 
140 __method_precondition_m1_do_check_floor_1_precondition f26 
141 nop  
142 __method_precondition_m8_do_throw_all_8_precondition f26 
143 nop  
root 214
144 do_check_floor f2  -> m3_do_check_floor 102 103 198
145 do_throw_all f24  -> m10_do_throw_all 124 125 171 194
146 do_check_floor f16  -> m1_do_check_floor 35 36
147 do_check_floor f7  -> m1_do_check_floor 43 44
148 do_take_all f7  -> m5_do_take_all 45 46 193 201
149 do_take_all f12  -> m6_do_take_all 71 72 185 181
150 do_check_floor f1  -> m2_do_check_floor 11 12 187
151 do_check_floor f8  -> m1_do_check_floor 7 8
152 do_check_floor f7  -> m3_do_check_floor 41 42 147
153 do_take_all f22  -> m6_do_take_all 59 60 161 197
154 do_throw_all f2  -> m9_do_throw_all 108 109 182 174
155 do_throw_all f26  -> m8_do_throw_all 142 143
156 do_check_floor f20  -> m1_do_check_floor 27 28
157 do_check_floor f19  -> m1_do_check_floor 116 117
158 do_check_floor f9  -> m2_do_check_floor 92 93 163
159 do_check_floor f16  -> m3_do_check_floor 31 32 196
160 do_check_floor f12  -> m1_do_check_floor 69 70
161 do_check_floor f3  -> m3_do_check_floor 61 62 178
162 do_throw_all f23  -> m10_do_throw_all 84 85 203 199
163 do_check_floor f9  -> m3_do_check_floor 94 95 205
164 do_check_floor f26  -> m1_do_check_floor 140 141
165 do_check_floor f23  -> m2_do_check_floor 80 81 191
166 do_check_floor f2  -> m1_do_check_floor 106 107
167 do_throw_all f9  -> m10_do_throw_all 100 101 144 154
168 do_take_all f1  -> m5_do_take_all 17 18 189 177
169 do_check_floor f4  -> m1_do_check_floor 134 135
170 do_check_floor f17  -> m1_do_check_floor 128 129
171 do_check_floor f17  -> m2_do_check_floor 126 127 170
172 do_check_floor f19  -> m2_do_check_floor 114 115 157
173 do_check_floor f19  -> m2_do_check_floor 112 113 172
174 do_throw_all f19  -> m9_do_throw_all 118 119 206 145
175 do_check_floor f12  -> m3_do_check_floor 67 68 160
176 do_problem   -> <m0_do_problem;do_check_floor[f0];m1_do_check_floor;1;0,-1,-2,2,3> 0 1 2 180 212
177 do_take_all f14  -> m5_do_take_all 23 24 195 216
178 do_check_floor f3  -> m1_do_check_floor 63 64
179 do_check_floor f7  -> m2_do_check_floor 39 40 152
180 do_take_all f0  -> m5_do_take_all 3 4 208 215
181 do_take_all f2  -> m4_do_take_all 75 76
182 do_check_floor f19  -> m2_do_check_floor 110 111 173
183 do_throw_all f4  -> m9_do_throw_all 136 137 209 155
184 do_take_all f16  -> m6_do_take_all 37 38 179 148
185 do_check_floor f2  -> m1_do_check_floor 73 74
186 do_check_floor f4  -> m2_do_check_floor 132 133 169
187 do_check_floor f1  -> m3_do_check_floor 13 14 211
188 do_check_floor f22  -> m3_do_check_floor 53 54 213
189 do_check_floor f14  -> m3_do_check_floor 19 20 204
190 do_throw_all f2  -> m9_do_throw_all 78 79 165 162
191 do_check_floor f23  -> m1_do_check_floor 82 83
192 do_check_floor f9  -> m1_do_check_floor 98 99
193 do_check_floor f13  -> m3_do_check_floor 47 48 202
194 do_throw_all f17  -> m10_do_throw_all 130 131 186 183
195 do_check_floor f20  -> m3_do_check_floor 25 26 156
196 do_check_floor f16  -> m3_do_check_floor 33 34 146
197 do_take_all f3  -> m5_do_take_all 65 66 175 149
198 do_check_floor f2  -> m2_do_check_floor 104 105 166
199 do_throw_all f21  -> m10_do_throw_all 90 91 158 167
200 do_check_floor f24  -> m1_do_check_floor 122 123
201 do_take_all f13  -> m5_do_take_all 51 52 188 153
202 do_check_floor f13  -> m1_do_check_floor 49 50
203 do_check_floor f21  -> m2_do_check_floor 86 87 210
204 do_check_floor f14  -> m1_do_check_floor 21 22
205 do_check_floor f9  -> m2_do_check_floor 96 97 192
206 do_check_floor f24  -> m2_do_check_floor 120 121 200
207 do_check_floor f22  -> m1_do_check_floor 57 58
208 do_check_floor f8  -> m3_do_check_floor 5 6 151
209 do_check_floor f26  -> m2_do_check_floor 138 139 164
210 do_check_floor f21  -> m1_do_check_floor 88 89
211 do_check_floor f1  -> m1_do_check_floor 15 16
212 do_start_throw_all   -> m7_do_start_throw_all 77 190
213 do_check_floor f22  -> m3_do_check_floor 55 56 207
214 __choicelessATCompilation__top_1  -> __top_1 176
215 do_take_all f8  -> m6_do_take_all 9 10 150 168
216 do_take_all f20  -> m6_do_take_all 29 30 159 184

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 83.439 MEMPEAK_KBS 597142.528
