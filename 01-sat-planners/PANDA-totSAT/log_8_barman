PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/barman/domain.hddl instances/barman/p08.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p08.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p08.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Grounded planning graph ... done in 584ms.
	Number of Grounded Actions 3172
	Number of Grounded Literals 465
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Grounding ... done.
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 465
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 381ms.
	Number of Grounded Actions 2827
	Number of Grounded Literals 435
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4683
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4683
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4683
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 253ms.
	Number of Grounded Actions 2827
	Number of Grounded Literals 435
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4683
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4423
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4423
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4423
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4423
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4423
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Tasks 2827 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767995ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767554
done
initial PDT has 291 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 291 leafs
SHOP LEAFS 97
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 283185
Size 283170 at 0/2827
Size 281375 at 500/2827
Size 281327 at 1000/2827
Size 281237 at 1500/2827
Size 238238 at 2000/2827
Size 237884 at 2500/2827
Size 237884
Size 235022 at 0/2827
Size 26380 at 500/2827
Size 26372 at 1000/2827
Size 17265 at 1500/2827
Size 15861 at 2000/2827
Size 6083 at 2500/2827
Size 6045
Size 6045 at 0/2827
Size 6045 at 500/2827
Size 6045 at 1000/2827
Size 5319 at 1500/2827
Size 5268 at 2000/2827
Size 4636 at 2500/2827
Size 4628
Size 4628 at 0/2827
Size 4580 at 500/2827
Size 4580 at 1000/2827
Size 4448 at 1500/2827
Size 4448 at 2000/2827
Size 4372 at 2500/2827
Size 4372
Size 4372 at 0/2827
Size 4369 at 500/2827
Size 4369 at 1000/2827
Size 4359 at 1500/2827
Size 4358 at 2000/2827
Size 4358 at 2500/2827
Size 4358
Size 4358 at 0/2827
Size 4358 at 500/2827
Size 4358 at 1000/2827
Size 4358 at 1500/2827
Size 4358 at 2000/2827
Size 4358 at 2500/2827
Size 4358
Invariant time: 2.592
Number of invariants: 4358
Invariant Clauses 1272536
NUMBER OF CLAUSES 2011547
NUMBER OF STATE CLAUSES 1626887
NUMBER OF DECOMPOSITION CLAUSES 384660
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 80.88% 19.12% 0.0% 
NUMBER OF PATHS 291
Starting cryptominisat
Setting starttime of solver to 1603870615894
Command exited with non-zero status 10
1.15 0.06

Time command gave the following runtime for the solver: 1210
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_1,4294 4294 m0_do_cocktail_in_shot1
1 305 pathaction!1_1,2004
Consider method^3_1;2;1,1268 1268 _m3_get_second_ingredient_2
1;2;1 171 pathaction!3_1;2;1,1304
Consider method^2_11;1,2754 2754 m2_get_first_ingredient
11;1 39 pathaction!2_11;1,2301
Consider method^3_8;2;1,2524 2524 _m3_get_second_ingredient_2
8;2;1 29 pathaction!3_8;2;1,1220
Consider method^2_5;2,797 797 m3_get_second_ingredient
5;2 146 pathaction!2_5;2,1981
Consider method^1_10,462 462 m0_do_cocktail_in_shot1
10 62 pathaction!1_10,2008
Consider method^3_3;3;1,521 521 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2>
3;3;1 404 pathaction!3_3;3;1,3600
Consider method^3_3;1;2,2098 2098 _m2_get_first_ingredient_3
3;1;2 70 pathaction!3_3;1;2,1882
Consider method^3_6;2;2,1815 1815 _m3_get_second_ingredient_3
6;2;2 382 pathaction!3_6;2;2,3385
Consider method^3_5;3;1,2406 2406 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail3,left];m5_do_clean_shot;0;-1,-2>
5;3;1 107 pathaction!3_5;3;1,3596
Consider method^1_9,1002 1002 m0_do_cocktail_in_shot1
9 272 pathaction!1_9,2001
Consider method^3_3;2;2,365 365 _m3_get_second_ingredient_3
3;2;2 336 pathaction!3_3;2;2,3436
Consider method^3_3;1;1,500 500 m8_do_fill_shot
3;1;1 237 pathaction!3_3;1;1,3493
Consider method^2_2;3,461 461 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 417 pathaction!2_2;3,2081
Consider method^3_1;3;1,3991 3991 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 358 pathaction!3_1;3;1,3611
Consider method^3_11;1;1,1711 1711 m9_do_fill_shot
11;1;1 160 pathaction!3_11;1;1,3497
Consider method^3_7;1;1,2526 2526 m9_do_fill_shot
7;1;1 131 pathaction!3_7;1;1,3570
Consider method^2_4;1,2062 2062 m2_get_first_ingredient
4;1 143 pathaction!2_4;1,2295
Consider method^1_14,2985 2985 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
14 243 pathaction!1_14,612
Consider method^2_10;1,674 674 m2_get_first_ingredient
10;1 178 pathaction!2_10;1,2302
Consider method^3_4;3;1,161 161 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 409 pathaction!3_4;3;1,3589
Consider method^3_8;1;3,3162 3162 _m2_get_first_ingredient_4
8;1;3 230 pathaction!3_8;1;3,1420
Consider method^1_11,4070 4070 m0_do_cocktail_in_shot1
11 240 pathaction!1_11,2009
Consider method^2_1;2,1501 1501 m3_get_second_ingredient
1;2 246 pathaction!2_1;2,1997
Consider method^3_9;1;1,667 667 m9_do_fill_shot
9;1;1 259 pathaction!3_9;1;1,3459
Consider method^3_0;3;1,1829 1829 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 114 pathaction!3_0;3;1,3601
Consider method^2_6;2,2126 2126 m3_get_second_ingredient
6;2 287 pathaction!2_6;2,1991
Consider method^2_12;1,199 199 m9_do_fill_shot
12;1 338 pathaction!2_12;1,3505
Consider method^1_2,1259 1259 m0_do_cocktail_in_shot1
2 61 pathaction!1_2,2006
Consider method^3_2;1;1,2953 2953 m9_do_fill_shot
2;1;1 179 pathaction!3_2;1;1,3583
Consider method^3_15;1;3,4000 4000 _m2_get_first_ingredient_4
15;1;3 174 pathaction!3_15;1;3,1331
Consider method^3_2;1;3,271 271 _m2_get_first_ingredient_4
2;1;3 269 pathaction!3_2;1;3,1459
Consider method^3_9;2;1,243 243 _m3_get_second_ingredient_2
9;2;1 166 pathaction!3_9;2;1,1294
Consider method^3_2;3;1,721 721 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2>
2;3;1 397 pathaction!3_2;3;1,3604
Consider method^2_8;1,1100 1100 m2_get_first_ingredient
8;1 334 pathaction!2_8;1,2292
Consider method^3_15;3;1,2921 2921 <_m4_serve_shot_2;do_clean_shot[shot16,cocktail1,right];m5_do_clean_shot;0;-1,-2>
15;3;1 318 pathaction!3_15;3;1,3599
Consider method^3_7;1;3,547 547 _m2_get_first_ingredient_4
7;1;3 55 pathaction!3_7;1;3,1446
Consider method^1_7,1543 1543 m0_do_cocktail_in_shot1
7 80 pathaction!1_7,2002
Consider method^3_6;1;2,1198 1198 _m2_get_first_ingredient_3
6;1;2 124 pathaction!3_6;1;2,1922
Consider method^1_5,3226 3226 m0_do_cocktail_in_shot1
5 209 pathaction!1_5,2011
Consider method^3_0;1;2,1528 1528 _m2_get_first_ingredient_3
0;1;2 359 pathaction!3_0;1;2,1886
Consider method^3_8;1;2,3605 3605 _m2_get_first_ingredient_3
8;1;2 416 pathaction!3_8;1;2,1976
Consider method^2_11;3,45 45 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 282 pathaction!2_11;3,2084
Consider method^3_1;2;2,2728 2728 _m3_get_second_ingredient_3
1;2;2 36 pathaction!3_1;2;2,3417
Consider method^0_,4422 4422 __top_1
 223 pathaction!0_,3736
Consider method^3_15;1;2,1046 1046 _m2_get_first_ingredient_3
15;1;2 68 pathaction!3_15;1;2,1861
Consider method^3_5;1;2,1804 1804 _m2_get_first_ingredient_3
5;1;2 244 pathaction!3_5;1;2,1910
Consider method^3_0;2;1,2387 2387 _m3_get_second_ingredient_2
0;2;1 82 pathaction!3_0;2;1,1318
Consider method^2_1;3,3829 3829 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 23 pathaction!2_1;3,2079
Consider method^3_6;2;1,243 243 _m3_get_second_ingredient_2
6;2;1 104 pathaction!3_6;2;1,1294
Consider method^2_5;3,789 789 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot6,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 5 pathaction!2_5;3,2086
Consider method^1_3,3905 3905 m0_do_cocktail_in_shot1
3 149 pathaction!1_3,2000
Consider method^1_6,235 235 m0_do_cocktail_in_shot1
6 199 pathaction!1_6,1999
Consider method^1_8,3127 3127 m0_do_cocktail_in_shot1
8 47 pathaction!1_8,2007
Consider method^3_4;2;2,3256 3256 _m3_get_second_ingredient_3
4;2;2 137 pathaction!3_4;2;2,3437
Consider method^3_9;1;3,1917 1917 _m2_get_first_ingredient_4
9;1;3 49 pathaction!3_9;1;3,1335
Consider method^3_0;1;1,481 481 m8_do_fill_shot
0;1;1 24 pathaction!3_0;1;1,3575
Consider method^3_5;1;3,1264 1264 _m2_get_first_ingredient_4
5;1;3 327 pathaction!3_5;1;3,1345
Consider method^2_0;1,4109 4109 m2_get_first_ingredient
0;1 293 pathaction!2_0;1,2294
Consider method^3_9;2;2,1815 1815 _m3_get_second_ingredient_3
9;2;2 371 pathaction!3_9;2;2,3385
Consider method^3_10;1;3,3731 3731 _m2_get_first_ingredient_4
10;1;3 233 pathaction!3_10;1;3,1373
Consider method^2_0;3,589 589 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 150 pathaction!2_0;3,2078
Consider method^3_9;1;2,1064 1064 _m2_get_first_ingredient_3
9;1;2 157 pathaction!3_9;1;2,1913
Consider method^3_10;1;2,2456 2456 _m2_get_first_ingredient_3
10;1;2 187 pathaction!3_10;1;2,1966
Consider method^3_11;2;1,3625 3625 _m3_get_second_ingredient_2
11;2;1 395 pathaction!3_11;2;1,1250
Consider method^3_6;1;3,2117 2117 _m2_get_first_ingredient_4
6;1;3 264 pathaction!3_6;1;3,1381
Consider method^3_11;2;2,2256 2256 _m3_get_second_ingredient_3
11;2;2 352 pathaction!3_11;2;2,3333
Consider method^3_1;1;3,164 164 _m2_get_first_ingredient_4
1;1;3 148 pathaction!3_1;1;3,1451
Consider method^2_3;1,2808 2808 m2_get_first_ingredient
3;1 118 pathaction!2_3;1,2296
Consider method^3_5;2;2,1466 1466 _m3_get_second_ingredient_3
5;2;2 260 pathaction!3_5;2;2,3449
Consider method^3_4;2;1,2450 2450 _m3_get_second_ingredient_2
4;2;1 304 pathaction!3_4;2;1,1211
Consider method^2_8;2,890 890 m3_get_second_ingredient
8;2 262 pathaction!2_8;2,1984
Consider method^2_4;2,4378 4378 m3_get_second_ingredient
4;2 103 pathaction!2_4;2,1987
Consider method^3_2;1;2,3612 3612 _m2_get_first_ingredient_3
2;1;2 37 pathaction!3_2;1;2,1900
Consider method^1_0,1187 1187 m0_do_cocktail_in_shot1
0 133 pathaction!1_0,2003
Consider method^3_9;3;1,1007 1007 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2>
9;3;1 314 pathaction!3_9;3;1,3591
Consider method^2_9;3,4089 4089 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 26 pathaction!2_9;3,2076
Consider method^3_10;1;1,1205 1205 m8_do_fill_shot
10;1;1 91 pathaction!3_10;1;1,3497
Consider method^1_4,1299 1299 m0_do_cocktail_in_shot1
4 406 pathaction!1_4,2010
Consider method^3_1;1;2,1528 1528 _m2_get_first_ingredient_3
1;1;2 379 pathaction!3_1;1;2,1886
Consider method^3_10;2;2,2256 2256 _m3_get_second_ingredient_3
10;2;2 123 pathaction!3_10;2;2,3333
Consider method^2_8;3,2629 2629 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 361 pathaction!2_8;3,2082
Consider method^3_15;1;1,1935 1935 m9_do_fill_shot
15;1;1 10 pathaction!3_15;1;1,3455
Consider method^2_14;1,401 401 m9_do_fill_shot
14;1 97 pathaction!2_14;1,3563
Consider method^3_8;3;1,3679 3679 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 414 pathaction!3_8;3;1,3595
Consider method^3_11;1;3,3731 3731 _m2_get_first_ingredient_4
11;1;3 19 pathaction!3_11;1;3,1373
Consider method^3_3;2;1,633 633 _m3_get_second_ingredient_2
3;2;1 106 pathaction!3_3;2;1,1190
Consider method^3_15;2;1,3886 3886 _m3_get_second_ingredient_2
15;2;1 325 pathaction!3_15;2;1,1276
Consider method^2_15;2,2222 2222 m3_get_second_ingredient
15;2 184 pathaction!2_15;2,1980
Consider method^1_15,2949 2949 m0_do_cocktail_in_shot1
15 254 pathaction!1_15,2005
Consider method^1_13,4392 4392 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
13 326 pathaction!1_13,613
Consider method^3_7;2;2,301 301 _m3_get_second_ingredient_3
7;2;2 0 pathaction!3_7;2;2,3370
Consider method^2_15;1,851 851 m2_get_first_ingredient
15;1 252 pathaction!2_15;1,2288
Consider method^2_9;2,2559 2559 m3_get_second_ingredient
9;2 351 pathaction!2_9;2,1983
Consider method^2_2;2,815 815 m3_get_second_ingredient
2;2 303 pathaction!2_2;2,1977
Consider method^3_15;2;2,2968 2968 _m3_get_second_ingredient_3
15;2;2 331 pathaction!3_15;2;2,3314
Consider method^3_2;2;2,301 301 _m3_get_second_ingredient_3
2;2;2 366 pathaction!3_2;2;2,3370
Consider method^2_7;2,860 860 m3_get_second_ingredient
7;2 99 pathaction!2_7;2,1992
Consider method^2_1;1,4320 4320 m2_get_first_ingredient
1;1 138 pathaction!2_1;1,2305
Consider method^3_3;1;3,1607 1607 _m2_get_first_ingredient_4
3;1;3 286 pathaction!3_3;1;3,1369
Consider method^2_3;3,3689 3689 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 72 pathaction!2_3;3,2075
Consider method^2_5;1,2620 2620 m2_get_first_ingredient
5;1 280 pathaction!2_5;1,2289
Consider method^3_2;2;1,2309 2309 _m3_get_second_ingredient_2
2;2;1 203 pathaction!3_2;2;1,1287
Consider method^3_6;3;1,2342 2342 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 196 pathaction!3_6;3;1,3598
Consider method^3_4;1;2,3612 3612 _m2_get_first_ingredient_3
4;1;2 375 pathaction!3_4;1;2,1900
Consider method^2_4;3,3172 3172 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 337 pathaction!2_4;3,2085
Consider method^3_4;1;3,271 271 _m2_get_first_ingredient_4
4;1;3 279 pathaction!3_4;1;3,1459
Consider method^3_4;1;1,594 594 m9_do_fill_shot
4;1;1 211 pathaction!3_4;1;1,3583
Consider method^3_5;1;1,4111 4111 m8_do_fill_shot
5;1;1 8 pathaction!3_5;1;1,3469
Consider method^3_7;1;2,608 608 _m2_get_first_ingredient_3
7;1;2 110 pathaction!3_7;1;2,1944
Consider method^2_7;1,3061 3061 m2_get_first_ingredient
7;1 316 pathaction!2_7;1,2300
Consider method^3_7;2;1,2309 2309 _m3_get_second_ingredient_2
7;2;1 341 pathaction!3_7;2;1,1287
Consider method^2_0;2,798 798 m3_get_second_ingredient
0;2 403 pathaction!2_0;2,1986
Consider method^2_11;2,2216 2216 m3_get_second_ingredient
11;2 204 pathaction!2_11;2,1993
Consider method^1_12,4005 4005 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
12 294 pathaction!1_12,614
Consider method^3_0;2;2,1682 1682 _m3_get_second_ingredient_3
0;2;2 53 pathaction!3_0;2;2,3366
Consider method^3_6;1;1,199 199 m9_do_fill_shot
6;1;1 235 pathaction!3_6;1;1,3505
Consider method^2_6;3,1227 1227 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 220 pathaction!2_6;3,2074
Consider method^2_10;3,4022 4022 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 239 pathaction!2_10;3,2083
Consider method^2_10;2,1286 1286 m3_get_second_ingredient
10;2 112 pathaction!2_10;2,1994
Consider method^2_13;1,1687 1687 m9_do_fill_shot
13;1 198 pathaction!2_13;1,3503
Consider method^3_10;3;1,752 752 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 52 pathaction!3_10;3;1,3607
Consider method^3_5;2;1,3892 3892 _m3_get_second_ingredient_2
5;2;1 273 pathaction!3_5;2;1,1282
Consider method^2_15;3,1712 1712 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot16,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
15;3 422 pathaction!2_15;3,2080
Consider method^2_9;1,3709 3709 m2_get_first_ingredient
9;1 360 pathaction!2_9;1,2291
Consider method^2_7;3,4205 4205 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 180 pathaction!2_7;3,2077
Consider method^3_0;1;3,164 164 _m2_get_first_ingredient_4
0;1;3 94 pathaction!3_0;1;3,1451
Consider method^2_3;2,4261 4261 m3_get_second_ingredient
3;2 421 pathaction!2_3;2,1988
Consider method^3_8;1;1,2423 2423 m7_do_fill_shot
8;1;1 377 pathaction!3_8;1;1,3544
Consider method^3_8;2;2,385 385 _m3_get_second_ingredient_3
8;2;2 229 pathaction!3_8;2;2,3393
Consider method^3_7;3;1,3498 3498 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2>
7;3;1 172 pathaction!3_7;3;1,3593
Consider method^3_1;1;1,2901 2901 m9_do_fill_shot
1;1;1 65 pathaction!3_1;1;1,3575
Consider method^2_2;1,3123 3123 m2_get_first_ingredient
2;1 183 pathaction!2_2;1,2285
Consider method^3_11;3;1,1371 1371 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2>
11;3;1 128 pathaction!3_11;3;1,3603
Consider method^3_11;1;2,2456 2456 _m2_get_first_ingredient_3
11;1;2 88 pathaction!3_11;1;2,1966
Consider method^3_10;2;1,3625 3625 _m3_get_second_ingredient_2
10;2;1 245 pathaction!3_10;2;1,1250
Consider method^2_6;1,606 606 m2_get_first_ingredient
6;1 386 pathaction!2_6;1,2299


CHECKING primitive solution of length 286 ...
true 139 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 385 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot17;]
true 315 __method_precondition_m8_do_fill_shot_8_precondition[shot17,dispenser1,ingredient1;]
true 221 grasp[right,shot17;]
true 290 fill-shot[shot17,ingredient1,right,left,dispenser1;]
true 250 pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,right,l0,l1;]
true 218 clean-shot[shot17,ingredient1,right,left;]
true 176 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,right,shot17;]
true 420 fill-shot[shot17,ingredient3,right,left,dispenser3;]
true 95 pour-shot-to-used-shaker[shot17,ingredient3,shaker1,right,l1,l2;]
true 22 leave[right,shot17;]
true 25 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient3;]
true 120 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 372 nop[;]
true 306 grasp[left,shaker1;]
true 253 shake[cocktail9,ingredient1,ingredient3,shaker1,left,right;]
true 320 pour-shaker-to-shot[cocktail9,shot1,left,shaker1,l2,l1;]
true 28 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 299 clean-shaker[left,right,shaker1;]
true 374 leave[left,shaker1;]
true 288 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 121 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot17;]
true 268 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient1,ingredient3,dispenser1;]
true 339 grasp[right,shot17;]
true 383 clean-shot[shot17,ingredient3,right,left;]
true 301 fill-shot[shot17,ingredient1,right,left,dispenser1;]
true 292 pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,right,l0,l1;]
true 266 clean-shot[shot17,ingredient1,right,left;]
true 46 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,right,shot17;]
true 277 fill-shot[shot17,ingredient2,right,left,dispenser2;]
true 249 pour-shot-to-used-shaker[shot17,ingredient2,shaker1,right,l1,l2;]
true 147 leave[right,shot17;]
true 96 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient2;]
true 357 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 60 nop[;]
true 332 grasp[right,shaker1;]
true 340 shake[cocktail7,ingredient1,ingredient2,shaker1,right,left;]
true 215 pour-shaker-to-shot[cocktail7,shot2,right,shaker1,l2,l1;]
true 231 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 195 clean-shaker[right,left,shaker1;]
true 151 leave[right,shaker1;]
true 33 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 317 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot17;]
true 71 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient3,ingredient2,dispenser3;]
true 214 grasp[right,shot17;]
true 347 clean-shot[shot17,ingredient2,right,left;]
true 145 fill-shot[shot17,ingredient3,right,left,dispenser3;]
true 66 pour-shot-to-clean-shaker[shot17,ingredient3,shaker1,right,l0,l1;]
true 401 clean-shot[shot17,ingredient3,right,left;]
true 35 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,right,shot17;]
true 411 fill-shot[shot17,ingredient4,right,left,dispenser4;]
true 387 pour-shot-to-used-shaker[shot17,ingredient4,shaker1,right,l1,l2;]
true 109 leave[right,shot17;]
true 381 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4;]
true 270 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 201 nop[;]
true 14 grasp[left,shaker1;]
true 190 shake[cocktail11,ingredient3,ingredient4,shaker1,left,right;]
true 265 pour-shaker-to-shot[cocktail11,shot3,left,shaker1,l2,l1;]
true 67 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 213 clean-shaker[left,right,shaker1;]
true 167 leave[left,shaker1;]
true 392 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 255 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot13;]
true 324 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4;]
true 384 grasp[right,shot13;]
true 7 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 207 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 144 clean-shot[shot13,ingredient4,right,left;]
true 297 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,right,shot13;]
true 402 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 18 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2;]
true 313 leave[right,shot13;]
true 399 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient2;]
true 38 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 40 nop[;]
true 345 grasp[right,shaker1;]
true 363 shake[cocktail8,ingredient4,ingredient2,shaker1,right,left;]
true 89 pour-shaker-to-shot[cocktail8,shot4,right,shaker1,l2,l1;]
true 291 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 90 clean-shaker[right,left,shaker1;]
true 100 leave[right,shaker1;]
true 271 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 200 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot17;]
true 353 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient3,ingredient4,dispenser3;]
true 84 grasp[right,shot17;]
true 42 clean-shot[shot17,ingredient4,right,left;]
true 165 fill-shot[shot17,ingredient3,right,left,dispenser3;]
true 163 pour-shot-to-clean-shaker[shot17,ingredient3,shaker1,right,l0,l1;]
true 75 clean-shot[shot17,ingredient3,right,left;]
true 398 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient5,right,shot17;]
true 161 fill-shot[shot17,ingredient5,right,left,dispenser5;]
true 242 pour-shot-to-used-shaker[shot17,ingredient5,shaker1,right,l1,l2;]
true 348 leave[right,shot17;]
true 296 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient5;]
true 11 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 135 nop[;]
true 115 grasp[left,shaker1;]
true 216 shake[cocktail2,ingredient3,ingredient5,shaker1,left,right;]
true 251 pour-shaker-to-shot[cocktail2,shot5,left,shaker1,l2,l1;]
true 232 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 20 clean-shaker[left,right,shaker1;]
true 162 leave[left,shaker1;]
true 226 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 388 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient4,shot14;]
true 247 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser4,ingredient4;]
true 310 grasp[left,shot14;]
true 59 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 418 pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,left,l0,l1;]
true 125 clean-shot[shot14,ingredient4,left,right;]
true 311 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,left,shot14;]
true 238 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 370 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,left,l1,l2;]
true 58 leave[left,shot14;]
true 335 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient4,ingredient2;]
true 322 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 415 nop[;]
true 86 grasp[right,shaker1;]
true 276 shake[cocktail1,ingredient4,ingredient2,shaker1,right,left;]
true 116 pour-shaker-to-shot[cocktail1,shot6,right,shaker1,l2,l1;]
true 127 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 41 clean-shaker[right,left,shaker1;]
true 142 leave[right,shaker1;]
true 57 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 193 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot13;]
true 364 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1;]
true 412 grasp[left,shot13;]
true 130 clean-shot[shot13,ingredient2,left,right;]
true 206 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 274 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 73 clean-shot[shot13,ingredient1,left,right;]
true 186 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,left,shot13;]
true 4 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 74 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 256 leave[left,shot13;]
true 34 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient2;]
true 410 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 69 nop[;]
true 175 grasp[left,shaker1;]
true 350 shake[cocktail5,ingredient1,ingredient2,shaker1,left,right;]
true 298 pour-shaker-to-shot[cocktail5,shot7,left,shaker1,l2,l1;]
true 389 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 349 clean-shaker[left,right,shaker1;]
true 261 leave[left,shaker1;]
true 344 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 21 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot17;]
true 394 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient2,ingredient5,dispenser2;]
true 64 grasp[right,shot17;]
true 356 clean-shot[shot17,ingredient5,right,left;]
true 136 fill-shot[shot17,ingredient2,right,left,dispenser2;]
true 236 pour-shot-to-clean-shaker[shot17,ingredient2,shaker1,right,l0,l1;]
true 390 clean-shot[shot17,ingredient2,right,left;]
true 15 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,right,shot17;]
true 101 fill-shot[shot17,ingredient4,right,left,dispenser4;]
true 6 pour-shot-to-used-shaker[shot17,ingredient4,shaker1,right,l1,l2;]
true 113 leave[right,shot17;]
true 329 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4;]
true 419 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 367 nop[;]
true 83 grasp[left,shaker1;]
true 328 shake[cocktail3,ingredient2,ingredient4,shaker1,left,right;]
true 275 pour-shaker-to-shot[cocktail3,shot8,left,shaker1,l2,l1;]
true 263 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 283 clean-shaker[left,right,shaker1;]
true 50 leave[left,shaker1;]
true 181 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 129 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot14;]
true 400 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient2,dispenser2;]
true 117 grasp[left,shot14;]
true 355 refill-shot[shot14,ingredient2,left,right,dispenser2;]
true 300 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 323 clean-shot[shot14,ingredient2,left,right;]
true 45 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot14;]
true 3 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 141 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2;]
true 257 leave[left,shot14;]
true 9 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3;]
true 278 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 111 nop[;]
true 119 grasp[right,shaker1;]
true 122 shake[cocktail10,ingredient2,ingredient3,shaker1,right,left;]
true 217 pour-shaker-to-shot[cocktail10,shot9,right,shaker1,l2,l1;]
true 154 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 30 clean-shaker[right,left,shaker1;]
true 346 leave[right,shaker1;]
true 391 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 312 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot13;]
true 248 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient2,dispenser3;]
true 173 grasp[left,shot13;]
true 225 clean-shot[shot13,ingredient2,left,right;]
true 343 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 56 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 227 clean-shot[shot13,ingredient3,left,right;]
true 140 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot13;]
true 234 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 189 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 153 leave[left,shot13;]
true 405 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient2;]
true 169 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 281 nop[;]
true 407 grasp[right,shaker1;]
true 105 shake[cocktail4,ingredient3,ingredient2,shaker1,right,left;]
true 333 pour-shaker-to-shot[cocktail4,shot10,right,shaker1,l2,l1;]
true 210 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 185 clean-shaker[right,left,shaker1;]
true 396 leave[right,shaker1;]
true 408 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 380 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot15;]
true 228 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser2,ingredient2;]
true 126 grasp[right,shot15;]
true 63 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 87 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 362 clean-shot[shot15,ingredient2,right,left;]
true 342 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,right,shot15;]
true 31 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 1 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 13 leave[right,shot15;]
true 152 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3;]
true 307 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 369 nop[;]
true 368 grasp[right,shaker1;]
true 378 shake[cocktail6,ingredient2,ingredient3,shaker1,right,left;]
true 76 pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1;]
true 295 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 27 clean-shaker[right,left,shaker1;]
true 158 leave[right,shaker1;]
true 321 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right;]
true 93 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot15;]
true 159 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient3,dispenser2;]
true 222 grasp[right,shot15;]
true 219 clean-shot[shot15,ingredient3,right,left;]
true 284 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 373 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 43 clean-shot[shot15,ingredient2,right,left;]
true 205 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,right,shot15;]
true 44 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 164 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 16 leave[right,shot15;]
true 413 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3;]
true 156 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 2 nop[;]
true 241 grasp[left,shaker1;]
true 208 shake[cocktail10,ingredient2,ingredient3,shaker1,left,right;]
true 376 pour-shaker-to-shot[cocktail10,shot12,left,shaker1,l2,l1;]
true 170 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 92 clean-shaker[left,right,shaker1;]
true 267 leave[left,shaker1;]
true 308 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 54 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1;]
true 197 grasp[left,shot13;]
true 285 clean-shot[shot13,ingredient2,left,right;]
true 108 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 98 leave[left,shot13;]
true 188 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 48 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient1,ingredient3,dispenser1;]
true 309 grasp[left,shot14;]
true 365 clean-shot[shot14,ingredient3,left,right;]
true 192 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 12 leave[left,shot14;]
true 177 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 302 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient3,dispenser1;]
true 79 grasp[right,shot15;]
true 182 clean-shot[shot15,ingredient3,right,left;]
true 289 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 132 leave[right,shot15;]
true 77 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot16,left;]
true 155 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot17;]
true 102 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient2,ingredient4,dispenser2;]
true 224 grasp[left,shot17;]
true 17 clean-shot[shot17,ingredient4,left,right;]
true 78 fill-shot[shot17,ingredient2,left,right,dispenser2;]
true 393 pour-shot-to-clean-shaker[shot17,ingredient2,shaker1,left,l0,l1;]
true 168 clean-shot[shot17,ingredient2,left,right;]
true 32 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot17;]
true 81 fill-shot[shot17,ingredient4,left,right,dispenser4;]
true 330 pour-shot-to-used-shaker[shot17,ingredient4,shaker1,left,l1,l2;]
true 194 leave[left,shot17;]
true 212 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4;]
true 319 __method_precondition_m5_do_clean_shot_5_precondition[shot16;]
true 258 nop[;]
true 51 grasp[left,shaker1;]
true 134 shake[cocktail3,ingredient2,ingredient4,shaker1,left,right;]
true 354 pour-shaker-to-shot[cocktail3,shot16,left,shaker1,l2,l1;]
true 202 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 191 clean-shaker[left,right,shaker1;]
true 85 leave[left,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 576675000
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 435
number of actions                    = 3737
number of abstract actions           = 910
number of primitive actions          = 2827
number of methods                    = 4423
number of primitive shop actions     = 1114
number of primitive non-shop actions = 1713
size of largest method               = 16
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 286410
number of clauses               = 2011547
average size of clauses         = 2.3914082047299914
number of assert                = 193
number of horn                  = 1767313
K offset                        = 0
K chosen value                  = 4
state formula                   = 1626887
method children clauses         = 0
number of paths                 = 291
maximum plan length             = 291
number of decomposition clauses = 384660
number of ordering clauses      = 0
number of state clauses         = 1626887
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 19922
============ parsing ============
total                         = 1163
file parser                   = 619
sort expansion                = 226
closed world assumption       = 126
inherit preconditions         = 0
shop methods                  = 16
eliminate identical variables = 72
strip domain of hybridity     = 17
flatten formula               = 86
============ preprocessing ============
total                                      = 6031
compile negative preconditions             = 48
compile unit methods                       = 0
split parameter                            = 56
expand choiceless abstract tasks           = 599
compile methods with identical tasks       = 32
removing unnecessary predicates            = 877
lifted reachabiltiy analysis               = 84
grounded planning graph analysis           = 1714
grounded task decomposition graph analysis = 1887
grounding                                  = 668
create artificial top task                 = 7
============ search preparation ============
compute state invariants = 2962
============ sat ============
total                                        = 9548
generate formula                             = 6994
generate path decomposition tree             = 423
normalise path decomposition tree            = 117
sog optimisation                             = 101
translate path decomposition tree to clauses = 903
generate state formula                       = 6869
generate state invariant formula             = 787
transform to DIMACS                          = 1064
SAT solver                                   = 1210
SAT solver for K=0004                        = 1210

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2827";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="910";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="576675000";"40 sat:20:state formula"="1626887";"40 sat:01:number of variables"="286410";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="291";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="4423";"30 problem:07:number of primitive shop actions"="1114";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3737";"30 problem:08:number of primitive non-shop actions"="1713";"30 problem:02:number of predicates"="435";"40 sat:03:number of horn"="1767313";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="16";"40 sat:03:average size of clauses"="2.3914082047299914";"40 sat:02:number of clauses"="2011547";"40 sat:50:number of state clauses"="1626887";"40 sat:03:number of assert"="193";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="291";"40 sat:50:number of decomposition clauses"="384660";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="619";"01 parsing:08:flatten formula"="86";"40 sat:41:SAT solver for K=0004"="1210";"40 sat:00:total"="9548";"40 sat:16:generate state formula"="6869";"40 sat:20:transform to DIMACS"="1064";"40 sat:11:generate path decomposition tree"="423";"02 preprocessing:07:compile methods with identical tasks"="32";"01 parsing:07:strip domain of hybridity"="17";"02 preprocessing:08:removing unnecessary predicates"="877";"01 parsing:03:closed world assumption"="126";"02 preprocessing:11:lifted reachabiltiy analysis"="84";"01 parsing:02:sort expansion"="226";"40 sat:12:normalise path decomposition tree"="117";"40 sat:40:SAT solver"="1210";"01 parsing:00:total"="1163";"40 sat:10:generate formula"="6994";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="48";"00 total:00:total"="19922";"40 sat:13:sog optimisation"="101";"02 preprocessing:12:grounded planning graph analysis"="1714";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1887";"02 preprocessing:04:split parameter"="56";"01 parsing:05:shop methods"="16";"10 search preparation:02:compute state invariants"="2962";"01 parsing:06:eliminate identical variables"="72";"40 sat:15:translate path decomposition tree to clauses"="903";"02 preprocessing:05:expand choiceless abstract tasks"="599";"40 sat:17:generate state invariant formula"="787";"02 preprocessing:00:total"="6031";"02 preprocessing:99:create artificial top task"="7";"02 preprocessing:84:grounding"="668"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot17];__method_precondition_m8_do_fill_shot_8_precondition[shot17,dispenser1,ingredient1];grasp[right,shot17];fill-shot[shot17,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,right,l0,l1];clean-shot[shot17,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,right,shot17];fill-shot[shot17,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot17,ingredient3,shaker1,right,l1,l2];leave[right,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail9,ingredient1,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail9,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail9,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient1,ingredient3,dispenser1];grasp[right,shot17];clean-shot[shot17,ingredient3,right,left];fill-shot[shot17,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,right,l0,l1];clean-shot[shot17,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,right,shot17];fill-shot[shot17,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot17,ingredient2,shaker1,right,l1,l2];leave[right,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail7,ingredient1,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail7,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail7,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient3,ingredient2,dispenser3];grasp[right,shot17];clean-shot[shot17,ingredient2,right,left];fill-shot[shot17,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot17,ingredient3,shaker1,right,l0,l1];clean-shot[shot17,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,right,shot17];fill-shot[shot17,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot17,ingredient4,shaker1,right,l1,l2];leave[right,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[left,shaker1];shake[cocktail11,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail11,shot3,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail11,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4];grasp[right,shot13];fill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1];clean-shot[shot13,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,right,shot13];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[right,shaker1];shake[cocktail8,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot4,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient3,ingredient4,dispenser3];grasp[right,shot17];clean-shot[shot17,ingredient4,right,left];fill-shot[shot17,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot17,ingredient3,shaker1,right,l0,l1];clean-shot[shot17,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient5,right,shot17];fill-shot[shot17,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot17,ingredient5,shaker1,right,l1,l2];leave[right,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail2,ingredient3,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail2,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail2,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient4,shot14];__method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser4,ingredient4];grasp[left,shot14];fill-shot[shot14,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,left,l0,l1];clean-shot[shot14,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,left,shot14];fill-shot[shot14,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot14,ingredient2,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[right,shaker1];shake[cocktail1,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail1,shot6,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail1,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1];grasp[left,shot13];clean-shot[shot13,ingredient2,left,right];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1];clean-shot[shot13,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,left,shot13];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail5,ingredient1,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient2,ingredient5,dispenser2];grasp[right,shot17];clean-shot[shot17,ingredient5,right,left];fill-shot[shot17,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot17,ingredient2,shaker1,right,l0,l1];clean-shot[shot17,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,right,shot17];fill-shot[shot17,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot17,ingredient4,shaker1,right,l1,l2];leave[right,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[left,shaker1];shake[cocktail3,ingredient2,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot8,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient2,dispenser2];grasp[left,shot14];refill-shot[shot14,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1];clean-shot[shot14,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot14];fill-shot[shot14,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail10,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient2,dispenser3];grasp[left,shot13];clean-shot[shot13,ingredient2,left,right];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1];clean-shot[shot13,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot13];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[right,shaker1];shake[cocktail4,ingredient3,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot10,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser2,ingredient2];grasp[right,shot15];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1];clean-shot[shot15,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,right,shot15];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail6,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient3,dispenser2];grasp[right,shot15];clean-shot[shot15,ingredient3,right,left];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1];clean-shot[shot15,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,right,shot15];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[left,shaker1];shake[cocktail10,ingredient2,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot12,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1];grasp[left,shot13];clean-shot[shot13,ingredient2,left,right];fill-shot[shot13,ingredient1,left,right,dispenser1];leave[left,shot13];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient1,ingredient3,dispenser1];grasp[left,shot14];clean-shot[shot14,ingredient3,left,right];fill-shot[shot14,ingredient1,left,right,dispenser1];leave[left,shot14];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient3,dispenser1];grasp[right,shot15];clean-shot[shot15,ingredient3,right,left];fill-shot[shot15,ingredient1,right,left,dispenser1];leave[right,shot15];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot16,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient2,ingredient4,dispenser2];grasp[left,shot17];clean-shot[shot17,ingredient4,left,right];fill-shot[shot17,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot17,ingredient2,shaker1,left,l0,l1];clean-shot[shot17,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot17];fill-shot[shot17,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot17,ingredient4,shaker1,left,l1,l2];leave[left,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot16];nop[];grasp[left,shaker1];shake[cocktail3,ingredient2,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot16,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 right 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient1 shot17 
2 __method_precondition_m8_do_fill_shot_8_precondition shot17 dispenser1 ingredient1 
3 grasp right shot17 
4 fill-shot shot17 ingredient1 right left dispenser1 
5 pour-shot-to-clean-shaker shot17 ingredient1 shaker1 right l0 l1 
6 clean-shot shot17 ingredient1 right left 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient3 right shot17 
8 fill-shot shot17 ingredient3 right left dispenser3 
9 pour-shot-to-used-shaker shot17 ingredient3 shaker1 right l1 l2 
10 leave right shot17 
11 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient1 ingredient3 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail9 ingredient1 ingredient3 shaker1 left right 
16 pour-shaker-to-shot cocktail9 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail9 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient1 shot17 
22 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient1 ingredient3 dispenser1 
23 grasp right shot17 
24 clean-shot shot17 ingredient3 right left 
25 fill-shot shot17 ingredient1 right left dispenser1 
26 pour-shot-to-clean-shaker shot17 ingredient1 shaker1 right l0 l1 
27 clean-shot shot17 ingredient1 right left 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient2 right shot17 
29 fill-shot shot17 ingredient2 right left dispenser2 
30 pour-shot-to-used-shaker shot17 ingredient2 shaker1 right l1 l2 
31 leave right shot17 
32 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient1 ingredient2 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp right shaker1 
36 shake cocktail7 ingredient1 ingredient2 shaker1 right left 
37 pour-shaker-to-shot cocktail7 shot2 right shaker1 l2 l1 
38 empty-shaker right shaker1 cocktail7 l1 l0 
39 clean-shaker right left shaker1 
40 leave right shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 right 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient3 shot17 
43 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient3 ingredient2 dispenser3 
44 grasp right shot17 
45 clean-shot shot17 ingredient2 right left 
46 fill-shot shot17 ingredient3 right left dispenser3 
47 pour-shot-to-clean-shaker shot17 ingredient3 shaker1 right l0 l1 
48 clean-shot shot17 ingredient3 right left 
49 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient4 right shot17 
50 fill-shot shot17 ingredient4 right left dispenser4 
51 pour-shot-to-used-shaker shot17 ingredient4 shaker1 right l1 l2 
52 leave right shot17 
53 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient3 ingredient4 
54 __method_precondition_m5_do_clean_shot_5_precondition shot3 
55 nop  
56 grasp left shaker1 
57 shake cocktail11 ingredient3 ingredient4 shaker1 left right 
58 pour-shaker-to-shot cocktail11 shot3 left shaker1 l2 l1 
59 empty-shaker left shaker1 cocktail11 l1 l0 
60 clean-shaker left right shaker1 
61 leave left shaker1 
62 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 right 
63 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient4 shot13 
64 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser4 ingredient4 
65 grasp right shot13 
66 fill-shot shot13 ingredient4 right left dispenser4 
67 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 
68 clean-shot shot13 ingredient4 right left 
69 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient2 right shot13 
70 fill-shot shot13 ingredient2 right left dispenser2 
71 pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 
72 leave right shot13 
73 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient4 ingredient2 
74 __method_precondition_m5_do_clean_shot_5_precondition shot4 
75 nop  
76 grasp right shaker1 
77 shake cocktail8 ingredient4 ingredient2 shaker1 right left 
78 pour-shaker-to-shot cocktail8 shot4 right shaker1 l2 l1 
79 empty-shaker right shaker1 cocktail8 l1 l0 
80 clean-shaker right left shaker1 
81 leave right shaker1 
82 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 right 
83 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient3 shot17 
84 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient3 ingredient4 dispenser3 
85 grasp right shot17 
86 clean-shot shot17 ingredient4 right left 
87 fill-shot shot17 ingredient3 right left dispenser3 
88 pour-shot-to-clean-shaker shot17 ingredient3 shaker1 right l0 l1 
89 clean-shot shot17 ingredient3 right left 
90 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient5 right shot17 
91 fill-shot shot17 ingredient5 right left dispenser5 
92 pour-shot-to-used-shaker shot17 ingredient5 shaker1 right l1 l2 
93 leave right shot17 
94 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient3 ingredient5 
95 __method_precondition_m5_do_clean_shot_5_precondition shot5 
96 nop  
97 grasp left shaker1 
98 shake cocktail2 ingredient3 ingredient5 shaker1 left right 
99 pour-shaker-to-shot cocktail2 shot5 left shaker1 l2 l1 
100 empty-shaker left shaker1 cocktail2 l1 l0 
101 clean-shaker left right shaker1 
102 leave left shaker1 
103 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
104 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient4 shot14 
105 __method_precondition_m8_do_fill_shot_8_precondition shot14 dispenser4 ingredient4 
106 grasp left shot14 
107 fill-shot shot14 ingredient4 left right dispenser4 
108 pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 
109 clean-shot shot14 ingredient4 left right 
110 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient2 left shot14 
111 fill-shot shot14 ingredient2 left right dispenser2 
112 pour-shot-to-used-shaker shot14 ingredient2 shaker1 left l1 l2 
113 leave left shot14 
114 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient4 ingredient2 
115 __method_precondition_m5_do_clean_shot_5_precondition shot6 
116 nop  
117 grasp right shaker1 
118 shake cocktail1 ingredient4 ingredient2 shaker1 right left 
119 pour-shaker-to-shot cocktail1 shot6 right shaker1 l2 l1 
120 empty-shaker right shaker1 cocktail1 l1 l0 
121 clean-shaker right left shaker1 
122 leave right shaker1 
123 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
124 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient1 shot13 
125 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient2 dispenser1 
126 grasp left shot13 
127 clean-shot shot13 ingredient2 left right 
128 fill-shot shot13 ingredient1 left right dispenser1 
129 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 left l0 l1 
130 clean-shot shot13 ingredient1 left right 
131 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient2 left shot13 
132 fill-shot shot13 ingredient2 left right dispenser2 
133 pour-shot-to-used-shaker shot13 ingredient2 shaker1 left l1 l2 
134 leave left shot13 
135 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient1 ingredient2 
136 __method_precondition_m5_do_clean_shot_5_precondition shot7 
137 nop  
138 grasp left shaker1 
139 shake cocktail5 ingredient1 ingredient2 shaker1 left right 
140 pour-shaker-to-shot cocktail5 shot7 left shaker1 l2 l1 
141 empty-shaker left shaker1 cocktail5 l1 l0 
142 clean-shaker left right shaker1 
143 leave left shaker1 
144 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
145 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient2 shot17 
146 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient2 ingredient5 dispenser2 
147 grasp right shot17 
148 clean-shot shot17 ingredient5 right left 
149 fill-shot shot17 ingredient2 right left dispenser2 
150 pour-shot-to-clean-shaker shot17 ingredient2 shaker1 right l0 l1 
151 clean-shot shot17 ingredient2 right left 
152 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient4 right shot17 
153 fill-shot shot17 ingredient4 right left dispenser4 
154 pour-shot-to-used-shaker shot17 ingredient4 shaker1 right l1 l2 
155 leave right shot17 
156 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient2 ingredient4 
157 __method_precondition_m5_do_clean_shot_5_precondition shot8 
158 nop  
159 grasp left shaker1 
160 shake cocktail3 ingredient2 ingredient4 shaker1 left right 
161 pour-shaker-to-shot cocktail3 shot8 left shaker1 l2 l1 
162 empty-shaker left shaker1 cocktail3 l1 l0 
163 clean-shaker left right shaker1 
164 leave left shaker1 
165 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 left 
166 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient2 shot14 
167 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient2 dispenser2 
168 grasp left shot14 
169 refill-shot shot14 ingredient2 left right dispenser2 
170 pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 
171 clean-shot shot14 ingredient2 left right 
172 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient3 left shot14 
173 fill-shot shot14 ingredient3 left right dispenser3 
174 pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 
175 leave left shot14 
176 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient2 ingredient3 
177 __method_precondition_m5_do_clean_shot_5_precondition shot9 
178 nop  
179 grasp right shaker1 
180 shake cocktail10 ingredient2 ingredient3 shaker1 right left 
181 pour-shaker-to-shot cocktail10 shot9 right shaker1 l2 l1 
182 empty-shaker right shaker1 cocktail10 l1 l0 
183 clean-shaker right left shaker1 
184 leave right shaker1 
185 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
186 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient3 shot13 
187 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient3 ingredient2 dispenser3 
188 grasp left shot13 
189 clean-shot shot13 ingredient2 left right 
190 fill-shot shot13 ingredient3 left right dispenser3 
191 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 
192 clean-shot shot13 ingredient3 left right 
193 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 left shot13 
194 fill-shot shot13 ingredient2 left right dispenser2 
195 pour-shot-to-used-shaker shot13 ingredient2 shaker1 left l1 l2 
196 leave left shot13 
197 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient3 ingredient2 
198 __method_precondition_m5_do_clean_shot_5_precondition shot10 
199 nop  
200 grasp right shaker1 
201 shake cocktail4 ingredient3 ingredient2 shaker1 right left 
202 pour-shaker-to-shot cocktail4 shot10 right shaker1 l2 l1 
203 empty-shaker right shaker1 cocktail4 l1 l0 
204 clean-shaker right left shaker1 
205 leave right shaker1 
206 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 right 
207 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient2 shot15 
208 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser2 ingredient2 
209 grasp right shot15 
210 fill-shot shot15 ingredient2 right left dispenser2 
211 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 
212 clean-shot shot15 ingredient2 right left 
213 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient3 right shot15 
214 fill-shot shot15 ingredient3 right left dispenser3 
215 pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 
216 leave right shot15 
217 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient2 ingredient3 
218 __method_precondition_m5_do_clean_shot_5_precondition shot11 
219 nop  
220 grasp right shaker1 
221 shake cocktail6 ingredient2 ingredient3 shaker1 right left 
222 pour-shaker-to-shot cocktail6 shot11 right shaker1 l2 l1 
223 empty-shaker right shaker1 cocktail6 l1 l0 
224 clean-shaker right left shaker1 
225 leave right shaker1 
226 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 right 
227 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient2 shot15 
228 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient2 ingredient3 dispenser2 
229 grasp right shot15 
230 clean-shot shot15 ingredient3 right left 
231 fill-shot shot15 ingredient2 right left dispenser2 
232 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 
233 clean-shot shot15 ingredient2 right left 
234 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient3 right shot15 
235 fill-shot shot15 ingredient3 right left dispenser3 
236 pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 
237 leave right shot15 
238 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient2 ingredient3 
239 __method_precondition_m5_do_clean_shot_5_precondition shot12 
240 nop  
241 grasp left shaker1 
242 shake cocktail10 ingredient2 ingredient3 shaker1 left right 
243 pour-shaker-to-shot cocktail10 shot12 left shaker1 l2 l1 
244 empty-shaker left shaker1 cocktail10 l1 l0 
245 clean-shaker left right shaker1 
246 leave left shaker1 
247 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser1 ingredient1 
248 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient2 dispenser1 
249 grasp left shot13 
250 clean-shot shot13 ingredient2 left right 
251 fill-shot shot13 ingredient1 left right dispenser1 
252 leave left shot13 
253 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser1 ingredient1 
254 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient1 ingredient3 dispenser1 
255 grasp left shot14 
256 clean-shot shot14 ingredient3 left right 
257 fill-shot shot14 ingredient1 left right dispenser1 
258 leave left shot14 
259 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser1 ingredient1 
260 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient3 dispenser1 
261 grasp right shot15 
262 clean-shot shot15 ingredient3 right left 
263 fill-shot shot15 ingredient1 right left dispenser1 
264 leave right shot15 
265 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot16 left 
266 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient2 shot17 
267 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient2 ingredient4 dispenser2 
268 grasp left shot17 
269 clean-shot shot17 ingredient4 left right 
270 fill-shot shot17 ingredient2 left right dispenser2 
271 pour-shot-to-clean-shaker shot17 ingredient2 shaker1 left l0 l1 
272 clean-shot shot17 ingredient2 left right 
273 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient4 left shot17 
274 fill-shot shot17 ingredient4 left right dispenser4 
275 pour-shot-to-used-shaker shot17 ingredient4 shaker1 left l1 l2 
276 leave left shot17 
277 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient2 ingredient4 
278 __method_precondition_m5_do_clean_shot_5_precondition shot16 
279 nop  
280 grasp left shaker1 
281 shake cocktail3 ingredient2 ingredient4 shaker1 left right 
282 pour-shaker-to-shot cocktail3 shot16 left shaker1 l2 l1 
283 empty-shaker left shaker1 cocktail3 l1 l0 
284 clean-shaker left right shaker1 
285 leave left shaker1 
root 378
286 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 191
287 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 236
288 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 266 362 313 369
289 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient1 right  -> _m2_get_first_ingredient_4 6
290 do_cocktail_in_shot1 shot12 cocktail10  -> m0_do_cocktail_in_shot1 226 398 352 409
291 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient2 right  -> _m3_get_second_ingredient_2 29
292 do_clean_shot_m4_serve_shot_sip_2 shot4 left  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2> 74 75
293 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 right  -> _m2_get_first_ingredient_4 68
294 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient2 right  -> _m2_get_first_ingredient_4 151
295 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 92
296 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient4 left  -> _m3_get_second_ingredient_2 274
297 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 30
298 do_cocktail_in_shot1 shot10 cocktail4  -> m0_do_cocktail_in_shot1 185 397 356 330
299 do_fill_shot shot15 ingredient1 right  -> m9_do_fill_shot 260 261 262 263
300 get_first_ingredient cocktail7 right  -> m2_get_first_ingredient 21 372 308 382
301 serve_shot shot2 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 32 402 35 36 37 38 39 40
302 do_clean_shot_m4_serve_shot_sip_2 shot6 left  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail3,left];m5_do_clean_shot;0;-1,-2> 115 116
303 do_cocktail_in_shot1 shot16 cocktail3  -> m0_do_cocktail_in_shot1 265 288 304 377
304 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 273 296 401 276
305 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 174
306 do_fill_shot shot13 ingredient1 left  -> m9_do_fill_shot 248 249 250 251
307 do_cocktail_in_shot2 shot15 ingredient1  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 259 299 264
308 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 26
309 serve_shot shot4 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 73 292 76 77 78 79 80 81
310 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 232
311 serve_shot shot5 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 94 338 97 98 99 100 101 102
312 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 131 421 326 134
313 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 271
314 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 136 137
315 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 51
316 do_clean_shot_m4_serve_shot_sip_2 shot8 right  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2> 157 158
317 do_fill_shot shot13 ingredient1 left  -> m9_do_fill_shot 125 126 127 128
318 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 170
319 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 110 408 399 113
320 do_fill_shot shot14 ingredient2 left  -> m7_do_fill_shot 167 168 169
321 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 47
322 do_cocktail_in_shot1 shot9 cocktail10  -> m0_do_cocktail_in_shot1 165 332 343 417
323 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 124 317 415 380
324 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 108
325 get_first_ingredient cocktail3 right  -> m2_get_first_ingredient 145 375 368 294
326 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 133
327 do_cocktail_in_shot1 shot7 cocktail5  -> m0_do_cocktail_in_shot1 123 323 312 337
328 do_clean_shot_m4_serve_shot_sip_2 shot12 right  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2> 239 240
329 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient5 right  -> _m3_get_second_ingredient_2 91
330 serve_shot shot10 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 197 348 200 201 202 203 204 205
331 serve_shot shot8 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 156 316 159 160 161 162 163 164
332 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 166 320 318 334
333 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 left  -> _m2_get_first_ingredient_4 192
334 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient2 left  -> _m2_get_first_ingredient_4 171
335 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 83 387 355 370
336 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 left  -> _m3_get_second_ingredient_2 194
337 serve_shot shot7 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 135 314 138 139 140 141 142 143
338 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 95 96
339 do_cocktail_in_shot1 shot4 cocktail8  -> m0_do_cocktail_in_shot1 62 403 358 309
340 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 218 219
341 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient4 left  -> _m2_get_first_ingredient_4 109
342 do_cocktail_in_shot1 shot5 cocktail2  -> m0_do_cocktail_in_shot1 82 335 391 311
343 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 172 363 305 175
344 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 right  -> _m3_get_second_ingredient_2 235
345 do_cocktail_in_shot2 shot14 ingredient1  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 253 347 258
346 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient4 right  -> _m3_get_second_ingredient_2 153
347 do_fill_shot shot14 ingredient1 left  -> m9_do_fill_shot 254 255 256 257
348 do_clean_shot_m4_serve_shot_sip_2 shot10 left  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2> 198 199
349 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 7 386 365 10
350 do_fill_shot shot14 ingredient4 left  -> m8_do_fill_shot 105 106 107
351 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 207 410 376 394
352 get_second_ingredient cocktail10 right  -> m3_get_second_ingredient 234 344 287 237
353 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
354 do_cocktail_in_shot1 shot3 cocktail11  -> m0_do_cocktail_in_shot1 41 361 400 360
355 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 88
356 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 193 336 422 196
357 do_clean_shot_m4_serve_shot_sip_2 shot16 right  -> <_m4_serve_shot_2;do_clean_shot[shot16,cocktail1,right];m5_do_clean_shot;0;-1,-2> 278 279
358 get_second_ingredient cocktail8 right  -> m3_get_second_ingredient 69 404 393 72
359 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 154
360 serve_shot shot3 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 53 396 56 57 58 59 60 61
361 get_first_ingredient cocktail11 right  -> m2_get_first_ingredient 42 418 321 384
362 do_fill_shot shot17 ingredient2 left  -> m9_do_fill_shot 267 268 269 270
363 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient3 left  -> _m3_get_second_ingredient_2 173
364 do_cocktail_in_shot1 shot2 cocktail7  -> m0_do_cocktail_in_shot1 20 300 388 301
365 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 9
366 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 right  -> _m3_get_second_ingredient_2 214
367 serve_shot shot11 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 217 340 220 221 222 223 224 225
368 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 150
369 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient2 left  -> _m2_get_first_ingredient_4 272
370 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient3 right  -> _m2_get_first_ingredient_4 89
371 do_fill_shot shot17 ingredient1 right  -> m8_do_fill_shot 2 3 4
372 do_fill_shot shot17 ingredient1 right  -> m9_do_fill_shot 22 23 24 25
373 serve_shot shot1 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 353 14 15 16 17 18 19
374 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 215
375 do_fill_shot shot17 ingredient2 right  -> m9_do_fill_shot 146 147 148 149
376 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 211
377 serve_shot shot16 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot16,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 277 357 280 281 282 283 284 285
378 __choicelessATCompilation__top_1  -> __top_1 385 364 354 339 342 419 327 381 322 298 392 290 379 345 307 303
379 do_cocktail_in_shot2 shot13 ingredient1  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 247 306 252
380 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 left  -> _m2_get_first_ingredient_4 130
381 do_cocktail_in_shot1 shot8 cocktail3  -> m0_do_cocktail_in_shot1 144 325 407 331
382 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient1 right  -> _m2_get_first_ingredient_4 27
383 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 67
384 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient3 right  -> _m2_get_first_ingredient_4 48
385 do_cocktail_in_shot1 shot1 cocktail9  -> m0_do_cocktail_in_shot1 0 412 349 373
386 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient3 right  -> _m3_get_second_ingredient_2 8
387 do_fill_shot shot17 ingredient3 right  -> m9_do_fill_shot 84 85 86 87
388 get_second_ingredient cocktail7 right  -> m3_get_second_ingredient 28 291 297 31
389 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 right  -> _m2_get_first_ingredient_4 233
390 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 213 366 374 216
391 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 90 329 295 93
392 do_cocktail_in_shot1 shot11 cocktail6  -> m0_do_cocktail_in_shot1 206 351 390 367
393 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 71
394 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 right  -> _m2_get_first_ingredient_4 212
395 do_fill_shot shot15 ingredient2 right  -> m9_do_fill_shot 228 229 230 231
396 do_clean_shot_m4_serve_shot_sip_2 shot3 right  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2> 54 55
397 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 186 411 286 333
398 get_first_ingredient cocktail10 right  -> m2_get_first_ingredient 227 395 310 389
399 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 112
400 get_second_ingredient cocktail11 right  -> m3_get_second_ingredient 49 416 315 52
401 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 275
402 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 33 34
403 get_first_ingredient cocktail8 right  -> m2_get_first_ingredient 63 420 383 293
404 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 right  -> _m3_get_second_ingredient_2 70
405 serve_shot shot6 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot6,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 114 302 117 118 119 120 121 122
406 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 104 350 324 341
407 get_second_ingredient cocktail3 right  -> m3_get_second_ingredient 152 346 359 155
408 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient2 left  -> _m3_get_second_ingredient_2 111
409 serve_shot shot12 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 238 328 241 242 243 244 245 246
410 do_fill_shot shot15 ingredient2 right  -> m8_do_fill_shot 208 209 210
411 do_fill_shot shot13 ingredient3 left  -> m9_do_fill_shot 187 188 189 190
412 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 1 371 414 289
413 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 177 178
414 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 5
415 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 129
416 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient4 right  -> _m3_get_second_ingredient_2 50
417 serve_shot shot9 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 176 413 179 180 181 182 183 184
418 do_fill_shot shot17 ingredient3 right  -> m9_do_fill_shot 43 44 45 46
419 do_cocktail_in_shot1 shot6 cocktail1  -> m0_do_cocktail_in_shot1 103 406 319 405
420 do_fill_shot shot13 ingredient4 right  -> m8_do_fill_shot 64 65 66
421 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 left  -> _m3_get_second_ingredient_2 132
422 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 195

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 21.756 MEMPEAK_KBS 840829.952
