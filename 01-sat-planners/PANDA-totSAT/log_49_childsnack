PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/childsnack/domain.hddl instances/childsnack/p09.hddl"


Planner Configuration
=====================
Domain: instances/childsnack/domain.hddl
Problem: instances/childsnack/p09.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p09.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 13
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 72
Compiling negative preconditions ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 72
Compiling split parameters ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 72
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 72
Grounded planning graph ... done in 1193ms.
	Number of Grounded Actions 25101
	Number of Grounded Literals 237
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 72
Two Way TDG ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 72
Grounding ... done.
	number of abstract tasks = 15
	number of tasks = 22233
	number of decomposition methods = 56700
	number of predicates = 267
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 15
	number of tasks = 22233
	number of decomposition methods = 56700
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1717ms.
	Number of Grounded Actions 22218
	Number of Grounded Literals 177
	number of abstract tasks = 15
	number of tasks = 22233
	number of decomposition methods = 56700
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 22233
	number of decomposition methods = 56700
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 15
	number of tasks = 22233
	number of decomposition methods = 56700
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1205ms.
	Number of Grounded Actions 22218
	Number of Grounded Literals 177
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 16
	number of tasks = 22234
	number of decomposition methods = 56701
	number of predicates = 177
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 18900
	number of epsilon methods = 0
	number of primitive tasks = 22218
	number of constants = 0
Tasks 22218 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854730859ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 106 will abort at 9223372036854729720
done
initial PDT has 90 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 90 leafs
SHOP LEAFS 15
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 46728
Size 46728 at 0/22218
Size 44028 at 500/22218
Size 44028 at 1000/22218
Size 44028 at 1500/22218
Size 44028 at 2000/22218
Size 44028 at 2500/22218
Size 44028 at 3000/22218
Size 44028 at 3500/22218
Size 44028 at 4000/22218
Size 44028 at 4500/22218
Size 28116 at 5000/22218
Size 28033 at 5500/22218
Size 22707 at 6000/22218
Size 22703 at 6500/22218
Size 22703 at 7000/22218
Size 22703 at 7500/22218
Size 22703 at 8000/22218
Size 22703 at 8500/22218
Size 22703 at 9000/22218
Size 22703 at 9500/22218
Size 22703 at 10000/22218
Size 22703 at 10500/22218
Size 22703 at 11000/22218
Size 22703 at 11500/22218
Size 22703 at 12000/22218
Size 22703 at 12500/22218
Size 22703 at 13000/22218
Size 22703 at 13500/22218
Size 22703 at 14000/22218
Size 22703 at 14500/22218
Size 22703 at 15000/22218
Size 22703 at 15500/22218
Size 22703 at 16000/22218
Size 22703 at 16500/22218
Size 22703 at 17000/22218
Size 22703 at 17500/22218
Size 22703 at 18000/22218
Size 22703 at 18500/22218
Size 22703 at 19000/22218
Size 22703 at 19500/22218
Size 22703 at 20000/22218
Size 22703 at 20500/22218
Size 22703 at 21000/22218
Size 22703 at 21500/22218
Size 22703 at 22000/22218
Size 4633
Size 4633 at 0/22218
Size 2830 at 500/22218
Size 2830 at 1000/22218
Size 2830 at 1500/22218
Size 2830 at 2000/22218
Size 2830 at 2500/22218
Size 2830 at 3000/22218
Size 2830 at 3500/22218
Size 2830 at 4000/22218
Size 2830 at 4500/22218
Size 2830 at 5000/22218
Size 238 at 5500/22218
Size 238 at 6000/22218
Size 238 at 6500/22218
Size 238 at 7000/22218
Size 238 at 7500/22218
Size 238 at 8000/22218
Size 238 at 8500/22218
Size 238 at 9000/22218
Size 238 at 9500/22218
Size 238 at 10000/22218
Size 238 at 10500/22218
Size 238 at 11000/22218
Size 238 at 11500/22218
Size 238 at 12000/22218
Size 238 at 12500/22218
Size 238 at 13000/22218
Size 238 at 13500/22218
Size 238 at 14000/22218
Size 238 at 14500/22218
Size 238 at 15000/22218
Size 238 at 15500/22218
Size 238 at 16000/22218
Size 238 at 16500/22218
Size 238 at 17000/22218
Size 238 at 17500/22218
Size 238 at 18000/22218
Size 238 at 18500/22218
Size 238 at 19000/22218
Size 238 at 19500/22218
Size 238 at 20000/22218
Size 238 at 20500/22218
Size 238 at 21000/22218
Size 238 at 21500/22218
Size 238 at 22000/22218
Size 238
Size 238 at 0/22218
Size 238 at 500/22218
Size 238 at 1000/22218
Size 238 at 1500/22218
Size 238 at 2000/22218
Size 238 at 2500/22218
Size 238 at 3000/22218
Size 238 at 3500/22218
Size 238 at 4000/22218
Size 238 at 4500/22218
Size 238 at 5000/22218
Size 238 at 5500/22218
Size 238 at 6000/22218
Size 238 at 6500/22218
Size 238 at 7000/22218
Size 238 at 7500/22218
Size 238 at 8000/22218
Size 238 at 8500/22218
Size 238 at 9000/22218
Size 238 at 9500/22218
Size 238 at 10000/22218
Size 238 at 10500/22218
Size 238 at 11000/22218
Size 238 at 11500/22218
Size 238 at 12000/22218
Size 238 at 12500/22218
Size 238 at 13000/22218
Size 238 at 13500/22218
Size 238 at 14000/22218
Size 238 at 14500/22218
Size 238 at 15000/22218
Size 238 at 15500/22218
Size 238 at 16000/22218
Size 238 at 16500/22218
Size 238 at 17000/22218
Size 238 at 17500/22218
Size 238 at 18000/22218
Size 238 at 18500/22218
Size 238 at 19000/22218
Size 238 at 19500/22218
Size 238 at 20000/22218
Size 238 at 20500/22218
Size 238 at 21000/22218
Size 238 at 21500/22218
Size 238 at 22000/22218
Size 238
Invariant time: 1.896
Number of invariants: 238
Invariant Clauses 21658
NUMBER OF CLAUSES 1852694
NUMBER OF STATE CLAUSES 217060
NUMBER OF DECOMPOSITION CLAUSES 1635634
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 11.72% 88.28% 0.0% 
NUMBER OF PATHS 90
Starting cryptominisat
Setting starttime of solver to 1603872689269
Command exited with non-zero status 10
0.99 0.03

Time command gave the following runtime for the solver: 1020
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_8,14951 14951 m0_serve
8 57 pathaction!1_8,22229
Consider method^1_10,4280 4280 m1_serve
10 104 pathaction!1_10,22232
Consider method^1_9,23536 23536 m0_serve
9 69 pathaction!1_9,22226
Consider method^1_12,9476 9476 m1_serve
12 18 pathaction!1_12,22227
Consider method^1_0,39152 39152 m0_serve
0 72 pathaction!1_0,22220
Consider method^1_3,3124 3124 m1_serve
3 103 pathaction!1_3,22221
Consider method^1_5,40949 40949 m1_serve
5 31 pathaction!1_5,22230
Consider method^1_14,9558 9558 m1_serve
14 44 pathaction!1_14,22219
Consider method^1_4,8727 8727 m0_serve
4 35 pathaction!1_4,22223
Consider method^1_13,13961 13961 m1_serve
13 25 pathaction!1_13,22224
Consider method^1_11,272 272 m1_serve
11 81 pathaction!1_11,22231
Consider method^1_6,19327 19327 m0_serve
6 45 pathaction!1_6,22222
Consider method^1_2,50289 50289 m1_serve
2 84 pathaction!1_2,22228
Consider method^0_,56700 56700 __top_1
 80 pathaction!0_,22233
Consider method^1_7,27566 27566 m0_serve
7 27 pathaction!1_7,22218
Consider method^1_1,54632 54632 m1_serve
1 67 pathaction!1_1,22225


CHECKING primitive solution of length 90 ...
true 90 __method_precondition_m0_serve_0_precondition[table3,bread14,sandw6,content5,child1;]
true 6 make_sandwich_no_gluten[sandw6,bread14,content5;]
true 3 put_on_tray[sandw6,tray2;kitchen]
true 40 move_tray[tray2,kitchen,table3;]
true 102 serve_sandwich_no_gluten[sandw6,child1,tray2,table3;]
true 51 move_tray[tray2,table3,kitchen;]
true 89 __method_precondition_m1_serve_1_precondition[table2,sandw17,bread5,content14,child2;]
true 38 make_sandwich[sandw17,bread5,content14;]
true 39 put_on_tray[sandw17,tray2;kitchen]
true 16 move_tray[tray2,kitchen,table2;]
true 92 serve_sandwich[sandw17,child2,tray2,table2;]
true 100 move_tray[tray2,table2,kitchen;]
true 36 __method_precondition_m1_serve_1_precondition[table1,sandw8,bread8,content7,child3;]
true 73 make_sandwich[sandw8,bread8,content7;]
true 0 put_on_tray[sandw8,tray2;kitchen]
true 7 move_tray[tray2,kitchen,table1;]
true 56 serve_sandwich[sandw8,child3,tray2,table1;]
true 105 move_tray[tray2,table1,kitchen;]
true 55 __method_precondition_m1_serve_1_precondition[table3,sandw4,bread4,content15,child4;]
true 54 make_sandwich[sandw4,bread4,content15;]
true 8 put_on_tray[sandw4,tray2;kitchen]
true 61 move_tray[tray2,kitchen,table3;]
true 23 serve_sandwich[sandw4,child4,tray2,table3;]
true 4 move_tray[tray2,table3,kitchen;]
true 32 __method_precondition_m0_serve_0_precondition[table1,bread13,sandw14,content13,child5;]
true 58 make_sandwich_no_gluten[sandw14,bread13,content13;]
true 50 put_on_tray[sandw14,tray3;kitchen]
true 86 move_tray[tray3,kitchen,table1;]
true 87 serve_sandwich_no_gluten[sandw14,child5,tray3,table1;]
true 2 move_tray[tray3,table1,kitchen;]
true 14 __method_precondition_m1_serve_1_precondition[table1,sandw7,bread11,content10,child6;]
true 37 make_sandwich[sandw7,bread11,content10;]
true 33 put_on_tray[sandw7,tray2;kitchen]
true 28 move_tray[tray2,kitchen,table1;]
true 64 serve_sandwich[sandw7,child6,tray2,table1;]
true 82 move_tray[tray2,table1,kitchen;]
true 93 __method_precondition_m0_serve_0_precondition[table3,bread9,sandw3,content2,child7;]
true 29 make_sandwich_no_gluten[sandw3,bread9,content2;]
true 53 put_on_tray[sandw3,tray2;kitchen]
true 46 move_tray[tray2,kitchen,table3;]
true 76 serve_sandwich_no_gluten[sandw3,child7,tray2,table3;]
true 20 move_tray[tray2,table3,kitchen;]
true 43 __method_precondition_m0_serve_0_precondition[table1,bread6,sandw13,content8,child8;]
true 98 make_sandwich_no_gluten[sandw13,bread6,content8;]
true 1 put_on_tray[sandw13,tray2;kitchen]
true 12 move_tray[tray2,kitchen,table1;]
true 10 serve_sandwich_no_gluten[sandw13,child8,tray2,table1;]
true 66 move_tray[tray2,table1,kitchen;]
true 5 __method_precondition_m0_serve_0_precondition[table1,bread2,sandw19,content4,child9;]
true 17 make_sandwich_no_gluten[sandw19,bread2,content4;]
true 48 put_on_tray[sandw19,tray1;kitchen]
true 13 move_tray[tray1,kitchen,table1;]
true 62 serve_sandwich_no_gluten[sandw19,child9,tray1,table1;]
true 52 move_tray[tray1,table1,kitchen;]
true 83 __method_precondition_m0_serve_0_precondition[table1,bread3,sandw9,content1,child10;]
true 30 make_sandwich_no_gluten[sandw9,bread3,content1;]
true 74 put_on_tray[sandw9,tray2;kitchen]
true 94 move_tray[tray2,kitchen,table1;]
true 96 serve_sandwich_no_gluten[sandw9,child10,tray2,table1;]
true 75 move_tray[tray2,table1,kitchen;]
true 68 __method_precondition_m1_serve_1_precondition[table2,sandw5,bread7,content3,child11;]
true 70 make_sandwich[sandw5,bread7,content3;]
true 22 put_on_tray[sandw5,tray1;kitchen]
true 65 move_tray[tray1,kitchen,table2;]
true 60 serve_sandwich[sandw5,child11,tray1,table2;]
true 59 move_tray[tray1,table2,kitchen;]
true 41 __method_precondition_m1_serve_1_precondition[table3,sandw12,bread1,content6,child12;]
true 78 make_sandwich[sandw12,bread1,content6;]
true 85 put_on_tray[sandw12,tray2;kitchen]
true 24 move_tray[tray2,kitchen,table3;]
true 88 serve_sandwich[sandw12,child12,tray2,table3;]
true 91 move_tray[tray2,table3,kitchen;]
true 49 __method_precondition_m1_serve_1_precondition[table1,sandw1,bread12,content12,child13;]
true 97 make_sandwich[sandw1,bread12,content12;]
true 99 put_on_tray[sandw1,tray2;kitchen]
true 19 move_tray[tray2,kitchen,table1;]
true 15 serve_sandwich[sandw1,child13,tray2,table1;]
true 79 move_tray[tray2,table1,kitchen;]
true 71 __method_precondition_m1_serve_1_precondition[table2,sandw16,bread10,content9,child14;]
true 77 make_sandwich[sandw16,bread10,content9;]
true 34 put_on_tray[sandw16,tray2;kitchen]
true 63 move_tray[tray2,kitchen,table2;]
true 101 serve_sandwich[sandw16,child14,tray2,table2;]
true 11 move_tray[tray2,table2,kitchen;]
true 47 __method_precondition_m1_serve_1_precondition[table2,sandw18,bread15,content11,child15;]
true 26 make_sandwich[sandw18,bread15,content11;]
true 9 put_on_tray[sandw18,tray1;kitchen]
true 21 move_tray[tray1,kitchen,table2;]
true 95 serve_sandwich[sandw18,child15,tray1,table2;]
true 42 move_tray[tray1,table2,kitchen;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 2490527888
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 177
number of actions                    = 22234
number of abstract actions           = 16
number of primitive actions          = 22218
number of methods                    = 56701
number of primitive shop actions     = 18900
number of primitive non-shop actions = 3318
size of largest method               = 15
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 125273
number of clauses               = 1852694
average size of clauses         = 2.0756692686433915
number of assert                = 69
number of horn                  = 1849430
K offset                        = 0
K chosen value                  = 2
state formula                   = 217060
method children clauses         = 0
number of paths                 = 90
maximum plan length             = 90
number of decomposition clauses = 1635634
number of ordering clauses      = 0
number of state clauses         = 217060
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 62952
============ parsing ============
total                         = 1055
file parser                   = 555
sort expansion                = 210
closed world assumption       = 164
inherit preconditions         = 0
shop methods                  = 12
eliminate identical variables = 48
strip domain of hybridity     = 1
flatten formula               = 64
============ preprocessing ============
total                                      = 37763
compile negative preconditions             = 16
compile unit methods                       = 0
split parameter                            = 46
expand choiceless abstract tasks           = 57
compile methods with identical tasks       = 279
removing unnecessary predicates            = 10087
lifted reachabiltiy analysis               = 81
grounded planning graph analysis           = 7000
grounded task decomposition graph analysis = 16220
grounding                                  = 3728
create artificial top task                 = 131
============ search preparation ============
compute state invariants = 1987
============ sat ============
total                                        = 14166
generate formula                             = 12457
generate path decomposition tree             = 6720
normalise path decomposition tree            = 335
sog optimisation                             = 583
translate path decomposition tree to clauses = 1949
generate state formula                       = 12332
generate state invariant formula             = 25
transform to DIMACS                          = 516
SAT solver                                   = 1020
SAT solver for K=0002                        = 1020

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="22218";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="16";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="2490527888";"40 sat:20:state formula"="217060";"40 sat:01:number of variables"="125273";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="90";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="56701";"30 problem:07:number of primitive shop actions"="18900";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="22234";"30 problem:08:number of primitive non-shop actions"="3318";"30 problem:02:number of predicates"="177";"40 sat:03:number of horn"="1849430";"40 sat:15:K chosen value"="2";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="15";"40 sat:03:average size of clauses"="2.0756692686433915";"40 sat:02:number of clauses"="1852694";"40 sat:50:number of state clauses"="217060";"40 sat:03:number of assert"="69";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="90";"40 sat:50:number of decomposition clauses"="1635634";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="555";"01 parsing:08:flatten formula"="64";"40 sat:00:total"="14166";"40 sat:16:generate state formula"="12332";"40 sat:20:transform to DIMACS"="516";"40 sat:11:generate path decomposition tree"="6720";"02 preprocessing:07:compile methods with identical tasks"="279";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="10087";"01 parsing:03:closed world assumption"="164";"02 preprocessing:11:lifted reachabiltiy analysis"="81";"01 parsing:02:sort expansion"="210";"40 sat:12:normalise path decomposition tree"="335";"40 sat:40:SAT solver"="1020";"01 parsing:00:total"="1055";"40 sat:10:generate formula"="12457";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="1020";"02 preprocessing:01:compile negative preconditions"="16";"00 total:00:total"="62952";"40 sat:13:sog optimisation"="583";"02 preprocessing:12:grounded planning graph analysis"="7000";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="16220";"02 preprocessing:04:split parameter"="46";"01 parsing:05:shop methods"="12";"10 search preparation:02:compute state invariants"="1987";"01 parsing:06:eliminate identical variables"="48";"40 sat:15:translate path decomposition tree to clauses"="1949";"02 preprocessing:05:expand choiceless abstract tasks"="57";"40 sat:17:generate state invariant formula"="25";"02 preprocessing:00:total"="37763";"02 preprocessing:99:create artificial top task"="131";"02 preprocessing:84:grounding"="3728"
#!verify __method_precondition_m0_serve_0_precondition[table3,bread14,sandw6,content5,child1];make_sandwich_no_gluten[sandw6,bread14,content5];put_on_tray[sandw6,tray2];move_tray[tray2,kitchen,table3];serve_sandwich_no_gluten[sandw6,child1,tray2,table3];move_tray[tray2,table3,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw17,bread5,content14,child2];make_sandwich[sandw17,bread5,content14];put_on_tray[sandw17,tray2];move_tray[tray2,kitchen,table2];serve_sandwich[sandw17,child2,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m1_serve_1_precondition[table1,sandw8,bread8,content7,child3];make_sandwich[sandw8,bread8,content7];put_on_tray[sandw8,tray2];move_tray[tray2,kitchen,table1];serve_sandwich[sandw8,child3,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m1_serve_1_precondition[table3,sandw4,bread4,content15,child4];make_sandwich[sandw4,bread4,content15];put_on_tray[sandw4,tray2];move_tray[tray2,kitchen,table3];serve_sandwich[sandw4,child4,tray2,table3];move_tray[tray2,table3,kitchen];__method_precondition_m0_serve_0_precondition[table1,bread13,sandw14,content13,child5];make_sandwich_no_gluten[sandw14,bread13,content13];put_on_tray[sandw14,tray3];move_tray[tray3,kitchen,table1];serve_sandwich_no_gluten[sandw14,child5,tray3,table1];move_tray[tray3,table1,kitchen];__method_precondition_m1_serve_1_precondition[table1,sandw7,bread11,content10,child6];make_sandwich[sandw7,bread11,content10];put_on_tray[sandw7,tray2];move_tray[tray2,kitchen,table1];serve_sandwich[sandw7,child6,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m0_serve_0_precondition[table3,bread9,sandw3,content2,child7];make_sandwich_no_gluten[sandw3,bread9,content2];put_on_tray[sandw3,tray2];move_tray[tray2,kitchen,table3];serve_sandwich_no_gluten[sandw3,child7,tray2,table3];move_tray[tray2,table3,kitchen];__method_precondition_m0_serve_0_precondition[table1,bread6,sandw13,content8,child8];make_sandwich_no_gluten[sandw13,bread6,content8];put_on_tray[sandw13,tray2];move_tray[tray2,kitchen,table1];serve_sandwich_no_gluten[sandw13,child8,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m0_serve_0_precondition[table1,bread2,sandw19,content4,child9];make_sandwich_no_gluten[sandw19,bread2,content4];put_on_tray[sandw19,tray1];move_tray[tray1,kitchen,table1];serve_sandwich_no_gluten[sandw19,child9,tray1,table1];move_tray[tray1,table1,kitchen];__method_precondition_m0_serve_0_precondition[table1,bread3,sandw9,content1,child10];make_sandwich_no_gluten[sandw9,bread3,content1];put_on_tray[sandw9,tray2];move_tray[tray2,kitchen,table1];serve_sandwich_no_gluten[sandw9,child10,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw5,bread7,content3,child11];make_sandwich[sandw5,bread7,content3];put_on_tray[sandw5,tray1];move_tray[tray1,kitchen,table2];serve_sandwich[sandw5,child11,tray1,table2];move_tray[tray1,table2,kitchen];__method_precondition_m1_serve_1_precondition[table3,sandw12,bread1,content6,child12];make_sandwich[sandw12,bread1,content6];put_on_tray[sandw12,tray2];move_tray[tray2,kitchen,table3];serve_sandwich[sandw12,child12,tray2,table3];move_tray[tray2,table3,kitchen];__method_precondition_m1_serve_1_precondition[table1,sandw1,bread12,content12,child13];make_sandwich[sandw1,bread12,content12];put_on_tray[sandw1,tray2];move_tray[tray2,kitchen,table1];serve_sandwich[sandw1,child13,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw16,bread10,content9,child14];make_sandwich[sandw16,bread10,content9];put_on_tray[sandw16,tray2];move_tray[tray2,kitchen,table2];serve_sandwich[sandw16,child14,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m1_serve_1_precondition[table2,sandw18,bread15,content11,child15];make_sandwich[sandw18,bread15,content11];put_on_tray[sandw18,tray1];move_tray[tray1,kitchen,table2];serve_sandwich[sandw18,child15,tray1,table2];move_tray[tray1,table2,kitchen]
==>
0 __method_precondition_m0_serve_0_precondition table3 bread14 sandw6 content5 child1 
1 make_sandwich_no_gluten sandw6 bread14 content5 
2 put_on_tray sandw6 tray2 
3 move_tray tray2 kitchen table3 
4 serve_sandwich_no_gluten sandw6 child1 tray2 table3 
5 move_tray tray2 table3 kitchen 
6 __method_precondition_m1_serve_1_precondition table2 sandw17 bread5 content14 child2 
7 make_sandwich sandw17 bread5 content14 
8 put_on_tray sandw17 tray2 
9 move_tray tray2 kitchen table2 
10 serve_sandwich sandw17 child2 tray2 table2 
11 move_tray tray2 table2 kitchen 
12 __method_precondition_m1_serve_1_precondition table1 sandw8 bread8 content7 child3 
13 make_sandwich sandw8 bread8 content7 
14 put_on_tray sandw8 tray2 
15 move_tray tray2 kitchen table1 
16 serve_sandwich sandw8 child3 tray2 table1 
17 move_tray tray2 table1 kitchen 
18 __method_precondition_m1_serve_1_precondition table3 sandw4 bread4 content15 child4 
19 make_sandwich sandw4 bread4 content15 
20 put_on_tray sandw4 tray2 
21 move_tray tray2 kitchen table3 
22 serve_sandwich sandw4 child4 tray2 table3 
23 move_tray tray2 table3 kitchen 
24 __method_precondition_m0_serve_0_precondition table1 bread13 sandw14 content13 child5 
25 make_sandwich_no_gluten sandw14 bread13 content13 
26 put_on_tray sandw14 tray3 
27 move_tray tray3 kitchen table1 
28 serve_sandwich_no_gluten sandw14 child5 tray3 table1 
29 move_tray tray3 table1 kitchen 
30 __method_precondition_m1_serve_1_precondition table1 sandw7 bread11 content10 child6 
31 make_sandwich sandw7 bread11 content10 
32 put_on_tray sandw7 tray2 
33 move_tray tray2 kitchen table1 
34 serve_sandwich sandw7 child6 tray2 table1 
35 move_tray tray2 table1 kitchen 
36 __method_precondition_m0_serve_0_precondition table3 bread9 sandw3 content2 child7 
37 make_sandwich_no_gluten sandw3 bread9 content2 
38 put_on_tray sandw3 tray2 
39 move_tray tray2 kitchen table3 
40 serve_sandwich_no_gluten sandw3 child7 tray2 table3 
41 move_tray tray2 table3 kitchen 
42 __method_precondition_m0_serve_0_precondition table1 bread6 sandw13 content8 child8 
43 make_sandwich_no_gluten sandw13 bread6 content8 
44 put_on_tray sandw13 tray2 
45 move_tray tray2 kitchen table1 
46 serve_sandwich_no_gluten sandw13 child8 tray2 table1 
47 move_tray tray2 table1 kitchen 
48 __method_precondition_m0_serve_0_precondition table1 bread2 sandw19 content4 child9 
49 make_sandwich_no_gluten sandw19 bread2 content4 
50 put_on_tray sandw19 tray1 
51 move_tray tray1 kitchen table1 
52 serve_sandwich_no_gluten sandw19 child9 tray1 table1 
53 move_tray tray1 table1 kitchen 
54 __method_precondition_m0_serve_0_precondition table1 bread3 sandw9 content1 child10 
55 make_sandwich_no_gluten sandw9 bread3 content1 
56 put_on_tray sandw9 tray2 
57 move_tray tray2 kitchen table1 
58 serve_sandwich_no_gluten sandw9 child10 tray2 table1 
59 move_tray tray2 table1 kitchen 
60 __method_precondition_m1_serve_1_precondition table2 sandw5 bread7 content3 child11 
61 make_sandwich sandw5 bread7 content3 
62 put_on_tray sandw5 tray1 
63 move_tray tray1 kitchen table2 
64 serve_sandwich sandw5 child11 tray1 table2 
65 move_tray tray1 table2 kitchen 
66 __method_precondition_m1_serve_1_precondition table3 sandw12 bread1 content6 child12 
67 make_sandwich sandw12 bread1 content6 
68 put_on_tray sandw12 tray2 
69 move_tray tray2 kitchen table3 
70 serve_sandwich sandw12 child12 tray2 table3 
71 move_tray tray2 table3 kitchen 
72 __method_precondition_m1_serve_1_precondition table1 sandw1 bread12 content12 child13 
73 make_sandwich sandw1 bread12 content12 
74 put_on_tray sandw1 tray2 
75 move_tray tray2 kitchen table1 
76 serve_sandwich sandw1 child13 tray2 table1 
77 move_tray tray2 table1 kitchen 
78 __method_precondition_m1_serve_1_precondition table2 sandw16 bread10 content9 child14 
79 make_sandwich sandw16 bread10 content9 
80 put_on_tray sandw16 tray2 
81 move_tray tray2 kitchen table2 
82 serve_sandwich sandw16 child14 tray2 table2 
83 move_tray tray2 table2 kitchen 
84 __method_precondition_m1_serve_1_precondition table2 sandw18 bread15 content11 child15 
85 make_sandwich sandw18 bread15 content11 
86 put_on_tray sandw18 tray1 
87 move_tray tray1 kitchen table2 
88 serve_sandwich sandw18 child15 tray1 table2 
89 move_tray tray1 table2 kitchen 
root 104
90 serve child10  -> m0_serve 54 55 56 57 58 59
91 serve child7  -> m0_serve 36 37 38 39 40 41
92 serve child1  -> m0_serve 0 1 2 3 4 5
93 serve child14  -> m1_serve 78 79 80 81 82 83
94 serve child13  -> m1_serve 72 73 74 75 76 77
95 serve child11  -> m1_serve 60 61 62 63 64 65
96 serve child6  -> m1_serve 30 31 32 33 34 35
97 serve child2  -> m1_serve 6 7 8 9 10 11
98 serve child9  -> m0_serve 48 49 50 51 52 53
99 serve child15  -> m1_serve 84 85 86 87 88 89
100 serve child4  -> m1_serve 18 19 20 21 22 23
101 serve child8  -> m0_serve 42 43 44 45 46 47
102 serve child12  -> m1_serve 66 67 68 69 70 71
103 serve child5  -> m0_serve 24 25 26 27 28 29
104 __artificialTopCompilation__top_1  -> __top_1 92 97 105 100 103 96 91 101 98 90 95 102 94 93 99
105 serve child3  -> m1_serve 12 13 14 15 16 17

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 64.180 MEMPEAK_KBS 2746769.408
