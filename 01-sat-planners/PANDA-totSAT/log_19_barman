PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/barman/domain.hddl instances/barman/p19.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p19.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p19.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounded planning graph ... done in 590ms.
	Number of Grounded Actions 2819
	Number of Grounded Literals 418
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 418
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 434ms.
	Number of Grounded Actions 2797
	Number of Grounded Literals 388
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4829
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4829
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4829
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 220ms.
	Number of Grounded Actions 2797
	Number of Grounded Literals 388
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4829
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4589
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4589
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4589
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4589
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4589
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Tasks 2797 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767848ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767379
done
initial PDT has 264 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 264 leafs
SHOP LEAFS 88
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 225234
Size 225234 at 0/2797
Size 225159 at 500/2797
Size 191372 at 1000/2797
Size 45662 at 1500/2797
Size 29557 at 2000/2797
Size 29557 at 2500/2797
Size 29557
Size 29557 at 0/2797
Size 29557 at 500/2797
Size 21208 at 1000/2797
Size 12590 at 1500/2797
Size 4184 at 2000/2797
Size 4184 at 2500/2797
Size 4146
Size 4146 at 0/2797
Size 4146 at 500/2797
Size 4134 at 1000/2797
Size 4091 at 1500/2797
Size 4002 at 2000/2797
Size 4002 at 2500/2797
Size 3997
Size 3997 at 0/2797
Size 3997 at 500/2797
Size 3949 at 1000/2797
Size 3829 at 1500/2797
Size 3754 at 2000/2797
Size 3754 at 2500/2797
Size 3754
Size 3754 at 0/2797
Size 3754 at 500/2797
Size 3754 at 1000/2797
Size 3754 at 1500/2797
Size 3754 at 2000/2797
Size 3754 at 2500/2797
Size 3754
Invariant time: 2.443
Number of invariants: 3754
Invariant Clauses 994810
NUMBER OF CLAUSES 1572736
NUMBER OF STATE CLAUSES 1282238
NUMBER OF DECOMPOSITION CLAUSES 290498
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 81.53% 18.47% 0.0% 
NUMBER OF PATHS 264
Starting cryptominisat
Setting starttime of solver to 1603870831419
Command exited with non-zero status 10
0.94 0.04

Time command gave the following runtime for the solver: 980
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_13;1,2996 2996 m9_do_fill_shot
13;1 91 pathaction!2_13;1,2469
Consider method^3_9;1;3,3911 3911 _m2_get_first_ingredient_4
9;1;3 34 pathaction!3_9;1;3,2651
Consider method^1_1,903 903 m0_do_cocktail_in_shot1
1 321 pathaction!1_1,81
Consider method^3_2;1;1,323 323 m9_do_fill_shot
2;1;1 69 pathaction!3_2;1;1,2551
Consider method^3_0;1;3,4249 4249 _m2_get_first_ingredient_4
0;1;3 213 pathaction!3_0;1;3,2711
Consider method^2_8;3,143 143 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 337 pathaction!2_8;3,3312
Consider method^3_10;1;3,3782 3782 _m2_get_first_ingredient_4
10;1;3 68 pathaction!3_10;1;3,2657
Consider method^3_12;3;1,841 841 <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,right];m5_do_clean_shot;0;-1,-2>
12;3;1 272 pathaction!3_12;3;1,2277
Consider method^3_2;1;3,3550 3550 _m2_get_first_ingredient_4
2;1;3 378 pathaction!3_2;1;3,2701
Consider method^3_0;1;1,1745 1745 m8_do_fill_shot
0;1;1 4 pathaction!3_0;1;1,2561
Consider method^3_1;1;1,264 264 m8_do_fill_shot
1;1;1 322 pathaction!3_1;1;1,2478
Consider method^1_13,4212 4212 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
13 358 pathaction!1_13,1572
Consider method^3_8;3;1,3872 3872 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 335 pathaction!3_8;3;1,2285
Consider method^1_4,2904 2904 m0_do_cocktail_in_shot1
4 284 pathaction!1_4,80
Consider method^3_4;1;2,175 175 _m2_get_first_ingredient_3
4;1;2 373 pathaction!3_4;1;2,1170
Consider method^3_4;1;3,1021 1021 _m2_get_first_ingredient_4
4;1;3 32 pathaction!3_4;1;3,2731
Consider method^2_1;3,2588 2588 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 114 pathaction!2_1;3,3314
Consider method^1_6,421 421 m0_do_cocktail_in_shot1
6 145 pathaction!1_6,75
Consider method^1_2,3070 3070 m0_do_cocktail_in_shot1
2 66 pathaction!1_2,86
Consider method^2_2;1,2069 2069 m2_get_first_ingredient
2;1 16 pathaction!2_2;1,3297
Consider method^3_12;2;1,3969 3969 _m3_get_second_ingredient_2
12;2;1 345 pathaction!3_12;2;1,577
Consider method^3_4;3;1,189 189 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 164 pathaction!3_4;3;1,2278
Consider method^3_3;1;1,2645 2645 m9_do_fill_shot
3;1;1 285 pathaction!3_3;1;1,2516
Consider method^2_7;3,974 974 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 78 pathaction!2_7;3,3311
Consider method^3_8;2;2,2682 2682 _m3_get_second_ingredient_3
8;2;2 262 pathaction!3_8;2;2,2402
Consider method^3_12;2;2,2682 2682 _m3_get_second_ingredient_3
12;2;2 334 pathaction!3_12;2;2,2402
Consider method^3_3;2;1,1760 1760 _m3_get_second_ingredient_2
3;2;1 211 pathaction!3_3;2;1,653
Consider method^3_7;1;1,445 445 m9_do_fill_shot
7;1;1 309 pathaction!3_7;1;1,2501
Consider method^0_,4588 4588 __top_1
 47 pathaction!0_,3761
Consider method^1_3,2515 2515 m0_do_cocktail_in_shot1
3 363 pathaction!1_3,84
Consider method^3_4;1;1,4167 4167 m9_do_fill_shot
4;1;1 354 pathaction!3_4;1;1,2581
Consider method^3_10;1;2,2193 2193 _m2_get_first_ingredient_3
10;1;2 80 pathaction!3_10;1;2,1075
Consider method^3_1;3;1,4161 4161 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 346 pathaction!3_1;3;1,2299
Consider method^2_7;1,329 329 m2_get_first_ingredient
7;1 330 pathaction!2_7;1,3295
Consider method^3_6;1;3,925 925 _m2_get_first_ingredient_4
6;1;3 230 pathaction!3_6;1;3,2621
Consider method^3_0;3;1,2274 2274 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2>
0;3;1 297 pathaction!3_0;3;1,2279
Consider method^3_10;2;1,2435 2435 _m3_get_second_ingredient_2
10;2;1 76 pathaction!3_10;2;1,683
Consider method^2_6;1,3896 3896 m2_get_first_ingredient
6;1 316 pathaction!2_6;1,3296
Consider method^2_5;2,3748 3748 m3_get_second_ingredient
5;2 302 pathaction!2_5;2,3702
Consider method^3_4;2;2,2262 2262 _m3_get_second_ingredient_3
4;2;2 89 pathaction!3_4;2;2,2341
Consider method^2_4;3,4124 4124 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 72 pathaction!2_4;3,3313
Consider method^3_0;1;2,2704 2704 _m2_get_first_ingredient_3
0;1;2 310 pathaction!3_0;1;2,1182
Consider method^1_12,603 603 m0_do_cocktail_in_shot1
12 343 pathaction!1_12,77
Consider method^2_0;1,1518 1518 m2_get_first_ingredient
0;1 127 pathaction!2_0;1,3288
Consider method^2_3;3,4533 4533 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 331 pathaction!2_3;3,3317
Consider method^3_8;1;1,2108 2108 m9_do_fill_shot
8;1;1 10 pathaction!3_8;1;1,2503
Consider method^3_12;1;2,3224 3224 _m2_get_first_ingredient_3
12;1;2 317 pathaction!3_12;1;2,1153
Consider method^3_2;2;2,2737 2737 _m3_get_second_ingredient_3
2;2;2 381 pathaction!3_2;2;2,2336
Consider method^2_10;1,3642 3642 m2_get_first_ingredient
10;1 182 pathaction!2_10;1,3291
Consider method^2_6;2,1500 1500 m3_get_second_ingredient
6;2 192 pathaction!2_6;2,3705
Consider method^2_9;1,3868 3868 m2_get_first_ingredient
9;1 371 pathaction!2_9;1,3287
Consider method^1_9,780 780 m0_do_cocktail_in_shot1
9 110 pathaction!1_9,82
Consider method^3_12;1;1,4085 4085 m7_do_fill_shot
12;1;1 130 pathaction!3_12;1;1,2503
Consider method^3_8;1;3,4389 4389 _m2_get_first_ingredient_4
8;1;3 140 pathaction!3_8;1;3,2653
Consider method^2_9;3,4019 4019 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 18 pathaction!2_9;3,3315
Consider method^1_0,1988 1988 m0_do_cocktail_in_shot1
0 95 pathaction!1_0,85
Consider method^2_4;2,2708 2708 m3_get_second_ingredient
4;2 265 pathaction!2_4;2,3701
Consider method^3_10;1;1,3915 3915 m7_do_fill_shot
10;1;1 359 pathaction!3_10;1;1,2507
Consider method^3_5;2;2,439 439 _m3_get_second_ingredient_3
5;2;2 59 pathaction!3_5;2;2,2392
Consider method^3_9;2;1,3820 3820 _m3_get_second_ingredient_2
9;2;1 372 pathaction!3_9;2;1,621
Consider method^2_12;1,2903 2903 m2_get_first_ingredient
12;1 67 pathaction!2_12;1,3307
Consider method^2_1;1,2021 2021 m2_get_first_ingredient
1;1 212 pathaction!2_1;1,3301
Consider method^2_11;1,666 666 m9_do_fill_shot
11;1 277 pathaction!2_11;1,2486
Consider method^2_3;2,658 658 m3_get_second_ingredient
3;2 288 pathaction!2_3;2,3712
Consider method^3_5;1;2,1465 1465 _m2_get_first_ingredient_3
5;1;2 356 pathaction!3_5;1;2,1061
Consider method^2_1;2,2992 2992 m3_get_second_ingredient
1;2 195 pathaction!2_1;2,3710
Consider method^1_5,3866 3866 m0_do_cocktail_in_shot1
5 352 pathaction!1_5,83
Consider method^2_5;1,1340 1340 m2_get_first_ingredient
5;1 326 pathaction!2_5;1,3293
Consider method^3_1;2;2,4241 4241 _m3_get_second_ingredient_3
1;2;2 231 pathaction!3_1;2;2,2362
Consider method^2_10;3,442 442 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot11,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 203 pathaction!2_10;3,3309
Consider method^2_10;2,345 345 m3_get_second_ingredient
10;2 5 pathaction!2_10;2,3700
Consider method^3_6;1;1,3791 3791 m8_do_fill_shot
6;1;1 198 pathaction!3_6;1;1,2471
Consider method^3_6;3;1,2491 2491 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 7 pathaction!3_6;3;1,2288
Consider method^3_6;2;2,2413 2413 _m3_get_second_ingredient_3
6;2;2 341 pathaction!3_6;2;2,2323
Consider method^3_7;2;1,1163 1163 _m3_get_second_ingredient_2
7;2;1 236 pathaction!3_7;2;1,687
Consider method^3_5;1;1,3053 3053 m9_do_fill_shot
5;1;1 11 pathaction!3_5;1;1,2495
Consider method^2_12;2,1891 1891 m3_get_second_ingredient
12;2 146 pathaction!2_12;2,3716
Consider method^2_8;1,2903 2903 m2_get_first_ingredient
8;1 257 pathaction!2_8;1,3307
Consider method^3_2;2;1,2909 2909 _m3_get_second_ingredient_2
2;2;1 263 pathaction!3_2;2;1,586
Consider method^2_2;3,191 191 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 191 pathaction!2_2;3,3319
Consider method^1_11,612 612 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
11 266 pathaction!1_11,1571
Consider method^2_6;3,4559 4559 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 166 pathaction!2_6;3,3308
Consider method^3_12;1;3,4389 4389 _m2_get_first_ingredient_4
12;1;3 46 pathaction!3_12;1;3,2653
Consider method^3_7;2;2,1678 1678 _m3_get_second_ingredient_3
7;2;2 370 pathaction!3_7;2;2,2338
Consider method^3_2;1;2,2563 2563 _m2_get_first_ingredient_3
2;1;2 258 pathaction!3_2;1;2,1180
Consider method^3_3;2;2,740 740 _m3_get_second_ingredient_3
3;2;2 178 pathaction!3_3;2;2,2446
Consider method^3_6;1;2,1576 1576 _m2_get_first_ingredient_3
6;1;2 64 pathaction!3_6;1;2,1091
Consider method^3_10;2;2,2447 2447 _m3_get_second_ingredient_3
10;2;2 278 pathaction!3_10;2;2,2436
Consider method^1_8,3020 3020 m0_do_cocktail_in_shot1
8 279 pathaction!1_8,79
Consider method^3_3;1;3,2473 2473 _m2_get_first_ingredient_4
3;1;3 0 pathaction!3_3;1;3,2666
Consider method^3_6;2;1,3820 3820 _m3_get_second_ingredient_2
6;2;1 303 pathaction!3_6;2;1,621
Consider method^2_12;3,1418 1418 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot13,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
12;3 355 pathaction!2_12;3,3310
Consider method^3_5;2;1,2690 2690 _m3_get_second_ingredient_2
5;2;1 201 pathaction!3_5;2;1,585
Consider method^3_1;1;2,4030 4030 _m2_get_first_ingredient_3
1;1;2 58 pathaction!3_1;1;2,1117
Consider method^3_3;1;2,1940 1940 _m2_get_first_ingredient_3
3;1;2 202 pathaction!3_3;1;2,1060
Consider method^3_1;1;3,4530 4530 _m2_get_first_ingredient_4
1;1;3 115 pathaction!3_1;1;3,2628
Consider method^2_0;2,2530 2530 m3_get_second_ingredient
0;2 376 pathaction!2_0;2,3697
Consider method^3_5;1;3,4404 4404 _m2_get_first_ingredient_4
5;1;3 142 pathaction!3_5;1;3,2645
Consider method^3_8;2;1,3969 3969 _m3_get_second_ingredient_2
8;2;1 216 pathaction!3_8;2;1,577
Consider method^3_7;1;2,2617 2617 _m2_get_first_ingredient_3
7;1;2 273 pathaction!3_7;1;2,1171
Consider method^3_7;3;1,1017 1017 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 162 pathaction!3_7;3;1,2282
Consider method^3_8;1;2,3224 3224 _m2_get_first_ingredient_3
8;1;2 128 pathaction!3_8;1;2,1153
Consider method^3_0;2;2,2210 2210 _m3_get_second_ingredient_3
0;2;2 103 pathaction!3_0;2;2,2326
Consider method^3_1;2;1,511 511 _m3_get_second_ingredient_2
1;2;1 217 pathaction!3_1;2;1,685
Consider method^1_7,385 385 m0_do_cocktail_in_shot1
7 176 pathaction!1_7,78
Consider method^2_3;1,302 302 m2_get_first_ingredient
3;1 186 pathaction!2_3;1,3303
Consider method^2_2;2,554 554 m3_get_second_ingredient
2;2 98 pathaction!2_2;2,3706
Consider method^2_8;2,1891 1891 m3_get_second_ingredient
8;2 308 pathaction!2_8;2,3716
Consider method^3_9;1;2,2617 2617 _m2_get_first_ingredient_3
9;1;2 173 pathaction!3_9;1;2,1171
Consider method^3_10;3;1,827 827 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail2,right];m5_do_clean_shot;0;-1,-2>
10;3;1 207 pathaction!3_10;3;1,2294
Consider method^2_0;3,1568 1568 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 187 pathaction!2_0;3,3318
Consider method^3_2;3;1,772 772 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2>
2;3;1 65 pathaction!3_2;3;1,2292
Consider method^2_7;2,4032 4032 m3_get_second_ingredient
7;2 13 pathaction!2_7;2,3704
Consider method^2_4;1,4340 4340 m2_get_first_ingredient
4;1 235 pathaction!2_4;1,3292
Consider method^1_10,738 738 m0_do_cocktail_in_shot1
10 121 pathaction!1_10,76
Consider method^3_7;1;3,3911 3911 _m2_get_first_ingredient_4
7;1;3 82 pathaction!3_7;1;3,2651
Consider method^3_4;2;1,2000 2000 _m3_get_second_ingredient_2
4;2;1 107 pathaction!3_4;2;1,609
Consider method^3_5;3;1,2559 2559 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail3,left];m5_do_clean_shot;0;-1,-2>
5;3;1 135 pathaction!3_5;3;1,2286
Consider method^2_5;3,233 233 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot6,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 244 pathaction!2_5;3,3316
Consider method^3_0;2;1,4563 4563 _m3_get_second_ingredient_2
0;2;1 174 pathaction!3_0;2;1,618
Consider method^3_9;2;2,2413 2413 _m3_get_second_ingredient_3
9;2;2 232 pathaction!3_9;2;2,2323
Consider method^2_9;2,1784 1784 m3_get_second_ingredient
9;2 116 pathaction!2_9;2,3696
Consider method^3_9;1;1,1003 1003 m9_do_fill_shot
9;1;1 77 pathaction!3_9;1;1,2501
Consider method^3_9;3;1,1089 1089 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2>
9;3;1 253 pathaction!3_9;3;1,2280
Consider method^3_3;3;1,1230 1230 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2>
3;3;1 108 pathaction!3_3;3;1,2296


CHECKING primitive solution of length 259 ...
true 100 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 17 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot12;]
true 246 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser3,ingredient3;]
true 300 grasp[right,shot12;]
true 96 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 73 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1;]
true 109 clean-shot[shot12,ingredient3,right,left;]
true 48 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot12;]
true 22 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 281 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2;]
true 294 leave[right,shot12;]
true 199 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient2;]
true 215 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 169 nop[;]
true 329 grasp[right,shaker1;]
true 242 shake[cocktail5,ingredient3,ingredient2,shaker1,right,left;]
true 295 pour-shaker-to-shot[cocktail5,shot1,right,shaker1,l2,l1;]
true 301 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 286 clean-shaker[right,left,shaker1;]
true 307 leave[right,shaker1;]
true 383 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 260 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot14;]
true 255 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser3,ingredient3;]
true 139 grasp[right,shot14;]
true 347 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 210 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1;]
true 283 clean-shot[shot14,ingredient3,right,left;]
true 163 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,right,shot14;]
true 240 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 360 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2;]
true 226 leave[right,shot14;]
true 188 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient4;]
true 159 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 157 nop[;]
true 298 grasp[right,shaker1;]
true 205 shake[cocktail3,ingredient3,ingredient4,shaker1,right,left;]
true 12 pour-shaker-to-shot[cocktail3,shot2,right,shaker1,l2,l1;]
true 196 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 137 clean-shaker[right,left,shaker1;]
true 332 leave[right,shaker1;]
true 200 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 28 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient5,shot12;]
true 49 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient2,dispenser5;]
true 269 grasp[right,shot12;]
true 53 clean-shot[shot12,ingredient2,right,left;]
true 233 fill-shot[shot12,ingredient5,right,left,dispenser5;]
true 313 pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,right,l0,l1;]
true 92 clean-shot[shot12,ingredient5,right,left;]
true 252 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,right,shot12;]
true 225 fill-shot[shot12,ingredient4,right,left,dispenser4;]
true 93 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,right,l1,l2;]
true 167 leave[right,shot12;]
true 241 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient5,ingredient4;]
true 293 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 125 nop[;]
true 3 grasp[left,shaker1;]
true 132 shake[cocktail8,ingredient5,ingredient4,shaker1,left,right;]
true 40 pour-shaker-to-shot[cocktail8,shot3,left,shaker1,l2,l1;]
true 338 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 1 clean-shaker[left,right,shaker1;]
true 102 leave[left,shaker1;]
true 368 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 71 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot12;]
true 161 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient2,ingredient4,dispenser2;]
true 117 grasp[right,shot12;]
true 306 clean-shot[shot12,ingredient4,right,left;]
true 220 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 112 pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,right,l0,l1;]
true 304 clean-shot[shot12,ingredient2,right,left;]
true 9 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,right,shot12;]
true 305 fill-shot[shot12,ingredient5,right,left,dispenser5;]
true 29 pour-shot-to-used-shaker[shot12,ingredient5,shaker1,right,l1,l2;]
true 261 leave[right,shot12;]
true 81 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient5;]
true 380 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 251 nop[;]
true 134 grasp[left,shaker1;]
true 270 shake[cocktail6,ingredient2,ingredient5,shaker1,left,right;]
true 14 pour-shaker-to-shot[cocktail6,shot4,left,shaker1,l2,l1;]
true 193 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 179 clean-shaker[left,right,shaker1;]
true 375 leave[left,shaker1;]
true 123 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 314 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot12;]
true 148 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient5,dispenser1;]
true 323 grasp[left,shot12;]
true 36 clean-shot[shot12,ingredient5,left,right;]
true 351 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 175 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1;]
true 38 clean-shot[shot12,ingredient1,left,right;]
true 55 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot12;]
true 357 fill-shot[shot12,ingredient2,left,right,dispenser2;]
true 101 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,left,l1,l2;]
true 190 leave[left,shot12;]
true 247 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2;]
true 282 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 264 nop[;]
true 229 grasp[left,shaker1;]
true 84 shake[cocktail4,ingredient1,ingredient2,shaker1,left,right;]
true 194 pour-shaker-to-shot[cocktail4,shot5,left,shaker1,l2,l1;]
true 254 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 362 clean-shaker[left,right,shaker1;]
true 56 leave[left,shaker1;]
true 267 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 19 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot14;]
true 21 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient4,dispenser5;]
true 222 grasp[left,shot14;]
true 155 clean-shot[shot14,ingredient4,left,right;]
true 340 fill-shot[shot14,ingredient5,left,right,dispenser5;]
true 150 pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,left,l0,l1;]
true 62 clean-shot[shot14,ingredient5,left,right;]
true 15 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot14;]
true 318 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 290 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2;]
true 249 leave[left,shot14;]
true 275 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient3;]
true 243 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 138 nop[;]
true 60 grasp[right,shaker1;]
true 289 shake[cocktail10,ingredient5,ingredient3,shaker1,right,left;]
true 54 pour-shaker-to-shot[cocktail10,shot6,right,shaker1,l2,l1;]
true 364 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 328 clean-shaker[right,left,shaker1;]
true 24 leave[right,shaker1;]
true 320 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 88 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot15;]
true 336 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4;]
true 144 grasp[right,shot15;]
true 26 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 315 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 291 clean-shot[shot15,ingredient4,right,left;]
true 97 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot15;]
true 133 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 33 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 224 leave[right,shot15;]
true 259 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 86 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 377 nop[;]
true 57 grasp[left,shaker1;]
true 119 shake[cocktail2,ingredient4,ingredient3,shaker1,left,right;]
true 168 pour-shaker-to-shot[cocktail2,shot7,left,shaker1,l2,l1;]
true 228 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 141 clean-shaker[left,right,shaker1;]
true 105 leave[left,shaker1;]
true 151 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 111 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot15;]
true 274 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient3,dispenser2;]
true 147 grasp[right,shot15;]
true 327 clean-shot[shot15,ingredient3,right,left;]
true 248 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 367 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 6 clean-shot[shot15,ingredient2,right,left;]
true 189 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient5,right,shot15;]
true 104 fill-shot[shot15,ingredient5,right,left,dispenser5;]
true 27 pour-shot-to-used-shaker[shot15,ingredient5,shaker1,right,l1,l2;]
true 20 leave[right,shot15;]
true 292 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient5;]
true 79 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 83 nop[;]
true 152 grasp[right,shaker1;]
true 52 shake[cocktail9,ingredient2,ingredient5,shaker1,right,left;]
true 366 pour-shaker-to-shot[cocktail9,shot8,right,shaker1,l2,l1;]
true 35 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 348 clean-shaker[right,left,shaker1;]
true 129 leave[right,shaker1;]
true 344 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 87 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot15;]
true 197 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient5,dispenser3;]
true 37 grasp[left,shot15;]
true 349 clean-shot[shot15,ingredient5,left,right;]
true 299 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 39 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 311 clean-shot[shot15,ingredient3,left,right;]
true 44 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,left,shot15;]
true 296 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 74 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 280 leave[left,shot15;]
true 312 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4;]
true 75 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 324 nop[;]
true 2 grasp[right,shaker1;]
true 25 shake[cocktail11,ingredient3,ingredient4,shaker1,right,left;]
true 42 pour-shaker-to-shot[cocktail11,shot9,right,shaker1,l2,l1;]
true 339 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 223 clean-shaker[right,left,shaker1;]
true 256 leave[right,shaker1;]
true 319 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 214 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot15;]
true 51 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient4,dispenser2;]
true 204 grasp[right,shot15;]
true 234 clean-shot[shot15,ingredient4,right,left;]
true 30 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 154 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 41 clean-shot[shot15,ingredient2,right,left;]
true 374 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient3,right,shot15;]
true 85 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 94 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 113 leave[right,shot15;]
true 238 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient3;]
true 90 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 183 nop[;]
true 250 grasp[right,shaker1;]
true 177 shake[cocktail1,ingredient2,ingredient3,shaker1,right,left;]
true 353 pour-shaker-to-shot[cocktail1,shot10,right,shaker1,l2,l1;]
true 333 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 172 clean-shaker[right,left,shaker1;]
true 170 leave[right,shaker1;]
true 160 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 209 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot12;]
true 219 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient2,dispenser2;]
true 50 grasp[left,shot12;]
true 156 refill-shot[shot12,ingredient2,left,right,dispenser2;]
true 165 pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,left,l0,l1;]
true 239 clean-shot[shot12,ingredient2,left,right;]
true 218 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,left,shot12;]
true 136 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 379 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2;]
true 245 leave[left,shot12;]
true 361 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient1;]
true 143 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 184 nop[;]
true 149 grasp[left,shaker1;]
true 106 shake[cocktail7,ingredient2,ingredient1,shaker1,left,right;]
true 206 pour-shaker-to-shot[cocktail7,shot11,left,shaker1,l2,l1;]
true 382 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 287 clean-shaker[left,right,shaker1;]
true 122 leave[left,shaker1;]
true 23 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 268 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient1,dispenser4;]
true 369 grasp[left,shot12;]
true 131 clean-shot[shot12,ingredient1,left,right;]
true 365 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 153 leave[left,shot12;]
true 158 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left;]
true 31 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot15;]
true 99 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient3,dispenser3;]
true 227 grasp[left,shot15;]
true 181 refill-shot[shot15,ingredient3,left,right,dispenser3;]
true 43 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 126 clean-shot[shot15,ingredient3,left,right;]
true 208 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,left,shot15;]
true 342 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 70 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 271 leave[left,shot15;]
true 120 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4;]
true 171 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 185 nop[;]
true 237 grasp[left,shaker1;]
true 276 shake[cocktail11,ingredient3,ingredient4,shaker1,left,right;]
true 8 pour-shaker-to-shot[cocktail11,shot13,left,shaker1,l2,l1;]
true 325 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 180 clean-shaker[left,right,shaker1;]
true 61 leave[left,shaker1;]
true 221 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 63 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient4,ingredient3,dispenser4;]
true 350 grasp[left,shot14;]
true 124 clean-shot[shot14,ingredient3,left,right;]
true 45 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 118 leave[left,shot14;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 551194976
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 388
number of actions                    = 3762
number of abstract actions           = 965
number of primitive actions          = 2797
number of methods                    = 4589
number of primitive shop actions     = 1092
number of primitive non-shop actions = 1705
size of largest method               = 14
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 232012
number of clauses               = 1572736
average size of clauses         = 2.362416196996826
number of assert                = 171
number of horn                  = 1384430
K offset                        = 0
K chosen value                  = 4
state formula                   = 1282238
method children clauses         = 0
number of paths                 = 264
maximum plan length             = 264
number of decomposition clauses = 290498
number of ordering clauses      = 0
number of state clauses         = 1282238
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 18893
============ parsing ============
total                         = 1147
file parser                   = 616
sort expansion                = 254
closed world assumption       = 128
inherit preconditions         = 0
shop methods                  = 12
eliminate identical variables = 61
strip domain of hybridity     = 2
flatten formula               = 74
============ preprocessing ============
total                                      = 6232
compile negative preconditions             = 48
compile unit methods                       = 0
split parameter                            = 55
expand choiceless abstract tasks           = 561
compile methods with identical tasks       = 33
removing unnecessary predicates            = 919
lifted reachabiltiy analysis               = 86
grounded planning graph analysis           = 1742
grounded task decomposition graph analysis = 2018
grounding                                  = 719
create artificial top task                 = 14
============ search preparation ============
compute state invariants = 2743
============ sat ============
total                                        = 8484
generate formula                             = 6360
generate path decomposition tree             = 429
normalise path decomposition tree            = 69
sog optimisation                             = 99
translate path decomposition tree to clauses = 839
generate state formula                       = 6055
generate state invariant formula             = 608
transform to DIMACS                          = 895
SAT solver                                   = 980
SAT solver for K=0004                        = 980

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2797";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="965";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="551194976";"40 sat:20:state formula"="1282238";"40 sat:01:number of variables"="232012";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="264";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="4589";"30 problem:07:number of primitive shop actions"="1092";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3762";"30 problem:08:number of primitive non-shop actions"="1705";"30 problem:02:number of predicates"="388";"40 sat:03:number of horn"="1384430";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="14";"40 sat:03:average size of clauses"="2.362416196996826";"40 sat:02:number of clauses"="1572736";"40 sat:50:number of state clauses"="1282238";"40 sat:03:number of assert"="171";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="264";"40 sat:50:number of decomposition clauses"="290498";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="616";"01 parsing:08:flatten formula"="74";"40 sat:41:SAT solver for K=0004"="980";"40 sat:00:total"="8484";"40 sat:16:generate state formula"="6055";"40 sat:20:transform to DIMACS"="895";"40 sat:11:generate path decomposition tree"="429";"02 preprocessing:07:compile methods with identical tasks"="33";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="919";"01 parsing:03:closed world assumption"="128";"02 preprocessing:11:lifted reachabiltiy analysis"="86";"01 parsing:02:sort expansion"="254";"40 sat:12:normalise path decomposition tree"="69";"40 sat:40:SAT solver"="980";"01 parsing:00:total"="1147";"40 sat:10:generate formula"="6360";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="48";"00 total:00:total"="18893";"40 sat:13:sog optimisation"="99";"02 preprocessing:12:grounded planning graph analysis"="1742";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="2018";"02 preprocessing:04:split parameter"="55";"01 parsing:05:shop methods"="12";"10 search preparation:02:compute state invariants"="2743";"01 parsing:06:eliminate identical variables"="61";"40 sat:15:translate path decomposition tree to clauses"="839";"02 preprocessing:05:expand choiceless abstract tasks"="561";"40 sat:17:generate state invariant formula"="608";"02 preprocessing:00:total"="6232";"02 preprocessing:99:create artificial top task"="14";"02 preprocessing:84:grounding"="719"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot12];__method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser3,ingredient3];grasp[right,shot12];fill-shot[shot12,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1];clean-shot[shot12,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot12];fill-shot[shot12,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[right,shaker1];shake[cocktail5,ingredient3,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot1,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot14];__method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser3,ingredient3];grasp[right,shot14];fill-shot[shot14,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1];clean-shot[shot14,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,right,shot14];fill-shot[shot14,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail3,ingredient3,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail3,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail3,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient5,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient2,dispenser5];grasp[right,shot12];clean-shot[shot12,ingredient2,right,left];fill-shot[shot12,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,right,l0,l1];clean-shot[shot12,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,right,shot12];fill-shot[shot12,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot12,ingredient4,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient5,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[left,shaker1];shake[cocktail8,ingredient5,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail8,shot3,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail8,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient2,ingredient4,dispenser2];grasp[right,shot12];clean-shot[shot12,ingredient4,right,left];fill-shot[shot12,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,right,l0,l1];clean-shot[shot12,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,right,shot12];fill-shot[shot12,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot12,ingredient5,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail6,ingredient2,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient5,dispenser1];grasp[left,shot12];clean-shot[shot12,ingredient5,left,right];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1];clean-shot[shot12,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot12];fill-shot[shot12,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot12,ingredient2,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail4,ingredient1,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail4,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail4,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient4,dispenser5];grasp[left,shot14];clean-shot[shot14,ingredient4,left,right];fill-shot[shot14,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,left,l0,l1];clean-shot[shot14,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot14];fill-shot[shot14,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[right,shaker1];shake[cocktail10,ingredient5,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot6,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4];grasp[right,shot15];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1];clean-shot[shot15,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot15];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail2,ingredient4,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail2,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail2,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient3,dispenser2];grasp[right,shot15];clean-shot[shot15,ingredient3,right,left];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1];clean-shot[shot15,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient5,right,shot15];fill-shot[shot15,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot15,ingredient5,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail9,ingredient2,ingredient5,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient5,dispenser3];grasp[left,shot15];clean-shot[shot15,ingredient5,left,right];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1];clean-shot[shot15,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail11,ingredient3,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient4,dispenser2];grasp[right,shot15];clean-shot[shot15,ingredient4,right,left];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1];clean-shot[shot15,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient3,right,shot15];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[right,shaker1];shake[cocktail1,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail1,shot10,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail1,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot12];__method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient2,dispenser2];grasp[left,shot12];refill-shot[shot12,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,left,l0,l1];clean-shot[shot12,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,left,shot12];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[left,shaker1];shake[cocktail7,ingredient2,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot11,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient1,dispenser4];grasp[left,shot12];clean-shot[shot12,ingredient1,left,right];fill-shot[shot12,ingredient4,left,right,dispenser4];leave[left,shot12];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient3,dispenser3];grasp[left,shot15];refill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1];clean-shot[shot15,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot13];nop[];grasp[left,shaker1];shake[cocktail11,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail11,shot13,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail11,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient4,ingredient3,dispenser4];grasp[left,shot14];clean-shot[shot14,ingredient3,left,right];fill-shot[shot14,ingredient4,left,right,dispenser4];leave[left,shot14]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 right 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient3 shot12 
2 __method_precondition_m8_do_fill_shot_8_precondition shot12 dispenser3 ingredient3 
3 grasp right shot12 
4 fill-shot shot12 ingredient3 right left dispenser3 
5 pour-shot-to-clean-shaker shot12 ingredient3 shaker1 right l0 l1 
6 clean-shot shot12 ingredient3 right left 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient2 right shot12 
8 fill-shot shot12 ingredient2 right left dispenser2 
9 pour-shot-to-used-shaker shot12 ingredient2 shaker1 right l1 l2 
10 leave right shot12 
11 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient3 ingredient2 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp right shaker1 
15 shake cocktail5 ingredient3 ingredient2 shaker1 right left 
16 pour-shaker-to-shot cocktail5 shot1 right shaker1 l2 l1 
17 empty-shaker right shaker1 cocktail5 l1 l0 
18 clean-shaker right left shaker1 
19 leave right shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient3 shot14 
22 __method_precondition_m8_do_fill_shot_8_precondition shot14 dispenser3 ingredient3 
23 grasp right shot14 
24 fill-shot shot14 ingredient3 right left dispenser3 
25 pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 
26 clean-shot shot14 ingredient3 right left 
27 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient4 right shot14 
28 fill-shot shot14 ingredient4 right left dispenser4 
29 pour-shot-to-used-shaker shot14 ingredient4 shaker1 right l1 l2 
30 leave right shot14 
31 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient3 ingredient4 
32 __method_precondition_m5_do_clean_shot_5_precondition shot2 
33 nop  
34 grasp right shaker1 
35 shake cocktail3 ingredient3 ingredient4 shaker1 right left 
36 pour-shaker-to-shot cocktail3 shot2 right shaker1 l2 l1 
37 empty-shaker right shaker1 cocktail3 l1 l0 
38 clean-shaker right left shaker1 
39 leave right shaker1 
40 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 right 
41 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient5 shot12 
42 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient5 ingredient2 dispenser5 
43 grasp right shot12 
44 clean-shot shot12 ingredient2 right left 
45 fill-shot shot12 ingredient5 right left dispenser5 
46 pour-shot-to-clean-shaker shot12 ingredient5 shaker1 right l0 l1 
47 clean-shot shot12 ingredient5 right left 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient4 right shot12 
49 fill-shot shot12 ingredient4 right left dispenser4 
50 pour-shot-to-used-shaker shot12 ingredient4 shaker1 right l1 l2 
51 leave right shot12 
52 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient5 ingredient4 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp left shaker1 
56 shake cocktail8 ingredient5 ingredient4 shaker1 left right 
57 pour-shaker-to-shot cocktail8 shot3 left shaker1 l2 l1 
58 empty-shaker left shaker1 cocktail8 l1 l0 
59 clean-shaker left right shaker1 
60 leave left shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 right 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient2 shot12 
63 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient2 ingredient4 dispenser2 
64 grasp right shot12 
65 clean-shot shot12 ingredient4 right left 
66 fill-shot shot12 ingredient2 right left dispenser2 
67 pour-shot-to-clean-shaker shot12 ingredient2 shaker1 right l0 l1 
68 clean-shot shot12 ingredient2 right left 
69 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient5 right shot12 
70 fill-shot shot12 ingredient5 right left dispenser5 
71 pour-shot-to-used-shaker shot12 ingredient5 shaker1 right l1 l2 
72 leave right shot12 
73 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient2 ingredient5 
74 __method_precondition_m5_do_clean_shot_5_precondition shot4 
75 nop  
76 grasp left shaker1 
77 shake cocktail6 ingredient2 ingredient5 shaker1 left right 
78 pour-shaker-to-shot cocktail6 shot4 left shaker1 l2 l1 
79 empty-shaker left shaker1 cocktail6 l1 l0 
80 clean-shaker left right shaker1 
81 leave left shaker1 
82 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
83 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient1 shot12 
84 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient1 ingredient5 dispenser1 
85 grasp left shot12 
86 clean-shot shot12 ingredient5 left right 
87 fill-shot shot12 ingredient1 left right dispenser1 
88 pour-shot-to-clean-shaker shot12 ingredient1 shaker1 left l0 l1 
89 clean-shot shot12 ingredient1 left right 
90 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 left shot12 
91 fill-shot shot12 ingredient2 left right dispenser2 
92 pour-shot-to-used-shaker shot12 ingredient2 shaker1 left l1 l2 
93 leave left shot12 
94 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient1 ingredient2 
95 __method_precondition_m5_do_clean_shot_5_precondition shot5 
96 nop  
97 grasp left shaker1 
98 shake cocktail4 ingredient1 ingredient2 shaker1 left right 
99 pour-shaker-to-shot cocktail4 shot5 left shaker1 l2 l1 
100 empty-shaker left shaker1 cocktail4 l1 l0 
101 clean-shaker left right shaker1 
102 leave left shaker1 
103 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
104 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient5 shot14 
105 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient5 ingredient4 dispenser5 
106 grasp left shot14 
107 clean-shot shot14 ingredient4 left right 
108 fill-shot shot14 ingredient5 left right dispenser5 
109 pour-shot-to-clean-shaker shot14 ingredient5 shaker1 left l0 l1 
110 clean-shot shot14 ingredient5 left right 
111 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient3 left shot14 
112 fill-shot shot14 ingredient3 left right dispenser3 
113 pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 
114 leave left shot14 
115 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient5 ingredient3 
116 __method_precondition_m5_do_clean_shot_5_precondition shot6 
117 nop  
118 grasp right shaker1 
119 shake cocktail10 ingredient5 ingredient3 shaker1 right left 
120 pour-shaker-to-shot cocktail10 shot6 right shaker1 l2 l1 
121 empty-shaker right shaker1 cocktail10 l1 l0 
122 clean-shaker right left shaker1 
123 leave right shaker1 
124 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 right 
125 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot15 
126 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser4 ingredient4 
127 grasp right shot15 
128 fill-shot shot15 ingredient4 right left dispenser4 
129 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 
130 clean-shot shot15 ingredient4 right left 
131 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 right shot15 
132 fill-shot shot15 ingredient3 right left dispenser3 
133 pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 
134 leave right shot15 
135 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient3 
136 __method_precondition_m5_do_clean_shot_5_precondition shot7 
137 nop  
138 grasp left shaker1 
139 shake cocktail2 ingredient4 ingredient3 shaker1 left right 
140 pour-shaker-to-shot cocktail2 shot7 left shaker1 l2 l1 
141 empty-shaker left shaker1 cocktail2 l1 l0 
142 clean-shaker left right shaker1 
143 leave left shaker1 
144 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
145 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient2 shot15 
146 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient2 ingredient3 dispenser2 
147 grasp right shot15 
148 clean-shot shot15 ingredient3 right left 
149 fill-shot shot15 ingredient2 right left dispenser2 
150 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 
151 clean-shot shot15 ingredient2 right left 
152 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient5 right shot15 
153 fill-shot shot15 ingredient5 right left dispenser5 
154 pour-shot-to-used-shaker shot15 ingredient5 shaker1 right l1 l2 
155 leave right shot15 
156 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient2 ingredient5 
157 __method_precondition_m5_do_clean_shot_5_precondition shot8 
158 nop  
159 grasp right shaker1 
160 shake cocktail9 ingredient2 ingredient5 shaker1 right left 
161 pour-shaker-to-shot cocktail9 shot8 right shaker1 l2 l1 
162 empty-shaker right shaker1 cocktail9 l1 l0 
163 clean-shaker right left shaker1 
164 leave right shaker1 
165 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 left 
166 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient3 shot15 
167 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient3 ingredient5 dispenser3 
168 grasp left shot15 
169 clean-shot shot15 ingredient5 left right 
170 fill-shot shot15 ingredient3 left right dispenser3 
171 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 
172 clean-shot shot15 ingredient3 left right 
173 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient4 left shot15 
174 fill-shot shot15 ingredient4 left right dispenser4 
175 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
176 leave left shot15 
177 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient3 ingredient4 
178 __method_precondition_m5_do_clean_shot_5_precondition shot9 
179 nop  
180 grasp right shaker1 
181 shake cocktail11 ingredient3 ingredient4 shaker1 right left 
182 pour-shaker-to-shot cocktail11 shot9 right shaker1 l2 l1 
183 empty-shaker right shaker1 cocktail11 l1 l0 
184 clean-shaker right left shaker1 
185 leave right shaker1 
186 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 right 
187 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient2 shot15 
188 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient2 ingredient4 dispenser2 
189 grasp right shot15 
190 clean-shot shot15 ingredient4 right left 
191 fill-shot shot15 ingredient2 right left dispenser2 
192 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 
193 clean-shot shot15 ingredient2 right left 
194 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient3 right shot15 
195 fill-shot shot15 ingredient3 right left dispenser3 
196 pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 
197 leave right shot15 
198 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient2 ingredient3 
199 __method_precondition_m5_do_clean_shot_5_precondition shot10 
200 nop  
201 grasp right shaker1 
202 shake cocktail1 ingredient2 ingredient3 shaker1 right left 
203 pour-shaker-to-shot cocktail1 shot10 right shaker1 l2 l1 
204 empty-shaker right shaker1 cocktail1 l1 l0 
205 clean-shaker right left shaker1 
206 leave right shaker1 
207 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
208 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient2 shot12 
209 __method_precondition_m7_do_fill_shot_7_precondition shot12 ingredient2 dispenser2 
210 grasp left shot12 
211 refill-shot shot12 ingredient2 left right dispenser2 
212 pour-shot-to-clean-shaker shot12 ingredient2 shaker1 left l0 l1 
213 clean-shot shot12 ingredient2 left right 
214 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient1 left shot12 
215 fill-shot shot12 ingredient1 left right dispenser1 
216 pour-shot-to-used-shaker shot12 ingredient1 shaker1 left l1 l2 
217 leave left shot12 
218 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient2 ingredient1 
219 __method_precondition_m5_do_clean_shot_5_precondition shot11 
220 nop  
221 grasp left shaker1 
222 shake cocktail7 ingredient2 ingredient1 shaker1 left right 
223 pour-shaker-to-shot cocktail7 shot11 left shaker1 l2 l1 
224 empty-shaker left shaker1 cocktail7 l1 l0 
225 clean-shaker left right shaker1 
226 leave left shaker1 
227 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser4 ingredient4 
228 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient4 ingredient1 dispenser4 
229 grasp left shot12 
230 clean-shot shot12 ingredient1 left right 
231 fill-shot shot12 ingredient4 left right dispenser4 
232 leave left shot12 
233 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot13 left 
234 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient3 shot15 
235 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient3 dispenser3 
236 grasp left shot15 
237 refill-shot shot15 ingredient3 left right dispenser3 
238 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 
239 clean-shot shot15 ingredient3 left right 
240 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient4 left shot15 
241 fill-shot shot15 ingredient4 left right dispenser4 
242 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
243 leave left shot15 
244 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient3 ingredient4 
245 __method_precondition_m5_do_clean_shot_5_precondition shot13 
246 nop  
247 grasp left shaker1 
248 shake cocktail11 ingredient3 ingredient4 shaker1 left right 
249 pour-shaker-to-shot cocktail11 shot13 left shaker1 l2 l1 
250 empty-shaker left shaker1 cocktail11 l1 l0 
251 clean-shaker left right shaker1 
252 leave left shaker1 
253 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser4 ingredient4 
254 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient4 ingredient3 dispenser4 
255 grasp left shot14 
256 clean-shot shot14 ingredient3 left right 
257 fill-shot shot14 ingredient4 left right dispenser4 
258 leave left shot14 
root 365
259 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient4 right  -> _m3_get_second_ingredient_2 28
260 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 29
261 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient3 right  -> _m2_get_first_ingredient_4 26
262 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 95 96
263 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 175
264 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 238
265 do_clean_shot_m4_serve_shot_sip_2 shot13 right  -> <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,right];m5_do_clean_shot;0;-1,-2> 245 246
266 do_cocktail_in_shot1 shot5 cocktail4  -> m0_do_cocktail_in_shot1 82 377 310 274
267 do_fill_shot shot15 ingredient4 right  -> m8_do_fill_shot 126 127 128
268 do_clean_shot_m4_serve_shot_sip_2 shot10 left  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2> 199 200
269 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 111 273 292 114
270 do_cocktail_in_shot1 shot4 cocktail6  -> m0_do_cocktail_in_shot1 61 283 306 315
271 do_clean_shot_m4_serve_shot_sip_2 shot3 right  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2> 53 54
272 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 133
273 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient3 left  -> _m3_get_second_ingredient_2 112
274 serve_shot shot5 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 94 262 97 98 99 100 101 102
275 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 50
276 do_cocktail_in_shot1 shot2 cocktail3  -> m0_do_cocktail_in_shot1 20 288 353 295
277 serve_shot shot13 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot13,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 244 265 247 248 249 250 251 252
278 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient1 left  -> _m3_get_second_ingredient_2 215
279 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 71
280 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient4 right  -> _m3_get_second_ingredient_2 49
281 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 left  -> _m2_get_first_ingredient_4 172
282 do_cocktail_in_shot1 shot7 cocktail2  -> m0_do_cocktail_in_shot1 124 297 303 339
283 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 62 329 300 335
284 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 46
285 get_second_ingredient cocktail8 right  -> m3_get_second_ingredient 48 280 275 51
286 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 171
287 do_cocktail_in_shot1 shot10 cocktail1  -> m0_do_cocktail_in_shot1 186 383 357 319
288 get_first_ingredient cocktail3 right  -> m2_get_first_ingredient 21 308 350 261
289 do_fill_shot shot12 ingredient5 right  -> m9_do_fill_shot 42 43 44 45
290 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 196
291 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 174
292 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 113
293 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient2 left  -> _m2_get_first_ingredient_4 213
294 do_cocktail_in_shot1 shot9 cocktail11  -> m0_do_cocktail_in_shot1 165 337 322 334
295 serve_shot shot2 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 31 345 34 35 36 37 38 39
296 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient2 right  -> _m3_get_second_ingredient_2 8
297 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 125 267 346 298
298 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 right  -> _m2_get_first_ingredient_4 130
299 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 145 378 336 349
300 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 67
301 do_cocktail_in_shot1 shot6 cocktail10  -> m0_do_cocktail_in_shot1 103 347 269 351
302 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient5 left  -> _m2_get_first_ingredient_4 110
303 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 131 364 272 134
304 do_fill_shot shot12 ingredient3 right  -> m8_do_fill_shot 2 3 4
305 do_cocktail_in_shot2 shot12 ingredient4  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 227 363 232
306 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 69 313 279 72
307 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 242
308 do_fill_shot shot14 ingredient3 right  -> m8_do_fill_shot 22 23 24
309 do_cocktail_in_shot1 shot11 cocktail7  -> m0_do_cocktail_in_shot1 207 379 324 316
310 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 90 354 327 93
311 do_clean_shot_m4_serve_shot_sip_2 shot1 left  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2> 12 13
312 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 157 158
313 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient5 right  -> _m3_get_second_ingredient_2 70
314 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 1 304 355 330
315 serve_shot shot4 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 73 320 76 77 78 79 80 81
316 serve_shot shot11 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot11,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 218 342 221 222 223 224 225 226
317 serve_shot shot3 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 52 271 55 56 57 58 59 60
318 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 136 137
319 serve_shot shot10 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 198 268 201 202 203 204 205 206
320 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2> 74 75
321 do_cocktail_in_shot1 shot1 cocktail5  -> m0_do_cocktail_in_shot1 0 314 352 326
322 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 173 291 263 176
323 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 241
324 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 214 278 358 217
325 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient5 right  -> _m2_get_first_ingredient_4 47
326 serve_shot shot1 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 311 14 15 16 17 18 19
327 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 92
328 do_fill_shot shot12 ingredient1 left  -> m9_do_fill_shot 84 85 86 87
329 do_fill_shot shot12 ingredient2 right  -> m9_do_fill_shot 63 64 65 66
330 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient3 right  -> _m2_get_first_ingredient_4 6
331 serve_shot shot8 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 156 312 159 160 161 162 163 164
332 do_clean_shot_m4_serve_shot_sip_2 shot6 left  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail3,left];m5_do_clean_shot;0;-1,-2> 116 117
333 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient5 right  -> _m3_get_second_ingredient_2 153
334 serve_shot shot9 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 177 356 180 181 182 183 184 185
335 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient2 right  -> _m2_get_first_ingredient_4 68
336 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 150
337 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 166 382 286 281
338 do_fill_shot shot15 ingredient2 right  -> m9_do_fill_shot 188 189 190 191
339 serve_shot shot7 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 135 318 138 139 140 141 142 143
340 do_cocktail_in_shot2 shot14 ingredient4  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 253 380 258
341 do_fill_shot shot15 ingredient3 left  -> m7_do_fill_shot 235 236 237
342 do_clean_shot_m4_serve_shot_sip_2 shot11 right  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail2,right];m5_do_clean_shot;0;-1,-2> 219 220
343 do_fill_shot shot14 ingredient5 left  -> m9_do_fill_shot 105 106 107 108
344 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 88
345 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 32 33
346 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 129
347 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 104 343 348 302
348 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 109
349 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 right  -> _m2_get_first_ingredient_4 151
350 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 25
351 serve_shot shot6 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot6,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 115 332 118 119 120 121 122 123
352 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 7 296 374 10
353 get_second_ingredient cocktail3 right  -> m3_get_second_ingredient 27 259 260 30
354 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient2 left  -> _m3_get_second_ingredient_2 91
355 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 5
356 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 178 179
357 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 194 361 290 197
358 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 216
359 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 154
360 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 right  -> _m2_get_first_ingredient_4 193
361 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 right  -> _m3_get_second_ingredient_2 195
362 do_cocktail_in_shot1 shot8 cocktail9  -> m0_do_cocktail_in_shot1 144 299 368 331
363 do_fill_shot shot12 ingredient4 left  -> m9_do_fill_shot 228 229 230 231
364 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 right  -> _m3_get_second_ingredient_2 132
365 __choicelessATCompilation__top_1  -> __top_1 321 276 376 270 266 301 282 362 294 287 309 305 381 340
366 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 left  -> _m2_get_first_ingredient_4 239
367 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 192
368 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 152 333 359 155
369 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 240 323 307 243
370 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 212
371 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 234 341 264 366
372 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient1 left  -> _m2_get_first_ingredient_4 89
373 get_first_ingredient cocktail8 right  -> m2_get_first_ingredient 41 289 284 325
374 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 9
375 do_fill_shot shot12 ingredient2 left  -> m7_do_fill_shot 209 210 211
376 do_cocktail_in_shot1 shot3 cocktail8  -> m0_do_cocktail_in_shot1 40 373 285 317
377 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 83 328 344 372
378 do_fill_shot shot15 ingredient2 right  -> m9_do_fill_shot 146 147 148 149
379 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 208 375 370 293
380 do_fill_shot shot14 ingredient4 left  -> m9_do_fill_shot 254 255 256 257
381 do_cocktail_in_shot1 shot13 cocktail11  -> m0_do_cocktail_in_shot1 233 371 369 277
382 do_fill_shot shot15 ingredient3 left  -> m9_do_fill_shot 167 168 169 170
383 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 187 338 367 360

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 20.532 MEMPEAK_KBS 774020.096
