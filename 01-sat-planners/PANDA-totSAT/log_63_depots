PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/depots/domain.hddl instances/depots/p03.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p03.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p03.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 17
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 17
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 17
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 17
Grounded planning graph ... done in 323ms.
	Number of Grounded Actions 305
	Number of Grounded Literals 109
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 17
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 17
Grounding ... done.
	number of abstract tasks = 125
	number of tasks = 371
	number of decomposition methods = 298
	number of predicates = 115
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 125
	number of tasks = 371
	number of decomposition methods = 298
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 69ms.
	Number of Grounded Actions 246
	Number of Grounded Literals 99
	number of abstract tasks = 125
	number of tasks = 371
	number of decomposition methods = 298
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 125
	number of tasks = 371
	number of decomposition methods = 298
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 68
	number of tasks = 314
	number of decomposition methods = 241
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 68
	number of tasks = 314
	number of decomposition methods = 241
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 68
	number of tasks = 314
	number of decomposition methods = 241
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 29ms.
	Number of Grounded Actions 246
	Number of Grounded Literals 99
	number of abstract tasks = 68
	number of tasks = 314
	number of decomposition methods = 241
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 68
	number of tasks = 314
	number of decomposition methods = 241
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 45
	number of tasks = 291
	number of decomposition methods = 218
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 45
	number of tasks = 291
	number of decomposition methods = 218
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 45
	number of tasks = 291
	number of decomposition methods = 218
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 11ms.
	Number of Grounded Actions 246
	Number of Grounded Literals 99
	number of abstract tasks = 45
	number of tasks = 291
	number of decomposition methods = 218
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 45
	number of tasks = 291
	number of decomposition methods = 218
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 44
	number of tasks = 290
	number of decomposition methods = 217
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 44
	number of tasks = 290
	number of decomposition methods = 217
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 44
	number of tasks = 290
	number of decomposition methods = 217
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 10ms.
	Number of Grounded Actions 246
	Number of Grounded Literals 99
	number of abstract tasks = 44
	number of tasks = 290
	number of decomposition methods = 217
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 44
	number of tasks = 290
	number of decomposition methods = 217
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 44
	number of tasks = 290
	number of decomposition methods = 217
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 44
	number of tasks = 290
	number of decomposition methods = 217
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 44
	number of tasks = 290
	number of decomposition methods = 217
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 44
	number of tasks = 290
	number of decomposition methods = 217
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 150
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Tasks 246 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772541ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 42 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 12 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 130 will abort at 9223372036854772501
done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 14553
Size 14553 at 0/246
Size 8764
Size 8764 at 0/246
Size 4728
Size 4728 at 0/246
Size 3326
Size 3326 at 0/246
Size 2023
Size 2023 at 0/246
Size 1260
Size 1260 at 0/246
Size 961
Size 961 at 0/246
Size 923
Size 923 at 0/246
Size 903
Size 903 at 0/246
Size 893
Size 893 at 0/246
Size 889
Size 889 at 0/246
Size 883
Size 883 at 0/246
Size 883
Invariant time: 0.255
Number of invariants: 883
Invariant Clauses 11479
NUMBER OF CLAUSES 14036
NUMBER OF STATE CLAUSES 13960
NUMBER OF DECOMPOSITION CLAUSES 76
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.46000000000001% 0.54% 0.0% 
NUMBER OF PATHS 12
Starting cryptominisat
Setting starttime of solver to 1603874300274
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 144 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 84 leafs
SHOP LEAFS 46
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771610
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 75055
NUMBER OF CLAUSES 98785
NUMBER OF STATE CLAUSES 93322
NUMBER OF DECOMPOSITION CLAUSES 5463
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 94.47% 5.53% 0.0% 
NUMBER OF PATHS 84
Starting cryptominisat
Setting starttime of solver to 1603874300972
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 214 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 185 leafs
SHOP LEAFS 97
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854770933
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 164238
NUMBER OF CLAUSES 219658
NUMBER OF STATE CLAUSES 204988
NUMBER OF DECOMPOSITION CLAUSES 14670
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 93.32000000000001% 6.68% 0.0% 
NUMBER OF PATHS 185
Starting cryptominisat
Setting starttime of solver to 1603874301819
Command exited with non-zero status 20
0.03 0.01

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 237 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 228 leafs
SHOP LEAFS 116
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770059
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 202207
NUMBER OF CLAUSES 269289
NUMBER OF STATE CLAUSES 252331
NUMBER OF DECOMPOSITION CLAUSES 16958
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 93.7% 6.3% 0.0% 
NUMBER OF PATHS 228
Starting cryptominisat
Setting starttime of solver to 1603874302623
Command exited with non-zero status 10
0.09 0.00

Time command gave the following runtime for the solver: 90
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_5;8,136 136 m4_do_clear
5;8 2 pathaction!2_5;8,36
Consider method^3_0;7;1,114 114 <m5_do_clear;do_clear[crate5,distributor1];m4_do_clear;1;0,-1,-2,2,3,4>
0;7;1 19 pathaction!3_0;7;1,37
Consider method^2_1;7,142 142 m4_do_clear
1;7 47 pathaction!2_1;7,43
Consider method^3_2;3;2,172 172 m5_do_clear
2;3;2 98 pathaction!3_2;3;2,42
Consider method^1_0,117 117 <<<m3_do_put_on;do_unload_truck[crate1,pallet2,distributor1,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate1,depot0,truck0];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate1,pallet0,depot0,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>
0 60 pathaction!1_0,219
Consider method^2_2;3,3 3 m5_do_clear
2;3 88 pathaction!2_2;3,40
Consider method^2_5;7,15 15 m6_do_get_truck
5;7 67 pathaction!2_5;7,24
Consider method^2_4;7,94 94 m4_do_clear
4;7 16 pathaction!2_4;7,46
Consider method^1_2,143 143 <m3_do_put_on;do_unload_truck[crate4,pallet1,distributor0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>
2 40 pathaction!1_2,215
Consider method^4_2;3;2;4,55 55 m6_do_get_truck
2;3;2;4 28 pathaction!4_2;3;2;4,23
Consider method^2_4;6,45 45 m7_do_get_truck
4;6 42 pathaction!2_4;6,25
Consider method^1_5,29 29 m2_do_put_on
5 33 pathaction!1_5,218
Consider method^2_0;1,158 158 m6_do_get_truck
0;1 65 pathaction!2_0;1,21
Consider method^3_2;3;4,55 55 m6_do_get_truck
2;3;4 70 pathaction!3_2;3;4,23
Consider method^1_4,24 24 m2_do_put_on
4 22 pathaction!1_4,216
Consider method^4_2;3;2;2,186 186 m4_do_clear
2;3;2;2 15 pathaction!4_2;3;2;2,41
Consider method^1_1,60 60 m2_do_put_on
1 31 pathaction!1_1,220
Consider method^4_0;7;1;4,15 15 m6_do_get_truck
0;7;1;4 48 pathaction!4_0;7;1;4,24
Consider method^3_0;7;3,64 64 m7_do_get_truck
0;7;3 25 pathaction!3_0;7;3,20
Consider method^0_,216 216 __top_1
 5 pathaction!0_,289
Consider method^2_0;7,153 153 m5_do_clear
0;7 76 pathaction!2_0;7,39
Consider method^2_0;2,138 138 m4_do_clear
0;2 52 pathaction!2_0;2,38
Consider method^2_1;6,45 45 m7_do_get_truck
1;6 8 pathaction!2_1;6,25
Consider method^1_3,27 27 m2_do_put_on
3 81 pathaction!1_3,217
Consider method^2_2;0,83 83 <<_m3_do_put_on_2;do_load_truck[crate4,crate3,distributor0,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5>;do_clear[crate4,distributor0];m4_do_clear;2;0,1,-1,-2,3,4>
2;0 4 pathaction!2_2;0,59
Consider method^3_2;0;1,184 184 m7_do_get_truck
2;0;1 11 pathaction!3_2;0;1,23
Consider method^2_3;7,87 87 m4_do_clear
3;7 49 pathaction!2_3;7,44
Consider method^2_3;6,64 64 m7_do_get_truck
3;6 77 pathaction!2_3;6,20


CHECKING primitive solution of length 74 ...
true 20 __method_precondition_m10_do_load_truck_10_precondition[crate1,depot0,pallet0,hoist0;]
true 38 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 39 nop[;]
true 32 __method_precondition_m4_do_clear_4_precondition[crate1,depot0;]
true 50 nop[;]
true 111 Lift[hoist0,crate1,pallet0,depot0;]
true 44 Load[hoist0,crate1,truck0,depot0;]
true 17 Drive[truck0,depot0,distributor1;]
true 45 __method_precondition_m11_do_unload_truck_11_precondition[truck0,crate1,pallet2,distributor1,hoist2;]
true 6 __method_precondition_m5_do_clear_5_precondition[pallet2,crate2,distributor1,hoist2;]
true 14 __method_precondition_m5_do_clear_5_precondition[crate2,crate5,distributor1,hoist2;]
true 117 __method_precondition_m4_do_clear_4_precondition[crate5,distributor1;]
true 104 nop[;]
true 59 Lift[hoist2,crate5,crate2,distributor1;]
true 3 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 43 nop[;]
true 89 Load[hoist2,crate5,truck0,distributor1;]
true 83 Lift[hoist2,crate2,pallet2,distributor1;]
true 1 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 0 Drive[truck1,distributor0,distributor1;]
true 103 Load[hoist2,crate2,truck1,distributor1;]
true 102 Unload[hoist2,crate1,truck0,distributor1;]
true 72 Drop[hoist2,crate1,pallet2,distributor1;]
true 68 __method_precondition_m2_do_put_on_2_precondition[crate2,truck1;]
true 93 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot0;]
true 63 Drive[truck1,distributor1,depot0;]
true 75 __method_precondition_m4_do_clear_4_precondition[pallet0,depot0;]
true 116 nop[;]
true 80 Unload[hoist0,crate2,truck1,depot0;]
true 54 Drop[hoist0,crate2,pallet0,depot0;]
true 58 __method_precondition_m10_do_load_truck_10_precondition[crate4,distributor0,crate3,hoist1;]
true 110 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 9 Drive[truck1,depot0,distributor0;]
true 57 __method_precondition_m4_do_clear_4_precondition[crate4,distributor0;]
true 96 nop[;]
true 82 Lift[hoist1,crate4,crate3,distributor0;]
true 18 Load[hoist1,crate4,truck1,distributor0;]
true 37 Drive[truck1,distributor0,distributor0;]
true 86 __method_precondition_m11_do_unload_truck_11_precondition[truck1,crate4,pallet1,distributor0,hoist1;]
true 109 __method_precondition_m5_do_clear_5_precondition[pallet1,crate0,distributor0,hoist1;]
true 34 __method_precondition_m5_do_clear_5_precondition[crate0,crate3,distributor0,hoist1;]
true 108 __method_precondition_m4_do_clear_4_precondition[crate3,distributor0;]
true 84 nop[;]
true 7 Lift[hoist1,crate3,crate0,distributor0;]
true 106 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 53 nop[;]
true 92 Load[hoist1,crate3,truck1,distributor0;]
true 24 Lift[hoist1,crate0,pallet1,distributor0;]
true 51 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 85 nop[;]
true 112 Load[hoist1,crate0,truck1,distributor0;]
true 90 Unload[hoist1,crate4,truck1,distributor0;]
true 115 Drop[hoist1,crate4,pallet1,distributor0;]
true 71 __method_precondition_m2_do_put_on_2_precondition[crate0,truck1;]
true 64 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 105 Drive[truck1,distributor0,distributor1;]
true 41 __method_precondition_m4_do_clear_4_precondition[crate1,distributor1;]
true 27 nop[;]
true 55 Unload[hoist2,crate0,truck1,distributor1;]
true 12 Drop[hoist2,crate0,crate1,distributor1;]
true 66 __method_precondition_m2_do_put_on_2_precondition[crate3,truck1;]
true 30 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot0;]
true 78 Drive[truck1,distributor1,depot0;]
true 21 __method_precondition_m4_do_clear_4_precondition[crate2,depot0;]
true 10 nop[;]
true 61 Unload[hoist0,crate3,truck1,depot0;]
true 101 Drop[hoist0,crate3,crate2,depot0;]
true 99 __method_precondition_m2_do_put_on_2_precondition[crate5,truck0;]
true 13 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 46 nop[;]
true 56 __method_precondition_m4_do_clear_4_precondition[crate0,distributor1;]
true 35 nop[;]
true 73 Unload[hoist2,crate5,truck0,distributor1;]
true 62 Drop[hoist2,crate5,crate0,distributor1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 203632256
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 99
number of actions                    = 290
number of abstract actions           = 44
number of primitive actions          = 246
number of methods                    = 217
number of primitive shop actions     = 150
number of primitive non-shop actions = 96
size of largest method               = 11
average method size                  = 5
============ sat ============
plan length                     = -1
number of variables             = 48837
number of clauses               = 269289
average size of clauses         = 2.0470980990682874
number of assert                = 31
number of horn                  = 256105
K offset                        = 0
K chosen value                  = 5
state formula                   = 252331
method children clauses         = 0
number of paths                 = 228
maximum plan length             = 228
number of decomposition clauses = 16958
number of ordering clauses      = 0
number of state clauses         = 252331
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 6992
============ parsing ============
total                         = 981
file parser                   = 523
sort expansion                = 190
closed world assumption       = 67
inherit preconditions         = 0
shop methods                  = 20
eliminate identical variables = 98
strip domain of hybridity     = 2
flatten formula               = 79
============ preprocessing ============
total                                      = 2172
compile negative preconditions             = 37
compile unit methods                       = 0
split parameter                            = 58
expand choiceless abstract tasks           = 421
compile methods with identical tasks       = 3
removing unnecessary predicates            = 170
lifted reachabiltiy analysis               = 58
grounded planning graph analysis           = 696
grounded task decomposition graph analysis = 556
grounding                                  = 160
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 332
============ sat ============
total                                        = 2593
generate formula                             = 1959
generate path decomposition tree             = 233
normalise path decomposition tree            = 53
sog optimisation                             = 69
translate path decomposition tree to clauses = 242
generate state formula                       = 1831
generate state invariant formula             = 396
transform to DIMACS                          = 194
SAT solver                                   = 150
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 20
SAT solver for K=0004                        = 40
SAT solver for K=0005                        = 90

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="246";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="44";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="203632256";"40 sat:20:state formula"="252331";"40 sat:01:number of variables"="48837";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="228";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="217";"30 problem:07:number of primitive shop actions"="150";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="290";"30 problem:08:number of primitive non-shop actions"="96";"30 problem:02:number of predicates"="99";"40 sat:03:number of horn"="256105";"40 sat:15:K chosen value"="5";"30 problem:10:average method size"="5";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="11";"40 sat:03:average size of clauses"="2.0470980990682874";"40 sat:02:number of clauses"="269289";"40 sat:50:number of state clauses"="252331";"40 sat:03:number of assert"="31";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="228";"40 sat:50:number of decomposition clauses"="16958";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="523";"01 parsing:08:flatten formula"="79";"40 sat:41:SAT solver for K=0004"="40";"40 sat:00:total"="2593";"40 sat:16:generate state formula"="1831";"40 sat:20:transform to DIMACS"="194";"40 sat:11:generate path decomposition tree"="233";"02 preprocessing:07:compile methods with identical tasks"="3";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="170";"01 parsing:03:closed world assumption"="67";"02 preprocessing:11:lifted reachabiltiy analysis"="58";"01 parsing:02:sort expansion"="190";"40 sat:12:normalise path decomposition tree"="53";"40 sat:40:SAT solver"="150";"01 parsing:00:total"="981";"40 sat:10:generate formula"="1959";"40 sat:41:SAT solver for K=0005"="90";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="37";"00 total:00:total"="6992";"40 sat:13:sog optimisation"="69";"02 preprocessing:12:grounded planning graph analysis"="696";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="556";"02 preprocessing:04:split parameter"="58";"01 parsing:05:shop methods"="20";"10 search preparation:02:compute state invariants"="332";"01 parsing:06:eliminate identical variables"="98";"40 sat:15:translate path decomposition tree to clauses"="242";"02 preprocessing:05:expand choiceless abstract tasks"="421";"40 sat:41:SAT solver for K=0003"="20";"40 sat:17:generate state invariant formula"="396";"02 preprocessing:00:total"="2172";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="160"
#!verify __method_precondition_m10_do_load_truck_10_precondition[crate1,depot0,pallet0,hoist0];__method_precondition_m6_do_get_truck_6_precondition[truck0,depot0];nop[];__method_precondition_m4_do_clear_4_precondition[crate1,depot0];nop[];Lift[hoist0,crate1,pallet0,depot0];Load[hoist0,crate1,truck0,depot0];Drive[truck0,depot0,distributor1];__method_precondition_m11_do_unload_truck_11_precondition[truck0,crate1,pallet2,distributor1,hoist2];__method_precondition_m5_do_clear_5_precondition[pallet2,crate2,distributor1,hoist2];__method_precondition_m5_do_clear_5_precondition[crate2,crate5,distributor1,hoist2];__method_precondition_m4_do_clear_4_precondition[crate5,distributor1];nop[];Lift[hoist2,crate5,crate2,distributor1];__method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1];nop[];Load[hoist2,crate5,truck0,distributor1];Lift[hoist2,crate2,pallet2,distributor1];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1];Drive[truck1,distributor0,distributor1];Load[hoist2,crate2,truck1,distributor1];Unload[hoist2,crate1,truck0,distributor1];Drop[hoist2,crate1,pallet2,distributor1];__method_precondition_m2_do_put_on_2_precondition[crate2,truck1];__method_precondition_m7_do_get_truck_7_precondition[truck1,depot0];Drive[truck1,distributor1,depot0];__method_precondition_m4_do_clear_4_precondition[pallet0,depot0];nop[];Unload[hoist0,crate2,truck1,depot0];Drop[hoist0,crate2,pallet0,depot0];__method_precondition_m10_do_load_truck_10_precondition[crate4,distributor0,crate3,hoist1];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0];Drive[truck1,depot0,distributor0];__method_precondition_m4_do_clear_4_precondition[crate4,distributor0];nop[];Lift[hoist1,crate4,crate3,distributor0];Load[hoist1,crate4,truck1,distributor0];Drive[truck1,distributor0,distributor0];__method_precondition_m11_do_unload_truck_11_precondition[truck1,crate4,pallet1,distributor0,hoist1];__method_precondition_m5_do_clear_5_precondition[pallet1,crate0,distributor0,hoist1];__method_precondition_m5_do_clear_5_precondition[crate0,crate3,distributor0,hoist1];__method_precondition_m4_do_clear_4_precondition[crate3,distributor0];nop[];Lift[hoist1,crate3,crate0,distributor0];__method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0];nop[];Load[hoist1,crate3,truck1,distributor0];Lift[hoist1,crate0,pallet1,distributor0];__method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0];nop[];Load[hoist1,crate0,truck1,distributor0];Unload[hoist1,crate4,truck1,distributor0];Drop[hoist1,crate4,pallet1,distributor0];__method_precondition_m2_do_put_on_2_precondition[crate0,truck1];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1];Drive[truck1,distributor0,distributor1];__method_precondition_m4_do_clear_4_precondition[crate1,distributor1];nop[];Unload[hoist2,crate0,truck1,distributor1];Drop[hoist2,crate0,crate1,distributor1];__method_precondition_m2_do_put_on_2_precondition[crate3,truck1];__method_precondition_m7_do_get_truck_7_precondition[truck1,depot0];Drive[truck1,distributor1,depot0];__method_precondition_m4_do_clear_4_precondition[crate2,depot0];nop[];Unload[hoist0,crate3,truck1,depot0];Drop[hoist0,crate3,crate2,depot0];__method_precondition_m2_do_put_on_2_precondition[crate5,truck0];__method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1];nop[];__method_precondition_m4_do_clear_4_precondition[crate0,distributor1];nop[];Unload[hoist2,crate5,truck0,distributor1];Drop[hoist2,crate5,crate0,distributor1]
==>
0 __method_precondition_m10_do_load_truck_10_precondition crate1 depot0 pallet0 hoist0 
1 __method_precondition_m6_do_get_truck_6_precondition truck0 depot0 
2 nop  
3 __method_precondition_m4_do_clear_4_precondition crate1 depot0 
4 nop  
5 Lift hoist0 crate1 pallet0 depot0 
6 Load hoist0 crate1 truck0 depot0 
7 Drive truck0 depot0 distributor1 
8 __method_precondition_m11_do_unload_truck_11_precondition truck0 crate1 pallet2 distributor1 hoist2 
9 __method_precondition_m5_do_clear_5_precondition pallet2 crate2 distributor1 hoist2 
10 __method_precondition_m5_do_clear_5_precondition crate2 crate5 distributor1 hoist2 
11 __method_precondition_m4_do_clear_4_precondition crate5 distributor1 
12 nop  
13 Lift hoist2 crate5 crate2 distributor1 
14 __method_precondition_m6_do_get_truck_6_precondition truck0 distributor1 
15 nop  
16 Load hoist2 crate5 truck0 distributor1 
17 Lift hoist2 crate2 pallet2 distributor1 
18 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor1 
19 Drive truck1 distributor0 distributor1 
20 Load hoist2 crate2 truck1 distributor1 
21 Unload hoist2 crate1 truck0 distributor1 
22 Drop hoist2 crate1 pallet2 distributor1 
23 __method_precondition_m2_do_put_on_2_precondition crate2 truck1 
24 __method_precondition_m7_do_get_truck_7_precondition truck1 depot0 
25 Drive truck1 distributor1 depot0 
26 __method_precondition_m4_do_clear_4_precondition pallet0 depot0 
27 nop  
28 Unload hoist0 crate2 truck1 depot0 
29 Drop hoist0 crate2 pallet0 depot0 
30 __method_precondition_m10_do_load_truck_10_precondition crate4 distributor0 crate3 hoist1 
31 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor0 
32 Drive truck1 depot0 distributor0 
33 __method_precondition_m4_do_clear_4_precondition crate4 distributor0 
34 nop  
35 Lift hoist1 crate4 crate3 distributor0 
36 Load hoist1 crate4 truck1 distributor0 
37 Drive truck1 distributor0 distributor0 
38 __method_precondition_m11_do_unload_truck_11_precondition truck1 crate4 pallet1 distributor0 hoist1 
39 __method_precondition_m5_do_clear_5_precondition pallet1 crate0 distributor0 hoist1 
40 __method_precondition_m5_do_clear_5_precondition crate0 crate3 distributor0 hoist1 
41 __method_precondition_m4_do_clear_4_precondition crate3 distributor0 
42 nop  
43 Lift hoist1 crate3 crate0 distributor0 
44 __method_precondition_m6_do_get_truck_6_precondition truck1 distributor0 
45 nop  
46 Load hoist1 crate3 truck1 distributor0 
47 Lift hoist1 crate0 pallet1 distributor0 
48 __method_precondition_m6_do_get_truck_6_precondition truck1 distributor0 
49 nop  
50 Load hoist1 crate0 truck1 distributor0 
51 Unload hoist1 crate4 truck1 distributor0 
52 Drop hoist1 crate4 pallet1 distributor0 
53 __method_precondition_m2_do_put_on_2_precondition crate0 truck1 
54 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor1 
55 Drive truck1 distributor0 distributor1 
56 __method_precondition_m4_do_clear_4_precondition crate1 distributor1 
57 nop  
58 Unload hoist2 crate0 truck1 distributor1 
59 Drop hoist2 crate0 crate1 distributor1 
60 __method_precondition_m2_do_put_on_2_precondition crate3 truck1 
61 __method_precondition_m7_do_get_truck_7_precondition truck1 depot0 
62 Drive truck1 distributor1 depot0 
63 __method_precondition_m4_do_clear_4_precondition crate2 depot0 
64 nop  
65 Unload hoist0 crate3 truck1 depot0 
66 Drop hoist0 crate3 crate2 depot0 
67 __method_precondition_m2_do_put_on_2_precondition crate5 truck0 
68 __method_precondition_m6_do_get_truck_6_precondition truck0 distributor1 
69 nop  
70 __method_precondition_m4_do_clear_4_precondition crate0 distributor1 
71 nop  
72 Unload hoist2 crate5 truck0 distributor1 
73 Drop hoist2 crate5 crate0 distributor1 
root 89
74 do_clear crate3 distributor0  -> m4_do_clear 41 42
75 do_clear crate2 depot0  -> m4_do_clear 63 64
76 do_put_on crate4 pallet1  -> <m3_do_put_on;do_unload_truck[crate4,pallet1,distributor0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4> 99 37 38 84 51 52
77 do_put_on crate2 pallet0  -> m2_do_put_on 23 95 98 28 29
78 do_clear crate0 distributor0  -> m5_do_clear 40 74 43 101 46
79 do_get_truck truck1 distributor1  -> m7_do_get_truck 54 55
80 do_put_on crate3 crate2  -> m2_do_put_on 60 91 75 65 66
81 do_clear crate2 distributor1  -> <m5_do_clear;do_clear[crate5,distributor1];m4_do_clear;1;0,-1,-2,2,3,4> 10 11 12 13 85 16
82 do_clear crate1 depot0  -> m4_do_clear 3 4
83 do_get_truck truck0 distributor1  -> m6_do_get_truck 68 69
84 do_clear pallet1 distributor0  -> m5_do_clear 39 78 47 96 50
85 do_get_truck truck0 distributor1  -> m6_do_get_truck 14 15
86 do_get_truck truck0 depot0  -> m6_do_get_truck 1 2
87 do_clear crate1 distributor1  -> m4_do_clear 56 57
88 do_put_on crate5 crate0  -> m2_do_put_on 67 83 93 72 73
89 __choicelessATCompilation__top_1  -> __top_1 92 77 76 90 80 88
90 do_put_on crate0 crate1  -> m2_do_put_on 53 79 87 58 59
91 do_get_truck truck1 depot0  -> m7_do_get_truck 61 62
92 do_put_on crate1 pallet2  -> <<<m3_do_put_on;do_unload_truck[crate1,pallet2,distributor1,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate1,depot0,truck0];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate1,pallet0,depot0,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5> 0 86 82 5 6 7 8 100 21 22
93 do_clear crate0 distributor1  -> m4_do_clear 70 71
94 do_get_truck truck1 distributor1  -> m7_do_get_truck 18 19
95 do_get_truck truck1 depot0  -> m7_do_get_truck 24 25
96 do_get_truck truck1 distributor0  -> m6_do_get_truck 48 49
97 do_get_truck truck1 distributor0  -> m7_do_get_truck 31 32
98 do_clear pallet0 depot0  -> m4_do_clear 26 27
99 do_load_truck_m3_do_put_on_sip_2 crate4 distributor0 truck1  -> <<_m3_do_put_on_2;do_load_truck[crate4,crate3,distributor0,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5>;do_clear[crate4,distributor0];m4_do_clear;2;0,1,-1,-2,3,4> 30 97 33 34 35 36
100 do_clear pallet2 distributor1  -> m5_do_clear 9 81 17 94 20
101 do_get_truck truck1 distributor0  -> m6_do_get_truck 44 45

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 7.935 MEMPEAK_KBS 332828.672
