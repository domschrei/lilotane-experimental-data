PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/entertainment/domain.hddl instances/entertainment/p07-use-twice-box.hddl"


Planner Configuration
=====================
Domain: instances/entertainment/domain.hddl
Problem: instances/entertainment/p07-use-twice-box.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p07-use-twice-box.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 9
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 38
Compiling negative preconditions ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 18
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 38
Compiling split parameters ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 18
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 38
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 38
Grounded planning graph ... done in 310ms.
	Number of Grounded Actions 735
	Number of Grounded Literals 417
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 38
Two Way TDG ... done.
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 38
Grounding ... done.
	number of abstract tasks = 452
	number of tasks = 777
	number of decomposition methods = 1391
	number of predicates = 467
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 325
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 452
	number of tasks = 777
	number of decomposition methods = 1391
	number of predicates = 133
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 325
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 81ms.
	Number of Grounded Actions 266
	Number of Grounded Literals 89
	number of abstract tasks = 318
	number of tasks = 584
	number of decomposition methods = 689
	number of predicates = 133
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 318
	number of tasks = 584
	number of decomposition methods = 689
	number of predicates = 133
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 221
	number of tasks = 487
	number of decomposition methods = 592
	number of predicates = 133
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 221
	number of tasks = 487
	number of decomposition methods = 592
	number of predicates = 133
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 221
	number of tasks = 487
	number of decomposition methods = 592
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 26ms.
	Number of Grounded Actions 266
	Number of Grounded Literals 89
	number of abstract tasks = 221
	number of tasks = 487
	number of decomposition methods = 592
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 221
	number of tasks = 487
	number of decomposition methods = 592
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 175
	number of tasks = 441
	number of decomposition methods = 546
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 175
	number of tasks = 441
	number of decomposition methods = 546
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 175
	number of tasks = 441
	number of decomposition methods = 546
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 24ms.
	Number of Grounded Actions 266
	Number of Grounded Literals 89
	number of abstract tasks = 175
	number of tasks = 441
	number of decomposition methods = 546
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 175
	number of tasks = 441
	number of decomposition methods = 546
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 169
	number of tasks = 435
	number of decomposition methods = 540
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 169
	number of tasks = 435
	number of decomposition methods = 540
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 169
	number of tasks = 435
	number of decomposition methods = 540
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 20ms.
	Number of Grounded Actions 266
	Number of Grounded Literals 89
	number of abstract tasks = 169
	number of tasks = 435
	number of decomposition methods = 540
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 169
	number of tasks = 435
	number of decomposition methods = 540
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 169
	number of tasks = 435
	number of decomposition methods = 540
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 169
	number of tasks = 435
	number of decomposition methods = 540
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 169
	number of tasks = 435
	number of decomposition methods = 540
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 169
	number of tasks = 435
	number of decomposition methods = 540
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 220
	number of epsilon methods = 0
	number of primitive tasks = 266
	number of constants = 0
Tasks 266 - 126
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854770025ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854769969
done
initial PDT has 37 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 25 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 11748
Size 11748 at 0/266
Size 526
Size 526 at 0/266
Size 526
Invariant time: 0.102
Number of invariants: 526
Invariant Clauses 13676
NUMBER OF CLAUSES 22162
NUMBER OF STATE CLAUSES 18609
NUMBER OF DECOMPOSITION CLAUSES 3553
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.97% 16.03% 0.0% 
NUMBER OF PATHS 25
Starting cryptominisat
Setting starttime of solver to 1603876437174
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 88 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854769110
done
PDT has 70 leafs
SHOP LEAFS 35
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 37346
NUMBER OF CLAUSES 80869
NUMBER OF STATE CLAUSES 52434
NUMBER OF DECOMPOSITION CLAUSES 28435
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 64.84% 35.160000000000004% 0.0% 
NUMBER OF PATHS 70
Starting cryptominisat
Setting starttime of solver to 1603876437899
Command exited with non-zero status 10
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^4_2;2;2;2,503 503 m-dconnect-a-empty
2;2;2;2 74 pathaction!4_2;2;2;2,36
Consider method^2_1;2,286 286 <<m-connect-split-2;a_connect[scart-cable-4,scart-cable-1];m-connect-rec-a;1;0,-1,-2,2>;v_connect[scart-cable-4,scart-cable-1];m-connect-rec-v;0;-1,-2,1,2,3>
1;2 54 pathaction!2_1;2,273
Consider method^1_3,499 499 m-connect-split-2
3 65 pathaction!1_3,276
Consider method^3_2;2;0,208 208 m-connect-direct-v
2;2;0 57 pathaction!3_2;2;0,71
Consider method^3_3;1;1,224 224 m-dconnect-a-empty
3;1;1 76 pathaction!3_3;1;1,59
Consider method^4_3;2;3;1,496 496 m-dconnect-v-empty
3;2;3;1 66 pathaction!4_3;2;3;1,233
Consider method^0_,539 539 __top_1
 47 pathaction!0_,434
Consider method^4_3;1;0;1,264 264 m-dconnect-a-empty
3;1;0;1 37 pathaction!4_3;1;0;1,65
Consider method^4_3;0;0;1,109 109 <<m-dconnect-v;plug[game-console-1,game-console-1-scart-1,scart-cable-3,scart-cable-3-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-3,scart-cable-3-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
3;0;0;1 64 pathaction!4_3;0;0;1,237
Consider method^1_0,295 295 <m-connect-rec-a;a_connect[tv1-1,cinch-cable-2];m-connect-direct-a;0;-1,1>
0 8 pathaction!1_0,419
Consider method^2_1;1,444 444 <<m-dconnect-av;plug[blu-ray-1,blu-ray-1-scart-1,scart-cable-4,scart-cable-4-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[blu-ray-1,blu-ray-1-scart-1,scart-cable-4,scart-cable-4-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
1;1 46 pathaction!2_1;1,171
Consider method^3_1;2;2,440 440 m-connect-direct-a
1;2;2 39 pathaction!3_1;2;2,426
Consider method^3_3;2;3,184 184 <m-connect-rec-v;v_connect[multi-scart-1,scart-cable-1];m-connect-direct-v;0;-1,1>
3;2;3 9 pathaction!3_3;2;3,92
Consider method^3_3;0;0,170 170 m-connect-direct-v
3;0;0 38 pathaction!3_3;0;0,96
Consider method^4_1;2;4;4,101 101 <<m-dconnect-av;plug[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
1;2;4;4 81 pathaction!4_1;2;4;4,160
Consider method^2_0;0,251 251 <<<m-dconnect-a;plug[tv1-1,tv1-1-cinch-2,cinch-cable-2,cinch-cable-2-cinch-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[tv1-1,tv1-1-cinch-2,cinch-cable-2,cinch-cable-2-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT;1;0,-1>;plug|CONSEQUENT|ANTECEDENT[tv1-1,tv1-1-cinch-2,cinch-cable-2,cinch-cable-2-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0;1;0,-1>
0;0 11 pathaction!2_0;0,48
Consider method^4_1;2;0;2,67 67 <<m-dconnect-v;plug[scart-cable-4,scart-cable-4-scart-2,multi-scart-1,multi-scart-1-scart-3];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-4,scart-cable-4-scart-2,multi-scart-1,multi-scart-1-scart-3];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
1;2;0;2 73 pathaction!4_1;2;0;2,234
Consider method^3_3;1;0,294 294 m-connect-direct-a
3;1;0 71 pathaction!3_3;1;0,428
Consider method^3_2;2;4,521 521 m-connect-direct-av
2;2;4 61 pathaction!3_2;2;4,275
Consider method^3_1;2;1,518 518 <<m-dconnect-v;plug[multi-scart-1,multi-scart-1-scart-1,scart-cable-1,scart-cable-1-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[multi-scart-1,multi-scart-1-scart-1,scart-cable-1,scart-cable-1-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
1;2;1 14 pathaction!3_1;2;1,233
Consider method^2_3;2,451 451 m-connect-split-1
3;2 58 pathaction!2_3;2,277
Consider method^1_1,491 491 m-connect-rec-av-1
1 13 pathaction!1_1,278
Consider method^2_2;2,281 281 <<m-connect-split-2;a_connect[scart-cable-2,scart-cable-1];m-connect-rec-a;1;0,-1,-2,2>;v_connect[scart-cable-2,scart-cable-1];m-connect-rec-v;0;-1,-2,1,2,3>
2;2 55 pathaction!2_2;2,279
Consider method^2_0;1,113 113 <<<m-dconnect-a;plug[cinch-cable-2,cinch-cable-2-cinch-2,active-speaker-1,active-speaker-1-cinch-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[cinch-cable-2,cinch-cable-2-cinch-2,active-speaker-1,active-speaker-1-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT;1;0,-1>;plug|CONSEQUENT|ANTECEDENT[cinch-cable-2,cinch-cable-2-cinch-2,active-speaker-1,active-speaker-1-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1;1;0,-1>
0;1 52 pathaction!2_0;1,39
Consider method^2_3;1,10 10 m-connect-rec-a
3;1 75 pathaction!2_3;1,403
Consider method^3_2;2;1,496 496 m-dconnect-v-empty
2;2;1 35 pathaction!3_2;2;1,233
Consider method^3_2;2;2,136 136 m-connect-direct-a
2;2;2 28 pathaction!3_2;2;2,402
Consider method^4_2;2;0;2,204 204 <<m-dconnect-v;plug[scart-cable-2,scart-cable-2-scart-2,multi-scart-1,multi-scart-1-scart-4];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,multi-scart-1,multi-scart-1-scart-4];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
2;2;0;2 3 pathaction!4_2;2;0;2,212
Consider method^4_3;2;4;4,25 25 m-dconnect-a-empty
3;2;4;4 0 pathaction!4_3;2;4;4,58
Consider method^4_1;2;2;2,172 172 m-dconnect-a-empty
1;2;2;2 7 pathaction!4_1;2;2;2,62
Consider method^4_3;2;3;2,127 127 m-dconnect-v-empty
3;2;3;2 50 pathaction!4_3;2;3;2,230
Consider method^2_2;1,403 403 <<m-dconnect-av;plug[dvd-1,dvd-1-scart-1,scart-cable-2,scart-cable-2-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-2,scart-cable-2-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
2;1 12 pathaction!2_2;1,153
Consider method^3_1;2;0,326 326 m-connect-direct-v
1;2;0 19 pathaction!3_1;2;0,94
Consider method^1_2,342 342 m-connect-rec-av-1
2 69 pathaction!1_2,272
Consider method^2_3;0,433 433 m-connect-rec-v
3;0 26 pathaction!2_3;0,72
Consider method^3_1;2;4,521 521 m-connect-direct-av
1;2;4 49 pathaction!3_1;2;4,275
Consider method^3_2;2;3,407 407 m-dconnect-a-empty
2;2;3 72 pathaction!3_2;2;3,61
Consider method^4_2;2;4;4,447 447 m-dconnect-av-empty
2;2;4;4 15 pathaction!4_2;2;4;4,160
Consider method^3_3;0;1,93 93 <<m-dconnect-v;plug[scart-cable-3,scart-cable-3-scart-2,multi-scart-1,multi-scart-1-scart-2];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-3,scart-cable-3-scart-2,multi-scart-1,multi-scart-1-scart-2];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
3;0;1 68 pathaction!3_3;0;1,231
Consider method^4_3;2;4;3,407 407 m-dconnect-a-empty
3;2;4;3 31 pathaction!4_3;2;4;3,61
Consider method^3_1;2;3,407 407 m-dconnect-a-empty
1;2;3 59 pathaction!3_1;2;3,61
Consider method^3_3;2;4,152 152 <m-connect-rec-a;a_connect[multi-scart-1,scart-cable-1];m-connect-direct-a;0;-1,1>
3;2;4 30 pathaction!3_3;2;4,424


CHECKING primitive solution of length 32 ...
true 6 __method_precondition_m-dconnect-a_9_precondition[tv1-1-cinch-2,cinch-cable-2-cinch-1;]
true 20 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[tv1-1,tv1-1-cinch-2,cinch-cable-2,cinch-cable-2-cinch-1;]
true 24 __method_precondition_m-dconnect-a_9_precondition[cinch-cable-2-cinch-2,active-speaker-1-cinch-1;]
true 22 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[cinch-cable-2,cinch-cable-2-cinch-2,active-speaker-1,active-speaker-1-cinch-1;]
true 56 __method_precondition_m-dconnect-av_8_precondition[blu-ray-1-scart-1,scart-cable-4-scart-1;]
true 53 plug|CONSEQUENT|CONSEQUENT[blu-ray-1,blu-ray-1-scart-1,scart-cable-4,scart-cable-4-scart-1;]
true 17 __method_precondition_m-dconnect-v_10_precondition[scart-cable-4-scart-2,multi-scart-1-scart-3;]
true 62 plug|CONSEQUENT|CONSEQUENT[scart-cable-4,scart-cable-4-scart-2,multi-scart-1,multi-scart-1-scart-3;]
true 48 __method_precondition_m-dconnect-v_10_precondition[multi-scart-1-scart-1,scart-cable-1-scart-1;]
true 80 plug|CONSEQUENT|CONSEQUENT[multi-scart-1,multi-scart-1-scart-1,scart-cable-1,scart-cable-1-scart-1;]
true 27 __method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-4,multi-scart-1;]
true 79 __method_precondition_m-dconnect-a-empty_12_precondition[multi-scart-1,scart-cable-1;]
true 40 __method_precondition_m-dconnect-av_8_precondition[scart-cable-1-scart-2,tv1-1-scart-1;]
true 32 plug|CONSEQUENT|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1;]
true 41 __method_precondition_m-dconnect-av_8_precondition[dvd-1-scart-1,scart-cable-2-scart-1;]
true 10 plug|CONSEQUENT|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-2,scart-cable-2-scart-1;]
true 1 __method_precondition_m-dconnect-v_10_precondition[scart-cable-2-scart-2,multi-scart-1-scart-4;]
true 23 plug|CONSEQUENT|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,multi-scart-1,multi-scart-1-scart-4;]
true 77 __method_precondition_m-dconnect-v-empty_13_precondition[multi-scart-1,scart-cable-1;]
true 60 __method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-2,multi-scart-1;]
true 29 __method_precondition_m-dconnect-a-empty_12_precondition[multi-scart-1,scart-cable-1;]
true 4 __method_precondition_m-dconnect-av-empty_11_precondition[scart-cable-1,tv1-1;]
true 25 __method_precondition_m-dconnect-v_10_precondition[game-console-1-scart-1,scart-cable-3-scart-1;]
true 18 plug|CONSEQUENT|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-3,scart-cable-3-scart-1;]
true 63 __method_precondition_m-dconnect-v_10_precondition[scart-cable-3-scart-2,multi-scart-1-scart-2;]
true 2 plug|CONSEQUENT|CONSEQUENT[scart-cable-3,scart-cable-3-scart-2,multi-scart-1,multi-scart-1-scart-2;]
true 78 __method_precondition_m-dconnect-a-empty_12_precondition[game-console-1,scart-cable-3;]
true 21 __method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-3,multi-scart-1;]
true 16 __method_precondition_m-dconnect-v-empty_13_precondition[multi-scart-1,scart-cable-1;]
true 36 __method_precondition_m-dconnect-v-empty_13_precondition[scart-cable-1,tv1-1;]
true 45 __method_precondition_m-dconnect-a-empty_12_precondition[multi-scart-1,scart-cable-1;]
true 34 __method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-1,tv1-1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 172634728
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 89
number of actions                    = 435
number of abstract actions           = 169
number of primitive actions          = 266
number of methods                    = 540
number of primitive shop actions     = 220
number of primitive non-shop actions = 46
size of largest method               = 5
average method size                  = 2
============ sat ============
plan length                     = -1
number of variables             = 16412
number of clauses               = 80869
average size of clauses         = 2.5169471614586554
number of assert                = 26
number of horn                  = 76407
K offset                        = 0
K chosen value                  = 5
state formula                   = 52434
method children clauses         = 0
number of paths                 = 70
maximum plan length             = 70
number of decomposition clauses = 28435
number of ordering clauses      = 0
number of state clauses         = 52434
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 7661
============ parsing ============
total                         = 1179
file parser                   = 625
sort expansion                = 192
closed world assumption       = 152
inherit preconditions         = 0
shop methods                  = 14
eliminate identical variables = 72
strip domain of hybridity     = 1
flatten formula               = 122
============ preprocessing ============
total                                      = 4488
compile negative preconditions             = 61
compile unit methods                       = 0
split parameter                            = 33
expand choiceless abstract tasks           = 466
compile methods with identical tasks       = 18
removing unnecessary predicates            = 456
lifted reachabiltiy analysis               = 71
grounded planning graph analysis           = 822
grounded task decomposition graph analysis = 2341
grounding                                  = 203
create artificial top task                 = 4
============ search preparation ============
compute state invariants = 145
============ sat ============
total                                        = 1349
generate formula                             = 997
generate path decomposition tree             = 235
normalise path decomposition tree            = 75
sog optimisation                             = 57
translate path decomposition tree to clauses = 220
generate state formula                       = 989
generate state invariant formula             = 101
transform to DIMACS                          = 103
SAT solver                                   = 30
SAT solver for K=0004                        = 0
SAT solver for K=0005                        = 30

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="266";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="169";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="172634728";"40 sat:20:state formula"="52434";"40 sat:01:number of variables"="16412";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="70";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="540";"30 problem:07:number of primitive shop actions"="220";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="435";"30 problem:08:number of primitive non-shop actions"="46";"30 problem:02:number of predicates"="89";"40 sat:03:number of horn"="76407";"40 sat:15:K chosen value"="5";"30 problem:10:average method size"="2";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="5";"40 sat:03:average size of clauses"="2.5169471614586554";"40 sat:02:number of clauses"="80869";"40 sat:50:number of state clauses"="52434";"40 sat:03:number of assert"="26";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="70";"40 sat:50:number of decomposition clauses"="28435";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="625";"01 parsing:08:flatten formula"="122";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="1349";"40 sat:16:generate state formula"="989";"40 sat:20:transform to DIMACS"="103";"40 sat:11:generate path decomposition tree"="235";"02 preprocessing:07:compile methods with identical tasks"="18";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="456";"01 parsing:03:closed world assumption"="152";"02 preprocessing:11:lifted reachabiltiy analysis"="71";"01 parsing:02:sort expansion"="192";"40 sat:12:normalise path decomposition tree"="75";"40 sat:40:SAT solver"="30";"01 parsing:00:total"="1179";"40 sat:10:generate formula"="997";"40 sat:41:SAT solver for K=0005"="30";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="61";"00 total:00:total"="7661";"40 sat:13:sog optimisation"="57";"02 preprocessing:12:grounded planning graph analysis"="822";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="2341";"02 preprocessing:04:split parameter"="33";"01 parsing:05:shop methods"="14";"10 search preparation:02:compute state invariants"="145";"01 parsing:06:eliminate identical variables"="72";"40 sat:15:translate path decomposition tree to clauses"="220";"02 preprocessing:05:expand choiceless abstract tasks"="466";"40 sat:17:generate state invariant formula"="101";"02 preprocessing:00:total"="4488";"02 preprocessing:99:create artificial top task"="4";"02 preprocessing:84:grounding"="203"
#!verify __method_precondition_m-dconnect-a_9_precondition[tv1-1-cinch-2,cinch-cable-2-cinch-1];plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[tv1-1,tv1-1-cinch-2,cinch-cable-2,cinch-cable-2-cinch-1];__method_precondition_m-dconnect-a_9_precondition[cinch-cable-2-cinch-2,active-speaker-1-cinch-1];plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[cinch-cable-2,cinch-cable-2-cinch-2,active-speaker-1,active-speaker-1-cinch-1];__method_precondition_m-dconnect-av_8_precondition[blu-ray-1-scart-1,scart-cable-4-scart-1];plug|CONSEQUENT|CONSEQUENT[blu-ray-1,blu-ray-1-scart-1,scart-cable-4,scart-cable-4-scart-1];__method_precondition_m-dconnect-v_10_precondition[scart-cable-4-scart-2,multi-scart-1-scart-3];plug|CONSEQUENT|CONSEQUENT[scart-cable-4,scart-cable-4-scart-2,multi-scart-1,multi-scart-1-scart-3];__method_precondition_m-dconnect-v_10_precondition[multi-scart-1-scart-1,scart-cable-1-scart-1];plug|CONSEQUENT|CONSEQUENT[multi-scart-1,multi-scart-1-scart-1,scart-cable-1,scart-cable-1-scart-1];__method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-4,multi-scart-1];__method_precondition_m-dconnect-a-empty_12_precondition[multi-scart-1,scart-cable-1];__method_precondition_m-dconnect-av_8_precondition[scart-cable-1-scart-2,tv1-1-scart-1];plug|CONSEQUENT|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];__method_precondition_m-dconnect-av_8_precondition[dvd-1-scart-1,scart-cable-2-scart-1];plug|CONSEQUENT|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-2,scart-cable-2-scart-1];__method_precondition_m-dconnect-v_10_precondition[scart-cable-2-scart-2,multi-scart-1-scart-4];plug|CONSEQUENT|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,multi-scart-1,multi-scart-1-scart-4];__method_precondition_m-dconnect-v-empty_13_precondition[multi-scart-1,scart-cable-1];__method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-2,multi-scart-1];__method_precondition_m-dconnect-a-empty_12_precondition[multi-scart-1,scart-cable-1];__method_precondition_m-dconnect-av-empty_11_precondition[scart-cable-1,tv1-1];__method_precondition_m-dconnect-v_10_precondition[game-console-1-scart-1,scart-cable-3-scart-1];plug|CONSEQUENT|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-3,scart-cable-3-scart-1];__method_precondition_m-dconnect-v_10_precondition[scart-cable-3-scart-2,multi-scart-1-scart-2];plug|CONSEQUENT|CONSEQUENT[scart-cable-3,scart-cable-3-scart-2,multi-scart-1,multi-scart-1-scart-2];__method_precondition_m-dconnect-a-empty_12_precondition[game-console-1,scart-cable-3];__method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-3,multi-scart-1];__method_precondition_m-dconnect-v-empty_13_precondition[multi-scart-1,scart-cable-1];__method_precondition_m-dconnect-v-empty_13_precondition[scart-cable-1,tv1-1];__method_precondition_m-dconnect-a-empty_12_precondition[multi-scart-1,scart-cable-1];__method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-1,tv1-1]
==>
0 __method_precondition_m-dconnect-a_9_precondition tv1-1-cinch-2 cinch-cable-2-cinch-1 
1 plug|DISJUNCT-0 tv1-1 tv1-1-cinch-2 cinch-cable-2 cinch-cable-2-cinch-1 
2 __method_precondition_m-dconnect-a_9_precondition cinch-cable-2-cinch-2 active-speaker-1-cinch-1 
3 plug|DISJUNCT-1 cinch-cable-2 cinch-cable-2-cinch-2 active-speaker-1 active-speaker-1-cinch-1 
4 __method_precondition_m-dconnect-av_8_precondition blu-ray-1-scart-1 scart-cable-4-scart-1 
5 plug blu-ray-1 blu-ray-1-scart-1 scart-cable-4 scart-cable-4-scart-1 
6 __method_precondition_m-dconnect-v_10_precondition scart-cable-4-scart-2 multi-scart-1-scart-3 
7 plug scart-cable-4 scart-cable-4-scart-2 multi-scart-1 multi-scart-1-scart-3 
8 __method_precondition_m-dconnect-v_10_precondition multi-scart-1-scart-1 scart-cable-1-scart-1 
9 plug multi-scart-1 multi-scart-1-scart-1 scart-cable-1 scart-cable-1-scart-1 
10 __method_precondition_m-dconnect-a-empty_12_precondition scart-cable-4 multi-scart-1 
11 __method_precondition_m-dconnect-a-empty_12_precondition multi-scart-1 scart-cable-1 
12 __method_precondition_m-dconnect-av_8_precondition scart-cable-1-scart-2 tv1-1-scart-1 
13 plug scart-cable-1 scart-cable-1-scart-2 tv1-1 tv1-1-scart-1 
14 __method_precondition_m-dconnect-av_8_precondition dvd-1-scart-1 scart-cable-2-scart-1 
15 plug dvd-1 dvd-1-scart-1 scart-cable-2 scart-cable-2-scart-1 
16 __method_precondition_m-dconnect-v_10_precondition scart-cable-2-scart-2 multi-scart-1-scart-4 
17 plug scart-cable-2 scart-cable-2-scart-2 multi-scart-1 multi-scart-1-scart-4 
18 __method_precondition_m-dconnect-v-empty_13_precondition multi-scart-1 scart-cable-1 
19 __method_precondition_m-dconnect-a-empty_12_precondition scart-cable-2 multi-scart-1 
20 __method_precondition_m-dconnect-a-empty_12_precondition multi-scart-1 scart-cable-1 
21 __method_precondition_m-dconnect-av-empty_11_precondition scart-cable-1 tv1-1 
22 __method_precondition_m-dconnect-v_10_precondition game-console-1-scart-1 scart-cable-3-scart-1 
23 plug game-console-1 game-console-1-scart-1 scart-cable-3 scart-cable-3-scart-1 
24 __method_precondition_m-dconnect-v_10_precondition scart-cable-3-scart-2 multi-scart-1-scart-2 
25 plug scart-cable-3 scart-cable-3-scart-2 multi-scart-1 multi-scart-1-scart-2 
26 __method_precondition_m-dconnect-a-empty_12_precondition game-console-1 scart-cable-3 
27 __method_precondition_m-dconnect-a-empty_12_precondition scart-cable-3 multi-scart-1 
28 __method_precondition_m-dconnect-v-empty_13_precondition multi-scart-1 scart-cable-1 
29 __method_precondition_m-dconnect-v-empty_13_precondition scart-cable-1 tv1-1 
30 __method_precondition_m-dconnect-a-empty_12_precondition multi-scart-1 scart-cable-1 
31 __method_precondition_m-dconnect-a-empty_12_precondition scart-cable-1 tv1-1 
root 65
32 direct_a_connect tv1-1 cinch-cable-2  -> <<<m-dconnect-a;plug[tv1-1,tv1-1-cinch-2,cinch-cable-2,cinch-cable-2-cinch-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[tv1-1,tv1-1-cinch-2,cinch-cable-2,cinch-cable-2-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT;1;0,-1>;plug|CONSEQUENT|ANTECEDENT[tv1-1,tv1-1-cinch-2,cinch-cable-2,cinch-cable-2-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0;1;0,-1> 0 1
33 av_connect scart-cable-4 tv1-1  -> <<m-connect-split-2;a_connect[scart-cable-4,scart-cable-1];m-connect-rec-a;1;0,-1,-2,2>;v_connect[scart-cable-4,scart-cable-1];m-connect-rec-v;0;-1,-2,1,2,3> 50 57 69 63 45
34 direct_a_connect scart-cable-1 tv1-1  -> m-dconnect-a-empty 31
35 v_connect scart-cable-2 multi-scart-1  -> m-connect-direct-v 62
36 direct_v_connect scart-cable-3 multi-scart-1  -> <<m-dconnect-v;plug[scart-cable-3,scart-cable-3-scart-2,multi-scart-1,multi-scart-1-scart-2];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-3,scart-cable-3-scart-2,multi-scart-1,multi-scart-1-scart-2];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 24 25
37 direct_av_connect scart-cable-1 tv1-1  -> <<m-dconnect-av;plug[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 12 13
38 a_connect multi-scart-1 tv1-1  -> <m-connect-rec-a;a_connect[multi-scart-1,scart-cable-1];m-connect-direct-a;0;-1,1> 42 34
39 a_connect scart-cable-2 multi-scart-1  -> m-connect-direct-a 43
40 v_connect multi-scart-1 tv1-1  -> <m-connect-rec-v;v_connect[multi-scart-1,scart-cable-1];m-connect-direct-v;0;-1,1> 41 46
41 direct_v_connect multi-scart-1 scart-cable-1  -> m-dconnect-v-empty 28
42 direct_a_connect multi-scart-1 scart-cable-1  -> m-dconnect-a-empty 30
43 direct_a_connect scart-cable-2 multi-scart-1  -> m-dconnect-a-empty 19
44 direct_v_connect scart-cable-4 multi-scart-1  -> <<m-dconnect-v;plug[scart-cable-4,scart-cable-4-scart-2,multi-scart-1,multi-scart-1-scart-3];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-4,scart-cable-4-scart-2,multi-scart-1,multi-scart-1-scart-3];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 6 7
45 av_connect scart-cable-1 tv1-1  -> m-connect-direct-av 37
46 direct_v_connect scart-cable-1 tv1-1  -> m-dconnect-v-empty 29
47 direct_v_connect multi-scart-1 scart-cable-1  -> m-dconnect-v-empty 18
48 direct_av_connect dvd-1 scart-cable-2  -> <<m-dconnect-av;plug[dvd-1,dvd-1-scart-1,scart-cable-2,scart-cable-2-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-2,scart-cable-2-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 14 15
49 a_connect tv1-1 active-speaker-1  -> <m-connect-rec-a;a_connect[tv1-1,cinch-cable-2];m-connect-direct-a;0;-1,1> 32 54
50 v_connect scart-cable-4 multi-scart-1  -> m-connect-direct-v 44
51 direct_av_connect scart-cable-1 tv1-1  -> m-dconnect-av-empty 21
52 a_connect game-console-1 multi-scart-1  -> m-connect-rec-a 56 58
53 direct_a_connect game-console-1 scart-cable-3  -> m-dconnect-a-empty 26
54 direct_a_connect cinch-cable-2 active-speaker-1  -> <<<m-dconnect-a;plug[cinch-cable-2,cinch-cable-2-cinch-2,active-speaker-1,active-speaker-1-cinch-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[cinch-cable-2,cinch-cable-2-cinch-2,active-speaker-1,active-speaker-1-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT;1;0,-1>;plug|CONSEQUENT|ANTECEDENT[cinch-cable-2,cinch-cable-2-cinch-2,active-speaker-1,active-speaker-1-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1;1;0,-1> 2 3
55 av_connect dvd-1 tv1-1  -> m-connect-rec-av-1 48 73
56 a_connect game-console-1 scart-cable-3  -> m-connect-direct-a 53
57 direct_v_connect multi-scart-1 scart-cable-1  -> <<m-dconnect-v;plug[multi-scart-1,multi-scart-1-scart-1,scart-cable-1,scart-cable-1-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[multi-scart-1,multi-scart-1-scart-1,scart-cable-1,scart-cable-1-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 8 9
58 direct_a_connect scart-cable-3 multi-scart-1  -> m-dconnect-a-empty 27
59 av_connect multi-scart-1 tv1-1  -> m-connect-split-1 40 38
60 direct_a_connect multi-scart-1 scart-cable-1  -> m-dconnect-a-empty 20
61 v_connect game-console-1 scart-cable-3  -> m-connect-direct-v 64
62 direct_v_connect scart-cable-2 multi-scart-1  -> <<m-dconnect-v;plug[scart-cable-2,scart-cable-2-scart-2,multi-scart-1,multi-scart-1-scart-4];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,multi-scart-1,multi-scart-1-scart-4];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 16 17
63 direct_a_connect multi-scart-1 scart-cable-1  -> m-dconnect-a-empty 11
64 direct_v_connect game-console-1 scart-cable-3  -> <<m-dconnect-v;plug[game-console-1,game-console-1-scart-1,scart-cable-3,scart-cable-3-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-3,scart-cable-3-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 22 23
65 __choicelessATCompilation__top_1  -> __top_1 49 70 55 67
66 direct_a_connect scart-cable-4 multi-scart-1  -> m-dconnect-a-empty 10
67 av_connect game-console-1 tv1-1  -> m-connect-split-2 72 52 59
68 direct_av_connect blu-ray-1 scart-cable-4  -> <<m-dconnect-av;plug[blu-ray-1,blu-ray-1-scart-1,scart-cable-4,scart-cable-4-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[blu-ray-1,blu-ray-1-scart-1,scart-cable-4,scart-cable-4-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 4 5
69 a_connect scart-cable-4 multi-scart-1  -> m-connect-direct-a 66
70 av_connect blu-ray-1 tv1-1  -> m-connect-rec-av-1 68 33
71 av_connect scart-cable-1 tv1-1  -> m-connect-direct-av 51
72 v_connect game-console-1 multi-scart-1  -> m-connect-rec-v 61 36
73 av_connect scart-cable-2 tv1-1  -> <<m-connect-split-2;a_connect[scart-cable-2,scart-cable-1];m-connect-rec-a;1;0,-1,-2,2>;v_connect[scart-cable-2,scart-cable-1];m-connect-rec-v;0;-1,-2,1,2,3> 35 47 39 60 71

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 8.572 MEMPEAK_KBS 318904.32
