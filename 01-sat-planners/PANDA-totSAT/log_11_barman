PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/barman/domain.hddl instances/barman/p11.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p11.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p11.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounded planning graph ... done in 521ms.
	Number of Grounded Actions 2812
	Number of Grounded Literals 417
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 1196
	number of tasks = 3772
	number of decomposition methods = 4579
	number of predicates = 417
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1196
	number of tasks = 3772
	number of decomposition methods = 4579
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 357ms.
	Number of Grounded Actions 2576
	Number of Grounded Literals 387
	number of abstract tasks = 1196
	number of tasks = 3772
	number of decomposition methods = 4579
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1196
	number of tasks = 3772
	number of decomposition methods = 4579
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 864
	number of tasks = 3440
	number of decomposition methods = 4247
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 864
	number of tasks = 3440
	number of decomposition methods = 4247
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 864
	number of tasks = 3440
	number of decomposition methods = 4247
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 222ms.
	Number of Grounded Actions 2576
	Number of Grounded Literals 387
	number of abstract tasks = 864
	number of tasks = 3440
	number of decomposition methods = 4247
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 864
	number of tasks = 3440
	number of decomposition methods = 4027
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 864
	number of tasks = 3440
	number of decomposition methods = 4027
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 864
	number of tasks = 3440
	number of decomposition methods = 4027
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 864
	number of tasks = 3440
	number of decomposition methods = 4027
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 864
	number of tasks = 3440
	number of decomposition methods = 4027
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 991
	number of epsilon methods = 0
	number of primitive tasks = 2576
	number of constants = 0
Tasks 2576 - 14
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768114ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854767692
done
initial PDT has 249 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 249 leafs
SHOP LEAFS 83
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 224073
Size 224073 at 0/2576
Size 223876 at 500/2576
Size 190337 at 1000/2576
Size 30856 at 1500/2576
Size 28840 at 2000/2576
Size 28840 at 2500/2576
Size 28840
Size 28840 at 0/2576
Size 28539 at 500/2576
Size 21084 at 1000/2576
Size 13717 at 1500/2576
Size 6817 at 2000/2576
Size 6817 at 2500/2576
Size 6788
Size 6788 at 0/2576
Size 6205 at 500/2576
Size 5989 at 1000/2576
Size 4980 at 1500/2576
Size 3972 at 2000/2576
Size 3972 at 2500/2576
Size 3961
Size 3961 at 0/2576
Size 3961 at 500/2576
Size 3925 at 1000/2576
Size 3835 at 1500/2576
Size 3765 at 2000/2576
Size 3765 at 2500/2576
Size 3765
Size 3765 at 0/2576
Size 3765 at 500/2576
Size 3759 at 1000/2576
Size 3741 at 1500/2576
Size 3741 at 2000/2576
Size 3741 at 2500/2576
Size 3741
Size 3741 at 0/2576
Size 3739 at 500/2576
Size 3739 at 1000/2576
Size 3737 at 1500/2576
Size 3736 at 2000/2576
Size 3736 at 2500/2576
Size 3736
Size 3736 at 0/2576
Size 3736 at 500/2576
Size 3736 at 1000/2576
Size 3736 at 1500/2576
Size 3736 at 2000/2576
Size 3736 at 2500/2576
Size 3736
Invariant time: 2.295
Number of invariants: 3736
Invariant Clauses 934000
NUMBER OF CLAUSES 1469710
NUMBER OF STATE CLAUSES 1202763
NUMBER OF DECOMPOSITION CLAUSES 266947
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 81.84% 18.16% 0.0% 
NUMBER OF PATHS 249
Starting cryptominisat
Setting starttime of solver to 1603870670897
Command exited with non-zero status 10
0.83 0.04

Time command gave the following runtime for the solver: 870
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_0;1;2,1057 1057 _m2_get_first_ingredient_3
0;1;2 197 pathaction!3_0;1;2,1049
Consider method^2_8;2,2225 2225 m3_get_second_ingredient
8;2 198 pathaction!2_8;2,3375
Consider method^3_0;2;2,3314 3314 _m3_get_second_ingredient_3
0;2;2 139 pathaction!3_0;2;2,2222
Consider method^2_2;2,889 889 m3_get_second_ingredient
2;2 41 pathaction!2_2;2,3377
Consider method^3_4;2;2,3314 3314 _m3_get_second_ingredient_3
4;2;2 187 pathaction!3_4;2;2,2222
Consider method^3_6;1;3,88 88 _m2_get_first_ingredient_4
6;1;3 329 pathaction!3_6;1;3,2423
Consider method^2_8;1,1321 1321 m2_get_first_ingredient
8;1 184 pathaction!2_8;1,3037
Consider method^3_4;1;2,1057 1057 _m2_get_first_ingredient_3
4;1;2 193 pathaction!3_4;1;2,1049
Consider method^3_5;2;1,1764 1764 _m3_get_second_ingredient_2
5;2;1 37 pathaction!3_5;2;1,540
Consider method^3_10;2;2,904 904 _m3_get_second_ingredient_3
10;2;2 118 pathaction!3_10;2;2,2243
Consider method^2_1;1,127 127 m2_get_first_ingredient
1;1 192 pathaction!2_1;1,3055
Consider method^1_6,4023 4023 m0_do_cocktail_in_shot1
6 212 pathaction!1_6,65
Consider method^3_7;1;3,2844 2844 _m2_get_first_ingredient_4
7;1;3 211 pathaction!3_7;1;3,2493
Consider method^2_13;1,3279 3279 m9_do_fill_shot
13;1 248 pathaction!2_13;1,2282
Consider method^2_9;1,3283 3283 m2_get_first_ingredient
9;1 262 pathaction!2_9;1,3035
Consider method^3_5;1;2,1650 1650 _m2_get_first_ingredient_3
5;1;2 298 pathaction!3_5;1;2,1042
Consider method^3_6;3;1,1859 1859 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2>
6;3;1 59 pathaction!3_6;3;1,2115
Consider method^1_5,3380 3380 m0_do_cocktail_in_shot1
5 104 pathaction!1_5,67
Consider method^3_10;1;3,2561 2561 _m2_get_first_ingredient_4
10;1;3 347 pathaction!3_10;1;3,2419
Consider method^2_3;3,1517 1517 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 134 pathaction!2_3;3,3067
Consider method^3_5;3;1,582 582 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 360 pathaction!3_5;3;1,2121
Consider method^2_7;3,1147 1147 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 47 pathaction!2_7;3,3058
Consider method^3_5;1;3,2645 2645 _m2_get_first_ingredient_4
5;1;3 35 pathaction!3_5;1;3,2470
Consider method^2_0;3,383 383 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 182 pathaction!2_0;3,3059
Consider method^3_9;2;2,3722 3722 _m3_get_second_ingredient_3
9;2;2 318 pathaction!3_9;2;2,2186
Consider method^2_10;2,3867 3867 m3_get_second_ingredient
10;2 22 pathaction!2_10;2,3391
Consider method^3_5;2;2,1994 1994 _m3_get_second_ingredient_3
5;2;2 96 pathaction!3_5;2;2,2165
Consider method^3_9;3;1,2417 2417 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2>
9;3;1 263 pathaction!3_9;3;1,2122
Consider method^3_4;3;1,3587 3587 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2>
4;3;1 76 pathaction!3_4;3;1,2108
Consider method^3_2;1;3,2378 2378 _m2_get_first_ingredient_4
2;1;3 10 pathaction!3_2;1;3,2402
Consider method^3_8;2;2,1948 1948 _m3_get_second_ingredient_3
8;2;2 225 pathaction!3_8;2;2,2150
Consider method^2_2;3,635 635 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 255 pathaction!2_2;3,3057
Consider method^2_11;1,1877 1877 m9_do_fill_shot
11;1 121 pathaction!2_11;1,2375
Consider method^3_3;1;1,584 584 m9_do_fill_shot
3;1;1 196 pathaction!3_3;1;1,2307
Consider method^2_3;2,974 974 m3_get_second_ingredient
3;2 168 pathaction!2_3;2,3385
Consider method^2_0;1,1377 1377 m2_get_first_ingredient
0;1 127 pathaction!2_0;1,3038
Consider method^1_12,2719 2719 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
12 157 pathaction!1_12,1398
Consider method^2_4;1,1272 1272 m2_get_first_ingredient
4;1 95 pathaction!2_4;1,3041
Consider method^3_3;2;1,1764 1764 _m3_get_second_ingredient_2
3;2;1 21 pathaction!3_3;2;1,540
Consider method^2_9;3,2827 2827 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 67 pathaction!2_9;3,3066
Consider method^3_10;2;1,3988 3988 _m3_get_second_ingredient_2
10;2;1 120 pathaction!3_10;2;1,536
Consider method^2_4;2,3135 3135 m3_get_second_ingredient
4;2 261 pathaction!2_4;2,3379
Consider method^3_0;1;3,2560 2560 _m2_get_first_ingredient_4
0;1;3 240 pathaction!3_0;1;3,2495
Consider method^3_1;2;2,650 650 _m3_get_second_ingredient_3
1;2;2 277 pathaction!3_1;2;2,2214
Consider method^3_5;1;1,2538 2538 m9_do_fill_shot
5;1;1 350 pathaction!3_5;1;1,2348
Consider method^3_2;2;1,2139 2139 _m3_get_second_ingredient_2
2;2;1 260 pathaction!3_2;2;1,614
Consider method^3_3;2;2,1994 1994 _m3_get_second_ingredient_3
3;2;2 77 pathaction!3_3;2;2,2165
Consider method^3_1;3;1,3649 3649 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 30 pathaction!3_1;3;1,2123
Consider method^2_7;1,3899 3899 m2_get_first_ingredient
7;1 281 pathaction!2_7;1,3054
Consider method^2_2;1,697 697 m2_get_first_ingredient
2;1 330 pathaction!2_2;1,3039
Consider method^3_9;2;1,452 452 _m3_get_second_ingredient_2
9;2;1 181 pathaction!3_9;2;1,616
Consider method^2_4;3,2420 2420 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 246 pathaction!2_4;3,3060
Consider method^1_8,903 903 m0_do_cocktail_in_shot1
8 125 pathaction!1_8,66
Consider method^1_2,469 469 m0_do_cocktail_in_shot1
2 141 pathaction!1_2,61
Consider method^1_0,3541 3541 m0_do_cocktail_in_shot1
0 90 pathaction!1_0,63
Consider method^1_4,2541 2541 m0_do_cocktail_in_shot1
4 132 pathaction!1_4,64
Consider method^2_10;1,3326 3326 m2_get_first_ingredient
10;1 52 pathaction!2_10;1,3053
Consider method^3_1;1;2,1372 1372 _m2_get_first_ingredient_3
1;1;2 295 pathaction!3_1;1;2,1009
Consider method^2_5;3,532 532 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 51 pathaction!2_5;3,3063
Consider method^1_1,2291 2291 m0_do_cocktail_in_shot1
1 290 pathaction!1_1,68
Consider method^3_0;2;1,1247 1247 _m3_get_second_ingredient_2
0;2;1 143 pathaction!3_0;2;1,632
Consider method^3_9;1;2,1112 1112 _m2_get_first_ingredient_3
9;1;2 310 pathaction!3_9;1;2,1000
Consider method^3_2;3;1,2299 2299 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 359 pathaction!3_2;3;1,2124
Consider method^3_4;1;3,2560 2560 _m2_get_first_ingredient_4
4;1;3 291 pathaction!3_4;1;3,2495
Consider method^3_2;1;2,3262 3262 _m2_get_first_ingredient_3
2;1;2 7 pathaction!3_2;1;2,976
Consider method^3_10;1;2,51 51 _m2_get_first_ingredient_3
10;1;2 276 pathaction!3_10;1;2,1043
Consider method^3_9;1;1,3543 3543 m8_do_fill_shot
9;1;1 56 pathaction!3_9;1;1,2333
Consider method^1_9,3760 3760 m0_do_cocktail_in_shot1
9 151 pathaction!1_9,70
Consider method^3_7;3;1,884 884 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 283 pathaction!3_7;3;1,2106
Consider method^3_3;1;3,1293 1293 _m2_get_first_ingredient_4
3;1;3 6 pathaction!3_3;1;3,2429
Consider method^2_10;3,3960 3960 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 195 pathaction!2_10;3,3065
Consider method^1_13,1064 1064 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
13 311 pathaction!1_13,1400
Consider method^2_3;1,2624 2624 m2_get_first_ingredient
3;1 177 pathaction!2_3;1,3047
Consider method^2_6;1,2619 2619 m2_get_first_ingredient
6;1 208 pathaction!2_6;1,3048
Consider method^3_6;2;2,3069 3069 _m3_get_second_ingredient_3
6;2;2 349 pathaction!3_6;2;2,2200
Consider method^3_10;1;1,1367 1367 m9_do_fill_shot
10;1;1 29 pathaction!3_10;1;1,2297
Consider method^3_3;1;2,2029 2029 _m2_get_first_ingredient_3
3;1;2 233 pathaction!3_3;1;2,1008
Consider method^3_1;1;3,817 817 _m2_get_first_ingredient_4
1;1;3 40 pathaction!3_1;1;3,2415
Consider method^3_7;1;1,3735 3735 m9_do_fill_shot
7;1;1 219 pathaction!3_7;1;1,2371
Consider method^3_6;1;2,2092 2092 _m2_get_first_ingredient_3
6;1;2 175 pathaction!3_6;1;2,1067
Consider method^3_9;1;3,3993 3993 _m2_get_first_ingredient_4
9;1;3 138 pathaction!3_9;1;3,2455
Consider method^2_5;1,567 567 m2_get_first_ingredient
5;1 162 pathaction!2_5;1,3042
Consider method^2_9;2,1919 1919 m3_get_second_ingredient
9;2 32 pathaction!2_9;2,3373
Consider method^3_7;2;1,3896 3896 _m3_get_second_ingredient_2
7;2;1 46 pathaction!3_7;2;1,492
Consider method^2_5;2,1190 1190 m3_get_second_ingredient
5;2 333 pathaction!2_5;2,3380
Consider method^3_1;1;1,592 592 m9_do_fill_shot
1;1;1 293 pathaction!3_1;1;1,2293
Consider method^3_7;2;2,3069 3069 _m3_get_second_ingredient_3
7;2;2 78 pathaction!3_7;2;2,2200
Consider method^2_0;2,845 845 m3_get_second_ingredient
0;2 337 pathaction!2_0;2,3376
Consider method^2_1;2,59 59 m3_get_second_ingredient
1;2 71 pathaction!2_1;2,3393
Consider method^3_4;2;1,1247 1247 _m3_get_second_ingredient_2
4;2;1 9 pathaction!3_4;2;1,632
Consider method^3_2;1;1,440 440 m8_do_fill_shot
2;1;1 74 pathaction!3_2;1;1,2280
Consider method^3_8;1;2,2377 2377 _m2_get_first_ingredient_3
8;1;2 317 pathaction!3_8;1;2,1083
Consider method^3_3;3;1,504 504 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2>
3;3;1 234 pathaction!3_3;3;1,2113
Consider method^2_1;3,3697 3697 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 253 pathaction!2_1;3,3064
Consider method^3_4;1;1,3680 3680 m9_do_fill_shot
4;1;1 279 pathaction!3_4;1;1,2373
Consider method^1_3,702 702 m0_do_cocktail_in_shot1
3 309 pathaction!1_3,71
Consider method^2_12;1,2023 2023 m9_do_fill_shot
12;1 338 pathaction!2_12;1,2316
Consider method^1_10,915 915 m0_do_cocktail_in_shot1
10 112 pathaction!1_10,69
Consider method^3_2;2;2,2152 2152 _m3_get_second_ingredient_3
2;2;2 33 pathaction!3_2;2;2,2260
Consider method^3_7;1;2,287 287 _m2_get_first_ingredient_3
7;1;2 152 pathaction!3_7;1;2,1027
Consider method^2_8;3,2674 2674 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 202 pathaction!2_8;3,3062
Consider method^3_8;1;1,36 36 m9_do_fill_shot
8;1;1 230 pathaction!3_8;1;1,2363
Consider method^2_6;2,2350 2350 m3_get_second_ingredient
6;2 303 pathaction!2_6;2,3386
Consider method^3_6;2;1,3896 3896 _m3_get_second_ingredient_2
6;2;1 19 pathaction!3_6;2;1,492
Consider method^1_11,398 398 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
11 210 pathaction!1_11,1399
Consider method^3_10;3;1,711 711 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 304 pathaction!3_10;3;1,2119
Consider method^3_0;1;1,805 805 m8_do_fill_shot
0;1;1 61 pathaction!3_0;1;1,2373
Consider method^2_7;2,2835 2835 m3_get_second_ingredient
7;2 48 pathaction!2_7;2,3392
Consider method^3_0;3;1,1741 1741 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 203 pathaction!3_0;3;1,2114
Consider method^3_6;1;1,2280 2280 m8_do_fill_shot
6;1;1 339 pathaction!3_6;1;1,2301
Consider method^3_1;2;1,3860 3860 _m3_get_second_ingredient_2
1;2;1 247 pathaction!3_1;2;1,609
Consider method^3_8;1;3,3730 3730 _m2_get_first_ingredient_4
8;1;3 341 pathaction!3_8;1;3,2485
Consider method^3_8;3;1,3700 3700 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2>
8;3;1 249 pathaction!3_8;3;1,2111
Consider method^2_6;3,3881 3881 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 146 pathaction!2_6;3,3061
Consider method^3_8;2;1,4001 4001 _m3_get_second_ingredient_2
8;2;1 224 pathaction!3_8;2;1,549
Consider method^1_7,3026 3026 m0_do_cocktail_in_shot1
7 220 pathaction!1_7,62
Consider method^0_,4026 4026 __top_1
 0 pathaction!0_,3439


CHECKING primitive solution of length 245 ...
true 239 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 116 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot15;]
true 348 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser2,ingredient2;]
true 206 grasp[left,shot15;]
true 149 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 91 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1;]
true 28 clean-shot[shot15,ingredient2,left,right;]
true 191 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient5,left,shot15;]
true 325 fill-shot[shot15,ingredient5,left,right,dispenser5;]
true 207 pour-shot-to-used-shaker[shot15,ingredient5,shaker1,left,l1,l2;]
true 155 leave[left,shot15;]
true 351 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient5;]
true 301 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 171 nop[;]
true 335 grasp[left,shaker1;]
true 163 shake[cocktail3,ingredient2,ingredient5,shaker1,left,right;]
true 343 pour-shaker-to-shot[cocktail3,shot1,left,shaker1,l2,l1;]
true 265 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 321 clean-shaker[left,right,shaker1;]
true 215 leave[left,shaker1;]
true 86 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 159 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot15;]
true 165 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient5,dispenser4;]
true 17 grasp[right,shot15;]
true 327 clean-shot[shot15,ingredient5,right,left;]
true 117 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 258 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 300 clean-shot[shot15,ingredient4,right,left;]
true 213 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,right,shot15;]
true 245 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 342 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 314 leave[right,shot15;]
true 128 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient1;]
true 25 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 140 nop[;]
true 111 grasp[right,shaker1;]
true 271 shake[cocktail7,ingredient4,ingredient1,shaker1,right,left;]
true 103 pour-shaker-to-shot[cocktail7,shot2,right,shaker1,l2,l1;]
true 119 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 92 clean-shaker[right,left,shaker1;]
true 322 leave[right,shaker1;]
true 176 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 326 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot12;]
true 70 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser3,ingredient3;]
true 106 grasp[left,shot12;]
true 123 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 244 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,left,l0,l1;]
true 43 clean-shot[shot12,ingredient3,left,right;]
true 85 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,left,shot12;]
true 53 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 275 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2;]
true 296 leave[left,shot12;]
true 287 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1;]
true 169 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 144 nop[;]
true 200 grasp[right,shaker1;]
true 68 shake[cocktail1,ingredient3,ingredient1,shaker1,right,left;]
true 73 pour-shaker-to-shot[cocktail1,shot3,right,shaker1,l2,l1;]
true 98 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 44 clean-shaker[right,left,shaker1;]
true 133 leave[right,shaker1;]
true 110 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 336 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot12;]
true 69 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient1,dispenser4;]
true 24 grasp[left,shot12;]
true 93 clean-shot[shot12,ingredient1,left,right;]
true 5 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 297 pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,left,l0,l1;]
true 186 clean-shot[shot12,ingredient4,left,right;]
true 332 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient2,left,shot12;]
true 39 fill-shot[shot12,ingredient2,left,right,dispenser2;]
true 122 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,left,l1,l2;]
true 328 leave[left,shot12;]
true 38 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient2;]
true 130 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 269 nop[;]
true 190 grasp[right,shaker1;]
true 243 shake[cocktail6,ingredient4,ingredient2,shaker1,right,left;]
true 164 pour-shaker-to-shot[cocktail6,shot4,right,shaker1,l2,l1;]
true 282 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 334 clean-shaker[right,left,shaker1;]
true 188 leave[right,shaker1;]
true 26 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 214 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot15;]
true 2 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient1,dispenser2;]
true 153 grasp[left,shot15;]
true 267 clean-shot[shot15,ingredient1,left,right;]
true 313 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 150 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1;]
true 241 clean-shot[shot15,ingredient2,left,right;]
true 82 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient5,left,shot15;]
true 160 fill-shot[shot15,ingredient5,left,right,dispenser5;]
true 284 pour-shot-to-used-shaker[shot15,ingredient5,shaker1,left,l1,l2;]
true 305 leave[left,shot15;]
true 137 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient5;]
true 72 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 222 nop[;]
true 161 grasp[right,shaker1;]
true 115 shake[cocktail4,ingredient2,ingredient5,shaker1,right,left;]
true 135 pour-shaker-to-shot[cocktail4,shot5,right,shaker1,l2,l1;]
true 87 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 266 clean-shaker[right,left,shaker1;]
true 20 leave[right,shaker1;]
true 323 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 346 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot12;]
true 231 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient2,dispenser5;]
true 205 grasp[left,shot12;]
true 356 clean-shot[shot12,ingredient2,left,right;]
true 42 fill-shot[shot12,ingredient5,left,right,dispenser5;]
true 172 pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,left,l0,l1;]
true 278 clean-shot[shot12,ingredient5,left,right;]
true 50 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient2,left,shot12;]
true 62 fill-shot[shot12,ingredient2,left,right,dispenser2;]
true 31 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,left,l1,l2;]
true 180 leave[left,shot12;]
true 15 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient2;]
true 270 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 16 nop[;]
true 288 grasp[left,shaker1;]
true 107 shake[cocktail10,ingredient5,ingredient2,shaker1,left,right;]
true 268 pour-shaker-to-shot[cocktail10,shot6,left,shaker1,l2,l1;]
true 60 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 158 clean-shaker[left,right,shaker1;]
true 324 leave[left,shaker1;]
true 354 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 272 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient5,shot13;]
true 273 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser5,ingredient5;]
true 250 grasp[left,shot13;]
true 232 fill-shot[shot13,ingredient5,left,right,dispenser5;]
true 109 pour-shot-to-clean-shaker[shot13,ingredient5,shaker1,left,l0,l1;]
true 63 clean-shot[shot13,ingredient5,left,right;]
true 259 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot13;]
true 105 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 79 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 306 leave[left,shot13;]
true 235 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient5,ingredient3;]
true 136 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 126 nop[;]
true 101 grasp[right,shaker1;]
true 131 shake[cocktail9,ingredient5,ingredient3,shaker1,right,left;]
true 199 pour-shaker-to-shot[cocktail9,shot7,right,shaker1,l2,l1;]
true 340 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 302 clean-shaker[right,left,shaker1;]
true 204 leave[right,shaker1;]
true 289 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 292 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot13;]
true 316 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2;]
true 83 grasp[left,shot13;]
true 299 clean-shot[shot13,ingredient3,left,right;]
true 227 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 274 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 353 clean-shot[shot13,ingredient2,left,right;]
true 65 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient3,left,shot13;]
true 361 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 229 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 75 leave[left,shot13;]
true 13 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient3;]
true 228 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 54 nop[;]
true 178 grasp[right,shaker1;]
true 23 shake[cocktail8,ingredient2,ingredient3,shaker1,right,left;]
true 294 pour-shaker-to-shot[cocktail8,shot8,right,shaker1,l2,l1;]
true 345 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 99 clean-shaker[right,left,shaker1;]
true 286 leave[right,shaker1;]
true 18 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 216 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot12;]
true 1 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient2,dispenser3;]
true 102 grasp[right,shot12;]
true 84 clean-shot[shot12,ingredient2,right,left;]
true 154 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 242 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1;]
true 315 clean-shot[shot12,ingredient3,right,left;]
true 4 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot12;]
true 36 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 264 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2;]
true 66 leave[right,shot12;]
true 173 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient2;]
true 142 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 209 nop[;]
true 256 grasp[left,shaker1;]
true 57 shake[cocktail5,ingredient3,ingredient2,shaker1,left,right;]
true 254 pour-shaker-to-shot[cocktail5,shot9,left,shaker1,l2,l1;]
true 344 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 307 clean-shaker[left,right,shaker1;]
true 156 leave[left,shaker1;]
true 201 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 179 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient5,shot14;]
true 97 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser5,ingredient5;]
true 145 grasp[right,shot14;]
true 3 fill-shot[shot14,ingredient5,right,left,dispenser5;]
true 236 pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1;]
true 285 clean-shot[shot14,ingredient5,right,left;]
true 355 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,right,shot14;]
true 12 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 194 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2;]
true 100 leave[right,shot14;]
true 223 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient5,ingredient4;]
true 308 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 27 nop[;]
true 226 grasp[left,shaker1;]
true 34 shake[cocktail11,ingredient5,ingredient4,shaker1,left,right;]
true 114 pour-shaker-to-shot[cocktail11,shot10,left,shaker1,l2,l1;]
true 357 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 113 clean-shaker[left,right,shaker1;]
true 8 leave[left,shaker1;]
true 55 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 320 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot15;]
true 167 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient5,dispenser4;]
true 170 grasp[left,shot15;]
true 319 clean-shot[shot15,ingredient5,left,right;]
true 174 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 185 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 58 clean-shot[shot15,ingredient4,left,right;]
true 14 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot15;]
true 217 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 124 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 331 leave[left,shot15;]
true 94 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 237 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 257 nop[;]
true 45 grasp[right,shaker1;]
true 80 shake[cocktail2,ingredient4,ingredient3,shaker1,right,left;]
true 88 pour-shaker-to-shot[cocktail2,shot11,right,shaker1,l2,l1;]
true 252 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 129 clean-shaker[right,left,shaker1;]
true 280 leave[right,shaker1;]
true 11 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 358 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient2,dispenser1;]
true 64 grasp[right,shot12;]
true 352 clean-shot[shot12,ingredient2,right,left;]
true 218 fill-shot[shot12,ingredient1,right,left,dispenser1;]
true 166 leave[right,shot12;]
true 81 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 221 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient3,dispenser4;]
true 312 grasp[right,shot13;]
true 89 clean-shot[shot13,ingredient3,right,left;]
true 251 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 238 leave[right,shot13;]
true 148 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2;]
true 49 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient4,dispenser2;]
true 189 grasp[right,shot14;]
true 183 clean-shot[shot14,ingredient4,right,left;]
true 108 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 147 leave[right,shot14;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 498522440
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 387
number of actions                    = 3440
number of abstract actions           = 864
number of primitive actions          = 2576
number of methods                    = 4027
number of primitive shop actions     = 991
number of primitive non-shop actions = 1585
size of largest method               = 14
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 217790
number of clauses               = 1469710
average size of clauses         = 2.355663362159882
number of assert                = 171
number of horn                  = 1292804
K offset                        = 0
K chosen value                  = 4
state formula                   = 1202763
method children clauses         = 0
number of paths                 = 249
maximum plan length             = 249
number of decomposition clauses = 266947
number of ordering clauses      = 0
number of state clauses         = 1202763
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 17179
============ parsing ============
total                         = 1086
file parser                   = 607
sort expansion                = 231
closed world assumption       = 143
inherit preconditions         = 0
shop methods                  = 23
eliminate identical variables = 27
strip domain of hybridity     = 2
flatten formula               = 52
============ preprocessing ============
total                                      = 6031
compile negative preconditions             = 32
compile unit methods                       = 0
split parameter                            = 77
expand choiceless abstract tasks           = 568
compile methods with identical tasks       = 27
removing unnecessary predicates            = 986
lifted reachabiltiy analysis               = 76
grounded planning graph analysis           = 1639
grounded task decomposition graph analysis = 1940
grounding                                  = 622
create artificial top task                 = 9
============ search preparation ============
compute state invariants = 2623
============ sat ============
total                                        = 7374
generate formula                             = 5773
generate path decomposition tree             = 355
normalise path decomposition tree            = 109
sog optimisation                             = 78
translate path decomposition tree to clauses = 761
generate state formula                       = 5681
generate state invariant formula             = 685
transform to DIMACS                          = 430
SAT solver                                   = 870
SAT solver for K=0004                        = 870

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2576";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="864";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="498522440";"40 sat:20:state formula"="1202763";"40 sat:01:number of variables"="217790";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="249";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="4027";"30 problem:07:number of primitive shop actions"="991";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3440";"30 problem:08:number of primitive non-shop actions"="1585";"30 problem:02:number of predicates"="387";"40 sat:03:number of horn"="1292804";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="14";"40 sat:03:average size of clauses"="2.355663362159882";"40 sat:02:number of clauses"="1469710";"40 sat:50:number of state clauses"="1202763";"40 sat:03:number of assert"="171";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="249";"40 sat:50:number of decomposition clauses"="266947";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="607";"01 parsing:08:flatten formula"="52";"40 sat:41:SAT solver for K=0004"="870";"40 sat:00:total"="7374";"40 sat:16:generate state formula"="5681";"40 sat:20:transform to DIMACS"="430";"40 sat:11:generate path decomposition tree"="355";"02 preprocessing:07:compile methods with identical tasks"="27";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="986";"01 parsing:03:closed world assumption"="143";"02 preprocessing:11:lifted reachabiltiy analysis"="76";"01 parsing:02:sort expansion"="231";"40 sat:12:normalise path decomposition tree"="109";"40 sat:40:SAT solver"="870";"01 parsing:00:total"="1086";"40 sat:10:generate formula"="5773";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="32";"00 total:00:total"="17179";"40 sat:13:sog optimisation"="78";"02 preprocessing:12:grounded planning graph analysis"="1639";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1940";"02 preprocessing:04:split parameter"="77";"01 parsing:05:shop methods"="23";"10 search preparation:02:compute state invariants"="2623";"01 parsing:06:eliminate identical variables"="27";"40 sat:15:translate path decomposition tree to clauses"="761";"02 preprocessing:05:expand choiceless abstract tasks"="568";"40 sat:17:generate state invariant formula"="685";"02 preprocessing:00:total"="6031";"02 preprocessing:99:create artificial top task"="9";"02 preprocessing:84:grounding"="622"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser2,ingredient2];grasp[left,shot15];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1];clean-shot[shot15,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient5,left,shot15];fill-shot[shot15,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot15,ingredient5,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail3,ingredient2,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient5,dispenser4];grasp[right,shot15];clean-shot[shot15,ingredient5,right,left];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1];clean-shot[shot15,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,right,shot15];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail7,ingredient4,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail7,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail7,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot12];__method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser3,ingredient3];grasp[left,shot12];fill-shot[shot12,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,left,l0,l1];clean-shot[shot12,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,left,shot12];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail1,ingredient3,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail1,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail1,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient1,dispenser4];grasp[left,shot12];clean-shot[shot12,ingredient1,left,right];fill-shot[shot12,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,left,l0,l1];clean-shot[shot12,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient2,left,shot12];fill-shot[shot12,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot12,ingredient2,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[right,shaker1];shake[cocktail6,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot4,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient1,dispenser2];grasp[left,shot15];clean-shot[shot15,ingredient1,left,right];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1];clean-shot[shot15,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient5,left,shot15];fill-shot[shot15,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot15,ingredient5,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[right,shaker1];shake[cocktail4,ingredient2,ingredient5,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot5,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient2,dispenser5];grasp[left,shot12];clean-shot[shot12,ingredient2,left,right];fill-shot[shot12,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,left,l0,l1];clean-shot[shot12,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient2,left,shot12];fill-shot[shot12,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot12,ingredient2,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail10,ingredient5,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient5,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser5,ingredient5];grasp[left,shot13];fill-shot[shot13,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot13,ingredient5,shaker1,left,l0,l1];clean-shot[shot13,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient5,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[right,shaker1];shake[cocktail9,ingredient5,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot7,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2];grasp[left,shot13];clean-shot[shot13,ingredient3,left,right];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1];clean-shot[shot13,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail8,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient2,dispenser3];grasp[right,shot12];clean-shot[shot12,ingredient2,right,left];fill-shot[shot12,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1];clean-shot[shot12,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot12];fill-shot[shot12,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[left,shaker1];shake[cocktail5,ingredient3,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot9,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient5,shot14];__method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser5,ingredient5];grasp[right,shot14];fill-shot[shot14,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1];clean-shot[shot14,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,right,shot14];fill-shot[shot14,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient5,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail11,ingredient5,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail11,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail11,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient5,dispenser4];grasp[left,shot15];clean-shot[shot15,ingredient5,left,right];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1];clean-shot[shot15,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail2,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient2,dispenser1];grasp[right,shot12];clean-shot[shot12,ingredient2,right,left];fill-shot[shot12,ingredient1,right,left,dispenser1];leave[right,shot12];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient3,dispenser4];grasp[right,shot13];clean-shot[shot13,ingredient3,right,left];fill-shot[shot13,ingredient4,right,left,dispenser4];leave[right,shot13];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient4,dispenser2];grasp[right,shot14];clean-shot[shot14,ingredient4,right,left];fill-shot[shot14,ingredient2,right,left,dispenser2];leave[right,shot14]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient2 shot15 
2 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser2 ingredient2 
3 grasp left shot15 
4 fill-shot shot15 ingredient2 left right dispenser2 
5 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 
6 clean-shot shot15 ingredient2 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient5 left shot15 
8 fill-shot shot15 ingredient5 left right dispenser5 
9 pour-shot-to-used-shaker shot15 ingredient5 shaker1 left l1 l2 
10 leave left shot15 
11 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient2 ingredient5 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail3 ingredient2 ingredient5 shaker1 left right 
16 pour-shaker-to-shot cocktail3 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail3 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient4 shot15 
22 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient4 ingredient5 dispenser4 
23 grasp right shot15 
24 clean-shot shot15 ingredient5 right left 
25 fill-shot shot15 ingredient4 right left dispenser4 
26 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 
27 clean-shot shot15 ingredient4 right left 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient1 right shot15 
29 fill-shot shot15 ingredient1 right left dispenser1 
30 pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 
31 leave right shot15 
32 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient4 ingredient1 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp right shaker1 
36 shake cocktail7 ingredient4 ingredient1 shaker1 right left 
37 pour-shaker-to-shot cocktail7 shot2 right shaker1 l2 l1 
38 empty-shaker right shaker1 cocktail7 l1 l0 
39 clean-shaker right left shaker1 
40 leave right shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient3 shot12 
43 __method_precondition_m8_do_fill_shot_8_precondition shot12 dispenser3 ingredient3 
44 grasp left shot12 
45 fill-shot shot12 ingredient3 left right dispenser3 
46 pour-shot-to-clean-shaker shot12 ingredient3 shaker1 left l0 l1 
47 clean-shot shot12 ingredient3 left right 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient1 left shot12 
49 fill-shot shot12 ingredient1 left right dispenser1 
50 pour-shot-to-used-shaker shot12 ingredient1 shaker1 left l1 l2 
51 leave left shot12 
52 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient3 ingredient1 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp right shaker1 
56 shake cocktail1 ingredient3 ingredient1 shaker1 right left 
57 pour-shaker-to-shot cocktail1 shot3 right shaker1 l2 l1 
58 empty-shaker right shaker1 cocktail1 l1 l0 
59 clean-shaker right left shaker1 
60 leave right shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient4 shot12 
63 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient4 ingredient1 dispenser4 
64 grasp left shot12 
65 clean-shot shot12 ingredient1 left right 
66 fill-shot shot12 ingredient4 left right dispenser4 
67 pour-shot-to-clean-shaker shot12 ingredient4 shaker1 left l0 l1 
68 clean-shot shot12 ingredient4 left right 
69 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient2 left shot12 
70 fill-shot shot12 ingredient2 left right dispenser2 
71 pour-shot-to-used-shaker shot12 ingredient2 shaker1 left l1 l2 
72 leave left shot12 
73 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient4 ingredient2 
74 __method_precondition_m5_do_clean_shot_5_precondition shot4 
75 nop  
76 grasp right shaker1 
77 shake cocktail6 ingredient4 ingredient2 shaker1 right left 
78 pour-shaker-to-shot cocktail6 shot4 right shaker1 l2 l1 
79 empty-shaker right shaker1 cocktail6 l1 l0 
80 clean-shaker right left shaker1 
81 leave right shaker1 
82 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
83 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient2 shot15 
84 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient2 ingredient1 dispenser2 
85 grasp left shot15 
86 clean-shot shot15 ingredient1 left right 
87 fill-shot shot15 ingredient2 left right dispenser2 
88 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 
89 clean-shot shot15 ingredient2 left right 
90 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient5 left shot15 
91 fill-shot shot15 ingredient5 left right dispenser5 
92 pour-shot-to-used-shaker shot15 ingredient5 shaker1 left l1 l2 
93 leave left shot15 
94 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient2 ingredient5 
95 __method_precondition_m5_do_clean_shot_5_precondition shot5 
96 nop  
97 grasp right shaker1 
98 shake cocktail4 ingredient2 ingredient5 shaker1 right left 
99 pour-shaker-to-shot cocktail4 shot5 right shaker1 l2 l1 
100 empty-shaker right shaker1 cocktail4 l1 l0 
101 clean-shaker right left shaker1 
102 leave right shaker1 
103 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
104 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient5 shot12 
105 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient5 ingredient2 dispenser5 
106 grasp left shot12 
107 clean-shot shot12 ingredient2 left right 
108 fill-shot shot12 ingredient5 left right dispenser5 
109 pour-shot-to-clean-shaker shot12 ingredient5 shaker1 left l0 l1 
110 clean-shot shot12 ingredient5 left right 
111 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient2 left shot12 
112 fill-shot shot12 ingredient2 left right dispenser2 
113 pour-shot-to-used-shaker shot12 ingredient2 shaker1 left l1 l2 
114 leave left shot12 
115 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient5 ingredient2 
116 __method_precondition_m5_do_clean_shot_5_precondition shot6 
117 nop  
118 grasp left shaker1 
119 shake cocktail10 ingredient5 ingredient2 shaker1 left right 
120 pour-shaker-to-shot cocktail10 shot6 left shaker1 l2 l1 
121 empty-shaker left shaker1 cocktail10 l1 l0 
122 clean-shaker left right shaker1 
123 leave left shaker1 
124 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
125 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient5 shot13 
126 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser5 ingredient5 
127 grasp left shot13 
128 fill-shot shot13 ingredient5 left right dispenser5 
129 pour-shot-to-clean-shaker shot13 ingredient5 shaker1 left l0 l1 
130 clean-shot shot13 ingredient5 left right 
131 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient3 left shot13 
132 fill-shot shot13 ingredient3 left right dispenser3 
133 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
134 leave left shot13 
135 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient5 ingredient3 
136 __method_precondition_m5_do_clean_shot_5_precondition shot7 
137 nop  
138 grasp right shaker1 
139 shake cocktail9 ingredient5 ingredient3 shaker1 right left 
140 pour-shaker-to-shot cocktail9 shot7 right shaker1 l2 l1 
141 empty-shaker right shaker1 cocktail9 l1 l0 
142 clean-shaker right left shaker1 
143 leave right shaker1 
144 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 left 
145 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient2 shot13 
146 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient2 ingredient3 dispenser2 
147 grasp left shot13 
148 clean-shot shot13 ingredient3 left right 
149 fill-shot shot13 ingredient2 left right dispenser2 
150 pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 
151 clean-shot shot13 ingredient2 left right 
152 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient3 left shot13 
153 fill-shot shot13 ingredient3 left right dispenser3 
154 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
155 leave left shot13 
156 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient2 ingredient3 
157 __method_precondition_m5_do_clean_shot_5_precondition shot8 
158 nop  
159 grasp right shaker1 
160 shake cocktail8 ingredient2 ingredient3 shaker1 right left 
161 pour-shaker-to-shot cocktail8 shot8 right shaker1 l2 l1 
162 empty-shaker right shaker1 cocktail8 l1 l0 
163 clean-shaker right left shaker1 
164 leave right shaker1 
165 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
166 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient3 shot12 
167 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient3 ingredient2 dispenser3 
168 grasp right shot12 
169 clean-shot shot12 ingredient2 right left 
170 fill-shot shot12 ingredient3 right left dispenser3 
171 pour-shot-to-clean-shaker shot12 ingredient3 shaker1 right l0 l1 
172 clean-shot shot12 ingredient3 right left 
173 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient2 right shot12 
174 fill-shot shot12 ingredient2 right left dispenser2 
175 pour-shot-to-used-shaker shot12 ingredient2 shaker1 right l1 l2 
176 leave right shot12 
177 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient3 ingredient2 
178 __method_precondition_m5_do_clean_shot_5_precondition shot9 
179 nop  
180 grasp left shaker1 
181 shake cocktail5 ingredient3 ingredient2 shaker1 left right 
182 pour-shaker-to-shot cocktail5 shot9 left shaker1 l2 l1 
183 empty-shaker left shaker1 cocktail5 l1 l0 
184 clean-shaker left right shaker1 
185 leave left shaker1 
186 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 right 
187 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient5 shot14 
188 __method_precondition_m8_do_fill_shot_8_precondition shot14 dispenser5 ingredient5 
189 grasp right shot14 
190 fill-shot shot14 ingredient5 right left dispenser5 
191 pour-shot-to-clean-shaker shot14 ingredient5 shaker1 right l0 l1 
192 clean-shot shot14 ingredient5 right left 
193 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient4 right shot14 
194 fill-shot shot14 ingredient4 right left dispenser4 
195 pour-shot-to-used-shaker shot14 ingredient4 shaker1 right l1 l2 
196 leave right shot14 
197 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient5 ingredient4 
198 __method_precondition_m5_do_clean_shot_5_precondition shot10 
199 nop  
200 grasp left shaker1 
201 shake cocktail11 ingredient5 ingredient4 shaker1 left right 
202 pour-shaker-to-shot cocktail11 shot10 left shaker1 l2 l1 
203 empty-shaker left shaker1 cocktail11 l1 l0 
204 clean-shaker left right shaker1 
205 leave left shaker1 
206 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
207 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot15 
208 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient4 ingredient5 dispenser4 
209 grasp left shot15 
210 clean-shot shot15 ingredient5 left right 
211 fill-shot shot15 ingredient4 left right dispenser4 
212 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 
213 clean-shot shot15 ingredient4 left right 
214 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 left shot15 
215 fill-shot shot15 ingredient3 left right dispenser3 
216 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
217 leave left shot15 
218 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient3 
219 __method_precondition_m5_do_clean_shot_5_precondition shot11 
220 nop  
221 grasp right shaker1 
222 shake cocktail2 ingredient4 ingredient3 shaker1 right left 
223 pour-shaker-to-shot cocktail2 shot11 right shaker1 l2 l1 
224 empty-shaker right shaker1 cocktail2 l1 l0 
225 clean-shaker right left shaker1 
226 leave right shaker1 
227 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser1 ingredient1 
228 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient1 ingredient2 dispenser1 
229 grasp right shot12 
230 clean-shot shot12 ingredient2 right left 
231 fill-shot shot12 ingredient1 right left dispenser1 
232 leave right shot12 
233 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser4 ingredient4 
234 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient3 dispenser4 
235 grasp right shot13 
236 clean-shot shot13 ingredient3 right left 
237 fill-shot shot13 ingredient4 right left dispenser4 
238 leave right shot13 
239 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser2 ingredient2 
240 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient2 ingredient4 dispenser2 
241 grasp right shot14 
242 clean-shot shot14 ingredient4 right left 
243 fill-shot shot14 ingredient2 right left dispenser2 
244 leave right shot14 
root 300
245 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 219 220
246 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 109
247 do_fill_shot shot13 ingredient2 left  -> m9_do_fill_shot 146 147 148 149
248 do_cocktail_in_shot1 shot6 cocktail10  -> m0_do_cocktail_in_shot1 103 266 318 353
249 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 53 54
250 do_cocktail_in_shot1 shot3 cocktail1  -> m0_do_cocktail_in_shot1 41 291 342 296
251 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient4 right  -> _m3_get_second_ingredient_2 194
252 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 1 254 278 290
253 do_cocktail_in_shot1 shot4 cocktail6  -> m0_do_cocktail_in_shot1 61 280 351 270
254 do_fill_shot shot15 ingredient2 left  -> m8_do_fill_shot 2 3 4
255 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 26
256 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 157 158
257 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 166 321 343 360
258 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 left  -> _m2_get_first_ingredient_4 213
259 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 7 285 260 10
260 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 9
261 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 212
262 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 175
263 get_first_ingredient cocktail7 right  -> m2_get_first_ingredient 21 299 255 352
264 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 67
265 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient5 left  -> _m2_get_first_ingredient_4 110
266 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 104 272 246 265
267 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 92
268 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 88
269 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 46
270 serve_shot shot4 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 73 335 76 77 78 79 80 81
271 do_fill_shot shot13 ingredient5 left  -> m8_do_fill_shot 126 127 128
272 do_fill_shot shot12 ingredient5 left  -> m9_do_fill_shot 105 106 107 108
273 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient2 right  -> _m3_get_second_ingredient_2 174
274 do_cocktail_in_shot1 shot1 cocktail3  -> m0_do_cocktail_in_shot1 0 252 259 333
275 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 150
276 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient3 left  -> _m2_get_first_ingredient_4 47
277 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 195
278 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 5
279 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient5 left  -> _m2_get_first_ingredient_4 130
280 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 62 292 264 331
281 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient5 left  -> _m3_get_second_ingredient_2 91
282 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 113
283 do_cocktail_in_shot1 shot5 cocktail4  -> m0_do_cocktail_in_shot1 82 340 288 287
284 get_second_ingredient cocktail7 right  -> m3_get_second_ingredient 28 346 314 31
285 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient5 left  -> _m3_get_second_ingredient_2 8
286 serve_shot shot8 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 156 256 159 160 161 162 163 164
287 serve_shot shot5 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 94 320 97 98 99 100 101 102
288 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 90 281 267 93
289 do_cocktail_in_shot1 shot10 cocktail11  -> m0_do_cocktail_in_shot1 186 305 361 313
290 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 left  -> _m2_get_first_ingredient_4 6
291 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 42 306 269 276
292 do_fill_shot shot12 ingredient4 left  -> m9_do_fill_shot 63 64 65 66
293 serve_shot shot7 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 135 316 138 139 140 141 142 143
294 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient5 right  -> _m2_get_first_ingredient_4 192
295 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 left  -> _m2_get_first_ingredient_4 89
296 serve_shot shot3 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 52 249 55 56 57 58 59 60
297 get_second_ingredient cocktail2 left  -> m3_get_second_ingredient 214 322 298 217
298 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 216
299 do_fill_shot shot15 ingredient4 right  -> m9_do_fill_shot 22 23 24 25
300 __choicelessATCompilation__top_1  -> __top_1 274 350 250 253 283 248 309 308 330 289 319 329 310 341
301 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 153
302 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 152 301 307 155
303 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2> 198 199
304 do_fill_shot shot14 ingredient2 right  -> m9_do_fill_shot 240 241 242 243
305 get_first_ingredient cocktail11 right  -> m2_get_first_ingredient 187 337 339 294
306 do_fill_shot shot12 ingredient3 left  -> m8_do_fill_shot 43 44 45
307 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 154
308 do_cocktail_in_shot1 shot8 cocktail8  -> m0_do_cocktail_in_shot1 144 324 302 286
309 do_cocktail_in_shot1 shot7 cocktail9  -> m0_do_cocktail_in_shot1 124 325 348 293
310 do_cocktail_in_shot2 shot13 ingredient4  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 233 354 238
311 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 173 273 262 176
312 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient1 left  -> _m3_get_second_ingredient_2 49
313 serve_shot shot10 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 197 303 200 201 202 203 204 205
314 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 30
315 serve_shot shot9 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 177 338 180 181 182 183 184 185
316 do_clean_shot_m4_serve_shot_sip_2 shot7 left  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2> 136 137
317 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 50
318 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 111 328 282 114
319 do_cocktail_in_shot1 shot11 cocktail2  -> m0_do_cocktail_in_shot1 206 345 297 326
320 do_clean_shot_m4_serve_shot_sip_2 shot5 left  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2> 95 96
321 do_fill_shot shot12 ingredient3 right  -> m9_do_fill_shot 167 168 169 170
322 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 215
323 serve_shot shot2 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 32 336 35 36 37 38 39 40
324 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 145 247 275 327
325 get_first_ingredient cocktail9 left  -> m2_get_first_ingredient 125 271 332 279
326 serve_shot shot11 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 218 245 221 222 223 224 225 226
327 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient2 left  -> _m2_get_first_ingredient_4 151
328 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient2 left  -> _m3_get_second_ingredient_2 112
329 do_cocktail_in_shot2 shot12 ingredient1  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 227 359 232
330 do_cocktail_in_shot1 shot9 cocktail5  -> m0_do_cocktail_in_shot1 165 257 311 315
331 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient4 left  -> _m2_get_first_ingredient_4 68
332 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 129
333 serve_shot shot1 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 358 14 15 16 17 18 19
334 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 133
335 do_clean_shot_m4_serve_shot_sip_2 shot4 left  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2> 74 75
336 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 33 34
337 do_fill_shot shot14 ingredient5 right  -> m8_do_fill_shot 188 189 190
338 do_clean_shot_m4_serve_shot_sip_2 shot9 right  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2> 178 179
339 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 191
340 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 83 357 268 295
341 do_cocktail_in_shot2 shot14 ingredient2  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 239 304 244
342 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 48 312 317 51
343 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 171
344 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 71
345 get_first_ingredient cocktail2 left  -> m2_get_first_ingredient 207 356 261 258
346 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient1 right  -> _m3_get_second_ingredient_2 29
347 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient2 left  -> _m3_get_second_ingredient_2 70
348 get_second_ingredient cocktail9 left  -> m3_get_second_ingredient 131 355 334 134
349 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 116 117
350 do_cocktail_in_shot1 shot2 cocktail7  -> m0_do_cocktail_in_shot1 20 263 284 323
351 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 69 347 344 72
352 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 right  -> _m2_get_first_ingredient_4 27
353 serve_shot shot6 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 115 349 118 119 120 121 122 123
354 do_fill_shot shot13 ingredient4 right  -> m9_do_fill_shot 234 235 236 237
355 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 132
356 do_fill_shot shot15 ingredient4 left  -> m9_do_fill_shot 208 209 210 211
357 do_fill_shot shot15 ingredient2 left  -> m9_do_fill_shot 84 85 86 87
358 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
359 do_fill_shot shot12 ingredient1 right  -> m9_do_fill_shot 228 229 230 231
360 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient3 right  -> _m2_get_first_ingredient_4 172
361 get_second_ingredient cocktail11 right  -> m3_get_second_ingredient 193 251 277 196

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 18.700 MEMPEAK_KBS 707192.832
