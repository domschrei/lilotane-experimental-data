PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/childsnack/domain.hddl instances/childsnack/p12.hddl"


Planner Configuration
=====================
Domain: instances/childsnack/domain.hddl
Problem: instances/childsnack/p12.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p12.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 13
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 76
Compiling negative preconditions ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 76
Compiling split parameters ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 76
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 76
Grounded planning graph ... done in 1226ms.
	Number of Grounded Actions 32760
	Number of Grounded Literals 250
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 76
Two Way TDG ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 76
Grounding ... done.
	number of abstract tasks = 16
	number of tasks = 29497
	number of decomposition methods = 76608
	number of predicates = 282
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 16
	number of tasks = 29497
	number of decomposition methods = 76608
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 4607ms.
	Number of Grounded Actions 29481
	Number of Grounded Literals 186
	number of abstract tasks = 16
	number of tasks = 29497
	number of decomposition methods = 76608
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 16
	number of tasks = 29497
	number of decomposition methods = 76608
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 16
	number of tasks = 29497
	number of decomposition methods = 76608
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 17
	number of tasks = 29498
	number of decomposition methods = 76609
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 17
	number of tasks = 29498
	number of decomposition methods = 76609
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1363ms.
	Number of Grounded Actions 29481
	Number of Grounded Literals 186
	number of abstract tasks = 17
	number of tasks = 29498
	number of decomposition methods = 76609
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 17
	number of tasks = 29498
	number of decomposition methods = 76609
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 17
	number of tasks = 29498
	number of decomposition methods = 76609
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 17
	number of tasks = 29498
	number of decomposition methods = 76609
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 17
	number of tasks = 29498
	number of decomposition methods = 76609
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 17
	number of tasks = 29498
	number of decomposition methods = 76609
	number of predicates = 186
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 25536
	number of epsilon methods = 0
	number of primitive tasks = 29481
	number of constants = 0
Tasks 29481 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854714103ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854711930
done
initial PDT has 96 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 96 leafs
SHOP LEAFS 16
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 51615
Size 51614 at 0/29481
Size 51552 at 500/29481
Size 51552 at 1000/29481
Size 51552 at 1500/29481
Size 51552 at 2000/29481
Size 51552 at 2500/29481
Size 51552 at 3000/29481
Size 51552 at 3500/29481
Size 51552 at 4000/29481
Size 51552 at 4500/29481
Size 35028 at 5000/29481
Size 31860 at 5500/29481
Size 31860 at 6000/29481
Size 31860 at 6500/29481
Size 31860 at 7000/29481
Size 31860 at 7500/29481
Size 31860 at 8000/29481
Size 31860 at 8500/29481
Size 31860 at 9000/29481
Size 31860 at 9500/29481
Size 31860 at 10000/29481
Size 31860 at 10500/29481
Size 31860 at 11000/29481
Size 31860 at 11500/29481
Size 31860 at 12000/29481
Size 31860 at 12500/29481
Size 31860 at 13000/29481
Size 31860 at 13500/29481
Size 31860 at 14000/29481
Size 31860 at 14500/29481
Size 31860 at 15000/29481
Size 31860 at 15500/29481
Size 31860 at 16000/29481
Size 31860 at 16500/29481
Size 31860 at 17000/29481
Size 31860 at 17500/29481
Size 31860 at 18000/29481
Size 31860 at 18500/29481
Size 31860 at 19000/29481
Size 31860 at 19500/29481
Size 31860 at 20000/29481
Size 31860 at 20500/29481
Size 31860 at 21000/29481
Size 31860 at 21500/29481
Size 31860 at 22000/29481
Size 31860 at 22500/29481
Size 31860 at 23000/29481
Size 31860 at 23500/29481
Size 31860 at 24000/29481
Size 31860 at 24500/29481
Size 31860 at 25000/29481
Size 31860 at 25500/29481
Size 31860 at 26000/29481
Size 31597 at 26500/29481
Size 30992 at 27000/29481
Size 25318 at 27500/29481
Size 25318 at 28000/29481
Size 25318 at 28500/29481
Size 25318 at 29000/29481
Size 24796
Size 24509 at 0/29481
Size 4909 at 500/29481
Size 4909 at 1000/29481
Size 4909 at 1500/29481
Size 4909 at 2000/29481
Size 4909 at 2500/29481
Size 4909 at 3000/29481
Size 4909 at 3500/29481
Size 4909 at 4000/29481
Size 4909 at 4500/29481
Size 4909 at 5000/29481
Size 4473 at 5500/29481
Size 4473 at 6000/29481
Size 4473 at 6500/29481
Size 4473 at 7000/29481
Size 4473 at 7500/29481
Size 4473 at 8000/29481
Size 4473 at 8500/29481
Size 4473 at 9000/29481
Size 4473 at 9500/29481
Size 4473 at 10000/29481
Size 4473 at 10500/29481
Size 4473 at 11000/29481
Size 4473 at 11500/29481
Size 4473 at 12000/29481
Size 4473 at 12500/29481
Size 4473 at 13000/29481
Size 4473 at 13500/29481
Size 4473 at 14000/29481
Size 4473 at 14500/29481
Size 4473 at 15000/29481
Size 4473 at 15500/29481
Size 4473 at 16000/29481
Size 4473 at 16500/29481
Size 4473 at 17000/29481
Size 4473 at 17500/29481
Size 4473 at 18000/29481
Size 4473 at 18500/29481
Size 4473 at 19000/29481
Size 4473 at 19500/29481
Size 4473 at 20000/29481
Size 4473 at 20500/29481
Size 4473 at 21000/29481
Size 4473 at 21500/29481
Size 4473 at 22000/29481
Size 4473 at 22500/29481
Size 4473 at 23000/29481
Size 4473 at 23500/29481
Size 4473 at 24000/29481
Size 4473 at 24500/29481
Size 4473 at 25000/29481
Size 4473 at 25500/29481
Size 4473 at 26000/29481
Size 1859 at 26500/29481
Size 1859 at 27000/29481
Size 1859 at 27500/29481
Size 1859 at 28000/29481
Size 1859 at 28500/29481
Size 1859 at 29000/29481
Size 249
Size 249 at 0/29481
Size 249 at 500/29481
Size 249 at 1000/29481
Size 249 at 1500/29481
Size 249 at 2000/29481
Size 249 at 2500/29481
Size 249 at 3000/29481
Size 249 at 3500/29481
Size 249 at 4000/29481
Size 249 at 4500/29481
Size 249 at 5000/29481
Size 249 at 5500/29481
Size 249 at 6000/29481
Size 249 at 6500/29481
Size 249 at 7000/29481
Size 249 at 7500/29481
Size 249 at 8000/29481
Size 249 at 8500/29481
Size 249 at 9000/29481
Size 249 at 9500/29481
Size 249 at 10000/29481
Size 249 at 10500/29481
Size 249 at 11000/29481
Size 249 at 11500/29481
Size 249 at 12000/29481
Size 249 at 12500/29481
Size 249 at 13000/29481
Size 249 at 13500/29481
Size 249 at 14000/29481
Size 249 at 14500/29481
Size 249 at 15000/29481
Size 249 at 15500/29481
Size 249 at 16000/29481
Size 249 at 16500/29481
Size 249 at 17000/29481
Size 249 at 17500/29481
Size 249 at 18000/29481
Size 249 at 18500/29481
Size 249 at 19000/29481
Size 249 at 19500/29481
Size 249 at 20000/29481
Size 249 at 20500/29481
Size 249 at 21000/29481
Size 249 at 21500/29481
Size 249 at 22000/29481
Size 249 at 22500/29481
Size 249 at 23000/29481
Size 249 at 23500/29481
Size 249 at 24000/29481
Size 249 at 24500/29481
Size 249 at 25000/29481
Size 249 at 25500/29481
Size 249 at 26000/29481
Size 249 at 26500/29481
Size 249 at 27000/29481
Size 249 at 27500/29481
Size 249 at 28000/29481
Size 249 at 28500/29481
Size 249 at 29000/29481
Size 249
Invariant time: 3.509
Number of invariants: 249
Invariant Clauses 24153
NUMBER OF CLAUSES 2533041
NUMBER OF STATE CLAUSES 277621
NUMBER OF DECOMPOSITION CLAUSES 2255420
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 10.96% 89.04% 0.0% 
NUMBER OF PATHS 96
Starting cryptominisat
Setting starttime of solver to 1603872928587
Command exited with non-zero status 10
1.98 0.02

Time command gave the following runtime for the solver: 2000
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_7,56904 56904 m1_serve
7 107 pathaction!1_7,0
Consider method^1_13,51121 51121 m1_serve
13 100 pathaction!1_13,6
Consider method^1_1,32755 32755 m0_serve
1 49 pathaction!1_1,7
Consider method^1_5,74743 74743 m0_serve
5 33 pathaction!1_5,13
Consider method^0_,76608 76608 __top_1
 35 pathaction!0_,29497
Consider method^1_11,18929 18929 m1_serve
11 74 pathaction!1_11,14
Consider method^1_2,22034 22034 m0_serve
2 89 pathaction!1_2,10
Consider method^1_3,53520 53520 m1_serve
3 79 pathaction!1_3,3
Consider method^1_14,45716 45716 m1_serve
14 60 pathaction!1_14,1
Consider method^1_6,69176 69176 m1_serve
6 96 pathaction!1_6,4
Consider method^1_8,73137 73137 m1_serve
8 34 pathaction!1_8,12
Consider method^1_12,7874 7874 m1_serve
12 38 pathaction!1_12,9
Consider method^1_9,48346 48346 m1_serve
9 83 pathaction!1_9,8
Consider method^1_15,26844 26844 m0_serve
15 78 pathaction!1_15,11
Consider method^1_10,32452 32452 m0_serve
10 39 pathaction!1_10,15
Consider method^1_4,6079 6079 m0_serve
4 76 pathaction!1_4,5
Consider method^1_0,68179 68179 m1_serve
0 88 pathaction!1_0,2


CHECKING primitive solution of length 96 ...
true 63 __method_precondition_m1_serve_1_precondition[table1,child1,bread11,content13,sandw19;]
true 70 make_sandwich[sandw19,bread11,content13;]
true 54 put_on_tray[sandw19,tray3;kitchen]
true 14 move_tray[tray3,kitchen,table1;]
true 57 serve_sandwich[sandw19,child1,tray3,table1;]
true 25 move_tray[tray3,table1,kitchen;]
true 102 __method_precondition_m0_serve_0_precondition[sandw16,child2,table2,content3,bread6;]
true 1 make_sandwich_no_gluten[sandw16,bread6,content3;]
true 66 put_on_tray[sandw16,tray1;kitchen]
true 93 move_tray[tray1,kitchen,table2;]
true 12 serve_sandwich_no_gluten[sandw16,child2,tray1,table2;]
true 52 move_tray[tray1,table2,kitchen;]
true 58 __method_precondition_m0_serve_0_precondition[sandw17,child3,table2,content16,bread13;]
true 101 make_sandwich_no_gluten[sandw17,bread13,content16;]
true 24 put_on_tray[sandw17,tray3;kitchen]
true 72 move_tray[tray3,kitchen,table2;]
true 94 serve_sandwich_no_gluten[sandw17,child3,tray3,table2;]
true 67 move_tray[tray3,table2,kitchen;]
true 16 __method_precondition_m1_serve_1_precondition[table1,child4,bread7,content2,sandw1;]
true 45 make_sandwich[sandw1,bread7,content2;]
true 105 put_on_tray[sandw1,tray3;kitchen]
true 51 move_tray[tray3,kitchen,table1;]
true 21 serve_sandwich[sandw1,child4,tray3,table1;]
true 71 move_tray[tray3,table1,kitchen;]
true 61 __method_precondition_m0_serve_0_precondition[sandw13,child5,table2,content4,bread14;]
true 44 make_sandwich_no_gluten[sandw13,bread14,content4;]
true 23 put_on_tray[sandw13,tray1;kitchen]
true 84 move_tray[tray1,kitchen,table2;]
true 81 serve_sandwich_no_gluten[sandw13,child5,tray1,table2;]
true 40 move_tray[tray1,table2,kitchen;]
true 26 __method_precondition_m0_serve_0_precondition[sandw4,child6,table1,content5,bread10;]
true 20 make_sandwich_no_gluten[sandw4,bread10,content5;]
true 10 put_on_tray[sandw4,tray2;kitchen]
true 31 move_tray[tray2,kitchen,table1;]
true 2 serve_sandwich_no_gluten[sandw4,child6,tray2,table1;]
true 111 move_tray[tray2,table1,kitchen;]
true 91 __method_precondition_m1_serve_1_precondition[table1,child7,bread9,content1,sandw18;]
true 92 make_sandwich[sandw18,bread9,content1;]
true 97 put_on_tray[sandw18,tray3;kitchen]
true 68 move_tray[tray3,kitchen,table1;]
true 64 serve_sandwich[sandw18,child7,tray3,table1;]
true 73 move_tray[tray3,table1,kitchen;]
true 56 __method_precondition_m1_serve_1_precondition[table3,child8,bread12,content9,sandw2;]
true 98 make_sandwich[sandw2,bread12,content9;]
true 90 put_on_tray[sandw2,tray3;kitchen]
true 5 move_tray[tray3,kitchen,table3;]
true 8 serve_sandwich[sandw2,child8,tray3,table3;]
true 87 move_tray[tray3,table3,kitchen;]
true 47 __method_precondition_m1_serve_1_precondition[table3,child9,bread2,content7,sandw3;]
true 50 make_sandwich[sandw3,bread2,content7;]
true 15 put_on_tray[sandw3,tray3;kitchen]
true 112 move_tray[tray3,kitchen,table3;]
true 99 serve_sandwich[sandw3,child9,tray3,table3;]
true 27 move_tray[tray3,table3,kitchen;]
true 104 __method_precondition_m1_serve_1_precondition[table2,child10,bread1,content15,sandw10;]
true 9 make_sandwich[sandw10,bread1,content15;]
true 36 put_on_tray[sandw10,tray3;kitchen]
true 42 move_tray[tray3,kitchen,table2;]
true 18 serve_sandwich[sandw10,child10,tray3,table2;]
true 32 move_tray[tray3,table2,kitchen;]
true 28 __method_precondition_m0_serve_0_precondition[sandw8,child11,table3,content11,bread3;]
true 95 make_sandwich_no_gluten[sandw8,bread3,content11;]
true 62 put_on_tray[sandw8,tray2;kitchen]
true 75 move_tray[tray2,kitchen,table3;]
true 6 serve_sandwich_no_gluten[sandw8,child11,tray2,table3;]
true 4 move_tray[tray2,table3,kitchen;]
true 110 __method_precondition_m1_serve_1_precondition[table2,child12,bread4,content12,sandw5;]
true 41 make_sandwich[sandw5,bread4,content12;]
true 77 put_on_tray[sandw5,tray1;kitchen]
true 103 move_tray[tray1,kitchen,table2;]
true 55 serve_sandwich[sandw5,child12,tray1,table2;]
true 17 move_tray[tray1,table2,kitchen;]
true 43 __method_precondition_m1_serve_1_precondition[table2,child13,bread15,content6,sandw21;]
true 0 make_sandwich[sandw21,bread15,content6;]
true 69 put_on_tray[sandw21,tray3;kitchen]
true 86 move_tray[tray3,kitchen,table2;]
true 30 serve_sandwich[sandw21,child13,tray3,table2;]
true 3 move_tray[tray3,table2,kitchen;]
true 22 __method_precondition_m1_serve_1_precondition[table2,child14,bread5,content14,sandw11;]
true 53 make_sandwich[sandw11,bread5,content14;]
true 109 put_on_tray[sandw11,tray2;kitchen]
true 106 move_tray[tray2,kitchen,table2;]
true 11 serve_sandwich[sandw11,child14,tray2,table2;]
true 19 move_tray[tray2,table2,kitchen;]
true 46 __method_precondition_m1_serve_1_precondition[table2,child15,bread16,content8,sandw7;]
true 13 make_sandwich[sandw7,bread16,content8;]
true 85 put_on_tray[sandw7,tray3;kitchen]
true 82 move_tray[tray3,kitchen,table2;]
true 37 serve_sandwich[sandw7,child15,tray3,table2;]
true 48 move_tray[tray3,table2,kitchen;]
true 29 __method_precondition_m0_serve_0_precondition[sandw6,child16,table3,content10,bread8;]
true 80 make_sandwich_no_gluten[sandw6,bread8,content10;]
true 59 put_on_tray[sandw6,tray1;kitchen]
true 7 move_tray[tray1,kitchen,table3;]
true 65 serve_sandwich_no_gluten[sandw6,child16,tray1,table3;]
true 108 move_tray[tray1,table3,kitchen;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 3435554416
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 186
number of actions                    = 29498
number of abstract actions           = 17
number of primitive actions          = 29481
number of methods                    = 76609
number of primitive shop actions     = 25536
number of primitive non-shop actions = 3945
size of largest method               = 16
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 162056
number of clauses               = 2533041
average size of clauses         = 2.0739399796529154
number of assert                = 73
number of horn                  = 2529395
K offset                        = 0
K chosen value                  = 2
state formula                   = 277621
method children clauses         = 0
number of paths                 = 96
maximum plan length             = 96
number of decomposition clauses = 2255420
number of ordering clauses      = 0
number of state clauses         = 277621
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 87727
============ parsing ============
total                         = 1116
file parser                   = 578
sort expansion                = 185
closed world assumption       = 211
inherit preconditions         = 0
shop methods                  = 29
eliminate identical variables = 53
strip domain of hybridity     = 3
flatten formula               = 56
============ preprocessing ============
total                                      = 50765
compile negative preconditions             = 45
compile unit methods                       = 0
split parameter                            = 51
expand choiceless abstract tasks           = 79
compile methods with identical tasks       = 411
removing unnecessary predicates            = 13482
lifted reachabiltiy analysis               = 75
grounded planning graph analysis           = 11215
grounded task decomposition graph analysis = 19968
grounding                                  = 5134
create artificial top task                 = 190
============ search preparation ============
compute state invariants = 3595
============ sat ============
total                                        = 19833
generate formula                             = 13563
generate path decomposition tree             = 5172
normalise path decomposition tree            = 385
sog optimisation                             = 801
translate path decomposition tree to clauses = 2631
generate state formula                       = 13399
generate state invariant formula             = 38
transform to DIMACS                          = 4084
SAT solver                                   = 2000
SAT solver for K=0002                        = 2000

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="29481";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="17";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="3435554416";"40 sat:20:state formula"="277621";"40 sat:01:number of variables"="162056";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="96";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="76609";"30 problem:07:number of primitive shop actions"="25536";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="29498";"30 problem:08:number of primitive non-shop actions"="3945";"30 problem:02:number of predicates"="186";"40 sat:03:number of horn"="2529395";"40 sat:15:K chosen value"="2";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="16";"40 sat:03:average size of clauses"="2.0739399796529154";"40 sat:02:number of clauses"="2533041";"40 sat:50:number of state clauses"="277621";"40 sat:03:number of assert"="73";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="96";"40 sat:50:number of decomposition clauses"="2255420";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="578";"01 parsing:08:flatten formula"="56";"40 sat:00:total"="19833";"40 sat:16:generate state formula"="13399";"40 sat:20:transform to DIMACS"="4084";"40 sat:11:generate path decomposition tree"="5172";"02 preprocessing:07:compile methods with identical tasks"="411";"01 parsing:07:strip domain of hybridity"="3";"02 preprocessing:08:removing unnecessary predicates"="13482";"01 parsing:03:closed world assumption"="211";"02 preprocessing:11:lifted reachabiltiy analysis"="75";"01 parsing:02:sort expansion"="185";"40 sat:12:normalise path decomposition tree"="385";"40 sat:40:SAT solver"="2000";"01 parsing:00:total"="1116";"40 sat:10:generate formula"="13563";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="2000";"02 preprocessing:01:compile negative preconditions"="45";"00 total:00:total"="87727";"40 sat:13:sog optimisation"="801";"02 preprocessing:12:grounded planning graph analysis"="11215";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="19968";"02 preprocessing:04:split parameter"="51";"01 parsing:05:shop methods"="29";"10 search preparation:02:compute state invariants"="3595";"01 parsing:06:eliminate identical variables"="53";"40 sat:15:translate path decomposition tree to clauses"="2631";"02 preprocessing:05:expand choiceless abstract tasks"="79";"40 sat:17:generate state invariant formula"="38";"02 preprocessing:00:total"="50765";"02 preprocessing:99:create artificial top task"="190";"02 preprocessing:84:grounding"="5134"
#!verify __method_precondition_m1_serve_1_precondition[table1,child1,bread11,content13,sandw19];make_sandwich[sandw19,bread11,content13];put_on_tray[sandw19,tray3];move_tray[tray3,kitchen,table1];serve_sandwich[sandw19,child1,tray3,table1];move_tray[tray3,table1,kitchen];__method_precondition_m0_serve_0_precondition[sandw16,child2,table2,content3,bread6];make_sandwich_no_gluten[sandw16,bread6,content3];put_on_tray[sandw16,tray1];move_tray[tray1,kitchen,table2];serve_sandwich_no_gluten[sandw16,child2,tray1,table2];move_tray[tray1,table2,kitchen];__method_precondition_m0_serve_0_precondition[sandw17,child3,table2,content16,bread13];make_sandwich_no_gluten[sandw17,bread13,content16];put_on_tray[sandw17,tray3];move_tray[tray3,kitchen,table2];serve_sandwich_no_gluten[sandw17,child3,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m1_serve_1_precondition[table1,child4,bread7,content2,sandw1];make_sandwich[sandw1,bread7,content2];put_on_tray[sandw1,tray3];move_tray[tray3,kitchen,table1];serve_sandwich[sandw1,child4,tray3,table1];move_tray[tray3,table1,kitchen];__method_precondition_m0_serve_0_precondition[sandw13,child5,table2,content4,bread14];make_sandwich_no_gluten[sandw13,bread14,content4];put_on_tray[sandw13,tray1];move_tray[tray1,kitchen,table2];serve_sandwich_no_gluten[sandw13,child5,tray1,table2];move_tray[tray1,table2,kitchen];__method_precondition_m0_serve_0_precondition[sandw4,child6,table1,content5,bread10];make_sandwich_no_gluten[sandw4,bread10,content5];put_on_tray[sandw4,tray2];move_tray[tray2,kitchen,table1];serve_sandwich_no_gluten[sandw4,child6,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m1_serve_1_precondition[table1,child7,bread9,content1,sandw18];make_sandwich[sandw18,bread9,content1];put_on_tray[sandw18,tray3];move_tray[tray3,kitchen,table1];serve_sandwich[sandw18,child7,tray3,table1];move_tray[tray3,table1,kitchen];__method_precondition_m1_serve_1_precondition[table3,child8,bread12,content9,sandw2];make_sandwich[sandw2,bread12,content9];put_on_tray[sandw2,tray3];move_tray[tray3,kitchen,table3];serve_sandwich[sandw2,child8,tray3,table3];move_tray[tray3,table3,kitchen];__method_precondition_m1_serve_1_precondition[table3,child9,bread2,content7,sandw3];make_sandwich[sandw3,bread2,content7];put_on_tray[sandw3,tray3];move_tray[tray3,kitchen,table3];serve_sandwich[sandw3,child9,tray3,table3];move_tray[tray3,table3,kitchen];__method_precondition_m1_serve_1_precondition[table2,child10,bread1,content15,sandw10];make_sandwich[sandw10,bread1,content15];put_on_tray[sandw10,tray3];move_tray[tray3,kitchen,table2];serve_sandwich[sandw10,child10,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m0_serve_0_precondition[sandw8,child11,table3,content11,bread3];make_sandwich_no_gluten[sandw8,bread3,content11];put_on_tray[sandw8,tray2];move_tray[tray2,kitchen,table3];serve_sandwich_no_gluten[sandw8,child11,tray2,table3];move_tray[tray2,table3,kitchen];__method_precondition_m1_serve_1_precondition[table2,child12,bread4,content12,sandw5];make_sandwich[sandw5,bread4,content12];put_on_tray[sandw5,tray1];move_tray[tray1,kitchen,table2];serve_sandwich[sandw5,child12,tray1,table2];move_tray[tray1,table2,kitchen];__method_precondition_m1_serve_1_precondition[table2,child13,bread15,content6,sandw21];make_sandwich[sandw21,bread15,content6];put_on_tray[sandw21,tray3];move_tray[tray3,kitchen,table2];serve_sandwich[sandw21,child13,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m1_serve_1_precondition[table2,child14,bread5,content14,sandw11];make_sandwich[sandw11,bread5,content14];put_on_tray[sandw11,tray2];move_tray[tray2,kitchen,table2];serve_sandwich[sandw11,child14,tray2,table2];move_tray[tray2,table2,kitchen];__method_precondition_m1_serve_1_precondition[table2,child15,bread16,content8,sandw7];make_sandwich[sandw7,bread16,content8];put_on_tray[sandw7,tray3];move_tray[tray3,kitchen,table2];serve_sandwich[sandw7,child15,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m0_serve_0_precondition[sandw6,child16,table3,content10,bread8];make_sandwich_no_gluten[sandw6,bread8,content10];put_on_tray[sandw6,tray1];move_tray[tray1,kitchen,table3];serve_sandwich_no_gluten[sandw6,child16,tray1,table3];move_tray[tray1,table3,kitchen]
==>
0 __method_precondition_m1_serve_1_precondition table1 child1 bread11 content13 sandw19 
1 make_sandwich sandw19 bread11 content13 
2 put_on_tray sandw19 tray3 
3 move_tray tray3 kitchen table1 
4 serve_sandwich sandw19 child1 tray3 table1 
5 move_tray tray3 table1 kitchen 
6 __method_precondition_m0_serve_0_precondition sandw16 child2 table2 content3 bread6 
7 make_sandwich_no_gluten sandw16 bread6 content3 
8 put_on_tray sandw16 tray1 
9 move_tray tray1 kitchen table2 
10 serve_sandwich_no_gluten sandw16 child2 tray1 table2 
11 move_tray tray1 table2 kitchen 
12 __method_precondition_m0_serve_0_precondition sandw17 child3 table2 content16 bread13 
13 make_sandwich_no_gluten sandw17 bread13 content16 
14 put_on_tray sandw17 tray3 
15 move_tray tray3 kitchen table2 
16 serve_sandwich_no_gluten sandw17 child3 tray3 table2 
17 move_tray tray3 table2 kitchen 
18 __method_precondition_m1_serve_1_precondition table1 child4 bread7 content2 sandw1 
19 make_sandwich sandw1 bread7 content2 
20 put_on_tray sandw1 tray3 
21 move_tray tray3 kitchen table1 
22 serve_sandwich sandw1 child4 tray3 table1 
23 move_tray tray3 table1 kitchen 
24 __method_precondition_m0_serve_0_precondition sandw13 child5 table2 content4 bread14 
25 make_sandwich_no_gluten sandw13 bread14 content4 
26 put_on_tray sandw13 tray1 
27 move_tray tray1 kitchen table2 
28 serve_sandwich_no_gluten sandw13 child5 tray1 table2 
29 move_tray tray1 table2 kitchen 
30 __method_precondition_m0_serve_0_precondition sandw4 child6 table1 content5 bread10 
31 make_sandwich_no_gluten sandw4 bread10 content5 
32 put_on_tray sandw4 tray2 
33 move_tray tray2 kitchen table1 
34 serve_sandwich_no_gluten sandw4 child6 tray2 table1 
35 move_tray tray2 table1 kitchen 
36 __method_precondition_m1_serve_1_precondition table1 child7 bread9 content1 sandw18 
37 make_sandwich sandw18 bread9 content1 
38 put_on_tray sandw18 tray3 
39 move_tray tray3 kitchen table1 
40 serve_sandwich sandw18 child7 tray3 table1 
41 move_tray tray3 table1 kitchen 
42 __method_precondition_m1_serve_1_precondition table3 child8 bread12 content9 sandw2 
43 make_sandwich sandw2 bread12 content9 
44 put_on_tray sandw2 tray3 
45 move_tray tray3 kitchen table3 
46 serve_sandwich sandw2 child8 tray3 table3 
47 move_tray tray3 table3 kitchen 
48 __method_precondition_m1_serve_1_precondition table3 child9 bread2 content7 sandw3 
49 make_sandwich sandw3 bread2 content7 
50 put_on_tray sandw3 tray3 
51 move_tray tray3 kitchen table3 
52 serve_sandwich sandw3 child9 tray3 table3 
53 move_tray tray3 table3 kitchen 
54 __method_precondition_m1_serve_1_precondition table2 child10 bread1 content15 sandw10 
55 make_sandwich sandw10 bread1 content15 
56 put_on_tray sandw10 tray3 
57 move_tray tray3 kitchen table2 
58 serve_sandwich sandw10 child10 tray3 table2 
59 move_tray tray3 table2 kitchen 
60 __method_precondition_m0_serve_0_precondition sandw8 child11 table3 content11 bread3 
61 make_sandwich_no_gluten sandw8 bread3 content11 
62 put_on_tray sandw8 tray2 
63 move_tray tray2 kitchen table3 
64 serve_sandwich_no_gluten sandw8 child11 tray2 table3 
65 move_tray tray2 table3 kitchen 
66 __method_precondition_m1_serve_1_precondition table2 child12 bread4 content12 sandw5 
67 make_sandwich sandw5 bread4 content12 
68 put_on_tray sandw5 tray1 
69 move_tray tray1 kitchen table2 
70 serve_sandwich sandw5 child12 tray1 table2 
71 move_tray tray1 table2 kitchen 
72 __method_precondition_m1_serve_1_precondition table2 child13 bread15 content6 sandw21 
73 make_sandwich sandw21 bread15 content6 
74 put_on_tray sandw21 tray3 
75 move_tray tray3 kitchen table2 
76 serve_sandwich sandw21 child13 tray3 table2 
77 move_tray tray3 table2 kitchen 
78 __method_precondition_m1_serve_1_precondition table2 child14 bread5 content14 sandw11 
79 make_sandwich sandw11 bread5 content14 
80 put_on_tray sandw11 tray2 
81 move_tray tray2 kitchen table2 
82 serve_sandwich sandw11 child14 tray2 table2 
83 move_tray tray2 table2 kitchen 
84 __method_precondition_m1_serve_1_precondition table2 child15 bread16 content8 sandw7 
85 make_sandwich sandw7 bread16 content8 
86 put_on_tray sandw7 tray3 
87 move_tray tray3 kitchen table2 
88 serve_sandwich sandw7 child15 tray3 table2 
89 move_tray tray3 table2 kitchen 
90 __method_precondition_m0_serve_0_precondition sandw6 child16 table3 content10 bread8 
91 make_sandwich_no_gluten sandw6 bread8 content10 
92 put_on_tray sandw6 tray1 
93 move_tray tray1 kitchen table3 
94 serve_sandwich_no_gluten sandw6 child16 tray1 table3 
95 move_tray tray1 table3 kitchen 
root 100
96 serve child12  -> m1_serve 66 67 68 69 70 71
97 serve child14  -> m1_serve 78 79 80 81 82 83
98 serve child6  -> m0_serve 30 31 32 33 34 35
99 serve child13  -> m1_serve 72 73 74 75 76 77
100 __artificialTopCompilation__top_1  -> __top_1 105 112 103 102 101 98 108 107 104 109 111 96 99 97 110 106
101 serve child5  -> m0_serve 24 25 26 27 28 29
102 serve child4  -> m1_serve 18 19 20 21 22 23
103 serve child3  -> m0_serve 12 13 14 15 16 17
104 serve child9  -> m1_serve 48 49 50 51 52 53
105 serve child1  -> m1_serve 0 1 2 3 4 5
106 serve child16  -> m0_serve 90 91 92 93 94 95
107 serve child8  -> m1_serve 42 43 44 45 46 47
108 serve child7  -> m1_serve 36 37 38 39 40 41
109 serve child10  -> m1_serve 54 55 56 57 58 59
110 serve child15  -> m1_serve 84 85 86 87 88 89
111 serve child11  -> m0_serve 60 61 62 63 64 65
112 serve child2  -> m0_serve 6 7 8 9 10 11

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 88.856 MEMPEAK_KBS 3592120.32
