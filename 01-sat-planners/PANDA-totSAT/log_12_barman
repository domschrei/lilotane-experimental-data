PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig AAAI-2018-totSAT(cryptominisat) -programPath cryptominisat=./cryptominisat5 instances/barman/domain.hddl instances/barman/p12.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p12.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p12.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 43
Grounded planning graph ... done in 576ms.
	Number of Grounded Actions 3017
	Number of Grounded Literals 444
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 43
Two Way TDG ... done.
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 43
Grounding ... done.
	number of abstract tasks = 1488
	number of tasks = 4483
	number of decomposition methods = 5738
	number of predicates = 444
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1488
	number of tasks = 4483
	number of decomposition methods = 5738
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 438ms.
	Number of Grounded Actions 2995
	Number of Grounded Literals 414
	number of abstract tasks = 1488
	number of tasks = 4483
	number of decomposition methods = 5738
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1488
	number of tasks = 4483
	number of decomposition methods = 5738
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 1055
	number of tasks = 4050
	number of decomposition methods = 5305
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1055
	number of tasks = 4050
	number of decomposition methods = 5305
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1055
	number of tasks = 4050
	number of decomposition methods = 5305
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 269ms.
	Number of Grounded Actions 2995
	Number of Grounded Literals 414
	number of abstract tasks = 1055
	number of tasks = 4050
	number of decomposition methods = 5305
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1055
	number of tasks = 4050
	number of decomposition methods = 5005
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 1055
	number of tasks = 4050
	number of decomposition methods = 5005
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1055
	number of tasks = 4050
	number of decomposition methods = 5005
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1055
	number of tasks = 4050
	number of decomposition methods = 5005
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1055
	number of tasks = 4050
	number of decomposition methods = 5005
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2995
	number of constants = 0
Tasks 2995 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767145ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854766626
done
initial PDT has 315 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 315 leafs
SHOP LEAFS 105
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 256473
Size 256429 at 0/2995
Size 254969 at 500/2995
Size 212505 at 1000/2995
Size 35413 at 1500/2995
Size 34525 at 2000/2995
Size 29079 at 2500/2995
Size 29079
Size 25371 at 0/2995
Size 21910 at 500/2995
Size 20409 at 1000/2995
Size 13265 at 1500/2995
Size 4620 at 2000/2995
Size 4607 at 2500/2995
Size 4607
Size 4607 at 0/2995
Size 4607 at 500/2995
Size 4560 at 1000/2995
Size 4517 at 1500/2995
Size 4452 at 2000/2995
Size 4452 at 2500/2995
Size 4422
Size 4401 at 0/2995
Size 4362 at 500/2995
Size 4357 at 1000/2995
Size 4207 at 1500/2995
Size 4107 at 2000/2995
Size 4107 at 2500/2995
Size 4097
Size 4097 at 0/2995
Size 4097 at 500/2995
Size 4097 at 1000/2995
Size 4097 at 1500/2995
Size 4097 at 2000/2995
Size 4097 at 2500/2995
Size 4097
Invariant time: 2.63
Number of invariants: 4097
Invariant Clauses 1294652
NUMBER OF CLAUSES 2059755
NUMBER OF STATE CLAUSES 1664546
NUMBER OF DECOMPOSITION CLAUSES 395209
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 80.81% 19.19% 0.0% 
NUMBER OF PATHS 315
Starting cryptominisat
Setting starttime of solver to 1603870692862
Command exited with non-zero status 10
1.10 0.04

Time command gave the following runtime for the solver: 1140
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_0;2;1,1336 1336 _m3_get_second_ingredient_2
0;2;1 248 pathaction!3_0;2;1,1154
Consider method^3_5;2;2,4937 4937 _m3_get_second_ingredient_3
5;2;2 195 pathaction!3_5;2;2,1478
Consider method^3_4;1;2,2139 2139 _m2_get_first_ingredient_3
4;1;2 327 pathaction!3_4;1;2,2108
Consider method^2_12;2,3680 3680 m3_get_second_ingredient
12;2 65 pathaction!2_12;2,325
Consider method^3_9;1;2,1145 1145 _m2_get_first_ingredient_3
9;1;2 222 pathaction!3_9;1;2,2097
Consider method^2_14;2,1634 1634 m3_get_second_ingredient
14;2 134 pathaction!2_14;2,329
Consider method^3_11;2;2,715 715 _m3_get_second_ingredient_3
11;2;2 54 pathaction!3_11;2;2,1451
Consider method^3_7;2;1,3994 3994 _m3_get_second_ingredient_2
7;2;1 427 pathaction!3_7;2;1,1070
Consider method^3_1;2;1,1185 1185 _m3_get_second_ingredient_2
1;2;1 104 pathaction!3_1;2;1,1038
Consider method^3_11;2;1,1336 1336 _m3_get_second_ingredient_2
11;2;1 113 pathaction!3_11;2;1,1154
Consider method^3_11;3;1,1633 1633 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2>
11;3;1 128 pathaction!3_11;3;1,3365
Consider method^2_11;1,4158 4158 m2_get_first_ingredient
11;1 416 pathaction!2_11;1,3294
Consider method^3_12;1;1,666 666 m9_do_fill_shot
12;1;1 85 pathaction!3_12;1;1,764
Consider method^3_9;1;3,3189 3189 _m2_get_first_ingredient_4
9;1;3 410 pathaction!3_9;1;3,1226
Consider method^2_8;3,1285 1285 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
8;3 93 pathaction!2_8;3,1625
Consider method^3_5;3;1,747 747 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 247 pathaction!3_5;3;1,3371
Consider method^3_5;2;1,1508 1508 _m3_get_second_ingredient_2
5;2;1 174 pathaction!3_5;2;1,1088
Consider method^2_7;1,2531 2531 m2_get_first_ingredient
7;1 131 pathaction!2_7;1,3289
Consider method^2_1;3,1486 1486 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
1;3 409 pathaction!2_1;3,1622
Consider method^2_12;3,4703 4703 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot13,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
12;3 322 pathaction!2_12;3,1629
Consider method^3_12;2;1,1336 1336 _m3_get_second_ingredient_2
12;2;1 447 pathaction!3_12;2;1,1154
Consider method^2_10;2,1634 1634 m3_get_second_ingredient
10;2 319 pathaction!2_10;2,329
Consider method^3_11;1;2,3772 3772 _m2_get_first_ingredient_3
11;1;2 446 pathaction!3_11;1;2,2127
Consider method^2_13;3,907 907 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot14,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
13;3 37 pathaction!2_13;3,1620
Consider method^3_0;3;1,2504 2504 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2>
0;3;1 64 pathaction!3_0;3;1,3349
Consider method^2_8;1,3907 3907 m2_get_first_ingredient
8;1 154 pathaction!2_8;1,3300
Consider method^3_12;2;2,715 715 _m3_get_second_ingredient_3
12;2;2 329 pathaction!3_12;2;2,1451
Consider method^2_7;2,2886 2886 m3_get_second_ingredient
7;2 254 pathaction!2_7;2,320
Consider method^3_6;2;1,1508 1508 _m3_get_second_ingredient_2
6;2;1 348 pathaction!3_6;2;1,1088
Consider method^1_10,3579 3579 m0_do_cocktail_in_shot1
10 396 pathaction!1_10,3385
Consider method^2_13;1,1649 1649 m2_get_first_ingredient
13;1 71 pathaction!2_13;1,3307
Consider method^1_13,2063 2063 m0_do_cocktail_in_shot1
13 24 pathaction!1_13,3375
Consider method^3_5;1;2,3450 3450 _m2_get_first_ingredient_3
5;1;2 326 pathaction!3_5;1;2,2048
Consider method^3_13;1;2,259 259 _m2_get_first_ingredient_3
13;1;2 62 pathaction!3_13;1;2,2111
Consider method^3_8;2;1,3994 3994 _m3_get_second_ingredient_2
8;2;1 3 pathaction!3_8;2;1,1070
Consider method^3_11;1;1,3893 3893 m9_do_fill_shot
11;1;1 253 pathaction!3_11;1;1,764
Consider method^2_14;3,2937 2937 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot15,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
14;3 323 pathaction!2_14;3,1621
Consider method^3_9;1;1,4434 4434 m9_do_fill_shot
9;1;1 294 pathaction!3_9;1;1,748
Consider method^3_0;1;3,853 853 _m2_get_first_ingredient_4
0;1;3 456 pathaction!3_0;1;3,1242
Consider method^1_4,1069 1069 m0_do_cocktail_in_shot1
4 259 pathaction!1_4,3383
Consider method^3_7;2;2,1926 1926 _m3_get_second_ingredient_3
7;2;2 182 pathaction!3_7;2;2,1448
Consider method^3_7;3;1,1121 1121 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 419 pathaction!3_7;3;1,3352
Consider method^3_3;1;1,3934 3934 m9_do_fill_shot
3;1;1 127 pathaction!3_3;1;1,880
Consider method^1_1,3102 3102 m0_do_cocktail_in_shot1
1 139 pathaction!1_1,3377
Consider method^3_4;3;1,227 227 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 243 pathaction!3_4;3;1,3348
Consider method^3_3;2;2,3122 3122 _m3_get_second_ingredient_3
3;2;2 264 pathaction!3_3;2;2,1467
Consider method^3_7;1;2,3450 3450 _m2_get_first_ingredient_3
7;1;2 452 pathaction!3_7;1;2,2048
Consider method^2_7;3,2710 2710 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
7;3 249 pathaction!2_7;3,1623
Consider method^3_14;1;2,3450 3450 _m2_get_first_ingredient_3
14;1;2 289 pathaction!3_14;1;2,2048
Consider method^3_7;1;1,3830 3830 m9_do_fill_shot
7;1;1 291 pathaction!3_7;1;1,875
Consider method^3_0;1;2,3772 3772 _m2_get_first_ingredient_3
0;1;2 408 pathaction!3_0;1;2,2127
Consider method^2_6;2,514 514 m3_get_second_ingredient
6;2 70 pathaction!2_6;2,335
Consider method^3_10;2;2,3314 3314 _m3_get_second_ingredient_3
10;2;2 443 pathaction!3_10;2;2,1490
Consider method^3_2;3;1,2836 2836 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 367 pathaction!3_2;3;1,3374
Consider method^2_11;2,3680 3680 m3_get_second_ingredient
11;2 38 pathaction!2_11;2,325
Consider method^3_14;2;1,3576 3576 _m3_get_second_ingredient_2
14;2;1 156 pathaction!3_14;2;1,1068
Consider method^3_12;3;1,1936 1936 <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,left];m5_do_clean_shot;0;-1,-2>
12;3;1 324 pathaction!3_12;3;1,3351
Consider method^1_12,4184 4184 m0_do_cocktail_in_shot1
12 75 pathaction!1_12,3384
Consider method^3_9;2;1,3994 3994 _m3_get_second_ingredient_2
9;2;1 241 pathaction!3_9;2;1,1070
Consider method^2_5;3,199 199 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
5;3 185 pathaction!2_5;3,1627
Consider method^3_11;1;3,853 853 _m2_get_first_ingredient_4
11;1;3 178 pathaction!3_11;1;3,1242
Consider method^3_2;1;1,1958 1958 m9_do_fill_shot
2;1;1 337 pathaction!3_2;1;1,748
Consider method^3_12;1;3,853 853 _m2_get_first_ingredient_4
12;1;3 204 pathaction!3_12;1;3,1242
Consider method^3_6;3;1,2325 2325 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2>
6;3;1 206 pathaction!3_6;3;1,3364
Consider method^3_6;1;2,3450 3450 _m2_get_first_ingredient_3
6;1;2 29 pathaction!3_6;1;2,2048
Consider method^3_2;2;2,4937 4937 _m3_get_second_ingredient_3
2;2;2 177 pathaction!3_2;2;2,1478
Consider method^1_7,4175 4175 m0_do_cocktail_in_shot1
7 33 pathaction!1_7,3378
Consider method^3_2;2;1,1508 1508 _m3_get_second_ingredient_2
2;2;1 133 pathaction!3_2;2;1,1088
Consider method^2_0;1,4158 4158 m2_get_first_ingredient
0;1 281 pathaction!2_0;1,3294
Consider method^2_2;3,178 178 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
2;3 202 pathaction!2_2;3,1634
Consider method^3_3;1;3,4718 4718 _m2_get_first_ingredient_4
3;1;3 307 pathaction!3_3;1;3,1358
Consider method^2_1;2,4590 4590 m3_get_second_ingredient
1;2 105 pathaction!2_1;2,327
Consider method^3_14;1;3,3246 3246 _m2_get_first_ingredient_4
14;1;3 92 pathaction!3_14;1;3,1353
Consider method^2_10;3,593 593 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
10;3 176 pathaction!2_10;3,1630
Consider method^2_12;1,4158 4158 m2_get_first_ingredient
12;1 229 pathaction!2_12;1,3294
Consider method^3_8;1;1,3473 3473 m9_do_fill_shot
8;1;1 101 pathaction!3_8;1;1,794
Consider method^3_0;1;1,1930 1930 m8_do_fill_shot
0;1;1 258 pathaction!3_0;1;1,764
Consider method^3_8;2;2,1926 1926 _m3_get_second_ingredient_3
8;2;2 332 pathaction!3_8;2;2,1448
Consider method^3_4;1;3,1176 1176 _m2_get_first_ingredient_4
4;1;3 400 pathaction!3_4;1;3,1274
Consider method^1_9,551 551 m0_do_cocktail_in_shot1
9 136 pathaction!1_9,3388
Consider method^2_14;1,1004 1004 m2_get_first_ingredient
14;1 95 pathaction!2_14;1,3298
Consider method^3_6;1;3,3246 3246 _m2_get_first_ingredient_4
6;1;3 141 pathaction!3_6;1;3,1353
Consider method^3_0;2;2,715 715 _m3_get_second_ingredient_3
0;2;2 450 pathaction!3_0;2;2,1451
Consider method^3_3;2;1,1185 1185 _m3_get_second_ingredient_2
3;2;1 361 pathaction!3_3;2;1,1038
Consider method^2_0;3,4514 4514 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
0;3 124 pathaction!2_0;3,1624
Consider method^2_13;2,2902 2902 m3_get_second_ingredient
13;2 166 pathaction!2_13;2,338
Consider method^3_3;1;2,259 259 _m2_get_first_ingredient_3
3;1;2 395 pathaction!3_3;1;2,2111
Consider method^2_5;1,4238 4238 m2_get_first_ingredient
5;1 8 pathaction!2_5;1,3306
Consider method^3_8;1;2,3133 3133 _m2_get_first_ingredient_3
8;1;2 145 pathaction!3_8;1;2,2150
Consider method^1_6,3477 3477 m0_do_cocktail_in_shot1
6 96 pathaction!1_6,3381
Consider method^3_10;2;1,3576 3576 _m3_get_second_ingredient_2
10;2;1 330 pathaction!3_10;2;1,1068
Consider method^2_9;2,4393 4393 m3_get_second_ingredient
9;2 296 pathaction!2_9;2,330
Consider method^3_14;2;2,3314 3314 _m3_get_second_ingredient_3
14;2;2 159 pathaction!3_14;2;2,1490
Consider method^2_4;2,214 214 m3_get_second_ingredient
4;2 17 pathaction!2_4;2,321
Consider method^3_14;3;1,416 416 <_m4_serve_shot_2;do_clean_shot[shot15,cocktail7,left];m5_do_clean_shot;0;-1,-2>
14;3;1 355 pathaction!3_14;3;1,3346
Consider method^3_6;2;2,4937 4937 _m3_get_second_ingredient_3
6;2;2 340 pathaction!3_6;2;2,1478
Consider method^3_6;1;1,3830 3830 m9_do_fill_shot
6;1;1 67 pathaction!3_6;1;1,875
Consider method^2_8;2,4183 4183 m3_get_second_ingredient
8;2 344 pathaction!2_8;2,331
Consider method^2_3;1,1299 1299 m2_get_first_ingredient
3;1 388 pathaction!2_3;1,3295
Consider method^3_12;1;2,3772 3772 _m2_get_first_ingredient_3
12;1;2 142 pathaction!3_12;1;2,2127
Consider method^3_2;1;3,3189 3189 _m2_get_first_ingredient_4
2;1;3 316 pathaction!3_2;1;3,1226
Consider method^3_13;1;1,3828 3828 m7_do_fill_shot
13;1;1 349 pathaction!3_13;1;1,880
Consider method^3_1;2;2,3122 3122 _m3_get_second_ingredient_3
1;2;2 56 pathaction!3_1;2;2,1467
Consider method^3_9;3;1,3014 3014 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2>
9;3;1 25 pathaction!3_9;3;1,3372
Consider method^1_11,318 318 m0_do_cocktail_in_shot1
11 389 pathaction!1_11,3386
Consider method^3_4;2;2,4103 4103 _m3_get_second_ingredient_3
4;2;2 122 pathaction!3_4;2;2,1388
Consider method^3_9;2;2,1926 1926 _m3_get_second_ingredient_3
9;2;2 39 pathaction!3_9;2;2,1448
Consider method^3_10;1;1,4248 4248 m9_do_fill_shot
10;1;1 144 pathaction!3_10;1;1,875
Consider method^3_14;1;1,4248 4248 m9_do_fill_shot
14;1;1 363 pathaction!3_14;1;1,875
Consider method^2_0;2,3680 3680 m3_get_second_ingredient
0;2 213 pathaction!2_0;2,325
Consider method^2_9;1,503 503 m2_get_first_ingredient
9;1 311 pathaction!2_9;1,3299
Consider method^2_4;1,2933 2933 m2_get_first_ingredient
4;1 79 pathaction!2_4;1,3290
Consider method^3_1;1;3,385 385 _m2_get_first_ingredient_4
1;1;3 268 pathaction!3_1;1;3,1326
Consider method^3_5;1;1,4226 4226 m7_do_fill_shot
5;1;1 454 pathaction!3_5;1;1,875
Consider method^3_2;1;2,1145 1145 _m2_get_first_ingredient_3
2;1;2 455 pathaction!3_2;1;2,2097
Consider method^3_8;1;3,4044 4044 _m2_get_first_ingredient_4
8;1;3 138 pathaction!3_8;1;3,1272
Consider method^2_9;3,4709 4709 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
9;3 397 pathaction!2_9;3,1633
Consider method^1_0,4538 4538 m0_do_cocktail_in_shot1
0 153 pathaction!1_0,3379
Consider method^3_10;1;2,3450 3450 _m2_get_first_ingredient_3
10;1;2 252 pathaction!3_10;1;2,2048
Consider method^3_1;1;1,777 777 m9_do_fill_shot
1;1;1 352 pathaction!3_1;1;1,848
Consider method^0_,5004 5004 __top_1
 199 pathaction!0_,4049
Consider method^1_5,4251 4251 m0_do_cocktail_in_shot1
5 43 pathaction!1_5,3382
Consider method^3_5;1;3,3246 3246 _m2_get_first_ingredient_4
5;1;3 444 pathaction!3_5;1;3,1353
Consider method^3_4;1;1,3589 3589 m9_do_fill_shot
4;1;1 269 pathaction!3_4;1;1,796
Consider method^3_1;1;2,2940 2940 _m2_get_first_ingredient_3
1;1;2 318 pathaction!3_1;1;2,2160
Consider method^3_3;3;1,1383 1383 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2>
3;3;1 198 pathaction!3_3;3;1,3370
Consider method^3_13;2;1,3613 3613 _m3_get_second_ingredient_2
13;2;1 284 pathaction!3_13;2;1,1145
Consider method^2_10;1,1004 1004 m2_get_first_ingredient
10;1 251 pathaction!2_10;1,3298
Consider method^2_3;2,2967 2967 m3_get_second_ingredient
3;2 184 pathaction!2_3;2,326
Consider method^3_13;1;3,4718 4718 _m2_get_first_ingredient_4
13;1;3 431 pathaction!3_13;1;3,1358
Consider method^3_1;3;1,558 558 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2>
1;3;1 14 pathaction!3_1;3;1,3367
Consider method^2_1;1,1771 1771 m2_get_first_ingredient
1;1 168 pathaction!2_1;1,3296
Consider method^3_13;2;2,4856 4856 _m3_get_second_ingredient_3
13;2;2 328 pathaction!3_13;2;2,1445
Consider method^1_3,4753 4753 m0_do_cocktail_in_shot1
3 155 pathaction!1_3,3387
Consider method^2_6;3,4636 4636 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
6;3 342 pathaction!2_6;3,1626
Consider method^2_2;2,1546 1546 m3_get_second_ingredient
2;2 425 pathaction!2_2;2,322
Consider method^2_2;1,2229 2229 m2_get_first_ingredient
2;1 10 pathaction!2_2;1,3291
Consider method^1_2,1889 1889 m0_do_cocktail_in_shot1
2 77 pathaction!1_2,3389
Consider method^3_7;1;3,3246 3246 _m2_get_first_ingredient_4
7;1;3 21 pathaction!3_7;1;3,1353
Consider method^3_8;3;1,4219 4219 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 188 pathaction!3_8;3;1,3355
Consider method^3_10;1;3,3246 3246 _m2_get_first_ingredient_4
10;1;3 357 pathaction!3_10;1;3,1353
Consider method^3_10;3;1,916 916 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 0 pathaction!3_10;3;1,3369
Consider method^2_5;2,2985 2985 m3_get_second_ingredient
5;2 238 pathaction!2_5;2,337
Consider method^3_13;3;1,2751 2751 <_m4_serve_shot_2;do_clean_shot[shot14,cocktail10,left];m5_do_clean_shot;0;-1,-2>
13;3;1 286 pathaction!3_13;3;1,3357
Consider method^2_4;3,519 519 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
4;3 210 pathaction!2_4;3,1628
Consider method^3_4;2;1,4702 4702 _m3_get_second_ingredient_2
4;2;1 61 pathaction!3_4;2;1,1149
Consider method^2_3;3,736 736 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
3;3 193 pathaction!2_3;3,1632
Consider method^2_11;3,3025 3025 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
11;3 192 pathaction!2_11;3,1631
Consider method^1_8,2100 2100 m0_do_cocktail_in_shot1
8 429 pathaction!1_8,3380
Consider method^2_6;1,4041 4041 m2_get_first_ingredient
6;1 76 pathaction!2_6;1,3304
Consider method^1_14,3430 3430 m0_do_cocktail_in_shot1
14 233 pathaction!1_14,3376


CHECKING primitive solution of length 312 ...
true 457 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 370 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot16;]
true 114 __method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser5,ingredient5;]
true 183 grasp[left,shot16;]
true 423 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 299 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1;]
true 16 clean-shot[shot16,ingredient5,left,right;]
true 189 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot16;]
true 157 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 382 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2;]
true 180 leave[left,shot16;]
true 356 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2;]
true 331 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 200 nop[;]
true 110 grasp[right,shaker1;]
true 60 shake[cocktail7,ingredient5,ingredient2,shaker1,right,left;]
true 426 pour-shaker-to-shot[cocktail7,shot1,right,shaker1,l2,l1;]
true 120 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 164 clean-shaker[right,left,shaker1;]
true 211 leave[right,shaker1;]
true 68 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 285 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot16;]
true 221 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient2,dispenser1;]
true 194 grasp[left,shot16;]
true 137 clean-shot[shot16,ingredient2,left,right;]
true 203 fill-shot[shot16,ingredient1,left,right,dispenser1;]
true 315 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,left,l0,l1;]
true 453 clean-shot[shot16,ingredient1,left,right;]
true 278 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient5,left,shot16;]
true 163 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 11 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 74 leave[left,shot16;]
true 143 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient5;]
true 106 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 42 nop[;]
true 412 grasp[left,shaker1;]
true 335 shake[cocktail10,ingredient1,ingredient5,shaker1,left,right;]
true 380 pour-shaker-to-shot[cocktail10,shot2,left,shaker1,l2,l1;]
true 118 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 351 clean-shaker[left,right,shaker1;]
true 438 leave[left,shaker1;]
true 27 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 167 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot16;]
true 83 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient5,dispenser2;]
true 58 grasp[right,shot16;]
true 169 clean-shot[shot16,ingredient5,right,left;]
true 170 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 445 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1;]
true 304 clean-shot[shot16,ingredient2,right,left;]
true 432 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient5,right,shot16;]
true 69 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 140 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2;]
true 135 leave[right,shot16;]
true 4 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient5;]
true 239 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 250 nop[;]
true 277 grasp[right,shaker1;]
true 271 shake[cocktail5,ingredient2,ingredient5,shaker1,right,left;]
true 314 pour-shaker-to-shot[cocktail5,shot3,right,shaker1,l2,l1;]
true 171 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 359 clean-shaker[right,left,shaker1;]
true 325 leave[right,shaker1;]
true 44 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 52 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot16;]
true 66 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient5,dispenser2;]
true 306 grasp[left,shot16;]
true 383 clean-shot[shot16,ingredient5,left,right;]
true 439 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 242 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1;]
true 266 clean-shot[shot16,ingredient2,left,right;]
true 103 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient5,left,shot16;]
true 298 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 435 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 228 leave[left,shot16;]
true 147 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient5;]
true 172 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 403 nop[;]
true 402 grasp[left,shaker1;]
true 334 shake[cocktail4,ingredient2,ingredient5,shaker1,left,right;]
true 373 pour-shaker-to-shot[cocktail4,shot4,left,shaker1,l2,l1;]
true 162 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 267 clean-shaker[left,right,shaker1;]
true 226 leave[left,shaker1;]
true 36 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 369 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot16;]
true 126 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient5,dispenser3;]
true 273 grasp[right,shot16;]
true 224 clean-shot[shot16,ingredient5,right,left;]
true 130 fill-shot[shot16,ingredient3,right,left,dispenser3;]
true 45 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1;]
true 272 clean-shot[shot16,ingredient3,right,left;]
true 82 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,right,shot16;]
true 158 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 341 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2;]
true 234 leave[right,shot16;]
true 262 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1;]
true 460 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 377 nop[;]
true 246 grasp[left,shaker1;]
true 107 shake[cocktail1,ingredient3,ingredient1,shaker1,left,right;]
true 362 pour-shaker-to-shot[cocktail1,shot5,left,shaker1,l2,l1;]
true 372 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 261 clean-shaker[left,right,shaker1;]
true 18 leave[left,shaker1;]
true 333 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 119 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot16;]
true 365 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient1,dispenser1;]
true 81 grasp[right,shot16;]
true 41 refill-shot[shot16,ingredient1,right,left,dispenser1;]
true 287 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1;]
true 7 clean-shot[shot16,ingredient1,right,left;]
true 312 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,right,shot16;]
true 227 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 461 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2;]
true 336 leave[right,shot16;]
true 283 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient5;]
true 230 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 384 nop[;]
true 100 grasp[left,shaker1;]
true 88 shake[cocktail6,ingredient1,ingredient5,shaker1,left,right;]
true 80 pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1;]
true 72 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 346 clean-shaker[left,right,shaker1;]
true 30 leave[left,shaker1;]
true 115 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 57 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot16;]
true 418 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient5,dispenser1;]
true 28 grasp[right,shot16;]
true 374 clean-shot[shot16,ingredient5,right,left;]
true 428 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 347 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1;]
true 32 clean-shot[shot16,ingredient1,right,left;]
true 280 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient5,right,shot16;]
true 13 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 218 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2;]
true 317 leave[right,shot16;]
true 300 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient5;]
true 15 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 413 nop[;]
true 275 grasp[right,shaker1;]
true 190 shake[cocktail3,ingredient1,ingredient5,shaker1,right,left;]
true 379 pour-shaker-to-shot[cocktail3,shot7,right,shaker1,l2,l1;]
true 51 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 196 clean-shaker[right,left,shaker1;]
true 223 leave[right,shaker1;]
true 270 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 375 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient1,shot16;]
true 353 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient5,dispenser1;]
true 407 grasp[right,shot16;]
true 35 clean-shot[shot16,ingredient5,right,left;]
true 87 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 123 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1;]
true 394 clean-shot[shot16,ingredient1,right,left;]
true 459 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient3,right,shot16;]
true 59 fill-shot[shot16,ingredient3,right,left,dispenser3;]
true 217 pour-shot-to-used-shaker[shot16,ingredient3,shaker1,right,l1,l2;]
true 109 leave[right,shot16;]
true 434 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient1,ingredient3;]
true 404 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 293 nop[;]
true 231 grasp[right,shaker1;]
true 94 shake[cocktail11,ingredient1,ingredient3,shaker1,right,left;]
true 121 pour-shaker-to-shot[cocktail11,shot8,right,shaker1,l2,l1;]
true 197 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 338 clean-shaker[right,left,shaker1;]
true 116 leave[right,shaker1;]
true 50 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 208 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot16;]
true 23 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient4,ingredient3,dispenser4;]
true 232 grasp[right,shot16;]
true 31 clean-shot[shot16,ingredient3,right,left;]
true 260 fill-shot[shot16,ingredient4,right,left,dispenser4;]
true 181 pour-shot-to-clean-shaker[shot16,ingredient4,shaker1,right,l0,l1;]
true 290 clean-shot[shot16,ingredient4,right,left;]
true 152 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient3,right,shot16;]
true 151 fill-shot[shot16,ingredient3,right,left,dispenser3;]
true 255 pour-shot-to-used-shaker[shot16,ingredient3,shaker1,right,l1,l2;]
true 297 leave[right,shot16;]
true 321 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient3;]
true 235 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 236 nop[;]
true 305 grasp[right,shaker1;]
true 63 shake[cocktail8,ingredient4,ingredient3,shaker1,right,left;]
true 40 pour-shaker-to-shot[cocktail8,shot9,right,shaker1,l2,l1;]
true 161 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 86 clean-shaker[right,left,shaker1;]
true 19 leave[right,shaker1;]
true 292 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 302 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot16;]
true 256 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient3,dispenser2;]
true 276 grasp[right,shot16;]
true 358 clean-shot[shot16,ingredient3,right,left;]
true 339 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 220 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1;]
true 451 clean-shot[shot16,ingredient2,right,left;]
true 398 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot16;]
true 2 fill-shot[shot16,ingredient3,right,left,dispenser3;]
true 301 pour-shot-to-used-shaker[shot16,ingredient3,shaker1,right,l1,l2;]
true 55 leave[right,shot16;]
true 179 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient3;]
true 414 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 360 nop[;]
true 117 grasp[left,shaker1;]
true 295 shake[cocktail2,ingredient2,ingredient3,shaker1,left,right;]
true 257 pour-shaker-to-shot[cocktail2,shot10,left,shaker1,l2,l1;]
true 99 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 91 clean-shaker[left,right,shaker1;]
true 449 leave[left,shaker1;]
true 265 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 354 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot16;]
true 89 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient3,dispenser1;]
true 5 grasp[right,shot16;]
true 237 clean-shot[shot16,ingredient3,right,left;]
true 417 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 191 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1;]
true 165 clean-shot[shot16,ingredient1,right,left;]
true 146 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient4,right,shot16;]
true 368 fill-shot[shot16,ingredient4,right,left,dispenser4;]
true 22 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2;]
true 310 leave[right,shot16;]
true 430 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient4;]
true 9 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 390 nop[;]
true 401 grasp[right,shaker1;]
true 386 shake[cocktail9,ingredient1,ingredient4,shaker1,right,left;]
true 350 pour-shaker-to-shot[cocktail9,shot11,right,shaker1,l2,l1;]
true 433 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 84 clean-shaker[right,left,shaker1;]
true 132 leave[right,shaker1;]
true 150 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 48 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot16;]
true 381 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient4,dispenser5;]
true 458 grasp[left,shot16;]
true 371 clean-shot[shot16,ingredient4,left,right;]
true 313 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 20 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1;]
true 345 clean-shot[shot16,ingredient5,left,right;]
true 441 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot16;]
true 462 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 436 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2;]
true 240 leave[left,shot16;]
true 173 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2;]
true 47 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 320 nop[;]
true 46 grasp[left,shaker1;]
true 366 shake[cocktail7,ingredient5,ingredient2,shaker1,left,right;]
true 415 pour-shaker-to-shot[cocktail7,shot12,left,shaker1,l2,l1;]
true 282 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 364 clean-shaker[left,right,shaker1;]
true 343 leave[left,shaker1;]
true 98 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left;]
true 90 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot16;]
true 392 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient2,dispenser5;]
true 209 grasp[left,shot16;]
true 442 clean-shot[shot16,ingredient2,left,right;]
true 391 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 186 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1;]
true 440 clean-shot[shot16,ingredient5,left,right;]
true 160 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot16;]
true 102 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 207 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2;]
true 53 leave[left,shot16;]
true 26 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2;]
true 309 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 422 nop[;]
true 212 grasp[right,shaker1;]
true 214 shake[cocktail7,ingredient5,ingredient2,shaker1,right,left;]
true 125 pour-shaker-to-shot[cocktail7,shot13,right,shaker1,l2,l1;]
true 420 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 73 clean-shaker[right,left,shaker1;]
true 378 leave[right,shaker1;]
true 112 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left;]
true 12 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot16;]
true 111 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient2,dispenser2;]
true 303 grasp[left,shot16;]
true 187 refill-shot[shot16,ingredient2,left,right,dispenser2;]
true 385 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1;]
true 219 clean-shot[shot16,ingredient2,left,right;]
true 148 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot16;]
true 263 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 216 pour-shot-to-used-shaker[shot16,ingredient3,shaker1,left,l1,l2;]
true 245 leave[left,shot16;]
true 244 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient3;]
true 399 __method_precondition_m5_do_clean_shot_5_precondition[shot14;]
true 108 nop[;]
true 279 grasp[right,shaker1;]
true 129 shake[cocktail2,ingredient2,ingredient3,shaker1,right,left;]
true 376 pour-shaker-to-shot[cocktail2,shot14,right,shaker1,l2,l1;]
true 215 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 405 clean-shaker[right,left,shaker1;]
true 175 leave[right,shaker1;]
true 225 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,right;]
true 205 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot16;]
true 274 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient3,dispenser1;]
true 6 grasp[right,shot16;]
true 34 clean-shot[shot16,ingredient3,right,left;]
true 406 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 1 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1;]
true 448 clean-shot[shot16,ingredient1,right,left;]
true 308 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient4,right,shot16;]
true 387 fill-shot[shot16,ingredient4,right,left,dispenser4;]
true 393 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2;]
true 437 leave[right,shot16;]
true 411 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient4;]
true 78 __method_precondition_m5_do_clean_shot_5_precondition[shot15;]
true 288 nop[;]
true 424 grasp[right,shaker1;]
true 49 shake[cocktail9,ingredient1,ingredient4,shaker1,right,left;]
true 201 pour-shaker-to-shot[cocktail9,shot15,right,shaker1,l2,l1;]
true 421 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 97 clean-shaker[right,left,shaker1;]
true 149 leave[right,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 593824096
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 414
number of actions                    = 4050
number of abstract actions           = 1055
number of primitive actions          = 2995
number of methods                    = 5005
number of primitive shop actions     = 1174
number of primitive non-shop actions = 1821
size of largest method               = 15
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 296375
number of clauses               = 2059755
average size of clauses         = 2.3917456202315326
number of assert                = 182
number of horn                  = 1813607
K offset                        = 0
K chosen value                  = 4
state formula                   = 1664546
method children clauses         = 0
number of paths                 = 315
maximum plan length             = 315
number of decomposition clauses = 395209
number of ordering clauses      = 0
number of state clauses         = 1664546
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 21111
============ parsing ============
total                         = 1132
file parser                   = 601
sort expansion                = 252
closed world assumption       = 129
inherit preconditions         = 0
shop methods                  = 27
eliminate identical variables = 68
strip domain of hybridity     = 2
flatten formula               = 53
============ preprocessing ============
total                                      = 6844
compile negative preconditions             = 57
compile unit methods                       = 0
split parameter                            = 59
expand choiceless abstract tasks           = 701
compile methods with identical tasks       = 35
removing unnecessary predicates            = 1037
lifted reachabiltiy analysis               = 78
grounded planning graph analysis           = 1845
grounded task decomposition graph analysis = 2214
grounding                                  = 753
create artificial top task                 = 26
============ search preparation ============
compute state invariants = 3004
============ sat ============
total                                        = 9816
generate formula                             = 7306
generate path decomposition tree             = 507
normalise path decomposition tree            = 110
sog optimisation                             = 135
translate path decomposition tree to clauses = 908
generate state formula                       = 7173
generate state invariant formula             = 958
transform to DIMACS                          = 1030
SAT solver                                   = 1140
SAT solver for K=0004                        = 1140

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2995";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="1055";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="593824096";"40 sat:20:state formula"="1664546";"40 sat:01:number of variables"="296375";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="315";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="5005";"30 problem:07:number of primitive shop actions"="1174";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="4050";"30 problem:08:number of primitive non-shop actions"="1821";"30 problem:02:number of predicates"="414";"40 sat:03:number of horn"="1813607";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="15";"40 sat:03:average size of clauses"="2.3917456202315326";"40 sat:02:number of clauses"="2059755";"40 sat:50:number of state clauses"="1664546";"40 sat:03:number of assert"="182";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="315";"40 sat:50:number of decomposition clauses"="395209";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="601";"01 parsing:08:flatten formula"="53";"40 sat:41:SAT solver for K=0004"="1140";"40 sat:00:total"="9816";"40 sat:16:generate state formula"="7173";"40 sat:20:transform to DIMACS"="1030";"40 sat:11:generate path decomposition tree"="507";"02 preprocessing:07:compile methods with identical tasks"="35";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="1037";"01 parsing:03:closed world assumption"="129";"02 preprocessing:11:lifted reachabiltiy analysis"="78";"01 parsing:02:sort expansion"="252";"40 sat:12:normalise path decomposition tree"="110";"40 sat:40:SAT solver"="1140";"01 parsing:00:total"="1132";"40 sat:10:generate formula"="7306";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="57";"00 total:00:total"="21111";"40 sat:13:sog optimisation"="135";"02 preprocessing:12:grounded planning graph analysis"="1845";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="2214";"02 preprocessing:04:split parameter"="59";"01 parsing:05:shop methods"="27";"10 search preparation:02:compute state invariants"="3004";"01 parsing:06:eliminate identical variables"="68";"40 sat:15:translate path decomposition tree to clauses"="908";"02 preprocessing:05:expand choiceless abstract tasks"="701";"40 sat:17:generate state invariant formula"="958";"02 preprocessing:00:total"="6844";"02 preprocessing:99:create artificial top task"="26";"02 preprocessing:84:grounding"="753"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot16];__method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser5,ingredient5];grasp[left,shot16];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1];clean-shot[shot16,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot16];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[right,shaker1];shake[cocktail7,ingredient5,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail7,shot1,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail7,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient2,dispenser1];grasp[left,shot16];clean-shot[shot16,ingredient2,left,right];fill-shot[shot16,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,left,l0,l1];clean-shot[shot16,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient5,left,shot16];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[left,shaker1];shake[cocktail10,ingredient1,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot2,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient5,dispenser2];grasp[right,shot16];clean-shot[shot16,ingredient5,right,left];fill-shot[shot16,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1];clean-shot[shot16,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient5,right,shot16];fill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail5,ingredient2,ingredient5,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient5,dispenser2];grasp[left,shot16];clean-shot[shot16,ingredient5,left,right];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1];clean-shot[shot16,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient5,left,shot16];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail4,ingredient2,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail4,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail4,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient5,dispenser3];grasp[right,shot16];clean-shot[shot16,ingredient5,right,left];fill-shot[shot16,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1];clean-shot[shot16,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,right,shot16];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail1,ingredient3,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient1,dispenser1];grasp[right,shot16];refill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1];clean-shot[shot16,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,right,shot16];fill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail6,ingredient1,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient5,dispenser1];grasp[right,shot16];clean-shot[shot16,ingredient5,right,left];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1];clean-shot[shot16,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient5,right,shot16];fill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[right,shaker1];shake[cocktail3,ingredient1,ingredient5,shaker1,right,left];pour-shaker-to-shot[cocktail3,shot7,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail3,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient1,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient5,dispenser1];grasp[right,shot16];clean-shot[shot16,ingredient5,right,left];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1];clean-shot[shot16,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient3,right,shot16];fill-shot[shot16,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot16,ingredient3,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail11,ingredient1,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient4,ingredient3,dispenser4];grasp[right,shot16];clean-shot[shot16,ingredient3,right,left];fill-shot[shot16,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot16,ingredient4,shaker1,right,l0,l1];clean-shot[shot16,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient3,right,shot16];fill-shot[shot16,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot16,ingredient3,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail8,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient3,dispenser2];grasp[right,shot16];clean-shot[shot16,ingredient3,right,left];fill-shot[shot16,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1];clean-shot[shot16,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot16];fill-shot[shot16,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot16,ingredient3,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail2,ingredient2,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail2,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail2,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient3,dispenser1];grasp[right,shot16];clean-shot[shot16,ingredient3,right,left];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1];clean-shot[shot16,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient4,right,shot16];fill-shot[shot16,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail9,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient4,dispenser5];grasp[left,shot16];clean-shot[shot16,ingredient4,left,right];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1];clean-shot[shot16,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot16];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[left,shaker1];shake[cocktail7,ingredient5,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot12,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient2,dispenser5];grasp[left,shot16];clean-shot[shot16,ingredient2,left,right];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1];clean-shot[shot16,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot16];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot13];nop[];grasp[right,shaker1];shake[cocktail7,ingredient5,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail7,shot13,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail7,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient2,dispenser2];grasp[left,shot16];refill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1];clean-shot[shot16,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot16];fill-shot[shot16,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot16,ingredient3,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot14];nop[];grasp[right,shaker1];shake[cocktail2,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot14,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient3,dispenser1];grasp[right,shot16];clean-shot[shot16,ingredient3,right,left];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1];clean-shot[shot16,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient4,right,shot16];fill-shot[shot16,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot15];nop[];grasp[right,shaker1];shake[cocktail9,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot15,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient5 shot16 
2 __method_precondition_m8_do_fill_shot_8_precondition shot16 dispenser5 ingredient5 
3 grasp left shot16 
4 fill-shot shot16 ingredient5 left right dispenser5 
5 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 left l0 l1 
6 clean-shot shot16 ingredient5 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient2 left shot16 
8 fill-shot shot16 ingredient2 left right dispenser2 
9 pour-shot-to-used-shaker shot16 ingredient2 shaker1 left l1 l2 
10 leave left shot16 
11 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient5 ingredient2 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp right shaker1 
15 shake cocktail7 ingredient5 ingredient2 shaker1 right left 
16 pour-shaker-to-shot cocktail7 shot1 right shaker1 l2 l1 
17 empty-shaker right shaker1 cocktail7 l1 l0 
18 clean-shaker right left shaker1 
19 leave right shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 left 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot16 
22 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient1 ingredient2 dispenser1 
23 grasp left shot16 
24 clean-shot shot16 ingredient2 left right 
25 fill-shot shot16 ingredient1 left right dispenser1 
26 pour-shot-to-clean-shaker shot16 ingredient1 shaker1 left l0 l1 
27 clean-shot shot16 ingredient1 left right 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient5 left shot16 
29 fill-shot shot16 ingredient5 left right dispenser5 
30 pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 
31 leave left shot16 
32 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient5 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp left shaker1 
36 shake cocktail10 ingredient1 ingredient5 shaker1 left right 
37 pour-shaker-to-shot cocktail10 shot2 left shaker1 l2 l1 
38 empty-shaker left shaker1 cocktail10 l1 l0 
39 clean-shaker left right shaker1 
40 leave left shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 right 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient2 shot16 
43 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient2 ingredient5 dispenser2 
44 grasp right shot16 
45 clean-shot shot16 ingredient5 right left 
46 fill-shot shot16 ingredient2 right left dispenser2 
47 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 right l0 l1 
48 clean-shot shot16 ingredient2 right left 
49 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient5 right shot16 
50 fill-shot shot16 ingredient5 right left dispenser5 
51 pour-shot-to-used-shaker shot16 ingredient5 shaker1 right l1 l2 
52 leave right shot16 
53 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient2 ingredient5 
54 __method_precondition_m5_do_clean_shot_5_precondition shot3 
55 nop  
56 grasp right shaker1 
57 shake cocktail5 ingredient2 ingredient5 shaker1 right left 
58 pour-shaker-to-shot cocktail5 shot3 right shaker1 l2 l1 
59 empty-shaker right shaker1 cocktail5 l1 l0 
60 clean-shaker right left shaker1 
61 leave right shaker1 
62 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
63 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient2 shot16 
64 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient2 ingredient5 dispenser2 
65 grasp left shot16 
66 clean-shot shot16 ingredient5 left right 
67 fill-shot shot16 ingredient2 left right dispenser2 
68 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 
69 clean-shot shot16 ingredient2 left right 
70 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient5 left shot16 
71 fill-shot shot16 ingredient5 left right dispenser5 
72 pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 
73 leave left shot16 
74 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient2 ingredient5 
75 __method_precondition_m5_do_clean_shot_5_precondition shot4 
76 nop  
77 grasp left shaker1 
78 shake cocktail4 ingredient2 ingredient5 shaker1 left right 
79 pour-shaker-to-shot cocktail4 shot4 left shaker1 l2 l1 
80 empty-shaker left shaker1 cocktail4 l1 l0 
81 clean-shaker left right shaker1 
82 leave left shaker1 
83 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 right 
84 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient3 shot16 
85 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient3 ingredient5 dispenser3 
86 grasp right shot16 
87 clean-shot shot16 ingredient5 right left 
88 fill-shot shot16 ingredient3 right left dispenser3 
89 pour-shot-to-clean-shaker shot16 ingredient3 shaker1 right l0 l1 
90 clean-shot shot16 ingredient3 right left 
91 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient1 right shot16 
92 fill-shot shot16 ingredient1 right left dispenser1 
93 pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 
94 leave right shot16 
95 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient3 ingredient1 
96 __method_precondition_m5_do_clean_shot_5_precondition shot5 
97 nop  
98 grasp left shaker1 
99 shake cocktail1 ingredient3 ingredient1 shaker1 left right 
100 pour-shaker-to-shot cocktail1 shot5 left shaker1 l2 l1 
101 empty-shaker left shaker1 cocktail1 l1 l0 
102 clean-shaker left right shaker1 
103 leave left shaker1 
104 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 right 
105 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient1 shot16 
106 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient1 dispenser1 
107 grasp right shot16 
108 refill-shot shot16 ingredient1 right left dispenser1 
109 pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 
110 clean-shot shot16 ingredient1 right left 
111 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient5 right shot16 
112 fill-shot shot16 ingredient5 right left dispenser5 
113 pour-shot-to-used-shaker shot16 ingredient5 shaker1 right l1 l2 
114 leave right shot16 
115 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient1 ingredient5 
116 __method_precondition_m5_do_clean_shot_5_precondition shot6 
117 nop  
118 grasp left shaker1 
119 shake cocktail6 ingredient1 ingredient5 shaker1 left right 
120 pour-shaker-to-shot cocktail6 shot6 left shaker1 l2 l1 
121 empty-shaker left shaker1 cocktail6 l1 l0 
122 clean-shaker left right shaker1 
123 leave left shaker1 
124 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 right 
125 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient1 shot16 
126 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient1 ingredient5 dispenser1 
127 grasp right shot16 
128 clean-shot shot16 ingredient5 right left 
129 fill-shot shot16 ingredient1 right left dispenser1 
130 pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 
131 clean-shot shot16 ingredient1 right left 
132 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient5 right shot16 
133 fill-shot shot16 ingredient5 right left dispenser5 
134 pour-shot-to-used-shaker shot16 ingredient5 shaker1 right l1 l2 
135 leave right shot16 
136 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient1 ingredient5 
137 __method_precondition_m5_do_clean_shot_5_precondition shot7 
138 nop  
139 grasp right shaker1 
140 shake cocktail3 ingredient1 ingredient5 shaker1 right left 
141 pour-shaker-to-shot cocktail3 shot7 right shaker1 l2 l1 
142 empty-shaker right shaker1 cocktail3 l1 l0 
143 clean-shaker right left shaker1 
144 leave right shaker1 
145 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
146 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient1 shot16 
147 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient1 ingredient5 dispenser1 
148 grasp right shot16 
149 clean-shot shot16 ingredient5 right left 
150 fill-shot shot16 ingredient1 right left dispenser1 
151 pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 
152 clean-shot shot16 ingredient1 right left 
153 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient3 right shot16 
154 fill-shot shot16 ingredient3 right left dispenser3 
155 pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 
156 leave right shot16 
157 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient1 ingredient3 
158 __method_precondition_m5_do_clean_shot_5_precondition shot8 
159 nop  
160 grasp right shaker1 
161 shake cocktail11 ingredient1 ingredient3 shaker1 right left 
162 pour-shaker-to-shot cocktail11 shot8 right shaker1 l2 l1 
163 empty-shaker right shaker1 cocktail11 l1 l0 
164 clean-shaker right left shaker1 
165 leave right shaker1 
166 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
167 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient4 shot16 
168 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient4 ingredient3 dispenser4 
169 grasp right shot16 
170 clean-shot shot16 ingredient3 right left 
171 fill-shot shot16 ingredient4 right left dispenser4 
172 pour-shot-to-clean-shaker shot16 ingredient4 shaker1 right l0 l1 
173 clean-shot shot16 ingredient4 right left 
174 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient3 right shot16 
175 fill-shot shot16 ingredient3 right left dispenser3 
176 pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 
177 leave right shot16 
178 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient4 ingredient3 
179 __method_precondition_m5_do_clean_shot_5_precondition shot9 
180 nop  
181 grasp right shaker1 
182 shake cocktail8 ingredient4 ingredient3 shaker1 right left 
183 pour-shaker-to-shot cocktail8 shot9 right shaker1 l2 l1 
184 empty-shaker right shaker1 cocktail8 l1 l0 
185 clean-shaker right left shaker1 
186 leave right shaker1 
187 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 right 
188 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient2 shot16 
189 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient2 ingredient3 dispenser2 
190 grasp right shot16 
191 clean-shot shot16 ingredient3 right left 
192 fill-shot shot16 ingredient2 right left dispenser2 
193 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 right l0 l1 
194 clean-shot shot16 ingredient2 right left 
195 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 right shot16 
196 fill-shot shot16 ingredient3 right left dispenser3 
197 pour-shot-to-used-shaker shot16 ingredient3 shaker1 right l1 l2 
198 leave right shot16 
199 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient2 ingredient3 
200 __method_precondition_m5_do_clean_shot_5_precondition shot10 
201 nop  
202 grasp left shaker1 
203 shake cocktail2 ingredient2 ingredient3 shaker1 left right 
204 pour-shaker-to-shot cocktail2 shot10 left shaker1 l2 l1 
205 empty-shaker left shaker1 cocktail2 l1 l0 
206 clean-shaker left right shaker1 
207 leave left shaker1 
208 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 right 
209 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient1 shot16 
210 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient1 ingredient3 dispenser1 
211 grasp right shot16 
212 clean-shot shot16 ingredient3 right left 
213 fill-shot shot16 ingredient1 right left dispenser1 
214 pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 
215 clean-shot shot16 ingredient1 right left 
216 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient4 right shot16 
217 fill-shot shot16 ingredient4 right left dispenser4 
218 pour-shot-to-used-shaker shot16 ingredient4 shaker1 right l1 l2 
219 leave right shot16 
220 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient1 ingredient4 
221 __method_precondition_m5_do_clean_shot_5_precondition shot11 
222 nop  
223 grasp right shaker1 
224 shake cocktail9 ingredient1 ingredient4 shaker1 right left 
225 pour-shaker-to-shot cocktail9 shot11 right shaker1 l2 l1 
226 empty-shaker right shaker1 cocktail9 l1 l0 
227 clean-shaker right left shaker1 
228 leave right shaker1 
229 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 left 
230 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient5 shot16 
231 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient5 ingredient4 dispenser5 
232 grasp left shot16 
233 clean-shot shot16 ingredient4 left right 
234 fill-shot shot16 ingredient5 left right dispenser5 
235 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 left l0 l1 
236 clean-shot shot16 ingredient5 left right 
237 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient2 left shot16 
238 fill-shot shot16 ingredient2 left right dispenser2 
239 pour-shot-to-used-shaker shot16 ingredient2 shaker1 left l1 l2 
240 leave left shot16 
241 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient5 ingredient2 
242 __method_precondition_m5_do_clean_shot_5_precondition shot12 
243 nop  
244 grasp left shaker1 
245 shake cocktail7 ingredient5 ingredient2 shaker1 left right 
246 pour-shaker-to-shot cocktail7 shot12 left shaker1 l2 l1 
247 empty-shaker left shaker1 cocktail7 l1 l0 
248 clean-shaker left right shaker1 
249 leave left shaker1 
250 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot13 left 
251 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient5 shot16 
252 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient5 ingredient2 dispenser5 
253 grasp left shot16 
254 clean-shot shot16 ingredient2 left right 
255 fill-shot shot16 ingredient5 left right dispenser5 
256 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 left l0 l1 
257 clean-shot shot16 ingredient5 left right 
258 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient2 left shot16 
259 fill-shot shot16 ingredient2 left right dispenser2 
260 pour-shot-to-used-shaker shot16 ingredient2 shaker1 left l1 l2 
261 leave left shot16 
262 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient5 ingredient2 
263 __method_precondition_m5_do_clean_shot_5_precondition shot13 
264 nop  
265 grasp right shaker1 
266 shake cocktail7 ingredient5 ingredient2 shaker1 right left 
267 pour-shaker-to-shot cocktail7 shot13 right shaker1 l2 l1 
268 empty-shaker right shaker1 cocktail7 l1 l0 
269 clean-shaker right left shaker1 
270 leave right shaker1 
271 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot14 left 
272 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient2 shot16 
273 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient2 dispenser2 
274 grasp left shot16 
275 refill-shot shot16 ingredient2 left right dispenser2 
276 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 
277 clean-shot shot16 ingredient2 left right 
278 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 left shot16 
279 fill-shot shot16 ingredient3 left right dispenser3 
280 pour-shot-to-used-shaker shot16 ingredient3 shaker1 left l1 l2 
281 leave left shot16 
282 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient2 ingredient3 
283 __method_precondition_m5_do_clean_shot_5_precondition shot14 
284 nop  
285 grasp right shaker1 
286 shake cocktail2 ingredient2 ingredient3 shaker1 right left 
287 pour-shaker-to-shot cocktail2 shot14 right shaker1 l2 l1 
288 empty-shaker right shaker1 cocktail2 l1 l0 
289 clean-shaker right left shaker1 
290 leave right shaker1 
291 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot15 right 
292 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient1 shot16 
293 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient1 ingredient3 dispenser1 
294 grasp right shot16 
295 clean-shot shot16 ingredient3 right left 
296 fill-shot shot16 ingredient1 right left dispenser1 
297 pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 
298 clean-shot shot16 ingredient1 right left 
299 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient4 right shot16 
300 fill-shot shot16 ingredient4 right left dispenser4 
301 pour-shot-to-used-shaker shot16 ingredient4 shaker1 right l1 l2 
302 leave right shot16 
303 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient1 ingredient4 
304 __method_precondition_m5_do_clean_shot_5_precondition shot15 
305 nop  
306 grasp right shaker1 
307 shake cocktail9 ingredient1 ingredient4 shaker1 right left 
308 pour-shaker-to-shot cocktail9 shot15 right shaker1 l2 l1 
309 empty-shaker right shaker1 cocktail9 l1 l0 
310 clean-shaker right left shaker1 
311 leave right shaker1 
root 432
312 serve_shot shot15 cocktail9  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot15,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 303 348 306 307 308 309 310 311
313 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 93
314 do_fill_shot shot16 ingredient3 right  -> m9_do_fill_shot 85 86 87 88
315 serve_shot shot14 cocktail2  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot14,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 282 326 285 286 287 288 289 290
316 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 42 355 453 433
317 do_cocktail_in_shot1 shot7 cocktail3  -> m0_do_cocktail_in_shot1 124 461 330 414
318 do_cocktail_in_shot1 shot15 cocktail9  -> m0_do_cocktail_in_shot1 291 322 417 312
319 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 251 366 423 395
320 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 left  -> _m3_get_second_ingredient_2 238
321 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient1 right  -> _m2_get_first_ingredient_4 298
322 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 292 364 345 321
323 do_fill_shot shot16 ingredient1 right  -> m9_do_fill_shot 126 127 128 129
324 do_fill_shot shot16 ingredient5 left  -> m8_do_fill_shot 2 3 4
325 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 209 367 408 449
326 do_clean_shot_m4_serve_shot_sip_2 shot14 left  -> <_m4_serve_shot_2;do_clean_shot[shot14,cocktail10,left];m5_do_clean_shot;0;-1,-2> 283 284
327 serve_shot shot1 cocktail7  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 11 425 14 15 16 17 18 19
328 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient4 right  -> _m3_get_second_ingredient_2 300
329 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient1 right  -> _m2_get_first_ingredient_4 131
330 get_second_ingredient cocktail3 right  -> m3_get_second_ingredient 132 333 386 135
331 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 right  -> _m2_get_first_ingredient_4 194
332 do_cocktail_in_shot1 shot6 cocktail6  -> m0_do_cocktail_in_shot1 104 335 412 349
333 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 right  -> _m3_get_second_ingredient_2 133
334 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 9
335 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 105 336 394 372
336 do_fill_shot shot16 ingredient1 right  -> m7_do_fill_shot 106 107 108
337 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient3 right  -> _m3_get_second_ingredient_2 196
338 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 179 180
339 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 70 403 442 73
340 do_cocktail_in_shot1 shot11 cocktail9  -> m0_do_cocktail_in_shot1 208 325 455 371
341 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 28 381 385 31
342 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient1 right  -> _m2_get_first_ingredient_4 152
343 do_fill_shot shot16 ingredient1 left  -> m9_do_fill_shot 22 23 24 25
344 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 left  -> _m2_get_first_ingredient_4 6
345 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 297
346 do_cocktail_in_shot1 shot4 cocktail4  -> m0_do_cocktail_in_shot1 62 401 339 426
347 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 193
348 do_clean_shot_m4_serve_shot_sip_2 shot15 left  -> <_m4_serve_shot_2;do_clean_shot[shot15,cocktail7,left];m5_do_clean_shot;0;-1,-2> 304 305
349 serve_shot shot6 cocktail6  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 115 377 118 119 120 121 122 123
350 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 188 362 347 331
351 do_cocktail_in_shot1 shot12 cocktail7  -> m0_do_cocktail_in_shot1 229 418 368 383
352 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 155
353 serve_shot shot9 cocktail8  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 178 338 181 182 183 184 185 186
354 get_first_ingredient cocktail11 right  -> m2_get_first_ingredient 146 370 361 342
355 do_fill_shot shot16 ingredient2 right  -> m9_do_fill_shot 43 44 45 46
356 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 96 97
357 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 130
358 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 21 343 440 430
359 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 49 429 435 52
360 do_clean_shot_m4_serve_shot_sip_2 shot12 right  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2> 242 243
361 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 151
362 do_fill_shot shot16 ingredient2 right  -> m9_do_fill_shot 189 190 191 192
363 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 195 337 405 198
364 do_fill_shot shot16 ingredient1 right  -> m9_do_fill_shot 293 294 295 296
365 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 68
366 do_fill_shot shot16 ingredient5 left  -> m9_do_fill_shot 252 253 254 255
367 do_fill_shot shot16 ingredient1 right  -> m9_do_fill_shot 210 211 212 213
368 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 237 320 373 240
369 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 left  -> _m2_get_first_ingredient_4 277
370 do_fill_shot shot16 ingredient1 right  -> m9_do_fill_shot 147 148 149 150
371 serve_shot shot11 cocktail9  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 220 382 223 224 225 226 227 228
372 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient1 right  -> _m2_get_first_ingredient_4 110
373 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 239
374 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 280
375 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient1 right  -> _m3_get_second_ingredient_2 92
376 get_second_ingredient cocktail8 right  -> m3_get_second_ingredient 174 448 459 177
377 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 116 117
378 get_first_ingredient cocktail2 left  -> m2_get_first_ingredient 272 410 446 369
379 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2> 200 201
380 serve_shot shot10 cocktail2  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 199 379 202 203 204 205 206 207
381 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 left  -> _m3_get_second_ingredient_2 29
382 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 221 222
383 serve_shot shot12 cocktail7  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 241 360 244 245 246 247 248 249
384 do_clean_shot_m4_serve_shot_sip_2 shot7 left  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2> 137 138
385 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 30
386 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 134
387 serve_shot shot13 cocktail7  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot13,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 262 458 265 266 267 268 269 270
388 serve_shot shot8 cocktail11  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 157 420 160 161 162 163 164 165
389 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient4 right  -> _m2_get_first_ingredient_4 173
390 do_fill_shot shot16 ingredient2 left  -> m9_do_fill_shot 64 65 66 67
391 do_cocktail_in_shot1 shot8 cocktail11  -> m0_do_cocktail_in_shot1 145 354 398 388
392 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient4 right  -> _m3_get_second_ingredient_2 217
393 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient3 right  -> _m2_get_first_ingredient_4 90
394 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 109
395 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 left  -> _m2_get_first_ingredient_4 257
396 serve_shot shot5 cocktail1  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 95 356 98 99 100 101 102 103
397 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 260
398 get_second_ingredient cocktail11 right  -> m3_get_second_ingredient 153 415 352 156
399 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 left  -> _m3_get_second_ingredient_2 8
400 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 1 324 431 344
401 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 63 390 365 450
402 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 right  -> _m3_get_second_ingredient_2 112
403 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 left  -> _m3_get_second_ingredient_2 71
404 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 235
405 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 197
406 do_cocktail_in_shot1 shot14 cocktail2  -> m0_do_cocktail_in_shot1 271 378 424 315
407 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 113
408 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 214
409 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 7 399 334 10
410 do_fill_shot shot16 ingredient2 left  -> m7_do_fill_shot 273 274 275
411 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 84 314 437 393
412 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 111 402 407 114
413 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 left  -> _m2_get_first_ingredient_4 236
414 serve_shot shot7 cocktail3  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 136 384 139 140 141 142 143 144
415 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient3 right  -> _m3_get_second_ingredient_2 154
416 serve_shot shot3 cocktail5  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 53 427 56 57 58 59 60 61
417 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 299 328 443 302
418 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 230 444 404 413
419 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 258 438 397 261
420 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 158 159
421 serve_shot shot2 cocktail10  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 32 462 35 36 37 38 39 40
422 do_fill_shot shot16 ingredient4 right  -> m9_do_fill_shot 168 169 170 171
423 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 256
424 get_second_ingredient cocktail2 left  -> m3_get_second_ingredient 278 456 374 281
425 do_clean_shot_m4_serve_shot_sip_2 shot1 left  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2> 12 13
426 serve_shot shot4 cocktail4  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 74 439 77 78 79 80 81 82
427 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 54 55
428 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 172
429 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 right  -> _m3_get_second_ingredient_2 50
430 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient1 left  -> _m2_get_first_ingredient_4 27
431 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 5
432 __choicelessATCompilation__top_1  -> __top_1 452 436 447 346 445 332 317 391 434 457 340 351 454 406 318
433 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 right  -> _m2_get_first_ingredient_4 48
434 do_cocktail_in_shot1 shot9 cocktail8  -> m0_do_cocktail_in_shot1 166 451 376 353
435 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 51
436 do_cocktail_in_shot1 shot2 cocktail10  -> m0_do_cocktail_in_shot1 20 358 341 421
437 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 89
438 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 left  -> _m3_get_second_ingredient_2 259
439 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2> 75 76
440 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 26
441 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 91 375 313 94
442 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 72
443 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 301
444 do_fill_shot shot16 ingredient5 left  -> m9_do_fill_shot 231 232 233 234
445 do_cocktail_in_shot1 shot5 cocktail1  -> m0_do_cocktail_in_shot1 83 411 441 396
446 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 276
447 do_cocktail_in_shot1 shot3 cocktail5  -> m0_do_cocktail_in_shot1 41 316 359 416
448 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient3 right  -> _m3_get_second_ingredient_2 175
449 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient1 right  -> _m2_get_first_ingredient_4 215
450 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 left  -> _m2_get_first_ingredient_4 69
451 get_first_ingredient cocktail8 right  -> m2_get_first_ingredient 167 422 428 389
452 do_cocktail_in_shot1 shot1 cocktail7  -> m0_do_cocktail_in_shot1 0 400 409 327
453 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 47
454 do_cocktail_in_shot1 shot13 cocktail7  -> m0_do_cocktail_in_shot1 250 319 419 387
455 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 216 392 460 219
456 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient3 left  -> _m3_get_second_ingredient_2 279
457 do_cocktail_in_shot1 shot10 cocktail2  -> m0_do_cocktail_in_shot1 187 350 363 380
458 do_clean_shot_m4_serve_shot_sip_2 shot13 left  -> <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,left];m5_do_clean_shot;0;-1,-2> 263 264
459 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 176
460 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 218
461 get_first_ingredient cocktail3 right  -> m2_get_first_ingredient 125 323 357 329
462 do_clean_shot_m4_serve_shot_sip_2 shot2 right  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2> 33 34

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 23.311 MEMPEAK_KBS 860521.472
