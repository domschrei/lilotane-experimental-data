PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/HikingG/domain.hddl instances/HikingG/p15.hddl"


Planner Configuration
=====================
Domain: instances/HikingG/domain.hddl
Problem: instances/HikingG/p15.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p15.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 29
Compiling negative preconditions ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 29
Compiling split parameters ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 29
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 29
Grounded planning graph ... done in 1278ms.
	Number of Grounded Actions 12528
	Number of Grounded Literals 95
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 29
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 29
Grounding ... done.
	number of abstract tasks = 50
	number of tasks = 6658
	number of decomposition methods = 6133
	number of predicates = 95
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 4077
	number of epsilon methods = 0
	number of primitive tasks = 6608
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 50
	number of tasks = 6658
	number of decomposition methods = 6133
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 4077
	number of epsilon methods = 0
	number of primitive tasks = 6608
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1048ms.
	Number of Grounded Actions 6608
	Number of Grounded Literals 88
	number of abstract tasks = 50
	number of tasks = 6658
	number of decomposition methods = 6133
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 4077
	number of epsilon methods = 0
	number of primitive tasks = 6608
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 50
	number of tasks = 6658
	number of decomposition methods = 6133
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 4077
	number of epsilon methods = 0
	number of primitive tasks = 6608
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 50
	number of tasks = 6658
	number of decomposition methods = 6134
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 4077
	number of epsilon methods = 0
	number of primitive tasks = 6608
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 3651
	number of tasks = 10259
	number of decomposition methods = 9735
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 4077
	number of epsilon methods = 0
	number of primitive tasks = 6608
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 3651
	number of tasks = 10259
	number of decomposition methods = 9735
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 4077
	number of epsilon methods = 0
	number of primitive tasks = 6608
	number of constants = 0
Tasks 6608 - 2
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854764488ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854761945
done
initial PDT has 16 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 8 leafs
SHOP LEAFS 6
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 11484
Size 11484 at 0/6608
Size 11381 at 500/6608
Size 11381 at 1000/6608
Size 6165 at 1500/6608
Size 5623 at 2000/6608
Size 5623 at 2500/6608
Size 5623 at 3000/6608
Size 5623 at 3500/6608
Size 5623 at 4000/6608
Size 5623 at 4500/6608
Size 3460 at 5000/6608
Size 3460 at 5500/6608
Size 3460 at 6000/6608
Size 3460 at 6500/6608
Size 1180
Size 1180 at 0/6608
Size 214 at 500/6608
Size 214 at 1000/6608
Size 140 at 1500/6608
Size 140 at 2000/6608
Size 140 at 2500/6608
Size 140 at 3000/6608
Size 140 at 3500/6608
Size 140 at 4000/6608
Size 140 at 4500/6608
Size 140 at 5000/6608
Size 140 at 5500/6608
Size 140 at 6000/6608
Size 140 at 6500/6608
Size 94
Size 94 at 0/6608
Size 94 at 500/6608
Size 94 at 1000/6608
Size 94 at 1500/6608
Size 94 at 2000/6608
Size 94 at 2500/6608
Size 94 at 3000/6608
Size 94 at 3500/6608
Size 94 at 4000/6608
Size 94 at 4500/6608
Size 94 at 5000/6608
Size 94 at 5500/6608
Size 94 at 6000/6608
Size 94 at 6500/6608
Size 94
Invariant time: 0.723
Number of invariants: 94
Invariant Clauses 846
NUMBER OF CLAUSES 1844426
NUMBER OF STATE CLAUSES 29747
NUMBER OF DECOMPOSITION CLAUSES 1814679
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 1.61% 98.39% 0.0% 
NUMBER OF PATHS 8
Starting cryptominisat5.5
Setting starttime of solver to 1604518879466
Command exited with non-zero status 20
0.34 0.00

Time command gave the following runtime for the solver: 340
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854756669
done
initial PDT has 35 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 19 leafs
SHOP LEAFS 8
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1880
NUMBER OF CLAUSES 1928197
NUMBER OF STATE CLAUSES 42607
NUMBER OF DECOMPOSITION CLAUSES 1885590
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 2.21% 97.79% 0.0% 
NUMBER OF PATHS 19
Starting cryptominisat5.5
Setting starttime of solver to 1604518884183
Command exited with non-zero status 20
0.48 0.01

Time command gave the following runtime for the solver: 490
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854751858
done
initial PDT has 60 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 41 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 3948
NUMBER OF CLAUSES 4191483
NUMBER OF STATE CLAUSES 72722
NUMBER OF DECOMPOSITION CLAUSES 4118761
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 1.73% 98.27% 0.0% 
NUMBER OF PATHS 41
Starting cryptominisat5.5
Setting starttime of solver to 1604518894242
Command exited with non-zero status 20
1.69 0.06

Time command gave the following runtime for the solver: 1750
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854740199
done
initial PDT has 90 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 67 leafs
SHOP LEAFS 22
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 6392
NUMBER OF CLAUSES 4863296
NUMBER OF STATE CLAUSES 104582
NUMBER OF DECOMPOSITION CLAUSES 4758714
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 2.15% 97.85000000000001% 0.0% 
NUMBER OF PATHS 67
Starting cryptominisat5.5
Setting starttime of solver to 1604518907325
Command exited with non-zero status 20
2.58 0.07

Time command gave the following runtime for the solver: 2650
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854725887
done
initial PDT has 124 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 97 leafs
SHOP LEAFS 32
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 9212
NUMBER OF CLAUSES 5534160
NUMBER OF STATE CLAUSES 138377
NUMBER OF DECOMPOSITION CLAUSES 5395783
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 2.5% 97.5% 0.0% 
NUMBER OF PATHS 97
Starting cryptominisat5.5
Setting starttime of solver to 1604518925548
Command exited with non-zero status 20
3.83 0.10

Time command gave the following runtime for the solver: 3930
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854706184
done
initial PDT has 162 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 131 leafs
SHOP LEAFS 44
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 12408
NUMBER OF CLAUSES 6208967
NUMBER OF STATE CLAUSES 174107
NUMBER OF DECOMPOSITION CLAUSES 6034860
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 2.8000000000000003% 97.2% 0.0% 
NUMBER OF PATHS 131
Starting cryptominisat5.5
Setting starttime of solver to 1604518947394
Command exited with non-zero status 20
5.61 0.17

Time command gave the following runtime for the solver: 5780
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854682256
done
initial PDT has 204 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 169 leafs
SHOP LEAFS 58
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 15980
NUMBER OF CLAUSES 6887717
NUMBER OF STATE CLAUSES 211772
NUMBER OF DECOMPOSITION CLAUSES 6675945
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 3.0700000000000003% 96.93% 0.0% 
NUMBER OF PATHS 169
Starting cryptominisat5.5
Setting starttime of solver to 1604518975673
Command exited with non-zero status 20
8.84 0.14

Time command gave the following runtime for the solver: 8980
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854650672
done
initial PDT has 250 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 211 leafs
SHOP LEAFS 74
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 19928
NUMBER OF CLAUSES 7570410
NUMBER OF STATE CLAUSES 251372
NUMBER OF DECOMPOSITION CLAUSES 7319038
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 3.3200000000000003% 96.68% 0.0% 
NUMBER OF PATHS 211
Starting cryptominisat5.5
Setting starttime of solver to 1604519009202
Command exited with non-zero status 10
7.16 0.17

Time command gave the following runtime for the solver: 7330
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_0;2,949 949 m0_trip_to1
0;2 52 pathaction!2_0;2,4658
Consider method^3_0;1;0,5853 5853 m10_bring_tent
0;1;0 90 pathaction!3_0;1;0,4649
Consider method^5_0;2;1;9;5,3981 3981 m5_walk_everyone
0;2;1;9;5 21 pathaction!5_0;2;1;9;5,4787
Consider method^5_0;2;1;9;9,8084 8084 __UNIQUE-replacement_2966
0;2;1;9;9 48 pathaction!5_0;2;1;9;9,9624
Consider method^4_0;2;1;9,8086 8086 m3_trip_to2
0;2;1;9 36 pathaction!4_0;2;1;9,4630
Consider method^0_,9734 9734 __top_2
 65 pathaction!0_,10258
Consider method^10_0;2;1;9;5;2;2;2;2;2,8332 8332 m4_walk_everyone
0;2;1;9;5;2;2;2;2;2 64 pathaction!10_0;2;1;9;5;2;2;2;2;2,4787
Consider method^8_0;2;1;8;5;2;2;2,822 822 m5_walk_everyone
0;2;1;8;5;2;2;2 56 pathaction!8_0;2;1;8;5;2;2;2,4783
Consider method^10_0;2;1;8;5;2;2;2;2;2,4592 4592 m4_walk_everyone
0;2;1;8;5;2;2;2;2;2 68 pathaction!10_0;2;1;8;5;2;2;2;2;2,4783
Consider method^3_0;2;1,3752 3752 m2_trip_to2
0;2;1 47 pathaction!3_0;2;1,4633
Consider method^8_0;2;1;9;5;2;2;2,3317 3317 m5_walk_everyone
0;2;1;9;5;2;2;2 32 pathaction!8_0;2;1;9;5;2;2;2,4787
Consider method^5_0;2;1;8;2,6351 6351 __UNIQUE-replacement_2377
0;2;1;8;2 14 pathaction!5_0;2;1;8;2,9035
Consider method^9_0;2;1;9;5;2;2;2;2,353 353 m5_walk_everyone
0;2;1;9;5;2;2;2;2 46 pathaction!9_0;2;1;9;5;2;2;2;2,4787
Consider method^7_0;2;1;8;5;2;2,6903 6903 m5_walk_everyone
0;2;1;8;5;2;2 0 pathaction!7_0;2;1;8;5;2;2,4783
Consider method^3_0;1;1,6249 6249 m11_bring_cars
0;1;1 81 pathaction!3_0;1;1,6657
Consider method^6_0;2;1;9;5;2,3726 3726 m5_walk_everyone
0;2;1;9;5;2 43 pathaction!6_0;2;1;9;5;2,4787
Consider method^1_0,4320 4320 m14_everyone_go_hiking
0 73 pathaction!1_0,6604
Consider method^2_0;1,127 127 m6_prepare_trip
0;1 31 pathaction!2_0;1,4653
Consider method^6_0;2;1;8;5;2,4679 4679 m5_walk_everyone
0;2;1;8;5;2 19 pathaction!6_0;2;1;8;5;2,4783
Consider method^7_0;2;1;9;5;2;2,1220 1220 m5_walk_everyone
0;2;1;9;5;2;2 22 pathaction!7_0;2;1;9;5;2;2,4787
Consider method^9_0;2;1;8;5;2;2;2;2,659 659 m5_walk_everyone
0;2;1;8;5;2;2;2;2 40 pathaction!9_0;2;1;8;5;2;2;2;2,4783
Consider method^5_0;2;1;8;5,7989 7989 m5_walk_everyone
0;2;1;8;5 8 pathaction!5_0;2;1;8;5,4783
Consider method^5_0;2;1;8;9,6350 6350 __UNIQUE-replacement_2376
0;2;1;8;9 11 pathaction!5_0;2;1;8;9,9034
Consider method^4_0;2;1;8,6352 6352 m3_trip_to2
0;2;1;8 35 pathaction!4_0;2;1;8,4638
Consider method^5_0;2;1;9;2,8085 8085 __UNIQUE-replacement_2967
0;2;1;9;2 37 pathaction!5_0;2;1;9;2,9625


CHECKING primitive solution of length 47 ...
true 49 __method_precondition_m14_everyone_go_hiking_14_precondition[couple0,guy0,girl0,place0;]
true 42 __method_precondition_m10_bring_tent_10_precondition[tent0,place0,guy3;]
true 79 put_down[guy3,place0,tent0;]
true 83 __method_precondition_m11_bring_cars_11_precondition[car1,place0,car2;]
true 34 nop[;]
true 30 __method_precondition_m0_trip_to1_0_precondition[couple0,guy0,girl0,place0;]
true 4 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 57 __method_precondition_m3_trip_to2_3_precondition[car0,couple0,place1,guy0,girl0,place0,car1,tent0;]
true 60 drive_tent[guy0,place0,place1,car1,tent0;]
true 28 drive[girl0,place0,place1,car0;]
true 2 put_up[guy0,place1,tent0;]
true 80 drive_passenger[girl0,place1,place0,car0,guy0;]
true 7 __method_precondition_m5_walk_everyone_5_precondition[place1,guy4,girl4,place0,couple4;]
true 25 walk_together[tent0,place1,guy4,place0,girl4,couple4;]
true 3 __method_precondition_m5_walk_everyone_5_precondition[place1,guy1,girl1,place0,couple1;]
true 1 walk_together[tent0,place1,guy1,place0,girl1,couple1;]
true 12 __method_precondition_m5_walk_everyone_5_precondition[place1,guy0,girl0,place0,couple0;]
true 18 walk_together[tent0,place1,guy0,place0,girl0,couple0;]
true 70 __method_precondition_m5_walk_everyone_5_precondition[place1,guy2,girl2,place0,couple2;]
true 82 walk_together[tent0,place1,guy2,place0,girl2,couple2;]
true 20 __method_precondition_m5_walk_everyone_5_precondition[place1,guy3,girl3,place0,couple3;]
true 78 walk_together[tent0,place1,guy3,place0,girl3,couple3;]
true 62 nop[;]
true 66 put_down[girl0,place1,tent0;]
true 5 drive_passenger[guy0,place1,place0,car1,girl0;]
true 69 drive[guy0,place0,place1,car1;]
true 63 drive[girl0,place0,place1,car0;]
true 67 __method_precondition_m3_trip_to2_3_precondition[car1,couple0,place2,guy0,girl0,place1,car0,tent0;]
true 55 drive_tent[guy0,place1,place2,car0,tent0;]
true 13 drive[girl0,place1,place2,car1;]
true 85 put_up[guy0,place2,tent0;]
true 51 drive_passenger[girl0,place2,place1,car1,guy0;]
true 10 __method_precondition_m5_walk_everyone_5_precondition[place2,guy3,girl3,place1,couple3;]
true 88 walk_together[tent0,place2,guy3,place1,girl3,couple3;]
true 71 __method_precondition_m5_walk_everyone_5_precondition[place2,guy2,girl2,place1,couple2;]
true 24 walk_together[tent0,place2,guy2,place1,girl2,couple2;]
true 84 __method_precondition_m5_walk_everyone_5_precondition[place2,guy1,girl1,place1,couple1;]
true 39 walk_together[tent0,place2,guy1,place1,girl1,couple1;]
true 17 __method_precondition_m5_walk_everyone_5_precondition[place2,guy0,girl0,place1,couple0;]
true 77 walk_together[tent0,place2,guy0,place1,girl0,couple0;]
true 50 __method_precondition_m5_walk_everyone_5_precondition[place2,guy4,girl4,place1,couple4;]
true 75 walk_together[tent0,place2,guy4,place1,girl4,couple4;]
true 54 nop[;]
true 72 put_down[girl0,place2,tent0;]
true 45 drive_passenger[guy0,place2,place1,car0,girl0;]
true 89 drive[guy0,place1,place2,car0;]
true 74 drive[girl0,place1,place2,car1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 7304
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 14608
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 21912
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 4
ICAPS: 29216
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 5
ICAPS: 36520
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 6
ICAPS: 43824
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 7
ICAPS: 51128
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
LEN 8
ICAPS: 58432
TSTG: 2147483647
Method: 2147483647
DP max: 10
Taking minimum: 10
LEN 9
ICAPS: 65736
TSTG: 2147483647
Method: 2147483647
DP max: 11
Taking minimum: 11
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 30
  lower bound = 8

Running SAT search with cost bound = 19
==================================================
  upper bound = 30
  lower bound = 8
LEN 19
ICAPS: 138776
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854617327
DP max: 21
Taking minimum: 21
Generating initial PDT ... done
initial PDT has 930 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 851 leafs
SHOP LEAFS 344
Assignment implications
Generating clauses representing decomposition ... done
At most K: 600ms input: 33425 K = 19
Number of actions Formula: 713ms for 1303555 clauses
Layers: 10 paths 851
Layer 1 g 0 = 0 - 1 / 0 clauses 363378
Layer 1 g 1 = 2 - 3 / 2 clauses 363378
Layer 1 g 2 = 4 - 5 / 4 clauses 363378
Layer 1 g 3 = 6 - 7 / 6 clauses 363378
Layer 1 g 4 = 8 - 9 / 8 clauses 363378
Layer 1 g 5 = 10 - 11 / 10 clauses 363378
Layer 1 g 6 = 12 - 13 / 12 clauses 363378
Layer 1 g 7 = 14 - 15 / 14 clauses 363378
Layer 1 g 8 = 16 - 17 / 16 clauses 363378
Layer 1 g 9 = 18 - 19 / 18 clauses 363378
Layer 1 g 10 = 20 - 21 / 20 clauses 363378
Layer 1 g 11 = 22 - 23 / 22 clauses 363378
Layer 1 g 12 = 24 - 25 / 24 clauses 363378
Layer 1 g 13 = 26 - 27 / 26 clauses 363378
Layer 1 g 14 = 28 - 29 / 28 clauses 363378
Layer 1 g 15 = 30 - 31 / 30 clauses 363378
Layer 1 g 16 = 32 - 33 / 32 clauses 363378
Layer 1 g 17 = 34 - 35 / 34 clauses 363378
Layer 1 g 18 = 36 - 37 / 36 clauses 363378
Layer 1 g 19 = 38 - 39 / 38 clauses 363378
Layer 1 g 20 = 40 - 41 / 40 clauses 363378
Layer 1 g 21 = 42 - 43 / 42 clauses 363378
Layer 1 g 22 = 44 - 45 / 44 clauses 363378
Layer 1 g 23 = 46 - 47 / 46 clauses 363378
Layer 1 g 24 = 48 - 49 / 48 clauses 363378
Layer 1 g 25 = 50 - 51 / 50 clauses 363378
Layer 1 g 26 = 52 - 53 / 52 clauses 363378
Layer 1 g 27 = 54 - 55 / 54Still waiting ... running for 71620 will abort at 9223372036854617327
 clauses 363378
Layer 1 g 28 = 56 - 57 / 56 clauses 363378
Layer 1 g 29 = 58 - 59 / 58 clauses 363378
Layer 1 g 30 = 60 - 61 / 60 clauses 363378
Layer 1 g 31 = 62 - 63 / 62 clauses 363378
Layer 1 g 32 = 64 - 65 / 64 clauses 363378
Layer 1 g 33 = 66 - 67 / 66 clauses 363378
Layer 1 g 34 = 68 - 69 / 68 clauses 363378
Layer 1 g 35 = 70 - 71 / 70 clauses 363378
Layer 1 g 36 = 72 - 73 / 72 clauses 363378
Layer 1 g 37 = 74 - 75 / 74 clauses 363378
Layer 1 g 38 = 76 - 77 / 76 clauses 363378
Layer 1 g 39 = 78 - 79 / 78 clauses 363378
Layer 1 g 40 = 80 - 81 / 80 clauses 363378
Layer 1 g 41 = 82 - 83 / 82 clauses 363378
Layer 1 g 42 = 84 - 85 / 84 clauses 363378
Layer 1 g 43 = 86 - 87 / 86 clauses 363378
Layer 1 g 44 = 88 - 89 / 88 clauses 363378
Layer 1 g 45 = 90 - 91 / 90 clauses 363378
Layer 1 g 46 = 92 - 93 / 92 clauses 363378
Layer 1 g 47 = 94 - 95 / 94 clauses 363378
Layer 1 g 48 = 96 - 97 / 96 clauses 363378
Layer 1 g 49 = 98 - 99 / 98 clauses 363378
Layer 1 g 50 = 100 - 101 / 100 clauses 363378
Layer 1 g 51 = 102 - 103 / 102 clauses 363378
Layer 1 g 52 = 104 - 105 / 104 clauses 363378
Layer 1 g 53 = 106 - 107 / 106 clauses 363378
Layer 1 g 54 = 108 - 109 / 108 clauses 363378
Layer 1 g 55 = 110 - 111 / 110 clauses 363378
Layer 1 g 56 = 112 - 113 / 112 clauses 363378
Layer 1 g 57 = 114 - 115 / 114 clauses 363378
Layer 1 g 58 = 116 - 117 / 116 clauses 363378
Layer 1 g 59 = 118 - 119 / 118 clauses 363378
Layer 1 g 60 = 120 - 121 / 120 clauses 363378
Layer 1 g 61 = 122 - 123 / 122 clauses 363378
Layer 1 g 62 = 124 - 125 / 124 clauses 363378
Layer 1 g 63 = 126 - 127 / 126 clauses 363378
Layer 1 g 64 = 128 - 129 / 128 clauses 363378
Layer 1 g 65 = 130 - 131 / 130 clauses 363378
Layer 1 g 66 = 132 - 133 / 132 clauses 363378
Layer 1 g 67 = 134 - 135 / 134 clauses 363378
Layer 1 g 68 = 136 - 137 / 136 clauses 363378
Layer 1 g 69 = 138 - 139 / 138 clauses 363378
Layer 1 g 70 = 140 - 141 / 140 clauses 363378
Layer 1 g 71 = 142 - 143 / 142 clauses 363378
Layer 1 g 72 = 144 - 145 / 144 clauses 363378
Layer 1 g 73 = 146 - 147 / 146 clauses 363378
Layer 1 g 74 = 148 - 149 / 148 clauses 363378
Layer 1 g 75 = 150 - 151 / 150 clauses 363378
Layer 1 g 76 = 152 - 153 / 152 clauses 363378
Layer 1 g 77 = 154 - 155 / 154 clauses 363378
Layer 1 g 78 = 156 - 157 / 156 clauses 363378
Layer 1 g 79 = 158 - 159 / 158 clauses 363378
Layer 1 g 80 = 160 - 161 / 160 clauses 363378
Layer 1 g 81 = 162 - 163 / 162 clauses 363378
Layer 1 g 82 = 164 - 165 / 164 clauses 363378
Layer 1 g 83 = 166 - 167 / 166 clauses 363378
Layer 1 g 84 = 168 - 169 / 168 clauses 363378
Layer 1 g 85 = 170 - 171 / 170 clauses 363378
Layer 1 g 86 = 172 - 173 / 172 clauses 363378
Layer 1 g 87 = 174 - 175 / 174 clauses 363378
Layer 1 g 88 = 176 - 177 / 176 clauses 363378
Layer 1 g 89 = 178 - 179 / 178 clauses 363378
Layer 1 g 90 = 180 - 181 / 180 clauses 363378
Layer 1 g 91 = 182 - 183 / 182 clauses 363378
Layer 1 g 92 = 184 - 185 / 184 clauses 363378
Layer 1 g 93 = 186 - 187 / 186 clauses 363378
Layer 1 g 94 = 188 - 189 / 188 clauses 363378
Layer 1 g 95 = 190 - 191 / 190 clauses 363378
Layer 1 g 96 = 192 - 193 / 192 clauses 363378
Layer 1 g 97 = 194 - 195 / 194 clauses 363378
Layer 1 g 98 = 196 - 197 / 196 clauses 363378
Layer 1 g 99 = 198 - 199 / 198 clauses 363378
Layer 1 g 100 = 200 - 201 / 200 clauses 363378
Layer 1 g 101 = 202 - 203 / 202 clauses 363378
Layer 1 g 102 = 204 - 205 / 204 clauses 363378
Layer 1 g 103 = 206 - 207 / 206 clauses 363378
Layer 1 g 104 = 208 - 209 / 208 clauses 363378
Layer 1 g 105 = 210 - 211 / 210 clauses 363378
Layer 1 g 106 = 212 - 213 / 212 clauses 363378
Layer 1 g 107 = 214 - 215 / 214 clauses 363378
Layer 1 g 108 = 216 - 217 / 216 clauses 363378
Layer 1 g 109 = 218 - 219 / 218 clauses 363378
Layer 1 g 110 = 220 - 221 / 220 clauses 363378
Layer 1 g 111 = 222 - 223 / 222 clauses 363378
Layer 1 g 112 = 224 - 225 / 224 clauses 363378
Layer 1 g 113 = 226 - 227 / 226 clauses 363378
Layer 1 g 114 = 228 - 229 / 228
RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.250 MEMPEAK_KBS 7091391.488
