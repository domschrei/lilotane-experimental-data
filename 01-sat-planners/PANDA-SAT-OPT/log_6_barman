PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p06.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p06.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p06.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 42
Grounded planning graph ... done in 643ms.
	Number of Grounded Actions 2836
	Number of Grounded Literals 420
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 1398
	number of tasks = 4212
	number of decomposition methods = 5376
	number of predicates = 420
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1398
	number of tasks = 4212
	number of decomposition methods = 5376
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 457ms.
	Number of Grounded Actions 2814
	Number of Grounded Literals 390
	number of abstract tasks = 1398
	number of tasks = 4212
	number of decomposition methods = 5376
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1398
	number of tasks = 4212
	number of decomposition methods = 5376
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1399
	number of tasks = 4213
	number of decomposition methods = 5377
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1399
	number of tasks = 4213
	number of decomposition methods = 5377
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 230ms.
	Number of Grounded Actions 2814
	Number of Grounded Literals 390
	number of abstract tasks = 1399
	number of tasks = 4213
	number of decomposition methods = 5377
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1399
	number of tasks = 4213
	number of decomposition methods = 5377
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1399
	number of tasks = 4213
	number of decomposition methods = 5377
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1399
	number of tasks = 4213
	number of decomposition methods = 5377
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1399
	number of tasks = 4213
	number of decomposition methods = 5377
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Tasks 2814 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768019ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767447
done
initial PDT has 322 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 322 leafs
SHOP LEAFS 84
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 227565
Size 227565 at 0/2814
Size 227490 at 500/2814
Size 193543 at 1000/2814
Size 47137 at 1500/2814
Size 31133 at 2000/2814
Size 31128 at 2500/2814
Size 31128
Size 31128 at 0/2814
Size 31128 at 500/2814
Size 22761 at 1000/2814
Size 14125 at 1500/2814
Size 4360 at 2000/2814
Size 4291 at 2500/2814
Size 4247
Size 4247 at 0/2814
Size 4247 at 500/2814
Size 4235 at 1000/2814
Size 4192 at 1500/2814
Size 4089 at 2000/2814
Size 4089 at 2500/2814
Size 4084
Size 4084 at 0/2814
Size 4084 at 500/2814
Size 4028 at 1000/2814
Size 3888 at 1500/2814
Size 3790 at 2000/2814
Size 3790 at 2500/2814
Size 3790
Size 3790 at 0/2814
Size 3790 at 500/2814
Size 3790 at 1000/2814
Size 3790 at 1500/2814
Size 3790 at 2000/2814
Size 3790 at 2500/2814
Size 3790
Invariant time: 2.491
Number of invariants: 3790
Invariant Clauses 1224170
NUMBER OF CLAUSES 1863890
NUMBER OF STATE CLAUSES 1573552
NUMBER OF DECOMPOSITION CLAUSES 290338
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.42% 15.58% 0.0% 
NUMBER OF PATHS 322
Starting cryptominisat5.5
Setting starttime of solver to 1604494385036
Command exited with non-zero status 10
0.95 0.07

Time command gave the following runtime for the solver: 1020
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_11,1379 1379 m0_do_cocktail_in_shot1
11 402 pathaction!1_11,185
Consider method^3_9;3;1,599 599 _m4_serve_shot_2
9;3;1 241 pathaction!3_9;3;1,2405
Consider method^2_4;2,3641 3641 m3_get_second_ingredient
4;2 185 pathaction!2_4;2,4155
Consider method^3_10;1;1,5230 5230 m8_do_fill_shot
10;1;1 465 pathaction!3_10;1;1,2611
Consider method^2_6;2,5178 5178 m3_get_second_ingredient
6;2 200 pathaction!2_6;2,4154
Consider method^2_9;3,902 902 m4_serve_shot
9;3 285 pathaction!2_9;3,3764
Consider method^3_13;3;4,4117 4117 _m4_serve_shot_5
13;3;4 276 pathaction!3_13;3;4,158
Consider method^2_6;1,1679 1679 m2_get_first_ingredient
6;1 275 pathaction!2_6;1,3743
Consider method^1_2,656 656 m0_do_cocktail_in_shot1
2 385 pathaction!1_2,183
Consider method^2_10;2,1559 1559 m3_get_second_ingredient
10;2 319 pathaction!2_10;2,4158
Consider method^3_3;3;1,1499 1499 _m4_serve_shot_2
3;3;1 473 pathaction!3_3;3;1,2395
Consider method^2_10;1,3201 3201 m2_get_first_ingredient
10;1 452 pathaction!2_10;1,3747
Consider method^3_10;1;3,1131 1131 _m2_get_first_ingredient_4
10;1;3 250 pathaction!3_10;1;3,2761
Consider method^3_4;1;1,3972 3972 m8_do_fill_shot
4;1;1 486 pathaction!3_4;1;1,2660
Consider method^3_9;2;1,3206 3206 _m3_get_second_ingredient_2
9;2;1 399 pathaction!3_9;2;1,671
Consider method^2_13;2,1593 1593 m3_get_second_ingredient
13;2 450 pathaction!2_13;2,4153
Consider method^3_4;3;5,395 395 _m4_serve_shot_6
4;3;5 258 pathaction!3_4;3;5,95
Consider method^2_11;2,4390 4390 m3_get_second_ingredient
11;2 216 pathaction!2_11;2,4165
Consider method^3_12;3;5,1018 1018 _m4_serve_shot_6
12;3;5 53 pathaction!3_12;3;5,80
Consider method^2_13;3,813 813 m4_serve_shot
13;3 156 pathaction!2_13;3,3769
Consider method^3_13;3;5,451 451 _m4_serve_shot_6
13;3;5 342 pathaction!3_13;3;5,82
Consider method^3_10;3;1,4154 4154 _m4_serve_shot_2
10;3;1 44 pathaction!3_10;3;1,2402
Consider method^4_3;3;1;0,3070 3070 m6_do_clean_shot
3;3;1;0 49 pathaction!4_3;3;1;0,3463
Consider method^1_10,2869 2869 m0_do_cocktail_in_shot1
10 446 pathaction!1_10,184
Consider method^3_0;2;1,5202 5202 _m3_get_second_ingredient_2
0;2;1 415 pathaction!3_0;2;1,770
Consider method^3_8;1;1,2152 2152 m8_do_fill_shot
8;1;1 238 pathaction!3_8;1;1,2596
Consider method^3_13;2;2,3119 3119 _m3_get_second_ingredient_3
13;2;2 245 pathaction!3_13;2;2,2509
Consider method^2_7;2,2897 2897 m3_get_second_ingredient
7;2 101 pathaction!2_7;2,4156
Consider method^3_8;2;1,173 173 _m3_get_second_ingredient_2
8;2;1 175 pathaction!3_8;2;1,792
Consider method^3_7;2;1,419 419 _m3_get_second_ingredient_2
7;2;1 337 pathaction!3_7;2;1,654
Consider method^2_12;2,359 359 m3_get_second_ingredient
12;2 76 pathaction!2_12;2,4147
Consider method^3_1;1;1,2931 2931 m8_do_fill_shot
1;1;1 205 pathaction!3_1;1;1,2683
Consider method^3_7;2;2,3291 3291 _m3_get_second_ingredient_3
7;2;2 374 pathaction!3_7;2;2,2519
Consider method^2_0;2,531 531 m3_get_second_ingredient
0;2 56 pathaction!2_0;2,4161
Consider method^3_13;2;1,4657 4657 _m3_get_second_ingredient_2
13;2;1 269 pathaction!3_13;2;1,678
Consider method^4_6;3;1;0,638 638 m6_do_clean_shot
6;3;1;0 122 pathaction!4_6;3;1;0,3293
Consider method^4_5;3;1;0,131 131 m6_do_clean_shot
5;3;1;0 224 pathaction!4_5;3;1;0,3298
Consider method^3_11;2;2,1336 1336 _m3_get_second_ingredient_3
11;2;2 17 pathaction!3_11;2;2,2516
Consider method^3_4;1;2,2527 2527 _m2_get_first_ingredient_3
4;1;2 384 pathaction!3_4;1;2,1282
Consider method^2_11;1,1153 1153 m2_get_first_ingredient
11;1 150 pathaction!2_11;1,3754
Consider method^3_12;1;1,1224 1224 m8_do_fill_shot
12;1;1 7 pathaction!3_12;1;1,2617
Consider method^0_,5376 5376 __top_1
 180 pathaction!0_,4212
Consider method^2_8;2,1425 1425 m3_get_second_ingredient
8;2 366 pathaction!2_8;2,4150
Consider method^3_4;2;2,1252 1252 _m3_get_second_ingredient_3
4;2;2 43 pathaction!3_4;2;2,2447
Consider method^3_7;3;1,250 250 _m4_serve_shot_2
7;3;1 51 pathaction!3_7;3;1,2386
Consider method^3_0;3;5,2785 2785 _m4_serve_shot_6
0;3;5 361 pathaction!3_0;3;5,100
Consider method^3_2;1;3,1377 1377 _m2_get_first_ingredient_4
2;1;3 283 pathaction!3_2;1;3,2799
Consider method^3_2;1;1,4929 4929 m8_do_fill_shot
2;1;1 480 pathaction!3_2;1;1,2649
Consider method^3_13;1;1,4667 4667 m9_do_fill_shot
13;1;1 395 pathaction!3_13;1;1,2705
Consider method^4_1;3;1;0,1189 1189 m5_do_clean_shot
1;3;1;0 259 pathaction!4_1;3;1;0,3507
Consider method^1_0,142 142 m0_do_cocktail_in_shot1
0 253 pathaction!1_0,177
Consider method^3_6;1;3,2663 2663 _m2_get_first_ingredient_4
6;1;3 146 pathaction!3_6;1;3,2720
Consider method^2_0;3,2053 2053 m4_serve_shot
0;3 116 pathaction!2_0;3,3759
Consider method^3_0;1;3,4433 4433 _m2_get_first_ingredient_4
0;1;3 38 pathaction!3_0;1;3,2805
Consider method^3_8;1;2,3126 3126 _m2_get_first_ingredient_3
8;1;2 338 pathaction!3_8;1;2,1141
Consider method^3_3;2;2,1594 1594 _m3_get_second_ingredient_3
3;2;2 199 pathaction!3_3;2;2,2489
Consider method^2_2;1,4450 4450 m2_get_first_ingredient
2;1 172 pathaction!2_2;1,3756
Consider method^3_7;3;4,2732 2732 _m4_serve_shot_5
7;3;4 334 pathaction!3_7;3;4,173
Consider method^3_2;1;2,4669 4669 _m2_get_first_ingredient_3
2;1;2 390 pathaction!3_2;1;2,1207
Consider method^4_0;3;1;0,2439 2439 m6_do_clean_shot
0;3;1;0 249 pathaction!4_0;3;1;0,3344
Consider method^4_2;3;1;0,83 83 m6_do_clean_shot
2;3;1;0 55 pathaction!4_2;3;1;0,3327
Consider method^3_7;3;5,1598 1598 _m4_serve_shot_6
7;3;5 162 pathaction!3_7;3;5,118
Consider method^1_7,2582 2582 m0_do_cocktail_in_shot1
7 350 pathaction!1_7,186
Consider method^3_6;3;5,3656 3656 _m4_serve_shot_6
6;3;5 429 pathaction!3_6;3;5,109
Consider method^2_10;3,2272 2272 m4_serve_shot
10;3 418 pathaction!2_10;3,3766
Consider method^2_12;1,934 934 m2_get_first_ingredient
12;1 376 pathaction!2_12;1,3736
Consider method^3_6;1;1,197 197 m8_do_fill_shot
6;1;1 82 pathaction!3_6;1;1,2570
Consider method^3_10;3;4,1951 1951 _m4_serve_shot_5
10;3;4 268 pathaction!3_10;3;4,162
Consider method^3_2;2;2,2107 2107 _m3_get_second_ingredient_3
2;2;2 73 pathaction!3_2;2;2,2527
Consider method^3_6;2;2,4575 4575 _m3_get_second_ingredient_3
6;2;2 19 pathaction!3_6;2;2,2473
Consider method^3_11;3;1,4567 4567 _m4_serve_shot_2
11;3;1 226 pathaction!3_11;3;1,2380
Consider method^3_10;3;5,1428 1428 _m4_serve_shot_6
10;3;5 409 pathaction!3_10;3;5,84
Consider method^1_8,692 692 m0_do_cocktail_in_shot1
8 354 pathaction!1_8,176
Consider method^2_5;1,1617 1617 m2_get_first_ingredient
5;1 420 pathaction!2_5;1,3749
Consider method^3_12;2;1,5017 5017 _m3_get_second_ingredient_2
12;2;1 265 pathaction!3_12;2;1,714
Consider method^4_9;3;1;0,5244 5244 m6_do_clean_shot
9;3;1;0 255 pathaction!4_9;3;1;0,3314
Consider method^3_8;1;3,4577 4577 _m2_get_first_ingredient_4
8;1;3 71 pathaction!3_8;1;3,2746
Consider method^1_13,3288 3288 m0_do_cocktail_in_shot1
13 267 pathaction!1_13,187
Consider method^3_6;3;1,4847 4847 _m4_serve_shot_2
6;3;1 397 pathaction!3_6;3;1,2393
Consider method^2_7;1,858 858 m2_get_first_ingredient
7;1 48 pathaction!2_7;1,3745
Consider method^3_8;3;4,4710 4710 _m4_serve_shot_5
8;3;4 252 pathaction!3_8;3;4,163
Consider method^3_11;3;5,2087 2087 _m4_serve_shot_6
11;3;5 72 pathaction!3_11;3;5,105
Consider method^1_3,3052 3052 m0_do_cocktail_in_shot1
3 481 pathaction!1_3,179
Consider method^1_6,4538 4538 m0_do_cocktail_in_shot1
6 426 pathaction!1_6,180
Consider method^3_7;1;1,607 607 m8_do_fill_shot
7;1;1 28 pathaction!3_7;1;1,2686
Consider method^3_11;1;2,3749 3749 _m2_get_first_ingredient_3
11;1;2 479 pathaction!3_11;1;2,1254
Consider method^3_3;3;5,2898 2898 _m4_serve_shot_6
3;3;5 160 pathaction!3_3;3;5,107
Consider method^3_6;2;1,4882 4882 _m3_get_second_ingredient_2
6;2;1 471 pathaction!3_6;2;1,665
Consider method^3_3;1;1,4329 4329 m8_do_fill_shot
3;1;1 411 pathaction!3_3;1;1,2620
Consider method^3_1;2;2,4217 4217 _m3_get_second_ingredient_3
1;2;2 31 pathaction!3_1;2;2,2464
Consider method^4_4;3;1;0,2948 2948 m6_do_clean_shot
4;3;1;0 363 pathaction!4_4;3;1;0,3310
Consider method^2_1;3,3235 3235 m4_serve_shot
1;3 174 pathaction!2_1;3,3757
Consider method^3_5;1;3,1976 1976 _m2_get_first_ingredient_4
5;1;3 98 pathaction!3_5;1;3,2766
Consider method^3_12;3;4,3197 3197 _m4_serve_shot_5
12;3;4 281 pathaction!3_12;3;4,172
Consider method^3_9;3;4,4674 4674 _m4_serve_shot_5
9;3;4 419 pathaction!3_9;3;4,153
Consider method^3_5;3;1,2296 2296 _m4_serve_shot_2
5;3;1 191 pathaction!3_5;3;1,2390
Consider method^3_12;1;3,4057 4057 _m2_get_first_ingredient_4
12;1;3 277 pathaction!3_12;1;3,2767
Consider method^3_7;1;2,982 982 _m2_get_first_ingredient_3
7;1;2 367 pathaction!3_7;1;2,1249
Consider method^3_1;1;2,5 5 _m2_get_first_ingredient_3
1;1;2 373 pathaction!3_1;1;2,1225
Consider method^2_13;1,4652 4652 m2_get_first_ingredient
13;1 478 pathaction!2_13;1,3742
Consider method^2_3;3,721 721 m4_serve_shot
3;3 298 pathaction!2_3;3,3761
Consider method^3_5;2;2,1436 1436 _m3_get_second_ingredient_3
5;2;2 149 pathaction!3_5;2;2,2465
Consider method^2_3;1,3511 3511 m2_get_first_ingredient
3;1 323 pathaction!2_3;1,3755
Consider method^1_4,2862 2862 m0_do_cocktail_in_shot1
4 124 pathaction!1_4,188
Consider method^1_9,760 760 m0_do_cocktail_in_shot1
9 32 pathaction!1_9,182
Consider method^3_11;3;4,2892 2892 _m4_serve_shot_5
11;3;4 143 pathaction!3_11;3;4,157
Consider method^2_7;3,3718 3718 m4_serve_shot
7;3 186 pathaction!2_7;3,3768
Consider method^3_0;1;2,1473 1473 _m2_get_first_ingredient_3
0;1;2 345 pathaction!3_0;1;2,1213
Consider method^3_12;1;2,453 453 _m2_get_first_ingredient_3
12;1;2 299 pathaction!3_12;1;2,1152
Consider method^2_4;3,4487 4487 m4_serve_shot
4;3 157 pathaction!2_4;3,3770
Consider method^3_2;3;4,1337 1337 _m4_serve_shot_5
2;3;4 121 pathaction!3_2;3;4,166
Consider method^2_11;3,3486 3486 m4_serve_shot
11;3 215 pathaction!2_11;3,3767
Consider method^1_5,3401 3401 m0_do_cocktail_in_shot1
5 39 pathaction!1_5,178
Consider method^3_6;1;2,2461 2461 _m2_get_first_ingredient_3
6;1;2 47 pathaction!3_6;1;2,1256
Consider method^2_12;3,3712 3712 m4_serve_shot
12;3 301 pathaction!2_12;3,3763
Consider method^3_11;1;3,5141 5141 _m2_get_first_ingredient_4
11;1;3 151 pathaction!3_11;1;3,2760
Consider method^3_13;1;3,4365 4365 _m2_get_first_ingredient_4
13;1;3 6 pathaction!3_13;1;3,2855
Consider method^3_12;2;2,278 278 _m3_get_second_ingredient_3
12;2;2 52 pathaction!3_12;2;2,2522
Consider method^3_8;2;2,890 890 _m3_get_second_ingredient_3
8;2;2 445 pathaction!3_8;2;2,2472
Consider method^2_2;3,1685 1685 m4_serve_shot
2;3 444 pathaction!2_2;3,3765
Consider method^2_8;3,939 939 m4_serve_shot
8;3 325 pathaction!2_8;3,3758
Consider method^3_8;3;5,1149 1149 _m4_serve_shot_6
8;3;5 434 pathaction!3_8;3;5,93
Consider method^3_9;1;3,255 255 _m2_get_first_ingredient_4
9;1;3 134 pathaction!3_9;1;3,2809
Consider method^3_2;2;1,361 361 _m3_get_second_ingredient_2
2;2;1 343 pathaction!3_2;2;1,679
Consider method^2_2;2,377 377 m3_get_second_ingredient
2;2 294 pathaction!2_2;2,4167
Consider method^2_3;2,4515 4515 m3_get_second_ingredient
3;2 233 pathaction!2_3;2,4166
Consider method^3_0;3;4,4788 4788 _m4_serve_shot_5
0;3;4 114 pathaction!3_0;3;4,159
Consider method^3_5;1;1,3327 3327 m8_do_fill_shot
5;1;1 389 pathaction!3_5;1;1,2616
Consider method^1_1,2602 2602 m0_do_cocktail_in_shot1
1 220 pathaction!1_1,175
Consider method^3_4;2;1,4503 4503 _m3_get_second_ingredient_2
4;2;1 291 pathaction!3_4;2;1,670
Consider method^3_11;2;1,5342 5342 _m3_get_second_ingredient_2
11;2;1 92 pathaction!3_11;2;1,775
Consider method^3_10;1;2,4528 4528 _m2_get_first_ingredient_3
10;1;2 272 pathaction!3_10;1;2,1268
Consider method^2_9;1,2800 2800 m2_get_first_ingredient
9;1 64 pathaction!2_9;1,3754
Consider method^3_13;1;2,4311 4311 _m2_get_first_ingredient_3
13;1;2 130 pathaction!3_13;1;2,1154
Consider method^3_5;3;5,164 164 _m4_serve_shot_6
5;3;5 442 pathaction!3_5;3;5,90
Consider method^3_5;1;2,2711 2711 _m2_get_first_ingredient_3
5;1;2 315 pathaction!3_5;1;2,1231
Consider method^3_3;3;4,5081 5081 _m4_serve_shot_5
3;3;4 470 pathaction!3_3;3;4,139
Consider method^3_2;3;1,100 100 _m4_serve_shot_2
2;3;1 34 pathaction!3_2;3;1,2407
Consider method^3_3;1;2,4190 4190 _m2_get_first_ingredient_3
3;1;2 403 pathaction!3_3;1;2,1148
Consider method^3_3;2;1,3555 3555 _m3_get_second_ingredient_2
3;2;1 137 pathaction!3_3;2;1,669
Consider method^4_13;3;1;0,2799 2799 m5_do_clean_shot
13;3;1;0 353 pathaction!4_13;3;1;0,3319
Consider method^3_4;1;3,4448 4448 _m2_get_first_ingredient_4
4;1;3 449 pathaction!3_4;1;3,2810
Consider method^3_10;2;1,1087 1087 _m3_get_second_ingredient_2
10;2;1 427 pathaction!3_10;2;1,709
Consider method^3_9;1;2,3033 3033 _m2_get_first_ingredient_3
9;1;2 318 pathaction!3_9;1;2,1280
Consider method^3_13;3;1,4708 4708 _m4_serve_shot_2
13;3;1 324 pathaction!3_13;3;1,2394
Consider method^3_1;3;4,2433 2433 _m4_serve_shot_5
1;3;4 381 pathaction!3_1;3;4,150
Consider method^4_7;3;1;0,1838 1838 m6_do_clean_shot
7;3;1;0 83 pathaction!4_7;3;1;0,3388
Consider method^2_1;2,1954 1954 m3_get_second_ingredient
1;2 91 pathaction!2_1;2,4162
Consider method^3_9;2;2,269 269 _m3_get_second_ingredient_3
9;2;2 422 pathaction!3_9;2;2,2547
Consider method^4_10;3;1;0,4270 4270 m6_do_clean_shot
10;3;1;0 274 pathaction!4_10;3;1;0,3421
Consider method^3_5;2;1,2012 2012 _m3_get_second_ingredient_2
5;2;1 211 pathaction!3_5;2;1,667
Consider method^2_0;1,4104 4104 m2_get_first_ingredient
0;1 286 pathaction!2_0;1,3750
Consider method^3_12;3;1,264 264 _m4_serve_shot_2
12;3;1 165 pathaction!3_12;3;1,2381
Consider method^4_12;3;1;0,1147 1147 m6_do_clean_shot
12;3;1;0 261 pathaction!4_12;3;1;0,3432
Consider method^3_0;3;1,1427 1427 _m4_serve_shot_2
0;3;1 371 pathaction!3_0;3;1,2383
Consider method^3_0;1;1,63 63 m8_do_fill_shot
0;1;1 447 pathaction!3_0;1;1,2655
Consider method^3_8;3;1,3648 3648 _m4_serve_shot_2
8;3;1 164 pathaction!3_8;3;1,2389
Consider method^3_1;3;1,2687 2687 _m4_serve_shot_2
1;3;1 67 pathaction!3_1;3;1,2400
Consider method^4_8;3;1;0,3234 3234 m6_do_clean_shot
8;3;1;0 451 pathaction!4_8;3;1;0,3665
Consider method^3_5;3;4,1923 1923 _m4_serve_shot_5
5;3;4 85 pathaction!3_5;3;4,122
Consider method^3_9;3;5,783 783 _m4_serve_shot_6
9;3;5 327 pathaction!3_9;3;5,116
Consider method^2_9;2,4194 4194 m3_get_second_ingredient
9;2 113 pathaction!2_9;2,4165
Consider method^3_1;3;5,451 451 _m4_serve_shot_6
1;3;5 230 pathaction!3_1;3;5,82
Consider method^3_0;2;2,3208 3208 _m3_get_second_ingredient_3
0;2;2 155 pathaction!3_0;2;2,2431
Consider method^3_9;1;1,2084 2084 m8_do_fill_shot
9;1;1 364 pathaction!3_9;1;1,2659
Consider method^4_11;3;1;0,2819 2819 m5_do_clean_shot
11;3;1;0 145 pathaction!4_11;3;1;0,3692
Consider method^3_10;2;2,2917 2917 _m3_get_second_ingredient_3
10;2;2 316 pathaction!3_10;2;2,2414
Consider method^3_4;3;1,1288 1288 _m4_serve_shot_2
4;3;1 69 pathaction!3_4;3;1,2388
Consider method^2_8;1,4456 4456 m2_get_first_ingredient
8;1 8 pathaction!2_8;1,3739
Consider method^3_4;3;4,4892 4892 _m4_serve_shot_5
4;3;4 222 pathaction!3_4;3;4,120
Consider method^3_1;2;1,3184 3184 _m3_get_second_ingredient_2
1;2;1 214 pathaction!3_1;2;1,674
Consider method^1_12,2068 2068 m0_do_cocktail_in_shot1
12 296 pathaction!1_12,181
Consider method^2_5;2,2187 2187 m3_get_second_ingredient
5;2 288 pathaction!2_5;2,4160
Consider method^3_11;1;1,1360 1360 m9_do_fill_shot
11;1;1 118 pathaction!3_11;1;1,2610
Consider method^2_5;3,309 309 m4_serve_shot
5;3 183 pathaction!2_5;3,3760
Consider method^3_1;1;3,384 384 _m2_get_first_ingredient_4
1;1;3 228 pathaction!3_1;1;3,2833
Consider method^3_3;1;3,4648 4648 _m2_get_first_ingredient_4
3;1;3 187 pathaction!3_3;1;3,2770
Consider method^3_6;3;4,259 259 _m4_serve_shot_5
6;3;4 20 pathaction!3_6;3;4,141
Consider method^2_1;1,2708 2708 m2_get_first_ingredient
1;1 68 pathaction!2_1;1,3751
Consider method^3_7;1;3,3276 3276 _m2_get_first_ingredient_4
7;1;3 108 pathaction!3_7;1;3,2836
Consider method^3_2;3;5,1039 1039 _m4_serve_shot_6
2;3;5 405 pathaction!3_2;3;5,88
Consider method^2_6;3,97 97 m4_serve_shot
6;3 46 pathaction!2_6;3,3762
Consider method^2_4;1,3495 3495 m2_get_first_ingredient
4;1 138 pathaction!2_4;1,3744


CHECKING primitive solution of length 304 ...
true 78 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 5 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient5,shot1;]
true 412 __method_precondition_m8_do_fill_shot_8_precondition[shot1,dispenser5,ingredient5;]
true 2 grasp[right,shot1;]
true 11 fill-shot[shot1,ingredient5,right,left,dispenser5;]
true 79 pour-shot-to-clean-shaker[shot1,ingredient5,shaker1,right,l0,l1;]
true 196 clean-shot[shot1,ingredient5,right,left;]
true 266 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,right,shot1;]
true 234 fill-shot[shot1,ingredient4,right,left,dispenser4;]
true 194 pour-shot-to-used-shaker[shot1,ingredient4,shaker1,right,l1,l2;]
true 271 leave[right,shot1;]
true 141 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient5,ingredient4;]
true 279 __method_precondition_m6_do_clean_shot_6_precondition[shot1,left;]
true 36 grasp[left,shot1;]
true 37 clean-shot[shot1,ingredient4,left,right;]
true 81 leave[left,shot1;]
true 339 grasp[right,shaker1;]
true 158 shake[cocktail3,ingredient5,ingredient4,shaker1,right,left;]
true 14 pour-shaker-to-shot[cocktail3,shot1,right,shaker1,l2,l1;]
true 372 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 394 clean-shaker[right,left,shaker1;]
true 88 leave[right,shaker1;]
true 120 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 430 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot15;]
true 417 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser1,ingredient1;]
true 65 grasp[right,shot15;]
true 129 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 13 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1;]
true 407 clean-shot[shot15,ingredient1,right,left;]
true 153 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,right,shot15;]
true 383 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 219 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 177 leave[right,shot15;]
true 169 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4;]
true 209 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 378 nop[;]
true 30 grasp[left,shaker1;]
true 126 shake[cocktail10,ingredient1,ingredient4,shaker1,left,right;]
true 166 pour-shaker-to-shot[cocktail10,shot2,left,shaker1,l2,l1;]
true 197 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 25 clean-shaker[left,right,shaker1;]
true 16 leave[left,shaker1;]
true 243 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 136 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient2,shot3;]
true 360 __method_precondition_m8_do_fill_shot_8_precondition[shot3,dispenser2,ingredient2;]
true 227 grasp[left,shot3;]
true 131 fill-shot[shot3,ingredient2,left,right,dispenser2;]
true 421 pour-shot-to-clean-shaker[shot3,ingredient2,shaker1,left,l0,l1;]
true 326 clean-shot[shot3,ingredient2,left,right;]
true 413 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient3,left,shot3;]
true 303 fill-shot[shot3,ingredient3,left,right,dispenser3;]
true 352 pour-shot-to-used-shaker[shot3,ingredient3,shaker1,left,l1,l2;]
true 70 leave[left,shot3;]
true 438 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient2,ingredient3;]
true 341 __method_precondition_m6_do_clean_shot_6_precondition[shot3,left;]
true 461 grasp[left,shot3;]
true 477 clean-shot[shot3,ingredient3,left,right;]
true 346 leave[left,shot3;]
true 24 grasp[right,shaker1;]
true 110 shake[cocktail11,ingredient2,ingredient3,shaker1,right,left;]
true 103 pour-shaker-to-shot[cocktail11,shot3,right,shaker1,l2,l1;]
true 217 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 144 clean-shaker[right,left,shaker1;]
true 58 leave[right,shaker1;]
true 344 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 193 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot4;]
true 278 __method_precondition_m8_do_fill_shot_8_precondition[shot4,dispenser1,ingredient1;]
true 437 grasp[right,shot4;]
true 340 fill-shot[shot4,ingredient1,right,left,dispenser1;]
true 168 pour-shot-to-clean-shaker[shot4,ingredient1,shaker1,right,l0,l1;]
true 246 clean-shot[shot4,ingredient1,right,left;]
true 247 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,right,shot4;]
true 257 fill-shot[shot4,ingredient2,right,left,dispenser2;]
true 356 pour-shot-to-used-shaker[shot4,ingredient2,shaker1,right,l1,l2;]
true 432 leave[right,shot4;]
true 240 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient2;]
true 423 __method_precondition_m6_do_clean_shot_6_precondition[shot4,left;]
true 26 grasp[left,shot4;]
true 0 clean-shot[shot4,ingredient2,left,right;]
true 45 leave[left,shot4;]
true 475 grasp[right,shaker1;]
true 27 shake[cocktail7,ingredient1,ingredient2,shaker1,right,left;]
true 322 pour-shaker-to-shot[cocktail7,shot4,right,shaker1,l2,l1;]
true 125 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 401 clean-shaker[right,left,shaker1;]
true 328 leave[right,shaker1;]
true 57 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 410 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient5,shot5;]
true 297 __method_precondition_m8_do_fill_shot_8_precondition[shot5,dispenser5,ingredient5;]
true 454 grasp[right,shot5;]
true 262 fill-shot[shot5,ingredient5,right,left,dispenser5;]
true 483 pour-shot-to-clean-shaker[shot5,ingredient5,shaker1,right,l0,l1;]
true 435 clean-shot[shot5,ingredient5,right,left;]
true 29 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,right,shot5;]
true 198 fill-shot[shot5,ingredient2,right,left,dispenser2;]
true 463 pour-shot-to-used-shaker[shot5,ingredient2,shaker1,right,l1,l2;]
true 284 leave[right,shot5;]
true 96 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient5,ingredient2;]
true 369 __method_precondition_m6_do_clean_shot_6_precondition[shot5,left;]
true 312 grasp[left,shot5;]
true 368 clean-shot[shot5,ingredient2,left,right;]
true 106 leave[left,shot5;]
true 476 grasp[right,shaker1;]
true 41 shake[cocktail9,ingredient5,ingredient2,shaker1,right,left;]
true 289 pour-shaker-to-shot[cocktail9,shot5,right,shaker1,l2,l1;]
true 182 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 370 clean-shaker[right,left,shaker1;]
true 104 leave[right,shaker1;]
true 127 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 351 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient5,shot6;]
true 358 __method_precondition_m8_do_fill_shot_8_precondition[shot6,dispenser5,ingredient5;]
true 66 grasp[left,shot6;]
true 50 fill-shot[shot6,ingredient5,left,right,dispenser5;]
true 21 pour-shot-to-clean-shaker[shot6,ingredient5,shaker1,left,l0,l1;]
true 347 clean-shot[shot6,ingredient5,left,right;]
true 282 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot6;]
true 365 fill-shot[shot6,ingredient1,left,right,dispenser1;]
true 425 pour-shot-to-used-shaker[shot6,ingredient1,shaker1,left,l1,l2;]
true 392 leave[left,shot6;]
true 484 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient5,ingredient1;]
true 382 __method_precondition_m6_do_clean_shot_6_precondition[shot6,left;]
true 280 grasp[left,shot6;]
true 416 clean-shot[shot6,ingredient1,left,right;]
true 391 leave[left,shot6;]
true 147 grasp[right,shaker1;]
true 424 shake[cocktail5,ingredient5,ingredient1,shaker1,right,left;]
true 135 pour-shaker-to-shot[cocktail5,shot6,right,shaker1,l2,l1;]
true 263 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 251 clean-shaker[right,left,shaker1;]
true 443 leave[right,shaker1;]
true 375 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 74 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient4,shot7;]
true 320 __method_precondition_m8_do_fill_shot_8_precondition[shot7,dispenser4,ingredient4;]
true 132 grasp[right,shot7;]
true 393 fill-shot[shot7,ingredient4,right,left,dispenser4;]
true 171 pour-shot-to-clean-shaker[shot7,ingredient4,shaker1,right,l0,l1;]
true 95 clean-shot[shot7,ingredient4,right,left;]
true 90 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient1,right,shot7;]
true 456 fill-shot[shot7,ingredient1,right,left,dispenser1;]
true 218 pour-shot-to-used-shaker[shot7,ingredient1,shaker1,right,l1,l2;]
true 203 leave[right,shot7;]
true 89 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient4,ingredient1;]
true 455 __method_precondition_m6_do_clean_shot_6_precondition[shot7,right;]
true 212 grasp[right,shot7;]
true 54 clean-shot[shot7,ingredient1,right,left;]
true 189 leave[right,shot7;]
true 335 grasp[left,shaker1;]
true 305 shake[cocktail4,ingredient4,ingredient1,shaker1,left,right;]
true 80 pour-shaker-to-shot[cocktail4,shot7,left,shaker1,l2,l1;]
true 386 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 292 clean-shaker[left,right,shaker1;]
true 396 leave[left,shaker1;]
true 22 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 237 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot8;]
true 161 __method_precondition_m8_do_fill_shot_8_precondition[shot8,dispenser4,ingredient4;]
true 295 grasp[right,shot8;]
true 362 fill-shot[shot8,ingredient4,right,left,dispenser4;]
true 260 pour-shot-to-clean-shaker[shot8,ingredient4,shaker1,right,l0,l1;]
true 93 clean-shot[shot8,ingredient4,right,left;]
true 287 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot8;]
true 35 fill-shot[shot8,ingredient3,right,left,dispenser3;]
true 112 pour-shot-to-used-shaker[shot8,ingredient3,shaker1,right,l1,l2;]
true 148 leave[right,shot8;]
true 388 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 293 __method_precondition_m6_do_clean_shot_6_precondition[shot8,left;]
true 202 grasp[left,shot8;]
true 152 clean-shot[shot8,ingredient3,left,right;]
true 462 leave[left,shot8;]
true 459 grasp[right,shaker1;]
true 244 shake[cocktail2,ingredient4,ingredient3,shaker1,right,left;]
true 231 pour-shaker-to-shot[cocktail2,shot8,right,shaker1,l2,l1;]
true 242 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 348 clean-shaker[right,left,shaker1;]
true 404 leave[right,shaker1;]
true 18 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 42 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot9;]
true 100 __method_precondition_m8_do_fill_shot_8_precondition[shot9,dispenser3,ingredient3;]
true 159 grasp[left,shot9;]
true 309 fill-shot[shot9,ingredient3,left,right,dispenser3;]
true 15 pour-shot-to-clean-shaker[shot9,ingredient3,shaker1,left,l0,l1;]
true 117 clean-shot[shot9,ingredient3,left,right;]
true 87 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient5,left,shot9;]
true 398 fill-shot[shot9,ingredient5,left,right,dispenser5;]
true 311 pour-shot-to-used-shaker[shot9,ingredient5,shaker1,left,l1,l2;]
true 167 leave[left,shot9;]
true 439 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient5;]
true 307 __method_precondition_m6_do_clean_shot_6_precondition[shot9,left;]
true 379 grasp[left,shot9;]
true 12 clean-shot[shot9,ingredient5,left,right;]
true 300 leave[left,shot9;]
true 97 grasp[right,shaker1;]
true 349 shake[cocktail1,ingredient3,ingredient5,shaker1,right,left;]
true 357 pour-shaker-to-shot[cocktail1,shot9,right,shaker1,l2,l1;]
true 111 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 86 clean-shaker[right,left,shaker1;]
true 119 leave[right,shaker1;]
true 331 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 77 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot10;]
true 460 __method_precondition_m8_do_fill_shot_8_precondition[shot10,dispenser3,ingredient3;]
true 140 grasp[left,shot10;]
true 448 fill-shot[shot10,ingredient3,left,right,dispenser3;]
true 84 pour-shot-to-clean-shaker[shot10,ingredient3,shaker1,left,l0,l1;]
true 414 clean-shot[shot10,ingredient3,left,right;]
true 436 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot10;]
true 192 fill-shot[shot10,ingredient2,left,right,dispenser2;]
true 467 pour-shot-to-used-shaker[shot10,ingredient2,shaker1,left,l1,l2;]
true 431 leave[left,shot10;]
true 232 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2;]
true 333 __method_precondition_m6_do_clean_shot_6_precondition[shot10,right;]
true 236 grasp[right,shot10;]
true 184 clean-shot[shot10,ingredient2,right,left;]
true 102 leave[right,shot10;]
true 469 grasp[left,shaker1;]
true 264 shake[cocktail8,ingredient3,ingredient2,shaker1,left,right;]
true 408 pour-shaker-to-shot[cocktail8,shot10,left,shaker1,l2,l1;]
true 400 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 428 clean-shaker[left,right,shaker1;]
true 314 leave[left,shaker1;]
true 213 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 466 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot11;]
true 317 __method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser4,ingredient4;]
true 75 grasp[left,shot11;]
true 225 fill-shot[shot11,ingredient4,left,right,dispenser4;]
true 60 pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,left,l0,l1;]
true 329 clean-shot[shot11,ingredient4,left,right;]
true 133 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot11;]
true 204 fill-shot[shot11,ingredient1,left,right,dispenser1;]
true 1 pour-shot-to-used-shaker[shot11,ingredient1,shaker1,left,l1,l2;]
true 464 leave[left,shot11;]
true 474 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1;]
true 176 __method_precondition_m6_do_clean_shot_6_precondition[shot11,left;]
true 188 grasp[left,shot11;]
true 40 clean-shot[shot11,ingredient1,left,right;]
true 290 leave[left,shot11;]
true 142 grasp[right,shaker1;]
true 170 shake[cocktail6,ingredient4,ingredient1,shaker1,right,left;]
true 321 pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1;]
true 457 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 441 clean-shaker[right,left,shaker1;]
true 61 leave[right,shaker1;]
true 453 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 59 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot15;]
true 310 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient4,dispenser3;]
true 302 grasp[left,shot15;]
true 179 clean-shot[shot15,ingredient4,left,right;]
true 206 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 359 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 440 clean-shot[shot15,ingredient3,left,right;]
true 105 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot15;]
true 223 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 33 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 9 leave[left,shot15;]
true 229 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2;]
true 313 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 123 nop[;]
true 355 grasp[right,shaker1;]
true 173 shake[cocktail8,ingredient3,ingredient2,shaker1,right,left;]
true 3 pour-shaker-to-shot[cocktail8,shot12,right,shaker1,l2,l1;]
true 387 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 63 clean-shaker[right,left,shaker1;]
true 270 leave[right,shaker1;]
true 62 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right;]
true 115 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot13;]
true 485 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3;]
true 207 grasp[right,shot13;]
true 10 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 99 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1;]
true 254 clean-shot[shot13,ingredient3,right,left;]
true 472 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient5,right,shot13;]
true 256 fill-shot[shot13,ingredient5,right,left,dispenser5;]
true 210 pour-shot-to-used-shaker[shot13,ingredient5,shaker1,right,l1,l2;]
true 208 leave[right,shot13;]
true 308 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient5;]
true 128 __method_precondition_m6_do_clean_shot_6_precondition[shot13,right;]
true 163 grasp[right,shot13;]
true 248 clean-shot[shot13,ingredient5,right,left;]
true 406 leave[right,shot13;]
true 380 grasp[left,shaker1;]
true 181 shake[cocktail1,ingredient3,ingredient5,shaker1,left,right;]
true 23 pour-shaker-to-shot[cocktail1,shot13,left,shaker1,l2,l1;]
true 336 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 221 clean-shaker[left,right,shaker1;]
true 330 leave[left,shaker1;]
true 433 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left;]
true 306 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot15;]
true 332 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient2,dispenser1;]
true 235 grasp[left,shot15;]
true 139 clean-shot[shot15,ingredient2,left,right;]
true 4 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 154 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 377 clean-shot[shot15,ingredient1,left,right;]
true 458 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot15;]
true 94 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 190 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 195 leave[left,shot15;]
true 201 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4;]
true 107 __method_precondition_m5_do_clean_shot_5_precondition[shot14;]
true 178 nop[;]
true 304 grasp[left,shaker1;]
true 273 shake[cocktail10,ingredient1,ingredient4,shaker1,left,right;]
true 239 pour-shaker-to-shot[cocktail10,shot14,left,shaker1,l2,l1;]
true 482 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 109 clean-shaker[left,right,shaker1;]
true 468 leave[left,shaker1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 5600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 8400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 11200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 14000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 16800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 19600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 22400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 25200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 28000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 30800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 33600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 36400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 39200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 42000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 44800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 47600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 50400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 53200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 56000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 58800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 61600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 64400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 67200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 70000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 72800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 75600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 78400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 81200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 84000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 86800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 89600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 92400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 95200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 98000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 100800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 103600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 106400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 109200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 112000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 114800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 117600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 120400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 123200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 126000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 128800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 131600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 134400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 137200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 140000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 142800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 145600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 148400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 151200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 154000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 156800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 159600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 162400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 165200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 168000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 170800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 173600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 176400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 179200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 182000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 184800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 187600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 190400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 193200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 196000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 198800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 201600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 204400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 207200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 210000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 212800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 215600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 218400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 221200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 224000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 226800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 229600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 232400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 235200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 238000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 240800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 243600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 246400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 249200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 252000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 254800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 257600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 260400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 263200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 266000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 268800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 271600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 274400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 277200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 280000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 282800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 285600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 288400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 291200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 294000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 296800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 299600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 302400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 305200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 308000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 310800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 313600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 316400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 319200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 322000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 324800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 327600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 330400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 333200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 336000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 338800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 341600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 344400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 347200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 350000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 126
ICAPS: 352800
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.100 MEMPEAK_KBS 880646.144
