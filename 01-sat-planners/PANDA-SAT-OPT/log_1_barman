PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p01.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p01.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p01.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounded planning graph ... done in 548ms.
	Number of Grounded Actions 2355
	Number of Grounded Literals 371
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounding ... done.
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 371
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 325ms.
	Number of Grounded Actions 2333
	Number of Grounded Literals 342
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 162ms.
	Number of Grounded Actions 2333
	Number of Grounded Literals 342
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Tasks 2333 - 13
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854769108ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854768709
done
initial PDT has 288 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 288 leafs
SHOP LEAFS 76
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 174933
Size 174933 at 0/2333
Size 174130 at 500/2333
Size 143793 at 1000/2333
Size 41577 at 1500/2333
Size 20243 at 2000/2333
Size 20203
Size 20203 at 0/2333
Size 20195 at 500/2333
Size 10699 at 1000/2333
Size 10697 at 1500/2333
Size 10689 at 2000/2333
Size 10689
Size 10689 at 0/2333
Size 10689 at 500/2333
Size 3294 at 1000/2333
Size 3270 at 1500/2333
Size 3198 at 2000/2333
Size 3198
Size 3198 at 0/2333
Size 3198 at 500/2333
Size 3078 at 1000/2333
Size 3078 at 1500/2333
Size 3078 at 2000/2333
Size 3078
Size 3078 at 0/2333
Size 3078 at 500/2333
Size 3013 at 1000/2333
Size 3013 at 1500/2333
Size 3013 at 2000/2333
Size 3013
Size 3013 at 0/2333
Size 3013 at 500/2333
Size 3013 at 1000/2333
Size 3013 at 1500/2333
Size 3013 at 2000/2333
Size 3013
Invariant time: 1.971
Number of invariants: 3013
Invariant Clauses 870757
NUMBER OF CLAUSES 1361893
NUMBER OF STATE CLAUSES 1145745
NUMBER OF DECOMPOSITION CLAUSES 216148
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.13% 15.870000000000001% 0.0% 
NUMBER OF PATHS 288
Starting cryptominisat5.5
Setting starttime of solver to 1604492880205
Command exited with non-zero status 10
0.89 0.03

Time command gave the following runtime for the solver: 920
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_9;2;1,2530 2530 _m3_get_second_ingredient_2
9;2;1 208 pathaction!3_9;2;1,623
Consider method^3_9;1;2,1047 1047 _m2_get_first_ingredient_3
9;1;2 327 pathaction!3_9;1;2,1223
Consider method^1_0,1715 1715 m0_do_cocktail_in_shot1
0 358 pathaction!1_0,1533
Consider method^2_5;2,2456 2456 m3_get_second_ingredient
5;2 362 pathaction!2_5;2,1633
Consider method^3_0;1;1,1785 1785 m8_do_fill_shot
0;1;1 91 pathaction!3_0;1;1,929
Consider method^3_6;3;5,1227 1227 _m4_serve_shot_6
6;3;5 122 pathaction!3_6;3;5,1163
Consider method^3_1;3;4,2842 2842 _m4_serve_shot_5
1;3;4 263 pathaction!3_1;3;4,3450
Consider method^3_1;3;5,2297 2297 _m4_serve_shot_6
1;3;5 391 pathaction!3_1;3;5,1134
Consider method^3_5;2;2,2944 2944 _m3_get_second_ingredient_3
5;2;2 314 pathaction!3_5;2;2,3161
Consider method^4_0;3;1;0,1776 1776 m5_do_clean_shot
0;3;1;0 385 pathaction!4_0;3;1;0,2865
Consider method^3_4;2;1,4158 4158 _m3_get_second_ingredient_2
4;2;1 270 pathaction!3_4;2;1,670
Consider method^2_6;2,2927 2927 m3_get_second_ingredient
6;2 180 pathaction!2_6;2,1642
Consider method^3_8;1;1,556 556 m9_do_fill_shot
8;1;1 64 pathaction!3_8;1;1,933
Consider method^3_8;2;1,4163 4163 _m3_get_second_ingredient_2
8;2;1 155 pathaction!3_8;2;1,720
Consider method^2_10;1,3989 3989 m2_get_first_ingredient
10;1 169 pathaction!2_10;1,556
Consider method^3_3;2;2,3647 3647 _m3_get_second_ingredient_3
3;2;2 342 pathaction!3_3;2;2,3205
Consider method^3_7;3;5,483 483 _m4_serve_shot_6
7;3;5 369 pathaction!3_7;3;5,1146
Consider method^3_0;3;1,3635 3635 _m4_serve_shot_2
0;3;1 68 pathaction!3_0;3;1,1042
Consider method^3_0;1;2,1384 1384 _m2_get_first_ingredient_3
0;1;2 339 pathaction!3_0;1;2,1210
Consider method^3_4;3;4,1504 1504 _m4_serve_shot_5
4;3;4 78 pathaction!3_4;3;4,3436
Consider method^3_6;2;2,2139 2139 _m3_get_second_ingredient_3
6;2;2 245 pathaction!3_6;2;2,3229
Consider method^3_4;1;1,3542 3542 m9_do_fill_shot
4;1;1 348 pathaction!3_4;1;1,996
Consider method^1_8,1422 1422 m0_do_cocktail_in_shot1
8 324 pathaction!1_8,1530
Consider method^3_10;3;1,2255 2255 _m4_serve_shot_2
10;3;1 194 pathaction!3_10;3;1,1047
Consider method^2_1;1,2721 2721 m2_get_first_ingredient
1;1 382 pathaction!2_1;1,552
Consider method^3_7;1;2,797 797 _m2_get_first_ingredient_3
7;1;2 134 pathaction!3_7;1;2,1212
Consider method^3_5;1;3,1532 1532 _m2_get_first_ingredient_4
5;1;3 172 pathaction!3_5;1;3,782
Consider method^2_0;2,494 494 m3_get_second_ingredient
0;2 390 pathaction!2_0;2,1632
Consider method^4_2;3;1;0,4188 4188 m5_do_clean_shot
2;3;1;0 195 pathaction!4_2;3;1;0,2991
Consider method^2_7;2,258 258 m3_get_second_ingredient
7;2 226 pathaction!2_7;2,1639
Consider method^2_12;1,3831 3831 m9_do_fill_shot
12;1 347 pathaction!2_12;1,1006
Consider method^3_2;1;1,1447 1447 m9_do_fill_shot
2;1;1 11 pathaction!3_2;1;1,936
Consider method^3_1;1;2,825 825 _m2_get_first_ingredient_3
1;1;2 310 pathaction!3_1;1;2,1237
Consider method^3_0;2;1,4021 4021 _m3_get_second_ingredient_2
0;2;1 279 pathaction!3_0;2;1,724
Consider method^1_4,566 566 m0_do_cocktail_in_shot1
4 203 pathaction!1_4,1535
Consider method^2_13;1,3824 3824 m9_do_fill_shot
13;1 419 pathaction!2_13;1,936
Consider method^3_6;1;2,825 825 _m2_get_first_ingredient_3
6;1;2 248 pathaction!3_6;1;2,1237
Consider method^3_9;1;3,3131 3131 _m2_get_first_ingredient_4
9;1;3 45 pathaction!3_9;1;3,763
Consider method^3_6;2;1,4158 4158 _m3_get_second_ingredient_2
6;2;1 196 pathaction!3_6;2;1,670
Consider method^2_6;3,3806 3806 m4_serve_shot
6;3 265 pathaction!2_6;3,3136
Consider method^3_10;2;2,313 313 _m3_get_second_ingredient_3
10;2;2 388 pathaction!3_10;2;2,3248
Consider method^3_10;3;5,367 367 _m4_serve_shot_6
10;3;5 135 pathaction!3_10;3;5,1127
Consider method^2_6;1,184 184 m2_get_first_ingredient
6;1 15 pathaction!2_6;1,558
Consider method^0_,4190 4190 __top_1
 228 pathaction!0_,3481
Consider method^3_1;2;2,1397 1397 _m3_get_second_ingredient_3
1;2;2 46 pathaction!3_1;2;2,3267
Consider method^3_7;2;1,3457 3457 _m3_get_second_ingredient_2
7;2;1 115 pathaction!3_7;2;1,662
Consider method^1_6,1376 1376 m0_do_cocktail_in_shot1
6 56 pathaction!1_6,1524
Consider method^3_2;2;1,2896 2896 _m3_get_second_ingredient_2
2;2;1 398 pathaction!3_2;2;1,693
Consider method^3_8;3;4,1364 1364 _m4_serve_shot_5
8;3;4 14 pathaction!3_8;3;4,3446
Consider method^3_2;3;5,804 804 _m4_serve_shot_6
2;3;5 165 pathaction!3_2;3;5,1133
Consider method^3_3;3;1,986 986 _m4_serve_shot_2
3;3;1 121 pathaction!3_3;3;1,1049
Consider method^3_11;3;4,30 30 _m4_serve_shot_5
11;3;4 3 pathaction!3_11;3;4,3480
Consider method^2_11;1,624 624 m2_get_first_ingredient
11;1 111 pathaction!2_11;1,558
Consider method^3_7;3;1,286 286 _m4_serve_shot_2
7;3;1 173 pathaction!3_7;3;1,1035
Consider method^4_11;3;1;0,357 357 m5_do_clean_shot
11;3;1;0 392 pathaction!4_11;3;1;0,3070
Consider method^2_4;3,3512 3512 m4_serve_shot
4;3 321 pathaction!2_4;3,3147
Consider method^1_11,266 266 m0_do_cocktail_in_shot1
11 86 pathaction!1_11,1528
Consider method^3_7;1;1,1550 1550 m9_do_fill_shot
7;1;1 200 pathaction!3_7;1;1,951
Consider method^3_5;1;2,1946 1946 _m2_get_first_ingredient_3
5;1;2 237 pathaction!3_5;1;2,1200
Consider method^3_4;1;3,2994 2994 _m2_get_first_ingredient_4
4;1;3 262 pathaction!3_4;1;3,828
Consider method^2_5;3,3894 3894 m4_serve_shot
5;3 34 pathaction!2_5;3,3137
Consider method^1_1,3055 3055 m0_do_cocktail_in_shot1
1 325 pathaction!1_1,1532
Consider method^2_1;2,118 118 m3_get_second_ingredient
1;2 313 pathaction!2_1;2,1636
Consider method^4_6;3;1;0,3155 3155 m5_do_clean_shot
6;3;1;0 393 pathaction!4_6;3;1;0,3010
Consider method^3_9;3;4,1111 1111 _m4_serve_shot_5
9;3;4 19 pathaction!3_9;3;4,3445
Consider method^3_0;1;3,827 827 _m2_get_first_ingredient_4
0;1;3 412 pathaction!3_0;1;3,761
Consider method^3_11;1;3,4008 4008 _m2_get_first_ingredient_4
11;1;3 371 pathaction!3_11;1;3,786
Consider method^2_2;1,3947 3947 m2_get_first_ingredient
2;1 187 pathaction!2_2;1,540
Consider method^4_3;3;1;0,935 935 m5_do_clean_shot
3;3;1;0 198 pathaction!4_3;3;1;0,3021
Consider method^4_8;3;1;0,2678 2678 m5_do_clean_shot
8;3;1;0 75 pathaction!4_8;3;1;0,2837
Consider method^3_5;1;1,3705 3705 m8_do_fill_shot
5;1;1 80 pathaction!3_5;1;1,950
Consider method^3_9;1;1,3639 3639 m8_do_fill_shot
9;1;1 221 pathaction!3_9;1;1,931
Consider method^2_11;2,750 750 m3_get_second_ingredient
11;2 272 pathaction!2_11;2,1642
Consider method^1_7,576 576 m0_do_cocktail_in_shot1
7 399 pathaction!1_7,1531
Consider method^3_2;3;1,923 923 _m4_serve_shot_2
2;3;1 60 pathaction!3_2;3;1,1053
Consider method^4_10;3;1;0,2874 2874 m6_do_clean_shot
10;3;1;0 389 pathaction!4_10;3;1;0,3045
Consider method^3_5;3;1,3664 3664 _m4_serve_shot_2
5;3;1 167 pathaction!3_5;3;1,1050
Consider method^2_0;3,59 59 m4_serve_shot
0;3 22 pathaction!2_0;3,3145
Consider method^3_5;3;5,377 377 _m4_serve_shot_6
5;3;5 227 pathaction!3_5;3;5,1162
Consider method^1_10,3099 3099 m0_do_cocktail_in_shot1
10 98 pathaction!1_10,1526
Consider method^3_8;1;2,67 67 _m2_get_first_ingredient_3
8;1;2 307 pathaction!3_8;1;2,1243
Consider method^3_7;3;4,1880 1880 _m4_serve_shot_5
7;3;4 25 pathaction!3_7;3;4,3442
Consider method^3_10;1;1,1955 1955 m8_do_fill_shot
10;1;1 246 pathaction!3_10;1;1,980
Consider method^3_3;1;1,1493 1493 m9_do_fill_shot
3;1;1 41 pathaction!3_3;1;1,996
Consider method^2_3;2,1834 1834 m3_get_second_ingredient
3;2 94 pathaction!2_3;2,1643
Consider method^3_6;1;1,656 656 m9_do_fill_shot
6;1;1 140 pathaction!3_6;1;1,939
Consider method^4_4;3;1;0,93 93 m5_do_clean_shot
4;3;1;0 384 pathaction!4_4;3;1;0,2780
Consider method^3_9;3;1,4038 4038 _m4_serve_shot_2
9;3;1 206 pathaction!3_9;3;1,1033
Consider method^4_9;3;1;0,2035 2035 m6_do_clean_shot
9;3;1;0 166 pathaction!4_9;3;1;0,2842
Consider method^2_11;3,2661 2661 m4_serve_shot
11;3 158 pathaction!2_11;3,3140
Consider method^4_5;3;1;0,3599 3599 m5_do_clean_shot
5;3;1;0 418 pathaction!4_5;3;1;0,3101
Consider method^2_3;3,2863 2863 m4_serve_shot
3;3 154 pathaction!2_3;3,3139
Consider method^3_8;1;3,2589 2589 _m2_get_first_ingredient_4
8;1;3 108 pathaction!3_8;1;3,765
Consider method^2_9;2,1099 1099 m3_get_second_ingredient
9;2 104 pathaction!2_9;2,1625
Consider method^2_12;0,3311 3311 _m1_do_cocktail_in_shot2_4
12;0 289 pathaction!2_12;0,2775
Consider method^2_2;2,1257 1257 m3_get_second_ingredient
2;2 253 pathaction!2_2;2,1624
Consider method^3_11;3;1,3734 3734 _m4_serve_shot_2
11;3;1 287 pathaction!3_11;3;1,1044
Consider method^3_3;1;2,3418 3418 _m2_get_first_ingredient_3
3;1;2 380 pathaction!3_3;1;2,1283
Consider method^3_4;3;1,1628 1628 _m4_serve_shot_2
4;3;1 254 pathaction!3_4;3;1,1036
Consider method^1_5,2540 2540 m0_do_cocktail_in_shot1
5 72 pathaction!1_5,1525
Consider method^3_1;1;1,800 800 m8_do_fill_shot
1;1;1 311 pathaction!3_1;1;1,939
Consider method^3_4;2;2,2139 2139 _m3_get_second_ingredient_3
4;2;2 9 pathaction!3_4;2;2,3229
Consider method^3_10;1;2,158 158 _m2_get_first_ingredient_3
10;1;2 147 pathaction!3_10;1;2,1235
Consider method^3_5;3;4,1728 1728 _m4_serve_shot_5
5;3;4 383 pathaction!3_5;3;4,3461
Consider method^2_9;3,1115 1115 m4_serve_shot
9;3 83 pathaction!2_9;3,3141
Consider method^3_0;2;2,693 693 _m3_get_second_ingredient_3
0;2;2 18 pathaction!3_0;2;2,3220
Consider method^1_9,2333 2333 m0_do_cocktail_in_shot1
9 271 pathaction!1_9,1529
Consider method^2_10;3,3322 3322 m4_serve_shot
10;3 209 pathaction!2_10;3,3138
Consider method^3_11;2;2,3003 3003 _m3_get_second_ingredient_3
11;2;2 367 pathaction!3_11;2;2,3163
Consider method^3_9;3;5,882 882 _m4_serve_shot_6
9;3;5 28 pathaction!3_9;3;5,1138
Consider method^3_6;3;1,1375 1375 _m4_serve_shot_2
6;3;1 288 pathaction!3_6;3;1,1043
Consider method^2_7;3,866 866 m4_serve_shot
7;3 315 pathaction!2_7;3,3143
Consider method^2_2;3,913 913 m4_serve_shot
2;3 395 pathaction!2_2;3,3146
Consider method^3_3;3;5,626 626 _m4_serve_shot_6
3;3;5 357 pathaction!3_3;3;5,1161
Consider method^3_0;3;5,2788 2788 _m4_serve_shot_6
0;3;5 116 pathaction!3_0;3;5,1154
Consider method^1_2,2722 2722 m0_do_cocktail_in_shot1
2 224 pathaction!1_2,1534
Consider method^2_4;1,1902 1902 m2_get_first_ingredient
4;1 185 pathaction!2_4;1,545
Consider method^3_11;3;5,3586 3586 _m4_serve_shot_6
11;3;5 30 pathaction!3_11;3;5,1144
Consider method^3_2;1;2,3665 3665 _m2_get_first_ingredient_3
2;1;2 333 pathaction!3_2;1;2,1230
Consider method^3_11;2;1,3700 3700 _m3_get_second_ingredient_2
11;2;1 156 pathaction!3_11;2;1,740
Consider method^3_3;3;4,3430 3430 _m4_serve_shot_5
3;3;4 79 pathaction!3_3;3;4,3459
Consider method^1_12,1178 1178 m1_do_cocktail_in_shot2
12 65 pathaction!1_12,1054
Consider method^3_3;2;1,3851 3851 _m3_get_second_ingredient_2
3;2;1 268 pathaction!3_3;2;1,639
Consider method^2_1;3,1264 1264 m4_serve_shot
1;3 5 pathaction!2_1;3,3144
Consider method^3_9;2;2,1713 1713 _m3_get_second_ingredient_3
9;2;2 58 pathaction!3_9;2;2,3244
Consider method^4_7;3;1;0,213 213 m5_do_clean_shot
7;3;1;0 320 pathaction!4_7;3;1;0,3068
Consider method^3_7;1;3,3662 3662 _m2_get_first_ingredient_4
7;1;3 27 pathaction!3_7;1;3,783
Consider method^3_1;3;1,3966 3966 _m4_serve_shot_2
1;3;1 132 pathaction!3_1;3;1,1046
Consider method^3_10;3;4,766 766 _m4_serve_shot_5
10;3;4 136 pathaction!3_10;3;4,3451
Consider method^3_5;2;1,608 608 _m3_get_second_ingredient_2
5;2;1 50 pathaction!3_5;2;1,671
Consider method^3_10;2;1,2941 2941 _m3_get_second_ingredient_2
10;2;1 82 pathaction!3_10;2;1,712
Consider method^2_10;2,1154 1154 m3_get_second_ingredient
10;2 211 pathaction!2_10;2,1640
Consider method^1_3,1048 1048 m0_do_cocktail_in_shot1
3 296 pathaction!1_3,1527
Consider method^1_13,3343 3343 m1_do_cocktail_in_shot2
13 225 pathaction!1_13,1055
Consider method^3_6;1;3,2362 2362 _m2_get_first_ingredient_4
6;1;3 402 pathaction!3_6;1;3,771
Consider method^3_1;1;3,2362 2362 _m2_get_first_ingredient_4
1;1;3 44 pathaction!3_1;1;3,771
Consider method^3_1;2;1,3723 3723 _m3_get_second_ingredient_2
1;2;1 118 pathaction!3_1;2;1,708
Consider method^3_4;3;5,2189 2189 _m4_serve_shot_6
4;3;5 184 pathaction!3_4;3;5,1152
Consider method^3_8;3;1,79 79 _m4_serve_shot_2
8;3;1 316 pathaction!3_8;3;1,1039
Consider method^2_8;2,4126 4126 m3_get_second_ingredient
8;2 295 pathaction!2_8;2,1638
Consider method^3_8;2;2,1023 1023 _m3_get_second_ingredient_3
8;2;2 188 pathaction!3_8;2;2,3232
Consider method^2_4;2,2595 2595 m3_get_second_ingredient
4;2 273 pathaction!2_4;2,1629
Consider method^2_0;1,3178 3178 m2_get_first_ingredient
0;1 26 pathaction!2_0;1,548
Consider method^3_6;3;4,1885 1885 _m4_serve_shot_5
6;3;4 0 pathaction!3_6;3;4,3433
Consider method^2_8;3,1759 1759 m4_serve_shot
8;3 186 pathaction!2_8;3,3142
Consider method^2_7;1,2137 2137 m2_get_first_ingredient
7;1 74 pathaction!2_7;1,555
Consider method^2_3;1,1220 1220 m2_get_first_ingredient
3;1 318 pathaction!2_3;1,559
Consider method^2_13;0,2397 2397 _m1_do_cocktail_in_shot2_4
13;0 105 pathaction!2_13;0,2774
Consider method^3_2;3;4,1024 1024 _m4_serve_shot_5
2;3;4 67 pathaction!3_2;3;4,3475
Consider method^3_11;1;2,2858 2858 _m2_get_first_ingredient_3
11;1;2 202 pathaction!3_11;1;2,1256
Consider method^3_4;1;2,3418 3418 _m2_get_first_ingredient_3
4;1;2 201 pathaction!3_4;1;2,1283
Consider method^3_7;2;2,3394 3394 _m3_get_second_ingredient_3
7;2;2 174 pathaction!3_7;2;2,3184
Consider method^3_11;1;1,1462 1462 m9_do_fill_shot
11;1;1 88 pathaction!3_11;1;1,954
Consider method^3_0;3;4,2353 2353 _m4_serve_shot_5
0;3;4 144 pathaction!3_0;3;4,3454
Consider method^3_2;1;3,4129 4129 _m2_get_first_ingredient_4
2;1;3 232 pathaction!3_2;1;3,768
Consider method^3_2;2;2,1385 1385 _m3_get_second_ingredient_3
2;2;2 415 pathaction!3_2;2;2,3197
Consider method^3_10;1;3,2038 2038 _m2_get_first_ingredient_4
10;1;3 386 pathaction!3_10;1;3,812
Consider method^2_8;1,2096 2096 m2_get_first_ingredient
8;1 95 pathaction!2_8;1,554
Consider method^3_3;1;3,2994 2994 _m2_get_first_ingredient_4
3;1;3 106 pathaction!3_3;1;3,828
Consider method^3_8;3;5,1457 1457 _m4_serve_shot_6
8;3;5 302 pathaction!3_8;3;5,1124
Consider method^2_5;1,1196 1196 m2_get_first_ingredient
5;1 234 pathaction!2_5;1,549
Consider method^4_1;3;1;0,3525 3525 m5_do_clean_shot
1;3;1;0 142 pathaction!4_1;3;1;0,2950
Consider method^2_9;1,132 132 m2_get_first_ingredient
9;1 219 pathaction!2_9;1,541


CHECKING primitive solution of length 263 ...
true 403 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 408 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient4,shot15;]
true 360 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4;]
true 213 grasp[right,shot15;]
true 317 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 36 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 243 clean-shot[shot15,ingredient4,right,left;]
true 323 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient1,right,shot15;]
true 93 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 162 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 124 leave[right,shot15;]
true 414 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient4,ingredient1;]
true 85 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 328 nop[;]
true 332 grasp[left,shaker1;]
true 199 shake[cocktail4,ingredient4,ingredient1,shaker1,left,right;]
true 278 pour-shaker-to-shot[cocktail4,shot1,left,shaker1,l2,l1;]
true 283 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 107 clean-shaker[left,right,shaker1;]
true 57 leave[left,shaker1;]
true 177 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 35 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient3,shot14;]
true 277 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser3,ingredient3;]
true 214 grasp[left,shot14;]
true 24 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 276 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1;]
true 146 clean-shot[shot14,ingredient3,left,right;]
true 51 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient2,left,shot14;]
true 178 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 37 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,left,l1,l2;]
true 387 leave[left,shot14;]
true 38 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient3,ingredient2;]
true 48 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 181 nop[;]
true 153 grasp[left,shaker1;]
true 145 shake[cocktail6,ingredient3,ingredient2,shaker1,left,right;]
true 8 pour-shaker-to-shot[cocktail6,shot2,left,shaker1,l2,l1;]
true 103 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 410 clean-shaker[left,right,shaker1;]
true 113 leave[left,shaker1;]
true 21 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 359 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot14;]
true 59 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient2,dispenser3;]
true 40 grasp[right,shot14;]
true 176 clean-shot[shot14,ingredient2,right,left;]
true 150 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 361 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1;]
true 345 clean-shot[shot14,ingredient3,right,left;]
true 7 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient1,right,shot14;]
true 52 fill-shot[shot14,ingredient1,right,left,dispenser1;]
true 291 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,right,l1,l2;]
true 138 leave[right,shot14;]
true 157 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient1;]
true 401 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 266 nop[;]
true 330 grasp[right,shaker1;]
true 160 shake[cocktail11,ingredient3,ingredient1,shaker1,right,left;]
true 233 pour-shaker-to-shot[cocktail11,shot3,right,shaker1,l2,l1;]
true 413 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 16 clean-shaker[right,left,shaker1;]
true 87 leave[right,shaker1;]
true 352 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 191 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot14;]
true 285 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient1,dispenser2;]
true 292 grasp[left,shot14;]
true 69 clean-shot[shot14,ingredient1,left,right;]
true 212 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 306 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 293 clean-shot[shot14,ingredient2,left,right;]
true 319 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot14;]
true 1 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 257 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,left,l1,l2;]
true 308 leave[left,shot14;]
true 215 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient4;]
true 235 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 346 nop[;]
true 4 grasp[left,shaker1;]
true 175 shake[cocktail8,ingredient2,ingredient4,shaker1,left,right;]
true 231 pour-shaker-to-shot[cocktail8,shot4,left,shaker1,l2,l1;]
true 171 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 338 clean-shaker[left,right,shaker1;]
true 152 leave[left,shaker1;]
true 343 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 39 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot14;]
true 31 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient4,dispenser2;]
true 193 grasp[left,shot14;]
true 376 clean-shot[shot14,ingredient4,left,right;]
true 223 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 6 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 101 clean-shot[shot14,ingredient2,left,right;]
true 416 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,left,shot14;]
true 109 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 326 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2;]
true 71 leave[left,shot14;]
true 286 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient1;]
true 312 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 244 nop[;]
true 247 grasp[right,shaker1;]
true 2 shake[cocktail7,ingredient2,ingredient1,shaker1,right,left;]
true 249 pour-shaker-to-shot[cocktail7,shot5,right,shaker1,l2,l1;]
true 49 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 381 clean-shaker[right,left,shaker1;]
true 123 leave[right,shaker1;]
true 421 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 190 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot13;]
true 377 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4;]
true 425 grasp[right,shot13;]
true 264 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 53 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 370 clean-shot[shot13,ingredient4,right,left;]
true 274 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,right,shot13;]
true 240 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 63 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2;]
true 207 leave[right,shot13;]
true 407 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient3;]
true 47 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 131 nop[;]
true 252 grasp[left,shaker1;]
true 282 shake[cocktail9,ingredient4,ingredient3,shaker1,left,right;]
true 363 pour-shaker-to-shot[cocktail9,shot6,left,shaker1,l2,l1;]
true 375 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 337 clean-shaker[left,right,shaker1;]
true 125 leave[left,shaker1;]
true 32 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 100 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot14;]
true 12 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient1,dispenser3;]
true 334 grasp[left,shot14;]
true 379 clean-shot[shot14,ingredient1,left,right;]
true 197 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 189 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1;]
true 309 clean-shot[shot14,ingredient3,left,right;]
true 394 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,left,shot14;]
true 33 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 372 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2;]
true 331 leave[left,shot14;]
true 210 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient1;]
true 230 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 396 nop[;]
true 261 grasp[right,shaker1;]
true 81 shake[cocktail2,ingredient3,ingredient1,shaker1,right,left;]
true 284 pour-shaker-to-shot[cocktail2,shot7,right,shaker1,l2,l1;]
true 305 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 259 clean-shaker[right,left,shaker1;]
true 297 leave[right,shaker1;]
true 238 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 304 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot13;]
true 54 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient3,dispenser1;]
true 239 grasp[right,shot13;]
true 130 clean-shot[shot13,ingredient3,right,left;]
true 251 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 129 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1;]
true 349 clean-shot[shot13,ingredient1,right,left;]
true 192 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,right,shot13;]
true 341 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 182 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,right,l1,l2;]
true 364 leave[right,shot13;]
true 66 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient4;]
true 336 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 242 nop[;]
true 17 grasp[left,shaker1;]
true 73 shake[cocktail3,ingredient1,ingredient4,shaker1,left,right;]
true 43 pour-shaker-to-shot[cocktail3,shot8,left,shaker1,l2,l1;]
true 356 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 148 clean-shaker[left,right,shaker1;]
true 170 leave[left,shaker1;]
true 281 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 260 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot15;]
true 110 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient1,dispenser4;]
true 405 grasp[left,shot15;]
true 335 clean-shot[shot15,ingredient1,left,right;]
true 90 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 112 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 373 clean-shot[shot15,ingredient4,left,right;]
true 397 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,left,shot15;]
true 300 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 350 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 218 leave[left,shot15;]
true 76 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient2;]
true 84 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 13 nop[;]
true 10 grasp[left,shaker1;]
true 340 shake[cocktail5,ingredient4,ingredient2,shaker1,left,right;]
true 303 pour-shaker-to-shot[cocktail5,shot9,left,shaker1,l2,l1;]
true 417 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 120 clean-shaker[left,right,shaker1;]
true 133 leave[left,shaker1;]
true 179 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 250 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot10;]
true 128 __method_precondition_m8_do_fill_shot_8_precondition[shot10,dispenser2,ingredient2;]
true 269 grasp[right,shot10;]
true 329 fill-shot[shot10,ingredient2,right,left,dispenser2;]
true 424 pour-shot-to-clean-shaker[shot10,ingredient2,shaker1,right,l0,l1;]
true 217 clean-shot[shot10,ingredient2,right,left;]
true 353 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,right,shot10;]
true 77 fill-shot[shot10,ingredient4,right,left,dispenser4;]
true 141 pour-shot-to-used-shaker[shot10,ingredient4,shaker1,right,l1,l2;]
true 222 leave[right,shot10;]
true 205 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient4;]
true 409 __method_precondition_m6_do_clean_shot_6_precondition[shot10,left;]
true 117 grasp[left,shot10;]
true 114 clean-shot[shot10,ingredient4,left,right;]
true 236 leave[left,shot10;]
true 241 grasp[right,shaker1;]
true 420 shake[cocktail1,ingredient2,ingredient4,shaker1,right,left;]
true 204 pour-shaker-to-shot[cocktail1,shot10,right,shaker1,l2,l1;]
true 89 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 61 clean-shaker[right,left,shaker1;]
true 400 leave[right,shaker1;]
true 163 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 62 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot11;]
true 423 __method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser1,ingredient1;]
true 29 grasp[right,shot11;]
true 355 fill-shot[shot11,ingredient1,right,left,dispenser1;]
true 366 pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,right,l0,l1;]
true 127 clean-shot[shot11,ingredient1,right,left;]
true 354 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient2,right,shot11;]
true 301 fill-shot[shot11,ingredient2,right,left,dispenser2;]
true 97 pour-shot-to-used-shaker[shot11,ingredient2,shaker1,right,l1,l2;]
true 365 leave[right,shot11;]
true 344 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient2;]
true 280 __method_precondition_m6_do_clean_shot_6_precondition[shot11,right;]
true 229 grasp[right,shot11;]
true 322 clean-shot[shot11,ingredient2,right,left;]
true 149 leave[right,shot11;]
true 92 grasp[left,shaker1;]
true 161 shake[cocktail10,ingredient1,ingredient2,shaker1,left,right;]
true 368 pour-shaker-to-shot[cocktail10,shot11,left,shaker1,l2,l1;]
true 102 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 143 clean-shaker[left,right,shaker1;]
true 183 leave[left,shaker1;]
true 404 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 258 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot15;]
true 119 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient2,dispenser3;]
true 255 grasp[left,shot15;]
true 168 clean-shot[shot15,ingredient2,left,right;]
true 378 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 406 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 159 clean-shot[shot15,ingredient3,left,right;]
true 126 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,left,shot15;]
true 422 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 139 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,left,l1,l2;]
true 298 leave[left,shot15;]
true 42 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient1;]
true 96 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 411 nop[;]
true 99 grasp[left,shaker1;]
true 137 shake[cocktail2,ingredient3,ingredient1,shaker1,left,right;]
true 256 pour-shaker-to-shot[cocktail2,shot12,left,shaker1,l2,l1;]
true 151 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 70 clean-shaker[left,right,shaker1;]
true 374 leave[left,shaker1;]
true 20 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2;]
true 294 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient4,dispenser2;]
true 164 grasp[left,shot13;]
true 55 clean-shot[shot13,ingredient4,left,right;]
true 23 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 267 leave[left,shot13;]
true 275 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 216 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient1,dispenser3;]
true 299 grasp[right,shot14;]
true 351 clean-shot[shot14,ingredient1,right,left;]
true 220 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 290 leave[right,shot14;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 4600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 6900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 9200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 11500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 13800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 16100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 18400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 20700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 23000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 25300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 27600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 29900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 32200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 34500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 36800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 39100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 41400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 43700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 46000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 48300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 50600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 52900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 55200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 57500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 59800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 62100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 64400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 66700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 69000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 71300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 73600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 75900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 78200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 80500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 82800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 85100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 87400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 89700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 92000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 94300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 96600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 98900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 101200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 103500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 105800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 108100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 110400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 112700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 115000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 117300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 119600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 121900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 124200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 126500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 128800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 131100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 133400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 135700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 138000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 140300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 142600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 144900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 147200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 149500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 151800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 154100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 156400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 158700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 161000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 163300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 165600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 167900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 170200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 172500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 174800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 177100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 179400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 181700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 184000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 186300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 188600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 190900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 193200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 195500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 197800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 200100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 202400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 204700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 207000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 209300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 211600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 213900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 216200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 218500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 220800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 223100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 225400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 227700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 230000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 232300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 234600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 236900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 239200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 241500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 243800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 246100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 248400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 250700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 253000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 255300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 257600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 259900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 262200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 264500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 266800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 269100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 271400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 273700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 276000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 278300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 280600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 282900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 285200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 287500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 126
ICAPS: 289800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 127
ICAPS: 292100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 128
ICAPS: 294400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 129
ICAPS: 296700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 130
ICAPS: 299000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 131
ICAPS: 301300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 132
ICAPS: 303600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 133
ICAPS: 305900
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.101 MEMPEAK_KBS 701133.824
