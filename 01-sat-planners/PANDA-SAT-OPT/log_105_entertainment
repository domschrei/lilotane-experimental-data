PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/entertainment/domain.hddl instances/entertainment/p05-tv-dvd-gc-box.hddl"


Planner Configuration
=====================
Domain: instances/entertainment/domain.hddl
Problem: instances/entertainment/p05-tv-dvd-gc-box.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p05-tv-dvd-gc-box.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 9
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 26
Compiling negative preconditions ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 18
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 26
Compiling split parameters ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 18
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 26
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 26
Grounded planning graph ... done in 217ms.
	Number of Grounded Actions 301
	Number of Grounded Literals 201
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 26
Two Way TDG ... done.
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 26
Grounding ... done.
	number of abstract tasks = 174
	number of tasks = 293
	number of decomposition methods = 379
	number of predicates = 235
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 119
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 174
	number of tasks = 293
	number of decomposition methods = 379
	number of predicates = 61
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 119
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 42ms.
	Number of Grounded Actions 91
	Number of Grounded Literals 39
	number of abstract tasks = 103
	number of tasks = 194
	number of decomposition methods = 169
	number of predicates = 61
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 103
	number of tasks = 194
	number of decomposition methods = 169
	number of predicates = 61
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 104
	number of tasks = 195
	number of decomposition methods = 170
	number of predicates = 61
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 104
	number of tasks = 195
	number of decomposition methods = 170
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 22ms.
	Number of Grounded Actions 91
	Number of Grounded Literals 39
	number of abstract tasks = 104
	number of tasks = 195
	number of decomposition methods = 170
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 104
	number of tasks = 195
	number of decomposition methods = 170
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 104
	number of tasks = 195
	number of decomposition methods = 170
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 104
	number of tasks = 195
	number of decomposition methods = 170
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 104
	number of tasks = 195
	number of decomposition methods = 170
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Tasks 91 - 42
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772810ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854772768
done
initial PDT has 18 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 8 leafs
SHOP LEAFS 8
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 2223
Size 2223 at 0/91
Size 106
Size 106 at 0/91
Size 106
Invariant time: 0.036
Number of invariants: 106
Invariant Clauses 954
NUMBER OF CLAUSES 2400
NUMBER OF STATE CLAUSES 1657
NUMBER OF DECOMPOSITION CLAUSES 743
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 69.04% 30.96% 0.0% 
NUMBER OF PATHS 8
Starting cryptominisat5.5
Setting starttime of solver to 1604514204613
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 26 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 12 leafs
SHOP LEAFS 10
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1378
NUMBER OF CLAUSES 4664
NUMBER OF STATE CLAUSES 2459
NUMBER OF DECOMPOSITION CLAUSES 2205
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 52.72% 47.28% 0.0% 
Still waiting ... running for 100 will abort at 9223372036854772144
NUMBER OF PATHS 12
Starting cryptominisat5.5
Setting starttime of solver to 1604514205017
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 26 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 19 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 101 will abort at 9223372036854771713
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2120
NUMBER OF CLAUSES 8544
NUMBER OF STATE CLAUSES 3947
NUMBER OF DECOMPOSITION CLAUSES 4597
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 46.2% 53.800000000000004% 0.0% 
NUMBER OF PATHS 19
Starting cryptominisat5.5
Setting starttime of solver to 1604514205466
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 26 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771365
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2862
NUMBER OF CLAUSES 11902
NUMBER OF STATE CLAUSES 5389
NUMBER OF DECOMPOSITION CLAUSES 6513
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 45.28% 54.72% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat5.5
Setting starttime of solver to 1604514205794
Command exited with non-zero status 10
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^0_,169 169 __top_1
 29 pathaction!0_,194
Consider method^5_0;1;1;0;0,92 92 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1
0;1;1;0;0 50 pathaction!5_0;1;1;0;0,151
Consider method^3_0;0;0,167 167 m-dconnect-a
0;0;0 10 pathaction!3_0;0;0,162
Consider method^2_2;1,58 58 m-dconnect-av
2;1 13 pathaction!2_2;1,169
Consider method^4_2;2;1;1,76 76 m-dconnect-a-empty
2;2;1;1 20 pathaction!4_2;2;1;1,166
Consider method^3_2;1;1,68 68 _M-plug|CONSEQUENT
2;1;1 49 pathaction!3_2;1;1,52
Consider method^5_1;2;1;1;1,12 12 _M-plug|CONSEQUENT|CONSEQUENT
1;2;1;1;1 25 pathaction!5_1;2;1;1;1,90
Consider method^1_2,138 138 m-connect-rec-av-1
2 32 pathaction!1_2,179
Consider method^2_1;1,31 31 m-connect-direct-a
1;1 1 pathaction!2_1;1,75
Consider method^3_0;1;1,64 64 _M-plug|CONSEQUENT
0;1;1 21 pathaction!3_0;1;1,48
Consider method^2_1;0,144 144 m-connect-direct-v
1;0 16 pathaction!2_1;0,37
Consider method^3_2;2;0,133 133 m-connect-direct-v
2;2;0 37 pathaction!3_2;2;0,43
Consider method^5_0;0;0;1;0,147 147 _M-plug|CONSEQUENT|ANTECEDENT
0;0;0;1;0 17 pathaction!5_0;0;0;1;0,103
Consider method^3_1;0;0,10 10 m-dconnect-v
1;0;0 22 pathaction!3_1;0;0,142
Consider method^1_0,80 80 m-connect-rec-a
0 36 pathaction!1_0,80
Consider method^2_0;0,59 59 m-connect-direct-a
0;0 3 pathaction!2_0;0,79
Consider method^2_2;2,9 9 m-connect-split-1
2;2 24 pathaction!2_2;2,180
Consider method^3_1;1;1,20 20 m-dconnect-a-empty
1;1;1 40 pathaction!3_1;1;1,158
Consider method^4_0;0;0;1,21 21 _M-plug|CONSEQUENT
0;0;0;1 11 pathaction!4_0;0;0;1,62
Consider method^3_1;2;1,102 102 m-dconnect-av
1;2;1 51 pathaction!3_1;2;1,173
Consider method^2_0;1,154 154 m-dconnect-a
0;1 28 pathaction!2_0;1,163
Consider method^4_2;1;1;1,110 110 _M-plug|CONSEQUENT|CONSEQUENT
2;1;1;1 15 pathaction!4_2;1;1;1,93
Consider method^5_1;0;0;1;0,14 14 _M-plug|CONSEQUENT|CONSEQUENT
1;0;0;1;0 12 pathaction!5_1;0;0;1;0,96
Consider method^5_2;2;0;0;1,95 95 _M-plug|CONSEQUENT
2;2;0;0;1 45 pathaction!5_2;2;0;0;1,59
Consider method^3_2;2;1,62 62 m-connect-direct-a
2;2;1 2 pathaction!3_2;2;1,84
Consider method^6_0;0;0;1;0;0,60 60 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0
0;0;0;1;0;0 55 pathaction!6_0;0;0;1;0;0,154
Consider method^1_1,118 118 m-connect-split-2
1 0 pathaction!1_1,177
Consider method^4_2;2;0;0,72 72 m-dconnect-v
2;2;0;0 33 pathaction!4_2;2;0;0,147
Consider method^4_0;1;1;0,161 161 _M-plug|CONSEQUENT|ANTECEDENT
0;1;1;0 27 pathaction!4_0;1;1;0,89
Consider method^2_1;2,163 163 m-connect-direct-av
1;2 52 pathaction!2_1;2,178
Consider method^4_1;2;1;1,37 37 _M-plug|CONSEQUENT
1;2;1;1 19 pathaction!4_1;2;1;1,49
Consider method^6_2;2;0;0;1;0,127 127 _M-plug|CONSEQUENT|CONSEQUENT
2;2;0;0;1;0 9 pathaction!6_2;2;0;0;1;0,100
Consider method^4_1;0;0;1,91 91 _M-plug|CONSEQUENT
1;0;0;1 38 pathaction!4_1;0;0;1,55


CHECKING primitive solution of length 14 ...
true 48 __method_precondition_m-dconnect-a_9_precondition[tv1-1-cinch-3,cinch-cable-1-cinch-1;]
true 41 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[tv1-1,tv1-1-cinch-3,cinch-cable-1,cinch-cable-1-cinch-1;]
true 6 __method_precondition_m-dconnect-a_9_precondition[cinch-cable-1-cinch-2,active-speaker-1-cinch-2;]
true 7 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[cinch-cable-1,cinch-cable-1-cinch-2,active-speaker-1,active-speaker-1-cinch-2;]
true 53 __method_precondition_m-dconnect-v_10_precondition[dvd-1-scart-1,scart-cable-1-scart-1;]
true 4 plug|CONSEQUENT|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-1,scart-cable-1-scart-1;]
true 5 __method_precondition_m-dconnect-a-empty_12_precondition[dvd-1,scart-cable-1;]
true 26 __method_precondition_m-dconnect-av_8_precondition[scart-cable-1-scart-2,tv1-1-scart-1;]
true 30 plug|CONSEQUENT|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1;]
true 35 __method_precondition_m-dconnect-av_8_precondition[game-console-1-scart-1,scart-cable-2-scart-1;]
true 39 plug|CONSEQUENT|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-2,scart-cable-2-scart-1;]
true 14 __method_precondition_m-dconnect-v_10_precondition[scart-cable-2-scart-2,tv1-1-scart-2;]
true 44 plug|CONSEQUENT|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,tv1-1,tv1-1-scart-2;]
true 54 __method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-2,tv1-1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 210
TSTG: 7
Method: 2147483647
DP max: 8
Taking minimum: 7
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 6
  lower bound = 0

Running SAT search with cost bound = 3
==================================================
  upper bound = 6
  lower bound = 0
LEN 3
ICAPS: 630
TSTG: 7
Method: 2147483647
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 26 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
At most K: 0ms input: 66 K = 3
Number of actions Formula: 3ms for 458 clauses
Still waiting ... running for 100 will abort at 9223372036854770924
Layers: 5 paths 26
Layer 1 g 0 = 0 - 1 / 0 clauses 378
Layer 1 g 1 = 2 - 3 / 2 clauses 378
Layer 1 g 2 = 4 - 5 / 4 clauses 378
Layer 1 g 3 = 6 - 7 / 6 clauses 378
Layer 1 g 4 = 8 - 9 / 8 clauses 378
Layer 1 g 5 = 10 - 11 / 10 clauses 378
Layer 1 g 6 = 12 - 13 / 12 clauses 378
Layer 1 g 7 = 14 - 15 / 14 clauses 378
Layer 1 g 8 = 16 - 17 / 16 clauses 378
Layer 1 g 9 = 18 - 19 / 18 clauses 378
Layer 1 g 10 = 20 - 21 / 20 clauses 378
Layer 1 g 11 = 22 - 23 / 22 clauses 378
Layer 1 g 12 = 24 - 25 / 24 clauses 378
Layer 2 g 0 = 0 - 3 / 1 clauses 378
Layer 2 g 1 = 4 - 7 / 5 clauses 378
Layer 2 g 2 = 8 - 11 / 9 clauses 378
Layer 2 g 3 = 12 - 15 / 13 clauses 378
Layer 2 g 4 = 16 - 19 / 17 clauses 378
Layer 2 g 5 = 20 - 23 / 21 clauses 378
Layer 3 g 0 = 0 - 7 / 3 clauses 378
Layer 3 g 1 = 8 - 15 / 11 clauses 378
Layer 3 g 2 = 16 - 23 / 19 clauses 378
Layer 3 g 3 = 24 - 25 / 27 clauses 378
Layer 4 g 0 = 0 - 15 / 7 clauses 378
Layer 4 g 1 = 16 - 25 / 23 clauses 378
Layer 5 g 0 = 0 - 25 / 15 clauses 378
Invariant Clauses 2862
NUMBER OF CLAUSES 23176
NUMBER OF STATE CLAUSES 16205
NUMBER OF DECOMPOSITION CLAUSES 6971
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 69.92% 30.080000000000002% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat5.5
Setting starttime of solver to 1604514206389
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 4
==================================================
  upper bound = 6
  lower bound = 3
LEN 4
ICAPS: 840
TSTG: 7
Method: 2147483647
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 26 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770513
done
At most K: 1ms input: 66 K = 4
Number of actions Formula: 17ms for 589 clauses
Layers: 5 paths 26
Layer 1 g 0 = 0 - 1 / 0 clauses 378
Layer 1 g 1 = 2 - 3 / 2 clauses 378
Layer 1 g 2 = 4 - 5 / 4 clauses 378
Layer 1 g 3 = 6 - 7 / 6 clauses 378
Layer 1 g 4 = 8 - 9 / 8 clauses 378
Layer 1 g 5 = 10 - 11 / 10 clauses 378
Layer 1 g 6 = 12 - 13 / 12 clauses 378
Layer 1 g 7 = 14 - 15 / 14 clauses 378
Layer 1 g 8 = 16 - 17 / 16 clauses 378
Layer 1 g 9 = 18 - 19 / 18 clauses 378
Layer 1 g 10 = 20 - 21 / 20 clauses 378
Layer 1 g 11 = 22 - 23 / 22 clauses 378
Layer 1 g 12 = 24 - 25 / 24 clauses 378
Layer 2 g 0 = 0 - 3 / 1 clauses 378
Layer 2 g 1 = 4 - 7 / 5 clauses 378
Layer 2 g 2 = 8 - 11 / 9 clauses 378
Layer 2 g 3 = 12 - 15 / 13 clauses 378
Layer 2 g 4 = 16 - 19 / 17 clauses 378
Layer 2 g 5 = 20 - 23 / 21 clauses 378
Layer 3 g 0 = 0 - 7 / 3 clauses 378
Layer 3 g 1 = 8 - 15 / 11 clauses 378
Layer 3 g 2 = 16 - 23 / 19 clauses 378
Layer 3 g 3 = 24 - 25 / 27 clauses 378
Layer 4 g 0 = 0 - 15 / 7 clauses 378
Layer 4 g 1 = 16 - 25 / 23 clauses 378
Layer 5 g 0 = 0 - 25 / 15 clauses 378
Invariant Clauses 2862
NUMBER OF CLAUSES 23307
NUMBER OF STATE CLAUSES 16205
NUMBER OF DECOMPOSITION CLAUSES 7102
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 69.53% 30.47% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat5.5
Setting starttime of solver to 1604514206695
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 5
==================================================
  upper bound = 6
  lower bound = 4
LEN 5
ICAPS: 1050
TSTG: 7
Method: 2147483647
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 26 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
At most K: 0ms input: 66 K = 5
Number of actions Formula: 1ms for 720 clauses
Still waiting ... running for 100 will abort at 9223372036854770165
Layers: 5 paths 26
Layer 1 g 0 = 0 - 1 / 0 clauses 378
Layer 1 g 1 = 2 - 3 / 2 clauses 378
Layer 1 g 2 = 4 - 5 / 4 clauses 378
Layer 1 g 3 = 6 - 7 / 6 clauses 378
Layer 1 g 4 = 8 - 9 / 8 clauses 378
Layer 1 g 5 = 10 - 11 / 10 clauses 378
Layer 1 g 6 = 12 - 13 / 12 clauses 378
Layer 1 g 7 = 14 - 15 / 14 clauses 378
Layer 1 g 8 = 16 - 17 / 16 clauses 378
Layer 1 g 9 = 18 - 19 / 18 clauses 378
Layer 1 g 10 = 20 - 21 / 20 clauses 378
Layer 1 g 11 = 22 - 23 / 22 clauses 378
Layer 1 g 12 = 24 - 25 / 24 clauses 378
Layer 2 g 0 = 0 - 3 / 1 clauses 378
Layer 2 g 1 = 4 - 7 / 5 clauses 378
Layer 2 g 2 = 8 - 11 / 9 clauses 378
Layer 2 g 3 = 12 - 15 / 13 clauses 378
Layer 2 g 4 = 16 - 19 / 17 clauses 378
Layer 2 g 5 = 20 - 23 / 21 clauses 378
Layer 3 g 0 = 0 - 7 / 3 clauses 378
Layer 3 g 1 = 8 - 15 / 11 clauses 378
Layer 3 g 2 = 16 - 23 / 19 clauses 378
Layer 3 g 3 = 24 - 25 / 27 clauses 378
Layer 4 g 0 = 0 - 15 / 7 clauses 378
Layer 4 g 1 = 16 - 25 / 23 clauses 378
Layer 5 g 0 = 0 - 25 / 15 clauses 378
Invariant Clauses 2862
NUMBER OF CLAUSES 23438
NUMBER OF STATE CLAUSES 16205
NUMBER OF DECOMPOSITION CLAUSES 7233
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 69.14% 30.86% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat5.5
Setting starttime of solver to 1604514207015
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 157310288
planner result = SOLUTION
============ solution ============
number of primitive plan steps = 14
cost of solution               = 6
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 39
number of actions                    = 195
number of abstract actions           = 104
number of primitive actions          = 91
number of methods                    = 170
number of primitive shop actions     = 73
number of primitive non-shop actions = 18
size of largest method               = 3
average method size                  = 1
============ sat ============
plan length                     = 5
number of variables             = 7908
number of clauses               = 23459
average size of clauses         = 2.8615883029967177
number of assert                = 18
number of horn                  = 21852
K offset                        = 0
K chosen value                  = 7
state formula                   = 16205
method children clauses         = 0
number of paths                 = 26
maximum plan length             = 26
number of decomposition clauses = 7233
number of ordering clauses      = 0
number of state clauses         = 16205
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 6011
============ parsing ============
total                         = 1104
file parser                   = 563
sort expansion                = 174
closed world assumption       = 119
inherit preconditions         = 0
shop methods                  = 21
eliminate identical variables = 79
strip domain of hybridity     = 1
flatten formula               = 146
============ preprocessing ============
total                                      = 1801
compile negative preconditions             = 50
compile unit methods                       = 0
split parameter                            = 37
compile methods with identical tasks       = 2
removing unnecessary predicates            = 130
lifted reachabiltiy analysis               = 65
grounded planning graph analysis           = 556
grounded task decomposition graph analysis = 826
grounding                                  = 123
create artificial top task                 = 1
============ search preparation ============
compute state invariants = 46
============ sat ============
total                                        = 1596
generate formula                             = 1052
generate path decomposition tree             = 220
normalise path decomposition tree            = 67
sog optimisation                             = 56
translate path decomposition tree to clauses = 327
generate state formula                       = 1039
generate state invariant formula             = 31
transform to DIMACS                          = 90
SAT solver                                   = 20
SAT solver for K=0004                        = 0
SAT solver for K=0005                        = 0
SAT solver for K=0006                        = 0
SAT solver for K=0007                        = 10

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="91";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="104";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="157310288";"40 sat:20:state formula"="16205";"40 sat:01:number of variables"="7908";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="26";"40 sat:00:plan length"="5";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="170";"01 solution:02:cost of solution"="6";"30 problem:07:number of primitive shop actions"="73";"01 solution:01:number of primitive plan steps"="14";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="195";"30 problem:08:number of primitive non-shop actions"="18";"30 problem:02:number of predicates"="39";"40 sat:03:number of horn"="21852";"40 sat:15:K chosen value"="7";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="3";"40 sat:03:average size of clauses"="2.8615883029967177";"40 sat:02:number of clauses"="23459";"40 sat:50:number of state clauses"="16205";"40 sat:03:number of assert"="18";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="26";"40 sat:50:number of decomposition clauses"="7233";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="563";"01 parsing:08:flatten formula"="146";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="1596";"40 sat:16:generate state formula"="1039";"40 sat:20:transform to DIMACS"="90";"40 sat:11:generate path decomposition tree"="220";"02 preprocessing:07:compile methods with identical tasks"="2";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="130";"01 parsing:03:closed world assumption"="119";"02 preprocessing:11:lifted reachabiltiy analysis"="65";"01 parsing:02:sort expansion"="174";"40 sat:12:normalise path decomposition tree"="67";"40 sat:40:SAT solver"="20";"01 parsing:00:total"="1104";"40 sat:10:generate formula"="1052";"40 sat:41:SAT solver for K=0005"="0";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="50";"00 total:00:total"="6011";"40 sat:13:sog optimisation"="56";"02 preprocessing:12:grounded planning graph analysis"="556";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="826";"40 sat:41:SAT solver for K=0006"="0";"02 preprocessing:04:split parameter"="37";"01 parsing:05:shop methods"="21";"10 search preparation:02:compute state invariants"="46";"01 parsing:06:eliminate identical variables"="79";"40 sat:15:translate path decomposition tree to clauses"="327";"40 sat:17:generate state invariant formula"="31";"02 preprocessing:00:total"="1801";"02 preprocessing:99:create artificial top task"="1";"02 preprocessing:84:grounding"="123";"40 sat:41:SAT solver for K=0007"="10"
#!verify __method_precondition_m-dconnect-a_9_precondition[tv1-1-cinch-3,cinch-cable-1-cinch-1];plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[tv1-1,tv1-1-cinch-3,cinch-cable-1,cinch-cable-1-cinch-1];__method_precondition_m-dconnect-a_9_precondition[cinch-cable-1-cinch-2,active-speaker-1-cinch-2];plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[cinch-cable-1,cinch-cable-1-cinch-2,active-speaker-1,active-speaker-1-cinch-2];__method_precondition_m-dconnect-v_10_precondition[dvd-1-scart-1,scart-cable-1-scart-1];plug|CONSEQUENT|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-1,scart-cable-1-scart-1];__method_precondition_m-dconnect-a-empty_12_precondition[dvd-1,scart-cable-1];__method_precondition_m-dconnect-av_8_precondition[scart-cable-1-scart-2,tv1-1-scart-1];plug|CONSEQUENT|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];__method_precondition_m-dconnect-av_8_precondition[game-console-1-scart-1,scart-cable-2-scart-1];plug|CONSEQUENT|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-2,scart-cable-2-scart-1];__method_precondition_m-dconnect-v_10_precondition[scart-cable-2-scart-2,tv1-1-scart-2];plug|CONSEQUENT|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,tv1-1,tv1-1-scart-2];__method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-2,tv1-1]
==>
0 __method_precondition_m-dconnect-a_9_precondition tv1-1-cinch-3 cinch-cable-1-cinch-1 
1 plug|DISJUNCT-0 tv1-1 tv1-1-cinch-3 cinch-cable-1 cinch-cable-1-cinch-1 
2 __method_precondition_m-dconnect-a_9_precondition cinch-cable-1-cinch-2 active-speaker-1-cinch-2 
3 plug|DISJUNCT-1 cinch-cable-1 cinch-cable-1-cinch-2 active-speaker-1 active-speaker-1-cinch-2 
4 __method_precondition_m-dconnect-v_10_precondition dvd-1-scart-1 scart-cable-1-scart-1 
5 plug dvd-1 dvd-1-scart-1 scart-cable-1 scart-cable-1-scart-1 
6 __method_precondition_m-dconnect-a-empty_12_precondition dvd-1 scart-cable-1 
7 __method_precondition_m-dconnect-av_8_precondition scart-cable-1-scart-2 tv1-1-scart-1 
8 plug scart-cable-1 scart-cable-1-scart-2 tv1-1 tv1-1-scart-1 
9 __method_precondition_m-dconnect-av_8_precondition game-console-1-scart-1 scart-cable-2-scart-1 
10 plug game-console-1 game-console-1-scart-1 scart-cable-2 scart-cable-2-scart-1 
11 __method_precondition_m-dconnect-v_10_precondition scart-cable-2-scart-2 tv1-1-scart-2 
12 plug scart-cable-2 scart-cable-2-scart-2 tv1-1 tv1-1-scart-2 
13 __method_precondition_m-dconnect-a-empty_12_precondition scart-cable-2 tv1-1 
root 22
14 direct_a_connect cinch-cable-1 active-speaker-1  -> m-dconnect-a 2 34
15 plug scart-cable-2 scart-cable-2-scart-2 tv1-1 tv1-1-scart-2  -> _M-plug|CONSEQUENT 44
16 plug game-console-1 game-console-1-scart-1 scart-cable-2 scart-cable-2-scart-1  -> _M-plug|CONSEQUENT|CONSEQUENT 10
17 a_connect tv1-1 cinch-cable-1  -> m-connect-direct-a 30
18 plug cinch-cable-1 cinch-cable-1-cinch-2 active-speaker-1 active-speaker-1-cinch-2  -> _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1 3
19 plug dvd-1 dvd-1-scart-1 scart-cable-1 scart-cable-1-scart-1  -> _M-plug|CONSEQUENT|CONSEQUENT 5
20 plug game-console-1 game-console-1-scart-1 scart-cable-2 scart-cable-2-scart-1  -> _M-plug|CONSEQUENT 16
21 direct_a_connect scart-cable-2 tv1-1  -> m-dconnect-a-empty 13
22 __artificialTopCompilation__top_1  -> __top_1 36 26 39
23 plug dvd-1 dvd-1-scart-1 scart-cable-1 scart-cable-1-scart-1  -> _M-plug|CONSEQUENT 19
24 v_connect scart-cable-2 tv1-1  -> m-connect-direct-v 32
25 direct_a_connect dvd-1 scart-cable-1  -> m-dconnect-a-empty 6
26 av_connect dvd-1 tv1-1  -> m-connect-split-2 33 28 45
27 direct_av_connect game-console-1 scart-cable-2  -> m-dconnect-av 9 20
28 a_connect dvd-1 scart-cable-1  -> m-connect-direct-a 25
29 plug tv1-1 tv1-1-cinch-3 cinch-cable-1 cinch-cable-1-cinch-1  -> _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0 1
30 direct_a_connect tv1-1 cinch-cable-1  -> m-dconnect-a 0 31
31 plug tv1-1 tv1-1-cinch-3 cinch-cable-1 cinch-cable-1-cinch-1  -> _M-plug|CONSEQUENT 40
32 direct_v_connect scart-cable-2 tv1-1  -> m-dconnect-v 11 15
33 v_connect dvd-1 scart-cable-1  -> m-connect-direct-v 37
34 plug cinch-cable-1 cinch-cable-1-cinch-2 active-speaker-1 active-speaker-1-cinch-2  -> _M-plug|CONSEQUENT 41
35 a_connect scart-cable-2 tv1-1  -> m-connect-direct-a 21
36 a_connect tv1-1 active-speaker-1  -> m-connect-rec-a 17 14
37 direct_v_connect dvd-1 scart-cable-1  -> m-dconnect-v 4 23
38 direct_av_connect scart-cable-1 tv1-1  -> m-dconnect-av 7 46
39 av_connect game-console-1 tv1-1  -> m-connect-rec-av-1 27 42
40 plug tv1-1 tv1-1-cinch-3 cinch-cable-1 cinch-cable-1-cinch-1  -> _M-plug|CONSEQUENT|ANTECEDENT 29
41 plug cinch-cable-1 cinch-cable-1-cinch-2 active-speaker-1 active-speaker-1-cinch-2  -> _M-plug|CONSEQUENT|ANTECEDENT 18
42 av_connect scart-cable-2 tv1-1  -> m-connect-split-1 24 35
43 plug scart-cable-1 scart-cable-1-scart-2 tv1-1 tv1-1-scart-1  -> _M-plug|CONSEQUENT|CONSEQUENT 8
44 plug scart-cable-2 scart-cable-2-scart-2 tv1-1 tv1-1-scart-2  -> _M-plug|CONSEQUENT|CONSEQUENT 12
45 av_connect scart-cable-1 tv1-1  -> m-connect-direct-av 38
46 plug scart-cable-1 scart-cable-1-scart-2 tv1-1 tv1-1-scart-1  -> _M-plug|CONSEQUENT 43

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 6.864 MEMPEAK_KBS 545916.928
