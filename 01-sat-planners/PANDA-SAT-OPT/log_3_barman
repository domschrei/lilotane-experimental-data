PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p03.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p03.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p03.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 43
Grounded planning graph ... done in 584ms.
	Number of Grounded Actions 3017
	Number of Grounded Literals 444
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 43
Two Way TDG ... done.
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 43
Grounding ... done.
	number of abstract tasks = 1424
	number of tasks = 4355
	number of decomposition methods = 5610
	number of predicates = 444
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1424
	number of tasks = 4355
	number of decomposition methods = 5610
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 423ms.
	Number of Grounded Actions 2931
	Number of Grounded Literals 414
	number of abstract tasks = 1424
	number of tasks = 4355
	number of decomposition methods = 5610
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1424
	number of tasks = 4355
	number of decomposition methods = 5610
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1425
	number of tasks = 4356
	number of decomposition methods = 5611
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1425
	number of tasks = 4356
	number of decomposition methods = 5611
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 269ms.
	Number of Grounded Actions 2931
	Number of Grounded Literals 414
	number of abstract tasks = 1425
	number of tasks = 4356
	number of decomposition methods = 5611
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1425
	number of tasks = 4356
	number of decomposition methods = 5611
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1425
	number of tasks = 4356
	number of decomposition methods = 5611
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1425
	number of tasks = 4356
	number of decomposition methods = 5611
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1425
	number of tasks = 4356
	number of decomposition methods = 5611
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Tasks 2931 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767742ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854766987
done
initial PDT has 345 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 345 leafs
SHOP LEAFS 90
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 256473
Size 256429 at 0/2931
Size 254969 at 500/2931
Size 212505 at 1000/2931
Size 35413 at 1500/2931
Size 34525 at 2000/2931
Size 29143 at 2500/2931
Size 29143
Size 25435 at 0/2931
Size 21910 at 500/2931
Size 20409 at 1000/2931
Size 13265 at 1500/2931
Size 4621 at 2000/2931
Size 4608 at 2500/2931
Size 4608
Size 4608 at 0/2931
Size 4608 at 500/2931
Size 4561 at 1000/2931
Size 4518 at 1500/2931
Size 4453 at 2000/2931
Size 4453 at 2500/2931
Size 4423
Size 4403 at 0/2931
Size 4363 at 500/2931
Size 4358 at 1000/2931
Size 4208 at 1500/2931
Size 4107 at 2000/2931
Size 4107 at 2500/2931
Size 4097
Size 4097 at 0/2931
Size 4097 at 500/2931
Size 4097 at 1000/2931
Size 4097 at 1500/2931
Size 4097 at 2000/2931
Size 4097 at 2500/2931
Size 4097
Invariant time: 2.591
Number of invariants: 4097
Invariant Clauses 1417562
NUMBER OF CLAUSES 2155262
NUMBER OF STATE CLAUSES 1815086
NUMBER OF DECOMPOSITION CLAUSES 340176
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.22% 15.780000000000001% 0.0% 
NUMBER OF PATHS 345
Starting cryptominisat5.5
Setting starttime of solver to 1604493484866
Command exited with non-zero status 10
1.28 0.05

Time command gave the following runtime for the solver: 1330
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_1;1;3,4813 4813 _m2_get_first_ingredient_4
1;1;3 237 pathaction!3_1;1;3,1272
Consider method^3_4;3;5,425 425 _m4_serve_shot_6
4;3;5 37 pathaction!3_4;3;5,922
Consider method^2_4;3,2641 2641 m4_serve_shot
4;3 11 pathaction!2_4;3,1674
Consider method^2_14;2,2503 2503 m3_get_second_ingredient
14;2 215 pathaction!2_14;2,321
Consider method^3_10;3;5,1751 1751 _m4_serve_shot_6
10;3;5 88 pathaction!3_10;3;5,945
Consider method^3_0;2;2,2520 2520 _m3_get_second_ingredient_3
0;2;2 240 pathaction!3_0;2;2,1457
Consider method^3_9;1;3,304 304 _m2_get_first_ingredient_4
9;1;3 168 pathaction!3_9;1;3,1304
Consider method^2_5;2,4862 4862 m3_get_second_ingredient
5;2 166 pathaction!2_5;2,335
Consider method^1_6,3286 3286 m0_do_cocktail_in_shot1
6 280 pathaction!1_6,3746
Consider method^3_9;2;2,4577 4577 _m3_get_second_ingredient_3
9;2;2 409 pathaction!3_9;2;2,1397
Consider method^3_2;2;2,1836 1836 _m3_get_second_ingredient_3
2;2;2 292 pathaction!3_2;2;2,1490
Consider method^3_14;2;2,4372 4372 _m3_get_second_ingredient_3
14;2;2 151 pathaction!3_14;2;2,1438
Consider method^3_9;2;1,5279 5279 _m3_get_second_ingredient_2
9;2;1 30 pathaction!3_9;2;1,1166
Consider method^3_11;1;1,739 739 m9_do_fill_shot
11;1;1 285 pathaction!3_11;1;1,764
Consider method^2_1;3,346 346 m4_serve_shot
1;3 379 pathaction!2_1;3,1665
Consider method^3_7;1;1,2162 2162 m8_do_fill_shot
7;1;1 412 pathaction!3_7;1;1,757
Consider method^2_8;3,5432 5432 m4_serve_shot
8;3 519 pathaction!2_8;3,1670
Consider method^3_12;2;1,854 854 _m3_get_second_ingredient_2
12;2;1 76 pathaction!3_12;2;1,1062
Consider method^3_6;1;1,4667 4667 m9_do_fill_shot
6;1;1 103 pathaction!3_6;1;1,871
Consider method^1_13,309 309 m0_do_cocktail_in_shot1
13 459 pathaction!1_13,3749
Consider method^3_5;1;3,7 7 _m2_get_first_ingredient_4
5;1;3 57 pathaction!3_5;1;3,1328
Consider method^3_12;1;1,3141 3141 m8_do_fill_shot
12;1;1 1 pathaction!3_12;1;1,807
Consider method^3_11;3;4,232 232 _m4_serve_shot_5
11;3;4 476 pathaction!3_11;3;4,1659
Consider method^2_9;1,550 550 m2_get_first_ingredient
9;1 36 pathaction!2_9;1,3676
Consider method^3_14;3;4,1056 1056 _m4_serve_shot_5
14;3;4 141 pathaction!3_14;3;4,1609
Consider method^2_1;1,3354 3354 m2_get_first_ingredient
1;1 369 pathaction!2_1;1,3673
Consider method^3_5;2;2,1209 1209 _m3_get_second_ingredient_3
5;2;2 312 pathaction!3_5;2;2,1481
Consider method^2_7;3,2351 2351 m4_serve_shot
7;3 281 pathaction!2_7;3,1669
Consider method^3_3;1;1,2161 2161 m8_do_fill_shot
3;1;1 109 pathaction!3_3;1;1,842
Consider method^3_2;3;1,1100 1100 _m4_serve_shot_2
2;3;1 24 pathaction!3_2;3;1,3736
Consider method^3_3;3;5,1119 1119 _m4_serve_shot_6
3;3;5 334 pathaction!3_3;3;5,907
Consider method^3_5;3;1,910 910 _m4_serve_shot_2
5;3;1 435 pathaction!3_5;3;1,3741
Consider method^2_12;2,489 489 m3_get_second_ingredient
12;2 403 pathaction!2_12;2,328
Consider method^2_5;1,576 576 m2_get_first_ingredient
5;1 375 pathaction!2_5;1,3674
Consider method^2_2;1,1713 1713 m2_get_first_ingredient
2;1 386 pathaction!2_2;1,3678
Consider method^3_4;3;4,5127 5127 _m4_serve_shot_5
4;3;4 325 pathaction!3_4;3;4,1600
Consider method^2_12;3,383 383 m4_serve_shot
12;3 35 pathaction!2_12;3,1672
Consider method^3_11;2;1,722 722 _m3_get_second_ingredient_2
11;2;1 339 pathaction!3_11;2;1,1144
Consider method^3_7;1;3,2371 2371 _m2_get_first_ingredient_4
7;1;3 263 pathaction!3_7;1;3,1247
Consider method^3_10;1;1,2605 2605 m9_do_fill_shot
10;1;1 268 pathaction!3_10;1;1,814
Consider method^3_12;3;4,3995 3995 _m4_serve_shot_5
12;3;4 493 pathaction!3_12;3;4,1648
Consider method^3_2;1;2,289 289 _m2_get_first_ingredient_3
2;1;2 194 pathaction!3_2;1;2,2151
Consider method^3_7;3;1,3724 3724 _m4_serve_shot_2
7;3;1 66 pathaction!3_7;3;1,3722
Consider method^3_14;1;3,412 412 _m2_get_first_ingredient_4
14;1;3 499 pathaction!3_14;1;3,1366
Consider method^3_8;1;2,5495 5495 _m2_get_first_ingredient_3
8;1;2 462 pathaction!3_8;1;2,2147
Consider method^3_6;3;4,3601 3601 _m4_serve_shot_5
6;3;4 129 pathaction!3_6;3;4,1624
Consider method^1_11,2637 2637 m0_do_cocktail_in_shot1
11 180 pathaction!1_11,3748
Consider method^2_10;3,5498 5498 m4_serve_shot
10;3 275 pathaction!2_10;3,1667
Consider method^3_14;1;2,3 3 _m2_get_first_ingredient_3
14;1;2 507 pathaction!3_14;1;2,2175
Consider method^2_0;2,594 594 m3_get_second_ingredient
0;2 350 pathaction!2_0;2,340
Consider method^1_14,4645 4645 m0_do_cocktail_in_shot1
14 7 pathaction!1_14,3756
Consider method^3_1;3;1,308 308 _m4_serve_shot_2
1;3;1 218 pathaction!3_1;3;1,3743
Consider method^3_8;3;4,3185 3185 _m4_serve_shot_5
8;3;4 252 pathaction!3_8;3;4,1608
Consider method^3_6;3;5,1136 1136 _m4_serve_shot_6
6;3;5 278 pathaction!3_6;3;5,915
Consider method^2_10;1,2655 2655 m2_get_first_ingredient
10;1 175 pathaction!2_10;1,3669
Consider method^4_2;3;1;0,2384 2384 m5_do_clean_shot
2;3;1;0 357 pathaction!4_2;3;1;0,3300
Consider method^3_3;2;2,2896 2896 _m3_get_second_ingredient_3
3;2;2 229 pathaction!3_3;2;2,1484
Consider method^1_7,2232 2232 m0_do_cocktail_in_shot1
7 132 pathaction!1_7,3754
Consider method^3_14;1;1,1165 1165 m8_do_fill_shot
14;1;1 266 pathaction!3_14;1;1,876
Consider method^4_1;3;1;0,1554 1554 m6_do_clean_shot
1;3;1;0 469 pathaction!4_1;3;1;0,3545
Consider method^3_9;1;2,1402 1402 _m2_get_first_ingredient_3
9;1;2 299 pathaction!3_9;1;2,2178
Consider method^3_14;3;1,324 324 _m4_serve_shot_2
14;3;1 398 pathaction!3_14;3;1,3716
Consider method^3_0;3;4,3572 3572 _m4_serve_shot_5
0;3;4 381 pathaction!3_0;3;4,1654
Consider method^2_4;2,3310 3310 m3_get_second_ingredient
4;2 186 pathaction!2_4;2,333
Consider method^2_4;1,380 380 m2_get_first_ingredient
4;1 45 pathaction!2_4;1,3672
Consider method^4_3;3;1;0,137 137 m6_do_clean_shot
3;3;1;0 256 pathaction!4_3;3;1;0,3570
Consider method^3_0;2;1,2304 2304 _m3_get_second_ingredient_2
0;2;1 377 pathaction!3_0;2;1,1142
Consider method^1_0,3063 3063 m0_do_cocktail_in_shot1
0 419 pathaction!1_0,3747
Consider method^2_13;1,649 649 m2_get_first_ingredient
13;1 82 pathaction!2_13;1,3664
Consider method^3_5;3;5,638 638 _m4_serve_shot_6
5;3;5 32 pathaction!3_5;3;5,928
Consider method^3_8;3;1,4206 4206 _m4_serve_shot_2
8;3;1 329 pathaction!3_8;3;1,3729
Consider method^2_7;1,2096 2096 m2_get_first_ingredient
7;1 411 pathaction!2_7;1,3666
Consider method^2_11;1,1716 1716 m2_get_first_ingredient
11;1 294 pathaction!2_11;1,3671
Consider method^3_13;1;1,2792 2792 m8_do_fill_shot
13;1;1 112 pathaction!3_13;1;1,761
Consider method^3_0;1;2,3817 3817 _m2_get_first_ingredient_3
0;1;2 100 pathaction!3_0;1;2,2104
Consider method^3_4;2;1,311 311 _m3_get_second_ingredient_2
4;2;1 269 pathaction!3_4;2;1,1135
Consider method^3_1;2;1,3519 3519 _m3_get_second_ingredient_2
1;2;1 301 pathaction!3_1;2;1,1156
Consider method^2_3;1,686 686 m2_get_first_ingredient
3;1 333 pathaction!2_3;1,3663
Consider method^4_14;3;1;0,4438 4438 m6_do_clean_shot
14;3;1;0 397 pathaction!4_14;3;1;0,3247
Consider method^3_13;2;1,4165 4165 _m3_get_second_ingredient_2
13;2;1 390 pathaction!3_13;2;1,1098
Consider method^3_13;3;5,3014 3014 _m4_serve_shot_6
13;3;5 94 pathaction!3_13;3;5,934
Consider method^3_9;1;1,2291 2291 m9_do_fill_shot
9;1;1 416 pathaction!3_9;1;1,814
Consider method^2_11;2,3910 3910 m3_get_second_ingredient
11;2 451 pathaction!2_11;2,332
Consider method^2_9;3,2009 2009 m4_serve_shot
9;3 485 pathaction!2_9;3,1668
Consider method^3_4;2;2,4386 4386 _m3_get_second_ingredient_3
4;2;2 352 pathaction!3_4;2;2,1415
Consider method^1_3,3949 3949 m0_do_cocktail_in_shot1
3 302 pathaction!1_3,3745
Consider method^3_1;1;2,2469 2469 _m2_get_first_ingredient_3
1;1;2 61 pathaction!3_1;1;2,2173
Consider method^0_,5610 5610 __top_1
 402 pathaction!0_,4355
Consider method^4_11;3;1;0,5235 5235 m5_do_clean_shot
11;3;1;0 308 pathaction!4_11;3;1;0,3592
Consider method^3_13;3;1,5072 5072 _m4_serve_shot_2
13;3;1 304 pathaction!3_13;3;1,3727
Consider method^3_5;1;1,5387 5387 m8_do_fill_shot
5;1;1 147 pathaction!3_5;1;1,838
Consider method^3_13;2;2,1523 1523 _m3_get_second_ingredient_3
13;2;2 342 pathaction!3_13;2;2,1412
Consider method^2_3;3,1904 1904 m4_serve_shot
3;3 41 pathaction!2_3;3,1660
Consider method^3_11;3;5,1575 1575 _m4_serve_shot_6
11;3;5 380 pathaction!3_11;3;5,911
Consider method^3_6;2;1,1506 1506 _m3_get_second_ingredient_2
6;2;1 295 pathaction!3_6;2;1,1170
Consider method^3_13;1;3,1709 1709 _m2_get_first_ingredient_4
13;1;3 122 pathaction!3_13;1;3,1251
Consider method^4_4;3;1;0,4640 4640 m6_do_clean_shot
4;3;1;0 236 pathaction!4_4;3;1;0,3466
Consider method^3_13;1;2,2395 2395 _m2_get_first_ingredient_3
13;1;2 417 pathaction!3_13;1;2,2157
Consider method^4_9;3;1;0,4519 4519 m5_do_clean_shot
9;3;1;0 488 pathaction!4_9;3;1;0,3421
Consider method^3_11;3;1,575 575 _m4_serve_shot_2
11;3;1 121 pathaction!3_11;3;1,3715
Consider method^3_0;3;1,1636 1636 _m4_serve_shot_2
0;3;1 72 pathaction!3_0;3;1,3733
Consider method^3_12;3;1,2370 2370 _m4_serve_shot_2
12;3;1 33 pathaction!3_12;3;1,3717
Consider method^2_0;1,3802 3802 m2_get_first_ingredient
0;1 161 pathaction!2_0;1,3679
Consider method^3_14;3;5,1254 1254 _m4_serve_shot_6
14;3;5 173 pathaction!3_14;3;5,920
Consider method^3_3;2;1,1565 1565 _m3_get_second_ingredient_2
3;2;1 96 pathaction!3_3;2;1,1097
Consider method^3_7;1;2,4492 4492 _m2_get_first_ingredient_3
7;1;2 114 pathaction!3_7;1;2,2230
Consider method^2_10;2,1917 1917 m3_get_second_ingredient
10;2 470 pathaction!2_10;2,330
Consider method^3_4;1;2,102 102 _m2_get_first_ingredient_3
4;1;2 504 pathaction!3_4;1;2,2183
Consider method^3_0;3;5,5435 5435 _m4_serve_shot_6
0;3;5 446 pathaction!3_0;3;5,918
Consider method^2_0;3,350 350 m4_serve_shot
0;3 481 pathaction!2_0;3,1662
Consider method^3_1;3;5,185 185 _m4_serve_shot_6
1;3;5 261 pathaction!3_1;3;5,917
Consider method^3_5;1;2,3264 3264 _m2_get_first_ingredient_3
5;1;2 291 pathaction!3_5;1;2,2083
Consider method^3_10;3;4,5469 5469 _m4_serve_shot_5
10;3;4 111 pathaction!3_10;3;4,1602
Consider method^3_3;3;1,3002 3002 _m4_serve_shot_2
3;3;1 63 pathaction!3_3;3;1,3740
Consider method^2_6;3,1546 1546 m4_serve_shot
6;3 442 pathaction!2_6;3,1661
Consider method^3_11;1;2,4204 4204 _m2_get_first_ingredient_3
11;1;2 51 pathaction!3_11;1;2,2167
Consider method^2_14;1,5196 5196 m2_get_first_ingredient
14;1 172 pathaction!2_14;1,3660
Consider method^1_2,1824 1824 m0_do_cocktail_in_shot1
2 494 pathaction!1_2,3758
Consider method^3_1;3;4,1988 1988 _m4_serve_shot_5
1;3;4 216 pathaction!3_1;3;4,1630
Consider method^2_3;2,5210 5210 m3_get_second_ingredient
3;2 73 pathaction!2_3;2,324
Consider method^3_11;2;2,1836 1836 _m3_get_second_ingredient_3
11;2;2 336 pathaction!3_11;2;2,1490
Consider method^2_5;3,4623 4623 m4_serve_shot
5;3 167 pathaction!2_5;3,1666
Consider method^3_2;2;1,722 722 _m3_get_second_ingredient_2
2;2;1 259 pathaction!3_2;2;1,1144
Consider method^2_7;2,3349 3349 m3_get_second_ingredient
7;2 196 pathaction!2_7;2,327
Consider method^4_7;3;1;0,1369 1369 m6_do_clean_shot
7;3;1;0 201 pathaction!4_7;3;1;0,3588
Consider method^1_1,2696 2696 m0_do_cocktail_in_shot1
1 341 pathaction!1_1,3750
Consider method^2_11;3,3870 3870 m4_serve_shot
11;3 306 pathaction!2_11;3,1663
Consider method^4_12;3;1;0,2073 2073 m6_do_clean_shot
12;3;1;0 4 pathaction!4_12;3;1;0,3188
Consider method^3_10;2;2,3383 3383 _m3_get_second_ingredient_3
10;2;2 471 pathaction!3_10;2;2,1437
Consider method^2_8;1,4851 4851 m2_get_first_ingredient
8;1 131 pathaction!2_8;1,3665
Consider method^2_9;2,2108 2108 m3_get_second_ingredient
9;2 359 pathaction!2_9;2,337
Consider method^3_9;3;1,1773 1773 _m4_serve_shot_2
9;3;1 327 pathaction!3_9;3;1,3720
Consider method^3_1;1;1,4306 4306 m8_do_fill_shot
1;1;1 496 pathaction!3_1;1;1,782
Consider method^1_8,3851 3851 m0_do_cocktail_in_shot1
8 438 pathaction!1_8,3755
Consider method^3_3;1;2,2388 2388 _m2_get_first_ingredient_3
3;1;2 362 pathaction!3_3;1;2,2130
Consider method^2_13;3,1880 1880 m4_serve_shot
13;3 198 pathaction!2_13;3,1664
Consider method^3_7;2;2,3075 3075 _m3_get_second_ingredient_3
7;2;2 13 pathaction!3_7;2;2,1449
Consider method^1_4,4258 4258 m0_do_cocktail_in_shot1
4 463 pathaction!1_4,3759
Consider method^3_12;2;2,538 538 _m3_get_second_ingredient_3
12;2;2 436 pathaction!3_12;2;2,1507
Consider method^2_6;1,3219 3219 m2_get_first_ingredient
6;1 89 pathaction!2_6;1,3680
Consider method^4_13;3;1;0,5263 5263 m6_do_clean_shot
13;3;1;0 516 pathaction!4_13;3;1;0,3310
Consider method^4_0;3;1;0,4137 4137 m6_do_clean_shot
0;3;1;0 211 pathaction!4_0;3;1;0,3490
Consider method^1_5,3139 3139 m0_do_cocktail_in_shot1
5 119 pathaction!1_5,3751
Consider method^3_8;2;1,3729 3729 _m3_get_second_ingredient_2
8;2;1 364 pathaction!3_8;2;1,1149
Consider method^3_0;1;1,3570 3570 m8_do_fill_shot
0;1;1 340 pathaction!3_0;1;1,865
Consider method^3_3;3;4,3810 3810 _m4_serve_shot_5
3;3;4 25 pathaction!3_3;3;4,1656
Consider method^4_8;3;1;0,1566 1566 m6_do_clean_shot
8;3;1;0 382 pathaction!4_8;3;1;0,3515
Consider method^1_9,987 987 m0_do_cocktail_in_shot1
9 222 pathaction!1_9,3753
Consider method^2_8;2,196 196 m3_get_second_ingredient
8;2 42 pathaction!2_8;2,326
Consider method^2_12;1,4570 4570 m2_get_first_ingredient
12;1 433 pathaction!2_12;1,3667
Consider method^2_1;2,1444 1444 m3_get_second_ingredient
1;2 68 pathaction!2_1;2,334
Consider method^3_0;1;3,1764 1764 _m2_get_first_ingredient_4
0;1;3 480 pathaction!3_0;1;3,1355
Consider method^3_14;2;1,3321 3321 _m3_get_second_ingredient_2
14;2;1 408 pathaction!3_14;2;1,1077
Consider method^3_8;1;1,4716 4716 m8_do_fill_shot
8;1;1 139 pathaction!3_8;1;1,890
Consider method^3_12;1;2,2677 2677 _m2_get_first_ingredient_3
12;1;2 413 pathaction!3_12;1;2,2203
Consider method^3_4;1;3,1645 1645 _m2_get_first_ingredient_4
4;1;3 52 pathaction!3_4;1;3,1234
Consider method^2_2;2,278 278 m3_get_second_ingredient
2;2 453 pathaction!2_2;2,339
Consider method^3_2;1;1,388 388 m8_do_fill_shot
2;1;1 478 pathaction!3_2;1;1,880
Consider method^2_13;2,639 639 m3_get_second_ingredient
13;2 425 pathaction!2_13;2,325
Consider method^3_12;3;5,3806 3806 _m4_serve_shot_6
12;3;5 290 pathaction!3_12;3;5,936
Consider method^3_5;3;4,1780 1780 _m4_serve_shot_5
5;3;4 228 pathaction!3_5;3;4,1645
Consider method^3_3;1;3,1981 1981 _m2_get_first_ingredient_4
3;1;3 326 pathaction!3_3;1;3,1332
Consider method^3_2;3;5,859 859 _m4_serve_shot_6
2;3;5 219 pathaction!3_2;3;5,943
Consider method^2_6;2,1219 1219 m3_get_second_ingredient
6;2 474 pathaction!2_6;2,341
Consider method^4_5;3;1;0,5531 5531 m6_do_clean_shot
5;3;1;0 159 pathaction!4_5;3;1;0,3324
Consider method^3_10;1;3,304 304 _m2_get_first_ingredient_4
10;1;3 156 pathaction!3_10;1;3,1304
Consider method^1_10,3741 3741 m0_do_cocktail_in_shot1
10 345 pathaction!1_10,3752
Consider method^3_13;3;4,45 45 _m4_serve_shot_5
13;3;4 439 pathaction!3_13;3;4,1613
Consider method^3_1;2;2,2992 2992 _m3_get_second_ingredient_3
1;2;2 452 pathaction!3_1;2;2,1514
Consider method^3_11;1;3,946 946 _m2_get_first_ingredient_4
11;1;3 107 pathaction!3_11;1;3,1254
Consider method^4_10;3;1;0,3195 3195 m5_do_clean_shot
10;3;1;0 155 pathaction!4_10;3;1;0,3272
Consider method^3_2;3;4,1162 1162 _m4_serve_shot_5
2;3;4 214 pathaction!3_2;3;4,1635
Consider method^3_10;3;1,5512 5512 _m4_serve_shot_2
10;3;1 422 pathaction!3_10;3;1,3739
Consider method^3_8;1;3,374 374 _m2_get_first_ingredient_4
8;1;3 162 pathaction!3_8;1;3,1380
Consider method^4_6;3;1;0,3807 3807 m5_do_clean_shot
6;3;1;0 171 pathaction!4_6;3;1;0,3355
Consider method^3_4;3;1,2794 2794 _m4_serve_shot_2
4;3;1 434 pathaction!3_4;3;1,3724
Consider method^3_9;3;4,1727 1727 _m4_serve_shot_5
9;3;4 267 pathaction!3_9;3;4,1617
Consider method^3_5;2;1,3717 3717 _m3_get_second_ingredient_2
5;2;1 486 pathaction!3_5;2;1,1101
Consider method^3_6;1;2,4106 4106 _m2_get_first_ingredient_3
6;1;2 2 pathaction!3_6;1;2,2145
Consider method^2_2;3,5116 5116 m4_serve_shot
2;3 300 pathaction!2_2;3,1673
Consider method^3_2;1;3,5296 5296 _m2_get_first_ingredient_4
2;1;3 378 pathaction!3_2;1;3,1370
Consider method^1_12,2836 2836 m0_do_cocktail_in_shot1
12 163 pathaction!1_12,3757
Consider method^3_6;1;3,822 822 _m2_get_first_ingredient_4
6;1;3 47 pathaction!3_6;1;3,1361
Consider method^3_6;2;2,790 790 _m3_get_second_ingredient_3
6;2;2 99 pathaction!3_6;2;2,1448
Consider method^3_8;2;2,5057 5057 _m3_get_second_ingredient_3
8;2;2 445 pathaction!3_8;2;2,1500
Consider method^3_7;3;5,4077 4077 _m4_serve_shot_6
7;3;5 510 pathaction!3_7;3;5,942
Consider method^3_7;2;1,1678 1678 _m3_get_second_ingredient_2
7;2;1 466 pathaction!3_7;2;1,1171
Consider method^3_4;1;1,4399 4399 m8_do_fill_shot
4;1;1 384 pathaction!3_4;1;1,744
Consider method^2_14;3,2781 2781 m4_serve_shot
14;3 321 pathaction!2_14;3,1671
Consider method^3_7;3;4,1382 1382 _m4_serve_shot_5
7;3;4 472 pathaction!3_7;3;4,1636
Consider method^3_8;3;5,3806 3806 _m4_serve_shot_6
8;3;5 108 pathaction!3_8;3;5,936
Consider method^3_10;1;2,1402 1402 _m2_get_first_ingredient_3
10;1;2 178 pathaction!3_10;1;2,2178
Consider method^3_12;1;3,4446 4446 _m2_get_first_ingredient_4
12;1;3 431 pathaction!3_12;1;3,1297
Consider method^3_9;3;5,1575 1575 _m4_serve_shot_6
9;3;5 118 pathaction!3_9;3;5,911
Consider method^3_10;2;1,974 974 _m3_get_second_ingredient_2
10;2;1 238 pathaction!3_10;2;1,1063
Consider method^3_6;3;1,2044 2044 _m4_serve_shot_2
6;3;1 239 pathaction!3_6;3;1,3734


CHECKING primitive solution of length 324 ...
true 125 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 283 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot1;]
true 293 __method_precondition_m8_do_fill_shot_8_precondition[shot1,dispenser4,ingredient4;]
true 385 grasp[right,shot1;]
true 253 fill-shot[shot1,ingredient4,right,left,dispenser4;]
true 69 pour-shot-to-clean-shaker[shot1,ingredient4,shaker1,right,l0,l1;]
true 176 clean-shot[shot1,ingredient4,right,left;]
true 406 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient5,right,shot1;]
true 319 fill-shot[shot1,ingredient5,right,left,dispenser5;]
true 495 pour-shot-to-used-shaker[shot1,ingredient5,shaker1,right,l1,l2;]
true 106 leave[right,shot1;]
true 372 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient5;]
true 311 __method_precondition_m6_do_clean_shot_6_precondition[shot1,right;]
true 84 grasp[right,shot1;]
true 279 clean-shot[shot1,ingredient5,right,left;]
true 208 leave[right,shot1;]
true 116 grasp[left,shaker1;]
true 484 shake[cocktail7,ingredient4,ingredient5,shaker1,left,right;]
true 86 pour-shaker-to-shot[cocktail7,shot1,left,shaker1,l2,l1;]
true 150 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 210 clean-shaker[left,right,shaker1;]
true 475 leave[left,shaker1;]
true 243 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 441 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient5,shot2;]
true 337 __method_precondition_m8_do_fill_shot_8_precondition[shot2,dispenser5,ingredient5;]
true 160 grasp[left,shot2;]
true 358 fill-shot[shot2,ingredient5,left,right,dispenser5;]
true 23 pour-shot-to-clean-shaker[shot2,ingredient5,shaker1,left,l0,l1;]
true 0 clean-shot[shot2,ingredient5,left,right;]
true 233 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot2;]
true 123 fill-shot[shot2,ingredient1,left,right,dispenser1;]
true 393 pour-shot-to-used-shaker[shot2,ingredient1,shaker1,left,l1,l2;]
true 414 leave[left,shot2;]
true 10 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient5,ingredient1;]
true 447 __method_precondition_m6_do_clean_shot_6_precondition[shot2,left;]
true 227 grasp[left,shot2;]
true 274 clean-shot[shot2,ingredient1,left,right;]
true 53 leave[left,shot2;]
true 117 grasp[right,shaker1;]
true 318 shake[cocktail5,ingredient5,ingredient1,shaker1,right,left;]
true 146 pour-shaker-to-shot[cocktail5,shot2,right,shaker1,l2,l1;]
true 511 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 14 clean-shaker[right,left,shaker1;]
true 418 leave[right,shaker1;]
true 127 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 247 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot16;]
true 102 __method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser2,ingredient2;]
true 305 grasp[left,shot16;]
true 314 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 497 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1;]
true 191 clean-shot[shot16,ingredient2,left,right;]
true 187 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,left,shot16;]
true 204 fill-shot[shot16,ingredient1,left,right,dispenser1;]
true 303 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,left,l1,l2;]
true 456 leave[left,shot16;]
true 133 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient1;]
true 324 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 8 nop[;]
true 165 grasp[left,shaker1;]
true 258 shake[cocktail8,ingredient2,ingredient1,shaker1,left,right;]
true 407 pour-shaker-to-shot[cocktail8,shot3,left,shaker1,l2,l1;]
true 98 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 367 clean-shaker[left,right,shaker1;]
true 154 leave[left,shaker1;]
true 508 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 212 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot4;]
true 455 __method_precondition_m8_do_fill_shot_8_precondition[shot4,dispenser1,ingredient1;]
true 322 grasp[left,shot4;]
true 250 fill-shot[shot4,ingredient1,left,right,dispenser1;]
true 479 pour-shot-to-clean-shaker[shot4,ingredient1,shaker1,left,l0,l1;]
true 50 clean-shot[shot4,ingredient1,left,right;]
true 115 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot4;]
true 113 fill-shot[shot4,ingredient4,left,right,dispenser4;]
true 46 pour-shot-to-used-shaker[shot4,ingredient4,shaker1,left,l1,l2;]
true 152 leave[left,shot4;]
true 164 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4;]
true 40 __method_precondition_m6_do_clean_shot_6_precondition[shot4,right;]
true 512 grasp[right,shot4;]
true 335 clean-shot[shot4,ingredient4,right,left;]
true 148 leave[right,shot4;]
true 110 grasp[left,shaker1;]
true 373 shake[cocktail1,ingredient1,ingredient4,shaker1,left,right;]
true 514 pour-shaker-to-shot[cocktail1,shot4,left,shaker1,l2,l1;]
true 517 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 313 clean-shaker[left,right,shaker1;]
true 104 leave[left,shaker1;]
true 234 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 101 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot5;]
true 67 __method_precondition_m8_do_fill_shot_8_precondition[shot5,dispenser4,ingredient4;]
true 241 grasp[left,shot5;]
true 120 fill-shot[shot5,ingredient4,left,right,dispenser4;]
true 473 pour-shot-to-clean-shaker[shot5,ingredient4,shaker1,left,l0,l1;]
true 410 clean-shot[shot5,ingredient4,left,right;]
true 144 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,left,shot5;]
true 246 fill-shot[shot5,ingredient1,left,right,dispenser1;]
true 184 pour-shot-to-used-shaker[shot5,ingredient1,shaker1,left,l1,l2;]
true 404 leave[left,shot5;]
true 79 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient1;]
true 49 __method_precondition_m6_do_clean_shot_6_precondition[shot5,left;]
true 500 grasp[left,shot5;]
true 349 clean-shot[shot5,ingredient1,left,right;]
true 205 leave[left,shot5;]
true 415 grasp[right,shaker1;]
true 3 shake[cocktail9,ingredient4,ingredient1,shaker1,right,left;]
true 142 pour-shaker-to-shot[cocktail9,shot5,right,shaker1,l2,l1;]
true 394 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 70 clean-shaker[right,left,shaker1;]
true 365 leave[right,shaker1;]
true 179 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 465 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot6;]
true 423 __method_precondition_m8_do_fill_shot_8_precondition[shot6,dispenser2,ingredient2;]
true 226 grasp[right,shot6;]
true 317 fill-shot[shot6,ingredient2,right,left,dispenser2;]
true 270 pour-shot-to-clean-shaker[shot6,ingredient2,shaker1,right,l0,l1;]
true 20 clean-shot[shot6,ingredient2,right,left;]
true 273 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient5,right,shot6;]
true 22 fill-shot[shot6,ingredient5,right,left,dispenser5;]
true 39 pour-shot-to-used-shaker[shot6,ingredient5,shaker1,right,l1,l2;]
true 193 leave[right,shot6;]
true 395 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient5;]
true 490 __method_precondition_m6_do_clean_shot_6_precondition[shot6,right;]
true 405 grasp[right,shot6;]
true 77 clean-shot[shot6,ingredient5,right,left;]
true 225 leave[right,shot6;]
true 27 grasp[left,shaker1;]
true 81 shake[cocktail3,ingredient2,ingredient5,shaker1,left,right;]
true 15 pour-shaker-to-shot[cocktail3,shot6,left,shaker1,l2,l1;]
true 282 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 518 clean-shaker[left,right,shaker1;]
true 361 leave[left,shaker1;]
true 420 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 9 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot16;]
true 56 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient1,dispenser3;]
true 426 grasp[left,shot16;]
true 450 clean-shot[shot16,ingredient1,left,right;]
true 245 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 265 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1;]
true 31 clean-shot[shot16,ingredient3,left,right;]
true 153 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot16;]
true 38 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 181 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2;]
true 427 leave[left,shot16;]
true 354 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient2;]
true 296 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 199 nop[;]
true 460 grasp[right,shaker1;]
true 54 shake[cocktail11,ingredient3,ingredient2,shaker1,right,left;]
true 389 pour-shaker-to-shot[cocktail11,shot7,right,shaker1,l2,l1;]
true 376 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 276 clean-shaker[right,left,shaker1;]
true 356 leave[right,shaker1;]
true 353 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 491 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot8;]
true 331 __method_precondition_m8_do_fill_shot_8_precondition[shot8,dispenser2,ingredient2;]
true 284 grasp[left,shot8;]
true 200 fill-shot[shot8,ingredient2,left,right,dispenser2;]
true 242 pour-shot-to-clean-shaker[shot8,ingredient2,shaker1,left,l0,l1;]
true 506 clean-shot[shot8,ingredient2,left,right;]
true 169 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient5,left,shot8;]
true 185 fill-shot[shot8,ingredient5,left,right,dispenser5;]
true 64 pour-shot-to-used-shaker[shot8,ingredient5,shaker1,left,l1,l2;]
true 428 leave[left,shot8;]
true 128 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient5;]
true 230 __method_precondition_m6_do_clean_shot_6_precondition[shot8,left;]
true 457 grasp[left,shot8;]
true 65 clean-shot[shot8,ingredient5,left,right;]
true 90 leave[left,shot8;]
true 503 grasp[right,shaker1;]
true 271 shake[cocktail10,ingredient2,ingredient5,shaker1,right,left;]
true 19 pour-shaker-to-shot[cocktail10,shot8,right,shaker1,l2,l1;]
true 44 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 138 clean-shaker[right,left,shaker1;]
true 489 leave[right,shaker1;]
true 401 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 26 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient5,shot9;]
true 254 __method_precondition_m8_do_fill_shot_8_precondition[shot9,dispenser5,ingredient5;]
true 289 grasp[left,shot9;]
true 396 fill-shot[shot9,ingredient5,left,right,dispenser5;]
true 183 pour-shot-to-clean-shaker[shot9,ingredient5,shaker1,left,l0,l1;]
true 515 clean-shot[shot9,ingredient5,left,right;]
true 505 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot9;]
true 483 fill-shot[shot9,ingredient2,left,right,dispenser2;]
true 368 pour-shot-to-used-shaker[shot9,ingredient2,shaker1,left,l1,l2;]
true 174 leave[left,shot9;]
true 286 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient5,ingredient2;]
true 437 __method_precondition_m6_do_clean_shot_6_precondition[shot9,right;]
true 502 grasp[right,shot9;]
true 260 clean-shot[shot9,ingredient2,right,left;]
true 310 leave[right,shot9;]
true 206 grasp[left,shaker1;]
true 430 shake[cocktail4,ingredient5,ingredient2,shaker1,left,right;]
true 444 pour-shaker-to-shot[cocktail4,shot9,left,shaker1,l2,l1;]
true 12 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 60 clean-shaker[left,right,shaker1;]
true 307 leave[left,shaker1;]
true 277 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 130 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient5,shot16;]
true 62 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient2,dispenser5;]
true 429 grasp[right,shot16;]
true 83 clean-shot[shot16,ingredient2,right,left;]
true 366 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 209 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1;]
true 370 clean-shot[shot16,ingredient5,right,left;]
true 177 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,right,shot16;]
true 255 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 182 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2;]
true 145 leave[right,shot16;]
true 134 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient5,ingredient1;]
true 513 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 467 nop[;]
true 477 grasp[right,shaker1;]
true 344 shake[cocktail6,ingredient5,ingredient1,shaker1,right,left;]
true 158 pour-shaker-to-shot[cocktail6,shot10,right,shaker1,l2,l1;]
true 330 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 92 clean-shaker[right,left,shaker1;]
true 351 leave[right,shaker1;]
true 34 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 387 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient5,shot16;]
true 126 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient1,dispenser5;]
true 346 grasp[right,shot16;]
true 248 clean-shot[shot16,ingredient1,right,left;]
true 188 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 140 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1;]
true 195 clean-shot[shot16,ingredient5,right,left;]
true 348 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient2,right,shot16;]
true 272 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 136 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,right,l1,l2;]
true 323 leave[right,shot16;]
true 392 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient5,ingredient2;]
true 461 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 58 nop[;]
true 28 grasp[right,shaker1;]
true 95 shake[cocktail2,ingredient5,ingredient2,shaker1,right,left;]
true 43 pour-shaker-to-shot[cocktail2,shot11,right,shaker1,l2,l1;]
true 297 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 338 clean-shaker[right,left,shaker1;]
true 223 leave[right,shaker1;]
true 443 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 498 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient5,shot16;]
true 251 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient2,dispenser5;]
true 213 grasp[left,shot16;]
true 468 clean-shot[shot16,ingredient2,left,right;]
true 48 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 21 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1;]
true 458 clean-shot[shot16,ingredient5,left,right;]
true 343 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot16;]
true 492 fill-shot[shot16,ingredient1,left,right,dispenser1;]
true 244 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,left,l1,l2;]
true 80 leave[left,shot16;]
true 78 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient5,ingredient1;]
true 371 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 124 nop[;]
true 374 grasp[right,shaker1;]
true 74 shake[cocktail6,ingredient5,ingredient1,shaker1,right,left;]
true 262 pour-shaker-to-shot[cocktail6,shot12,right,shaker1,l2,l1;]
true 192 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 383 clean-shaker[right,left,shaker1;]
true 93 leave[right,shaker1;]
true 487 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right;]
true 224 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient5,shot13;]
true 400 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser5,ingredient5;]
true 320 grasp[right,shot13;]
true 287 fill-shot[shot13,ingredient5,right,left,dispenser5;]
true 347 pour-shot-to-clean-shaker[shot13,ingredient5,shaker1,right,l0,l1;]
true 501 clean-shot[shot13,ingredient5,right,left;]
true 316 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot13;]
true 87 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 509 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2;]
true 288 leave[right,shot13;]
true 391 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient5,ingredient2;]
true 424 __method_precondition_m6_do_clean_shot_6_precondition[shot13,right;]
true 249 grasp[right,shot13;]
true 105 clean-shot[shot13,ingredient2,right,left;]
true 75 leave[right,shot13;]
true 16 grasp[left,shaker1;]
true 207 shake[cocktail4,ingredient5,ingredient2,shaker1,left,right;]
true 399 pour-shaker-to-shot[cocktail4,shot13,left,shaker1,l2,l1;]
true 328 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 432 clean-shaker[left,right,shaker1;]
true 464 leave[left,shaker1;]
true 332 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left;]
true 220 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot14;]
true 217 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser4,ingredient4;]
true 71 grasp[left,shot14;]
true 448 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 97 pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,left,l0,l1;]
true 203 clean-shot[shot14,ingredient4,left,right;]
true 202 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient5,left,shot14;]
true 449 fill-shot[shot14,ingredient5,left,right,dispenser5;]
true 59 pour-shot-to-used-shaker[shot14,ingredient5,shaker1,left,l1,l2;]
true 355 leave[left,shot14;]
true 135 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient5;]
true 454 __method_precondition_m6_do_clean_shot_6_precondition[shot14,left;]
true 264 grasp[left,shot14;]
true 363 clean-shot[shot14,ingredient5,left,right;]
true 137 leave[left,shot14;]
true 190 grasp[right,shaker1;]
true 440 shake[cocktail7,ingredient4,ingredient5,shaker1,right,left;]
true 143 pour-shaker-to-shot[cocktail7,shot14,right,shaker1,l2,l1;]
true 257 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 149 clean-shaker[right,left,shaker1;]
true 17 leave[right,shaker1;]
true 170 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,right;]
true 18 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot15;]
true 55 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser1,ingredient1;]
true 315 grasp[right,shot15;]
true 221 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 231 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1;]
true 309 clean-shot[shot15,ingredient1,right,left;]
true 388 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,right,shot15;]
true 91 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 232 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 482 leave[right,shot15;]
true 298 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4;]
true 235 __method_precondition_m6_do_clean_shot_6_precondition[shot15,left;]
true 157 grasp[left,shot15;]
true 6 clean-shot[shot15,ingredient4,left,right;]
true 29 leave[left,shot15;]
true 85 grasp[right,shaker1;]
true 197 shake[cocktail1,ingredient1,ingredient4,shaker1,right,left;]
true 360 pour-shaker-to-shot[cocktail1,shot15,right,shaker1,l2,l1;]
true 5 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 189 clean-shaker[right,left,shaker1;]
true 421 leave[right,shaker1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2852
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 5704
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 8556
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 11408
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 14260
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 17112
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 19964
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 22816
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 25668
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 28520
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 31372
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 34224
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 37076
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 39928
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 42780
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 45632
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 48484
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 51336
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 54188
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 57040
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 59892
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 62744
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 65596
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 68448
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 71300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 74152
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 77004
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 79856
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 82708
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 85560
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 88412
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 91264
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 94116
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 96968
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 99820
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 102672
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 105524
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 108376
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 111228
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 114080
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 116932
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 119784
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 122636
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 125488
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 128340
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 131192
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 134044
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 136896
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 139748
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 142600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 145452
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 148304
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 151156
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 154008
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 156860
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 159712
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 162564
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 165416
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 168268
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 171120
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 173972
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 176824
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 179676
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 182528
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 185380
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 188232
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 191084
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 193936
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 196788
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 199640
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 202492
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 205344
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 208196
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 211048
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 213900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 216752
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 219604
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 222456
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 225308
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 228160
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 231012
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 233864
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 236716
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 239568
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 242420
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 245272
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 248124
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 250976
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 253828
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 256680
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 259532
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 262384
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 265236
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 268088
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 270940
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 273792
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 276644
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 279496
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 282348
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 285200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 288052
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 290904
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 293756
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 296608
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 299460
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 302312
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 305164
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 308016
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 310868
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 313720
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 316572
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 319424
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 322276
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 325128
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 327980
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 330832
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 333684
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.100 MEMPEAK_KBS 926783.488
