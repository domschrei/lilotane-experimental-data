PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile25.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile25.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile25.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Grounded planning graph ... done in 305ms.
	Number of Grounded Actions 600
	Number of Grounded Literals 209
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Grounding ... done.
	number of abstract tasks = 268
	number of tasks = 868
	number of decomposition methods = 884
	number of predicates = 209
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 268
	number of tasks = 868
	number of decomposition methods = 884
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 99ms.
	Number of Grounded Actions 600
	Number of Grounded Literals 168
	number of abstract tasks = 268
	number of tasks = 868
	number of decomposition methods = 884
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 268
	number of tasks = 868
	number of decomposition methods = 884
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 44ms.
	Number of Grounded Actions 600
	Number of Grounded Literals 168
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 269
	number of tasks = 869
	number of decomposition methods = 885
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 397
	number of tasks = 997
	number of decomposition methods = 1013
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 397
	number of tasks = 997
	number of decomposition methods = 1013
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 600
	number of constants = 0
Tasks 600 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772513ms

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854772378
done
initial PDT has 64 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 64 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 42084
Size 42083 at 0/600
Size 20299 at 500/600
Size 20258
Size 20257 at 0/600
Size 2863 at 500/600
Size 2861
Size 2861 at 0/600
Size 870 at 500/600
Size 870
Size 869 at 0/600
Size 687 at 500/600
Size 687
Size 686 at 0/600
Size 672 at 500/600
Size 672
Size 672 at 0/600
Size 672 at 500/600
Size 672
Invariant time: 0.445
Number of invariants: 672
Invariant Clauses 43680
NUMBER OF CLAUSES 77650
NUMBER OF STATE CLAUSES 68288
NUMBER OF DECOMPOSITION CLAUSES 9362
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 87.94% 12.06% 0.0% 
NUMBER OF PATHS 64
Starting cryptominisat5.5
Setting starttime of solver to 1604531216831
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 96 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 101 will abort at 9223372036854770590
done
PDT has 96 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 65184
NUMBER OF CLAUSES 148300
NUMBER OF STATE CLAUSES 105148
NUMBER OF DECOMPOSITION CLAUSES 43152
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 70.9% 29.1% 0.0% 
NUMBER OF PATHS 96
Starting cryptominisat5.5
Setting starttime of solver to 1604531217932
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854769611
done
initial PDT has 155 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 155 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 104832
NUMBER OF CLAUSES 310896
NUMBER OF STATE CLAUSES 173948
NUMBER OF DECOMPOSITION CLAUSES 136948
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 55.95% 44.050000000000004% 0.0% 
NUMBER OF PATHS 155
Starting cryptominisat5.5
Setting starttime of solver to 1604531219396
Command exited with non-zero status 20
0.38 0.00

Time command gave the following runtime for the solver: 380
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767786
done
initial PDT has 214 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 214 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 144480
NUMBER OF CLAUSES 623384
NUMBER OF STATE CLAUSES 250124
NUMBER OF DECOMPOSITION CLAUSES 373260
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 40.12% 59.88% 0.0% 
NUMBER OF PATHS 214
Starting cryptominisat5.5
Setting starttime of solver to 1604531221864
Command exited with non-zero status 10
0.38 0.03

Time command gave the following runtime for the solver: 410
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_9;2,547 547 m-drive-to-via
9;2 177 pathaction!2_9;2,558
Consider method^4_15;0;0;0,29 29 m-drive-to-via
15;0;0;0 302 pathaction!4_15;0;0;0,598
Consider method^5_11;0;0;0;0,802 802 m-drive-to
11;0;0;0;0 268 pathaction!5_11;0;0;0;0,601
Consider method^1_15,441 441 m-deliver
15 167 pathaction!1_15,544
Consider method^2_6;0,775 775 m-drive-to
6;0 311 pathaction!2_6;0,581
Consider method^3_6;2;0,871 871 m-drive-to
6;2;0 128 pathaction!3_6;2;0,597
Consider method^5_0;0;0;0;0,561 561 m-drive-to
0;0;0;0;0 11 pathaction!5_0;0;0;0;0,590
Consider method^2_1;0,451 451 m-drive-to-via
1;0 119 pathaction!2_1;0,556
Consider method^1_14,272 272 m-deliver
14 64 pathaction!1_14,549
Consider method^2_3;0,472 472 m-drive-to-via
3;0 173 pathaction!2_3;0,562
Consider method^2_10;3,78 78 m-unload
10;3 5 pathaction!2_10;3,634
Consider method^2_1;3,931 931 m-unload
1;3 94 pathaction!2_1;3,653
Consider method^2_14;3,499 499 m-unload
14;3 67 pathaction!2_14;3,654
Consider method^2_9;1,810 810 m-load
9;1 248 pathaction!2_9;1,770
Consider method^1_1,704 704 m-deliver
1 269 pathaction!1_1,542
Consider method^2_10;0,431 431 m-drive-to-via
10;0 129 pathaction!2_10;0,563
Consider method^4_5;0;0;0,24 24 m-i-am-there
5;0;0;0 61 pathaction!4_5;0;0;0,606
Consider method^3_2;0;0,749 749 m-drive-to
2;0;0 14 pathaction!3_2;0;0,591
Consider method^2_5;2,955 955 m-drive-to-via
5;2 300 pathaction!2_5;2,613
Consider method^3_5;2;0,819 819 m-drive-to-via
5;2;0 47 pathaction!3_5;2;0,559
Consider method^1_11,43 43 m-deliver
11 69 pathaction!1_11,540
Consider method^2_5;1,412 412 m-load
5;1 104 pathaction!2_5;1,799
Consider method^2_14;0,827 827 m-drive-to-via
14;0 234 pathaction!2_14;0,610
Consider method^2_2;3,162 162 m-unload
2;3 176 pathaction!2_2;3,633
Consider method^2_13;0,602 602 m-drive-to-via
13;0 83 pathaction!2_13;0,587
Consider method^3_11;0;0,712 712 m-drive-to-via
11;0;0 33 pathaction!3_11;0;0,604
Consider method^2_6;1,370 370 m-load
6;1 310 pathaction!2_6;1,702
Consider method^5_12;0;0;0;0,718 718 m-drive-to
12;0;0;0;0 279 pathaction!5_12;0;0;0;0,609
Consider method^3_2;2;0,777 777 m-drive-to-via
2;2;0 186 pathaction!3_2;2;0,596
Consider method^5_13;0;0;0;0,678 678 m-drive-to
13;0;0;0;0 291 pathaction!5_13;0;0;0;0,578
Consider method^2_11;2,530 530 m-drive-to-via
11;2 112 pathaction!2_11;2,610
Consider method^5_12;2;0;0;0,788 788 m-drive-to
12;2;0;0;0 220 pathaction!5_12;2;0;0;0,587
Consider method^3_10;0;0,331 331 m-drive-to
10;0;0 39 pathaction!3_10;0;0,559
Consider method^4_15;2;0;0,619 619 m-drive-to-via
15;2;0;0 296 pathaction!4_15;2;0;0,559
Consider method^5_1;2;0;0;0,264 264 m-drive-to
1;2;0;0;0 216 pathaction!5_1;2;0;0;0,587
Consider method^4_11;2;0;0,83 83 m-drive-to-via
11;2;0;0 18 pathaction!4_11;2;0;0,590
Consider method^2_8;1,206 206 m-load
8;1 59 pathaction!2_8;1,790
Consider method^4_3;2;0;0,603 603 m-drive-to
3;2;0;0 66 pathaction!4_3;2;0;0,573
Consider method^4_8;2;0;0,12 12 m-i-am-there
8;2;0;0 96 pathaction!4_8;2;0;0,612
Consider method^5_14;0;0;0;0,882 882 m-i-am-there
14;0;0;0;0 235 pathaction!5_14;0;0;0;0,595
Consider method^1_4,728 728 m-deliver
4 182 pathaction!1_4,546
Consider method^2_14;2,2 2 m-drive-to-via
14;2 169 pathaction!2_14;2,601
Consider method^2_9;0,115 115 m-drive-to-via
9;0 256 pathaction!2_9;0,609
Consider method^1_6,857 857 m-deliver
6 244 pathaction!1_6,551
Consider method^4_5;2;0;0,740 740 m-drive-to-via
5;2;0;0 185 pathaction!4_5;2;0;0,563
Consider method^2_4;0,933 933 m-drive-to-via
4;0 130 pathaction!2_4;0,599
Consider method^4_1;2;0;0,929 929 m-drive-to-via
1;2;0;0 196 pathaction!4_1;2;0;0,610
Consider method^2_7;2,374 374 m-drive-to-via
7;2 140 pathaction!2_7;2,572
Consider method^3_0;0;0,480 480 m-drive-to-via
0;0;0 294 pathaction!3_0;0;0,558
Consider method^2_13;3,532 532 m-unload
13;3 105 pathaction!2_13;3,676
Consider method^5_4;2;0;0;0,566 566 m-drive-to
4;2;0;0;0 224 pathaction!5_4;2;0;0;0,583
Consider method^2_4;1,533 533 m-load
4;1 40 pathaction!2_4;1,738
Consider method^4_2;2;0;0,211 211 m-drive-to
2;2;0;0 297 pathaction!4_2;2;0;0,591
Consider method^3_7;2;0,275 275 m-drive-to
7;2;0 63 pathaction!3_7;2;0,603
Consider method^4_4;2;0;0,621 621 m-drive-to-via
4;2;0;0 127 pathaction!4_4;2;0;0,589
Consider method^4_12;0;0;0,70 70 m-drive-to-via
12;0;0;0 286 pathaction!4_12;0;0;0,590
Consider method^5_5;2;0;0;0,645 645 m-drive-to
5;2;0;0;0 80 pathaction!5_5;2;0;0;0,582
Consider method^2_11;1,479 479 m-load
11;1 147 pathaction!2_11;1,713
Consider method^1_12,517 517 m-deliver
12 274 pathaction!1_12,550
Consider method^4_4;0;0;0,265 265 m-drive-to-via
4;0;0;0 205 pathaction!4_4;0;0;0,574
Consider method^2_13;2,860 860 m-drive-to-via
13;2 25 pathaction!2_13;2,595
Consider method^5_14;2;0;0;0,188 188 m-drive-to
14;2;0;0;0 101 pathaction!5_14;2;0;0;0,595
Consider method^2_4;3,354 354 m-unload
4;3 78 pathaction!2_4;3,666
Consider method^2_0;2,929 929 m-drive-to-via
0;2 143 pathaction!2_0;2,610
Consider method^3_13;0;0,582 582 m-drive-to-via
13;0;0 161 pathaction!3_13;0;0,610
Consider method^3_5;0;0,454 454 m-drive-to-via
5;0;0 276 pathaction!3_5;0;0,576
Consider method^3_14;0;0,711 711 m-drive-to-via
14;0;0 103 pathaction!3_14;0;0,595
Consider method^2_3;1,218 218 m-load
3;1 122 pathaction!2_3;1,722
Consider method^4_0;0;0;0,16 16 m-drive-to-via
0;0;0;0 164 pathaction!4_0;0;0;0,604
Consider method^3_3;0;0,33 33 m-drive-to
3;0;0 251 pathaction!3_3;0;0,573
Consider method^4_13;0;0;0,116 116 m-drive-to-via
13;0;0;0 211 pathaction!4_13;0;0;0,605
Consider method^1_8,528 528 m-deliver
8 41 pathaction!1_8,552
Consider method^2_14;1,494 494 m-load
14;1 65 pathaction!2_14;1,699
Consider method^5_13;2;0;0;0,87 87 m-drive-to
13;2;0;0;0 86 pathaction!5_13;2;0;0;0,608
Consider method^2_8;2,770 770 m-drive-to-via
8;2 283 pathaction!2_8;2,587
Consider method^3_8;0;0,383 383 m-drive-to
8;0;0 223 pathaction!3_8;0;0,605
Consider method^1_2,319 319 m-deliver
2 142 pathaction!1_2,555
Consider method^5_1;0;0;0;0,788 788 m-drive-to
1;0;0;0;0 225 pathaction!5_1;0;0;0;0,587
Consider method^4_1;0;0;0,104 104 m-drive-to-via
1;0;0;0 30 pathaction!4_1;0;0;0,608
Consider method^1_5,330 330 m-deliver
5 107 pathaction!1_5,553
Consider method^2_5;0,918 918 m-drive-to-via
5;0 207 pathaction!2_5;0,570
Consider method^2_10;1,170 170 m-load
10;1 22 pathaction!2_10;1,757
Consider method^2_3;3,327 327 m-unload
3;3 42 pathaction!2_3;3,621
Consider method^3_9;2;0,2 2 m-drive-to-via
9;2;0 133 pathaction!3_9;2;0,601
Consider method^4_14;0;0;0,741 741 m-drive-to-via
14;0;0;0 166 pathaction!4_14;0;0;0,604
Consider method^2_6;2,98 98 m-drive-to-via
6;2 278 pathaction!2_6;2,603
Consider method^2_15;3,837 837 m-unload
15;3 270 pathaction!2_15;3,678
Consider method^2_12;3,321 321 m-unload
12;3 219 pathaction!2_12;3,668
Consider method^3_12;2;0,963 963 m-drive-to-via
12;2;0 293 pathaction!3_12;2;0,612
Consider method^2_0;0,805 805 m-drive-to-via
0;0 144 pathaction!2_0;0,567
Consider method^1_0,540 540 m-deliver
0 253 pathaction!1_0,543
Consider method^2_15;2,619 619 m-drive-to-via
15;2 135 pathaction!2_15;2,559
Consider method^0_,1012 1012 __top_1
 206 pathaction!0_,868
Consider method^4_14;2;0;0,741 741 m-drive-to-via
14;2;0;0 72 pathaction!4_14;2;0;0,604
Consider method^2_10;2,233 233 m-drive-to
10;2 23 pathaction!2_10;2,561
Consider method^4_12;2;0;0,104 104 m-drive-to-via
12;2;0;0 273 pathaction!4_12;2;0;0,608
Consider method^3_15;0;0,154 154 m-drive-to-via
15;0;0 97 pathaction!3_15;0;0,559
Consider method^3_14;2;0,83 83 m-drive-to-via
14;2;0 34 pathaction!3_14;2;0,590
Consider method^2_15;1,1007 1007 m-load
15;1 180 pathaction!2_15;1,784
Consider method^2_6;3,727 727 m-unload
6;3 303 pathaction!2_6;3,617
Consider method^1_9,501 501 m-deliver
9 60 pathaction!1_9,554
Consider method^2_2;1,329 329 m-load
2;1 210 pathaction!2_2;1,714
Consider method^2_0;3,876 876 m-unload
0;3 230 pathaction!2_0;3,672
Consider method^2_1;2,84 84 m-drive-to-via
1;2 46 pathaction!2_1;2,578
Consider method^5_4;0;0;0;0,839 839 m-drive-to
4;0;0;0;0 62 pathaction!5_4;0;0;0;0,600
Consider method^2_3;2,777 777 m-drive-to-via
3;2 85 pathaction!2_3;2,596
Consider method^1_7,520 520 m-deliver
7 124 pathaction!1_7,541
Consider method^5_11;2;0;0;0,826 826 m-drive-to
11;2;0;0;0 126 pathaction!5_11;2;0;0;0,604
Consider method^5_15;0;0;0;0,551 551 m-drive-to
15;0;0;0;0 10 pathaction!5_15;0;0;0;0,607
Consider method^1_10,347 347 m-deliver
10 3 pathaction!1_10,548
Consider method^2_7;0,243 243 m-drive-to
7;0 285 pathaction!2_7;0,592
Consider method^2_5;3,49 49 m-unload
5;3 197 pathaction!2_5;3,624
Consider method^2_1;1,402 402 m-load
1;1 136 pathaction!2_1;1,692
Consider method^1_3,209 209 m-deliver
3 272 pathaction!1_3,547
Consider method^5_0;2;0;0;0,883 883 m-drive-to
0;2;0;0;0 154 pathaction!5_0;2;0;0;0,612
Consider method^4_13;2;0;0,770 770 m-drive-to-via
13;2;0;0 204 pathaction!4_13;2;0;0,587
Consider method^3_11;2;0,97 97 m-drive-to-via
11;2;0 50 pathaction!3_11;2;0,609
Consider method^2_4;2,11 11 m-drive-to-via
4;2 116 pathaction!2_4;2,575
Consider method^3_12;0;0,97 97 m-drive-to-via
12;0;0 146 pathaction!3_12;0;0,609
Consider method^4_0;2;0;0,463 463 m-drive-to-via
0;2;0;0 26 pathaction!4_0;2;0;0,556
Consider method^2_9;3,171 171 m-unload
9;3 189 pathaction!2_9;3,662
Consider method^4_11;0;0;0,547 547 m-drive-to-via
11;0;0;0 9 pathaction!4_11;0;0;0,558
Consider method^2_7;3,595 595 m-unload
7;3 289 pathaction!2_7;3,635
Consider method^2_12;2,999 999 m-drive-to-via
12;2 113 pathaction!2_12;2,605
Consider method^3_1;0;0,770 770 m-drive-to-via
1;0;0 13 pathaction!3_1;0;0,587
Consider method^1_13,213 213 m-deliver
13 239 pathaction!1_13,545
Consider method^2_2;0,13 13 m-drive-to-via
2;0 52 pathaction!2_2;0,573
Consider method^3_4;0;0,731 731 m-drive-to-via
4;0;0 131 pathaction!3_4;0;0,615
Consider method^2_15;0,955 955 m-drive-to-via
15;0 195 pathaction!2_15;0,613
Consider method^4_9;2;0;0,561 561 m-drive-to
9;2;0;0 27 pathaction!4_9;2;0;0,590
Consider method^3_9;0;0,827 827 m-drive-to-via
9;0;0 243 pathaction!3_9;0;0,610
Consider method^2_11;0,5 5 m-drive-to-via
11;0 275 pathaction!2_11;0,577
Consider method^2_12;0,530 530 m-drive-to-via
12;0 284 pathaction!2_12;0,610
Consider method^2_0;1,899 899 m-load
0;1 287 pathaction!2_0;1,710
Consider method^2_13;1,395 395 m-load
13;1 8 pathaction!2_13;1,716
Consider method^5_9;0;0;0;0,314 314 m-drive-to
9;0;0;0;0 217 pathaction!5_9;0;0;0;0,610
Consider method^2_12;1,905 905 m-load
12;1 73 pathaction!2_12;1,754
Consider method^2_7;1,304 304 m-load
7;1 171 pathaction!2_7;1,684
Consider method^4_9;0;0;0,860 860 m-drive-to-via
9;0;0;0 231 pathaction!4_9;0;0;0,595
Consider method^2_8;0,893 893 m-drive-to-via
8;0 282 pathaction!2_8;0,612
Consider method^2_2;2,0 0 m-drive-to-via
2;2 155 pathaction!2_2;2,591
Consider method^3_13;2;0,929 929 m-drive-to-via
13;2;0 6 pathaction!3_13;2;0,610
Consider method^5_15;2;0;0;0,273 273 m-i-am-there
15;2;0;0;0 123 pathaction!5_15;2;0;0;0,613
Consider method^3_0;2;0,279 279 m-drive-to-via
0;2;0 44 pathaction!3_0;2;0,587
Consider method^2_11;3,184 184 m-unload
11;3 227 pathaction!2_11;3,641
Consider method^3_4;2;0,723 723 m-drive-to-via
4;2;0 240 pathaction!3_4;2;0,583
Consider method^2_8;3,586 586 m-unload
8;3 53 pathaction!2_8;3,642
Consider method^3_3;2;0,842 842 m-drive-to-via
3;2;0 260 pathaction!3_3;2;0,591
Consider method^3_8;2;0,812 812 m-drive-to-via
8;2;0 152 pathaction!3_8;2;0,608
Consider method^3_1;2;0,433 433 m-drive-to-via
1;2;0 247 pathaction!3_1;2;0,605
Consider method^3_15;2;0,955 955 m-drive-to-via
15;2;0 137 pathaction!3_15;2;0,613


CHECKING primitive solution of length 134 ...
true 45 drive[truck-2,city-loc-7,city-loc-1;]
true 202 drive[truck-2,city-loc-1,city-loc-4;]
true 271 drive[truck-2,city-loc-4,city-loc-6;]
true 160 drive[truck-2,city-loc-6,city-loc-8;]
true 93 pick-up[truck-2,city-loc-8,package-0,capacity-1,capacity-2;]
true 178 drive[truck-2,city-loc-8,city-loc-14;]
true 308 drive[truck-2,city-loc-14,city-loc-9;]
true 7 drive[truck-2,city-loc-9,city-loc-5;]
true 2 drive[truck-2,city-loc-5,city-loc-3;]
true 114 drop[truck-2,city-loc-3,package-0,capacity-1,capacity-2;]
true 153 drive[truck-2,city-loc-3,city-loc-5;]
true 184 drive[truck-2,city-loc-5,city-loc-12;]
true 181 drive[truck-2,city-loc-12,city-loc-5;]
true 159 drive[truck-2,city-loc-5,city-loc-9;]
true 174 pick-up[truck-2,city-loc-9,package-1,capacity-1,capacity-2;]
true 209 drive[truck-2,city-loc-9,city-loc-5;]
true 158 drive[truck-2,city-loc-5,city-loc-3;]
true 183 drive[truck-2,city-loc-3,city-loc-11;]
true 100 drive[truck-2,city-loc-11,city-loc-0;]
true 43 drop[truck-2,city-loc-0,package-1,capacity-1,capacity-2;]
true 156 drive[truck-0,city-loc-0,city-loc-11;]
true 190 drive[truck-0,city-loc-11,city-loc-14;]
true 56 pick-up[truck-0,city-loc-14,package-2,capacity-1,capacity-2;]
true 31 drive[truck-0,city-loc-14,city-loc-11;]
true 106 drive[truck-0,city-loc-11,city-loc-0;]
true 48 drive[truck-0,city-loc-0,city-loc-11;]
true 193 drop[truck-0,city-loc-11,package-2,capacity-1,capacity-2;]
true 266 drive[truck-0,city-loc-11,city-loc-14;]
true 12 drive[truck-0,city-loc-14,city-loc-9;]
true 118 pick-up[truck-0,city-loc-9,package-3,capacity-1,capacity-2;]
true 54 drive[truck-0,city-loc-9,city-loc-14;]
true 192 drive[truck-0,city-loc-14,city-loc-11;]
true 215 drive[truck-0,city-loc-11,city-loc-0;]
true 95 drop[truck-0,city-loc-0,package-3,capacity-1,capacity-2;]
true 57 drive[truck-1,city-loc-12,city-loc-14;]
true 309 drive[truck-1,city-loc-14,city-loc-8;]
true 134 drive[truck-1,city-loc-8,city-loc-6;]
true 92 drive[truck-1,city-loc-6,city-loc-10;]
true 198 pick-up[truck-1,city-loc-10,package-4,capacity-1,capacity-2;]
true 179 drive[truck-1,city-loc-10,city-loc-1;]
true 295 drive[truck-1,city-loc-1,city-loc-7;]
true 203 drive[truck-1,city-loc-7,city-loc-1;]
true 168 drive[truck-1,city-loc-1,city-loc-4;]
true 200 drop[truck-1,city-loc-4,package-4,capacity-1,capacity-2;]
true 28 noop[truck-3,city-loc-13;]
true 290 drive[truck-3,city-loc-13,city-loc-4;]
true 115 drive[truck-3,city-loc-4,city-loc-1;]
true 87 pick-up[truck-3,city-loc-1,package-5,capacity-1,capacity-2;]
true 277 drive[truck-3,city-loc-1,city-loc-7;]
true 70 drive[truck-3,city-loc-7,city-loc-3;]
true 301 drive[truck-3,city-loc-3,city-loc-11;]
true 37 drive[truck-3,city-loc-11,city-loc-0;]
true 51 drop[truck-3,city-loc-0,package-5,capacity-1,capacity-2;]
true 213 drive[truck-1,city-loc-4,city-loc-2;]
true 157 pick-up[truck-1,city-loc-2,package-6,capacity-1,capacity-2;]
true 68 drive[truck-1,city-loc-2,city-loc-3;]
true 19 drive[truck-1,city-loc-3,city-loc-5;]
true 121 drop[truck-1,city-loc-5,package-6,capacity-1,capacity-2;]
true 305 drive[truck-1,city-loc-5,city-loc-12;]
true 99 pick-up[truck-1,city-loc-12,package-7,capacity-1,capacity-2;]
true 299 drive[truck-1,city-loc-12,city-loc-5;]
true 229 drive[truck-1,city-loc-5,city-loc-9;]
true 307 drop[truck-1,city-loc-9,package-7,capacity-1,capacity-2;]
true 170 drive[truck-2,city-loc-0,city-loc-11;]
true 237 drive[truck-2,city-loc-11,city-loc-14;]
true 236 pick-up[truck-2,city-loc-14,package-8,capacity-1,capacity-2;]
true 188 noop[truck-2,city-loc-14;]
true 191 drive[truck-2,city-loc-14,city-loc-12;]
true 81 drive[truck-2,city-loc-12,city-loc-5;]
true 58 drop[truck-2,city-loc-5,package-8,capacity-1,capacity-2;]
true 75 drive[truck-2,city-loc-5,city-loc-3;]
true 84 drive[truck-2,city-loc-3,city-loc-2;]
true 29 drive[truck-2,city-loc-2,city-loc-3;]
true 255 drive[truck-2,city-loc-3,city-loc-7;]
true 91 pick-up[truck-2,city-loc-7,package-9,capacity-1,capacity-2;]
true 38 drive[truck-2,city-loc-7,city-loc-1;]
true 1 drive[truck-2,city-loc-1,city-loc-10;]
true 306 drive[truck-2,city-loc-10,city-loc-6;]
true 263 drop[truck-2,city-loc-6,package-9,capacity-1,capacity-2;]
true 109 drive[truck-3,city-loc-0,city-loc-11;]
true 108 drive[truck-3,city-loc-11,city-loc-3;]
true 74 pick-up[truck-3,city-loc-3,package-10,capacity-1,capacity-2;]
true 163 drive[truck-3,city-loc-3,city-loc-5;]
true 24 drop[truck-3,city-loc-5,package-10,capacity-1,capacity-2;]
true 4 drive[truck-2,city-loc-6,city-loc-10;]
true 280 drive[truck-2,city-loc-10,city-loc-6;]
true 199 drive[truck-2,city-loc-6,city-loc-4;]
true 233 drive[truck-2,city-loc-4,city-loc-13;]
true 304 pick-up[truck-2,city-loc-13,package-11,capacity-1,capacity-2;]
true 264 drive[truck-2,city-loc-13,city-loc-4;]
true 201 drive[truck-2,city-loc-4,city-loc-1;]
true 226 drive[truck-2,city-loc-1,city-loc-7;]
true 132 drive[truck-2,city-loc-7,city-loc-3;]
true 259 drop[truck-2,city-loc-3,package-11,capacity-1,capacity-2;]
true 242 drive[truck-2,city-loc-3,city-loc-7;]
true 145 drive[truck-2,city-loc-7,city-loc-1;]
true 0 drive[truck-2,city-loc-1,city-loc-7;]
true 245 drive[truck-2,city-loc-7,city-loc-3;]
true 249 pick-up[truck-2,city-loc-3,package-12,capacity-1,capacity-2;]
true 162 drive[truck-2,city-loc-3,city-loc-5;]
true 298 drive[truck-2,city-loc-5,city-loc-12;]
true 117 drive[truck-2,city-loc-12,city-loc-14;]
true 55 drive[truck-2,city-loc-14,city-loc-11;]
true 262 drop[truck-2,city-loc-11,package-12,capacity-1,capacity-2;]
true 288 drive[truck-2,city-loc-11,city-loc-0;]
true 221 drive[truck-2,city-loc-0,city-loc-11;]
true 49 drive[truck-2,city-loc-11,city-loc-3;]
true 36 drive[truck-2,city-loc-3,city-loc-5;]
true 258 pick-up[truck-2,city-loc-5,package-13,capacity-1,capacity-2;]
true 82 drive[truck-2,city-loc-5,city-loc-12;]
true 138 drive[truck-2,city-loc-12,city-loc-5;]
true 194 drive[truck-2,city-loc-5,city-loc-3;]
true 77 drive[truck-2,city-loc-3,city-loc-2;]
true 32 drop[truck-2,city-loc-2,package-13,capacity-1,capacity-2;]
true 238 noop[truck-2,city-loc-2;]
true 218 drive[truck-2,city-loc-2,city-loc-4;]
true 172 drive[truck-2,city-loc-4,city-loc-2;]
true 125 drive[truck-2,city-loc-2,city-loc-3;]
true 102 pick-up[truck-2,city-loc-3,package-14,capacity-1,capacity-2;]
true 35 drive[truck-2,city-loc-3,city-loc-2;]
true 120 drive[truck-2,city-loc-2,city-loc-4;]
true 89 drive[truck-2,city-loc-4,city-loc-1;]
true 15 drive[truck-2,city-loc-1,city-loc-10;]
true 149 drop[truck-2,city-loc-10,package-14,capacity-1,capacity-2;]
true 71 drive[truck-3,city-loc-5,city-loc-12;]
true 214 drive[truck-3,city-loc-12,city-loc-14;]
true 267 drive[truck-3,city-loc-14,city-loc-11;]
true 111 drive[truck-3,city-loc-11,city-loc-0;]
true 150 pick-up[truck-3,city-loc-0,package-15,capacity-1,capacity-2;]
true 98 noop[truck-3,city-loc-0;]
true 76 drive[truck-3,city-loc-0,city-loc-11;]
true 228 drive[truck-3,city-loc-11,city-loc-0;]
true 250 drive[truck-3,city-loc-0,city-loc-11;]
true 252 drop[truck-3,city-loc-11,package-15,capacity-1,capacity-2;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 796
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 1592
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 2388
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 3184
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 3980
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 4776
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 5572
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 6368
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 7164
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 7960
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 8756
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 9552
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 10348
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 11144
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 11940
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 12736
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 13532
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 14328
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 15124
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 15920
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 16716
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 17512
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 18308
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 19104
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 19900
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 20696
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 21492
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 22288
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 23084
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 23880
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 24676
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 25472
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 26268
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 27064
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 27860
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 28656
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 29452
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 30248
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 31044
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 31840
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 32636
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 33432
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 34228
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 35024
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 35820
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 36616
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 37412
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 38208
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 39004
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 39800
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 40596
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 41392
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 42188
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 42984
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 43780
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 44576
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 45372
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 46168
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 46964
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 47760
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 48556
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 49352
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 50148
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 50944
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 65
ICAPS: 51740
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 134
  lower bound = 64

Running SAT search with cost bound = 99
==================================================
  upper bound = 134
  lower bound = 64
LEN 99
ICAPS: 78804
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854764190
DP max: 40
Taking minimum: 40
Generating initial PDT ... done
initial PDT has 2220 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 2220 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Still waiting ... running for 76775 will abort at 9223372036854764190

RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 227.726 MEMPEAK_KBS 8022636.544
