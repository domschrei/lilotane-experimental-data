PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/childsnack/domain.hddl instances/childsnack/p08.hddl"


Planner Configuration
=====================
Domain: instances/childsnack/domain.hddl
Problem: instances/childsnack/p08.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p08.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 13
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 68
Compiling negative preconditions ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 68
Compiling split parameters ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 68
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 68
Grounded planning graph ... done in 1024ms.
	Number of Grounded Actions 21301
	Number of Grounded Literals 224
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 68
Two Way TDG ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 68
Grounding ... done.
	number of abstract tasks = 14
	number of tasks = 19127
	number of decomposition methods = 48678
	number of predicates = 252
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 14
	number of tasks = 19127
	number of decomposition methods = 48678
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1845ms.
	Number of Grounded Actions 19113
	Number of Grounded Literals 168
	number of abstract tasks = 14
	number of tasks = 19127
	number of decomposition methods = 48678
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 14
	number of tasks = 19127
	number of decomposition methods = 48678
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1138ms.
	Number of Grounded Actions 19113
	Number of Grounded Literals 168
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Tasks 19113 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854735609ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854734090
done
initial PDT has 84 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 84 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 42084
Size 42083 at 0/19113
Size 31173 at 500/19113
Size 31173 at 1000/19113
Size 31173 at 1500/19113
Size 24338 at 2000/19113
Size 24338 at 2500/19113
Size 24338 at 3000/19113
Size 24338 at 3500/19113
Size 24338 at 4000/19113
Size 24338 at 4500/19113
Size 24338 at 5000/19113
Size 24338 at 5500/19113
Size 24338 at 6000/19113
Size 24338 at 6500/19113
Size 24338 at 7000/19113
Size 24338 at 7500/19113
Size 24338 at 8000/19113
Size 24338 at 8500/19113
Size 24338 at 9000/19113
Size 24338 at 9500/19113
Size 24338 at 10000/19113
Size 24338 at 10500/19113
Size 24338 at 11000/19113
Size 24338 at 11500/19113
Size 24338 at 12000/19113
Size 24338 at 12500/19113
Size 24338 at 13000/19113
Size 24338 at 13500/19113
Size 24338 at 14000/19113
Size 24338 at 14500/19113
Size 24338 at 15000/19113
Size 24338 at 15500/19113
Size 24259 at 16000/19113
Size 20547 at 16500/19113
Size 20297 at 17000/19113
Size 20297 at 17500/19113
Size 20297 at 18000/19113
Size 20297 at 18500/19113
Size 20297 at 19000/19113
Size 20297
Size 20038 at 0/19113
Size 4071 at 500/19113
Size 4071 at 1000/19113
Size 4071 at 1500/19113
Size 4071 at 2000/19113
Size 4071 at 2500/19113
Size 4071 at 3000/19113
Size 4071 at 3500/19113
Size 4071 at 4000/19113
Size 4071 at 4500/19113
Size 4071 at 5000/19113
Size 4071 at 5500/19113
Size 4071 at 6000/19113
Size 4071 at 6500/19113
Size 4071 at 7000/19113
Size 4071 at 7500/19113
Size 4071 at 8000/19113
Size 4071 at 8500/19113
Size 4071 at 9000/19113
Size 4071 at 9500/19113
Size 4071 at 10000/19113
Size 4071 at 10500/19113
Size 4071 at 11000/19113
Size 4071 at 11500/19113
Size 4071 at 12000/19113
Size 4071 at 12500/19113
Size 4071 at 13000/19113
Size 4071 at 13500/19113
Size 4071 at 14000/19113
Size 4071 at 14500/19113
Size 4071 at 15000/19113
Size 4071 at 15500/19113
Size 2741 at 16000/19113
Size 227 at 16500/19113
Size 227 at 17000/19113
Size 227 at 17500/19113
Size 227 at 18000/19113
Size 227 at 18500/19113
Size 227 at 19000/19113
Size 227
Size 227 at 0/19113
Size 227 at 500/19113
Size 227 at 1000/19113
Size 227 at 1500/19113
Size 227 at 2000/19113
Size 227 at 2500/19113
Size 227 at 3000/19113
Size 227 at 3500/19113
Size 227 at 4000/19113
Size 227 at 4500/19113
Size 227 at 5000/19113
Size 227 at 5500/19113
Size 227 at 6000/19113
Size 227 at 6500/19113
Size 227 at 7000/19113
Size 227 at 7500/19113
Size 227 at 8000/19113
Size 227 at 8500/19113
Size 227 at 9000/19113
Size 227 at 9500/19113
Size 227 at 10000/19113
Size 227 at 10500/19113
Size 227 at 11000/19113
Size 227 at 11500/19113
Size 227 at 12000/19113
Size 227 at 12500/19113
Size 227 at 13000/19113
Size 227 at 13500/19113
Size 227 at 14000/19113
Size 227 at 14500/19113
Size 227 at 15000/19113
Size 227 at 15500/19113
Size 227 at 16000/19113
Size 227 at 16500/19113
Size 227 at 17000/19113
Size 227 at 17500/19113
Size 227 at 18000/19113
Size 227 at 18500/19113
Size 227 at 19000/19113
Size 227
Invariant time: 2.247
Number of invariants: 227
Invariant Clauses 19295
NUMBER OF CLAUSES 858671
NUMBER OF STATE CLAUSES 186805
NUMBER OF DECOMPOSITION CLAUSES 671866
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 21.76% 78.24% 0.0% 
NUMBER OF PATHS 84
Starting cryptominisat5.5
Setting starttime of solver to 1604504205408
Command exited with non-zero status 10
0.60 0.04

Time command gave the following runtime for the solver: 640
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_6,3736 3736 m1_serve
6 13 pathaction!1_6,19116
Consider method^1_11,39215 39215 m0_serve
11 80 pathaction!1_11,19125
Consider method^1_7,19594 19594 m1_serve
7 66 pathaction!1_7,19113
Consider method^1_9,18743 18743 m1_serve
9 49 pathaction!1_9,19120
Consider method^1_1,19054 19054 m1_serve
1 60 pathaction!1_1,19119
Consider method^1_3,39330 39330 m1_serve
3 90 pathaction!1_3,19115
Consider method^1_2,48151 48151 m0_serve
2 77 pathaction!1_2,19122
Consider method^1_12,39467 39467 m0_serve
12 23 pathaction!1_12,19121
Consider method^1_10,27701 27701 m1_serve
10 76 pathaction!1_10,19126
Consider method^1_8,39718 39718 m1_serve
8 58 pathaction!1_8,19123
Consider method^1_0,7760 7760 m0_serve
0 73 pathaction!1_0,19114
Consider method^1_13,33912 33912 m0_serve
13 28 pathaction!1_13,19118
Consider method^0_,48678 48678 __top_1
 4 pathaction!0_,19127
Consider method^1_5,26002 26002 m1_serve
5 70 pathaction!1_5,19124
Consider method^1_4,40989 40989 m1_serve
4 78 pathaction!1_4,19117


CHECKING primitive solution of length 84 ...
true 25 __method_precondition_m0_serve_0_precondition[child1,sandw16,table3,bread11,content10;]
true 64 make_sandwich_no_gluten[sandw16,bread11,content10;]
true 63 put_on_tray[sandw16,tray2;kitchen]
true 56 move_tray[tray2,kitchen,table3;]
true 44 serve_sandwich_no_gluten[sandw16,child1,tray2,table3;]
true 20 move_tray[tray2,table3,kitchen;]
true 36 __method_precondition_m1_serve_1_precondition[sandw19,table2,content8,bread7,child2;]
true 55 make_sandwich[sandw19,bread7,content8;]
true 84 put_on_tray[sandw19,tray2;kitchen]
true 15 move_tray[tray2,kitchen,table2;]
true 83 serve_sandwich[sandw19,child2,tray2,table2;]
true 65 move_tray[tray2,table2,kitchen;]
true 1 __method_precondition_m0_serve_0_precondition[child3,sandw7,table2,bread9,content3;]
true 11 make_sandwich_no_gluten[sandw7,bread9,content3;]
true 12 put_on_tray[sandw7,tray1;kitchen]
true 72 move_tray[tray1,kitchen,table2;]
true 18 serve_sandwich_no_gluten[sandw7,child3,tray1,table2;]
true 6 move_tray[tray1,table2,kitchen;]
true 7 __method_precondition_m1_serve_1_precondition[sandw17,table1,content2,bread1,child4;]
true 59 make_sandwich[sandw17,bread1,content2;]
true 62 put_on_tray[sandw17,tray1;kitchen]
true 3 move_tray[tray1,kitchen,table1;]
true 30 serve_sandwich[sandw17,child4,tray1,table1;]
true 46 move_tray[tray1,table1,kitchen;]
true 53 __method_precondition_m1_serve_1_precondition[sandw9,table2,content11,bread4,child5;]
true 14 make_sandwich[sandw9,bread4,content11;]
true 41 put_on_tray[sandw9,tray1;kitchen]
true 5 move_tray[tray1,kitchen,table2;]
true 91 serve_sandwich[sandw9,child5,tray1,table2;]
true 24 move_tray[tray1,table2,kitchen;]
true 96 __method_precondition_m1_serve_1_precondition[sandw18,table2,content6,bread2,child6;]
true 39 make_sandwich[sandw18,bread2,content6;]
true 54 put_on_tray[sandw18,tray3;kitchen]
true 51 move_tray[tray3,kitchen,table2;]
true 74 serve_sandwich[sandw18,child6,tray3,table2;]
true 93 move_tray[tray3,table2,kitchen;]
true 43 __method_precondition_m1_serve_1_precondition[sandw14,table1,content9,bread13,child7;]
true 17 make_sandwich[sandw14,bread13,content9;]
true 42 put_on_tray[sandw14,tray2;kitchen]
true 38 move_tray[tray2,kitchen,table1;]
true 35 serve_sandwich[sandw14,child7,tray2,table1;]
true 50 move_tray[tray2,table1,kitchen;]
true 48 __method_precondition_m1_serve_1_precondition[sandw13,table2,content14,bread6,child8;]
true 68 make_sandwich[sandw13,bread6,content14;]
true 61 put_on_tray[sandw13,tray3;kitchen]
true 27 move_tray[tray3,kitchen,table2;]
true 32 serve_sandwich[sandw13,child8,tray3,table2;]
true 33 move_tray[tray3,table2,kitchen;]
true 75 __method_precondition_m1_serve_1_precondition[sandw8,table1,content5,bread10,child9;]
true 0 make_sandwich[sandw8,bread10,content5;]
true 37 put_on_tray[sandw8,tray2;kitchen]
true 40 move_tray[tray2,kitchen,table1;]
true 69 serve_sandwich[sandw8,child9,tray2,table1;]
true 67 move_tray[tray2,table1,kitchen;]
true 16 __method_precondition_m1_serve_1_precondition[sandw15,table1,content12,bread8,child10;]
true 10 make_sandwich[sandw15,bread8,content12;]
true 34 put_on_tray[sandw15,tray2;kitchen]
true 21 move_tray[tray2,kitchen,table1;]
true 88 serve_sandwich[sandw15,child10,tray2,table1;]
true 29 move_tray[tray2,table1,kitchen;]
true 19 __method_precondition_m1_serve_1_precondition[sandw2,table3,content1,bread14,child11;]
true 82 make_sandwich[sandw2,bread14,content1;]
true 81 put_on_tray[sandw2,tray1;kitchen]
true 8 move_tray[tray1,kitchen,table3;]
true 79 serve_sandwich[sandw2,child11,tray1,table3;]
true 57 move_tray[tray1,table3,kitchen;]
true 31 __method_precondition_m0_serve_0_precondition[child12,sandw6,table3,bread3,content13;]
true 98 make_sandwich_no_gluten[sandw6,bread3,content13;]
true 92 put_on_tray[sandw6,tray3;kitchen]
true 87 move_tray[tray3,kitchen,table3;]
true 71 serve_sandwich_no_gluten[sandw6,child12,tray3,table3;]
true 95 move_tray[tray3,table3,kitchen;]
true 52 __method_precondition_m0_serve_0_precondition[child13,sandw1,table2,bread5,content4;]
true 9 make_sandwich_no_gluten[sandw1,bread5,content4;]
true 85 put_on_tray[sandw1,tray3;kitchen]
true 94 move_tray[tray3,kitchen,table2;]
true 97 serve_sandwich_no_gluten[sandw1,child13,tray3,table2;]
true 45 move_tray[tray3,table2,kitchen;]
true 22 __method_precondition_m0_serve_0_precondition[child14,sandw5,table3,bread12,content7;]
true 86 make_sandwich_no_gluten[sandw5,bread12,content7;]
true 2 put_on_tray[sandw5,tray3;kitchen]
true 89 move_tray[tray3,kitchen,table3;]
true 26 serve_sandwich_no_gluten[sandw5,child14,tray3,table3;]
true 47 move_tray[tray3,table3,kitchen;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 32
TSTG: 2
Method: 1
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 64
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 96
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 128
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 160
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 192
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 224
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 256
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 288
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 320
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 352
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 384
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 416
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 448
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 480
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 512
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 544
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 576
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 608
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 640
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 672
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 704
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 736
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 768
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 800
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 832
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 864
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 896
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 928
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 960
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 992
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 1024
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 1056
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 1088
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 1120
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 1152
TSTG: 2
Method: 8

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.141 MEMPEAK_KBS 2348880.896
