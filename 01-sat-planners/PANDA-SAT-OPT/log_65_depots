PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p05.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p05.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p05.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 21
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 21
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 21
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 21
Grounded planning graph ... done in 415ms.
	Number of Grounded Actions 519
	Number of Grounded Literals 168
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 21
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 21
Grounding ... done.
	number of abstract tasks = 232
	number of tasks = 681
	number of decomposition methods = 573
	number of predicates = 174
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 232
	number of tasks = 681
	number of decomposition methods = 573
	number of predicates = 158
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 89ms.
	Number of Grounded Actions 449
	Number of Grounded Literals 158
	number of abstract tasks = 232
	number of tasks = 681
	number of decomposition methods = 573
	number of predicates = 158
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 232
	number of tasks = 681
	number of decomposition methods = 573
	number of predicates = 158
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 233
	number of tasks = 682
	number of decomposition methods = 574
	number of predicates = 158
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 233
	number of tasks = 682
	number of decomposition methods = 574
	number of predicates = 158
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 63ms.
	Number of Grounded Actions 449
	Number of Grounded Literals 158
	number of abstract tasks = 233
	number of tasks = 682
	number of decomposition methods = 574
	number of predicates = 158
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 233
	number of tasks = 682
	number of decomposition methods = 574
	number of predicates = 158
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 233
	number of tasks = 682
	number of decomposition methods = 574
	number of predicates = 158
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 233
	number of tasks = 682
	number of decomposition methods = 574
	number of predicates = 158
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 233
	number of tasks = 682
	number of decomposition methods = 574
	number of predicates = 158
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 279
	number of epsilon methods = 0
	number of primitive tasks = 449
	number of constants = 0
Tasks 449 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772410ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854772318
done
initial PDT has 30 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 20 leafs
SHOP LEAFS 20
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 1ms for 0 clauses
Computing invariants [Rintanen]
candidates build 37209
Size 37209 at 0/449
Size 28259
Size 28259 at 0/449
Size 17257
Size 17257 at 0/449
Size 8309
Size 8309 at 0/449
Size 4501
Size 4501 at 0/449
Size 3028
Size 3028 at 0/449
Size 2513
Size 2513 at 0/449
Size 2316
Size 2316 at 0/449
Size 2227
Size 2227 at 0/449
Size 2194
Size 2194 at 0/449
Size 2174
Size 2174 at 0/449
Size 2166
Size 2166 at 0/449
Size 2166
Invariant time: 0.548
Number of invariants: 2166
Invariant Clauses 45486
NUMBER OF CLAUSES 52140
NUMBER OF STATE CLAUSES 51974
NUMBER OF DECOMPOSITION CLAUSES 166
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.68% 0.32% 0.0% 
NUMBER OF PATHS 20
Starting cryptominisat5.5
Setting starttime of solver to 1604507813699
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 148 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854770726
done
PDT has 80 leafs
SHOP LEAFS 50
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 175446
NUMBER OF CLAUSES 208140
NUMBER OF STATE CLAUSES 202639
NUMBER OF DECOMPOSITION CLAUSES 5501
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.36% 2.64% 0.0% 
NUMBER OF PATHS 80
Starting cryptominisat5.5
Setting starttime of solver to 1604507814691
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 311 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854769760
done
PDT has 195 leafs
SHOP LEAFS 107
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 424536
NUMBER OF CLAUSES 512145
NUMBER OF STATE CLAUSES 491371
NUMBER OF DECOMPOSITION CLAUSES 20774
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.94% 4.0600000000000005% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604507815878
Command exited with non-zero status 20
0.11 0.00

Time command gave the following runtime for the solver: 110
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854768444
done
initial PDT has 507 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 435 leafs
SHOP LEAFS 233
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 944376
NUMBER OF CLAUSES 1141752
NUMBER OF STATE CLAUSES 1093726
NUMBER OF DECOMPOSITION CLAUSES 48026
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.79% 4.21% 0.0% 
NUMBER OF PATHS 435
Starting cryptominisat5.5
Setting starttime of solver to 1604507817890
Command exited with non-zero status 20
0.27 0.00

Time command gave the following runtime for the solver: 270
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 685 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854766263
done
PDT has 615 leafs
SHOP LEAFS 305
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1334256
NUMBER OF CLAUSES 1613128
NUMBER OF STATE CLAUSES 1546550
NUMBER OF DECOMPOSITION CLAUSES 66578
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.87% 4.13% 0.0% 
NUMBER OF PATHS 615
Starting cryptominisat5.5
Setting starttime of solver to 1604507820708
Command exited with non-zero status 20
0.45 0.03

Time command gave the following runtime for the solver: 480
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 860 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854763228
done
PDT has 790 leafs
SHOP LEAFS 375
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1713306
NUMBER OF CLAUSES 2073043
NUMBER OF STATE CLAUSES 1987138
NUMBER OF DECOMPOSITION CLAUSES 85905
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.86% 4.14% 0.0% 
NUMBER OF PATHS 790
Starting cryptominisat5.5
Setting starttime of solver to 1604507824330
Command exited with non-zero status 10
0.64 0.05

Time command gave the following runtime for the solver: 690
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_9,190 190 m2_do_put_on
9 5 pathaction!1_9,651
Consider method^4_0;4;1;1,348 348 m5_do_clear
0;4;1;1 115 pathaction!4_0;4;1;1,496
Consider method^2_0;4,329 329 m11_do_unload_truck
0;4 125 pathaction!2_0;4,159
Consider method^1_1,457 457 m2_do_put_on
1 211 pathaction!1_1,649
Consider method^2_8;2,135 135 m4_do_clear
8;2 120 pathaction!2_8;2,484
Consider method^2_3;1,12 12 m7_do_get_truck
3;1 110 pathaction!2_3;1,201
Consider method^5_0;4;1;1;1,318 318 m5_do_clear
0;4;1;1;1 112 pathaction!5_0;4;1;1;1,493
Consider method^6_0;4;1;1;1;3,12 12 m7_do_get_truck
0;4;1;1;1;3 141 pathaction!6_0;4;1;1;1;3,201
Consider method^5_2;2;1;1;1,392 392 m4_do_clear
2;2;1;1;1 9 pathaction!5_2;2;1;1;1,490
Consider method^3_1;2;1,81 81 m5_do_clear
1;2;1 79 pathaction!3_1;2;1,492
Consider method^2_5;2,373 373 m4_do_clear
5;2 206 pathaction!2_5;2,486
Consider method^5_1;2;1;1;3,470 470 m6_do_get_truck
1;2;1;1;3 45 pathaction!5_1;2;1;1;3,196
Consider method^4_0;4;1;3,435 435 m6_do_get_truck
0;4;1;3 92 pathaction!4_0;4;1;3,201
Consider method^1_2,452 452 m2_do_put_on
2 85 pathaction!1_2,652
Consider method^1_3,63 63 m2_do_put_on
3 166 pathaction!1_3,648
Consider method^2_8;1,495 495 m7_do_get_truck
8;1 150 pathaction!2_8;1,199
Consider method^1_5,110 110 m2_do_put_on
5 103 pathaction!1_5,653
Consider method^2_2;2,306 306 m5_do_clear
2;2 21 pathaction!2_2;2,498
Consider method^2_2;1,182 182 m7_do_get_truck
2;1 42 pathaction!2_2;1,199
Consider method^5_2;2;1;1;3,152 152 m6_do_get_truck
2;2;1;1;3 109 pathaction!5_2;2;1;1;3,199
Consider method^0_,573 573 __top_1
 93 pathaction!0_,681
Consider method^3_2;2;3,152 152 m6_do_get_truck
2;2;3 55 pathaction!3_2;2;3,199
Consider method^6_0;4;1;1;1;1,373 373 m4_do_clear
0;4;1;1;1;1 143 pathaction!6_0;4;1;1;1;1,486
Consider method^4_2;2;1;1,477 477 m5_do_clear
2;2;1;1 117 pathaction!4_2;2;1;1,489
Consider method^4_0;2;4;1,249 249 m7_do_get_truck
0;2;4;1 91 pathaction!4_0;2;4;1,200
Consider method^3_1;2;3,470 470 m6_do_get_truck
1;2;3 213 pathaction!3_1;2;3,196
Consider method^2_9;1,183 183 m7_do_get_truck
9;1 23 pathaction!2_9;1,196
Consider method^2_7;1,435 435 m6_do_get_truck
7;1 167 pathaction!2_7;1,201
Consider method^2_1;1,539 539 m7_do_get_truck
1;1 43 pathaction!2_1;1,196
Consider method^2_4;1,435 435 m6_do_get_truck
4;1 58 pathaction!2_4;1,201
Consider method^4_0;2;4;2,541 541 m4_do_clear
0;2;4;2 49 pathaction!4_0;2;4;2,488
Consider method^1_0,473 473 m3_do_put_on
0 139 pathaction!1_0,645
Consider method^3_2;2;1,285 285 m5_do_clear
2;2;1 82 pathaction!3_2;2;1,485
Consider method^3_0;2;4,424 424 m10_do_load_truck
0;2;4 205 pathaction!3_0;2;4,301
Consider method^1_8,451 451 m2_do_put_on
8 195 pathaction!1_8,644
Consider method^2_0;2,437 437 _m3_do_put_on_2
0;2 73 pathaction!2_0;2,607
Consider method^1_4,7 7 m2_do_put_on
4 163 pathaction!1_4,646
Consider method^2_7;2,511 511 m4_do_clear
7;2 83 pathaction!2_7;2,508
Consider method^2_3;2,118 118 m4_do_clear
3;2 36 pathaction!2_3;2,491
Consider method^2_4;2,322 322 m4_do_clear
4;2 47 pathaction!2_4;2,507
Consider method^4_1;2;1;1,187 187 m5_do_clear
1;2;1;1 217 pathaction!4_1;2;1;1,495
Consider method^5_1;2;1;1;1,349 349 m4_do_clear
1;2;1;1;1 155 pathaction!5_1;2;1;1;1,499
Consider method^4_1;2;1;3,470 470 m6_do_get_truck
1;2;1;3 15 pathaction!4_1;2;1;3,196
Consider method^4_2;2;1;3,152 152 m6_do_get_truck
2;2;1;3 41 pathaction!4_2;2;1;3,199
Consider method^2_1;2,214 214 m5_do_clear
1;2 214 pathaction!2_1;2,497
Consider method^2_9;2,98 98 m4_do_clear
9;2 200 pathaction!2_9;2,487
Consider method^2_6;1,435 435 m6_do_get_truck
6;1 192 pathaction!2_6;1,201
Consider method^2_5;1,435 435 m6_do_get_truck
5;1 25 pathaction!2_5;1,201
Consider method^1_7,174 174 m2_do_put_on
7 106 pathaction!1_7,650
Consider method^3_0;4;1,395 395 m5_do_clear
0;4;1 90 pathaction!3_0;4;1,505
Consider method^5_0;4;1;1;3,435 435 m6_do_get_truck
0;4;1;1;3 11 pathaction!5_0;4;1;1;3,201
Consider method^2_6;2,534 534 m4_do_clear
6;2 160 pathaction!2_6;2,502
Consider method^1_6,250 250 m2_do_put_on
6 212 pathaction!1_6,647


CHECKING primitive solution of length 121 ...
true 50 __method_precondition_m10_do_load_truck_10_precondition[crate9,distributor1,crate5,hoist2;]
true 168 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 60 Drive[truck0,depot0,distributor1;]
true 63 __method_precondition_m4_do_clear_4_precondition[crate9,distributor1;]
true 123 nop[;]
true 136 Lift[hoist2,crate9,crate5,distributor1;]
true 198 Load[hoist2,crate9,truck0,distributor1;]
true 35 Drive[truck0,distributor1,depot0;]
true 78 __method_precondition_m11_do_unload_truck_11_precondition[truck0,depot0,hoist0,crate9,pallet0;]
true 202 __method_precondition_m5_do_clear_5_precondition[pallet0,crate1,depot0,hoist0;]
true 87 __method_precondition_m5_do_clear_5_precondition[crate1,crate3,depot0,hoist0;]
true 159 __method_precondition_m5_do_clear_5_precondition[crate3,crate4,depot0,hoist0;]
true 157 __method_precondition_m4_do_clear_4_precondition[crate4,depot0;]
true 100 nop[;]
true 152 Lift[hoist0,crate4,crate3,depot0;]
true 1 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot0;]
true 75 Drive[truck1,distributor0,depot0;]
true 86 Load[hoist0,crate4,truck1,depot0;]
true 40 Lift[hoist0,crate3,crate1,depot0;]
true 210 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 164 nop[;]
true 185 Load[hoist0,crate3,truck1,depot0;]
true 51 Lift[hoist0,crate1,pallet0,depot0;]
true 154 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 104 nop[;]
true 14 Load[hoist0,crate1,truck1,depot0;]
true 95 Unload[hoist0,crate9,truck0,depot0;]
true 132 Drop[hoist0,crate9,pallet0,depot0;]
true 177 __method_precondition_m2_do_put_on_2_precondition[crate3,truck1;]
true 199 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 179 Drive[truck1,depot0,distributor1;]
true 183 __method_precondition_m5_do_clear_5_precondition[pallet2,crate0,distributor1,hoist2;]
true 107 __method_precondition_m5_do_clear_5_precondition[crate0,crate2,distributor1,hoist2;]
true 189 __method_precondition_m5_do_clear_5_precondition[crate2,crate5,distributor1,hoist2;]
true 32 __method_precondition_m4_do_clear_4_precondition[crate5,distributor1;]
true 84 nop[;]
true 16 Lift[hoist2,crate5,crate2,distributor1;]
true 108 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 134 nop[;]
true 169 Load[hoist2,crate5,truck1,distributor1;]
true 178 Lift[hoist2,crate2,crate0,distributor1;]
true 66 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 161 nop[;]
true 39 Load[hoist2,crate2,truck1,distributor1;]
true 30 Lift[hoist2,crate0,pallet2,distributor1;]
true 53 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 56 nop[;]
true 127 Load[hoist2,crate0,truck1,distributor1;]
true 133 Unload[hoist2,crate3,truck1,distributor1;]
true 219 Drop[hoist2,crate3,pallet2,distributor1;]
true 10 __method_precondition_m2_do_put_on_2_precondition[crate1,truck1;]
true 174 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 69 Drive[truck1,distributor1,distributor0;]
true 6 __method_precondition_m5_do_clear_5_precondition[pallet1,crate6,distributor0,hoist1;]
true 27 __method_precondition_m5_do_clear_5_precondition[crate6,crate7,distributor0,hoist1;]
true 121 __method_precondition_m5_do_clear_5_precondition[crate7,crate8,distributor0,hoist1;]
true 204 __method_precondition_m4_do_clear_4_precondition[crate8,distributor0;]
true 57 nop[;]
true 175 Lift[hoist1,crate8,crate7,distributor0;]
true 122 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 105 nop[;]
true 137 Load[hoist1,crate8,truck1,distributor0;]
true 2 Lift[hoist1,crate7,crate6,distributor0;]
true 171 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 124 nop[;]
true 70 Load[hoist1,crate7,truck1,distributor0;]
true 144 Lift[hoist1,crate6,pallet1,distributor0;]
true 72 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 59 nop[;]
true 76 Load[hoist1,crate6,truck1,distributor0;]
true 17 Unload[hoist1,crate1,truck1,distributor0;]
true 170 Drop[hoist1,crate1,pallet1,distributor0;]
true 74 __method_precondition_m2_do_put_on_2_precondition[crate6,truck1;]
true 48 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot0;]
true 145 Drive[truck1,distributor0,depot0;]
true 151 __method_precondition_m4_do_clear_4_precondition[crate9,depot0;]
true 194 nop[;]
true 116 Unload[hoist0,crate6,truck1,depot0;]
true 28 Drop[hoist0,crate6,crate9,depot0;]
true 67 __method_precondition_m2_do_put_on_2_precondition[crate4,truck1;]
true 184 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 99 nop[;]
true 209 __method_precondition_m4_do_clear_4_precondition[crate6,depot0;]
true 203 nop[;]
true 96 Unload[hoist0,crate4,truck1,depot0;]
true 101 Drop[hoist0,crate4,crate6,depot0;]
true 0 __method_precondition_m2_do_put_on_2_precondition[crate5,truck1;]
true 215 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 146 nop[;]
true 142 __method_precondition_m4_do_clear_4_precondition[crate4,depot0;]
true 54 nop[;]
true 19 Unload[hoist0,crate5,truck1,depot0;]
true 77 Drop[hoist0,crate5,crate4,depot0;]
true 44 __method_precondition_m2_do_put_on_2_precondition[crate0,truck1;]
true 98 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 153 nop[;]
true 193 __method_precondition_m4_do_clear_4_precondition[crate5,depot0;]
true 94 nop[;]
true 208 Unload[hoist0,crate0,truck1,depot0;]
true 180 Drop[hoist0,crate0,crate5,depot0;]
true 148 __method_precondition_m2_do_put_on_2_precondition[crate2,truck1;]
true 97 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 13 nop[;]
true 46 __method_precondition_m4_do_clear_4_precondition[crate0,depot0;]
true 80 nop[;]
true 149 Unload[hoist0,crate2,truck1,depot0;]
true 165 Drop[hoist0,crate2,crate0,depot0;]
true 176 __method_precondition_m2_do_put_on_2_precondition[crate7,truck1;]
true 18 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 33 Drive[truck1,depot0,distributor0;]
true 186 __method_precondition_m4_do_clear_4_precondition[crate1,distributor0;]
true 172 nop[;]
true 38 Unload[hoist1,crate7,truck1,distributor0;]
true 128 Drop[hoist1,crate7,crate1,distributor0;]
true 126 __method_precondition_m2_do_put_on_2_precondition[crate8,truck1;]
true 138 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 4 Drive[truck1,distributor0,distributor1;]
true 68 __method_precondition_m4_do_clear_4_precondition[crate3,distributor1;]
true 34 nop[;]
true 147 Unload[hoist2,crate8,truck1,distributor1;]
true 114 Drop[hoist2,crate8,crate3,distributor1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 468
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 936
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 1404
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 1872
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 2340
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 2808
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 3276
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 3744
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 4212
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 4680
TSTG: 2147483647
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 11
ICAPS: 5148
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 5616
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 6084
TSTG: 2147483647
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 14
ICAPS: 6552
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 15
ICAPS: 7020
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 7488
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 17
ICAPS: 7956
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 18
ICAPS: 8424
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 19
ICAPS: 8892
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 20
ICAPS: 9360
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 71
  lower bound = 19

Running SAT search with cost bound = 45
==================================================
  upper bound = 71
  lower bound = 19
LEN 45
ICAPS: 21060
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854758103
DP max: 14
Taking minimum: 14
Generating initial PDT ... done
initial PDT has 2085 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 2015 leafs
SHOP LEAFS 865
Assignment implications
Generating clauses representing decomposition ... done
At most K: 1132ms input: 12940 K = 45
Number of actions Formula: 1226ms for 1177494 clauses
Layers: 11 paths 2015
Layer 1 g 0 = 0 - 1 / 0 clauses 2033136
Layer 1 g 1 = 2 - 3 / 2 clauses 2033136
Layer 1 g 2 = 4 - 5 / 4 clauses 2033136
Layer 1 g 3 = 6 - 7 / 6 clauses 2033136
Layer 1 g 4 = 8 - 9 / 8 clauses 2033136
Layer 1 g 5 = 10 - 11 / 10 clauses 2033136
Layer 1 g 6 = 12 - 13 / 12 clauses 2033136
Layer 1 g 7 = 14 - 15 / 14 clauses 2033136
Layer 1 g 8 = 16 - 17 / 16 clauses 2033136
Layer 1 g 9 = 18 - 19 / 18 clauses 2033136
Layer 1 g 10 = 20 - 21 / 20 clauses 2033136
Layer 1 g 11 = 22 - 23 / 22 clauses 2033136
Layer 1 g 12 = 24 - 25 / 24 clauses 2033136
Layer 1 g 13 = 26 - 27 / 26 clauses 2033136
Layer 1 g 14 = 28 - 29 / 28Still waiting ... running for 75191 will abort at 9223372036854758103
 clauses 2033136
Layer 1 g 15 = 30 - 31 / 30 clauses 2033136
Layer 1 g 16 = 32 - 33 / 32 clauses 2033136
Layer 1 g 17 = 34 - 35 / 34 clauses 2033136
Layer 1 g 18 = 36 - 37 / 36 clauses 2033136
Layer 1 g 19 = 38 - 39 / 38 clauses 2033136
Layer 1 g 20 = 40 - 41 / 40 clauses 2033136
Layer 1 g 21 = 42 - 43 / 42 clauses 2033136
Layer 1 g 22 = 44 - 45 / 44 clauses 2033136
Layer 1 g 23 = 46 - 47 / 46 clauses 2033136
Layer 1 g 24 = 48 - 49 / 48 clauses 2033136
Layer 1 g 25 = 50 - 51 / 50 clauses 2033136
Layer 1 g 26 = 52 - 53 / 52 clauses 2033136
Layer 1 g 27 = 54 - 55 / 54 clauses 2033136
Layer 1 g 28 = 56 - 57 / 56 clauses 2033136
Layer 1 g 29 = 58 - 59 / 58 clauses 2033136
Layer 1 g 30 = 60 - 61 / 60Still waiting ... running for 146388 will abort at 9223372036854758103
 clauses 2033136
Layer 1 g 31 = 62 - 63 / 62 clauses 2033136
Layer 1 g 32 = 64 - 65 / 64 clauses 2033136
Layer 1 g 33 = 66 - 67 / 66 clauses 2033136
Layer 1 g 34 = 68 - 69 / 68 clauses 2033136
Layer 1 g 35 = 70 - 71 / 70 clauses 2033136
Layer 1 g 36 = 72 - 73 / 72 clauses 2033136
Layer 1 g 37 = 74 - 75 / 74 clauses 2033136
Layer 1 g 38 = 76 - 77 / 76 clauses 2033136
Layer 1 g 39 = 78 - 79 / 78
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 203.315 MEMPEAK_KBS 8112436.224
