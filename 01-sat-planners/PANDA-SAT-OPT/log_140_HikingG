PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/HikingG/domain.hddl instances/HikingG/p08.hddl"


Planner Configuration
=====================
Domain: instances/HikingG/domain.hddl
Problem: instances/HikingG/p08.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p08.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 24
Compiling negative preconditions ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 24
Compiling split parameters ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 24
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 24
Grounded planning graph ... done in 944ms.
	Number of Grounded Actions 6627
	Number of Grounded Literals 77
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 24
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 24
Grounding ... done.
	number of abstract tasks = 42
	number of tasks = 3565
	number of decomposition methods = 3215
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 42
	number of tasks = 3565
	number of decomposition methods = 3215
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 543ms.
	Number of Grounded Actions 3523
	Number of Grounded Literals 71
	number of abstract tasks = 42
	number of tasks = 3565
	number of decomposition methods = 3215
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 42
	number of tasks = 3565
	number of decomposition methods = 3215
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 42
	number of tasks = 3565
	number of decomposition methods = 3216
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1643
	number of tasks = 5166
	number of decomposition methods = 4817
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1643
	number of tasks = 5166
	number of decomposition methods = 4817
	number of predicates = 71
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2082
	number of epsilon methods = 0
	number of primitive tasks = 3523
	number of constants = 0
Tasks 3523 - 2
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767960ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854767239
done
initial PDT has 16 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 8 leafs
SHOP LEAFS 6
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 7455
Size 7455 at 0/3523
Size 3125 at 500/3523
Size 3118 at 1000/3523
Size 3118 at 1500/3523
Size 2884 at 2000/3523
Size 1018 at 2500/3523
Size 484 at 3000/3523
Size 484 at 3500/3523
Size 484
Size 484 at 0/3523
Size 87 at 500/3523
Size 87 at 1000/3523
Size 87 at 1500/3523
Size 87 at 2000/3523
Size 75 at 2500/3523
Size 75 at 3000/3523
Size 75 at 3500/3523
Size 75
Size 75 at 0/3523
Size 75 at 500/3523
Size 75 at 1000/3523
Size 75 at 1500/3523
Size 75 at 2000/3523
Size 75 at 2500/3523
Size 75 at 3000/3523
Size 75 at 3500/3523
Size 75
Invariant time: 0.615
Number of invariants: 75
Invariant Clauses 675
NUMBER OF CLAUSES 554655
NUMBER OF STATE CLAUSES 16750
NUMBER OF DECOMPOSITION CLAUSES 537905
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 3.02% 96.98% 0.0% 
NUMBER OF PATHS 8
Starting cryptominisat5.5
Setting starttime of solver to 1604516951690
Command exited with non-zero status 20
0.09 0.01

Time command gave the following runtime for the solver: 100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854764631
done
initial PDT has 35 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 19 leafs
SHOP LEAFS 8
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1500
NUMBER OF CLAUSES 594973
NUMBER OF STATE CLAUSES 24545
NUMBER OF DECOMPOSITION CLAUSES 570428
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 4.13% 95.87% 0.0% 
NUMBER OF PATHS 19
Starting cryptominisat5.5
Setting starttime of solver to 1604516953499
Command exited with non-zero status 20
0.12 0.00

Time command gave the following runtime for the solver: 120
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854762844
done
initial PDT has 60 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 41 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 3150
NUMBER OF CLAUSES 1132711
NUMBER OF STATE CLAUSES 41871
NUMBER OF DECOMPOSITION CLAUSES 1090840
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 3.7% 96.3% 0.0% 
NUMBER OF PATHS 41
Starting cryptominisat5.5
Setting starttime of solver to 1604516957334
Command exited with non-zero status 20
0.36 0.01

Time command gave the following runtime for the solver: 370
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854758702
done
initial PDT has 90 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 67 leafs
SHOP LEAFS 22
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 5100
NUMBER OF CLAUSES 1372307
NUMBER OF STATE CLAUSES 60489
NUMBER OF DECOMPOSITION CLAUSES 1311818
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 4.41% 95.59% 0.0% 
NUMBER OF PATHS 67
Starting cryptominisat5.5
Setting starttime of solver to 1604516961371
Command exited with non-zero status 20
0.53 0.01

Time command gave the following runtime for the solver: 540
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854754515
done
initial PDT has 124 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 97 leafs
SHOP LEAFS 32
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 7350
NUMBER OF CLAUSES 1612840
NUMBER OF STATE CLAUSES 80527
NUMBER OF DECOMPOSITION CLAUSES 1532313
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 4.99% 95.01% 0.0% 
NUMBER OF PATHS 97
Starting cryptominisat5.5
Setting starttime of solver to 1604516966099
Command exited with non-zero status 20
0.80 0.02

Time command gave the following runtime for the solver: 820
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854749414
done
initial PDT has 162 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 131 leafs
SHOP LEAFS 44
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 9900
NUMBER OF CLAUSES 1856031
NUMBER OF STATE CLAUSES 101985
NUMBER OF DECOMPOSITION CLAUSES 1754046
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 5.49% 94.51% 0.0% 
NUMBER OF PATHS 131
Starting cryptominisat5.5
Setting starttime of solver to 1604516971694
Command exited with non-zero status 20
1.16 0.05

Time command gave the following runtime for the solver: 1210
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854743300
done
initial PDT has 204 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 169 leafs
SHOP LEAFS 58
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 12750
NUMBER OF CLAUSES 2101880
NUMBER OF STATE CLAUSES 124863
NUMBER OF DECOMPOSITION CLAUSES 1977017
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 5.94% 94.06% 0.0% 
NUMBER OF PATHS 169
Starting cryptominisat5.5
Setting starttime of solver to 1604516979107
Command exited with non-zero status 10
1.69 0.05

Time command gave the following runtime for the solver: 1740
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^9_0;2;1;8;5;2;2;2;2,2183 2183 m4_walk_everyone
0;2;1;8;5;2;2;2;2 61 pathaction!9_0;2;1;8;5;2;2;2;2,2191
Consider method^0_,4816 4816 __top_2
 25 pathaction!0_,5165
Consider method^6_0;2;1;9;5;2,36 36 m5_walk_everyone
0;2;1;9;5;2 27 pathaction!6_0;2;1;9;5;2,2194
Consider method^2_0;1,62 62 m6_prepare_trip
0;1 15 pathaction!2_0;1,3083
Consider method^1_0,811 811 m14_everyone_go_hiking
0 31 pathaction!1_0,3564
Consider method^5_0;2;1;8;2,436 436 __UNIQUE-replacement_155
0;2;1;8;2 17 pathaction!5_0;2;1;8;2,3720
Consider method^5_0;2;1;9;2,2982 2982 __UNIQUE-replacement_1001
0;2;1;9;2 47 pathaction!5_0;2;1;9;2,4566
Consider method^6_0;2;1;8;5;2,470 470 m5_walk_everyone
0;2;1;8;5;2 73 pathaction!6_0;2;1;8;5;2,2191
Consider method^5_0;2;1;9;5,3540 3540 m5_walk_everyone
0;2;1;9;5 65 pathaction!5_0;2;1;9;5,2194
Consider method^4_0;2;1;8,437 437 m3_trip_to2
0;2;1;8 41 pathaction!4_0;2;1;8,3
Consider method^8_0;2;1;9;5;2;2;2,1412 1412 m5_walk_everyone
0;2;1;9;5;2;2;2 10 pathaction!8_0;2;1;9;5;2;2;2,2194
Consider method^8_0;2;1;8;5;2;2;2,3253 3253 m5_walk_everyone
0;2;1;8;5;2;2;2 60 pathaction!8_0;2;1;8;5;2;2;2,2191
Consider method^7_0;2;1;8;5;2;2,4696 4696 m5_walk_everyone
0;2;1;8;5;2;2 36 pathaction!7_0;2;1;8;5;2;2,2191
Consider method^3_0;2;1,2389 2389 m2_trip_to2
0;2;1 11 pathaction!3_0;2;1,4
Consider method^7_0;2;1;9;5;2;2,2789 2789 m5_walk_everyone
0;2;1;9;5;2;2 51 pathaction!7_0;2;1;9;5;2;2,2194
Consider method^3_0;1;0,3908 3908 m10_bring_tent
0;1;0 54 pathaction!3_0;1;0,2370
Consider method^5_0;2;1;9;9,2981 2981 __UNIQUE-replacement_1000
0;2;1;9;9 69 pathaction!5_0;2;1;9;9,4565
Consider method^2_0;2,757 757 m0_trip_to1
0;2 75 pathaction!2_0;2,82
Consider method^9_0;2;1;9;5;2;2;2;2,4141 4141 m4_walk_everyone
0;2;1;9;5;2;2;2;2 48 pathaction!9_0;2;1;9;5;2;2;2;2,2194
Consider method^4_0;2;1;9,2983 2983 m3_trip_to2
0;2;1;9 34 pathaction!4_0;2;1;9,19
Consider method^5_0;2;1;8;5,3355 3355 m5_walk_everyone
0;2;1;8;5 76 pathaction!5_0;2;1;8;5,2191
Consider method^5_0;2;1;8;9,435 435 __UNIQUE-replacement_154
0;2;1;8;9 23 pathaction!5_0;2;1;8;9,3719
Consider method^3_0;1;1,3463 3463 m11_bring_cars
0;1;1 13 pathaction!3_0;1;1,2373


CHECKING primitive solution of length 43 ...
true 68 __method_precondition_m14_everyone_go_hiking_14_precondition[couple1,guy1,girl1,place0;]
true 33 __method_precondition_m10_bring_tent_10_precondition[tent1,place0,guy1;]
true 30 put_down[guy1,place0,tent1;]
true 70 __method_precondition_m11_bring_cars_11_precondition[car2,place0,car3;]
true 12 nop[;]
true 57 __method_precondition_m0_trip_to1_0_precondition[couple1,guy1,girl1,place0;]
true 63 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 40 __method_precondition_m3_trip_to2_3_precondition[guy1,place1,car3,car1,girl1,couple1,tent0,place0;]
true 21 drive_tent[guy1,place0,place1,car1,tent0;]
true 81 drive[girl1,place0,place1,car3;]
true 4 put_up[guy1,place1,tent0;]
true 78 drive_passenger[girl1,place1,place0,car3,guy1;]
true 53 __method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple1,girl1,guy1;]
true 5 walk_together[tent0,place1,guy1,place0,girl1,couple1;]
true 64 __method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple2,girl2,guy2;]
true 22 walk_together[tent0,place1,guy2,place0,girl2,couple2;]
true 20 __method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple0,girl0,guy0;]
true 16 walk_together[tent0,place1,guy0,place0,girl0,couple0;]
true 56 __method_precondition_m5_walk_everyone_5_precondition[place0,place1,couple3,girl3,guy3;]
true 52 walk_together[tent0,place1,guy3,place0,girl3,couple3;]
true 38 nop[;]
true 55 put_down[girl1,place1,tent0;]
true 42 drive_passenger[guy1,place1,place0,car1,girl1;]
true 71 drive[guy1,place0,place1,car1;]
true 46 drive[girl1,place0,place1,car3;]
true 58 __method_precondition_m3_trip_to2_3_precondition[guy1,place2,car1,car3,girl1,couple1,tent0,place1;]
true 59 drive_tent[guy1,place1,place2,car3,tent0;]
true 14 drive[girl1,place1,place2,car1;]
true 2 put_up[guy1,place2,tent0;]
true 77 drive_passenger[girl1,place2,place1,car1,guy1;]
true 80 __method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple1,girl1,guy1;]
true 28 walk_together[tent0,place2,guy1,place1,girl1,couple1;]
true 24 __method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple0,girl0,guy0;]
true 7 walk_together[tent0,place2,guy0,place1,girl0,couple0;]
true 1 __method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple3,girl3,guy3;]
true 0 walk_together[tent0,place2,guy3,place1,girl3,couple3;]
true 66 __method_precondition_m5_walk_everyone_5_precondition[place1,place2,couple2,girl2,guy2;]
true 67 walk_together[tent0,place2,guy2,place1,girl2,couple2;]
true 79 nop[;]
true 49 put_down[girl1,place2,tent0;]
true 32 drive_passenger[guy1,place2,place1,car3,girl1;]
true 18 drive[guy1,place1,place2,car3;]
true 50 drive[girl1,place1,place2,car1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 3288
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 6576
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 9864
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 4
ICAPS: 13152
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 5
ICAPS: 16440
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 6
ICAPS: 19728
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 7
ICAPS: 23016
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
LEN 8
ICAPS: 26304
TSTG: 2147483647
Method: 2147483647
DP max: 10
Taking minimum: 10
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 28
  lower bound = 7

Running SAT search with cost bound = 17
==================================================
  upper bound = 28
  lower bound = 7
LEN 17
ICAPS: 55896
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 101 will abort at 9223372036854734663
DP max: 19
Taking minimum: 19
Generating initial PDT ... done
initial PDT has 762 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 691 leafs
SHOP LEAFS 274
Assignment implications
Generating clauses representing decomposition ... done
At most K: 361ms input: 17697 K = 17
Number of actions Formula: 451ms for 619377 clauses
Layers: 10 paths 691
Layer 1 g 0 = 0 - 1 / 0 clauses 239778
Layer 1 g 1 = 2 - 3 / 2 clauses 239778
Layer 1 g 2 = 4 - 5 / 4 clauses 239778
Layer 1 g 3 = 6 - 7 / 6 clauses 239778
Layer 1 g 4 = 8 - 9 / 8 clauses 239778
Layer 1 g 5 = 10 - 11 / 10 clauses 239778
Layer 1 g 6 = 12 - 13 / 12 clauses 239778
Layer 1 g 7 = 14 - 15 / 14 clauses 239778
Layer 1 g 8 = 16 - 17 / 16 clauses 239778
Layer 1 g 9 = 18 - 19 / 18 clauses 239778
Layer 1 g 10 = 20 - 21 / 20 clauses 239778
Layer 1 g 11 = 22 - 23 / 22 clauses 239778
Layer 1 g 12 = 24 - 25 / 24 clauses 239778
Layer 1 g 13 = 26 - 27 / 26 clauses 239778
Layer 1 g 14 = 28 - 29 / 28 clauses 239778
Layer 1 g 15 = 30 - 31 / 30 clauses 239778
Layer 1 g 16 = 32 - 33 / 32 clauses 239778
Layer 1 g 17 = 34 - 35 / 34 clauses 239778
Layer 1 g 18 = 36 - 37 / 36 clauses 239778
Layer 1 g 19 = 38 - 39 / 38 clauses 239778
Layer 1 g 20 = 40 - 41 / 40 clauses 239778
Layer 1 g 21 = 42 - 43 / 42 clauses 239778
Layer 1 g 22 = 44 - 45 / 44 clauses 239778
Layer 1 g 23 = 46 - 47 / 46 clauses 239778
Layer 1 g 24 = 48 - 49 / 48 clauses 239778
Layer 1 g 25 = 50 - 51 / 50 clauses 239778
Layer 1 g 26 = 52 - 53 / 52 clauses 239778
Layer 1 g 27 = 54 - 55 / 54 clauses 239778
Layer 1 g 28 = 56 - 57 / 56 clauses 239778
Layer 1 g 29 = 58 - 59 / 58 clauses 239778
Layer 1 g 30 = 60 - 61 / 60 clauses 239778
Layer 1 g 31 = 62 - 63 / 62 clauses 239778
Layer 1 g 32 = 64 - 65 / 64 clauses 239778
Layer 1 g 33 = 66 - 67 / 66 clauses 239778
Layer 1 g 34 = 68 - 69 / 68 clauses 239778
Layer 1 g 35 = 70 - 71 / 70 clauses 239778
Layer 1 g 36 = 72 - 73 / 72 clauses 239778
Layer 1 g 37 = 74 - 75 / 74 clauses 239778
Layer 1 g 38 = 76 - 77 / 76 clauses 239778
Layer 1 g 39 = 78 - 79 / 78 clauses 239778
Layer 1 g 40 = 80 - 81 / 80 clauses 239778
Layer 1 g 41 = 82 - 83 / 82 clauses 239778
Layer 1 g 42 = 84 - 85 / 84 clauses 239778
Layer 1 g 43 = 86 - 87 / 86 clauses 239778
Layer 1 g 44 = 88 - 89 / 88 clauses 239778
Layer 1 g 45 = 90 - 91 / 90 clauses 239778
Layer 1 g 46 = 92 - 93 / 92 clauses 239778
Layer 1 g 47 = 94 - 95 / 94 clauses 239778
Layer 1 g 48 = 96 - 97 / 96 clauses 239778
Layer 1 g 49 = 98 - 99 / 98 clauses 239778
Layer 1 g 50 = 100 - 101 / 100 clauses 239778
Layer 1 g 51 = 102 - 103 / 102 clauses 239778
Layer 1 g 52 = 104 - 105 / 104 clauses 239778
Layer 1 g 53 = 106 - 107 / 106 clauses 239778
Layer 1 g 54 = 108 - 109 / 108 clauses 239778
Layer 1 g 55 = 110 - 111 / 110 clauses 239778
Layer 1 g 56 = 112 - 113 / 112 clauses 239778
Layer 1 g 57 = 114 - 115 / 114 clauses 239778
Layer 1 g 58 = 116 - 117 / 116 clauses 239778
Layer 1 g 59 = 118 - 119 / 118 clauses 239778
Layer 1 g 60 = 120 - 121 / 120 clauses 239778
Layer 1 g 61 = 122 - 123 / 122 clauses 239778
Layer 1 g 62 = 124 - 125 / 124 clauses 239778
Layer 1 g 63 = 126 - 127 / 126 clauses 239778
Layer 1 g 64 = 128 - 129 / 128 clauses 239778
Layer 1 g 65 = 130 - 131 / 130 clauses 239778
Layer 1 g 66 = 132 - 133 / 132 clauses 239778
Layer 1 g 67 = 134 - 135 / 134 clauses 239778
Layer 1 g 68 = 136 - 137 / 136 clauses 239778
Layer 1 g 69 = 138 - 139 / 138 clauses 239778
Layer 1 g 70 = 140 - 141 / 140 clauses 239778
Layer 1 g 71 = 142 - 143 / 142 clauses 239778
Layer 1 g 72 = 144 - 145 / 144 clauses 239778
Layer 1 g 73 = 146 - 147 / 146 clauses 239778
Layer 1 g 74 = 148 - 149 / 148 clauses 239778
Layer 1 g 75 = 150 - 151 / 150 clauses 239778
Layer 1 g 76 = 152 - 153 / 152 clauses 239778
Layer 1 g 77 = 154 - 155 / 154 clauses 239778
Layer 1 g 78 = 156 - 157 / 156 clauses 239778
Layer 1 g 79 = 158 - 159 / 158 clauses 239778
Layer 1 g 80 = 160 - 161 / 160 clauses 239778
Layer 1 g 81 = 162 - 163 / 162 clauses 239778
Layer 1 g 82 = 164 - 165 / 164 clauses 239778
Layer 1 g 83 = 166 - 167 / 166 clauses 239778
Layer 1 g 84 = 168 - 169 / 168 clauses 239778
Layer 1 g 85 = 170 - 171 / 170 clauses 239778
Layer 1 g 86 = 172 - 173 / 172 clauses 239778
Layer 1 g 87 = 174 - 175 / 174 clauses 239778
Layer 1 g 88 = 176 - 177 / 176 clauses 239778
Layer 1 g 89 = 178 - 179 / 178 clauses 239778
Layer 1 g 90 = 180 - 181 / 180 clauses 239778
Layer 1 g 91 = 182 - 183 / 182 clauses 239778
Layer 1 g 92 = 184 - 185 / 184 clauses 239778
Layer 1 g 93 = 186 - 187 / 186 clauses 239778
Layer 1 g 94 = 188 - 189 / 188 clauses 239778
Layer 1 g 95 = 190 - 191 / 190 clauses 239778
Layer 1 g 96 = 192 - 193 / 192 clauses 239778
Layer 1 g 97 = 194 - 195 / 194 clauses 239778
Layer 1 g 98 = 196 - 197 / 196 clauses 239778
Layer 1 g 99 = 198 - 199 / 198 clauses 239778
Layer 1 g 100 = 200 - 201 / 200 clauses 239778
Layer 1 g 101 = 202 - 203 / 202 clauses 239778
Layer 1 g 102 = 204 - 205 / 204 clauses 239778
Layer 1 g 103 = 206 - 207 / 206 clauses 239778
Layer 1 g 104 = 208 - 209 / 208 clauses 239778
Layer 1 g 105 = 210 - 211 / 210 clauses 239778
Layer 1 g 106 = 212 - 213 / 212 clauses 239778
Layer 1 g 107 = 214 - 215 / 214 clauses 239778
Layer 1 g 108 = 216 - 217 / 216 clauses 239778
Layer 1 g 109 = 218 - 219 / 218 clauses 239778
Layer 1 g 110 = 220 - 221 / 220 clauses 239778
Layer 1 g 111 = 222 - 223 / 222 clauses 239778
Layer 1 g 112 = 224 - 225 / 224 clauses 239778
Layer 1 g 113 = 226 - 227 / 226 clauses 239778
Layer 1 g 114 = 228 - 229 / 228 clauses 239778
Layer 1 g 115 = 230 - 231 / 230 clauses 239778
Layer 1 g 116 = 232 - 233 / 232 clauses 239778
Layer 1 g 117 = 234 - 235 / 234 clauses 239778
Layer 1 g 118 = 236 - 237 / 236 clauses 239778
Layer 1 g 119 = 238 - 239 / 238 clauses 239778
Layer 1 g 120 = 240 - 241 / 240 clauses 239778
Layer 1 g 121 = 242 - 243 / 242 clauses 239778
Layer 1 g 122 = 244 - 245 / 244 clauses 239778
Layer 1 g 123 = 246 - 247 / 246 clauses 239778
Layer 1 g 124 = 248 - 249 / 248 clauses 239778
Layer 1 g 125 = 250 - 251 / 250 clauses 239778
Layer 1 g 126 = 252 - 253 / 252 clauses 239778
Layer 1 g 127 = 254 - 255 / 254 clauses 239778
Layer 1 g 128 = 256 - 257 / 256 clauses 239778
Layer 1 g 129 = 258 - 259 / 258 clauses 239778
Layer 1 g 130 = 260 - 261 / 260 clauses 239778
Layer 1 g 131 = 262 - 263 / 262 clauses 239778
Layer 1 g 132 = 264 - 265 / 264 clauses 239778
Layer 1 g 133 = 266 - 267 / 266 clauses 239778
Layer 1 g 134 = 268 - 269 / 268 clauses 239778
Layer 1 g 135 = 270 - 271 / 270 clauses 239778
Layer 1 g 136 = 272 - 273 / 272 clauses 239778
Layer 1 g 137 = 274 - 275 / 274 clauses 239778
Layer 1 g 138 = 276 - 277 / 276 clauses 239778
Layer 1 g 139 = 278 - 279 / 278 clauses 239778
Layer 1 g 140 = 280 - 281 / 280 clauses 239778
Layer 1 g 141 = 282 - 283 / 282 clauses 239778
Layer 1 g 142 = 284 - 285 / 284 clauses 239778
Layer 1 g 143 = 286 - 287 / 286 clauses 239778
Layer 1 g 144 = 288 - 289 / 288 clauses 239778
Layer 1 g 145 = 290 - 291 / 290 clauses 239778
Layer 1 g 146 = 292 - 293 / 292 clauses 239778
Layer 1 g 147 = 294 - 295 / 294 clauses 239778
Layer 1 g 148 = 296 - 297 / 296 clauses 239778
Layer 1 g 149 = 298 - 299 / 298 clauses 239778
Layer 1 g 150 = 300 - 301 / 300 clauses 239778
Layer 1 g 151 = 302 - 303 / 302 clauses 239778
Layer 1 g 152 = 304 - 305 / 304 clauses 239778
Layer 1 g 153 = 306 - 307 / 306 clauses 239778
Layer 1 g 154 = 308 - 309 / 308 clauses 239778
Layer 1 g 155 = 310 - 311 / 310 clauses 239778
Layer 1 g 156 = 312 - 313 / 312 clauses 239778
Layer 1 g 157 = 314 - 315 / 314 clauses 239778
Layer 1 g 158 = 316 - 317 / 316 clauses 239778
Layer 1 g 159 = 318 - 319 / 318 clauses 239778
Layer 1 g 160 = 320 - 321 / 320 clauses 239778
Layer 1 g 161 = 322 - 323 / 322 clauses 239778
Layer 1 g 162 = 324 - 325 / 324 clauses 239778
Layer 1 g 163 = 326 - 327 / 326Still waiting ... running for 72997 will abort at 9223372036854734663
 clauses 239778
Layer 1 g 164 = 328 - 329 / 328 clauses 239778
Layer 1 g 165 = 330 - 331 / 330 clauses 239778
Layer 1 g 166 = 332 - 333 / 332 clauses 239778
Layer 1 g 167 = 334 - 335 / 334 clauses 239778
Layer 1 g 168 = 336 - 337 / 336 clauses 239778
Layer 1 g 169 = 338 - 339 / 338 clauses 239778
Layer 1 g 170 = 340 - 341 / 340 clauses 239778
Layer 1 g 171 = 342 - 343 / 342 clauses 239778
Layer 1 g 172 = 344 - 345 / 344 clauses 239778
Layer 1 g 173 = 346 - 347 / 346 clauses 239778
Layer 1 g 174 = 348 - 349 / 348 clauses 239778
Layer 1 g 175 = 350 - 351 / 350 clauses 239778
Layer 1 g 176 = 352 - 353 / 352 clauses 239778
Layer 1 g 177 = 354 - 355 / 354 clauses 239778
Layer 1 g 178 = 356 - 357 / 356 clauses 239778
Layer 1 g 179 = 358 - 359 / 358 clauses 239778
Layer 1 g 180 = 360 - 361 / 360 clauses 239778
Layer 1 g 181 = 362 - 363 / 362 clauses 239778
Layer 1 g 182 = 364 - 365 / 364 clauses 239778
Layer 1 g 183 = 366 - 367 / 366 clauses 239778
Layer 1 g 184 = 368 - 369 / 368 clauses 239778
Layer 1 g 185 = 370 - 371 / 370 clauses 239778
Layer 1 g 186 = 372 - 373 / 372 clauses 239778
Layer 1 g 187 = 374 - 375 / 374 clauses 239778
Layer 1 g 188 = 376 - 377 / 376 clauses 239778
Layer 1 g 189 = 378 - 379 / 378 clauses 239778
Layer 1 g 190 = 380 - 381 / 380 clauses 239778
Layer 1 g 191 = 382 - 383 / 382 clauses 239778
Layer 1 g 192 = 384 - 385 / 384 clauses 239778
Layer 1 g 193 = 386 - 387 / 386 clauses 239778
Layer 1 g 194 = 388 - 389 / 388 clauses 239778
Layer 1 g 195 = 390 - 391 / 390 clauses 239778
Layer 1 g 196 = 392 - 393 / 392 clauses 239778
Layer 1 g 197 = 394 - 395 / 394 clauses 239778
Layer 1 g 198 = 396 - 397 / 396 clauses 239778
Layer 1 g 199 = 398 - 399 / 398 clauses 239778
Layer 1 g 200 = 400 - 401 / 400 clauses 239778
Layer 1 g 201 = 402 - 403 / 402 clauses 239778
Layer 1 g 202 = 404 - 405 / 404 clauses 239778
Layer 1 g 203 = 406 - 407 / 406 clauses 239778
Layer 1 g 204 = 408 - 409 / 408 clauses 239778
Layer 1 g 205 = 410 - 411 / 410 clauses 239778
Layer 1 g 206 = 412 - 413 / 412 clauses 239778
Layer 1 g 207 = 414 - 415 / 414 clauses 239778
Layer 1 g 208 = 416 - 417 / 416 clauses 239778
Layer 1 g 209 = 418 - 419 / 418 clauses 239778
Layer 1 g 210 = 420 - 421 / 420 clauses 239778
Layer 1 g 211 = 422 - 423 / 422 clauses 239778
Layer 1 g 212 = 424 - 425 / 424 clauses 239778
Layer 1 g 213 = 426 - 427 / 426 clauses 239778
Layer 1 g 214 = 428 - 429 / 428 clauses 239778
Layer 1 g 215 = 430 - 431 / 430 clauses 239778
Layer 1 g 216 = 432 - 433 / 432 clauses 239778
Layer 1 g 217 = 434 - 435 / 434 clauses 239778
Layer 1 g 218 = 436 - 437 / 436 clauses 239778
Layer 1 g 219 = 438 - 439 / 438 clauses 239778
Layer 1 g 220 = 440 - 441 / 440 clauses 239778
Layer 1 g 221 = 442 - 443 / 442 clauses 239778
Layer 1 g 222 = 444 - 445 / 444 clauses 239778
Layer 1 g 223 = 446 - 447 / 446 clauses 239778
Layer 1 g 224 = 448 - 449 / 448 clauses 239778
Layer 1 g 225 = 450 - 451 / 450 clauses 239778
Layer 1 g 226 = 452 - 453 / 452 clauses 239778
Layer 1 g 227 = 454 - 455 / 454 clauses 239778
Layer 1 g 228 = 456 - 457 / 456 clauses 239778
Layer 1 g 229 = 458 - 459 / 458 clauses 239778
Layer 1 g 230 = 460 - 461 / 460 clauses 239778
Layer 1 g 231 = 462 - 463 / 462 clauses 239778
Layer 1 g 232 = 464 - 465 / 464 clauses 239778
Layer 1 g 233 = 466 - 467 / 466 clauses 239778
Layer 1 g 234 = 468 - 469 / 468 clauses 239778
Layer 1 g 235 = 470 - 471 / 470 clauses 239778
Layer 1 g 236 = 472 - 473 / 472 clauses 239778
Layer 1 g 237 = 474 - 475 / 474 clauses 239778
Layer 1 g 238 = 476 - 477 / 476 clauses 239778
Layer 1 g 239 = 478 - 479 / 478 clauses 239778
Layer 1 g 240 = 480 - 481 / 480 clauses 239778
Layer 1 g 241 = 482 - 483 / 482 clauses 239778
Layer 1 g 242 = 484 - 485 / 484 clauses 239778
Layer 1 g 243 = 486 - 487 / 486 clauses 239778
Layer 1 g 244 = 488 - 489 / 488 clauses 239778
Layer 1 g 245 = 490 - 491 / 490 clauses 239778
Layer 1 g 246 = 492 - 493 / 492 clauses 239778
Layer 1 g 247 = 494 - 495 / 494 clauses 239778
Layer 1 g 248 = 496 - 497 / 496 clauses 239778
Layer 1 g 249 = 498 - 499 / 498 clauses 239778
Layer 1 g 250 = 500 - 501 / 500 clauses 239778
Layer 1 g 251 = 502 - 503 / 502 clauses 239778
Layer 1 g 252 = 504 - 505 / 504 clauses 239778
Layer 1 g 253 = 506 - 507 / 506 clauses 239778
Layer 1 g 254 = 508 - 509 / 508 clauses 239778
Layer 1 g 255 = 510 - 511 / 510 clauses 239778
Layer 1 g 256 = 512 - 513 / 512 clauses 239778
Layer 1 g 257 = 514 - 515 / 514 clauses 239778
Layer 1 g 258 = 516 - 517 / 516 clauses 239778
Layer 1 g 259 = 518 - 519 / 518 clauses 239778
Layer 1 g 260 = 520 - 521 / 520 clauses 239778
Layer 1 g 261 = 522 - 523 / 522 clauses 239778
Layer 1 g 262 = 524 - 525 / 524 clauses 239778
Layer 1 g 263 = 526 - 527 / 526 clauses 239778
Layer 1 g 264 = 528 - 529 / 528 clauses 239778
Layer 1 g 265 = 530 - 531 / 530 clauses 239778
Layer 1 g 266 = 532 - 533 / 532 clauses 239778
Layer 1 g 267 = 534 - 535 / 534 clauses 239778
Layer 1 g 268 = 536 - 537 / 536 clauses 239778
Layer 1 g 269 = 538 - 539 / 538 clauses 239778
Layer 1 g 270 = 540 - 541 / 540 clauses 239778
Layer 1 g 271 = 542 - 543 / 542 clauses 239778
Layer 1 g 272 = 544 - 545 / 544 clauses 239778
Layer 1 g 273 = 546 - 547 / 546 clauses 239778
Layer 1 g 274 = 548 - 549 / 548 clauses 239778
Layer 1 g 275 = 550 - 551 / 550 clauses 239778
Layer 1 g 276 = 552 - 553 / 552 clauses 239778
Layer 1 g 277 = 554 - 555 / 554 clauses 239778
Layer 1 g 278 = 556 - 557 / 556 clauses 239778
Layer 1 g 279 = 558 - 559 / 558 clauses 239778
Layer 1 g 280 = 560 - 561 / 560 clauses 239778
Layer 1 g 281 = 562 - 563 / 562 clauses 239778
Layer 1 g 282 = 564 - 565 / 564 clauses 239778
Layer 1 g 283 = 566 - 567 / 566 clauses 239778
Layer 1 g 284 = 568 - 569 / 568 clauses 239778
Layer 1 g 285 = 570 - 571 / 570 clauses 239778
Layer 1 g 286 = 572 - 573 / 572 clauses 239778
Layer 1 g 287 = 574 - 575 / 574 clauses 239778
Layer 1 g 288 = 576 - 577 / 576 clauses 239778
Layer 1 g 289 = 578 - 579 / 578 clauses 239778
Layer 1 g 290 = 580 - 581 / 580 clauses 239778
Layer 1 g 291 = 582 - 583 / 582 clauses 239778
Layer 1 g 292 = 584 - 585 / 584 clauses 239778
Layer 1 g 293 = 586 - 587 / 586 clauses 239778
Layer 1 g 294 = 588 - 589 / 588 clauses 239778
Layer 1 g 295 = 590 - 591 / 590 clauses 239778
Layer 1 g 296 = 592 - 593 / 592 clauses 239778
Layer 1 g 297 = 594 - 595 / 594 clauses 239778
Layer 1 g 298 = 596 - 597 / 596 clauses 239778
Layer 1 g 299 = 598 - 599 / 598 clauses 239778
Layer 1 g 300 = 600 - 601 / 600 clauses 239778
Layer 1 g 301 = 602 - 603 / 602 clauses 239778
Layer 1 g 302 = 604 - 605 / 604 clauses 239778
Layer 1 g 303 = 606 - 607 / 606 clauses 239778
Layer 1 g 304 = 608 - 609 / 608 clauses 239778
Layer 1 g 305 = 610 - 611 / 610 clauses 239778
Layer 1 g 306 = 612 - 613 / 612 clauses 239778
Layer 1 g 307 = 614 - 615 / 614 clauses 239778
Layer 1 g 308 = 616 - 617 / 616 clauses 239778
Layer 1 g 309 = 618 - 619 / 618 clauses 239778
Layer 1 g 310 = 620 - 621 / 620 clauses 239778
Layer 1 g 311 = 622 - 623 / 622 clauses 239778
Layer 1 g 312 = 624 - 625 / 624 clauses 239778
Layer 1 g 313 = 626 - 627 / 626 clauses 239778
Layer 1 g 314 = 628 - 629 / 628 clauses 239778
Layer 1 g 315 = 630 - 631 / 630 clauses 239778
Layer 1 g 316 = 632 - 633 / 632 clauses 239778
Layer 1 g 317 = 634 - 635 / 634 clauses 239778
Layer 1 g 318 = 636 - 637 / 636 clauses 239778
Layer 1 g 319 = 638 - 639 / 638 clauses 239778
Layer 1 g 320 = 640 - 641 / 640 clauses 239778
Layer 1 g 321 = 642 - 643 / 642 clauses 239778
Layer 1 g 322 = 644 - 645 / 644 clauses 239778
Layer 1 g 323 = 646 - 647 / 646 clauses 239778
Layer 1 g 324 = 648 - 649 / 648 clauses 239778
Layer 1 g 325 = 650 - 651 / 650 clauses 239778
Layer 1 g 326 = 652 - 653 / 652 clauses 239778
Layer 1 g 327 = 654 - 655 / 654 clauses 239778
Layer 1 g 328 = 656 - 657 / 656 clauses 239778
Layer 1 g 329 = 658 - 659 / 658 clauses 239778
Layer 1 g 330 = 660 - 661 / 660 clauses 239778
Layer 1 g 331 = 662 - 663 / 662 clauses 239778
Layer 1 g 332 = 664 - 665 / 664 clauses 239778
Layer 1 g 333 = 666 - 667 / 666 clauses 239778
Layer 1 g 334 = 668 - 669 / 668 clauses 239778
Layer 1 g 335 = 670 - 671 / 670 clauses 239778
Layer 1 g 336 = 672 - 673 / 672 clauses 239778
Layer 1 g 337 = 674 - 675 / 674 clauses 239778
Layer 1 g 338 = 676 - 677 / 676 clauses 239778
Layer 1 g 339 = 678 - 679 / 678 clauses 239778
Layer 1 g 340 = 680 - 681 / 680 clauses 239778
Layer 1 g 341 = 682 - 683 / 682 clauses 239778
Layer 1 g 342 = 684 - 685 / 684 clauses 239778
Layer 1 g 343 = 686 - 687 / 686 clauses 239778
Layer 1 g 344 = 688 - 689 / 688 clauses 239778
Layer 2 g 0 = 0 - 3 / 1 clauses 239778
Layer 2 g 1 = 4 - 7 / 5 clauses 239778
Layer 2 g 2 = 8 - 11 / 9 clauses 239778
Layer 2 g 3 = 12 - 15 / 13
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 183.668 MEMPEAK_KBS 8014448.64
