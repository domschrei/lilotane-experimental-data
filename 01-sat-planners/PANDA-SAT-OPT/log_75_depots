PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p15.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p15.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p15.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 39
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 39
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 39
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 39
Grounded planning graph ... done in 479ms.
	Number of Grounded Actions 1028
	Number of Grounded Literals 308
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 39
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 39
Grounding ... done.
	number of abstract tasks = 292
	number of tasks = 902
	number of decomposition methods = 744
	number of predicates = 325
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 292
	number of tasks = 902
	number of decomposition methods = 744
	number of predicates = 233
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 86ms.
	Number of Grounded Actions 610
	Number of Grounded Literals 233
	number of abstract tasks = 292
	number of tasks = 902
	number of decomposition methods = 744
	number of predicates = 233
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 292
	number of tasks = 902
	number of decomposition methods = 744
	number of predicates = 233
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 293
	number of tasks = 903
	number of decomposition methods = 745
	number of predicates = 233
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 293
	number of tasks = 903
	number of decomposition methods = 745
	number of predicates = 233
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 36ms.
	Number of Grounded Actions 610
	Number of Grounded Literals 233
	number of abstract tasks = 293
	number of tasks = 903
	number of decomposition methods = 745
	number of predicates = 233
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 293
	number of tasks = 903
	number of decomposition methods = 745
	number of predicates = 233
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 293
	number of tasks = 903
	number of decomposition methods = 745
	number of predicates = 233
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 293
	number of tasks = 903
	number of decomposition methods = 745
	number of predicates = 233
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 293
	number of tasks = 903
	number of decomposition methods = 745
	number of predicates = 233
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 355
	number of epsilon methods = 0
	number of primitive tasks = 610
	number of constants = 0
Tasks 610 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771997ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854771904
done
initial PDT has 45 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 30 leafs
SHOP LEAFS 30
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 81084
Size 81084 at 0/610
Size 49997 at 500/610
Size 41472
Size 41472 at 0/610
Size 27111 at 500/610
Size 16048
Size 16048 at 0/610
Size 10475 at 500/610
Size 6967
Size 6967 at 0/610
Size 4121 at 500/610
Size 3516
Size 3516 at 0/610
Size 2902 at 500/610
Size 2781
Size 2781 at 0/610
Size 2641 at 500/610
Size 2586
Size 2586 at 0/610
Size 2527 at 500/610
Size 2499
Size 2499 at 0/610
Size 2485 at 500/610
Size 2464
Size 2464 at 0/610
Size 2455 at 500/610
Size 2443
Size 2443 at 0/610
Size 2439 at 500/610
Size 2432
Size 2432 at 0/610
Size 2432 at 500/610
Size 2432
Invariant time: 0.938
Number of invariants: 2432
Invariant Clauses 75392
NUMBER OF CLAUSES 89866
NUMBER OF STATE CLAUSES 89620
NUMBER OF DECOMPOSITION CLAUSES 246
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.73% 0.27% 0.0% 
NUMBER OF PATHS 30
Starting cryptominisat5.5
Setting starttime of solver to 1604509308797
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854769790
done
initial PDT has 213 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 120 leafs
SHOP LEAFS 75
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 294272
NUMBER OF CLAUSES 361659
NUMBER OF STATE CLAUSES 353243
NUMBER OF DECOMPOSITION CLAUSES 8416
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.67% 2.33% 0.0% 
NUMBER OF PATHS 120
Starting cryptominisat5.5
Setting starttime of solver to 1604509310315
Command exited with non-zero status 20
0.08 0.00

Time command gave the following runtime for the solver: 80
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854768289
done
initial PDT has 430 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 270 leafs
SHOP LEAFS 147
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 659072
NUMBER OF CLAUSES 826352
NUMBER OF STATE CLAUSES 793611
NUMBER OF DECOMPOSITION CLAUSES 32741
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.04% 3.96% 0.0% 
NUMBER OF PATHS 270
Starting cryptominisat5.5
Setting starttime of solver to 1604509312115
Command exited with non-zero status 20
0.19 0.01

Time command gave the following runtime for the solver: 200
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854766264
done
initial PDT has 683 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 595 leafs
SHOP LEAFS 322
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1449472
NUMBER OF CLAUSES 1815750
NUMBER OF STATE CLAUSES 1745492
NUMBER OF DECOMPOSITION CLAUSES 70258
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.13% 3.87% 0.0% 
NUMBER OF PATHS 595
Starting cryptominisat5.5
Setting starttime of solver to 1604509315403
Command exited with non-zero status 20
0.42 0.05

Time command gave the following runtime for the solver: 470
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854762788
done
initial PDT has 897 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 815 leafs
SHOP LEAFS 410
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1984512
NUMBER OF CLAUSES 2485827
NUMBER OF STATE CLAUSES 2391352
NUMBER OF DECOMPOSITION CLAUSES 94475
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.2% 3.8000000000000003% 0.0% 
NUMBER OF PATHS 815
Starting cryptominisat5.5
Setting starttime of solver to 1604509319986
Command exited with non-zero status 20
0.57 0.04

Time command gave the following runtime for the solver: 610
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854757345
done
initial PDT has 1098 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 1020 leafs
SHOP LEAFS 492
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2483072
NUMBER OF CLAUSES 3111698
NUMBER OF STATE CLAUSES 2993534
NUMBER OF DECOMPOSITION CLAUSES 118164
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.2% 3.8000000000000003% 0.0% 
NUMBER OF PATHS 1020
Starting cryptominisat5.5
Setting starttime of solver to 1604509326682
Command exited with non-zero status 10
1.33 0.10

Time command gave the following runtime for the solver: 1430
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_14;2;1,381 381 m4_do_clear
14;2;1 314 pathaction!3_14;2;1,806
Consider method^6_0;2;4;2;1;1,225 225 m4_do_clear
0;2;4;2;1;1 74 pathaction!6_0;2;4;2;1;1,802
Consider method^2_14;2,511 511 m5_do_clear
14;2 63 pathaction!2_14;2,815
Consider method^3_3;2;4,527 527 m10_do_load_truck
3;2;4 30 pathaction!3_3;2;4,114
Consider method^2_3;2,183 183 _m3_do_put_on_2
3;2 196 pathaction!2_3;2,846
Consider method^1_2,135 135 m2_do_put_on
2 241 pathaction!1_2,434
Consider method^4_11;2;4;1,144 144 m7_do_get_truck
11;2;4;1 141 pathaction!4_11;2;4;1,446
Consider method^2_10;2,187 187 m4_do_clear
10;2 14 pathaction!2_10;2,805
Consider method^4_4;2;4;1,227 227 m7_do_get_truck
4;2;4;1 214 pathaction!4_4;2;4;1,447
Consider method^4_5;2;4;2,95 95 m4_do_clear
5;2;4;2 34 pathaction!4_5;2;4;2,829
Consider method^1_8,662 662 m1_do_put_on
8 282 pathaction!1_8,435
Consider method^4_1;2;1;3,189 189 m6_do_get_truck
1;2;1;3 305 pathaction!4_1;2;1;3,451
Consider method^4_1;2;1;1,374 374 m4_do_clear
1;2;1;1 223 pathaction!4_1;2;1;1,808
Consider method^1_1,99 99 m2_do_put_on
1 249 pathaction!1_1,430
Consider method^2_6;2,562 562 m4_do_clear
6;2 100 pathaction!2_6;2,809
Consider method^4_2;2;1;3,618 618 m6_do_get_truck
2;2;1;3 122 pathaction!4_2;2;1;3,443
Consider method^2_6;1,618 618 m6_do_get_truck
6;1 237 pathaction!2_6;1,443
Consider method^1_6,719 719 m2_do_put_on
6 187 pathaction!1_6,433
Consider method^3_1;2;1,260 260 m5_do_clear
1;2;1 163 pathaction!3_1;2;1,831
Consider method^2_3;4,455 455 m11_do_unload_truck
3;4 318 pathaction!2_3;4,421
Consider method^2_12;1,213 213 m7_do_get_truck
12;1 155 pathaction!2_12;1,447
Consider method^1_0,497 497 m3_do_put_on
0 244 pathaction!1_0,439
Consider method^5_0;2;4;2;3,514 514 m6_do_get_truck
0;2;4;2;3 177 pathaction!5_0;2;4;2;3,441
Consider method^4_0;2;4;1,543 543 m7_do_get_truck
0;2;4;1 172 pathaction!4_0;2;4;1,441
Consider method^1_11,506 506 m3_do_put_on
11 156 pathaction!1_11,436
Consider method^2_10;1,431 431 m7_do_get_truck
10;1 40 pathaction!2_10;1,451
Consider method^1_10,722 722 m2_do_put_on
10 245 pathaction!1_10,427
Consider method^3_4;2;4,539 539 m10_do_load_truck
4;2;4 259 pathaction!3_4;2;4,136
Consider method^3_11;2;4,102 102 m10_do_load_truck
11;2;4 154 pathaction!3_11;2;4,163
Consider method^3_8;2;1,457 457 m5_do_clear
8;2;1 145 pathaction!3_8;2;1,818
Consider method^3_3;4;1,366 366 m4_do_clear
3;4;1 222 pathaction!3_3;4;1,816
Consider method^2_12;2,491 491 m4_do_clear
12;2 161 pathaction!2_12;2,814
Consider method^3_8;3;1,663 663 m6_do_get_truck
8;3;1 218 pathaction!3_8;3;1,450
Consider method^2_0;4,710 710 m11_do_unload_truck
0;4 284 pathaction!2_0;4,404
Consider method^4_3;2;4;1,583 583 m7_do_get_truck
3;2;4;1 271 pathaction!4_3;2;4;1,451
Consider method^3_4;4;1,458 458 m4_do_clear
4;4;1 277 pathaction!3_4;4;1,826
Consider method^2_8;3,194 194 m8_do_lift_crate
8;3 54 pathaction!2_8;3,238
Consider method^3_0;2;4,434 434 m10_do_load_truck
0;2;4 8 pathaction!3_0;2;4,86
Consider method^2_5;2,631 631 _m3_do_put_on_2
5;2 230 pathaction!2_5;2,870
Consider method^2_11;2,737 737 _m3_do_put_on_2
11;2 290 pathaction!2_11;2,884
Consider method^5_0;2;4;2;1,191 191 m5_do_clear
0;2;4;2;1 68 pathaction!5_0;2;4;2;1,833
Consider method^1_7,365 365 m2_do_put_on
7 316 pathaction!1_7,431
Consider method^2_1;2,89 89 m5_do_clear
1;2 146 pathaction!2_1;2,804
Consider method^4_3;2;4;2,290 290 m4_do_clear
3;2;4;2 197 pathaction!4_3;2;4;2,835
Consider method^3_0;4;1,538 538 m4_do_clear
0;4;1 213 pathaction!3_0;4;1,830
Consider method^3_2;2;3,42 42 m6_do_get_truck
2;2;3 206 pathaction!3_2;2;3,449
Consider method^4_2;2;1;1,232 232 m5_do_clear
2;2;1;1 165 pathaction!4_2;2;1;1,823
Consider method^1_9,40 40 m2_do_put_on
9 263 pathaction!1_9,429
Consider method^2_9;1,94 94 m7_do_get_truck
9;1 285 pathaction!2_9;1,442
Consider method^3_5;4;1,716 716 m4_do_clear
5;4;1 184 pathaction!3_5;4;1,811
Consider method^2_5;4,581 581 m11_do_unload_truck
5;4 198 pathaction!2_5;4,420
Consider method^2_0;2,462 462 _m3_do_put_on_2
0;2 181 pathaction!2_0;2,877
Consider method^4_4;2;4;2,319 319 m4_do_clear
4;2;4;2 16 pathaction!4_4;2;4;2,824
Consider method^3_14;3;1,186 186 m6_do_get_truck
14;3;1 295 pathaction!3_14;3;1,447
Consider method^3_11;4;1,645 645 m4_do_clear
11;4;1 38 pathaction!3_11;4;1,825
Consider method^2_7;2,188 188 m4_do_clear
7;2 220 pathaction!2_7;2,823
Consider method^2_8;1,432 432 m4_do_clear
8;1 224 pathaction!2_8;1,837
Consider method^3_8;2;3,663 663 m6_do_get_truck
8;2;3 240 pathaction!3_8;2;3,450
Consider method^4_5;2;4;1,253 253 m7_do_get_truck
5;2;4;1 234 pathaction!4_5;2;4;1,450
Consider method^2_2;2,688 688 m5_do_clear
2;2 31 pathaction!2_2;2,822
Consider method^1_12,734 734 m2_do_put_on
12 111 pathaction!1_12,437
Consider method^2_4;4,17 17 m11_do_unload_truck
4;4 4 pathaction!2_4;4,391
Consider method^1_5,733 733 m3_do_put_on
5 152 pathaction!1_5,428
Consider method^2_7;1,42 42 m6_do_get_truck
7;1 143 pathaction!2_7;1,449
Consider method^2_11;4,692 692 m11_do_unload_truck
11;4 219 pathaction!2_11;4,409
Consider method^2_9;2,432 432 m4_do_clear
9;2 60 pathaction!2_9;2,837
Consider method^2_4;2,184 184 _m3_do_put_on_2
4;2 293 pathaction!2_4;2,900
Consider method^2_8;2,725 725 m5_do_clear
8;2 96 pathaction!2_8;2,821
Consider method^3_2;2;1,115 115 m5_do_clear
2;2;1 150 pathaction!3_2;2;1,834
Consider method^2_2;1,302 302 m7_do_get_truck
2;1 123 pathaction!2_2;1,443
Consider method^1_4,153 153 m3_do_put_on
4 113 pathaction!1_4,440
Consider method^4_8;2;1;1,432 432 m4_do_clear
8;2;1;1 134 pathaction!4_8;2;1;1,837
Consider method^2_14;1,381 381 m4_do_clear
14;1 85 pathaction!2_14;1,806
Consider method^0_,744 744 __top_1
 168 pathaction!0_,902
Consider method^4_11;2;4;2,491 491 m4_do_clear
11;2;4;2 18 pathaction!4_11;2;4;2,814
Consider method^2_14;3,606 606 m8_do_lift_crate
14;3 46 pathaction!2_14;3,235
Consider method^1_13,691 691 m2_do_put_on
13 115 pathaction!1_13,426
Consider method^6_0;2;4;2;1;3,514 514 m6_do_get_truck
0;2;4;2;1;3 288 pathaction!6_0;2;4;2;1;3,441
Consider method^3_1;2;3,189 189 m6_do_get_truck
1;2;3 287 pathaction!3_1;2;3,451
Consider method^1_3,100 100 m3_do_put_on
3 260 pathaction!1_3,438
Consider method^2_13;1,395 395 m7_do_get_truck
13;1 180 pathaction!2_13;1,441
Consider method^2_13;2,118 118 m4_do_clear
13;2 64 pathaction!2_13;2,810
Consider method^4_0;2;4;2,736 736 m5_do_clear
0;2;4;2 43 pathaction!4_0;2;4;2,819
Consider method^2_1;1,694 694 m7_do_get_truck
1;1 208 pathaction!2_1;1,451
Consider method^4_8;2;1;3,253 253 m7_do_get_truck
8;2;1;3 49 pathaction!4_8;2;1;3,450
Consider method^1_14,255 255 m1_do_put_on
14 112 pathaction!1_14,432
Consider method^5_2;2;1;1;1,151 151 m4_do_clear
2;2;1;1;1 125 pathaction!5_2;2;1;1;1,813
Consider method^5_2;2;1;1;3,42 42 m6_do_get_truck
2;2;1;1;3 273 pathaction!5_2;2;1;1;3,449
Consider method^3_14;2;3,713 713 m7_do_get_truck
14;2;3 50 pathaction!3_14;2;3,447
Consider method^3_5;2;4,244 244 m10_do_load_truck
5;2;4 312 pathaction!3_5;2;4,98


CHECKING primitive solution of length 191 ...
true 69 __method_precondition_m10_do_load_truck_10_precondition[crate2,depot2,pallet8,hoist2;]
true 81 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot2;]
true 167 Drive[truck1,distributor2,depot2;]
true 158 __method_precondition_m5_do_clear_5_precondition[crate2,crate3,depot2,hoist2;]
true 132 __method_precondition_m5_do_clear_5_precondition[crate3,crate13,depot2,hoist2;]
true 114 __method_precondition_m4_do_clear_4_precondition[crate13,depot2;]
true 59 nop[;]
true 42 Lift[hoist2,crate13,crate3,depot2;]
true 193 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot2;]
true 266 nop[;]
true 58 Load[hoist2,crate13,truck1,depot2;]
true 126 Lift[hoist2,crate3,crate2,depot2;]
true 269 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot2;]
true 12 nop[;]
true 57 Load[hoist2,crate3,truck1,depot2;]
true 238 Lift[hoist2,crate2,pallet8,depot2;]
true 210 Load[hoist2,crate2,truck1,depot2;]
true 39 Drive[truck1,depot2,depot0;]
true 311 __method_precondition_m11_do_unload_truck_11_precondition[depot0,hoist0,crate2,pallet0,truck1;]
true 6 __method_precondition_m4_do_clear_4_precondition[pallet0,depot0;]
true 95 nop[;]
true 36 Unload[hoist0,crate2,truck1,depot0;]
true 297 Drop[hoist0,crate2,pallet0,depot0;]
true 258 __method_precondition_m2_do_put_on_2_precondition[crate3,truck1;]
true 80 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot1;]
true 106 Drive[truck1,depot0,depot1;]
true 140 __method_precondition_m5_do_clear_5_precondition[pallet1,crate6,depot1,hoist1;]
true 129 __method_precondition_m5_do_clear_5_precondition[crate6,crate7,depot1,hoist1;]
true 28 __method_precondition_m4_do_clear_4_precondition[crate7,depot1;]
true 253 nop[;]
true 232 Lift[hoist1,crate7,crate6,depot1;]
true 173 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot1;]
true 77 nop[;]
true 138 Load[hoist1,crate7,truck1,depot1;]
true 247 Lift[hoist1,crate6,pallet1,depot1;]
true 201 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot1;]
true 239 nop[;]
true 303 Load[hoist1,crate6,truck1,depot1;]
true 10 Unload[hoist1,crate3,truck1,depot1;]
true 195 Drop[hoist1,crate3,pallet1,depot1;]
true 251 __method_precondition_m2_do_put_on_2_precondition[crate7,truck1;]
true 25 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 331 Drive[truck1,depot1,distributor1;]
true 274 __method_precondition_m5_do_clear_5_precondition[pallet4,crate1,distributor1,hoist4;]
true 302 __method_precondition_m5_do_clear_5_precondition[crate1,crate10,distributor1,hoist4;]
true 169 __method_precondition_m5_do_clear_5_precondition[crate10,crate12,distributor1,hoist4;]
true 17 __method_precondition_m4_do_clear_4_precondition[crate12,distributor1;]
true 204 nop[;]
true 67 Lift[hoist4,crate12,crate10,distributor1;]
true 215 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 315 nop[;]
true 216 Load[hoist4,crate12,truck0,distributor1;]
true 265 Lift[hoist4,crate10,crate1,distributor1;]
true 186 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 332 nop[;]
true 91 Load[hoist4,crate10,truck1,distributor1;]
true 257 Lift[hoist4,crate1,pallet4,distributor1;]
true 202 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 19 nop[;]
true 217 Load[hoist4,crate1,truck0,distributor1;]
true 99 Unload[hoist4,crate7,truck1,distributor1;]
true 191 Drop[hoist4,crate7,pallet4,distributor1;]
true 149 __method_precondition_m10_do_load_truck_10_precondition[crate4,depot1,pallet6,hoist1;]
true 79 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot1;]
true 228 Drive[truck1,distributor1,depot1;]
true 292 __method_precondition_m4_do_clear_4_precondition[crate4,depot1;]
true 73 nop[;]
true 192 Lift[hoist1,crate4,pallet6,depot1;]
true 300 Load[hoist1,crate4,truck1,depot1;]
true 329 Drive[truck1,depot1,distributor1;]
true 261 __method_precondition_m11_do_unload_truck_11_precondition[distributor1,hoist4,crate4,crate7,truck1;]
true 211 __method_precondition_m4_do_clear_4_precondition[crate7,distributor1;]
true 308 nop[;]
true 336 Unload[hoist4,crate4,truck1,distributor1;]
true 139 Drop[hoist4,crate4,crate7,distributor1;]
true 199 __method_precondition_m10_do_load_truck_10_precondition[crate9,distributor0,pallet7,hoist3;]
true 148 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 229 Drive[truck1,distributor1,distributor0;]
true 278 __method_precondition_m4_do_clear_4_precondition[crate9,distributor0;]
true 157 nop[;]
true 108 Lift[hoist3,crate9,pallet7,distributor0;]
true 267 Load[hoist3,crate9,truck1,distributor0;]
true 276 Drive[truck1,distributor0,distributor1;]
true 133 __method_precondition_m11_do_unload_truck_11_precondition[distributor1,hoist4,crate9,crate4,truck1;]
true 326 __method_precondition_m4_do_clear_4_precondition[crate4,distributor1;]
true 250 nop[;]
true 44 Unload[hoist4,crate9,truck1,distributor1;]
true 255 Drop[hoist4,crate9,crate4,distributor1;]
true 118 __method_precondition_m10_do_load_truck_10_precondition[crate11,distributor2,crate5,hoist5;]
true 231 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor2;]
true 189 Drive[truck1,distributor1,distributor2;]
true 101 __method_precondition_m4_do_clear_4_precondition[crate11,distributor2;]
true 304 nop[;]
true 37 Lift[hoist5,crate11,crate5,distributor2;]
true 175 Load[hoist5,crate11,truck1,distributor2;]
true 324 Drive[truck1,distributor2,distributor1;]
true 117 __method_precondition_m11_do_unload_truck_11_precondition[distributor1,hoist4,crate11,crate9,truck1;]
true 283 __method_precondition_m4_do_clear_4_precondition[crate9,distributor1;]
true 289 nop[;]
true 334 Unload[hoist4,crate11,truck1,distributor1;]
true 52 Drop[hoist4,crate11,crate9,distributor1;]
true 32 __method_precondition_m2_do_put_on_2_precondition[crate10,truck1;]
true 194 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 321 nop[;]
true 20 __method_precondition_m4_do_clear_4_precondition[crate11,distributor1;]
true 248 nop[;]
true 56 Unload[hoist4,crate10,truck1,distributor1;]
true 164 Drop[hoist4,crate10,crate11,distributor1;]
true 66 __method_precondition_m2_do_put_on_2_precondition[crate1,truck0;]
true 182 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 102 nop[;]
true 142 __method_precondition_m4_do_clear_4_precondition[crate10,distributor1;]
true 279 nop[;]
true 75 Unload[hoist4,crate1,truck0,distributor1;]
true 327 Drop[hoist4,crate1,crate10,distributor1;]
true 313 __method_precondition_m1_do_put_on_1_precondition[crate5,distributor2;]
true 272 __method_precondition_m4_do_clear_4_precondition[crate5,distributor2;]
true 70 nop[;]
true 72 __method_precondition_m5_do_clear_5_precondition[pallet5,crate0,distributor2,hoist5;]
true 275 __method_precondition_m5_do_clear_5_precondition[crate0,crate5,distributor2,hoist5;]
true 127 __method_precondition_m4_do_clear_4_precondition[crate5,distributor2;]
true 41 nop[;]
true 227 Lift[hoist5,crate5,crate0,distributor2;]
true 22 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor2;]
true 48 Drive[truck1,distributor1,distributor2;]
true 212 Load[hoist5,crate5,truck1,distributor2;]
true 105 Lift[hoist5,crate0,pallet5,distributor2;]
true 107 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor2;]
true 94 nop[;]
true 280 Load[hoist5,crate0,truck1,distributor2;]
true 55 __method_precondition_m8_do_lift_crate_8_precondition[crate5,truck1,hoist5,distributor2;]
true 190 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor2;]
true 61 nop[;]
true 33 Unload[hoist5,crate5,truck1,distributor2;]
true 185 Drop[hoist5,crate5,pallet5,distributor2;]
true 65 __method_precondition_m2_do_put_on_2_precondition[crate12,truck0;]
true 51 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor2;]
true 13 Drive[truck0,distributor1,distributor2;]
true 136 __method_precondition_m4_do_clear_4_precondition[crate5,distributor2;]
true 93 nop[;]
true 262 Unload[hoist5,crate12,truck0,distributor2;]
true 246 Drop[hoist5,crate12,crate5,distributor2;]
true 225 __method_precondition_m2_do_put_on_2_precondition[crate6,truck1;]
true 103 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot1;]
true 291 Drive[truck1,distributor2,depot1;]
true 322 __method_precondition_m4_do_clear_4_precondition[pallet6,depot1;]
true 62 nop[;]
true 110 Unload[hoist1,crate6,truck1,depot1;]
true 270 Drop[hoist1,crate6,pallet6,depot1;]
true 328 __method_precondition_m10_do_load_truck_10_precondition[crate8,distributor0,pallet3,hoist3;]
true 23 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor0;]
true 27 Drive[truck0,distributor2,distributor0;]
true 128 __method_precondition_m4_do_clear_4_precondition[crate8,distributor0;]
true 135 nop[;]
true 325 Lift[hoist3,crate8,pallet3,distributor0;]
true 131 Load[hoist3,crate8,truck0,distributor0;]
true 116 Drive[truck0,distributor0,distributor0;]
true 78 __method_precondition_m11_do_unload_truck_11_precondition[distributor0,hoist3,crate8,pallet7,truck0;]
true 207 __method_precondition_m4_do_clear_4_precondition[pallet7,distributor0;]
true 153 nop[;]
true 92 Unload[hoist3,crate8,truck0,distributor0;]
true 317 Drop[hoist3,crate8,pallet7,distributor0;]
true 226 __method_precondition_m2_do_put_on_2_precondition[crate0,truck1;]
true 124 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 335 Drive[truck1,depot1,distributor0;]
true 98 __method_precondition_m4_do_clear_4_precondition[crate8,distributor0;]
true 35 nop[;]
true 47 Unload[hoist3,crate0,truck1,distributor0;]
true 5 Drop[hoist3,crate0,crate8,distributor0;]
true 53 __method_precondition_m2_do_put_on_2_precondition[crate13,truck1;]
true 281 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot2;]
true 176 Drive[truck1,distributor0,depot2;]
true 90 __method_precondition_m4_do_clear_4_precondition[pallet8,depot2;]
true 21 nop[;]
true 174 Unload[hoist2,crate13,truck1,depot2;]
true 233 Drop[hoist2,crate13,pallet8,depot2;]
true 242 __method_precondition_m1_do_put_on_1_precondition[crate14,distributor0;]
true 264 __method_precondition_m4_do_clear_4_precondition[crate14,distributor0;]
true 309 nop[;]
true 89 __method_precondition_m5_do_clear_5_precondition[pallet9,crate14,distributor0,hoist3;]
true 171 __method_precondition_m4_do_clear_4_precondition[crate14,distributor0;]
true 76 nop[;]
true 97 Lift[hoist3,crate14,pallet9,distributor0;]
true 15 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 86 Drive[truck1,depot2,distributor0;]
true 323 Load[hoist3,crate14,truck1,distributor0;]
true 82 __method_precondition_m8_do_lift_crate_8_precondition[crate14,truck1,hoist3,distributor0;]
true 298 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 319 nop[;]
true 71 Unload[hoist3,crate14,truck1,distributor0;]
true 84 Drop[hoist3,crate14,pallet9,distributor0;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 588
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 1176
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 1764
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 2352
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 2940
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 3528
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 4116
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 4704
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 5292
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 5880
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 6468
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 7056
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 7644
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 8232
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 8820
TSTG: 2147483647
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 16
ICAPS: 9408
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 9996
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 10584
TSTG: 2147483647
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 19
ICAPS: 11172
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 20
ICAPS: 11760
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 12348
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 22
ICAPS: 12936
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 23
ICAPS: 13524
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 24
ICAPS: 14112
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 25
ICAPS: 14700
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 112
  lower bound = 24

Running SAT search with cost bound = 68
==================================================
  upper bound = 112
  lower bound = 24
LEN 68
ICAPS: 39984
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854748343
DP max: 20
Taking minimum: 20
Generating initial PDT ... done
initial PDT has 3633 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 3555 leafs
SHOP LEAFS 1506
Assignment implications
Generating clauses representing decomposition ... done
At most K: 2646ms input: 24193 K = 68
Number of actions Formula: 2815ms for 3314372 clauses
Layers: 12 paths 3555
Layer 1 g 0 = 0 - 1 / 0 clauses 6324346
Layer 1 g 1 = 2 - 3 / 2 clauses 6324346
Layer 1 g 2 = 4 - 5 / 4 clauses 6324346
Layer 1 g 3 = 6 - 7 / 6 clauses 6324346
Layer 1 g 4 = 8 - 9 / 8 clauses 6324346
Layer 1 g 5 = 10 - 11 / 10Still waiting ... running for 88650 will abort at 9223372036854748343

RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 136.443 MEMPEAK_KBS 8008067.072
