PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/childsnack/domain.hddl instances/childsnack/p07.hddl"


Planner Configuration
=====================
Domain: instances/childsnack/domain.hddl
Problem: instances/childsnack/p07.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p07.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 13
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 68
Compiling negative preconditions ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 68
Compiling split parameters ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 68
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 68
Grounded planning graph ... done in 1060ms.
	Number of Grounded Actions 21301
	Number of Grounded Literals 224
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 68
Two Way TDG ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 68
Grounding ... done.
	number of abstract tasks = 14
	number of tasks = 19127
	number of decomposition methods = 48678
	number of predicates = 252
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 14
	number of tasks = 19127
	number of decomposition methods = 48678
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 2982ms.
	Number of Grounded Actions 19113
	Number of Grounded Literals 168
	number of abstract tasks = 14
	number of tasks = 19127
	number of decomposition methods = 48678
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 14
	number of tasks = 19127
	number of decomposition methods = 48678
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 831ms.
	Number of Grounded Actions 19113
	Number of Grounded Literals 168
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 15
	number of tasks = 19128
	number of decomposition methods = 48679
	number of predicates = 168
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 16226
	number of epsilon methods = 0
	number of primitive tasks = 19113
	number of constants = 0
Tasks 19113 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854734249ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854732839
done
initial PDT has 84 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 84 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 42084
Size 42083 at 0/19113
Size 31173 at 500/19113
Size 31173 at 1000/19113
Size 31173 at 1500/19113
Size 24338 at 2000/19113
Size 24338 at 2500/19113
Size 24338 at 3000/19113
Size 24338 at 3500/19113
Size 24338 at 4000/19113
Size 24338 at 4500/19113
Size 24338 at 5000/19113
Size 24338 at 5500/19113
Size 24338 at 6000/19113
Size 24338 at 6500/19113
Size 24338 at 7000/19113
Size 24338 at 7500/19113
Size 24338 at 8000/19113
Size 24338 at 8500/19113
Size 24338 at 9000/19113
Size 24338 at 9500/19113
Size 24338 at 10000/19113
Size 24338 at 10500/19113
Size 24338 at 11000/19113
Size 24338 at 11500/19113
Size 24338 at 12000/19113
Size 24338 at 12500/19113
Size 24338 at 13000/19113
Size 24338 at 13500/19113
Size 24338 at 14000/19113
Size 24338 at 14500/19113
Size 24338 at 15000/19113
Size 24338 at 15500/19113
Size 24259 at 16000/19113
Size 20546 at 16500/19113
Size 20297 at 17000/19113
Size 20297 at 17500/19113
Size 20297 at 18000/19113
Size 20297 at 18500/19113
Size 20297 at 19000/19113
Size 20297
Size 20038 at 0/19113
Size 4071 at 500/19113
Size 4071 at 1000/19113
Size 4071 at 1500/19113
Size 4071 at 2000/19113
Size 4071 at 2500/19113
Size 4071 at 3000/19113
Size 4071 at 3500/19113
Size 4071 at 4000/19113
Size 4071 at 4500/19113
Size 4071 at 5000/19113
Size 4071 at 5500/19113
Size 4071 at 6000/19113
Size 4071 at 6500/19113
Size 4071 at 7000/19113
Size 4071 at 7500/19113
Size 4071 at 8000/19113
Size 4071 at 8500/19113
Size 4071 at 9000/19113
Size 4071 at 9500/19113
Size 4071 at 10000/19113
Size 4071 at 10500/19113
Size 4071 at 11000/19113
Size 4071 at 11500/19113
Size 4071 at 12000/19113
Size 4071 at 12500/19113
Size 4071 at 13000/19113
Size 4071 at 13500/19113
Size 4071 at 14000/19113
Size 4071 at 14500/19113
Size 4071 at 15000/19113
Size 4071 at 15500/19113
Size 2741 at 16000/19113
Size 227 at 16500/19113
Size 227 at 17000/19113
Size 227 at 17500/19113
Size 227 at 18000/19113
Size 227 at 18500/19113
Size 227 at 19000/19113
Size 227
Size 227 at 0/19113
Size 227 at 500/19113
Size 227 at 1000/19113
Size 227 at 1500/19113
Size 227 at 2000/19113
Size 227 at 2500/19113
Size 227 at 3000/19113
Size 227 at 3500/19113
Size 227 at 4000/19113
Size 227 at 4500/19113
Size 227 at 5000/19113
Size 227 at 5500/19113
Size 227 at 6000/19113
Size 227 at 6500/19113
Size 227 at 7000/19113
Size 227 at 7500/19113
Size 227 at 8000/19113
Size 227 at 8500/19113
Size 227 at 9000/19113
Size 227 at 9500/19113
Size 227 at 10000/19113
Size 227 at 10500/19113
Size 227 at 11000/19113
Size 227 at 11500/19113
Size 227 at 12000/19113
Size 227 at 12500/19113
Size 227 at 13000/19113
Size 227 at 13500/19113
Size 227 at 14000/19113
Size 227 at 14500/19113
Size 227 at 15000/19113
Size 227 at 15500/19113
Size 227 at 16000/19113
Size 227 at 16500/19113
Size 227 at 17000/19113
Size 227 at 17500/19113
Size 227 at 18000/19113
Size 227 at 18500/19113
Size 227 at 19000/19113
Size 227
Invariant time: 4.103
Number of invariants: 227
Invariant Clauses 19295
NUMBER OF CLAUSES 858671
NUMBER OF STATE CLAUSES 186805
NUMBER OF DECOMPOSITION CLAUSES 671866
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 21.76% 78.24% 0.0% 
NUMBER OF PATHS 84
Starting cryptominisat5.5
Setting starttime of solver to 1604503905316
Command exited with non-zero status 10
0.67 0.02

Time command gave the following runtime for the solver: 690
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_3,26252 26252 m0_serve
3 94 pathaction!1_3,19115
Consider method^1_13,1168 1168 m0_serve
13 29 pathaction!1_13,19118
Consider method^1_2,35222 35222 m1_serve
2 81 pathaction!1_2,19122
Consider method^1_0,16439 16439 m0_serve
0 75 pathaction!1_0,19114
Consider method^1_6,34036 34036 m1_serve
6 12 pathaction!1_6,19116
Consider method^1_11,21271 21271 m1_serve
11 88 pathaction!1_11,19125
Consider method^1_4,138 138 m0_serve
4 83 pathaction!1_4,19117
Consider method^1_7,603 603 m0_serve
7 63 pathaction!1_7,19113
Consider method^1_12,14568 14568 m1_serve
12 23 pathaction!1_12,19121
Consider method^1_1,9649 9649 m1_serve
1 61 pathaction!1_1,19119
Consider method^1_5,33210 33210 m1_serve
5 70 pathaction!1_5,19124
Consider method^1_10,36521 36521 m1_serve
10 79 pathaction!1_10,19126
Consider method^1_8,31382 31382 m1_serve
8 56 pathaction!1_8,19123
Consider method^0_,48678 48678 __top_1
 3 pathaction!0_,19127
Consider method^1_9,36618 36618 m1_serve
9 51 pathaction!1_9,19120


CHECKING primitive solution of length 84 ...
true 54 __method_precondition_m0_serve_0_precondition[child1,sandw9,table2,bread13,content7;]
true 65 make_sandwich_no_gluten[sandw9,bread13,content7;]
true 5 put_on_tray[sandw9,tray3;kitchen]
true 36 move_tray[tray3,kitchen,table2;]
true 90 serve_sandwich_no_gluten[sandw9,child1,tray3,table2;]
true 74 move_tray[tray3,table2,kitchen;]
true 8 __method_precondition_m1_serve_1_precondition[sandw13,table3,content4,bread8,child2;]
true 95 make_sandwich[sandw13,bread8,content4;]
true 60 put_on_tray[sandw13,tray1;kitchen]
true 48 move_tray[tray1,kitchen,table3;]
true 47 serve_sandwich[sandw13,child2,tray1,table3;]
true 69 move_tray[tray1,table3,kitchen;]
true 6 __method_precondition_m1_serve_1_precondition[sandw10,table3,content9,bread7,child3;]
true 67 make_sandwich[sandw10,bread7,content9;]
true 21 put_on_tray[sandw10,tray2;kitchen]
true 15 move_tray[tray2,kitchen,table3;]
true 91 serve_sandwich[sandw10,child3,tray2,table3;]
true 34 move_tray[tray2,table3,kitchen;]
true 84 __method_precondition_m0_serve_0_precondition[child4,sandw11,table3,bread5,content12;]
true 37 make_sandwich_no_gluten[sandw11,bread5,content12;]
true 49 put_on_tray[sandw11,tray2;kitchen]
true 38 move_tray[tray2,kitchen,table3;]
true 89 serve_sandwich_no_gluten[sandw11,child4,tray2,table3;]
true 2 move_tray[tray2,table3,kitchen;]
true 26 __method_precondition_m0_serve_0_precondition[child5,sandw7,table2,bread3,content2;]
true 98 make_sandwich_no_gluten[sandw7,bread3,content2;]
true 96 put_on_tray[sandw7,tray1;kitchen]
true 4 move_tray[tray1,kitchen,table2;]
true 31 serve_sandwich_no_gluten[sandw7,child5,tray1,table2;]
true 27 move_tray[tray1,table2,kitchen;]
true 11 __method_precondition_m1_serve_1_precondition[sandw6,table1,content3,bread14,child6;]
true 72 make_sandwich[sandw6,bread14,content3;]
true 86 put_on_tray[sandw6,tray1;kitchen]
true 85 move_tray[tray1,kitchen,table1;]
true 53 serve_sandwich[sandw6,child6,tray1,table1;]
true 42 move_tray[tray1,table1,kitchen;]
true 76 __method_precondition_m1_serve_1_precondition[sandw3,table3,content1,bread10,child7;]
true 45 make_sandwich[sandw3,bread10,content1;]
true 35 put_on_tray[sandw3,tray3;kitchen]
true 7 move_tray[tray3,kitchen,table3;]
true 82 serve_sandwich[sandw3,child7,tray3,table3;]
true 68 move_tray[tray3,table3,kitchen;]
true 19 __method_precondition_m0_serve_0_precondition[child8,sandw14,table1,bread6,content5;]
true 78 make_sandwich_no_gluten[sandw14,bread6,content5;]
true 13 put_on_tray[sandw14,tray3;kitchen]
true 64 move_tray[tray3,kitchen,table1;]
true 93 serve_sandwich_no_gluten[sandw14,child8,tray3,table1;]
true 71 move_tray[tray3,table1,kitchen;]
true 39 __method_precondition_m1_serve_1_precondition[sandw16,table1,content8,bread1,child9;]
true 33 make_sandwich[sandw16,bread1,content8;]
true 30 put_on_tray[sandw16,tray3;kitchen]
true 97 move_tray[tray3,kitchen,table1;]
true 66 serve_sandwich[sandw16,child9,tray3,table1;]
true 16 move_tray[tray3,table1,kitchen;]
true 59 __method_precondition_m1_serve_1_precondition[sandw1,table3,content13,bread4,child10;]
true 28 make_sandwich[sandw1,bread4,content13;]
true 58 put_on_tray[sandw1,tray1;kitchen]
true 80 move_tray[tray1,kitchen,table3;]
true 10 serve_sandwich[sandw1,child10,tray1,table3;]
true 46 move_tray[tray1,table3,kitchen;]
true 43 __method_precondition_m1_serve_1_precondition[sandw8,table1,content14,bread12,child11;]
true 9 make_sandwich[sandw8,bread12,content14;]
true 57 put_on_tray[sandw8,tray1;kitchen]
true 18 move_tray[tray1,kitchen,table1;]
true 22 serve_sandwich[sandw8,child11,tray1,table1;]
true 40 move_tray[tray1,table1,kitchen;]
true 52 __method_precondition_m1_serve_1_precondition[sandw4,table1,content10,bread9,child12;]
true 44 make_sandwich[sandw4,bread9,content10;]
true 32 put_on_tray[sandw4,tray1;kitchen]
true 87 move_tray[tray1,kitchen,table1;]
true 25 serve_sandwich[sandw4,child12,tray1,table1;]
true 62 move_tray[tray1,table1,kitchen;]
true 92 __method_precondition_m1_serve_1_precondition[sandw17,table1,content6,bread11,child13;]
true 50 make_sandwich[sandw17,bread11,content6;]
true 73 put_on_tray[sandw17,tray3;kitchen]
true 41 move_tray[tray3,kitchen,table1;]
true 0 serve_sandwich[sandw17,child13,tray3,table1;]
true 1 move_tray[tray3,table1,kitchen;]
true 17 __method_precondition_m0_serve_0_precondition[child14,sandw18,table2,bread2,content11;]
true 14 make_sandwich_no_gluten[sandw18,bread2,content11;]
true 20 put_on_tray[sandw18,tray2;kitchen]
true 55 move_tray[tray2,kitchen,table2;]
true 77 serve_sandwich_no_gluten[sandw18,child14,tray2,table2;]
true 24 move_tray[tray2,table2,kitchen;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 32
TSTG: 2
Method: 1
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 64
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 96
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 128
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 160
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 192
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 224
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 256
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 288
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 320
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 352
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 384
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 416
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 448
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 480
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 512
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 544
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 576
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 608
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 640
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 672
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 704
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 736
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 768
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 800
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 832
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 864
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 896
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 928
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 960
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 992
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 1024
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 1056
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 1088
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 1120
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 1152
TSTG: 2
Method: 8

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.106 MEMPEAK_KBS 2420069.376
