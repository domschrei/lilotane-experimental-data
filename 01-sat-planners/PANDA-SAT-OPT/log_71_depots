PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p11.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p11.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p11.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Grounded planning graph ... done in 376ms.
	Number of Grounded Actions 715
	Number of Grounded Literals 220
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Grounding ... done.
	number of abstract tasks = 193
	number of tasks = 609
	number of decomposition methods = 477
	number of predicates = 232
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 193
	number of tasks = 609
	number of decomposition methods = 477
	number of predicates = 171
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 72ms.
	Number of Grounded Actions 416
	Number of Grounded Literals 171
	number of abstract tasks = 193
	number of tasks = 609
	number of decomposition methods = 477
	number of predicates = 171
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 193
	number of tasks = 609
	number of decomposition methods = 477
	number of predicates = 171
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 194
	number of tasks = 610
	number of decomposition methods = 478
	number of predicates = 171
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 194
	number of tasks = 610
	number of decomposition methods = 478
	number of predicates = 171
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 34ms.
	Number of Grounded Actions 416
	Number of Grounded Literals 171
	number of abstract tasks = 194
	number of tasks = 610
	number of decomposition methods = 478
	number of predicates = 171
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 194
	number of tasks = 610
	number of decomposition methods = 478
	number of predicates = 171
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 194
	number of tasks = 610
	number of decomposition methods = 478
	number of predicates = 171
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 194
	number of tasks = 610
	number of decomposition methods = 478
	number of predicates = 171
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 194
	number of tasks = 610
	number of decomposition methods = 478
	number of predicates = 171
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 226
	number of epsilon methods = 0
	number of primitive tasks = 416
	number of constants = 0
Tasks 416 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772362ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854772288
done
initial PDT has 30 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 20 leafs
SHOP LEAFS 20
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 43605
Size 43605 at 0/416
Size 24846
Size 24846 at 0/416
Size 13256
Size 13256 at 0/416
Size 5524
Size 5524 at 0/416
Size 2797
Size 2797 at 0/416
Size 2087
Size 2087 at 0/416
Size 1910
Size 1910 at 0/416
Size 1865
Size 1865 at 0/416
Size 1856
Size 1856 at 0/416
Size 1856
Invariant time: 0.484
Number of invariants: 1856
Invariant Clauses 38976
NUMBER OF CLAUSES 46163
NUMBER OF STATE CLAUSES 45997
NUMBER OF DECOMPOSITION CLAUSES 166
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.64% 0.36% 0.0% 
NUMBER OF PATHS 20
Starting cryptominisat5.5
Setting starttime of solver to 1604508699679
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 142 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854770879
done
PDT has 80 leafs
SHOP LEAFS 50
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 150336
NUMBER OF CLAUSES 184477
NUMBER OF STATE CLAUSES 179505
NUMBER OF DECOMPOSITION CLAUSES 4972
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.3% 2.7% 0.0% 
NUMBER OF PATHS 80
Starting cryptominisat5.5
Setting starttime of solver to 1604508700663
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 282 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854770024
done
PDT has 180 leafs
SHOP LEAFS 98
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 335936
NUMBER OF CLAUSES 418888
NUMBER OF STATE CLAUSES 402415
NUMBER OF DECOMPOSITION CLAUSES 16473
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.07000000000001% 3.93% 0.0% 
NUMBER OF PATHS 180
Starting cryptominisat5.5
Setting starttime of solver to 1604508701655
Command exited with non-zero status 20
0.10 0.01

Time command gave the following runtime for the solver: 110
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 427 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854769002
done
PDT has 385 leafs
SHOP LEAFS 210
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 716416
NUMBER OF CLAUSES 893796
NUMBER OF STATE CLAUSES 858285
NUMBER OF DECOMPOSITION CLAUSES 35511
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.03% 3.97% 0.0% 
NUMBER OF PATHS 385
Starting cryptominisat5.5
Setting starttime of solver to 1604508703413
Command exited with non-zero status 20
0.21 0.02

Time command gave the following runtime for the solver: 230
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 518 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854767089
done
PDT has 490 leafs
SHOP LEAFS 252
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 911296
NUMBER OF CLAUSES 1135586
NUMBER OF STATE CLAUSES 1091951
NUMBER OF DECOMPOSITION CLAUSES 43635
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.16% 3.84% 0.0% 
NUMBER OF PATHS 490
Starting cryptominisat5.5
Setting starttime of solver to 1604508705487
Command exited with non-zero status 20
0.25 0.02

Time command gave the following runtime for the solver: 270
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 574 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 560 leafs
SHOP LEAFS 280
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854764856
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1041216
NUMBER OF CLAUSES 1295648
NUMBER OF STATE CLAUSES 1247443
NUMBER OF DECOMPOSITION CLAUSES 48205
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.28% 3.72% 0.0% 
NUMBER OF PATHS 560
Starting cryptominisat5.5
Setting starttime of solver to 1604508708170
Command exited with non-zero status 10
0.45 0.04

Time command gave the following runtime for the solver: 490
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_1;2,10 10 m5_do_clear
1;2 204 pathaction!2_1;2,564
Consider method^4_0;2;4;1,81 81 m6_do_get_truck
0;2;4;1 71 pathaction!4_0;2;4;1,133
Consider method^3_6;4;1,245 245 m4_do_clear
6;4;1 143 pathaction!3_6;4;1,546
Consider method^5_0;2;4;2;1,63 63 m5_do_clear
0;2;4;2;1 96 pathaction!5_0;2;4;2;1,538
Consider method^3_1;2;3,342 342 m6_do_get_truck
1;2;3 183 pathaction!3_1;2;3,129
Consider method^2_8;2,390 390 m4_do_clear
8;2 105 pathaction!2_8;2,541
Consider method^1_8,189 189 m2_do_put_on
8 217 pathaction!1_8,502
Consider method^5_6;2;4;2;3,389 389 m7_do_get_truck
6;2;4;2;3 179 pathaction!5_6;2;4;2;3,139
Consider method^2_2;4,148 148 m11_do_unload_truck
2;4 46 pathaction!2_2;4,185
Consider method^6_2;2;4;2;1;1,244 244 m4_do_clear
2;2;4;2;1;1 97 pathaction!6_2;2;4;2;1;1,565
Consider method^4_2;2;4;2,68 68 m5_do_clear
2;2;4;2 83 pathaction!4_2;2;4;2,556
Consider method^6_0;2;4;2;1;3,81 81 m6_do_get_truck
0;2;4;2;1;3 175 pathaction!6_0;2;4;2;1;3,133
Consider method^1_0,52 52 m3_do_put_on
0 194 pathaction!1_0,504
Consider method^5_0;2;4;2;3,260 260 m7_do_get_truck
0;2;4;2;3 207 pathaction!5_0;2;4;2;3,129
Consider method^2_5;1,171 171 m7_do_get_truck
5;1 18 pathaction!2_5;1,137
Consider method^2_5;2,212 212 m4_do_clear
5;2 56 pathaction!2_5;2,562
Consider method^3_0;4;1,26 26 m5_do_clear
0;4;1 201 pathaction!3_0;4;1,559
Consider method^6_2;2;4;2;1;3,437 437 m6_do_get_truck
2;2;4;2;1;3 113 pathaction!6_2;2;4;2;1;3,138
Consider method^1_4,86 86 m2_do_put_on
4 107 pathaction!1_4,507
Consider method^4_6;2;4;2,154 154 m5_do_clear
6;2;4;2 148 pathaction!4_6;2;4;2,557
Consider method^1_5,286 286 m2_do_put_on
5 176 pathaction!1_5,500
Consider method^2_2;2,306 306 _m3_do_put_on_2
2;2 0 pathaction!2_2;2,67
Consider method^1_3,43 43 m2_do_put_on
3 151 pathaction!1_3,501
Consider method^3_0;2;4,431 431 m10_do_load_truck
0;2;4 196 pathaction!3_0;2;4,229
Consider method^2_9;1,437 437 m6_do_get_truck
9;1 189 pathaction!2_9;1,138
Consider method^4_0;4;1;1,335 335 m4_do_clear
0;4;1;1 197 pathaction!4_0;4;1;1,554
Consider method^5_6;2;4;2;1,102 102 m4_do_clear
6;2;4;2;1 133 pathaction!5_6;2;4;2;1,551
Consider method^5_2;2;4;2;3,354 354 m7_do_get_truck
2;2;4;2;3 31 pathaction!5_2;2;4;2;3,130
Consider method^2_0;2,467 467 _m3_do_put_on_2
0;2 89 pathaction!2_0;2,76
Consider method^1_7,336 336 m2_do_put_on
7 8 pathaction!1_7,503
Consider method^0_,477 477 __top_1
 161 pathaction!0_,609
Consider method^1_6,296 296 m3_do_put_on
6 21 pathaction!1_6,506
Consider method^5_2;2;4;2;1,316 316 m5_do_clear
2;2;4;2;1 73 pathaction!5_2;2;4;2;1,542
Consider method^3_1;2;1,351 351 m4_do_clear
1;2;1 112 pathaction!3_1;2;1,548
Consider method^2_9;2,48 48 m4_do_clear
9;2 19 pathaction!2_9;2,539
Consider method^4_0;4;1;3,188 188 m7_do_get_truck
0;4;1;3 144 pathaction!4_0;4;1;3,140
Consider method^2_4;2,66 66 m4_do_clear
4;2 103 pathaction!2_4;2,553
Consider method^2_7;2,60 60 m4_do_clear
7;2 38 pathaction!2_7;2,552
Consider method^3_6;2;4,427 427 m10_do_load_truck
6;2;4 68 pathaction!3_6;2;4,206
Consider method^3_2;2;4,381 381 m10_do_load_truck
2;2;4 158 pathaction!3_2;2;4,203
Consider method^6_0;2;4;2;1;1,35 35 m4_do_clear
0;2;4;2;1;1 33 pathaction!6_0;2;4;2;1;1,555
Consider method^2_4;1,162 162 m7_do_get_truck
4;1 111 pathaction!2_4;1,131
Consider method^2_3;1,461 461 m7_do_get_truck
3;1 136 pathaction!2_3;1,135
Consider method^4_0;2;4;2,326 326 m5_do_clear
0;2;4;2 155 pathaction!4_0;2;4;2,549
Consider method^4_2;2;4;1,59 59 m7_do_get_truck
2;2;4;1 64 pathaction!4_2;2;4;1,138
Consider method^1_9,285 285 m2_do_put_on
9 181 pathaction!1_9,498
Consider method^1_1,27 27 m2_do_put_on
1 87 pathaction!1_1,499
Consider method^2_7;1,199 199 m7_do_get_truck
7;1 20 pathaction!2_7;1,138
Consider method^2_3;2,284 284 m4_do_clear
3;2 140 pathaction!2_3;2,543
Consider method^3_2;4;1,405 405 m4_do_clear
2;4;1 114 pathaction!3_2;4;1,538
Consider method^4_6;2;4;1,447 447 m7_do_get_truck
6;2;4;1 156 pathaction!4_6;2;4;1,136
Consider method^2_0;4,355 355 m11_do_unload_truck
0;4 173 pathaction!2_0;4,195
Consider method^2_1;1,238 238 m7_do_get_truck
1;1 134 pathaction!2_1;1,129
Consider method^1_2,379 379 m3_do_put_on
2 185 pathaction!1_2,505
Consider method^2_6;2,51 51 _m3_do_put_on_2
6;2 65 pathaction!2_6;2,50
Consider method^2_8;1,72 72 m7_do_get_truck
8;1 90 pathaction!2_8;1,130
Consider method^2_6;4,197 197 m11_do_unload_truck
6;4 195 pathaction!2_6;4,190


CHECKING primitive solution of length 123 ...
true 141 __method_precondition_m10_do_load_truck_10_precondition[crate4,depot2,crate2,hoist2;]
true 137 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot2;]
true 22 nop[;]
true 58 __method_precondition_m5_do_clear_5_precondition[crate4,crate5,depot2,hoist2;]
true 150 __method_precondition_m5_do_clear_5_precondition[crate5,crate9,depot2,hoist2;]
true 191 __method_precondition_m4_do_clear_4_precondition[crate9,depot2;]
true 70 nop[;]
true 101 Lift[hoist2,crate9,crate5,depot2;]
true 157 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot2;]
true 48 nop[;]
true 202 Load[hoist2,crate9,truck0,depot2;]
true 49 Lift[hoist2,crate5,crate4,depot2;]
true 75 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot2;]
true 39 Drive[truck1,distributor0,depot2;]
true 26 Load[hoist2,crate5,truck1,depot2;]
true 177 Lift[hoist2,crate4,crate2,depot2;]
true 59 Load[hoist2,crate4,truck0,depot2;]
true 192 Drive[truck0,depot2,depot0;]
true 128 __method_precondition_m11_do_unload_truck_11_precondition[hoist0,crate4,pallet0,truck0,depot0;]
true 29 __method_precondition_m5_do_clear_5_precondition[pallet0,crate1,depot0,hoist0;]
true 72 __method_precondition_m4_do_clear_4_precondition[crate1,depot0;]
true 77 nop[;]
true 36 Lift[hoist0,crate1,pallet0,depot0;]
true 16 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot0;]
true 109 Drive[truck1,depot2,depot0;]
true 138 Load[hoist0,crate1,truck1,depot0;]
true 88 Unload[hoist0,crate4,truck0,depot0;]
true 35 Drop[hoist0,crate4,pallet0,depot0;]
true 168 __method_precondition_m2_do_put_on_2_precondition[crate5,truck1;]
true 131 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot2;]
true 162 Drive[truck1,depot0,depot2;]
true 61 __method_precondition_m5_do_clear_5_precondition[pallet2,crate2,depot2,hoist2;]
true 118 __method_precondition_m4_do_clear_4_precondition[crate2,depot2;]
true 80 nop[;]
true 108 Lift[hoist2,crate2,pallet2,depot2;]
true 187 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot2;]
true 182 nop[;]
true 66 Load[hoist2,crate2,truck1,depot2;]
true 184 Unload[hoist2,crate5,truck1,depot2;]
true 102 Drop[hoist2,crate5,pallet2,depot2;]
true 94 __method_precondition_m10_do_load_truck_10_precondition[crate6,distributor2,pallet5,hoist5;]
true 92 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor2;]
true 15 Drive[truck1,depot2,distributor2;]
true 216 __method_precondition_m5_do_clear_5_precondition[crate6,crate7,distributor2,hoist5;]
true 30 __method_precondition_m5_do_clear_5_precondition[crate7,crate8,distributor2,hoist5;]
true 13 __method_precondition_m4_do_clear_4_precondition[crate8,distributor2;]
true 129 nop[;]
true 47 Lift[hoist5,crate8,crate7,distributor2;]
true 215 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor2;]
true 23 nop[;]
true 93 Load[hoist5,crate8,truck1,distributor2;]
true 24 Lift[hoist5,crate7,crate6,distributor2;]
true 50 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor2;]
true 34 Drive[truck0,depot0,distributor2;]
true 130 Load[hoist5,crate7,truck0,distributor2;]
true 7 Lift[hoist5,crate6,pallet5,distributor2;]
true 6 Load[hoist5,crate6,truck1,distributor2;]
true 12 Drive[truck1,distributor2,depot2;]
true 174 __method_precondition_m11_do_unload_truck_11_precondition[hoist2,crate6,crate5,truck1,depot2;]
true 199 __method_precondition_m4_do_clear_4_precondition[crate5,depot2;]
true 91 nop[;]
true 41 Unload[hoist2,crate6,truck1,depot2;]
true 152 Drop[hoist2,crate6,crate5,depot2;]
true 106 __method_precondition_m2_do_put_on_2_precondition[crate8,truck1;]
true 5 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 193 Drive[truck1,depot2,distributor0;]
true 57 __method_precondition_m4_do_clear_4_precondition[pallet3,distributor0;]
true 11 nop[;]
true 43 Unload[hoist3,crate8,truck1,distributor0;]
true 165 Drop[hoist3,crate8,pallet3,distributor0;]
true 209 __method_precondition_m2_do_put_on_2_precondition[crate1,truck1;]
true 145 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 125 Drive[truck1,distributor0,distributor1;]
true 147 __method_precondition_m4_do_clear_4_precondition[pallet4,distributor1;]
true 32 nop[;]
true 132 Unload[hoist4,crate1,truck1,distributor1;]
true 123 Drop[hoist4,crate1,pallet4,distributor1;]
true 2 __method_precondition_m2_do_put_on_2_precondition[crate7,truck0;]
true 121 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 10 Drive[truck0,distributor2,distributor1;]
true 42 __method_precondition_m4_do_clear_4_precondition[crate1,distributor1;]
true 154 nop[;]
true 210 Unload[hoist4,crate7,truck0,distributor1;]
true 25 Drop[hoist4,crate7,crate1,distributor1;]
true 146 __method_precondition_m10_do_load_truck_10_precondition[crate0,depot1,pallet1,hoist1;]
true 139 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot1;]
true 99 Drive[truck0,distributor1,depot1;]
true 28 __method_precondition_m5_do_clear_5_precondition[crate0,crate3,depot1,hoist1;]
true 85 __method_precondition_m4_do_clear_4_precondition[crate3,depot1;]
true 135 nop[;]
true 170 Lift[hoist1,crate3,crate0,depot1;]
true 53 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot1;]
true 218 Drive[truck1,distributor1,depot1;]
true 160 Load[hoist1,crate3,truck1,depot1;]
true 63 Lift[hoist1,crate0,pallet1,depot1;]
true 81 Load[hoist1,crate0,truck0,depot1;]
true 78 Drive[truck0,depot1,distributor1;]
true 95 __method_precondition_m11_do_unload_truck_11_precondition[hoist4,crate0,crate7,truck0,distributor1;]
true 205 __method_precondition_m4_do_clear_4_precondition[crate7,distributor1;]
true 120 nop[;]
true 115 Unload[hoist4,crate0,truck0,distributor1;]
true 119 Drop[hoist4,crate0,crate7,distributor1;]
true 52 __method_precondition_m2_do_put_on_2_precondition[crate2,truck1;]
true 198 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor2;]
true 171 Drive[truck1,depot1,distributor2;]
true 67 __method_precondition_m4_do_clear_4_precondition[pallet5,distributor2;]
true 9 nop[;]
true 178 Unload[hoist5,crate2,truck1,distributor2;]
true 172 Drop[hoist5,crate2,pallet5,distributor2;]
true 186 __method_precondition_m2_do_put_on_2_precondition[crate9,truck0;]
true 169 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor2;]
true 82 Drive[truck0,distributor1,distributor2;]
true 188 __method_precondition_m4_do_clear_4_precondition[crate2,distributor2;]
true 149 nop[;]
true 124 Unload[hoist5,crate9,truck0,distributor2;]
true 117 Drop[hoist5,crate9,crate2,distributor2;]
true 55 __method_precondition_m2_do_put_on_2_precondition[crate3,truck1;]
true 163 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor2;]
true 211 nop[;]
true 86 __method_precondition_m4_do_clear_4_precondition[crate9,distributor2;]
true 100 nop[;]
true 84 Unload[hoist5,crate3,truck1,distributor2;]
true 37 Drop[hoist5,crate3,crate9,distributor2;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 390
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 780
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 1170
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 1560
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 1950
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 2340
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 2730
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 3120
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 3510
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 3900
TSTG: 9
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 11
ICAPS: 4290
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 4680
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 5070
TSTG: 9
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 14
ICAPS: 5460
TSTG: 9
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 15
ICAPS: 5850
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 6240
TSTG: 9
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 17
ICAPS: 6630
TSTG: 9
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 18
ICAPS: 7020
TSTG: 9
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 19
ICAPS: 7410
TSTG: 9
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 20
ICAPS: 7800
TSTG: 9
Method: 2147483647
DP max: 7
Taking minimum: 7
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 73
  lower bound = 19

Running SAT search with cost bound = 46
==================================================
  upper bound = 73
  lower bound = 19
LEN 46
ICAPS: 17940
TSTG: 9
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854760950
DP max: 10
Taking minimum: 9
Generating initial PDT ... done
initial PDT has 605 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 605 leafs
SHOP LEAFS 298
Assignment implications
Generating clauses representing decomposition ... done
At most K: 220ms input: 2772 K = 46
Number of actions Formula: 253ms for 257749 clauses
Layers: 10 paths 605
Layer 1 g 0 = 0 - 1 / 0 clauses 183921
Layer 1 g 1 = 2 - 3 / 2 clauses 183921
Layer 1 g 2 = 4 - 5 / 4 clauses 183921
Layer 1 g 3 = 6 - 7 / 6 clauses 183921
Layer 1 g 4 = 8 - 9 / 8 clauses 183921
Layer 1 g 5 = 10 - 11 / 10 clauses 183921
Layer 1 g 6 = 12 - 13 / 12 clauses 183921
Layer 1 g 7 = 14 - 15 / 14 clauses 183921
Layer 1 g 8 = 16 - 17 / 16 clauses 183921
Layer 1 g 9 = 18 - 19 / 18 clauses 183921
Layer 1 g 10 = 20 - 21 / 20 clauses 183921
Layer 1 g 11 = 22 - 23 / 22 clauses 183921
Layer 1 g 12 = 24 - 25 / 24 clauses 183921
Layer 1 g 13 = 26 - 27 / 26 clauses 183921
Layer 1 g 14 = 28 - 29 / 28 clauses 183921
Layer 1 g 15 = 30 - 31 / 30 clauses 183921
Layer 1 g 16 = 32 - 33 / 32 clauses 183921
Layer 1 g 17 = 34 - 35 / 34 clauses 183921
Layer 1 g 18 = 36 - 37 / 36 clauses 183921
Layer 1 g 19 = 38 - 39 / 38 clauses 183921
Layer 1 g 20 = 40 - 41 / 40 clauses 183921
Layer 1 g 21 = 42 - 43 / 42 clauses 183921
Layer 1 g 22 = 44 - 45 / 44 clauses 183921
Layer 1 g 23 = 46 - 47 / 46 clauses 183921
Layer 1 g 24 = 48 - 49 / 48 clauses 183921
Layer 1 g 25 = 50 - 51 / 50 clauses 183921
Layer 1 g 26 = 52 - 53 / 52 clauses 183921
Layer 1 g 27 = 54 - 55 / 54 clauses 183921
Layer 1 g 28 = 56 - 57 / 56 clauses 183921
Layer 1 g 29 = 58 - 59 / 58 clauses 183921
Layer 1 g 30 = 60 - 61 / 60 clauses 183921
Layer 1 g 31 = 62 - 63 / 62 clauses 183921
Layer 1 g 32 = 64 - 65 / 64 clauses 183921
Layer 1 g 33 = 66 - 67 / 66 clauses 183921
Layer 1 g 34 = 68 - 69 / 68 clauses 183921
Layer 1 g 35 = 70 - 71 / 70 clauses 183921
Layer 1 g 36 = 72 - 73 / 72 clauses 183921
Layer 1 g 37 = 74 - 75 / 74 clauses 183921
Layer 1 g 38 = 76 - 77 / 76 clauses 183921
Layer 1 g 39 = 78 - 79 / 78 clauses 183921
Layer 1 g 40 = 80 - 81 / 80 clauses 183921
Layer 1 g 41 = 82 - 83 / 82 clauses 183921
Layer 1 g 42 = 84 - 85 / 84 clauses 183921
Layer 1 g 43 = 86 - 87 / 86 clauses 183921
Layer 1 g 44 = 88 - 89 / 88 clauses 183921
Layer 1 g 45 = 90 - 91 / 90 clauses 183921
Layer 1 g 46 = 92 - 93 / 92 clauses 183921
Layer 1 g 47 = 94 - 95 / 94 clauses 183921
Layer 1 g 48 = 96 - 97 / 96 clauses 183921
Layer 1 g 49 = 98 - 99 / 98 clauses 183921
Layer 1 g 50 = 100 - 101 / 100 clauses 183921
Layer 1 g 51 = 102 - 103 / 102 clauses 183921
Layer 1 g 52 = 104 - 105 / 104 clauses 183921
Layer 1 g 53 = 106 - 107 / 106 clauses 183921
Layer 1 g 54 = 108 - 109 / 108 clauses 183921
Layer 1 g 55 = 110 - 111 / 110 clauses 183921
Layer 1 g 56 = 112 - 113 / 112 clauses 183921
Layer 1 g 57 = 114 - 115 / 114 clauses 183921
Layer 1 g 58 = 116 - 117 / 116 clauses 183921
Layer 1 g 59 = 118 - 119 / 118 clauses 183921
Layer 1 g 60 = 120 - 121 / 120 clauses 183921
Layer 1 g 61 = 122 - 123 / 122 clauses 183921
Layer 1 g 62 = 124 - 125 / 124 clauses 183921
Layer 1 g 63 = 126 - 127 / 126 clauses 183921
Layer 1 g 64 = 128 - 129 / 128 clauses 183921
Layer 1 g 65 = 130 - 131 / 130 clauses 183921
Layer 1 g 66 = 132 - 133 / 132 clauses 183921
Layer 1 g 67 = 134 - 135 / 134 clauses 183921
Layer 1 g 68 = 136 - 137 / 136 clauses 183921
Layer 1 g 69 = 138 - 139 / 138 clauses 183921
Layer 1 g 70 = 140 - 141 / 140 clauses 183921
Layer 1 g 71 = 142 - 143 / 142 clauses 183921
Layer 1 g 72 = 144 - 145 / 144 clauses 183921
Layer 1 g 73 = 146 - 147 / 146 clauses 183921
Layer 1 g 74 = 148 - 149 / 148 clauses 183921
Layer 1 g 75 = 150 - 151 / 150 clauses 183921
Layer 1 g 76 = 152 - 153 / 152 clauses 183921
Layer 1 g 77 = 154 - 155 / 154 clauses 183921
Layer 1 g 78 = 156 - 157 / 156 clauses 183921
Layer 1 g 79 = 158 - 159 / 158 clauses 183921
Layer 1 g 80 = 160 - 161 / 160 clauses 183921
Layer 1 g 81 = 162 - 163 / 162 clauses 183921
Layer 1 g 82 = 164 - 165 / 164 clauses 183921
Layer 1 g 83 = 166 - 167 / 166 clauses 183921
Layer 1 g 84 = 168 - 169 / 168 clauses 183921
Layer 1 g 85 = 170 - 171 / 170 clauses 183921
Layer 1 g 86 = 172 - 173 / 172 clauses 183921
Layer 1 g 87 = 174 - 175 / 174 clauses 183921
Layer 1 g 88 = 176 - 177 / 176 clauses 183921
Layer 1 g 89 = 178 - 179 / 178 clauses 183921
Layer 1 g 90 = 180 - 181 / 180 clauses 183921
Layer 1 g 91 = 182 - 183 / 182 clauses 183921
Layer 1 g 92 = 184 - 185 / 184 clauses 183921
Layer 1 g 93 = 186 - 187 / 186 clauses 183921
Layer 1 g 94 = 188 - 189 / 188 clauses 183921
Layer 1 g 95 = 190 - 191 / 190 clauses 183921
Layer 1 g 96 = 192 - 193 / 192 clauses 183921
Layer 1 g 97 = 194 - 195 / 194 clauses 183921
Layer 1 g 98 = 196 - 197 / 196 clauses 183921
Layer 1 g 99 = 198 - 199 / 198 clauses 183921
Layer 1 g 100 = 200 - 201 / 200 clauses 183921
Layer 1 g 101 = 202 - 203 / 202 clauses 183921
Layer 1 g 102 = 204 - 205 / 204 clauses 183921
Layer 1 g 103 = 206 - 207 / 206 clauses 183921
Layer 1 g 104 = 208 - 209 / 208 clauses 183921
Layer 1 g 105 = 210 - 211 / 210 clauses 183921
Layer 1 g 106 = 212 - 213 / 212 clauses 183921
Layer 1 g 107 = 214 - 215 / 214 clauses 183921
Layer 1 g 108 = 216 - 217 / 216 clauses 183921
Layer 1 g 109 = 218 - 219 / 218 clauses 183921
Layer 1 g 110 = 220 - 221 / 220 clauses 183921
Layer 1 g 111 = 222 - 223 / 222 clauses 183921
Layer 1 g 112 = 224 - 225 / 224 clauses 183921
Layer 1 g 113 = 226 - 227 / 226 clauses 183921
Layer 1 g 114 = 228 - 229 / 228 clauses 183921
Layer 1 g 115 = 230 - 231 / 230 clauses 183921
Layer 1 g 116 = 232 - 233 / 232 clauses 183921
Layer 1 g 117 = 234 - 235 / 234 clauses 183921
Layer 1 g 118 = 236 - 237 / 236 clauses 183921
Layer 1 g 119 = 238 - 239 / 238 clauses 183921
Layer 1 g 120 = 240 - 241 / 240 clauses 183921
Layer 1 g 121 = 242 - 243 / 242 clauses 183921
Layer 1 g 122 = 244 - 245 / 244 clauses 183921
Layer 1 g 123 = 246 - 247 / 246 clauses 183921
Layer 1 g 124 = 248 - 249 / 248 clauses 183921
Layer 1 g 125 = 250 - 251 / 250 clauses 183921
Layer 1 g 126 = 252 - 253 / 252 clauses 183921
Layer 1 g 127 = 254 - 255 / 254 clauses 183921
Layer 1 g 128 = 256 - 257 / 256 clauses 183921
Layer 1 g 129 = 258 - 259 / 258 clauses 183921
Layer 1 g 130 = 260 - 261 / 260 clauses 183921
Layer 1 g 131 = 262 - 263 / 262 clauses 183921
Layer 1 g 132 = 264 - 265 / 264 clauses 183921
Layer 1 g 133 = 266 - 267 / 266 clauses 183921
Layer 1 g 134 = 268 - 269 / 268 clauses 183921
Layer 1 g 135 = 270 - 271 / 270 clauses 183921
Layer 1 g 136 = 272 - 273 / 272 clauses 183921
Layer 1 g 137 = 274 - 275 / 274 clauses 183921
Layer 1 g 138 = 276 - 277 / 276 clauses 183921
Layer 1 g 139 = 278 - 279 / 278 clauses 183921
Layer 1 g 140 = 280 - 281 / 280 clauses 183921
Layer 1 g 141 = 282 - 283 / 282 clauses 183921
Layer 1 g 142 = 284 - 285 / 284 clauses 183921
Layer 1 g 143 = 286 - 287 / 286 clauses 183921
Layer 1 g 144 = 288 - 289 / 288 clauses 183921
Layer 1 g 145 = 290 - 291 / 290 clauses 183921
Layer 1 g 146 = 292 - 293 / 292 clauses 183921
Layer 1 g 147 = 294 - 295 / 294 clauses 183921
Layer 1 g 148 = 296 - 297 / 296 clauses 183921
Layer 1 g 149 = 298 - 299 / 298 clauses 183921
Layer 1 g 150 = 300 - 301 / 300 clauses 183921
Layer 1 g 151 = 302 - 303 / 302 clauses 183921
Layer 1 g 152 = 304 - 305 / 304 clauses 183921
Layer 1 g 153 = 306 - 307 / 306 clauses 183921
Layer 1 g 154 = 308 - 309 / 308 clauses 183921
Layer 1 g 155 = 310 - 311 / 310 clauses 183921
Layer 1 g 156 = 312 - 313 / 312 clauses 183921
Layer 1 g 157 = 314 - 315 / 314 clauses 183921
Layer 1 g 158 = 316 - 317 / 316 clauses 183921
Layer 1 g 159 = 318 - 319 / 318 clauses 183921
Layer 1 g 160 = 320 - 321 / 320 clauses 183921
Layer 1 g 161 = 322 - 323 / 322 clauses 183921
Layer 1 g 162 = 324 - 325 / 324 clauses 183921
Layer 1 g 163 = 326 - 327 / 326 clauses 183921
Layer 1 g 164 = 328 - 329 / 328 clauses 183921
Layer 1 g 165 = 330 - 331 / 330 clauses 183921
Layer 1 g 166 = 332 - 333 / 332 clauses 183921
Layer 1 g 167 = 334 - 335 / 334 clauses 183921
Layer 1 g 168 = 336 - 337 / 336 clauses 183921
Layer 1 g 169 = 338 - 339 / 338 clauses 183921
Layer 1 g 170 = 340 - 341 / 340 clauses 183921
Layer 1 g 171 = 342 - 343 / 342 clauses 183921
Layer 1 g 172 = 344 - 345 / 344 clauses 183921
Layer 1 g 173 = 346 - 347 / 346 clauses 183921
Layer 1 g 174 = 348 - 349 / 348 clauses 183921
Layer 1 g 175 = 350 - 351 / 350 clauses 183921
Layer 1 g 176 = 352 - 353 / 352 clauses 183921
Layer 1 g 177 = 354 - 355 / 354 clauses 183921
Layer 1 g 178 = 356 - 357 / 356 clauses 183921
Layer 1 g 179 = 358 - 359 / 358 clauses 183921
Layer 1 g 180 = 360 - 361 / 360 clauses 183921
Layer 1 g 181 = 362 - 363 / 362 clauses 183921
Layer 1 g 182 = 364 - 365 / 364Still waiting ... running for 69470 will abort at 9223372036854760950
 clauses 183921
Layer 1 g 183 = 366 - 367 / 366 clauses 183921
Layer 1 g 184 = 368 - 369 / 368 clauses 183921
Layer 1 g 185 = 370 - 371 / 370 clauses 183921
Layer 1 g 186 = 372 - 373 / 372 clauses 183921
Layer 1 g 187 = 374 - 375 / 374 clauses 183921
Layer 1 g 188 = 376 - 377 / 376 clauses 183921
Layer 1 g 189 = 378 - 379 / 378 clauses 183921
Layer 1 g 190 = 380 - 381 / 380 clauses 183921
Layer 1 g 191 = 382 - 383 / 382 clauses 183921
Layer 1 g 192 = 384 - 385 / 384 clauses 183921
Layer 1 g 193 = 386 - 387 / 386 clauses 183921
Layer 1 g 194 = 388 - 389 / 388 clauses 183921
Layer 1 g 195 = 390 - 391 / 390 clauses 183921
Layer 1 g 196 = 392 - 393 / 392 clauses 183921
Layer 1 g 197 = 394 - 395 / 394 clauses 183921
Layer 1 g 198 = 396 - 397 / 396 clauses 183921
Layer 1 g 199 = 398 - 399 / 398 clauses 183921
Layer 1 g 200 = 400 - 401 / 400 clauses 183921
Layer 1 g 201 = 402 - 403 / 402 clauses 183921
Layer 1 g 202 = 404 - 405 / 404 clauses 183921
Layer 1 g 203 = 406 - 407 / 406 clauses 183921
Layer 1 g 204 = 408 - 409 / 408 clauses 183921
Layer 1 g 205 = 410 - 411 / 410 clauses 183921
Layer 1 g 206 = 412 - 413 / 412 clauses 183921
Layer 1 g 207 = 414 - 415 / 414 clauses 183921
Layer 1 g 208 = 416 - 417 / 416 clauses 183921
Layer 1 g 209 = 418 - 419 / 418 clauses 183921
Layer 1 g 210 = 420 - 421 / 420 clauses 183921
Layer 1 g 211 = 422 - 423 / 422 clauses 183921
Layer 1 g 212 = 424 - 425 / 424 clauses 183921
Layer 1 g 213 = 426 - 427 / 426 clauses 183921
Layer 1 g 214 = 428 - 429 / 428 clauses 183921
Layer 1 g 215 = 430 - 431 / 430 clauses 183921
Layer 1 g 216 = 432 - 433 / 432 clauses 183921
Layer 1 g 217 = 434 - 435 / 434 clauses 183921
Layer 1 g 218 = 436 - 437 / 436 clauses 183921
Layer 1 g 219 = 438 - 439 / 438 clauses 183921
Layer 1 g 220 = 440 - 441 / 440 clauses 183921
Layer 1 g 221 = 442 - 443 / 442 clauses 183921
Layer 1 g 222 = 444 - 445 / 444 clauses 183921
Layer 1 g 223 = 446 - 447 / 446 clauses 183921
Layer 1 g 224 = 448 - 449 / 448 clauses 183921
Layer 1 g 225 = 450 - 451 / 450 clauses 183921
Layer 1 g 226 = 452 - 453 / 452 clauses 183921
Layer 1 g 227 = 454 - 455 / 454 clauses 183921
Layer 1 g 228 = 456 - 457 / 456 clauses 183921
Layer 1 g 229 = 458 - 459 / 458 clauses 183921
Layer 1 g 230 = 460 - 461 / 460 clauses 183921
Layer 1 g 231 = 462 - 463 / 462 clauses 183921
Layer 1 g 232 = 464 - 465 / 464 clauses 183921
Layer 1 g 233 = 466 - 467 / 466 clauses 183921
Layer 1 g 234 = 468 - 469 / 468 clauses 183921
Layer 1 g 235 = 470 - 471 / 470 clauses 183921
Layer 1 g 236 = 472 - 473 / 472 clauses 183921
Layer 1 g 237 = 474 - 475 / 474 clauses 183921
Layer 1 g 238 = 476 - 477 / 476 clauses 183921
Layer 1 g 239 = 478 - 479 / 478 clauses 183921
Layer 1 g 240 = 480 - 481 / 480 clauses 183921
Layer 1 g 241 = 482 - 483 / 482 clauses 183921
Layer 1 g 242 = 484 - 485 / 484 clauses 183921
Layer 1 g 243 = 486 - 487 / 486 clauses 183921
Layer 1 g 244 = 488 - 489 / 488 clauses 183921
Layer 1 g 245 = 490 - 491 / 490 clauses 183921
Layer 1 g 246 = 492 - 493 / 492 clauses 183921
Layer 1 g 247 = 494 - 495 / 494 clauses 183921
Layer 1 g 248 = 496 - 497 / 496 clauses 183921
Layer 1 g 249 = 498 - 499 / 498 clauses 183921
Layer 1 g 250 = 500 - 501 / 500 clauses 183921
Layer 1 g 251 = 502 - 503 / 502 clauses 183921
Layer 1 g 252 = 504 - 505 / 504 clauses 183921
Layer 1 g 253 = 506 - 507 / 506 clauses 183921
Layer 1 g 254 = 508 - 509 / 508 clauses 183921
Layer 1 g 255 = 510 - 511 / 510 clauses 183921
Layer 1 g 256 = 512 - 513 / 512 clauses 183921
Layer 1 g 257 = 514 - 515 / 514 clauses 183921
Layer 1 g 258 = 516 - 517 / 516 clauses 183921
Layer 1 g 259 = 518 - 519 / 518 clauses 183921
Layer 1 g 260 = 520 - 521 / 520 clauses 183921
Layer 1 g 261 = 522 - 523 / 522 clauses 183921
Layer 1 g 262 = 524 - 525 / 524 clauses 183921
Layer 1 g 263 = 526 - 527 / 526 clauses 183921
Layer 1 g 264 = 528 - 529 / 528 clauses 183921
Layer 1 g 265 = 530 - 531 / 530 clauses 183921
Layer 1 g 266 = 532 - 533 / 532 clauses 183921
Layer 1 g 267 = 534 - 535 / 534 clauses 183921
Layer 1 g 268 = 536 - 537 / 536 clauses 183921
Layer 1 g 269 = 538 - 539 / 538 clauses 183921
Layer 1 g 270 = 540 - 541 / 540 clauses 183921
Layer 1 g 271 = 542 - 543 / 542 clauses 183921
Layer 1 g 272 = 544 - 545 / 544 clauses 183921
Layer 1 g 273 = 546 - 547 / 546 clauses 183921
Layer 1 g 274 = 548 - 549 / 548 clauses 183921
Layer 1 g 275 = 550 - 551 / 550 clauses 183921
Layer 1 g 276 = 552 - 553 / 552 clauses 183921
Layer 1 g 277 = 554 - 555 / 554 clauses 183921
Layer 1 g 278 = 556 - 557 / 556 clauses 183921
Layer 1 g 279 = 558 - 559 / 558 clauses 183921
Layer 1 g 280 = 560 - 561 / 560 clauses 183921
Layer 1 g 281 = 562 - 563 / 562 clauses 183921
Layer 1 g 282 = 564 - 565 / 564 clauses 183921
Layer 1 g 283 = 566 - 567 / 566 clauses 183921
Layer 1 g 284 = 568 - 569 / 568 clauses 183921
Layer 1 g 285 = 570 - 571 / 570 clauses 183921
Layer 1 g 286 = 572 - 573 / 572 clauses 183921
Layer 1 g 287 = 574 - 575 / 574 clauses 183921
Layer 1 g 288 = 576 - 577 / 576 clauses 183921
Layer 1 g 289 = 578 - 579 / 578 clauses 183921
Layer 1 g 290 = 580 - 581 / 580 clauses 183921
Layer 1 g 291 = 582 - 583 / 582 clauses 183921
Layer 1 g 292 = 584 - 585 / 584 clauses 183921
Layer 1 g 293 = 586 - 587 / 586 clauses 183921
Layer 1 g 294 = 588 - 589 / 588 clauses 183921
Layer 1 g 295 = 590 - 591 / 590 clauses 183921
Layer 1 g 296 = 592 - 593 / 592 clauses 183921
Layer 1 g 297 = 594 - 595 / 594 clauses 183921
Layer 1 g 298 = 596 - 597 / 596 clauses 183921
Layer 1 g 299 = 598 - 599 / 598 clauses 183921
Layer 1 g 300 = 600 - 601 / 600 clauses 183921
Layer 1 g 301 = 602 - 603 / 602 clauses 183921
Layer 2 g 0 = 0 - 3 / 1 clauses 183921
Layer 2 g 1 = 4 - 7 / 5 clauses 183921
Layer 2 g 2 = 8 - 11 / 9 clauses 183921
Layer 2 g 3 = 12 - 15 / 13 clauses 183921
Layer 2 g 4 = 16 - 19 / 17 clauses 183921
Layer 2 g 5 = 20 - 23 / 21 clauses 183921
Layer 2 g 6 = 24 - 27 / 25 clauses 183921
Layer 2 g 7 = 28 - 31 / 29 clauses 183921
Layer 2 g 8 = 32 - 35 / 33 clauses 183921
Layer 2 g 9 = 36 - 39 / 37 clauses 183921
Layer 2 g 10 = 40 - 43 / 41 clauses 183921
Layer 2 g 11 = 44 - 47 / 45 clauses 183921
Layer 2 g 12 = 48 - 51 / 49 clauses 183921
Layer 2 g 13 = 52 - 55 / 53 clauses 183921
Layer 2 g 14 = 56 - 59 / 57 clauses 183921
Layer 2 g 15 = 60 - 63 / 61 clauses 183921
Layer 2 g 16 = 64 - 67 / 65 clauses 183921
Layer 2 g 17 = 68 - 71 / 69 clauses 183921
Layer 2 g 18 = 72 - 75 / 73 clauses 183921
Layer 2 g 19 = 76 - 79 / 77 clauses 183921
Layer 2 g 20 = 80 - 83 / 81 clauses 183921
Layer 2 g 21 = 84 - 87 / 85 clauses 183921
Layer 2 g 22 = 88 - 91 / 89 clauses 183921
Layer 2 g 23 = 92 - 95 / 93 clauses 183921
Layer 2 g 24 = 96 - 99 / 97 clauses 183921
Layer 2 g 25 = 100 - 103 / 101 clauses 183921
Layer 2 g 26 = 104 - 107 / 105 clauses 183921
Layer 2 g 27 = 108 - 111 / 109 clauses 183921
Layer 2 g 28 = 112 - 115 / 113 clauses 183921
Layer 2 g 29 = 116 - 119 / 117 clauses 183921
Layer 2 g 30 = 120 - 123 / 121 clauses 183921
Layer 2 g 31 = 124 - 127 / 125 clauses 183921
Layer 2 g 32 = 128 - 131 / 129 clauses 183921
Layer 2 g 33 = 132 - 135 / 133 clauses 183921
Layer 2 g 34 = 136 - 139 / 137 clauses 183921
Layer 2 g 35 = 140 - 143 / 141 clauses 183921
Layer 2 g 36 = 144 - 147 / 145 clauses 183921
Layer 2 g 37 = 148 - 151 / 149 clauses 183921
Layer 2 g 38 = 152 - 155 / 153 clauses 183921
Layer 2 g 39 = 156 - 159 / 157 clauses 183921
Layer 2 g 40 = 160 - 163 / 161 clauses 183921
Layer 2 g 41 = 164 - 167 / 165 clauses 183921
Layer 2 g 42 = 168 - 171 / 169 clauses 183921
Layer 2 g 43 = 172 - 175 / 173 clauses 183921
Layer 2 g 44 = 176 - 179 / 177 clauses 183921
Layer 2 g 45 = 180 - 183 / 181 clauses 183921
Layer 2 g 46 = 184 - 187 / 185 clauses 183921
Layer 2 g 47 = 188 - 191 / 189 clauses 183921
Layer 2 g 48 = 192 - 195 / 193 clauses 183921
Layer 2 g 49 = 196 - 199 / 197 clauses 183921
Layer 2 g 50 = 200 - 203 / 201 clauses 183921
Layer 2 g 51 = 204 - 207 / 205 clauses 183921
Layer 2 g 52 = 208 - 211 / 209 clauses 183921
Layer 2 g 53 = 212 - 215 / 213 clauses 183921
Layer 2 g 54 = 216 - 219 / 217 clauses 183921
Layer 2 g 55 = 220 - 223 / 221 clauses 183921
Layer 2 g 56 = 224 - 227 / 225 clauses 183921
Layer 2 g 57 = 228 - 231 / 229 clauses 183921
Layer 2 g 58 = 232 - 235 / 233 clauses 183921
Layer 2 g 59 = 236 - 239 / 237 clauses 183921
Layer 2 g 60 = 240 - 243 / 241 clauses 183921
Layer 2 g 61 = 244 - 247 / 245 clauses 183921
Layer 2 g 62 = 248 - 251 / 249 clauses 183921
Layer 2 g 63 = 252 - 255 / 253 clauses 183921
Layer 2 g 64 = 256 - 259 / 257 clauses 183921
Layer 2 g 65 = 260 - 263 / 261 clauses 183921
Layer 2 g 66 = 264 - 267 / 265 clauses 183921
Layer 2 g 67 = 268 - 271 / 269 clauses 183921
Layer 2 g 68 = 272 - 275 / 273 clauses 183921
Layer 2 g 69 = 276 - 279 / 277 clauses 183921
Layer 2 g 70 = 280 - 283 / 281 clauses 183921
Layer 2 g 71 = 284 - 287 / 285 clauses 183921
Layer 2 g 72 = 288 - 291 / 289 clauses 183921
Layer 2 g 73 = 292 - 295 / 293 clauses 183921
Layer 2 g 74 = 296 - 299 / 297Still waiting ... running for 140011 will abort at 9223372036854760950
 clauses 183921
Layer 2 g 75 = 300 - 303 / 301 clauses 183921
Layer 2 g 76 = 304 - 307 / 305 clauses 183921
Layer 2 g 77 = 308 - 311 / 309 clauses 183921
Layer 2 g 78 = 312 - 315 / 313 clauses 183921
Layer 2 g 79 = 316 - 319 / 317 clauses 183921
Layer 2 g 80 = 320 - 323 / 321 clauses 183921
Layer 2 g 81 = 324 - 327 / 325 clauses 183921
Layer 2 g 82 = 328 - 331 / 329 clauses 183921
Layer 2 g 83 = 332 - 335 / 333 clauses 183921
Layer 2 g 84 = 336 - 339 / 337 clauses 183921
Layer 2 g 85 = 340 - 343 / 341 clauses 183921
Layer 2 g 86 = 344 - 347 / 345 clauses 183921
Layer 2 g 87 = 348 - 351 / 349 clauses 183921
Layer 2 g 88 = 352 - 355 / 353 clauses 183921
Layer 2 g 89 = 356 - 359 / 357 clauses 183921
Layer 2 g 90 = 360 - 363 / 361 clauses 183921
Layer 2 g 91 = 364 - 367 / 365 clauses 183921
Layer 2 g 92 = 368 - 371 / 369 clauses 183921
Layer 2 g 93 = 372 - 375 / 373 clauses 183921
Layer 2 g 94 = 376 - 379 / 377 clauses 183921
Layer 2 g 95 = 380 - 383 / 381 clauses 183921
Layer 2 g 96 = 384 - 387 / 385 clauses 183921
Layer 2 g 97 = 388 - 391 / 389 clauses 183921
Layer 2 g 98 = 392 - 395 / 393 clauses 183921
Layer 2 g 99 = 396 - 399 / 397 clauses 183921
Layer 2 g 100 = 400 - 403 / 401 clauses 183921
Layer 2 g 101 = 404 - 407 / 405 clauses 183921
Layer 2 g 102 = 408 - 411 / 409 clauses 183921
Layer 2 g 103 = 412 - 415 / 413 clauses 183921
Layer 2 g 104 = 416 - 419 / 417 clauses 183921
Layer 2 g 105 = 420 - 423 / 421 clauses 183921
Layer 2 g 106 = 424 - 427 / 425 clauses 183921
Layer 2 g 107 = 428 - 431 / 429 clauses 183921
Layer 2 g 108 = 432 - 435 / 433 clauses 183921
Layer 2 g 109 = 436 - 439 / 437 clauses 183921
Layer 2 g 110 = 440 - 443 / 441 clauses 183921
Layer 2 g 111 = 444 - 447 / 445 clauses 183921
Layer 2 g 112 = 448 - 451 / 449 clauses 183921
Layer 2 g 113 = 452 - 455 / 453 clauses 183921
Layer 2 g 114 = 456 - 459 / 457 clauses 183921
Layer 2 g 115 = 460 - 463 / 461 clauses 183921
Layer 2 g 116 = 464 - 467 / 465 clauses 183921
Layer 2 g 117 = 468 - 471 / 469 clauses 183921
Layer 2 g 118 = 472 - 475 / 473 clauses 183921
Layer 2 g 119 = 476 - 479 / 477 clauses 183921
Layer 2 g 120 = 480 - 483 / 481 clauses 183921
Layer 2 g 121 = 484 - 487 / 485 clauses 183921
Layer 2 g 122 = 488 - 491 / 489 clauses 183921
Layer 2 g 123 = 492 - 495 / 493 clauses 183921
Layer 2 g 124 = 496 - 499 / 497 clauses 183921
Layer 2 g 125 = 500 - 503 / 501 clauses 183921
Layer 2 g 126 = 504 - 507 / 505 clauses 183921
Layer 2 g 127 = 508 - 511 / 509 clauses 183921
Layer 2 g 128 = 512 - 515 / 513 clauses 183921
Layer 2 g 129 = 516 - 519 / 517 clauses 183921
Layer 2 g 130 = 520 - 523 / 521 clauses 183921
Layer 2 g 131 = 524 - 527 / 525 clauses 183921
Layer 2 g 132 = 528 - 531 / 529 clauses 183921
Layer 2 g 133 = 532 - 535 / 533 clauses 183921
Layer 2 g 134 = 536 - 539 / 537 clauses 183921
Layer 2 g 135 = 540 - 543 / 541 clauses 183921
Layer 2 g 136 = 544 - 547 / 545 clauses 183921
Layer 2 g 137 = 548 - 551 / 549 clauses 183921
Layer 2 g 138 = 552 - 555 / 553 clauses 183921
Layer 2 g 139 = 556 - 559 / 557 clauses 183921
Layer 2 g 140 = 560 - 563 / 561 clauses 183921
Layer 2 g 141 = 564 - 567 / 565 clauses 183921
Layer 2 g 142 = 568 - 571 / 569 clauses 183921
Layer 2 g 143 = 572 - 575 / 573 clauses 183921
Layer 2 g 144 = 576 - 579 / 577 clauses 183921
Layer 2 g 145 = 580 - 583 / 581 clauses 183921
Layer 2 g 146 = 584 - 587 / 585 clauses 183921
Layer 2 g 147 = 588 - 591 / 589 clauses 183921
Layer 2 g 148 = 592 - 595 / 593 clauses 183921
Layer 2 g 149 = 596 - 599 / 597 clauses 183921
Layer 2 g 150 = 600 - 603 / 601 clauses 183921
Layer 2 g 151 = 604 - 604 / 605 clauses 183921
Layer 3 g 0 = 0 - 7 / 3 clauses 183921
Layer 3 g 1 = 8 - 15 / 11 clauses 183921
Layer 3 g 2 = 16 - 23 / 19 clauses 183921
Layer 3 g 3 = 24 - 31 / 27 clauses 183921
Layer 3 g 4 = 32 - 39 / 35 clauses 183921
Layer 3 g 5 = 40 - 47 / 43 clauses 183921
Layer 3 g 6 = 48 - 55 / 51 clauses 183921
Layer 3 g 7 = 56 - 63 / 59 clauses 183921
Layer 3 g 8 = 64 - 71 / 67 clauses 183921
Layer 3 g 9 = 72 - 79 / 75 clauses 183921
Layer 3 g 10 = 80 - 87 / 83 clauses 183921
Layer 3 g 11 = 88 - 95 / 91 clauses 183921
Layer 3 g 12 = 96 - 103 / 99 clauses 183921
Layer 3 g 13 = 104 - 111 / 107 clauses 183921
Layer 3 g 14 = 112 - 119 / 115 clauses 183921
Layer 3 g 15 = 120 - 127 / 123 clauses 183921
Layer 3 g 16 = 128 - 135 / 131 clauses 183921
Layer 3 g 17 = 136 - 143 / 139 clauses 183921
Layer 3 g 18 = 144 - 151 / 147 clauses 183921
Layer 3 g 19 = 152 - 159 / 155 clauses 183921
Layer 3 g 20 = 160 - 167 / 163 clauses 183921
Layer 3 g 21 = 168 - 175 / 171 clauses 183921
Layer 3 g 22 = 176 - 183 / 179 clauses 183921
Layer 3 g 23 = 184 - 191 / 187 clauses 183921
Layer 3 g 24 = 192 - 199 / 195 clauses 183921
Layer 3 g 25 = 200 - 207 / 203 clauses 183921
Layer 3 g 26 = 208 - 215 / 211 clauses 183921
Layer 3 g 27 = 216 - 223 / 219 clauses 183921
Layer 3 g 28 = 224 - 231 / 227 clauses 183921
Layer 3 g 29 = 232 - 239 / 235 clauses 183921
Layer 3 g 30 = 240 - 247 / 243 clauses 183921
Layer 3 g 31 = 248 - 255 / 251 clauses 183921
Layer 3 g 32 = 256 - 263 / 259 clauses 183921
Layer 3 g 33 = 264 - 271 / 267 clauses 183921
Layer 3 g 34 = 272 - 279 / 275 clauses 183921
Layer 3 g 35 = 280 - 287 / 283 clauses 183921
Layer 3 g 36 = 288 - 295 / 291 clauses 183921
Layer 3 g 37 = 296 - 303 / 299 clauses 183921
Layer 3 g 38 = 304 - 311 / 307 clauses 183921
Layer 3 g 39 = 312 - 319 / 315 clauses 183921
Layer 3 g 40 = 320 - 327 / 323 clauses 183921
Layer 3 g 41 = 328 - 335 / 331 clauses 183921
Layer 3 g 42 = 336 - 343 / 339 clauses 183921
Layer 3 g 43 = 344 - 351 / 347 clauses 183921
Layer 3 g 44 = 352 - 359 / 355 clauses 183921
Layer 3 g 45 = 360 - 367 / 363 clauses 183921
Layer 3 g 46 = 368 - 375 / 371 clauses 183921
Layer 3 g 47 = 376 - 383 / 379 clauses 183921
Layer 3 g 48 = 384 - 391 / 387 clauses 183921
Layer 3 g 49 = 392 - 399 / 395 clauses 183921
Layer 3 g 50 = 400 - 407 / 403 clauses 183921
Layer 3 g 51 = 408 - 415 / 411 clauses 183921
Layer 3 g 52 = 416 - 423 / 419 clauses 183921
Layer 3 g 53 = 424 - 431 / 427 clauses 183921
Layer 3 g 54 = 432 - 439 / 435 clauses 183921
Layer 3 g 55 = 440 - 447 / 443 clauses 183921
Layer 3 g 56 = 448 - 455 / 451 clauses 183921
Layer 3 g 57 = 456 - 463 / 459 clauses 183921
Layer 3 g 58 = 464 - 471 / 467 clauses 183921
Layer 3 g 59 = 472 - 479 / 475 clauses 183921
Layer 3 g 60 = 480 - 487 / 483
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 209.983 MEMPEAK_KBS 8023417.856
