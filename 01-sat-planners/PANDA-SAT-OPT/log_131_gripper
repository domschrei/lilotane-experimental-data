PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/gripper/domain.hddl instances/gripper/p19.hddl"


Planner Configuration
=====================
Domain: instances/gripper/domain.hddl
Problem: instances/gripper/p19.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p19.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 44
Compiling negative preconditions ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 44
Compiling split parameters ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 44
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 44
Grounded planning graph ... done in 290ms.
	Number of Grounded Actions 289
	Number of Grounded Literals 164
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 44
Two Way TDG ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 44
Grounding ... done.
	number of abstract tasks = 22
	number of tasks = 310
	number of decomposition methods = 164
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 22
	number of tasks = 310
	number of decomposition methods = 164
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 88ms.
	Number of Grounded Actions 288
	Number of Grounded Literals 164
	number of abstract tasks = 22
	number of tasks = 310
	number of decomposition methods = 164
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 22
	number of tasks = 310
	number of decomposition methods = 164
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 23
	number of tasks = 311
	number of decomposition methods = 165
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 23
	number of tasks = 311
	number of decomposition methods = 165
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 29ms.
	Number of Grounded Actions 288
	Number of Grounded Literals 164
	number of abstract tasks = 23
	number of tasks = 311
	number of decomposition methods = 165
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 23
	number of tasks = 311
	number of decomposition methods = 165
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 23
	number of tasks = 311
	number of decomposition methods = 165
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 23
	number of tasks = 311
	number of decomposition methods = 165
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 23
	number of tasks = 311
	number of decomposition methods = 165
	number of predicates = 164
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 44
	number of epsilon methods = 0
	number of primitive tasks = 288
	number of constants = 0
Tasks 288 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773130ms

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 127 will abort at 9223372036854773087
done
initial PDT has 160 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 160 leafs
SHOP LEAFS 40
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 40098
Size 40093 at 0/288
Size 13782
Size 13586 at 0/288
Size 1922
Size 1921 at 0/288
Size 1882
Size 1882 at 0/288
Size 1882
Invariant time: 0.258
Number of invariants: 1882
Invariant Clauses 303002
NUMBER OF CLAUSES 361652
NUMBER OF STATE CLAUSES 357386
NUMBER OF DECOMPOSITION CLAUSES 4266
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.82000000000001% 1.18% 0.0% 
NUMBER OF PATHS 160
Starting cryptominisat5.5
Setting starttime of solver to 1604515295299
Command exited with non-zero status 10
0.13 0.00

Time command gave the following runtime for the solver: 130
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_18;1,59 59 m3_goto
18;1 158 pathaction!2_18;1,249
Consider method^1_1,51 51 m0_move_two_balls
1 5 pathaction!1_1,250
Consider method^1_15,134 134 m0_move_two_balls
15 28 pathaction!1_15,251
Consider method^2_17;1,59 59 m3_goto
17;1 4 pathaction!2_17;1,249
Consider method^1_0,26 26 m0_move_two_balls
0 74 pathaction!1_0,255
Consider method^2_16;1,59 59 m3_goto
16;1 181 pathaction!2_16;1,249
Consider method^1_12,64 64 m0_move_two_balls
12 60 pathaction!1_12,254
Consider method^2_9;1,59 59 m3_goto
9;1 168 pathaction!2_9;1,249
Consider method^1_11,50 50 m0_move_two_balls
11 191 pathaction!1_11,266
Consider method^2_11;1,59 59 m3_goto
11;1 180 pathaction!2_11;1,249
Consider method^2_10;1,59 59 m3_goto
10;1 96 pathaction!2_10;1,249
Consider method^2_7;1,59 59 m3_goto
7;1 184 pathaction!2_7;1,249
Consider method^1_17,139 139 m0_move_two_balls
17 24 pathaction!1_17,260
Consider method^1_14,106 106 m0_move_two_balls
14 0 pathaction!1_14,263
Consider method^2_0;1,56 56 m2_goto
0;1 162 pathaction!2_0;1,249
Consider method^2_2;1,59 59 m3_goto
2;1 9 pathaction!2_2;1,249
Consider method^1_6,158 158 m0_move_two_balls
6 171 pathaction!1_6,264
Consider method^2_19;1,59 59 m3_goto
19;1 25 pathaction!2_19;1,249
Consider method^0_,164 164 __top_1
 73 pathaction!0_,310
Consider method^2_13;1,59 59 m3_goto
13;1 135 pathaction!2_13;1,249
Consider method^1_10,48 48 m0_move_two_balls
10 6 pathaction!1_10,253
Consider method^1_9,149 149 m0_move_two_balls
9 19 pathaction!1_9,258
Consider method^2_1;1,59 59 m3_goto
1;1 72 pathaction!2_1;1,249
Consider method^2_8;1,59 59 m3_goto
8;1 99 pathaction!2_8;1,249
Consider method^1_19,146 146 m0_move_two_balls
19 20 pathaction!1_19,268
Consider method^2_15;1,59 59 m3_goto
15;1 16 pathaction!2_15;1,249
Consider method^1_7,163 163 m0_move_two_balls
7 192 pathaction!1_7,259
Consider method^2_3;1,59 59 m3_goto
3;1 198 pathaction!2_3;1,249
Consider method^1_8,100 100 m0_move_two_balls
8 88 pathaction!1_8,262
Consider method^1_4,74 74 m0_move_two_balls
4 85 pathaction!1_4,265
Consider method^2_4;1,59 59 m3_goto
4;1 155 pathaction!2_4;1,249
Consider method^1_13,143 143 m0_move_two_balls
13 53 pathaction!1_13,267
Consider method^1_3,61 61 m0_move_two_balls
3 143 pathaction!1_3,252
Consider method^1_5,112 112 m0_move_two_balls
5 35 pathaction!1_5,269
Consider method^1_18,101 101 m0_move_two_balls
18 87 pathaction!1_18,261
Consider method^1_16,57 57 m0_move_two_balls
16 144 pathaction!1_16,257
Consider method^2_5;1,59 59 m3_goto
5;1 89 pathaction!2_5;1,249
Consider method^2_14;1,59 59 m3_goto
14;1 67 pathaction!2_14;1,249
Consider method^1_2,77 77 m0_move_two_balls
2 166 pathaction!1_2,256
Consider method^2_12;1,59 59 m3_goto
12;1 138 pathaction!2_12;1,249
Consider method^2_6;1,59 59 m3_goto
6;1 66 pathaction!2_6;1,249


CHECKING primitive solution of length 160 ...
true 147 __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2;]
true 146 __method_precondition_m2_goto_2_precondition[rooma;]
true 12 nop[;]
true 29 pick[ball1,rooma,left;]
true 160 pick[ball2,rooma,right;]
true 185 move[rooma,roomb;]
true 92 drop[ball1,roomb,left;]
true 170 drop[ball2,roomb,right;]
true 83 __method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4;]
true 179 __method_precondition_m3_goto_3_precondition[roomb;]
true 18 move[roomb,rooma;]
true 43 pick[ball3,rooma,left;]
true 112 pick[ball4,rooma,right;]
true 15 move[rooma,roomb;]
true 109 drop[ball3,roomb,left;]
true 41 drop[ball4,roomb,right;]
true 84 __method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6;]
true 97 __method_precondition_m3_goto_3_precondition[roomb;]
true 58 move[roomb,rooma;]
true 133 pick[ball5,rooma,right;]
true 127 pick[ball6,rooma,left;]
true 61 move[rooma,roomb;]
true 10 drop[ball5,roomb,right;]
true 40 drop[ball6,roomb,left;]
true 104 __method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8;]
true 93 __method_precondition_m3_goto_3_precondition[roomb;]
true 177 move[roomb,rooma;]
true 59 pick[ball7,rooma,left;]
true 150 pick[ball8,rooma,right;]
true 30 move[rooma,roomb;]
true 126 drop[ball7,roomb,left;]
true 86 drop[ball8,roomb,right;]
true 173 __method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10;]
true 26 __method_precondition_m3_goto_3_precondition[roomb;]
true 77 move[roomb,rooma;]
true 114 pick[ball9,rooma,right;]
true 98 pick[ball10,rooma,left;]
true 108 move[rooma,roomb;]
true 2 drop[ball9,roomb,right;]
true 157 drop[ball10,roomb,left;]
true 186 __method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12;]
true 79 __method_precondition_m3_goto_3_precondition[roomb;]
true 38 move[roomb,rooma;]
true 50 pick[ball11,rooma,right;]
true 101 pick[ball12,rooma,left;]
true 69 move[rooma,roomb;]
true 167 drop[ball11,roomb,right;]
true 188 drop[ball12,roomb,left;]
true 148 __method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14;]
true 113 __method_precondition_m3_goto_3_precondition[roomb;]
true 107 move[roomb,rooma;]
true 137 pick[ball13,rooma,left;]
true 172 pick[ball14,rooma,right;]
true 47 move[rooma,roomb;]
true 140 drop[ball13,roomb,left;]
true 78 drop[ball14,roomb,right;]
true 76 __method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16;]
true 105 __method_precondition_m3_goto_3_precondition[roomb;]
true 153 move[roomb,rooma;]
true 3 pick[ball15,rooma,left;]
true 163 pick[ball16,rooma,right;]
true 175 move[rooma,roomb;]
true 121 drop[ball15,roomb,left;]
true 106 drop[ball16,roomb,right;]
true 64 __method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18;]
true 122 __method_precondition_m3_goto_3_precondition[roomb;]
true 119 move[roomb,rooma;]
true 13 pick[ball17,rooma,left;]
true 39 pick[ball18,rooma,right;]
true 110 move[rooma,roomb;]
true 161 drop[ball17,roomb,left;]
true 11 drop[ball18,roomb,right;]
true 42 __method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20;]
true 1 __method_precondition_m3_goto_3_precondition[roomb;]
true 123 move[roomb,rooma;]
true 142 pick[ball19,rooma,right;]
true 159 pick[ball20,rooma,left;]
true 91 move[rooma,roomb;]
true 193 drop[ball19,roomb,right;]
true 116 drop[ball20,roomb,left;]
true 151 __method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22;]
true 124 __method_precondition_m3_goto_3_precondition[roomb;]
true 178 move[roomb,rooma;]
true 117 pick[ball21,rooma,right;]
true 152 pick[ball22,rooma,left;]
true 111 move[rooma,roomb;]
true 197 drop[ball21,roomb,right;]
true 129 drop[ball22,roomb,left;]
true 90 __method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24;]
true 51 __method_precondition_m3_goto_3_precondition[roomb;]
true 23 move[roomb,rooma;]
true 130 pick[ball23,rooma,left;]
true 118 pick[ball24,rooma,right;]
true 139 move[rooma,roomb;]
true 174 drop[ball23,roomb,left;]
true 45 drop[ball24,roomb,right;]
true 141 __method_precondition_m0_move_two_balls_0_precondition[ball25,rooma,ball26;]
true 27 __method_precondition_m3_goto_3_precondition[roomb;]
true 194 move[roomb,rooma;]
true 134 pick[ball25,rooma,right;]
true 34 pick[ball26,rooma,left;]
true 145 move[rooma,roomb;]
true 176 drop[ball25,roomb,right;]
true 52 drop[ball26,roomb,left;]
true 169 __method_precondition_m0_move_two_balls_0_precondition[ball27,rooma,ball28;]
true 80 __method_precondition_m3_goto_3_precondition[roomb;]
true 21 move[roomb,rooma;]
true 125 pick[ball27,rooma,left;]
true 57 pick[ball28,rooma,right;]
true 136 move[rooma,roomb;]
true 195 drop[ball27,roomb,left;]
true 55 drop[ball28,roomb,right;]
true 103 __method_precondition_m0_move_two_balls_0_precondition[ball29,rooma,ball30;]
true 100 __method_precondition_m3_goto_3_precondition[roomb;]
true 32 move[roomb,rooma;]
true 65 pick[ball29,rooma,left;]
true 182 pick[ball30,rooma,right;]
true 62 move[rooma,roomb;]
true 17 drop[ball29,roomb,left;]
true 189 drop[ball30,roomb,right;]
true 132 __method_precondition_m0_move_two_balls_0_precondition[ball31,rooma,ball32;]
true 120 __method_precondition_m3_goto_3_precondition[roomb;]
true 44 move[roomb,rooma;]
true 196 pick[ball31,rooma,left;]
true 70 pick[ball32,rooma,right;]
true 156 move[rooma,roomb;]
true 199 drop[ball31,roomb,left;]
true 33 drop[ball32,roomb,right;]
true 190 __method_precondition_m0_move_two_balls_0_precondition[ball33,rooma,ball34;]
true 115 __method_precondition_m3_goto_3_precondition[roomb;]
true 48 move[roomb,rooma;]
true 149 pick[ball33,rooma,left;]
true 94 pick[ball34,rooma,right;]
true 95 move[rooma,roomb;]
true 183 drop[ball33,roomb,left;]
true 22 drop[ball34,roomb,right;]
true 37 __method_precondition_m0_move_two_balls_0_precondition[ball35,rooma,ball36;]
true 128 __method_precondition_m3_goto_3_precondition[roomb;]
true 187 move[roomb,rooma;]
true 164 pick[ball35,rooma,right;]
true 7 pick[ball36,rooma,left;]
true 54 move[rooma,roomb;]
true 46 drop[ball35,roomb,right;]
true 154 drop[ball36,roomb,left;]
true 81 __method_precondition_m0_move_two_balls_0_precondition[ball37,rooma,ball38;]
true 56 __method_precondition_m3_goto_3_precondition[roomb;]
true 36 move[roomb,rooma;]
true 165 pick[ball37,rooma,left;]
true 63 pick[ball38,rooma,right;]
true 71 move[rooma,roomb;]
true 102 drop[ball37,roomb,left;]
true 131 drop[ball38,roomb,right;]
true 68 __method_precondition_m0_move_two_balls_0_precondition[ball39,rooma,ball40;]
true 49 __method_precondition_m3_goto_3_precondition[roomb;]
true 200 move[roomb,rooma;]
true 8 pick[ball39,rooma,left;]
true 31 pick[ball40,rooma,right;]
true 14 move[rooma,roomb;]
true 82 drop[ball39,roomb,left;]
true 75 drop[ball40,roomb,right;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 48
TSTG: 3
Method: 1
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 96
TSTG: 3
Method: 2
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 144
TSTG: 3
Method: 3
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 192
TSTG: 3
Method: 4
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 240
TSTG: 3
Method: 5
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 288
TSTG: 3
Method: 6
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 336
TSTG: 3
Method: 7
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 384
TSTG: 3
Method: 8
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 432
TSTG: 3
Method: 9
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 480
TSTG: 3
Method: 10
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 528
TSTG: 3
Method: 11
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 576
TSTG: 3
Method: 12
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 624
TSTG: 3
Method: 13
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 672
TSTG: 3
Method: 14
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 720
TSTG: 3
Method: 15
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 768
TSTG: 3
Method: 16
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 816
TSTG: 3
Method: 17
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 864
TSTG: 3
Method: 18
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 912
TSTG: 3
Method: 19
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 960
TSTG: 3
Method: 20
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 1008
TSTG: 3
Method: 21
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 1056
TSTG: 3
Method: 22
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 1104
TSTG: 3
Method: 23
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 1152
TSTG: 3
Method: 24
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 1200
TSTG: 3
Method: 25
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 1248
TSTG: 3
Method: 26
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 1296
TSTG: 3
Method: 27
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 1344
TSTG: 3
Method: 28
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 1392
TSTG: 3
Method: 29
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 1440
TSTG: 3
Method: 30
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 1488
TSTG: 3
Method: 31
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 1536
TSTG: 3
Method: 32
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 1584
TSTG: 3
Method: 33
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 1632
TSTG: 3
Method: 34
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 1680
TSTG: 3
Method: 35
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 1728
TSTG: 3
Method: 36
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 1776
TSTG: 3
Method: 37
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 1824
TSTG: 3
Method: 38
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 1872
TSTG: 3
Method: 39
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 1920
TSTG: 3
Method: 40
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 1968
TSTG: 3
Method: 41
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 2016
TSTG: 3
Method: 42
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 2064
TSTG: 3
Method: 43
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 2112
TSTG: 3
Method: 44
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 2160
TSTG: 3
Method: 45
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 2208
TSTG: 3
Method: 46
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 2256
TSTG: 3
Method: 47
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 2304
TSTG: 3
Method: 48
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 2352
TSTG: 3
Method: 49
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 2400
TSTG: 3
Method: 50
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 2448
TSTG: 3
Method: 51
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 2496
TSTG: 3
Method: 52
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 2544
TSTG: 3
Method: 53
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 2592
TSTG: 3
Method: 54
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 2640
TSTG: 3
Method: 55
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 2688
TSTG: 3
Method: 56
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 2736
TSTG: 3
Method: 57
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 2784
TSTG: 3
Method: 58
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 2832
TSTG: 3
Method: 59
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 2880
TSTG: 3
Method: 60
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 2928
TSTG: 3
Method: 61
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 2976
TSTG: 3
Method: 62
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 3024
TSTG: 3
Method: 63
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 3072
TSTG: 3
Method: 64
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 3120
TSTG: 3
Method: 65
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 3168
TSTG: 3
Method: 66
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 3216
TSTG: 3
Method: 67
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 3264
TSTG: 3
Method: 68
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 3312
TSTG: 3
Method: 69
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 3360
TSTG: 3
Method: 70
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 3408
TSTG: 3
Method: 71
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 3456
TSTG: 3
Method: 72
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 3504
TSTG: 3
Method: 73
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 3552
TSTG: 3
Method: 74
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 3600
TSTG: 3
Method: 75
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 3648
TSTG: 3
Method: 76
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 3696
TSTG: 3
Method: 77
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 3744
TSTG: 3
Method: 78
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 3792
TSTG: 3
Method: 79
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 3840
TSTG: 3
Method: 80
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 3888
TSTG: 3
Method: 81
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 3936
TSTG: 3
Method: 82
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 3984
TSTG: 3
Method: 83
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 4032
TSTG: 3
Method: 84
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 4080
TSTG: 3
Method: 85
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 4128
TSTG: 3
Method: 86
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 4176
TSTG: 3
Method: 87
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 4224
TSTG: 3
Method: 88
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 4272
TSTG: 3
Method: 89
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 4320
TSTG: 3
Method: 90
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 4368
TSTG: 3
Method: 91
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 4416
TSTG: 3
Method: 92
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 4464
TSTG: 3
Method: 93
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 4512
TSTG: 3
Method: 94
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 4560
TSTG: 3
Method: 95
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 4608
TSTG: 3
Method: 96
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 4656
TSTG: 3
Method: 97
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 4704
TSTG: 3
Method: 98
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 4752
TSTG: 3
Method: 99
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 4800
TSTG: 3
Method: 100
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 4848
TSTG: 3
Method: 101
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 4896
TSTG: 3
Method: 102
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 4944
TSTG: 3
Method: 103
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 4992
TSTG: 3
Method: 104
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 5040
TSTG: 3
Method: 105
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 5088
TSTG: 3
Method: 106
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 5136
TSTG: 3
Method: 107
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 5184
TSTG: 3
Method: 108
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 5232
TSTG: 3
Method: 109
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 5280
TSTG: 3
Method: 110
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 5328
TSTG: 3
Method: 111
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 5376
TSTG: 3
Method: 112
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 5424
TSTG: 3
Method: 113
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 5472
TSTG: 3
Method: 114
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 5520
TSTG: 3
Method: 115
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 5568
TSTG: 3
Method: 116
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 5616
TSTG: 3
Method: 117
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 5664
TSTG: 3
Method: 118
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 5712
TSTG: 3
Method: 119
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 5760
TSTG: 3
Method: 120
DP max: 4
Taking minimum: 3
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 120
  lower bound = 119
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 210006512
planner result = SOLUTION
============ solution ============
number of primitive plan steps = 160
cost of solution               = 120
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 164
number of actions                    = 311
number of abstract actions           = 23
number of primitive actions          = 288
number of methods                    = 165
number of primitive shop actions     = 44
number of primitive non-shop actions = 244
size of largest method               = 20
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 55618
number of clauses               = 361652
average size of clauses         = 2.0030277725548316
number of assert                = 44
number of horn                  = 360651
K offset                        = 0
K chosen value                  = 3
state formula                   = 357386
method children clauses         = 0
number of paths                 = 160
maximum plan length             = 160
number of decomposition clauses = 4266
number of ordering clauses      = 0
number of state clauses         = 357386
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 21416
============ parsing ============
total                         = 1004
file parser                   = 532
sort expansion                = 184
closed world assumption       = 105
inherit preconditions         = 0
shop methods                  = 8
eliminate identical variables = 69
strip domain of hybridity     = 17
flatten formula               = 89
============ preprocessing ============
total                                      = 1502
compile negative preconditions             = 30
compile unit methods                       = 0
split parameter                            = 44
compile methods with identical tasks       = 4
removing unnecessary predicates            = 14
lifted reachabiltiy analysis               = 61
grounded planning graph analysis           = 612
grounded task decomposition graph analysis = 590
grounding                                  = 128
create artificial top task                 = 4
============ search preparation ============
compute state invariants = 371
============ sat ============
total                                        = 1990
generate formula                             = 1542
generate path decomposition tree             = 130
normalise path decomposition tree            = 35
sog optimisation                             = 21
translate path decomposition tree to clauses = 185
generate state formula                       = 1431
generate state invariant formula             = 303
transform to DIMACS                          = 173
SAT solver                                   = 130
SAT solver for K=0003                        = 130

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="288";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="23";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="210006512";"40 sat:20:state formula"="357386";"40 sat:01:number of variables"="55618";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="160";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="165";"01 solution:02:cost of solution"="120";"30 problem:07:number of primitive shop actions"="44";"01 solution:01:number of primitive plan steps"="160";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="311";"30 problem:08:number of primitive non-shop actions"="244";"30 problem:02:number of predicates"="164";"40 sat:03:number of horn"="360651";"40 sat:15:K chosen value"="3";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="20";"40 sat:03:average size of clauses"="2.0030277725548316";"40 sat:02:number of clauses"="361652";"40 sat:50:number of state clauses"="357386";"40 sat:03:number of assert"="44";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="160";"40 sat:50:number of decomposition clauses"="4266";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="532";"01 parsing:08:flatten formula"="89";"40 sat:00:total"="1990";"40 sat:16:generate state formula"="1431";"40 sat:20:transform to DIMACS"="173";"40 sat:11:generate path decomposition tree"="130";"02 preprocessing:07:compile methods with identical tasks"="4";"01 parsing:07:strip domain of hybridity"="17";"02 preprocessing:08:removing unnecessary predicates"="14";"01 parsing:03:closed world assumption"="105";"02 preprocessing:11:lifted reachabiltiy analysis"="61";"01 parsing:02:sort expansion"="184";"40 sat:12:normalise path decomposition tree"="35";"40 sat:40:SAT solver"="130";"01 parsing:00:total"="1004";"40 sat:10:generate formula"="1542";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="30";"00 total:00:total"="21416";"40 sat:13:sog optimisation"="21";"02 preprocessing:12:grounded planning graph analysis"="612";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="590";"02 preprocessing:04:split parameter"="44";"01 parsing:05:shop methods"="8";"10 search preparation:02:compute state invariants"="371";"01 parsing:06:eliminate identical variables"="69";"40 sat:15:translate path decomposition tree to clauses"="185";"40 sat:41:SAT solver for K=0003"="130";"40 sat:17:generate state invariant formula"="303";"02 preprocessing:00:total"="1502";"02 preprocessing:99:create artificial top task"="4";"02 preprocessing:84:grounding"="128"
#!verify __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2];__method_precondition_m2_goto_2_precondition[rooma];nop[];pick[ball1,rooma,left];pick[ball2,rooma,right];move[rooma,roomb];drop[ball1,roomb,left];drop[ball2,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball3,rooma,left];pick[ball4,rooma,right];move[rooma,roomb];drop[ball3,roomb,left];drop[ball4,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball5,rooma,right];pick[ball6,rooma,left];move[rooma,roomb];drop[ball5,roomb,right];drop[ball6,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball7,rooma,left];pick[ball8,rooma,right];move[rooma,roomb];drop[ball7,roomb,left];drop[ball8,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball9,rooma,right];pick[ball10,rooma,left];move[rooma,roomb];drop[ball9,roomb,right];drop[ball10,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball11,rooma,right];pick[ball12,rooma,left];move[rooma,roomb];drop[ball11,roomb,right];drop[ball12,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball13,rooma,left];pick[ball14,rooma,right];move[rooma,roomb];drop[ball13,roomb,left];drop[ball14,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball15,rooma,left];pick[ball16,rooma,right];move[rooma,roomb];drop[ball15,roomb,left];drop[ball16,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball17,rooma,left];pick[ball18,rooma,right];move[rooma,roomb];drop[ball17,roomb,left];drop[ball18,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball19,rooma,right];pick[ball20,rooma,left];move[rooma,roomb];drop[ball19,roomb,right];drop[ball20,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball21,rooma,right];pick[ball22,rooma,left];move[rooma,roomb];drop[ball21,roomb,right];drop[ball22,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball23,rooma,left];pick[ball24,rooma,right];move[rooma,roomb];drop[ball23,roomb,left];drop[ball24,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball25,rooma,ball26];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball25,rooma,right];pick[ball26,rooma,left];move[rooma,roomb];drop[ball25,roomb,right];drop[ball26,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball27,rooma,ball28];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball27,rooma,left];pick[ball28,rooma,right];move[rooma,roomb];drop[ball27,roomb,left];drop[ball28,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball29,rooma,ball30];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball29,rooma,left];pick[ball30,rooma,right];move[rooma,roomb];drop[ball29,roomb,left];drop[ball30,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball31,rooma,ball32];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball31,rooma,left];pick[ball32,rooma,right];move[rooma,roomb];drop[ball31,roomb,left];drop[ball32,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball33,rooma,ball34];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball33,rooma,left];pick[ball34,rooma,right];move[rooma,roomb];drop[ball33,roomb,left];drop[ball34,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball35,rooma,ball36];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball35,rooma,right];pick[ball36,rooma,left];move[rooma,roomb];drop[ball35,roomb,right];drop[ball36,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball37,rooma,ball38];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball37,rooma,left];pick[ball38,rooma,right];move[rooma,roomb];drop[ball37,roomb,left];drop[ball38,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball39,rooma,ball40];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball39,rooma,left];pick[ball40,rooma,right];move[rooma,roomb];drop[ball39,roomb,left];drop[ball40,roomb,right]
==>
0 __method_precondition_m0_move_two_balls_0_precondition ball1 rooma ball2 
1 __method_precondition_m2_goto_2_precondition rooma 
2 nop  
3 pick ball1 rooma left 
4 pick ball2 rooma right 
5 move rooma roomb 
6 drop ball1 roomb left 
7 drop ball2 roomb right 
8 __method_precondition_m0_move_two_balls_0_precondition ball3 rooma ball4 
9 __method_precondition_m3_goto_3_precondition roomb 
10 move roomb rooma 
11 pick ball3 rooma left 
12 pick ball4 rooma right 
13 move rooma roomb 
14 drop ball3 roomb left 
15 drop ball4 roomb right 
16 __method_precondition_m0_move_two_balls_0_precondition ball5 rooma ball6 
17 __method_precondition_m3_goto_3_precondition roomb 
18 move roomb rooma 
19 pick ball5 rooma right 
20 pick ball6 rooma left 
21 move rooma roomb 
22 drop ball5 roomb right 
23 drop ball6 roomb left 
24 __method_precondition_m0_move_two_balls_0_precondition ball7 rooma ball8 
25 __method_precondition_m3_goto_3_precondition roomb 
26 move roomb rooma 
27 pick ball7 rooma left 
28 pick ball8 rooma right 
29 move rooma roomb 
30 drop ball7 roomb left 
31 drop ball8 roomb right 
32 __method_precondition_m0_move_two_balls_0_precondition ball9 rooma ball10 
33 __method_precondition_m3_goto_3_precondition roomb 
34 move roomb rooma 
35 pick ball9 rooma right 
36 pick ball10 rooma left 
37 move rooma roomb 
38 drop ball9 roomb right 
39 drop ball10 roomb left 
40 __method_precondition_m0_move_two_balls_0_precondition ball11 rooma ball12 
41 __method_precondition_m3_goto_3_precondition roomb 
42 move roomb rooma 
43 pick ball11 rooma right 
44 pick ball12 rooma left 
45 move rooma roomb 
46 drop ball11 roomb right 
47 drop ball12 roomb left 
48 __method_precondition_m0_move_two_balls_0_precondition ball13 rooma ball14 
49 __method_precondition_m3_goto_3_precondition roomb 
50 move roomb rooma 
51 pick ball13 rooma left 
52 pick ball14 rooma right 
53 move rooma roomb 
54 drop ball13 roomb left 
55 drop ball14 roomb right 
56 __method_precondition_m0_move_two_balls_0_precondition ball15 rooma ball16 
57 __method_precondition_m3_goto_3_precondition roomb 
58 move roomb rooma 
59 pick ball15 rooma left 
60 pick ball16 rooma right 
61 move rooma roomb 
62 drop ball15 roomb left 
63 drop ball16 roomb right 
64 __method_precondition_m0_move_two_balls_0_precondition ball17 rooma ball18 
65 __method_precondition_m3_goto_3_precondition roomb 
66 move roomb rooma 
67 pick ball17 rooma left 
68 pick ball18 rooma right 
69 move rooma roomb 
70 drop ball17 roomb left 
71 drop ball18 roomb right 
72 __method_precondition_m0_move_two_balls_0_precondition ball19 rooma ball20 
73 __method_precondition_m3_goto_3_precondition roomb 
74 move roomb rooma 
75 pick ball19 rooma right 
76 pick ball20 rooma left 
77 move rooma roomb 
78 drop ball19 roomb right 
79 drop ball20 roomb left 
80 __method_precondition_m0_move_two_balls_0_precondition ball21 rooma ball22 
81 __method_precondition_m3_goto_3_precondition roomb 
82 move roomb rooma 
83 pick ball21 rooma right 
84 pick ball22 rooma left 
85 move rooma roomb 
86 drop ball21 roomb right 
87 drop ball22 roomb left 
88 __method_precondition_m0_move_two_balls_0_precondition ball23 rooma ball24 
89 __method_precondition_m3_goto_3_precondition roomb 
90 move roomb rooma 
91 pick ball23 rooma left 
92 pick ball24 rooma right 
93 move rooma roomb 
94 drop ball23 roomb left 
95 drop ball24 roomb right 
96 __method_precondition_m0_move_two_balls_0_precondition ball25 rooma ball26 
97 __method_precondition_m3_goto_3_precondition roomb 
98 move roomb rooma 
99 pick ball25 rooma right 
100 pick ball26 rooma left 
101 move rooma roomb 
102 drop ball25 roomb right 
103 drop ball26 roomb left 
104 __method_precondition_m0_move_two_balls_0_precondition ball27 rooma ball28 
105 __method_precondition_m3_goto_3_precondition roomb 
106 move roomb rooma 
107 pick ball27 rooma left 
108 pick ball28 rooma right 
109 move rooma roomb 
110 drop ball27 roomb left 
111 drop ball28 roomb right 
112 __method_precondition_m0_move_two_balls_0_precondition ball29 rooma ball30 
113 __method_precondition_m3_goto_3_precondition roomb 
114 move roomb rooma 
115 pick ball29 rooma left 
116 pick ball30 rooma right 
117 move rooma roomb 
118 drop ball29 roomb left 
119 drop ball30 roomb right 
120 __method_precondition_m0_move_two_balls_0_precondition ball31 rooma ball32 
121 __method_precondition_m3_goto_3_precondition roomb 
122 move roomb rooma 
123 pick ball31 rooma left 
124 pick ball32 rooma right 
125 move rooma roomb 
126 drop ball31 roomb left 
127 drop ball32 roomb right 
128 __method_precondition_m0_move_two_balls_0_precondition ball33 rooma ball34 
129 __method_precondition_m3_goto_3_precondition roomb 
130 move roomb rooma 
131 pick ball33 rooma left 
132 pick ball34 rooma right 
133 move rooma roomb 
134 drop ball33 roomb left 
135 drop ball34 roomb right 
136 __method_precondition_m0_move_two_balls_0_precondition ball35 rooma ball36 
137 __method_precondition_m3_goto_3_precondition roomb 
138 move roomb rooma 
139 pick ball35 rooma right 
140 pick ball36 rooma left 
141 move rooma roomb 
142 drop ball35 roomb right 
143 drop ball36 roomb left 
144 __method_precondition_m0_move_two_balls_0_precondition ball37 rooma ball38 
145 __method_precondition_m3_goto_3_precondition roomb 
146 move roomb rooma 
147 pick ball37 rooma left 
148 pick ball38 rooma right 
149 move rooma roomb 
150 drop ball37 roomb left 
151 drop ball38 roomb right 
152 __method_precondition_m0_move_two_balls_0_precondition ball39 rooma ball40 
153 __method_precondition_m3_goto_3_precondition roomb 
154 move roomb rooma 
155 pick ball39 rooma left 
156 pick ball40 rooma right 
157 move rooma roomb 
158 drop ball39 roomb left 
159 drop ball40 roomb right 
root 167
160 goto rooma  -> m3_goto 97 98
161 move_two_balls ball3 ball4 roomb  -> m0_move_two_balls 8 175 11 12 13 14 15
162 move_two_balls ball1 ball2 roomb  -> m0_move_two_balls 0 185 3 4 5 6 7
163 goto rooma  -> m3_goto 81 82
164 move_two_balls ball29 ball30 roomb  -> m0_move_two_balls 112 171 115 116 117 118 119
165 move_two_balls ball9 ball10 roomb  -> m0_move_two_balls 32 184 35 36 37 38 39
166 goto rooma  -> m3_goto 153 154
167 __artificialTopCompilation__top_1  -> __top_1 162 161 195 190 165 180 198 174 170 186 200 173 191 188 164 181 179 196 172 183
168 goto rooma  -> m3_goto 65 66
169 goto rooma  -> m3_goto 73 74
170 move_two_balls ball17 ball18 roomb  -> m0_move_two_balls 64 168 67 68 69 70 71
171 goto rooma  -> m3_goto 113 114
172 move_two_balls ball37 ball38 roomb  -> m0_move_two_balls 144 187 147 148 149 150 151
173 move_two_balls ball23 ball24 roomb  -> m0_move_two_balls 88 189 91 92 93 94 95
174 move_two_balls ball15 ball16 roomb  -> m0_move_two_balls 56 182 59 60 61 62 63
175 goto rooma  -> m3_goto 9 10
176 goto rooma  -> m3_goto 121 122
177 goto rooma  -> m3_goto 105 106
178 goto rooma  -> m3_goto 49 50
179 move_two_balls ball33 ball34 roomb  -> m0_move_two_balls 128 193 131 132 133 134 135
180 move_two_balls ball11 ball12 roomb  -> m0_move_two_balls 40 192 43 44 45 46 47
181 move_two_balls ball31 ball32 roomb  -> m0_move_two_balls 120 176 123 124 125 126 127
182 goto rooma  -> m3_goto 57 58
183 move_two_balls ball39 ball40 roomb  -> m0_move_two_balls 152 166 155 156 157 158 159
184 goto rooma  -> m3_goto 33 34
185 goto rooma  -> m2_goto 1 2
186 move_two_balls ball19 ball20 roomb  -> m0_move_two_balls 72 169 75 76 77 78 79
187 goto rooma  -> m3_goto 145 146
188 move_two_balls ball27 ball28 roomb  -> m0_move_two_balls 104 177 107 108 109 110 111
189 goto rooma  -> m3_goto 89 90
190 move_two_balls ball7 ball8 roomb  -> m0_move_two_balls 24 194 27 28 29 30 31
191 move_two_balls ball25 ball26 roomb  -> m0_move_two_balls 96 160 99 100 101 102 103
192 goto rooma  -> m3_goto 41 42
193 goto rooma  -> m3_goto 129 130
194 goto rooma  -> m3_goto 25 26
195 move_two_balls ball5 ball6 roomb  -> m0_move_two_balls 16 197 19 20 21 22 23
196 move_two_balls ball35 ball36 roomb  -> m0_move_two_balls 136 199 139 140 141 142 143
197 goto rooma  -> m3_goto 17 18
198 move_two_balls ball13 ball14 roomb  -> m0_move_two_balls 48 178 51 52 53 54 55
199 goto rooma  -> m3_goto 137 138
200 move_two_balls ball21 ball22 roomb  -> m0_move_two_balls 80 163 83 84 85 86 87

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 22.517 MEMPEAK_KBS 340595.712
