PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p08.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p08.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p08.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 24
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 24
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 24
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 24
Grounded planning graph ... done in 271ms.
	Number of Grounded Actions 317
	Number of Grounded Literals 147
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 24
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 24
Grounding ... done.
	number of abstract tasks = 111
	number of tasks = 338
	number of decomposition methods = 240
	number of predicates = 156
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 111
	number of tasks = 338
	number of decomposition methods = 240
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 57ms.
	Number of Grounded Actions 227
	Number of Grounded Literals 129
	number of abstract tasks = 111
	number of tasks = 338
	number of decomposition methods = 240
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 111
	number of tasks = 338
	number of decomposition methods = 240
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 112
	number of tasks = 339
	number of decomposition methods = 241
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 112
	number of tasks = 339
	number of decomposition methods = 241
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 9ms.
	Number of Grounded Actions 227
	Number of Grounded Literals 129
	number of abstract tasks = 112
	number of tasks = 339
	number of decomposition methods = 241
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 112
	number of tasks = 339
	number of decomposition methods = 241
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 112
	number of tasks = 339
	number of decomposition methods = 241
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 112
	number of tasks = 339
	number of decomposition methods = 241
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 112
	number of tasks = 339
	number of decomposition methods = 241
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 136
	number of epsilon methods = 0
	number of primitive tasks = 227
	number of constants = 0
Tasks 227 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773116ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854773057
done
initial PDT has 21 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 14 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 24768
Size 24763 at 0/227
Size 13594
Size 13405 at 0/227
Size 5981
Size 5981 at 0/227
Size 2459
Size 2459 at 0/227
Size 1278
Size 1278 at 0/227
Size 1072
Size 1072 at 0/227
Size 1056
Size 1056 at 0/227
Size 1048
Size 1048 at 0/227
Size 1046
Size 1046 at 0/227
Size 1046
Invariant time: 0.256
Number of invariants: 1046
Invariant Clauses 15690
NUMBER OF CLAUSES 19556
NUMBER OF STATE CLAUSES 19438
NUMBER OF DECOMPOSITION CLAUSES 118
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.4% 0.6% 0.0% 
NUMBER OF PATHS 14
Starting cryptominisat5.5
Setting starttime of solver to 1604508308873
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 99 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 56 leafs
SHOP LEAFS 35
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854772026
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 59622
NUMBER OF CLAUSES 76997
NUMBER OF STATE CLAUSES 74851
NUMBER OF DECOMPOSITION CLAUSES 2146
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.21000000000001% 2.79% 0.0% 
NUMBER OF PATHS 56
Starting cryptominisat5.5
Setting starttime of solver to 1604508309602
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 197 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 125 leafs
SHOP LEAFS 68
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854771453
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 131796
NUMBER OF CLAUSES 172202
NUMBER OF STATE CLAUSES 165893
NUMBER OF DECOMPOSITION CLAUSES 6309
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.34% 3.66% 0.0% 
NUMBER OF PATHS 125
Starting cryptominisat5.5
Setting starttime of solver to 1604508310369
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 300 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 270 leafs
SHOP LEAFS 147
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854770713
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 283466
NUMBER OF CLAUSES 370857
NUMBER OF STATE CLAUSES 356995
NUMBER OF DECOMPOSITION CLAUSES 13862
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.26% 3.74% 0.0% 
NUMBER OF PATHS 270
Starting cryptominisat5.5
Setting starttime of solver to 1604508311451
Command exited with non-zero status 20
0.09 0.00

Time command gave the following runtime for the solver: 90
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 369 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 345 leafs
SHOP LEAFS 177
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854769577
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 361916
NUMBER OF CLAUSES 472679
NUMBER OF STATE CLAUSES 455807
NUMBER OF DECOMPOSITION CLAUSES 16872
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.43% 3.5700000000000003% 0.0% 
NUMBER OF PATHS 345
Starting cryptominisat5.5
Setting starttime of solver to 1604508312498
Command exited with non-zero status 20
0.12 0.01

Time command gave the following runtime for the solver: 130
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 423 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 405 leafs
SHOP LEAFS 201
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854768310
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 424676
NUMBER OF CLAUSES 553883
NUMBER OF STATE CLAUSES 534799
NUMBER OF DECOMPOSITION CLAUSES 19084
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.55% 3.45% 0.0% 
NUMBER OF PATHS 405
Starting cryptominisat5.5
Setting starttime of solver to 1604508313749
Command exited with non-zero status 10
0.20 0.01

Time command gave the following runtime for the solver: 210
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_2;1,79 79 m7_do_get_truck
2;1 155 pathaction!2_2;1,145
Consider method^1_0,86 86 m3_do_put_on
0 99 pathaction!1_0,25
Consider method^0_,240 240 __top_1
 101 pathaction!0_,338
Consider method^2_4;2,231 231 _m3_do_put_on_2
4;2 79 pathaction!2_4;2,9
Consider method^2_3;4,0 0 m11_do_unload_truck
3;4 153 pathaction!2_3;4,289
Consider method^4_5;2;4;1,189 189 m7_do_get_truck
5;2;4;1 21 pathaction!4_5;2;4;1,147
Consider method^4_4;2;4;1,77 77 m7_do_get_truck
4;2;4;1 68 pathaction!4_4;2;4;1,148
Consider method^3_1;2;4,115 115 m10_do_load_truck
1;2;4 125 pathaction!3_1;2;4,98
Consider method^3_5;2;4,35 35 m10_do_load_truck
5;2;4 10 pathaction!3_5;2;4,89
Consider method^4_0;2;4;1,79 79 m7_do_get_truck
0;2;4;1 59 pathaction!4_0;2;4;1,145
Consider method^2_4;4,124 124 m11_do_unload_truck
4;4 168 pathaction!2_4;4,284
Consider method^3_0;2;4,42 42 m10_do_load_truck
0;2;4 36 pathaction!3_0;2;4,79
Consider method^2_2;2,45 45 m4_do_clear
2;2 157 pathaction!2_2;2,134
Consider method^3_3;2;4,57 57 m10_do_load_truck
3;2;4 106 pathaction!3_3;2;4,92
Consider method^4_5;2;4;2,213 213 m4_do_clear
5;2;4;2 67 pathaction!4_5;2;4;2,138
Consider method^2_0;2,68 68 _m3_do_put_on_2
0;2 103 pathaction!2_0;2,21
Consider method^2_1;4,145 145 m11_do_unload_truck
1;4 135 pathaction!2_1;4,283
Consider method^3_4;2;4,156 156 m10_do_load_truck
4;2;4 89 pathaction!3_4;2;4,94
Consider method^2_5;2,206 206 _m3_do_put_on_2
5;2 3 pathaction!2_5;2,7
Consider method^1_5,211 211 m3_do_put_on
5 24 pathaction!1_5,29
Consider method^2_6;1,201 201 m7_do_get_truck
6;1 136 pathaction!2_6;1,149
Consider method^1_6,66 66 m2_do_put_on
6 47 pathaction!1_6,28
Consider method^4_3;2;4;1,77 77 m7_do_get_truck
3;2;4;1 54 pathaction!4_3;2;4;1,148
Consider method^3_5;4;1,163 163 m4_do_clear
5;4;1 7 pathaction!3_5;4;1,129
Consider method^4_0;4;1;3,180 180 m6_do_get_truck
0;4;1;3 167 pathaction!4_0;4;1;3,150
Consider method^2_5;4,21 21 m11_do_unload_truck
5;4 130 pathaction!2_5;4,291
Consider method^2_1;2,179 179 _m3_do_put_on_2
1;2 74 pathaction!2_1;2,0
Consider method^5_1;4;1;1;3,104 104 m6_do_get_truck
1;4;1;1;3 149 pathaction!5_1;4;1;1;3,147
Consider method^4_1;4;1;1,186 186 m5_do_clear
1;4;1;1 76 pathaction!4_1;4;1;1,125
Consider method^6_1;4;1;1;1;1,235 235 m4_do_clear
1;4;1;1;1;1 126 pathaction!6_1;4;1;1;1;1,126
Consider method^4_1;2;4;2,119 119 m4_do_clear
1;2;4;2 144 pathaction!4_1;2;4;2,132
Consider method^3_0;4;1,47 47 m5_do_clear
0;4;1 35 pathaction!3_0;4;1,141
Consider method^1_4,202 202 m3_do_put_on
4 31 pathaction!1_4,26
Consider method^5_1;4;1;1;1,93 93 m5_do_clear
1;4;1;1;1 14 pathaction!5_1;4;1;1;1,144
Consider method^2_0;4,192 192 m11_do_unload_truck
0;4 112 pathaction!2_0;4,282
Consider method^1_1,70 70 m3_do_put_on
1 62 pathaction!1_1,27
Consider method^3_1;4;1,107 107 m5_do_clear
1;4;1 5 pathaction!3_1;4;1,135
Consider method^6_1;4;1;1;1;3,209 209 m7_do_get_truck
1;4;1;1;1;3 117 pathaction!6_1;4;1;1;1;3,148
Consider method^3_4;4;1,22 22 m4_do_clear
4;4;1 45 pathaction!3_4;4;1,140
Consider method^4_3;2;4;2,146 146 m4_do_clear
3;2;4;2 165 pathaction!4_3;2;4;2,139
Consider method^4_1;4;1;3,104 104 m6_do_get_truck
1;4;1;3 16 pathaction!4_1;4;1;3,147
Consider method^1_2,230 230 m2_do_put_on
2 48 pathaction!1_2,30
Consider method^4_4;2;4;2,163 163 m4_do_clear
4;2;4;2 119 pathaction!4_4;2;4;2,129
Consider method^4_1;2;4;1,201 201 m7_do_get_truck
1;2;4;1 65 pathaction!4_1;2;4;1,149
Consider method^4_0;4;1;1,108 108 m4_do_clear
0;4;1;1 151 pathaction!4_0;4;1;1,143
Consider method^4_3;4;1;3,201 201 m7_do_get_truck
3;4;1;3 80 pathaction!4_3;4;1;3,149
Consider method^4_3;4;1;1,154 154 m4_do_clear
3;4;1;1 73 pathaction!4_3;4;1;1,136
Consider method^2_3;2,165 165 _m3_do_put_on_2
3;2 32 pathaction!2_3;2,16
Consider method^2_6;2,164 164 m4_do_clear
6;2 109 pathaction!2_6;2,131
Consider method^1_3,106 106 m3_do_put_on
3 53 pathaction!1_3,24
Consider method^4_0;2;4;2,228 228 m4_do_clear
0;2;4;2 11 pathaction!4_0;2;4;2,127
Consider method^3_3;4;1,13 13 m5_do_clear
3;4;1 120 pathaction!3_3;4;1,137


CHECKING primitive solution of length 104 ...
true 154 __method_precondition_m10_do_load_truck_10_precondition[crate9,distributor1,pallet2,hoist2;]
true 57 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 121 Drive[truck1,distributor0,distributor1;]
true 75 __method_precondition_m4_do_clear_4_precondition[crate9,distributor1;]
true 128 nop[;]
true 49 Lift[hoist2,crate9,pallet2,distributor1;]
true 140 Load[hoist2,crate9,truck1,distributor1;]
true 122 Drive[truck1,distributor1,depot0;]
true 158 __method_precondition_m11_do_unload_truck_11_precondition[crate9,depot0,truck1,hoist0,pallet0;]
true 123 __method_precondition_m5_do_clear_5_precondition[pallet0,crate2,depot0,hoist0;]
true 50 __method_precondition_m4_do_clear_4_precondition[crate2,depot0;]
true 143 nop[;]
true 138 Lift[hoist0,crate2,pallet0,depot0;]
true 43 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 25 nop[;]
true 141 Load[hoist0,crate2,truck1,depot0;]
true 38 Unload[hoist0,crate9,truck1,depot0;]
true 51 Drop[hoist0,crate9,pallet0,depot0;]
true 85 __method_precondition_m10_do_load_truck_10_precondition[crate7,distributor1,crate4,hoist2;]
true 139 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 44 Drive[truck0,distributor0,distributor1;]
true 69 __method_precondition_m4_do_clear_4_precondition[crate7,distributor1;]
true 107 nop[;]
true 28 Lift[hoist2,crate7,crate4,distributor1;]
true 115 Load[hoist2,crate7,truck0,distributor1;]
true 64 Drive[truck0,distributor1,distributor0;]
true 63 __method_precondition_m11_do_unload_truck_11_precondition[crate7,distributor0,truck0,hoist1,pallet1;]
true 27 __method_precondition_m5_do_clear_5_precondition[pallet1,crate1,distributor0,hoist1;]
true 46 __method_precondition_m5_do_clear_5_precondition[crate1,crate5,distributor0,hoist1;]
true 102 __method_precondition_m5_do_clear_5_precondition[crate5,crate6,distributor0,hoist1;]
true 132 __method_precondition_m4_do_clear_4_precondition[crate6,distributor0;]
true 84 nop[;]
true 58 Lift[hoist1,crate6,crate5,distributor0;]
true 77 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 23 Drive[truck1,depot0,distributor0;]
true 93 Load[hoist1,crate6,truck1,distributor0;]
true 72 Lift[hoist1,crate5,crate1,distributor0;]
true 113 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor0;]
true 159 nop[;]
true 81 Load[hoist1,crate5,truck0,distributor0;]
true 39 Lift[hoist1,crate1,pallet1,distributor0;]
true 166 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor0;]
true 100 nop[;]
true 162 Load[hoist1,crate1,truck0,distributor0;]
true 173 Unload[hoist1,crate7,truck0,distributor0;]
true 171 Drop[hoist1,crate7,pallet1,distributor0;]
true 2 __method_precondition_m2_do_put_on_2_precondition[crate6,truck1;]
true 18 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 78 Drive[truck1,distributor0,distributor1;]
true 41 __method_precondition_m4_do_clear_4_precondition[pallet2,distributor1;]
true 110 nop[;]
true 92 Unload[hoist2,crate6,truck1,distributor1;]
true 116 Drop[hoist2,crate6,pallet2,distributor1;]
true 156 __method_precondition_m10_do_load_truck_10_precondition[crate0,distributor0,pallet4,hoist1;]
true 70 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 86 Drive[truck1,distributor1,distributor0;]
true 26 __method_precondition_m4_do_clear_4_precondition[crate0,distributor0;]
true 163 nop[;]
true 0 Lift[hoist1,crate0,pallet4,distributor0;]
true 94 Load[hoist1,crate0,truck1,distributor0;]
true 147 Drive[truck1,distributor0,distributor1;]
true 133 __method_precondition_m11_do_unload_truck_11_precondition[crate0,distributor1,truck1,hoist2,pallet3;]
true 170 __method_precondition_m5_do_clear_5_precondition[pallet3,crate4,distributor1,hoist2;]
true 42 __method_precondition_m4_do_clear_4_precondition[crate4,distributor1;]
true 134 nop[;]
true 169 Lift[hoist2,crate4,pallet3,distributor1;]
true 33 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 34 Drive[truck0,distributor0,distributor1;]
true 127 Load[hoist2,crate4,truck0,distributor1;]
true 98 Unload[hoist2,crate0,truck1,distributor1;]
true 137 Drop[hoist2,crate0,pallet3,distributor1;]
true 56 __method_precondition_m10_do_load_truck_10_precondition[crate8,distributor0,crate3,hoist1;]
true 124 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 148 Drive[truck1,distributor1,distributor0;]
true 129 __method_precondition_m4_do_clear_4_precondition[crate8,distributor0;]
true 12 nop[;]
true 83 Lift[hoist1,crate8,crate3,distributor0;]
true 20 Load[hoist1,crate8,truck1,distributor0;]
true 9 Drive[truck1,distributor0,distributor0;]
true 97 __method_precondition_m11_do_unload_truck_11_precondition[crate8,distributor0,truck1,hoist1,pallet4;]
true 161 __method_precondition_m4_do_clear_4_precondition[pallet4,distributor0;]
true 131 nop[;]
true 146 Unload[hoist1,crate8,truck1,distributor0;]
true 82 Drop[hoist1,crate8,pallet4,distributor0;]
true 152 __method_precondition_m10_do_load_truck_10_precondition[crate3,distributor0,pallet5,hoist1;]
true 111 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor0;]
true 29 Drive[truck0,distributor1,distributor0;]
true 17 __method_precondition_m4_do_clear_4_precondition[crate3,distributor0;]
true 105 nop[;]
true 91 Lift[hoist1,crate3,pallet5,distributor0;]
true 22 Load[hoist1,crate3,truck0,distributor0;]
true 55 Drive[truck0,distributor0,distributor0;]
true 1 __method_precondition_m11_do_unload_truck_11_precondition[crate3,distributor0,truck0,hoist1,crate8;]
true 40 __method_precondition_m4_do_clear_4_precondition[crate8,distributor0;]
true 164 nop[;]
true 95 Unload[hoist1,crate3,truck0,distributor0;]
true 108 Drop[hoist1,crate3,crate8,distributor0;]
true 142 __method_precondition_m2_do_put_on_2_precondition[crate1,truck0;]
true 71 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 174 Drive[truck0,distributor0,distributor1;]
true 88 __method_precondition_m4_do_clear_4_precondition[crate0,distributor1;]
true 13 nop[;]
true 6 Unload[hoist2,crate1,truck0,distributor1;]
true 96 Drop[hoist2,crate1,crate0,distributor1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 226
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 452
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 678
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 904
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 1130
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 1356
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 1582
TSTG: 2147483647
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 8
ICAPS: 1808
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 2034
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 2260
TSTG: 2147483647
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 11
ICAPS: 2486
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 12
ICAPS: 2712
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 2938
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 14
ICAPS: 3164
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 15
ICAPS: 3390
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 16
ICAPS: 3616
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 17
ICAPS: 3842
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 63
  lower bound = 16

Running SAT search with cost bound = 39
==================================================
  upper bound = 63
  lower bound = 16
LEN 39
ICAPS: 8814
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854766329
DP max: 13
Taking minimum: 13
Generating initial PDT ... done
initial PDT has 666 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 650 leafs
SHOP LEAFS 299
Assignment implications
Generating clauses representing decomposition ... done
At most K: 59ms input: 1522 K = 39
Number of actions Formula: 86ms for 120198 clauses
Layers: 10 paths 650
Layer 1 g 0 = 0 - 1 / 0 clauses 212226
Layer 1 g 1 = 2 - 3 / 2 clauses 212226
Layer 1 g 2 = 4 - 5 / 4 clauses 212226
Layer 1 g 3 = 6 - 7 / 6 clauses 212226
Layer 1 g 4 = 8 - 9 / 8 clauses 212226
Layer 1 g 5 = 10 - 11 / 10 clauses 212226
Layer 1 g 6 = 12 - 13 / 12 clauses 212226
Layer 1 g 7 = 14 - 15 / 14 clauses 212226
Layer 1 g 8 = 16 - 17 / 16 clauses 212226
Layer 1 g 9 = 18 - 19 / 18 clauses 212226
Layer 1 g 10 = 20 - 21 / 20 clauses 212226
Layer 1 g 11 = 22 - 23 / 22 clauses 212226
Layer 1 g 12 = 24 - 25 / 24 clauses 212226
Layer 1 g 13 = 26 - 27 / 26 clauses 212226
Layer 1 g 14 = 28 - 29 / 28 clauses 212226
Layer 1 g 15 = 30 - 31 / 30 clauses 212226
Layer 1 g 16 = 32 - 33 / 32 clauses 212226
Layer 1 g 17 = 34 - 35 / 34 clauses 212226
Layer 1 g 18 = 36 - 37 / 36 clauses 212226
Layer 1 g 19 = 38 - 39 / 38 clauses 212226
Layer 1 g 20 = 40 - 41 / 40 clauses 212226
Layer 1 g 21 = 42 - 43 / 42 clauses 212226
Layer 1 g 22 = 44 - 45 / 44 clauses 212226
Layer 1 g 23 = 46 - 47 / 46 clauses 212226
Layer 1 g 24 = 48 - 49 / 48 clauses 212226
Layer 1 g 25 = 50 - 51 / 50 clauses 212226
Layer 1 g 26 = 52 - 53 / 52 clauses 212226
Layer 1 g 27 = 54 - 55 / 54 clauses 212226
Layer 1 g 28 = 56 - 57 / 56 clauses 212226
Layer 1 g 29 = 58 - 59 / 58 clauses 212226
Layer 1 g 30 = 60 - 61 / 60 clauses 212226
Layer 1 g 31 = 62 - 63 / 62 clauses 212226
Layer 1 g 32 = 64 - 65 / 64 clauses 212226
Layer 1 g 33 = 66 - 67 / 66 clauses 212226
Layer 1 g 34 = 68 - 69 / 68 clauses 212226
Layer 1 g 35 = 70 - 71 / 70 clauses 212226
Layer 1 g 36 = 72 - 73 / 72 clauses 212226
Layer 1 g 37 = 74 - 75 / 74 clauses 212226
Layer 1 g 38 = 76 - 77 / 76 clauses 212226
Layer 1 g 39 = 78 - 79 / 78 clauses 212226
Layer 1 g 40 = 80 - 81 / 80 clauses 212226
Layer 1 g 41 = 82 - 83 / 82 clauses 212226
Layer 1 g 42 = 84 - 85 / 84 clauses 212226
Layer 1 g 43 = 86 - 87 / 86 clauses 212226
Layer 1 g 44 = 88 - 89 / 88 clauses 212226
Layer 1 g 45 = 90 - 91 / 90 clauses 212226
Layer 1 g 46 = 92 - 93 / 92 clauses 212226
Layer 1 g 47 = 94 - 95 / 94 clauses 212226
Layer 1 g 48 = 96 - 97 / 96 clauses 212226
Layer 1 g 49 = 98 - 99 / 98 clauses 212226
Layer 1 g 50 = 100 - 101 / 100 clauses 212226
Layer 1 g 51 = 102 - 103 / 102 clauses 212226
Layer 1 g 52 = 104 - 105 / 104 clauses 212226
Layer 1 g 53 = 106 - 107 / 106 clauses 212226
Layer 1 g 54 = 108 - 109 / 108 clauses 212226
Layer 1 g 55 = 110 - 111 / 110 clauses 212226
Layer 1 g 56 = 112 - 113 / 112 clauses 212226
Layer 1 g 57 = 114 - 115 / 114 clauses 212226
Layer 1 g 58 = 116 - 117 / 116 clauses 212226
Layer 1 g 59 = 118 - 119 / 118 clauses 212226
Layer 1 g 60 = 120 - 121 / 120 clauses 212226
Layer 1 g 61 = 122 - 123 / 122 clauses 212226
Layer 1 g 62 = 124 - 125 / 124 clauses 212226
Layer 1 g 63 = 126 - 127 / 126 clauses 212226
Layer 1 g 64 = 128 - 129 / 128 clauses 212226
Layer 1 g 65 = 130 - 131 / 130 clauses 212226
Layer 1 g 66 = 132 - 133 / 132 clauses 212226
Layer 1 g 67 = 134 - 135 / 134 clauses 212226
Layer 1 g 68 = 136 - 137 / 136 clauses 212226
Layer 1 g 69 = 138 - 139 / 138 clauses 212226
Layer 1 g 70 = 140 - 141 / 140 clauses 212226
Layer 1 g 71 = 142 - 143 / 142 clauses 212226
Layer 1 g 72 = 144 - 145 / 144 clauses 212226
Layer 1 g 73 = 146 - 147 / 146 clauses 212226
Layer 1 g 74 = 148 - 149 / 148 clauses 212226
Layer 1 g 75 = 150 - 151 / 150 clauses 212226
Layer 1 g 76 = 152 - 153 / 152 clauses 212226
Layer 1 g 77 = 154 - 155 / 154 clauses 212226
Layer 1 g 78 = 156 - 157 / 156 clauses 212226
Layer 1 g 79 = 158 - 159 / 158 clauses 212226
Layer 1 g 80 = 160 - 161 / 160 clauses 212226
Layer 1 g 81 = 162 - 163 / 162 clauses 212226
Layer 1 g 82 = 164 - 165 / 164 clauses 212226
Layer 1 g 83 = 166 - 167 / 166 clauses 212226
Layer 1 g 84 = 168 - 169 / 168 clauses 212226
Layer 1 g 85 = 170 - 171 / 170 clauses 212226
Layer 1 g 86 = 172 - 173 / 172 clauses 212226
Layer 1 g 87 = 174 - 175 / 174 clauses 212226
Layer 1 g 88 = 176 - 177 / 176 clauses 212226
Layer 1 g 89 = 178 - 179 / 178 clauses 212226
Layer 1 g 90 = 180 - 181 / 180 clauses 212226
Layer 1 g 91 = 182 - 183 / 182 clauses 212226
Layer 1 g 92 = 184 - 185 / 184 clauses 212226
Layer 1 g 93 = 186 - 187 / 186 clauses 212226
Layer 1 g 94 = 188 - 189 / 188 clauses 212226
Layer 1 g 95 = 190 - 191 / 190 clauses 212226
Layer 1 g 96 = 192 - 193 / 192 clauses 212226
Layer 1 g 97 = 194 - 195 / 194 clauses 212226
Layer 1 g 98 = 196 - 197 / 196 clauses 212226
Layer 1 g 99 = 198 - 199 / 198 clauses 212226
Layer 1 g 100 = 200 - 201 / 200 clauses 212226
Layer 1 g 101 = 202 - 203 / 202 clauses 212226
Layer 1 g 102 = 204 - 205 / 204 clauses 212226
Layer 1 g 103 = 206 - 207 / 206 clauses 212226
Layer 1 g 104 = 208 - 209 / 208 clauses 212226
Layer 1 g 105 = 210 - 211 / 210 clauses 212226
Layer 1 g 106 = 212 - 213 / 212 clauses 212226
Layer 1 g 107 = 214 - 215 / 214 clauses 212226
Layer 1 g 108 = 216 - 217 / 216 clauses 212226
Layer 1 g 109 = 218 - 219 / 218 clauses 212226
Layer 1 g 110 = 220 - 221 / 220 clauses 212226
Layer 1 g 111 = 222 - 223 / 222 clauses 212226
Layer 1 g 112 = 224 - 225 / 224 clauses 212226
Layer 1 g 113 = 226 - 227 / 226 clauses 212226
Layer 1 g 114 = 228 - 229 / 228 clauses 212226
Layer 1 g 115 = 230 - 231 / 230 clauses 212226
Layer 1 g 116 = 232 - 233 / 232 clauses 212226
Layer 1 g 117 = 234 - 235 / 234 clauses 212226
Layer 1 g 118 = 236 - 237 / 236 clauses 212226
Layer 1 g 119 = 238 - 239 / 238 clauses 212226
Layer 1 g 120 = 240 - 241 / 240 clauses 212226
Layer 1 g 121 = 242 - 243 / 242 clauses 212226
Layer 1 g 122 = 244 - 245 / 244 clauses 212226
Layer 1 g 123 = 246 - 247 / 246 clauses 212226
Layer 1 g 124 = 248 - 249 / 248 clauses 212226
Layer 1 g 125 = 250 - 251 / 250 clauses 212226
Layer 1 g 126 = 252 - 253 / 252 clauses 212226
Layer 1 g 127 = 254 - 255 / 254 clauses 212226
Layer 1 g 128 = 256 - 257 / 256 clauses 212226
Layer 1 g 129 = 258 - 259 / 258 clauses 212226
Layer 1 g 130 = 260 - 261 / 260 clauses 212226
Layer 1 g 131 = 262 - 263 / 262 clauses 212226
Layer 1 g 132 = 264 - 265 / 264 clauses 212226
Layer 1 g 133 = 266 - 267 / 266 clauses 212226
Layer 1 g 134 = 268 - 269 / 268 clauses 212226
Layer 1 g 135 = 270 - 271 / 270 clauses 212226
Layer 1 g 136 = 272 - 273 / 272 clauses 212226
Layer 1 g 137 = 274 - 275 / 274 clauses 212226
Layer 1 g 138 = 276 - 277 / 276 clauses 212226
Layer 1 g 139 = 278 - 279 / 278 clauses 212226
Layer 1 g 140 = 280 - 281 / 280 clauses 212226
Layer 1 g 141 = 282 - 283 / 282 clauses 212226
Layer 1 g 142 = 284 - 285 / 284 clauses 212226
Layer 1 g 143 = 286 - 287 / 286 clauses 212226
Layer 1 g 144 = 288 - 289 / 288 clauses 212226
Layer 1 g 145 = 290 - 291 / 290 clauses 212226
Layer 1 g 146 = 292 - 293 / 292 clauses 212226
Layer 1 g 147 = 294 - 295 / 294 clauses 212226
Layer 1 g 148 = 296 - 297 / 296 clauses 212226
Layer 1 g 149 = 298 - 299 / 298 clauses 212226
Layer 1 g 150 = 300 - 301 / 300 clauses 212226
Layer 1 g 151 = 302 - 303 / 302 clauses 212226
Layer 1 g 152 = 304 - 305 / 304 clauses 212226
Layer 1 g 153 = 306 - 307 / 306 clauses 212226
Layer 1 g 154 = 308 - 309 / 308 clauses 212226
Layer 1 g 155 = 310 - 311 / 310 clauses 212226
Layer 1 g 156 = 312 - 313 / 312 clauses 212226
Layer 1 g 157 = 314 - 315 / 314 clauses 212226
Layer 1 g 158 = 316 - 317 / 316 clauses 212226
Layer 1 g 159 = 318 - 319 / 318 clauses 212226
Layer 1 g 160 = 320 - 321 / 320 clauses 212226
Layer 1 g 161 = 322 - 323 / 322 clauses 212226
Layer 1 g 162 = 324 - 325 / 324 clauses 212226
Layer 1 g 163 = 326 - 327 / 326 clauses 212226
Layer 1 g 164 = 328 - 329 / 328 clauses 212226
Layer 1 g 165 = 330 - 331 / 330 clauses 212226
Layer 1 g 166 = 332 - 333 / 332 clauses 212226
Layer 1 g 167 = 334 - 335 / 334 clauses 212226
Layer 1 g 168 = 336 - 337 / 336 clauses 212226
Layer 1 g 169 = 338 - 339 / 338 clauses 212226
Layer 1 g 170 = 340 - 341 / 340 clauses 212226
Layer 1 g 171 = 342 - 343 / 342 clauses 212226
Layer 1 g 172 = 344 - 345 / 344 clauses 212226
Layer 1 g 173 = 346 - 347 / 346 clauses 212226
Layer 1 g 174 = 348 - 349 / 348 clauses 212226
Layer 1 g 175 = 350 - 351 / 350 clauses 212226
Layer 1 g 176 = 352 - 353 / 352 clauses 212226
Layer 1 g 177 = 354 - 355 / 354 clauses 212226
Layer 1 g 178 = 356 - 357 / 356 clauses 212226
Layer 1 g 179 = 358 - 359 / 358 clauses 212226
Layer 1 g 180 = 360 - 361 / 360 clauses 212226
Layer 1 g 181 = 362 - 363 / 362 clauses 212226
Layer 1 g 182 = 364 - 365 / 364 clauses 212226
Layer 1 g 183 = 366 - 367 / 366 clauses 212226
Layer 1 g 184 = 368 - 369 / 368 clauses 212226
Layer 1 g 185 = 370 - 371 / 370 clauses 212226
Layer 1 g 186 = 372 - 373 / 372 clauses 212226
Layer 1 g 187 = 374 - 375 / 374 clauses 212226
Layer 1 g 188 = 376 - 377 / 376 clauses 212226
Layer 1 g 189 = 378 - 379 / 378 clauses 212226
Layer 1 g 190 = 380 - 381 / 380 clauses 212226
Layer 1 g 191 = 382 - 383 / 382 clauses 212226
Layer 1 g 192 = 384 - 385 / 384 clauses 212226
Layer 1 g 193 = 386 - 387 / 386 clauses 212226
Layer 1 g 194 = 388 - 389 / 388 clauses 212226
Layer 1 g 195 = 390 - 391 / 390 clauses 212226
Layer 1 g 196 = 392 - 393 / 392 clauses 212226
Layer 1 g 197 = 394 - 395 / 394 clauses 212226
Layer 1 g 198 = 396 - 397 / 396 clauses 212226
Layer 1 g 199 = 398 - 399 / 398 clauses 212226
Layer 1 g 200 = 400 - 401 / 400 clauses 212226
Layer 1 g 201 = 402 - 403 / 402 clauses 212226
Layer 1 g 202 = 404 - 405 / 404 clauses 212226
Layer 1 g 203 = 406 - 407 / 406 clauses 212226
Layer 1 g 204 = 408 - 409 / 408 clauses 212226
Layer 1 g 205 = 410 - 411 / 410 clauses 212226
Layer 1 g 206 = 412 - 413 / 412 clauses 212226
Layer 1 g 207 = 414 - 415 / 414 clauses 212226
Layer 1 g 208 = 416 - 417 / 416 clauses 212226
Layer 1 g 209 = 418 - 419 / 418 clauses 212226
Layer 1 g 210 = 420 - 421 / 420 clauses 212226
Layer 1 g 211 = 422 - 423 / 422 clauses 212226
Layer 1 g 212 = 424 - 425 / 424 clauses 212226
Layer 1 g 213 = 426 - 427 / 426 clauses 212226
Layer 1 g 214 = 428 - 429 / 428 clauses 212226
Layer 1 g 215 = 430 - 431 / 430 clauses 212226
Layer 1 g 216 = 432 - 433 / 432 clauses 212226
Layer 1 g 217 = 434 - 435 / 434 clauses 212226
Layer 1 g 218 = 436 - 437 / 436 clauses 212226
Layer 1 g 219 = 438 - 439 / 438 clauses 212226
Layer 1 g 220 = 440 - 441 / 440 clauses 212226
Layer 1 g 221 = 442 - 443 / 442 clauses 212226
Layer 1 g 222 = 444 - 445 / 444 clauses 212226
Layer 1 g 223 = 446 - 447 / 446 clauses 212226
Layer 1 g 224 = 448 - 449 / 448 clauses 212226
Layer 1 g 225 = 450 - 451 / 450 clauses 212226
Layer 1 g 226 = 452 - 453 / 452 clauses 212226
Layer 1 g 227 = 454 - 455 / 454 clauses 212226
Layer 1 g 228 = 456 - 457 / 456 clauses 212226
Layer 1 g 229 = 458 - 459 / 458 clauses 212226
Layer 1 g 230 = 460 - 461 / 460 clauses 212226
Layer 1 g 231 = 462 - 463 / 462Still waiting ... running for 71548 will abort at 9223372036854766329
 clauses 212226
Layer 1 g 232 = 464 - 465 / 464 clauses 212226
Layer 1 g 233 = 466 - 467 / 466 clauses 212226
Layer 1 g 234 = 468 - 469 / 468 clauses 212226
Layer 1 g 235 = 470 - 471 / 470 clauses 212226
Layer 1 g 236 = 472 - 473 / 472 clauses 212226
Layer 1 g 237 = 474 - 475 / 474 clauses 212226
Layer 1 g 238 = 476 - 477 / 476 clauses 212226
Layer 1 g 239 = 478 - 479 / 478 clauses 212226
Layer 1 g 240 = 480 - 481 / 480 clauses 212226
Layer 1 g 241 = 482 - 483 / 482 clauses 212226
Layer 1 g 242 = 484 - 485 / 484 clauses 212226
Layer 1 g 243 = 486 - 487 / 486 clauses 212226
Layer 1 g 244 = 488 - 489 / 488 clauses 212226
Layer 1 g 245 = 490 - 491 / 490 clauses 212226
Layer 1 g 246 = 492 - 493 / 492 clauses 212226
Layer 1 g 247 = 494 - 495 / 494 clauses 212226
Layer 1 g 248 = 496 - 497 / 496 clauses 212226
Layer 1 g 249 = 498 - 499 / 498 clauses 212226
Layer 1 g 250 = 500 - 501 / 500 clauses 212226
Layer 1 g 251 = 502 - 503 / 502 clauses 212226
Layer 1 g 252 = 504 - 505 / 504 clauses 212226
Layer 1 g 253 = 506 - 507 / 506 clauses 212226
Layer 1 g 254 = 508 - 509 / 508 clauses 212226
Layer 1 g 255 = 510 - 511 / 510 clauses 212226
Layer 1 g 256 = 512 - 513 / 512 clauses 212226
Layer 1 g 257 = 514 - 515 / 514 clauses 212226
Layer 1 g 258 = 516 - 517 / 516 clauses 212226
Layer 1 g 259 = 518 - 519 / 518 clauses 212226
Layer 1 g 260 = 520 - 521 / 520 clauses 212226
Layer 1 g 261 = 522 - 523 / 522 clauses 212226
Layer 1 g 262 = 524 - 525 / 524 clauses 212226
Layer 1 g 263 = 526 - 527 / 526 clauses 212226
Layer 1 g 264 = 528 - 529 / 528 clauses 212226
Layer 1 g 265 = 530 - 531 / 530 clauses 212226
Layer 1 g 266 = 532 - 533 / 532 clauses 212226
Layer 1 g 267 = 534 - 535 / 534 clauses 212226
Layer 1 g 268 = 536 - 537 / 536 clauses 212226
Layer 1 g 269 = 538 - 539 / 538 clauses 212226
Layer 1 g 270 = 540 - 541 / 540 clauses 212226
Layer 1 g 271 = 542 - 543 / 542 clauses 212226
Layer 1 g 272 = 544 - 545 / 544 clauses 212226
Layer 1 g 273 = 546 - 547 / 546 clauses 212226
Layer 1 g 274 = 548 - 549 / 548 clauses 212226
Layer 1 g 275 = 550 - 551 / 550 clauses 212226
Layer 1 g 276 = 552 - 553 / 552 clauses 212226
Layer 1 g 277 = 554 - 555 / 554 clauses 212226
Layer 1 g 278 = 556 - 557 / 556 clauses 212226
Layer 1 g 279 = 558 - 559 / 558 clauses 212226
Layer 1 g 280 = 560 - 561 / 560 clauses 212226
Layer 1 g 281 = 562 - 563 / 562 clauses 212226
Layer 1 g 282 = 564 - 565 / 564 clauses 212226
Layer 1 g 283 = 566 - 567 / 566 clauses 212226
Layer 1 g 284 = 568 - 569 / 568 clauses 212226
Layer 1 g 285 = 570 - 571 / 570 clauses 212226
Layer 1 g 286 = 572 - 573 / 572 clauses 212226
Layer 1 g 287 = 574 - 575 / 574 clauses 212226
Layer 1 g 288 = 576 - 577 / 576 clauses 212226
Layer 1 g 289 = 578 - 579 / 578 clauses 212226
Layer 1 g 290 = 580 - 581 / 580 clauses 212226
Layer 1 g 291 = 582 - 583 / 582 clauses 212226
Layer 1 g 292 = 584 - 585 / 584 clauses 212226
Layer 1 g 293 = 586 - 587 / 586 clauses 212226
Layer 1 g 294 = 588 - 589 / 588 clauses 212226
Layer 1 g 295 = 590 - 591 / 590 clauses 212226
Layer 1 g 296 = 592 - 593 / 592 clauses 212226
Layer 1 g 297 = 594 - 595 / 594 clauses 212226
Layer 1 g 298 = 596 - 597 / 596 clauses 212226
Layer 1 g 299 = 598 - 599 / 598 clauses 212226
Layer 1 g 300 = 600 - 601 / 600 clauses 212226
Layer 1 g 301 = 602 - 603 / 602 clauses 212226
Layer 1 g 302 = 604 - 605 / 604 clauses 212226
Layer 1 g 303 = 606 - 607 / 606 clauses 212226
Layer 1 g 304 = 608 - 609 / 608 clauses 212226
Layer 1 g 305 = 610 - 611 / 610 clauses 212226
Layer 1 g 306 = 612 - 613 / 612 clauses 212226
Layer 1 g 307 = 614 - 615 / 614 clauses 212226
Layer 1 g 308 = 616 - 617 / 616 clauses 212226
Layer 1 g 309 = 618 - 619 / 618 clauses 212226
Layer 1 g 310 = 620 - 621 / 620 clauses 212226
Layer 1 g 311 = 622 - 623 / 622 clauses 212226
Layer 1 g 312 = 624 - 625 / 624 clauses 212226
Layer 1 g 313 = 626 - 627 / 626 clauses 212226
Layer 1 g 314 = 628 - 629 / 628 clauses 212226
Layer 1 g 315 = 630 - 631 / 630 clauses 212226
Layer 1 g 316 = 632 - 633 / 632 clauses 212226
Layer 1 g 317 = 634 - 635 / 634 clauses 212226
Layer 1 g 318 = 636 - 637 / 636 clauses 212226
Layer 1 g 319 = 638 - 639 / 638 clauses 212226
Layer 1 g 320 = 640 - 641 / 640 clauses 212226
Layer 1 g 321 = 642 - 643 / 642 clauses 212226
Layer 1 g 322 = 644 - 645 / 644 clauses 212226
Layer 1 g 323 = 646 - 647 / 646 clauses 212226
Layer 1 g 324 = 648 - 649 / 648 clauses 212226
Layer 2 g 0 = 0 - 3 / 1 clauses 212226
Layer 2 g 1 = 4 - 7 / 5 clauses 212226
Layer 2 g 2 = 8 - 11 / 9 clauses 212226
Layer 2 g 3 = 12 - 15 / 13 clauses 212226
Layer 2 g 4 = 16 - 19 / 17 clauses 212226
Layer 2 g 5 = 20 - 23 / 21 clauses 212226
Layer 2 g 6 = 24 - 27 / 25 clauses 212226
Layer 2 g 7 = 28 - 31 / 29 clauses 212226
Layer 2 g 8 = 32 - 35 / 33 clauses 212226
Layer 2 g 9 = 36 - 39 / 37 clauses 212226
Layer 2 g 10 = 40 - 43 / 41 clauses 212226
Layer 2 g 11 = 44 - 47 / 45 clauses 212226
Layer 2 g 12 = 48 - 51 / 49 clauses 212226
Layer 2 g 13 = 52 - 55 / 53 clauses 212226
Layer 2 g 14 = 56 - 59 / 57 clauses 212226
Layer 2 g 15 = 60 - 63 / 61 clauses 212226
Layer 2 g 16 = 64 - 67 / 65 clauses 212226
Layer 2 g 17 = 68 - 71 / 69 clauses 212226
Layer 2 g 18 = 72 - 75 / 73 clauses 212226
Layer 2 g 19 = 76 - 79 / 77 clauses 212226
Layer 2 g 20 = 80 - 83 / 81 clauses 212226
Layer 2 g 21 = 84 - 87 / 85 clauses 212226
Layer 2 g 22 = 88 - 91 / 89 clauses 212226
Layer 2 g 23 = 92 - 95 / 93 clauses 212226
Layer 2 g 24 = 96 - 99 / 97 clauses 212226
Layer 2 g 25 = 100 - 103 / 101 clauses 212226
Layer 2 g 26 = 104 - 107 / 105 clauses 212226
Layer 2 g 27 = 108 - 111 / 109 clauses 212226
Layer 2 g 28 = 112 - 115 / 113 clauses 212226
Layer 2 g 29 = 116 - 119 / 117 clauses 212226
Layer 2 g 30 = 120 - 123 / 121 clauses 212226
Layer 2 g 31 = 124 - 127 / 125 clauses 212226
Layer 2 g 32 = 128 - 131 / 129 clauses 212226
Layer 2 g 33 = 132 - 135 / 133 clauses 212226
Layer 2 g 34 = 136 - 139 / 137 clauses 212226
Layer 2 g 35 = 140 - 143 / 141 clauses 212226
Layer 2 g 36 = 144 - 147 / 145 clauses 212226
Layer 2 g 37 = 148 - 151 / 149 clauses 212226
Layer 2 g 38 = 152 - 155 / 153 clauses 212226
Layer 2 g 39 = 156 - 159 / 157 clauses 212226
Layer 2 g 40 = 160 - 163 / 161 clauses 212226
Layer 2 g 41 = 164 - 167 / 165 clauses 212226
Layer 2 g 42 = 168 - 171 / 169 clauses 212226
Layer 2 g 43 = 172 - 175 / 173 clauses 212226
Layer 2 g 44 = 176 - 179 / 177 clauses 212226
Layer 2 g 45 = 180 - 183 / 181 clauses 212226
Layer 2 g 46 = 184 - 187 / 185 clauses 212226
Layer 2 g 47 = 188 - 191 / 189 clauses 212226
Layer 2 g 48 = 192 - 195 / 193 clauses 212226
Layer 2 g 49 = 196 - 199 / 197 clauses 212226
Layer 2 g 50 = 200 - 203 / 201 clauses 212226
Layer 2 g 51 = 204 - 207 / 205 clauses 212226
Layer 2 g 52 = 208 - 211 / 209 clauses 212226
Layer 2 g 53 = 212 - 215 / 213 clauses 212226
Layer 2 g 54 = 216 - 219 / 217 clauses 212226
Layer 2 g 55 = 220 - 223 / 221 clauses 212226
Layer 2 g 56 = 224 - 227 / 225 clauses 212226
Layer 2 g 57 = 228 - 231 / 229 clauses 212226
Layer 2 g 58 = 232 - 235 / 233 clauses 212226
Layer 2 g 59 = 236 - 239 / 237 clauses 212226
Layer 2 g 60 = 240 - 243 / 241 clauses 212226
Layer 2 g 61 = 244 - 247 / 245 clauses 212226
Layer 2 g 62 = 248 - 251 / 249 clauses 212226
Layer 2 g 63 = 252 - 255 / 253 clauses 212226
Layer 2 g 64 = 256 - 259 / 257 clauses 212226
Layer 2 g 65 = 260 - 263 / 261 clauses 212226
Layer 2 g 66 = 264 - 267 / 265 clauses 212226
Layer 2 g 67 = 268 - 271 / 269 clauses 212226
Layer 2 g 68 = 272 - 275 / 273 clauses 212226
Layer 2 g 69 = 276 - 279 / 277 clauses 212226
Layer 2 g 70 = 280 - 283 / 281 clauses 212226
Layer 2 g 71 = 284 - 287 / 285 clauses 212226
Layer 2 g 72 = 288 - 291 / 289 clauses 212226
Layer 2 g 73 = 292 - 295 / 293 clauses 212226
Layer 2 g 74 = 296 - 299 / 297 clauses 212226
Layer 2 g 75 = 300 - 303 / 301 clauses 212226
Layer 2 g 76 = 304 - 307 / 305 clauses 212226
Layer 2 g 77 = 308 - 311 / 309 clauses 212226
Layer 2 g 78 = 312 - 315 / 313 clauses 212226
Layer 2 g 79 = 316 - 319 / 317 clauses 212226
Layer 2 g 80 = 320 - 323 / 321 clauses 212226
Layer 2 g 81 = 324 - 327 / 325 clauses 212226
Layer 2 g 82 = 328 - 331 / 329 clauses 212226
Layer 2 g 83 = 332 - 335 / 333 clauses 212226
Layer 2 g 84 = 336 - 339 / 337 clauses 212226
Layer 2 g 85 = 340 - 343 / 341 clauses 212226
Layer 2 g 86 = 344 - 347 / 345 clauses 212226
Layer 2 g 87 = 348 - 351 / 349 clauses 212226
Layer 2 g 88 = 352 - 355 / 353 clauses 212226
Layer 2 g 89 = 356 - 359 / 357 clauses 212226
Layer 2 g 90 = 360 - 363 / 361 clauses 212226
Layer 2 g 91 = 364 - 367 / 365 clauses 212226
Layer 2 g 92 = 368 - 371 / 369 clauses 212226
Layer 2 g 93 = 372 - 375 / 373 clauses 212226
Layer 2 g 94 = 376 - 379 / 377 clauses 212226
Layer 2 g 95 = 380 - 383 / 381 clauses 212226
Layer 2 g 96 = 384 - 387 / 385 clauses 212226
Layer 2 g 97 = 388 - 391 / 389 clauses 212226
Layer 2 g 98 = 392 - 395 / 393 clauses 212226
Layer 2 g 99 = 396 - 399 / 397 clauses 212226
Layer 2 g 100 = 400 - 403 / 401 clauses 212226
Layer 2 g 101 = 404 - 407 / 405 clauses 212226
Layer 2 g 102 = 408 - 411 / 409 clauses 212226
Layer 2 g 103 = 412 - 415 / 413 clauses 212226
Layer 2 g 104 = 416 - 419 / 417 clauses 212226
Layer 2 g 105 = 420 - 423 / 421 clauses 212226
Layer 2 g 106 = 424 - 427 / 425 clauses 212226
Layer 2 g 107 = 428 - 431 / 429 clauses 212226
Layer 2 g 108 = 432 - 435 / 433 clauses 212226
Layer 2 g 109 = 436 - 439 / 437 clauses 212226
Layer 2 g 110 = 440 - 443 / 441 clauses 212226
Layer 2 g 111 = 444 - 447 / 445 clauses 212226
Layer 2 g 112 = 448 - 451 / 449 clauses 212226
Layer 2 g 113 = 452 - 455 / 453 clauses 212226
Layer 2 g 114 = 456 - 459 / 457 clauses 212226
Layer 2 g 115 = 460 - 463 / 461 clauses 212226
Layer 2 g 116 = 464 - 467 / 465 clauses 212226
Layer 2 g 117 = 468 - 471 / 469 clauses 212226
Layer 2 g 118 = 472 - 475 / 473 clauses 212226
Layer 2 g 119 = 476 - 479 / 477 clauses 212226
Layer 2 g 120 = 480 - 483 / 481 clauses 212226
Layer 2 g 121 = 484 - 487 / 485 clauses 212226
Layer 2 g 122 = 488 - 491 / 489 clauses 212226
Layer 2 g 123 = 492 - 495 / 493 clauses 212226
Layer 2 g 124 = 496 - 499 / 497 clauses 212226
Layer 2 g 125 = 500 - 503 / 501 clauses 212226
Layer 2 g 126 = 504 - 507 / 505 clauses 212226
Layer 2 g 127 = 508 - 511 / 509 clauses 212226
Layer 2 g 128 = 512 - 515 / 513 clauses 212226
Layer 2 g 129 = 516 - 519 / 517 clauses 212226
Layer 2 g 130 = 520 - 523 / 521 clauses 212226
Layer 2 g 131 = 524 - 527 / 525 clauses 212226
Layer 2 g 132 = 528 - 531 / 529 clauses 212226
Layer 2 g 133 = 532 - 535 / 533 clauses 212226
Layer 2 g 134 = 536 - 539 / 537 clauses 212226
Layer 2 g 135 = 540 - 543 / 541 clauses 212226
Layer 2 g 136 = 544 - 547 / 545
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 157.089 MEMPEAK_KBS 8001729.536
