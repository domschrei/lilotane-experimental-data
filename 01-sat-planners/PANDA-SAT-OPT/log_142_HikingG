PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/HikingG/domain.hddl instances/HikingG/p10.hddl"


Planner Configuration
=====================
Domain: instances/HikingG/domain.hddl
Problem: instances/HikingG/p10.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p10.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 26
Compiling negative preconditions ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 26
Compiling split parameters ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 26
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 26
Grounded planning graph ... done in 1726ms.
	Number of Grounded Actions 16125
	Number of Grounded Literals 121
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 26
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 26
Grounding ... done.
	number of abstract tasks = 80
	number of tasks = 8269
	number of decomposition methods = 9249
	number of predicates = 121
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 3740
	number of epsilon methods = 0
	number of primitive tasks = 8189
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 80
	number of tasks = 8269
	number of decomposition methods = 9249
	number of predicates = 113
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 3740
	number of epsilon methods = 0
	number of primitive tasks = 8189
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1127ms.
	Number of Grounded Actions 8189
	Number of Grounded Literals 113
	number of abstract tasks = 80
	number of tasks = 8269
	number of decomposition methods = 9249
	number of predicates = 113
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 3740
	number of epsilon methods = 0
	number of primitive tasks = 8189
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 80
	number of tasks = 8269
	number of decomposition methods = 9249
	number of predicates = 113
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 3740
	number of epsilon methods = 0
	number of primitive tasks = 8189
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 80
	number of tasks = 8269
	number of decomposition methods = 9250
	number of predicates = 113
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 3740
	number of epsilon methods = 0
	number of primitive tasks = 8189
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 3281
	number of tasks = 11470
	number of decomposition methods = 12451
	number of predicates = 113
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 3740
	number of epsilon methods = 0
	number of primitive tasks = 8189
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 3281
	number of tasks = 11470
	number of decomposition methods = 12451
	number of predicates = 113
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 3740
	number of epsilon methods = 0
	number of primitive tasks = 8189
	number of constants = 0
Tasks 8189 - 4
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854762405ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854760073
done
initial PDT has 16 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 8 leafs
SHOP LEAFS 6
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 18984
Size 18979 at 0/8189
Size 9754 at 500/8189
Size 9369 at 1000/8189
Size 5681 at 1500/8189
Size 5681 at 2000/8189
Size 5681 at 2500/8189
Size 5681 at 3000/8189
Size 5681 at 3500/8189
Size 5681 at 4000/8189
Size 5681 at 4500/8189
Size 5681 at 5000/8189
Size 5681 at 5500/8189
Size 5681 at 6000/8189
Size 3456 at 6500/8189
Size 3456 at 7000/8189
Size 2177 at 7500/8189
Size 2177 at 8000/8189
Size 2177
Size 2173 at 0/8189
Size 2057 at 500/8189
Size 2057 at 1000/8189
Size 2057 at 1500/8189
Size 2057 at 2000/8189
Size 2057 at 2500/8189
Size 2057 at 3000/8189
Size 2057 at 3500/8189
Size 2057 at 4000/8189
Size 2057 at 4500/8189
Size 2057 at 5000/8189
Size 2057 at 5500/8189
Size 2057 at 6000/8189
Size 335 at 6500/8189
Size 335 at 7000/8189
Size 335 at 7500/8189
Size 335 at 8000/8189
Size 335
Size 335 at 0/8189
Size 255 at 500/8189
Size 245 at 1000/8189
Size 227 at 1500/8189
Size 227 at 2000/8189
Size 227 at 2500/8189
Size 227 at 3000/8189
Size 227 at 3500/8189
Size 227 at 4000/8189
Size 227 at 4500/8189
Size 227 at 5000/8189
Size 227 at 5500/8189
Size 227 at 6000/8189
Size 224 at 6500/8189
Size 224 at 7000/8189
Size 224 at 7500/8189
Size 224 at 8000/8189
Size 224
Size 224 at 0/8189
Size 224 at 500/8189
Size 224 at 1000/8189
Size 224 at 1500/8189
Size 224 at 2000/8189
Size 224 at 2500/8189
Size 224 at 3000/8189
Size 224 at 3500/8189
Size 224 at 4000/8189
Size 224 at 4500/8189
Size 224 at 5000/8189
Size 224 at 5500/8189
Size 224 at 6000/8189
Size 224 at 6500/8189
Size 224 at 7000/8189
Size 224 at 7500/8189
Size 224 at 8000/8189
Size 224
Invariant time: 1.28
Number of invariants: 224
Invariant Clauses 2016
NUMBER OF CLAUSES 2821154
NUMBER OF STATE CLAUSES 44709
NUMBER OF DECOMPOSITION CLAUSES 2776445
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 1.58% 98.42% 0.0% 
NUMBER OF PATHS 8
Starting cryptominisat5.5
Setting starttime of solver to 1604517382577
Command exited with non-zero status 20
0.52 0.01

Time command gave the following runtime for the solver: 530
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854751765
done
initial PDT has 35 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 19 leafs
SHOP LEAFS 8
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 4480
NUMBER OF CLAUSES 2888561
NUMBER OF STATE CLAUSES 58667
NUMBER OF DECOMPOSITION CLAUSES 2829894
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 2.0300000000000002% 97.97% 0.0% 
NUMBER OF PATHS 19
Starting cryptominisat5.5
Setting starttime of solver to 1604517388980
Command exited with non-zero status 20
0.53 0.03

Time command gave the following runtime for the solver: 560
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854745469
done
initial PDT has 67 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 41 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 9408
NUMBER OF CLAUSES 3456591
NUMBER OF STATE CLAUSES 84719
NUMBER OF DECOMPOSITION CLAUSES 3371872
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 2.45% 97.55% 0.0% 
NUMBER OF PATHS 41
Starting cryptominisat5.5
Setting starttime of solver to 1604517395626
Command exited with non-zero status 20
0.77 0.04

Time command gave the following runtime for the solver: 810
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854738540
done
initial PDT has 114 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 76 leafs
SHOP LEAFS 24
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 17248
NUMBER OF CLAUSES 4447617
NUMBER OF STATE CLAUSES 131397
NUMBER OF DECOMPOSITION CLAUSES 4316220
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 2.95% 97.05% 0.0% 
NUMBER OF PATHS 76
Starting cryptominisat5.5
Setting starttime of solver to 1604517405204
Command exited with non-zero status 20
1.44 0.08

Time command gave the following runtime for the solver: 1520
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854727899
done
initial PDT has 171 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 126 leafs
SHOP LEAFS 39
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 28448
NUMBER OF CLAUSES 6320805
NUMBER OF STATE CLAUSES 207665
NUMBER OF DECOMPOSITION CLAUSES 6113140
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 3.29% 96.71000000000001% 0.0% 
NUMBER OF PATHS 126
Starting cryptominisat5.5
Setting starttime of solver to 1604517422991
Command exited with non-zero status 20
4.00 0.11

Time command gave the following runtime for the solver: 4110
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854707174
done
initial PDT has 237 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 184 leafs
SHOP LEAFS 58
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 41440
NUMBER OF CLAUSES 7538094
NUMBER OF STATE CLAUSES 278381
NUMBER OF DECOMPOSITION CLAUSES 7259713
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 3.69% 96.31% 0.0% 
NUMBER OF PATHS 184
Starting cryptominisat5.5
Setting starttime of solver to 1604517449236
Command exited with non-zero status 20
6.85 0.13

Time command gave the following runtime for the solver: 6980
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854677565
done
initial PDT has 311 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 250 leafs
SHOP LEAFS 81
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 56224
NUMBER OF CLAUSES 8764198
NUMBER OF STATE CLAUSES 354537
NUMBER OF DECOMPOSITION CLAUSES 8409661
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 4.05% 95.95% 0.0% 
NUMBER OF PATHS 250
Starting cryptominisat5.5
Setting starttime of solver to 1604517482064
Command exited with non-zero status 20
14.45 0.17

Time command gave the following runtime for the solver: 14620
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854636954
done
initial PDT has 393 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 324 leafs
SHOP LEAFS 108
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 72800
NUMBER OF CLAUSES 10000938
NUMBER OF STATE CLAUSES 436133
NUMBER OF DECOMPOSITION CLAUSES 9564805
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 4.36% 95.64% 0.0% 
NUMBER OF PATHS 324
Starting cryptominisat5.5
Setting starttime of solver to 1604517526518
Command exited with non-zero status 20
22.35 0.22

Time command gave the following runtime for the solver: 22570
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 12
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854582442
done
initial PDT has 483 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 406 leafs
SHOP LEAFS 139
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 91168
NUMBER OF CLAUSES 11248314
NUMBER OF STATE CLAUSES 523169
NUMBER OF DECOMPOSITION CLAUSES 10725145
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 4.65% 95.35000000000001% 0.0% 
NUMBER OF PATHS 406
Starting cryptominisat5.5
Setting starttime of solver to 1604517587699
Command exited with non-zero status 10
27.56 0.29

Time command gave the following runtime for the solver: 27850
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... Still waiting ... running for 65312 will abort at 9223372036854582442
done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_0;2,510 510 m0_trip_to1
0;2 34 pathaction!2_0;2,4757
Consider method^7_0;2;1;9;9;9;2,9240 9240 __UNIQUE-replacement_2323
0;2;1;9;9;9;2 147 pathaction!7_0;2;1;9;9;9;2,10592
Consider method^7_0;2;1;8;8;8;2,4347 4347 __UNIQUE-replacement_1103
0;2;1;8;8;8;2 78 pathaction!7_0;2;1;8;8;8;2,9372
Consider method^5_0;2;1;9;8,9269 9269 m3_trip_to2
0;2;1;9;8 101 pathaction!5_0;2;1;9;8,1334
Consider method^5_0;2;1;9;9,9836 9836 m2_trip_to2
0;2;1;9;9 142 pathaction!5_0;2;1;9;9,1317
Consider method^11_0;2;1;8;8;8;5;2;2;2;2,2602 2602 m4_walk_everyone
0;2;1;8;8;8;5;2;2;2;2 121 pathaction!11_0;2;1;8;8;8;5;2;2;2;2,816
Consider method^8_0;2;1;9;9;8;5;2,9568 9568 m5_walk_everyone
0;2;1;9;9;8;5;2 154 pathaction!8_0;2;1;9;9;8;5;2,809
Consider method^1_0,3462 3462 m14_everyone_go_hiking
0 67 pathaction!1_0,7468
Consider method^8_0;2;1;8;8;8;5;2,7672 7672 m5_walk_everyone
0;2;1;8;8;8;5;2 45 pathaction!8_0;2;1;8;8;8;5;2,816
Consider method^7_0;2;1;9;9;9;5,10530 10530 m5_walk_everyone
0;2;1;9;9;9;5 140 pathaction!7_0;2;1;9;9;9;5,818
Consider method^3_0;1;0,191 191 m10_bring_tent
0;1;0 13 pathaction!3_0;1;0,1281
Consider method^10_0;2;1;8;8;8;5;2;2;2,10513 10513 m5_walk_everyone
0;2;1;8;8;8;5;2;2;2 41 pathaction!10_0;2;1;8;8;8;5;2;2;2,816
Consider method^8_0;2;1;9;9;9;5;2,9866 9866 m5_walk_everyone
0;2;1;9;9;9;5;2 143 pathaction!8_0;2;1;9;9;9;5;2,818
Consider method^10_0;2;1;9;9;8;5;2;2;2,7703 7703 m5_walk_everyone
0;2;1;9;9;8;5;2;2;2 39 pathaction!10_0;2;1;9;9;8;5;2;2;2,809
Consider method^7_0;2;1;8;8;8;9,4346 4346 __UNIQUE-replacement_1102
0;2;1;8;8;8;9 6 pathaction!7_0;2;1;8;8;8;9,9371
Consider method^3_0;1;1,7996 7996 m11_bring_cars
0;1;1 97 pathaction!3_0;1;1,800
Consider method^0_,12450 12450 __top_2
 31 pathaction!0_,11469
Consider method^6_0;2;1;9;8;9,9267 9267 __UNIQUE-replacement_2326
0;2;1;9;8;9 96 pathaction!6_0;2;1;9;8;9,10595
Consider method^8_0;2;1;9;8;5;2;2,1971 1971 m5_walk_everyone
0;2;1;9;8;5;2;2 4 pathaction!8_0;2;1;9;8;5;2;2,821
Consider method^7_0;2;1;9;9;8;9,849 849 __UNIQUE-replacement_214
0;2;1;9;9;8;9 76 pathaction!7_0;2;1;9;9;8;9,8483
Consider method^4_0;2;1;8,1059 1059 m2_trip_to2
0;2;1;8 95 pathaction!4_0;2;1;8,1302
Consider method^9_0;2;1;9;8;5;2;2;2,390 390 m5_walk_everyone
0;2;1;9;8;5;2;2;2 58 pathaction!9_0;2;1;9;8;5;2;2;2,821
Consider method^9_0;2;1;9;9;9;5;2;2,10661 10661 m5_walk_everyone
0;2;1;9;9;9;5;2;2 42 pathaction!9_0;2;1;9;9;9;5;2;2,818
Consider method^10_0;2;1;9;9;9;5;2;2;2,6533 6533 m5_walk_everyone
0;2;1;9;9;9;5;2;2;2 64 pathaction!10_0;2;1;9;9;9;5;2;2;2,818
Consider method^6_0;2;1;9;8;2,9268 9268 __UNIQUE-replacement_2327
0;2;1;9;8;2 145 pathaction!6_0;2;1;9;8;2,10596
Consider method^6_0;2;1;8;8;8,4348 4348 m3_trip_to2
0;2;1;8;8;8 16 pathaction!6_0;2;1;8;8;8,1302
Consider method^6_0;2;1;9;9;9,9241 9241 m3_trip_to2
0;2;1;9;9;9 11 pathaction!6_0;2;1;9;9;9,1309
Consider method^6_0;2;1;8;8;9,7297 7297 m1_trip_to2
0;2;1;8;8;9 158 pathaction!6_0;2;1;8;8;9,1298
Consider method^9_0;2;1;8;8;8;5;2;2,1140 1140 m5_walk_everyone
0;2;1;8;8;8;5;2;2 74 pathaction!9_0;2;1;8;8;8;5;2;2,816
Consider method^7_0;2;1;9;9;8;2,850 850 __UNIQUE-replacement_215
0;2;1;9;9;8;2 43 pathaction!7_0;2;1;9;9;8;2,8484
Consider method^10_0;2;1;9;8;5;2;2;2;2,2402 2402 m4_walk_everyone
0;2;1;9;8;5;2;2;2;2 8 pathaction!10_0;2;1;9;8;5;2;2;2;2,821
Consider method^7_0;2;1;8;8;8;5,9442 9442 m5_walk_everyone
0;2;1;8;8;8;5 2 pathaction!7_0;2;1;8;8;8;5,816
Consider method^2_0;1,187 187 m6_prepare_trip
0;1 0 pathaction!2_0;1,1286
Consider method^7_0;2;1;9;9;8;5,3367 3367 m5_walk_everyone
0;2;1;9;9;8;5 55 pathaction!7_0;2;1;9;9;8;5,809
Consider method^7_0;2;1;9;8;5;2,8265 8265 m5_walk_everyone
0;2;1;9;8;5;2 98 pathaction!7_0;2;1;9;8;5;2,821
Consider method^7_0;2;1;9;9;9;9,9239 9239 __UNIQUE-replacement_2322
0;2;1;9;9;9;9 37 pathaction!7_0;2;1;9;9;9;9,10591
Consider method^11_0;2;1;9;9;9;5;2;2;2;2,1077 1077 m4_walk_everyone
0;2;1;9;9;9;5;2;2;2;2 100 pathaction!11_0;2;1;9;9;9;5;2;2;2;2,818
Consider method^9_0;2;1;9;9;8;5;2;2,2420 2420 m5_walk_everyone
0;2;1;9;9;8;5;2;2 70 pathaction!9_0;2;1;9;9;8;5;2;2,809
Consider method^6_0;2;1;9;9;8,851 851 m3_trip_to2
0;2;1;9;9;8 92 pathaction!6_0;2;1;9;9;8,1314
Consider method^5_0;2;1;8;9,7297 7297 m1_trip_to2
0;2;1;8;9 27 pathaction!5_0;2;1;8;9,1298
Consider method^6_0;2;1;9;8;5,3571 3571 m5_walk_everyone
0;2;1;9;8;5 114 pathaction!6_0;2;1;9;8;5,821
Consider method^5_0;2;1;8;8,1059 1059 m2_trip_to2
0;2;1;8;8 82 pathaction!5_0;2;1;8;8,1302
Consider method^4_0;2;1;9,1014 1014 m2_trip_to2
0;2;1;9 159 pathaction!4_0;2;1;9,1294
Consider method^3_0;2;1,11023 11023 m2_trip_to2
0;2;1 146 pathaction!3_0;2;1,1328
Consider method^11_0;2;1;9;9;8;5;2;2;2;2,4777 4777 m4_walk_everyone
0;2;1;9;9;8;5;2;2;2;2 108 pathaction!11_0;2;1;9;9;8;5;2;2;2;2,809


CHECKING primitive solution of length 85 ...
true 87 __method_precondition_m14_everyone_go_hiking_14_precondition[couple1,guy1,girl1,place0;]
true 84 __method_precondition_m10_bring_tent_10_precondition[tent3,place0,girl0;]
true 48 put_down[girl0,place0,tent3;]
true 57 __method_precondition_m11_bring_cars_11_precondition[car1,place0,car2;]
true 10 nop[;]
true 79 __method_precondition_m0_trip_to1_0_precondition[couple1,guy1,girl1,place0;]
true 26 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 52 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 112 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 7 __method_precondition_m3_trip_to2_3_precondition[couple1,tent1,car2,car4,girl1,place1,place0,guy1;]
true 24 drive_tent[guy1,place0,place1,car2,tent1;]
true 88 drive[girl1,place0,place1,car4;]
true 61 put_up[guy1,place1,tent1;]
true 18 drive_passenger[girl1,place1,place0,car4,guy1;]
true 12 __method_precondition_m5_walk_everyone_5_precondition[couple2,place1,place0,guy2,girl2;]
true 36 walk_together[tent1,place1,guy2,place0,girl2,couple2;]
true 59 __method_precondition_m5_walk_everyone_5_precondition[couple1,place1,place0,guy1,girl1;]
true 115 walk_together[tent1,place1,guy1,place0,girl1,couple1;]
true 135 __method_precondition_m5_walk_everyone_5_precondition[couple0,place1,place0,guy0,girl0;]
true 128 walk_together[tent1,place1,guy0,place0,girl0,couple0;]
true 73 __method_precondition_m5_walk_everyone_5_precondition[couple3,place1,place0,guy3,girl3;]
true 86 walk_together[tent1,place1,guy3,place0,girl3,couple3;]
true 118 nop[;]
true 93 put_down[girl1,place1,tent1;]
true 35 drive_passenger[guy1,place1,place0,car2,girl1;]
true 54 drive[guy1,place0,place1,car2;]
true 149 drive[girl1,place0,place1,car4;]
true 62 nop[;]
true 46 nop[;]
true 3 __method_precondition_m2_trip_to2_2_precondition[place1,place2;]
true 77 __method_precondition_m3_trip_to2_3_precondition[couple1,tent1,car4,car2,girl1,place2,place1,guy1;]
true 127 drive_tent[guy1,place1,place2,car4,tent1;]
true 138 drive[girl1,place1,place2,car2;]
true 104 put_up[guy1,place2,tent1;]
true 83 drive_passenger[girl1,place2,place1,car2,guy1;]
true 99 __method_precondition_m5_walk_everyone_5_precondition[couple3,place2,place1,guy3,girl3;]
true 33 walk_together[tent1,place2,guy3,place1,girl3,couple3;]
true 157 __method_precondition_m5_walk_everyone_5_precondition[couple0,place2,place1,guy0,girl0;]
true 22 walk_together[tent1,place2,guy0,place1,girl0,couple0;]
true 56 __method_precondition_m5_walk_everyone_5_precondition[couple2,place2,place1,guy2,girl2;]
true 152 walk_together[tent1,place2,guy2,place1,girl2,couple2;]
true 5 __method_precondition_m5_walk_everyone_5_precondition[couple1,place2,place1,guy1,girl1;]
true 139 walk_together[tent1,place2,guy1,place1,girl1,couple1;]
true 153 nop[;]
true 72 put_down[girl1,place2,tent1;]
true 81 drive_passenger[guy1,place2,place1,car4,girl1;]
true 111 drive[guy1,place1,place2,car4;]
true 20 drive[girl1,place1,place2,car2;]
true 134 __method_precondition_m2_trip_to2_2_precondition[place2,place3;]
true 141 __method_precondition_m3_trip_to2_3_precondition[couple1,tent1,car4,car2,girl1,place3,place2,guy1;]
true 125 drive_tent[guy1,place2,place3,car4,tent1;]
true 65 drive[girl1,place2,place3,car2;]
true 126 put_up[guy1,place3,tent1;]
true 44 drive_passenger[girl1,place3,place2,car2,guy1;]
true 105 __method_precondition_m5_walk_everyone_5_precondition[couple3,place3,place2,guy3,girl3;]
true 113 walk_together[tent1,place3,guy3,place2,girl3,couple3;]
true 137 __method_precondition_m5_walk_everyone_5_precondition[couple1,place3,place2,guy1,girl1;]
true 50 walk_together[tent1,place3,guy1,place2,girl1,couple1;]
true 1 __method_precondition_m5_walk_everyone_5_precondition[couple2,place3,place2,guy2,girl2;]
true 122 walk_together[tent1,place3,guy2,place2,girl2,couple2;]
true 116 __method_precondition_m5_walk_everyone_5_precondition[couple0,place3,place2,guy0,girl0;]
true 124 walk_together[tent1,place3,guy0,place2,girl0,couple0;]
true 117 nop[;]
true 106 put_down[girl1,place3,tent1;]
true 133 drive_passenger[guy1,place3,place2,car4,girl1;]
true 21 drive[guy1,place2,place3,car4;]
true 68 drive[girl1,place2,place3,car2;]
true 89 __method_precondition_m3_trip_to2_3_precondition[couple1,tent1,car4,car2,girl1,place4,place3,guy1;]
true 90 drive_tent[guy1,place3,place4,car4,tent1;]
true 85 drive[girl1,place3,place4,car2;]
true 132 put_up[guy1,place4,tent1;]
true 148 drive_passenger[girl1,place4,place3,car2,guy1;]
true 94 __method_precondition_m5_walk_everyone_5_precondition[couple2,place4,place3,guy2,girl2;]
true 109 walk_together[tent1,place4,guy2,place3,girl2,couple2;]
true 144 __method_precondition_m5_walk_everyone_5_precondition[couple0,place4,place3,guy0,girl0;]
true 30 walk_together[tent1,place4,guy0,place3,girl0,couple0;]
true 123 __method_precondition_m5_walk_everyone_5_precondition[couple1,place4,place3,guy1,girl1;]
true 28 walk_together[tent1,place4,guy1,place3,girl1,couple1;]
true 120 __method_precondition_m5_walk_everyone_5_precondition[couple3,place4,place3,guy3,girl3;]
true 23 walk_together[tent1,place4,guy3,place3,girl3,couple3;]
true 119 nop[;]
true 91 put_down[girl1,place4,tent1;]
true 9 drive_passenger[guy1,place4,place3,car4,girl1;]
true 156 drive[guy1,place3,place4,car4;]
true 69 drive[girl1,place3,place4,car2;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 6564
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 13128
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 19692
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 4
ICAPS: 26256
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 5
ICAPS: 32820
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 6
ICAPS: 39384
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 7
ICAPS: 45948
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
LEN 8
ICAPS: 52512
TSTG: 2147483647
Method: 2147483647
DP max: 10
Taking minimum: 10
LEN 9
ICAPS: 59076
TSTG: 2147483647
Method: 2147483647
DP max: 11
Taking minimum: 11
LEN 10
ICAPS: 65640
TSTG: 2147483647
Method: 2147483647
DP max: 12
Taking minimum: 12
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 56
  lower bound = 9

Running SAT search with cost bound = 32
==================================================
  upper bound = 56
  lower bound = 9
LEN 32
ICAPS: 210048
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 101 will abort at 9223372036854515769
DP max: 34
Taking minimum: 34
Generating initial PDT ... done
initial PDT has 4487 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 4234 leafs
SHOP LEAFS 1833
Assignment implications
Generating clauses representing decomposition ... 
RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.148 MEMPEAK_KBS 4865516.544
