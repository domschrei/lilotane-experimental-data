PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p14.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p14.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p14.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 39
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 39
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 39
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 39
Grounded planning graph ... done in 547ms.
	Number of Grounded Actions 2213
	Number of Grounded Literals 351
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 39
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 39
Grounding ... done.
	number of abstract tasks = 1050
	number of tasks = 3185
	number of decomposition methods = 3871
	number of predicates = 351
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1050
	number of tasks = 3185
	number of decomposition methods = 3871
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 315ms.
	Number of Grounded Actions 2135
	Number of Grounded Literals 322
	number of abstract tasks = 1050
	number of tasks = 3185
	number of decomposition methods = 3871
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1050
	number of tasks = 3185
	number of decomposition methods = 3871
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1051
	number of tasks = 3186
	number of decomposition methods = 3872
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1051
	number of tasks = 3186
	number of decomposition methods = 3872
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 162ms.
	Number of Grounded Actions 2135
	Number of Grounded Literals 322
	number of abstract tasks = 1051
	number of tasks = 3186
	number of decomposition methods = 3872
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1051
	number of tasks = 3186
	number of decomposition methods = 3872
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1051
	number of tasks = 3186
	number of decomposition methods = 3872
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1051
	number of tasks = 3186
	number of decomposition methods = 3872
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1051
	number of tasks = 3186
	number of decomposition methods = 3872
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Tasks 2135 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854769219ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854768763
done
initial PDT has 282 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 282 leafs
SHOP LEAFS 74
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 155043
Size 155043 at 0/2135
Size 154296 at 500/2135
Size 153958 at 1000/2135
Size 153902 at 1500/2135
Size 27165 at 2000/2135
Size 24939
Size 24900 at 0/2135
Size 17155 at 500/2135
Size 17147 at 1000/2135
Size 17147 at 1500/2135
Size 16965 at 2000/2135
Size 16773
Size 16773 at 0/2135
Size 9826 at 500/2135
Size 9814 at 1000/2135
Size 9814 at 1500/2135
Size 9814 at 2000/2135
Size 3080
Size 3080 at 0/2135
Size 3072 at 500/2135
Size 3036 at 1000/2135
Size 3036 at 1500/2135
Size 3036 at 2000/2135
Size 3036
Size 3036 at 0/2135
Size 2964 at 500/2135
Size 2964 at 1000/2135
Size 2964 at 1500/2135
Size 2964 at 2000/2135
Size 2964
Size 2964 at 0/2135
Size 2844 at 500/2135
Size 2844 at 1000/2135
Size 2844 at 1500/2135
Size 2844 at 2000/2135
Size 2779
Size 2779 at 0/2135
Size 2779 at 500/2135
Size 2779 at 1000/2135
Size 2779 at 1500/2135
Size 2779 at 2000/2135
Size 2779
Invariant time: 3.066
Number of invariants: 2779
Invariant Clauses 786457
NUMBER OF CLAUSES 1237817
NUMBER OF STATE CLAUSES 1040916
NUMBER OF DECOMPOSITION CLAUSES 196901
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.09% 15.91% 0.0% 
NUMBER OF PATHS 282
Starting cryptominisat5.5
Setting starttime of solver to 1604496783353
Command exited with non-zero status 10
0.67 0.05

Time command gave the following runtime for the solver: 720
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_0;1;2,514 514 _m2_get_first_ingredient_3
0;1;2 325 pathaction!3_0;1;2,3030
Consider method^3_3;3;5,2038 2038 _m4_serve_shot_6
3;3;5 59 pathaction!3_3;3;5,805
Consider method^2_6;3,2279 2279 m4_serve_shot
6;3 272 pathaction!2_6;3,685
Consider method^1_3,296 296 m0_do_cocktail_in_shot1
3 313 pathaction!1_3,2464
Consider method^3_7;3;1,197 197 _m4_serve_shot_2
7;3;1 319 pathaction!3_7;3;1,853
Consider method^3_1;1;3,3801 3801 _m2_get_first_ingredient_4
1;1;3 106 pathaction!3_1;1;3,1276
Consider method^3_4;3;5,2121 2121 _m4_serve_shot_6
4;3;5 85 pathaction!3_4;3;5,812
Consider method^3_12;1;3,1907 1907 _m2_get_first_ingredient_4
12;1;3 68 pathaction!3_12;1;3,1278
Consider method^3_0;3;1,26 26 _m4_serve_shot_2
0;3;1 133 pathaction!3_0;3;1,861
Consider method^3_10;2;2,2126 2126 _m3_get_second_ingredient_3
10;2;2 97 pathaction!3_10;2;2,699
Consider method^3_6;3;5,1090 1090 _m4_serve_shot_6
6;3;5 328 pathaction!3_6;3;5,789
Consider method^2_8;3,677 677 m4_serve_shot
8;3 104 pathaction!2_8;3,686
Consider method^3_12;1;1,903 903 m8_do_fill_shot
12;1;1 180 pathaction!3_12;1;1,286
Consider method^3_6;1;1,2457 2457 m9_do_fill_shot
6;1;1 329 pathaction!3_6;1;1,306
Consider method^3_0;2;1,2464 2464 _m3_get_second_ingredient_2
0;2;1 335 pathaction!3_0;2;1,2365
Consider method^3_9;1;3,3817 3817 _m2_get_first_ingredient_4
9;1;3 165 pathaction!3_9;1;3,1256
Consider method^3_0;3;4,1339 1339 _m4_serve_shot_5
0;3;4 364 pathaction!3_0;3;4,357
Consider method^3_5;3;5,1424 1424 _m4_serve_shot_6
5;3;5 318 pathaction!3_5;3;5,784
Consider method^2_5;3,3260 3260 m4_serve_shot
5;3 123 pathaction!2_5;3,688
Consider method^3_8;3;1,401 401 _m4_serve_shot_2
8;3;1 316 pathaction!3_8;3;1,856
Consider method^3_12;3;5,3748 3748 _m4_serve_shot_6
12;3;5 126 pathaction!3_12;3;5,796
Consider method^4_10;3;1;0,3348 3348 m6_do_clean_shot
10;3;1;0 342 pathaction!4_10;3;1;0,1079
Consider method^4_4;3;1;0,84 84 m5_do_clean_shot
4;3;1;0 124 pathaction!4_4;3;1;0,876
Consider method^1_11,1122 1122 m1_do_cocktail_in_shot2
11 187 pathaction!1_11,2698
Consider method^3_8;3;5,793 793 _m4_serve_shot_6
8;3;5 394 pathaction!3_8;3;5,793
Consider method^2_8;2,2127 2127 m3_get_second_ingredient
8;2 80 pathaction!2_8;2,1365
Consider method^3_9;1;2,3429 3429 _m2_get_first_ingredient_3
9;1;2 50 pathaction!3_9;1;2,3010
Consider method^3_5;1;2,3158 3158 _m2_get_first_ingredient_3
5;1;2 405 pathaction!3_5;1;2,2958
Consider method^4_0;3;1;0,2319 2319 m5_do_clean_shot
0;3;1;0 83 pathaction!4_0;3;1;0,1105
Consider method^3_2;3;1,3409 3409 _m4_serve_shot_2
2;3;1 105 pathaction!3_2;3;1,871
Consider method^3_1;2;2,398 398 _m3_get_second_ingredient_3
1;2;2 312 pathaction!3_1;2;2,747
Consider method^3_10;3;4,2002 2002 _m4_serve_shot_5
10;3;4 58 pathaction!3_10;3;4,373
Consider method^3_6;2;1,1438 1438 _m3_get_second_ingredient_2
6;2;1 387 pathaction!3_6;2;1,2361
Consider method^3_3;2;2,1102 1102 _m3_get_second_ingredient_3
3;2;2 288 pathaction!3_3;2;2,702
Consider method^3_6;1;3,2041 2041 _m2_get_first_ingredient_4
6;1;3 275 pathaction!3_6;1;3,1298
Consider method^3_10;2;1,837 837 _m3_get_second_ingredient_2
10;2;1 262 pathaction!3_10;2;1,2378
Consider method^3_2;3;5,3848 3848 _m4_serve_shot_6
2;3;5 353 pathaction!3_2;3;5,788
Consider method^1_10,2959 2959 m0_do_cocktail_in_shot1
10 53 pathaction!1_10,2467
Consider method^3_2;2;2,3592 3592 _m3_get_second_ingredient_3
2;2;2 351 pathaction!3_2;2;2,731
Consider method^3_7;1;3,2041 2041 _m2_get_first_ingredient_4
7;1;3 317 pathaction!3_7;1;3,1298
Consider method^3_7;2;1,1438 1438 _m3_get_second_ingredient_2
7;2;1 39 pathaction!3_7;2;1,2361
Consider method^3_3;1;1,994 994 m8_do_fill_shot
3;1;1 7 pathaction!3_3;1;1,333
Consider method^4_5;3;1;0,638 638 m5_do_clean_shot
5;3;1;0 336 pathaction!4_5;3;1;0,1143
Consider method^2_1;3,3569 3569 m4_serve_shot
1;3 119 pathaction!2_1;3,695
Consider method^3_6;1;2,1300 1300 _m2_get_first_ingredient_3
6;1;2 359 pathaction!3_6;1;2,2993
Consider method^1_2,2639 2639 m0_do_cocktail_in_shot1
2 148 pathaction!1_2,2471
Consider method^3_2;1;1,3217 3217 m9_do_fill_shot
2;1;1 376 pathaction!3_2;1;1,246
Consider method^1_9,3472 3472 m0_do_cocktail_in_shot1
9 201 pathaction!1_9,2470
Consider method^3_12;2;1,3759 3759 _m3_get_second_ingredient_2
12;2;1 0 pathaction!3_12;2;1,2351
Consider method^3_9;3;4,242 242 _m4_serve_shot_5
9;3;4 163 pathaction!3_9;3;4,393
Consider method^3_1;3;1,2074 2074 _m4_serve_shot_2
1;3;1 67 pathaction!3_1;3;1,870
Consider method^3_4;2;2,398 398 _m3_get_second_ingredient_3
4;2;2 214 pathaction!3_4;2;2,747
Consider method^2_0;3,3480 3480 m4_serve_shot
0;3 168 pathaction!2_0;3,684
Consider method^2_8;1,2736 2736 m2_get_first_ingredient
8;1 177 pathaction!2_8;1,3080
Consider method^3_9;3;1,1824 1824 _m4_serve_shot_2
9;3;1 188 pathaction!3_9;3;1,869
Consider method^3_8;2;2,725 725 _m3_get_second_ingredient_3
8;2;2 286 pathaction!3_8;2;2,703
Consider method^2_5;2,3857 3857 m3_get_second_ingredient
5;2 332 pathaction!2_5;2,1358
Consider method^3_5;3;1,3089 3089 _m4_serve_shot_2
5;3;1 86 pathaction!3_5;3;1,868
Consider method^3_3;1;3,2810 2810 _m2_get_first_ingredient_4
3;1;3 156 pathaction!3_3;1;3,1325
Consider method^3_6;2;2,3509 3509 _m3_get_second_ingredient_3
6;2;2 365 pathaction!3_6;2;2,742
Consider method^4_1;3;1;0,1739 1739 m5_do_clean_shot
1;3;1;0 308 pathaction!4_1;3;1;0,1033
Consider method^3_7;1;2,1300 1300 _m2_get_first_ingredient_3
7;1;2 207 pathaction!3_7;1;2,2993
Consider method^2_0;2,1604 1604 m3_get_second_ingredient
0;2 65 pathaction!2_0;2,1355
Consider method^3_3;3;1,3427 3427 _m4_serve_shot_2
3;3;1 241 pathaction!3_3;3;1,860
Consider method^2_9;2,828 828 m3_get_second_ingredient
9;2 60 pathaction!2_9;2,1354
Consider method^2_2;2,2552 2552 m3_get_second_ingredient
2;2 416 pathaction!2_2;2,1352
Consider method^2_1;2,682 682 m3_get_second_ingredient
1;2 22 pathaction!2_1;2,1357
Consider method^3_7;1;1,2457 2457 m9_do_fill_shot
7;1;1 28 pathaction!3_7;1;1,306
Consider method^1_0,3160 3160 m0_do_cocktail_in_shot1
0 211 pathaction!1_0,2461
Consider method^2_12;1,2320 2320 m2_get_first_ingredient
12;1 341 pathaction!2_12;1,3064
Consider method^3_12;3;4,85 85 _m4_serve_shot_5
12;3;4 11 pathaction!3_12;3;4,364
Consider method^3_4;3;1,1581 1581 _m4_serve_shot_2
4;3;1 399 pathaction!3_4;3;1,855
Consider method^3_5;1;1,3252 3252 m9_do_fill_shot
5;1;1 98 pathaction!3_5;1;1,245
Consider method^2_7;3,1727 1727 m4_serve_shot
7;3 375 pathaction!2_7;3,692
Consider method^1_4,2432 2432 m0_do_cocktail_in_shot1
4 237 pathaction!1_4,2468
Consider method^4_6;3;1;0,1307 1307 m5_do_clean_shot
6;3;1;0 72 pathaction!4_6;3;1;0,1230
Consider method^2_10;2,2738 2738 m3_get_second_ingredient
10;2 130 pathaction!2_10;2,1348
Consider method^1_12,3232 3232 m0_do_cocktail_in_shot1
12 150 pathaction!1_12,2466
Consider method^3_9;2;1,2756 2756 _m3_get_second_ingredient_2
9;2;1 172 pathaction!3_9;2;1,2397
Consider method^2_7;1,3208 3208 m2_get_first_ingredient
7;1 113 pathaction!2_7;1,3075
Consider method^3_5;2;1,2082 2082 _m3_get_second_ingredient_2
5;2;1 239 pathaction!3_5;2;1,2420
Consider method^2_9;1,3115 3115 m2_get_first_ingredient
9;1 268 pathaction!2_9;1,3069
Consider method^2_4;1,579 579 m2_get_first_ingredient
4;1 415 pathaction!2_4;1,3064
Consider method^2_7;2,2174 2174 m3_get_second_ingredient
7;2 347 pathaction!2_7;2,1360
Consider method^4_2;3;1;0,415 415 m5_do_clean_shot
2;3;1;0 395 pathaction!4_2;3;1;0,958
Consider method^4_8;3;1;0,3838 3838 m5_do_clean_shot
8;3;1;0 193 pathaction!4_8;3;1;0,997
Consider method^3_4;1;3,3801 3801 _m2_get_first_ingredient_4
4;1;3 296 pathaction!3_4;1;3,1276
Consider method^3_5;2;2,2101 2101 _m3_get_second_ingredient_3
5;2;2 244 pathaction!3_5;2;2,774
Consider method^3_3;1;2,2513 2513 _m2_get_first_ingredient_3
3;1;2 44 pathaction!3_3;1;2,2986
Consider method^2_11;0,2289 2289 _m1_do_cocktail_in_shot2_4
11;0 127 pathaction!2_11;0,2345
Consider method^2_3;2,302 302 m3_get_second_ingredient
3;2 57 pathaction!2_3;2,1359
Consider method^2_6;2,339 339 m3_get_second_ingredient
6;2 112 pathaction!2_6;2,1361
Consider method^3_12;3;1,3418 3418 _m4_serve_shot_2
12;3;1 66 pathaction!3_12;3;1,848
Consider method^4_7;3;1;0,1037 1037 m5_do_clean_shot
7;3;1;0 368 pathaction!4_7;3;1;0,974
Consider method^3_4;2;1,2278 2278 _m3_get_second_ingredient_2
4;2;1 338 pathaction!3_4;2;1,2364
Consider method^3_1;2;1,2278 2278 _m3_get_second_ingredient_2
1;2;1 413 pathaction!3_1;2;1,2364
Consider method^2_4;2,1809 1809 m3_get_second_ingredient
4;2 367 pathaction!2_4;2,1349
Consider method^2_2;1,408 408 m2_get_first_ingredient
2;1 377 pathaction!2_2;1,3067
Consider method^3_3;2;1,3856 3856 _m3_get_second_ingredient_2
3;2;1 386 pathaction!3_3;2;1,2382
Consider method^3_4;1;2,1396 1396 _m2_get_first_ingredient_3
4;1;2 363 pathaction!3_4;1;2,3023
Consider method^2_0;1,767 767 m2_get_first_ingredient
0;1 261 pathaction!2_0;1,3070
Consider method^1_1,3037 3037 m0_do_cocktail_in_shot1
1 218 pathaction!1_1,2472
Consider method^3_1;3;4,3823 3823 _m4_serve_shot_5
1;3;4 75 pathaction!3_1;3;4,369
Consider method^4_3;3;1;0,990 990 m6_do_clean_shot
3;3;1;0 383 pathaction!4_3;3;1;0,1102
Consider method^3_12;1;2,1106 1106 _m2_get_first_ingredient_3
12;1;2 222 pathaction!3_12;1;2,3013
Consider method^2_6;1,1409 1409 m2_get_first_ingredient
6;1 301 pathaction!2_6;1,3076
Consider method^1_6,1478 1478 m0_do_cocktail_in_shot1
6 144 pathaction!1_6,2462
Consider method^3_0;3;5,609 609 _m4_serve_shot_6
0;3;5 109 pathaction!3_0;3;5,821
Consider method^3_12;2;2,2944 2944 _m3_get_second_ingredient_3
12;2;2 245 pathaction!3_12;2;2,738
Consider method^3_10;3;1,195 195 _m4_serve_shot_2
10;3;1 284 pathaction!3_10;3;1,865
Consider method^1_5,3776 3776 m0_do_cocktail_in_shot1
5 265 pathaction!1_5,2465
Consider method^3_9;3;5,3363 3363 _m4_serve_shot_6
9;3;5 242 pathaction!3_9;3;5,804
Consider method^2_3;3,486 486 m4_serve_shot
3;3 249 pathaction!2_3;3,687
Consider method^2_12;2,2970 2970 m3_get_second_ingredient
12;2 19 pathaction!2_12;2,1349
Consider method^3_7;3;4,970 970 _m4_serve_shot_5
7;3;4 70 pathaction!3_7;3;4,392
Consider method^3_2;3;4,1434 1434 _m4_serve_shot_5
2;3;4 138 pathaction!3_2;3;4,354
Consider method^3_6;3;1,3099 3099 _m4_serve_shot_2
6;3;1 379 pathaction!3_6;3;1,862
Consider method^3_10;1;2,1016 1016 _m2_get_first_ingredient_3
10;1;2 411 pathaction!3_10;1;2,2985
Consider method^2_12;3,251 251 m4_serve_shot
12;3 194 pathaction!2_12;3,689
Consider method^3_2;2;1,468 468 _m3_get_second_ingredient_2
2;2;1 63 pathaction!3_2;2;1,2421
Consider method^2_9;3,497 497 m4_serve_shot
9;3 41 pathaction!2_9;3,693
Consider method^0_,3871 3871 __top_1
 374 pathaction!0_,3185
Consider method^3_8;1;2,1959 1959 _m2_get_first_ingredient_3
8;1;2 331 pathaction!3_8;1;2,2990
Consider method^3_0;1;1,1679 1679 m8_do_fill_shot
0;1;1 153 pathaction!3_0;1;1,335
Consider method^3_1;1;1,458 458 m8_do_fill_shot
1;1;1 8 pathaction!3_1;1;1,284
Consider method^2_10;1,196 196 m2_get_first_ingredient
10;1 179 pathaction!2_10;1,3063
Consider method^3_2;1;2,2453 2453 _m2_get_first_ingredient_3
2;1;2 27 pathaction!3_2;1;2,3032
Consider method^3_5;1;3,2291 2291 _m2_get_first_ingredient_4
5;1;3 373 pathaction!3_5;1;3,1237
Consider method^2_2;3,659 659 m4_serve_shot
2;3 414 pathaction!2_2;3,694
Consider method^3_7;2;2,3509 3509 _m3_get_second_ingredient_3
7;2;2 254 pathaction!3_7;2;2,742
Consider method^4_12;3;1;0,1337 1337 m6_do_clean_shot
12;3;1;0 96 pathaction!4_12;3;1;0,1008
Consider method^3_5;3;4,2443 2443 _m4_serve_shot_5
5;3;4 128 pathaction!3_5;3;4,361
Consider method^3_10;3;5,778 778 _m4_serve_shot_6
10;3;5 240 pathaction!3_10;3;5,785
Consider method^2_10;3,73 73 m4_serve_shot
10;3 352 pathaction!2_10;3,690
Consider method^2_1;1,315 315 m2_get_first_ingredient
1;1 29 pathaction!2_1;1,3072
Consider method^3_8;2;1,1819 1819 _m3_get_second_ingredient_2
8;2;1 43 pathaction!3_8;2;1,2350
Consider method^2_5;1,2498 2498 m2_get_first_ingredient
5;1 47 pathaction!2_5;1,3073
Consider method^3_4;3;4,1468 1468 _m4_serve_shot_5
4;3;4 339 pathaction!3_4;3;4,356
Consider method^3_2;1;3,141 141 _m2_get_first_ingredient_4
2;1;3 158 pathaction!3_2;1;3,1238
Consider method^4_9;3;1;0,2747 2747 m5_do_clean_shot
9;3;1;0 33 pathaction!4_9;3;1;0,1100
Consider method^3_0;2;2,2322 2322 _m3_get_second_ingredient_3
0;2;2 38 pathaction!3_0;2;2,716
Consider method^3_3;3;4,1332 1332 _m4_serve_shot_5
3;3;4 212 pathaction!3_3;3;4,363
Consider method^3_4;1;1,1380 1380 m9_do_fill_shot
4;1;1 51 pathaction!3_4;1;1,284
Consider method^3_0;1;3,3214 3214 _m2_get_first_ingredient_4
0;1;3 183 pathaction!3_0;1;3,1327
Consider method^3_7;3;5,2840 2840 _m4_serve_shot_6
7;3;5 306 pathaction!3_7;3;5,820
Consider method^2_3;1,2854 2854 m2_get_first_ingredient
3;1 149 pathaction!2_3;1,3074
Consider method^3_6;3;4,456 456 _m4_serve_shot_5
6;3;4 385 pathaction!3_6;3;4,389
Consider method^1_8,2538 2538 m0_do_cocktail_in_shot1
8 32 pathaction!1_8,2463
Consider method^2_4;3,3240 3240 m4_serve_shot
4;3 267 pathaction!2_4;3,691
Consider method^3_10;1;3,694 694 _m2_get_first_ingredient_4
10;1;3 34 pathaction!3_10;1;3,1309
Consider method^3_8;1;1,1199 1199 m9_do_fill_shot
8;1;1 345 pathaction!3_8;1;1,269
Consider method^3_1;3;5,301 301 _m4_serve_shot_6
1;3;5 140 pathaction!3_1;3;5,800
Consider method^3_8;1;3,1286 1286 _m2_get_first_ingredient_4
8;1;3 292 pathaction!3_8;1;3,1261
Consider method^3_8;3;4,1127 1127 _m4_serve_shot_5
8;3;4 110 pathaction!3_8;3;4,353
Consider method^3_10;1;1,3201 3201 m8_do_fill_shot
10;1;1 94 pathaction!3_10;1;1,317
Consider method^1_7,344 344 m0_do_cocktail_in_shot1
7 253 pathaction!1_7,2469
Consider method^2_11;1,1270 1270 m7_do_fill_shot
11;1 157 pathaction!2_11;1,323
Consider method^3_9;2;2,1355 1355 _m3_get_second_ingredient_3
9;2;2 410 pathaction!3_9;2;2,730
Consider method^3_1;1;2,1396 1396 _m2_get_first_ingredient_3
1;1;2 169 pathaction!3_1;1;2,3023
Consider method^3_9;1;1,1881 1881 m7_do_fill_shot
9;1;1 228 pathaction!3_9;1;1,264


CHECKING primitive solution of length 257 ...
true 300 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 221 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient1,shot12;]
true 189 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser1,ingredient1;]
true 155 grasp[right,shot12;]
true 243 fill-shot[shot12,ingredient1,right,left,dispenser1;]
true 380 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,right,l0,l1;]
true 202 clean-shot[shot12,ingredient1,right,left;]
true 121 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,right,shot12;]
true 360 fill-shot[shot12,ingredient4,right,left,dispenser4;]
true 54 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,right,l1,l2;]
true 307 leave[right,shot12;]
true 143 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient1,ingredient4;]
true 125 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 87 nop[;]
true 101 grasp[left,shaker1;]
true 161 shake[cocktail8,ingredient1,ingredient4,shaker1,left,right;]
true 302 pour-shaker-to-shot[cocktail8,shot1,left,shaker1,l2,l1;]
true 289 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 137 clean-shaker[left,right,shaker1;]
true 333 leave[left,shaker1;]
true 182 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 200 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot14;]
true 389 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser1,ingredient1;]
true 173 grasp[left,shot14;]
true 185 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 116 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,left,l0,l1;]
true 323 clean-shot[shot14,ingredient1,left,right;]
true 64 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot14;]
true 115 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 88 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2;]
true 390 leave[left,shot14;]
true 84 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient3;]
true 227 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 95 nop[;]
true 134 grasp[right,shaker1;]
true 129 shake[cocktail9,ingredient1,ingredient3,shaker1,right,left;]
true 357 pour-shaker-to-shot[cocktail9,shot2,right,shaker1,l2,l1;]
true 142 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 305 clean-shaker[right,left,shaker1;]
true 215 leave[right,shaker1;]
true 49 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 349 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot14;]
true 198 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient3,dispenser2;]
true 25 grasp[right,shot14;]
true 206 clean-shot[shot14,ingredient3,right,left;]
true 247 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 181 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,right,l0,l1;]
true 369 clean-shot[shot14,ingredient2,right,left;]
true 402 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,right,shot14;]
true 278 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 191 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2;]
true 209 leave[right,shot14;]
true 235 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient4;]
true 46 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 412 nop[;]
true 141 grasp[right,shaker1;]
true 259 shake[cocktail4,ingredient2,ingredient4,shaker1,right,left;]
true 276 pour-shaker-to-shot[cocktail4,shot3,right,shaker1,l2,l1;]
true 162 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 270 clean-shaker[right,left,shaker1;]
true 255 leave[right,shaker1;]
true 303 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 266 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot4;]
true 397 __method_precondition_m8_do_fill_shot_8_precondition[shot4,dispenser4,ingredient4;]
true 344 grasp[right,shot4;]
true 160 fill-shot[shot4,ingredient4,right,left,dispenser4;]
true 393 pour-shot-to-clean-shaker[shot4,ingredient4,shaker1,right,l0,l1;]
true 246 clean-shot[shot4,ingredient4,right,left;]
true 358 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,right,shot4;]
true 204 fill-shot[shot4,ingredient1,right,left,dispenser1;]
true 287 pour-shot-to-used-shaker[shot4,ingredient1,shaker1,right,l1,l2;]
true 107 leave[right,shot4;]
true 176 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient1;]
true 14 __method_precondition_m6_do_clean_shot_6_precondition[shot4,left;]
true 117 grasp[left,shot4;]
true 132 clean-shot[shot4,ingredient1,left,right;]
true 320 leave[left,shot4;]
true 283 grasp[right,shaker1;]
true 238 shake[cocktail3,ingredient4,ingredient1,shaker1,right,left;]
true 5 pour-shaker-to-shot[cocktail3,shot4,right,shaker1,l2,l1;]
true 37 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 91 clean-shaker[right,left,shaker1;]
true 93 leave[right,shaker1;]
true 12 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 178 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot14;]
true 217 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient1,ingredient4,dispenser1;]
true 340 grasp[left,shot14;]
true 251 clean-shot[shot14,ingredient4,left,right;]
true 260 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 154 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,left,l0,l1;]
true 186 clean-shot[shot14,ingredient1,left,right;]
true 131 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,left,shot14;]
true 327 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 74 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2;]
true 256 leave[left,shot14;]
true 48 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient3;]
true 281 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 195 nop[;]
true 6 grasp[right,shaker1;]
true 45 shake[cocktail7,ingredient1,ingredient3,shaker1,right,left;]
true 35 pour-shaker-to-shot[cocktail7,shot5,right,shaker1,l2,l1;]
true 230 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 406 clean-shaker[right,left,shaker1;]
true 20 leave[right,shaker1;]
true 348 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 314 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot12;]
true 295 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient4,dispenser3;]
true 175 grasp[left,shot12;]
true 396 clean-shot[shot12,ingredient4,left,right;]
true 10 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 56 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,left,l0,l1;]
true 24 clean-shot[shot12,ingredient3,left,right;]
true 273 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot12;]
true 384 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 355 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2;]
true 291 leave[left,shot12;]
true 71 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient1;]
true 213 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 199 nop[;]
true 257 grasp[left,shaker1;]
true 196 shake[cocktail5,ingredient3,ingredient1,shaker1,left,right;]
true 167 pour-shaker-to-shot[cocktail5,shot6,left,shaker1,l2,l1;]
true 31 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 372 clean-shaker[left,right,shaker1;]
true 170 leave[left,shaker1;]
true 174 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 232 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot14;]
true 216 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient1,ingredient3,dispenser1;]
true 310 grasp[right,shot14;]
true 26 clean-shot[shot14,ingredient3,right,left;]
true 190 fill-shot[shot14,ingredient1,right,left,dispenser1;]
true 321 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,right,l0,l1;]
true 371 clean-shot[shot14,ingredient1,right,left;]
true 250 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,right,shot14;]
true 135 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 92 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,right,l1,l2;]
true 17 leave[right,shot14;]
true 407 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient3;]
true 224 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 18 nop[;]
true 13 grasp[right,shaker1;]
true 229 shake[cocktail6,ingredient1,ingredient3,shaker1,right,left;]
true 231 pour-shaker-to-shot[cocktail6,shot7,right,shaker1,l2,l1;]
true 233 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 103 clean-shaker[right,left,shaker1;]
true 73 leave[right,shaker1;]
true 108 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 40 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot14;]
true 79 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient1,ingredient3,dispenser1;]
true 77 grasp[right,shot14;]
true 337 clean-shot[shot14,ingredient3,right,left;]
true 248 fill-shot[shot14,ingredient1,right,left,dispenser1;]
true 279 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,right,l0,l1;]
true 298 clean-shot[shot14,ingredient1,right,left;]
true 293 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,right,shot14;]
true 220 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 55 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,right,l1,l2;]
true 280 leave[right,shot14;]
true 269 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient3;]
true 346 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 164 nop[;]
true 102 grasp[right,shaker1;]
true 304 shake[cocktail10,ingredient1,ingredient3,shaker1,right,left;]
true 81 pour-shaker-to-shot[cocktail10,shot8,right,shaker1,l2,l1;]
true 277 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 391 clean-shaker[right,left,shaker1;]
true 234 leave[right,shaker1;]
true 225 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 299 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot12;]
true 2 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient1,dispenser4;]
true 23 grasp[left,shot12;]
true 197 clean-shot[shot12,ingredient1,left,right;]
true 258 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 381 pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,left,l0,l1;]
true 203 clean-shot[shot12,ingredient4,left,right;]
true 118 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient3,left,shot12;]
true 354 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 9 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,left,l1,l2;]
true 311 leave[left,shot12;]
true 147 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient3;]
true 30 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 252 nop[;]
true 99 grasp[right,shaker1;]
true 61 shake[cocktail11,ingredient4,ingredient3,shaker1,right,left;]
true 1 pour-shaker-to-shot[cocktail11,shot9,right,shaker1,l2,l1;]
true 294 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 69 clean-shaker[right,left,shaker1;]
true 330 leave[right,shaker1;]
true 76 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 400 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot14;]
true 404 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient3,dispenser3;]
true 322 grasp[right,shot14;]
true 145 refill-shot[shot14,ingredient3,right,left,dispenser3;]
true 297 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1;]
true 152 clean-shot[shot14,ingredient3,right,left;]
true 309 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,right,shot14;]
true 370 fill-shot[shot14,ingredient1,right,left,dispenser1;]
true 120 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,right,l1,l2;]
true 90 leave[right,shot14;]
true 403 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient1;]
true 122 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 263 nop[;]
true 171 grasp[left,shaker1;]
true 388 shake[cocktail2,ingredient3,ingredient1,shaker1,left,right;]
true 361 pour-shaker-to-shot[cocktail2,shot10,left,shaker1,l2,l1;]
true 3 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 324 clean-shaker[left,right,shaker1;]
true 159 leave[left,shaker1;]
true 100 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 392 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot11;]
true 264 __method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser2,ingredient2;]
true 378 grasp[left,shot11;]
true 42 fill-shot[shot11,ingredient2,left,right,dispenser2;]
true 15 pour-shot-to-clean-shaker[shot11,ingredient2,shaker1,left,l0,l1;]
true 78 clean-shot[shot11,ingredient2,left,right;]
true 184 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,left,shot11;]
true 401 fill-shot[shot11,ingredient1,left,right,dispenser1;]
true 136 pour-shot-to-used-shaker[shot11,ingredient1,shaker1,left,l1,l2;]
true 139 leave[left,shot11;]
true 146 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient1;]
true 356 __method_precondition_m6_do_clean_shot_6_precondition[shot11,right;]
true 274 grasp[right,shot11;]
true 4 clean-shot[shot11,ingredient1,right,left;]
true 409 leave[right,shot11;]
true 111 grasp[left,shaker1;]
true 282 shake[cocktail1,ingredient2,ingredient1,shaker1,left,right;]
true 326 pour-shaker-to-shot[cocktail1,shot11,left,shaker1,l2,l1;]
true 36 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 290 clean-shaker[left,right,shaker1;]
true 343 leave[left,shaker1;]
true 210 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 62 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient3,dispenser3;]
true 226 grasp[right,shot12;]
true 362 refill-shot[shot12,ingredient3,right,left,dispenser3;]
true 16 leave[right,shot12;]
true 151 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left;]
true 114 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot13;]
true 315 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser1,ingredient1;]
true 366 grasp[left,shot13;]
true 21 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 223 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 271 clean-shot[shot13,ingredient1,left,right;]
true 334 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,left,shot13;]
true 205 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 82 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 350 leave[left,shot13;]
true 166 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient3;]
true 89 __method_precondition_m6_do_clean_shot_6_precondition[shot13,right;]
true 285 grasp[right,shot13;]
true 192 clean-shot[shot13,ingredient3,right,left;]
true 382 leave[right,shot13;]
true 52 grasp[left,shaker1;]
true 208 shake[cocktail7,ingredient1,ingredient3,shaker1,left,right;]
true 219 pour-shaker-to-shot[cocktail7,shot13,left,shaker1,l2,l1;]
true 398 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 408 clean-shaker[left,right,shaker1;]
true 236 leave[left,shaker1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2104
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 4208
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 6312
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 8416
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 10520
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 12624
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 14728
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 16832
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 18936
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 21040
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 23144
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 25248
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 27352
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 29456
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 31560
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 33664
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 35768
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 37872
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 39976
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 42080
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 44184
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 46288
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 48392
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 50496
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 52600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 54704
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 56808
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 58912
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 61016
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 63120
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 65224
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 67328
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 69432
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 71536
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 73640
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 75744
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 77848
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 79952
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 82056
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 84160
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 86264
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 88368
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 90472
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 92576
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 94680
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 96784
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 98888
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 100992
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 103096
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 105200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 107304
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 109408
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 111512
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 113616
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 115720
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 117824
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 119928
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 122032
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 124136
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 126240
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 128344
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 130448
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 132552
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 134656
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 136760
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 138864
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 140968
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 143072
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 145176
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 147280
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 149384
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 151488
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 153592
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 155696
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 157800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 159904
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 162008
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 164112
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 166216
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 168320
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 170424
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 172528
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 174632
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 176736
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 178840
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 180944
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 183048
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 185152
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 187256
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 189360
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 191464
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 193568
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 195672
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 197776
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 199880
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 201984
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 204088
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 206192
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 208296
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 210400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 212504
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 214608
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 216712
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 218816
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 220920
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 223024
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 225128
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 227232
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 229336
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 231440
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 233544
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 235648
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 237752
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 239856
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 241960
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 244064
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 246168
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 248272
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 250376
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 252480
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 254584
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 256688
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 258792
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 260896
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 263000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 126
ICAPS: 265104
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 127
ICAPS: 267208
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 128
ICAPS: 269312
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 129
ICAPS: 271416
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 130
ICAPS: 273520
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 131
ICAPS: 275624
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 132
ICAPS: 277728
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 133
ICAPS: 279832
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 134
ICAPS: 281936
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 135
ICAPS: 284040
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 136
ICAPS: 286144
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 137
ICAPS: 288248
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 138
ICAPS: 290352
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 139
ICAPS: 292456
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.065 MEMPEAK_KBS 651336.704
