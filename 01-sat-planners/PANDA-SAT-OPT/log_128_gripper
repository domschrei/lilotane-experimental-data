PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/gripper/domain.hddl instances/gripper/p16.hddl"


Planner Configuration
=====================
Domain: instances/gripper/domain.hddl
Problem: instances/gripper/p16.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p16.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 38
Compiling negative preconditions ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 38
Compiling split parameters ... done.
	number of abstract tasks = 3
	number of tasks = 11
	number of decomposition methods = 4
	number of predicates = 8
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 38
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 38
Grounded planning graph ... done in 289ms.
	Number of Grounded Actions 247
	Number of Grounded Literals 140
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 38
Two Way TDG ... done.
	number of abstract tasks = 2
	number of tasks = 9
	number of decomposition methods = 3
	number of predicates = 4
	number of sorts = 4
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 3
	number of epsilon methods = 0
	number of primitive tasks = 7
	number of constants = 38
Grounding ... done.
	number of abstract tasks = 19
	number of tasks = 265
	number of decomposition methods = 140
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 19
	number of tasks = 265
	number of decomposition methods = 140
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 59ms.
	Number of Grounded Actions 246
	Number of Grounded Literals 140
	number of abstract tasks = 19
	number of tasks = 265
	number of decomposition methods = 140
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 19
	number of tasks = 265
	number of decomposition methods = 140
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 15ms.
	Number of Grounded Actions 246
	Number of Grounded Literals 140
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 20
	number of tasks = 266
	number of decomposition methods = 141
	number of predicates = 140
	number of sorts = 0
	number of tasks in largest method = 17
	number of primitive SHOP tasks = 38
	number of epsilon methods = 0
	number of primitive tasks = 246
	number of constants = 0
Tasks 246 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773325ms

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854773279
done
initial PDT has 136 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 136 leafs
SHOP LEAFS 34
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 29190
Size 29190 at 0/246
Size 10187
Size 10187 at 0/246
Size 1464
Size 1464 at 0/246
Size 1396
Size 1396 at 0/246
Size 1396
Invariant time: 0.223
Number of invariants: 1396
Invariant Clauses 191252
NUMBER OF CLAUSES 234578
NUMBER OF STATE CLAUSES 230951
NUMBER OF DECOMPOSITION CLAUSES 3627
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.45% 1.55% 0.0% 
NUMBER OF PATHS 136
Starting cryptominisat5.5
Setting starttime of solver to 1604515235619
Command exited with non-zero status 10
0.08 0.00

Time command gave the following runtime for the solver: 80
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_5,100 100 m0_move_two_balls
5 48 pathaction!1_5,16
Consider method^1_10,114 114 m0_move_two_balls
10 161 pathaction!1_10,3
Consider method^2_13;1,67 67 m3_goto
13;1 143 pathaction!2_13;1,52
Consider method^2_4;1,67 67 m3_goto
4;1 47 pathaction!2_4;1,52
Consider method^2_11;1,67 67 m3_goto
11;1 146 pathaction!2_11;1,52
Consider method^2_9;1,67 67 m3_goto
9;1 106 pathaction!2_9;1,52
Consider method^1_0,93 93 m0_move_two_balls
0 30 pathaction!1_0,5
Consider method^2_6;1,67 67 m3_goto
6;1 37 pathaction!2_6;1,52
Consider method^2_3;1,67 67 m3_goto
3;1 136 pathaction!2_3;1,52
Consider method^2_16;1,67 67 m3_goto
16;1 89 pathaction!2_16;1,52
Consider method^2_8;1,67 67 m3_goto
8;1 7 pathaction!2_8;1,52
Consider method^2_5;1,67 67 m3_goto
5;1 56 pathaction!2_5;1,52
Consider method^1_6,71 71 m0_move_two_balls
6 40 pathaction!1_6,12
Consider method^2_2;1,67 67 m3_goto
2;1 16 pathaction!2_2;1,52
Consider method^1_2,31 31 m0_move_two_balls
2 169 pathaction!1_2,6
Consider method^2_10;1,67 67 m3_goto
10;1 162 pathaction!2_10;1,52
Consider method^2_1;1,67 67 m3_goto
1;1 134 pathaction!2_1;1,52
Consider method^1_13,14 14 m0_move_two_balls
13 33 pathaction!1_13,15
Consider method^1_11,121 121 m0_move_two_balls
11 110 pathaction!1_11,14
Consider method^2_14;1,67 67 m3_goto
14;1 99 pathaction!2_14;1,52
Consider method^2_15;1,67 67 m3_goto
15;1 121 pathaction!2_15;1,52
Consider method^2_12;1,67 67 m3_goto
12;1 82 pathaction!2_12;1,52
Consider method^1_14,108 108 m0_move_two_balls
14 88 pathaction!1_14,11
Consider method^1_9,119 119 m0_move_two_balls
9 124 pathaction!1_9,8
Consider method^2_0;1,63 63 m2_goto
0;1 138 pathaction!2_0;1,52
Consider method^1_15,49 49 m0_move_two_balls
15 92 pathaction!1_15,1
Consider method^1_3,46 46 m0_move_two_balls
3 13 pathaction!1_3,2
Consider method^0_,140 140 __top_1
 87 pathaction!0_,265
Consider method^1_8,113 113 m0_move_two_balls
8 141 pathaction!1_8,10
Consider method^1_16,106 106 m0_move_two_balls
16 74 pathaction!1_16,7
Consider method^1_12,70 70 m0_move_two_balls
12 117 pathaction!1_12,4
Consider method^1_1,127 127 m0_move_two_balls
1 96 pathaction!1_1,0
Consider method^1_4,125 125 m0_move_two_balls
4 113 pathaction!1_4,13
Consider method^1_7,86 86 m0_move_two_balls
7 127 pathaction!1_7,9
Consider method^2_7;1,67 67 m3_goto
7;1 26 pathaction!2_7;1,52


CHECKING primitive solution of length 136 ...
true 135 __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2;]
true 93 __method_precondition_m2_goto_2_precondition[rooma;]
true 155 nop[;]
true 86 pick[ball1,rooma,left;]
true 18 pick[ball2,rooma,right;]
true 91 move[rooma,roomb;]
true 170 drop[ball1,roomb,left;]
true 68 drop[ball2,roomb,right;]
true 139 __method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4;]
true 166 __method_precondition_m3_goto_3_precondition[roomb;]
true 90 move[roomb,rooma;]
true 71 pick[ball3,rooma,right;]
true 66 pick[ball4,rooma,left;]
true 148 move[rooma,roomb;]
true 120 drop[ball3,roomb,right;]
true 150 drop[ball4,roomb,left;]
true 15 __method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6;]
true 34 __method_precondition_m3_goto_3_precondition[roomb;]
true 76 move[roomb,rooma;]
true 101 pick[ball5,rooma,right;]
true 1 pick[ball6,rooma,left;]
true 156 move[rooma,roomb;]
true 77 drop[ball5,roomb,right;]
true 151 drop[ball6,roomb,left;]
true 20 __method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8;]
true 125 __method_precondition_m3_goto_3_precondition[roomb;]
true 25 move[roomb,rooma;]
true 22 pick[ball7,rooma,right;]
true 43 pick[ball8,rooma,left;]
true 81 move[rooma,roomb;]
true 42 drop[ball7,roomb,right;]
true 59 drop[ball8,roomb,left;]
true 63 __method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10;]
true 154 __method_precondition_m3_goto_3_precondition[roomb;]
true 27 move[roomb,rooma;]
true 67 pick[ball9,rooma,left;]
true 61 pick[ball10,rooma,right;]
true 122 move[rooma,roomb;]
true 114 drop[ball9,roomb,left;]
true 130 drop[ball10,roomb,right;]
true 41 __method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12;]
true 72 __method_precondition_m3_goto_3_precondition[roomb;]
true 14 move[roomb,rooma;]
true 102 pick[ball11,rooma,left;]
true 49 pick[ball12,rooma,right;]
true 35 move[rooma,roomb;]
true 78 drop[ball11,roomb,left;]
true 32 drop[ball12,roomb,right;]
true 165 __method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14;]
true 105 __method_precondition_m3_goto_3_precondition[roomb;]
true 36 move[roomb,rooma;]
true 53 pick[ball13,rooma,left;]
true 112 pick[ball14,rooma,right;]
true 17 move[rooma,roomb;]
true 160 drop[ball13,roomb,left;]
true 64 drop[ball14,roomb,right;]
true 85 __method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16;]
true 10 __method_precondition_m3_goto_3_precondition[roomb;]
true 12 move[roomb,rooma;]
true 131 pick[ball15,rooma,right;]
true 51 pick[ball16,rooma,left;]
true 94 move[rooma,roomb;]
true 6 drop[ball15,roomb,right;]
true 144 drop[ball16,roomb,left;]
true 158 __method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18;]
true 70 __method_precondition_m3_goto_3_precondition[roomb;]
true 132 move[roomb,rooma;]
true 3 pick[ball17,rooma,left;]
true 75 pick[ball18,rooma,right;]
true 55 move[rooma,roomb;]
true 24 drop[ball17,roomb,left;]
true 167 drop[ball18,roomb,right;]
true 23 __method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20;]
true 159 __method_precondition_m3_goto_3_precondition[roomb;]
true 119 move[roomb,rooma;]
true 133 pick[ball19,rooma,left;]
true 0 pick[ball20,rooma,right;]
true 50 move[rooma,roomb;]
true 145 drop[ball19,roomb,left;]
true 58 drop[ball20,roomb,right;]
true 44 __method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22;]
true 45 __method_precondition_m3_goto_3_precondition[roomb;]
true 5 move[roomb,rooma;]
true 21 pick[ball21,rooma,right;]
true 31 pick[ball22,rooma,left;]
true 157 move[rooma,roomb;]
true 52 drop[ball21,roomb,right;]
true 83 drop[ball22,roomb,left;]
true 111 __method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24;]
true 115 __method_precondition_m3_goto_3_precondition[roomb;]
true 9 move[roomb,rooma;]
true 137 pick[ball23,rooma,right;]
true 2 pick[ball24,rooma,left;]
true 140 move[rooma,roomb;]
true 153 drop[ball23,roomb,right;]
true 62 drop[ball24,roomb,left;]
true 100 __method_precondition_m0_move_two_balls_0_precondition[ball25,rooma,ball26;]
true 149 __method_precondition_m3_goto_3_precondition[roomb;]
true 11 move[roomb,rooma;]
true 123 pick[ball25,rooma,right;]
true 73 pick[ball26,rooma,left;]
true 107 move[rooma,roomb;]
true 147 drop[ball25,roomb,right;]
true 65 drop[ball26,roomb,left;]
true 103 __method_precondition_m0_move_two_balls_0_precondition[ball27,rooma,ball28;]
true 29 __method_precondition_m3_goto_3_precondition[roomb;]
true 80 move[roomb,rooma;]
true 98 pick[ball27,rooma,left;]
true 28 pick[ball28,rooma,right;]
true 84 move[rooma,roomb;]
true 164 drop[ball27,roomb,left;]
true 128 drop[ball28,roomb,right;]
true 57 __method_precondition_m0_move_two_balls_0_precondition[ball29,rooma,ball30;]
true 60 __method_precondition_m3_goto_3_precondition[roomb;]
true 116 move[roomb,rooma;]
true 79 pick[ball29,rooma,left;]
true 69 pick[ball30,rooma,right;]
true 8 move[rooma,roomb;]
true 38 drop[ball29,roomb,left;]
true 109 drop[ball30,roomb,right;]
true 4 __method_precondition_m0_move_two_balls_0_precondition[ball31,rooma,ball32;]
true 108 __method_precondition_m3_goto_3_precondition[roomb;]
true 97 move[roomb,rooma;]
true 54 pick[ball31,rooma,left;]
true 129 pick[ball32,rooma,right;]
true 104 move[rooma,roomb;]
true 168 drop[ball31,roomb,left;]
true 126 drop[ball32,roomb,right;]
true 163 __method_precondition_m0_move_two_balls_0_precondition[ball33,rooma,ball34;]
true 39 __method_precondition_m3_goto_3_precondition[roomb;]
true 95 move[roomb,rooma;]
true 152 pick[ball33,rooma,left;]
true 46 pick[ball34,rooma,right;]
true 19 move[rooma,roomb;]
true 118 drop[ball33,roomb,left;]
true 142 drop[ball34,roomb,right;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 42
TSTG: 3
Method: 1
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 84
TSTG: 3
Method: 2
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 126
TSTG: 3
Method: 3
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 168
TSTG: 3
Method: 4
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 210
TSTG: 3
Method: 5
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 252
TSTG: 3
Method: 6
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 294
TSTG: 3
Method: 7
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 336
TSTG: 3
Method: 8
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 378
TSTG: 3
Method: 9
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 420
TSTG: 3
Method: 10
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 462
TSTG: 3
Method: 11
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 504
TSTG: 3
Method: 12
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 546
TSTG: 3
Method: 13
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 588
TSTG: 3
Method: 14
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 630
TSTG: 3
Method: 15
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 672
TSTG: 3
Method: 16
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 714
TSTG: 3
Method: 17
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 756
TSTG: 3
Method: 18
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 798
TSTG: 3
Method: 19
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 840
TSTG: 3
Method: 20
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 882
TSTG: 3
Method: 21
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 924
TSTG: 3
Method: 22
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 966
TSTG: 3
Method: 23
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 1008
TSTG: 3
Method: 24
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 1050
TSTG: 3
Method: 25
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 1092
TSTG: 3
Method: 26
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 1134
TSTG: 3
Method: 27
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 1176
TSTG: 3
Method: 28
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 1218
TSTG: 3
Method: 29
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 1260
TSTG: 3
Method: 30
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 1302
TSTG: 3
Method: 31
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 1344
TSTG: 3
Method: 32
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 1386
TSTG: 3
Method: 33
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 1428
TSTG: 3
Method: 34
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 1470
TSTG: 3
Method: 35
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 1512
TSTG: 3
Method: 36
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 1554
TSTG: 3
Method: 37
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 1596
TSTG: 3
Method: 38
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 1638
TSTG: 3
Method: 39
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 1680
TSTG: 3
Method: 40
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 1722
TSTG: 3
Method: 41
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 1764
TSTG: 3
Method: 42
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 1806
TSTG: 3
Method: 43
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 1848
TSTG: 3
Method: 44
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 1890
TSTG: 3
Method: 45
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 1932
TSTG: 3
Method: 46
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 1974
TSTG: 3
Method: 47
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 2016
TSTG: 3
Method: 48
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 2058
TSTG: 3
Method: 49
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 2100
TSTG: 3
Method: 50
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 2142
TSTG: 3
Method: 51
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 2184
TSTG: 3
Method: 52
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 2226
TSTG: 3
Method: 53
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 2268
TSTG: 3
Method: 54
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 2310
TSTG: 3
Method: 55
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 2352
TSTG: 3
Method: 56
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 2394
TSTG: 3
Method: 57
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 2436
TSTG: 3
Method: 58
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 2478
TSTG: 3
Method: 59
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 2520
TSTG: 3
Method: 60
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 2562
TSTG: 3
Method: 61
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 2604
TSTG: 3
Method: 62
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 2646
TSTG: 3
Method: 63
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 2688
TSTG: 3
Method: 64
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 2730
TSTG: 3
Method: 65
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 2772
TSTG: 3
Method: 66
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 2814
TSTG: 3
Method: 67
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 2856
TSTG: 3
Method: 68
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 2898
TSTG: 3
Method: 69
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 2940
TSTG: 3
Method: 70
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 2982
TSTG: 3
Method: 71
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 3024
TSTG: 3
Method: 72
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 3066
TSTG: 3
Method: 73
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 3108
TSTG: 3
Method: 74
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 3150
TSTG: 3
Method: 75
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 3192
TSTG: 3
Method: 76
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 3234
TSTG: 3
Method: 77
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 3276
TSTG: 3
Method: 78
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 3318
TSTG: 3
Method: 79
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 3360
TSTG: 3
Method: 80
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 3402
TSTG: 3
Method: 81
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 3444
TSTG: 3
Method: 82
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 3486
TSTG: 3
Method: 83
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 3528
TSTG: 3
Method: 84
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 3570
TSTG: 3
Method: 85
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 3612
TSTG: 3
Method: 86
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 3654
TSTG: 3
Method: 87
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 3696
TSTG: 3
Method: 88
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 3738
TSTG: 3
Method: 89
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 3780
TSTG: 3
Method: 90
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 3822
TSTG: 3
Method: 91
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 3864
TSTG: 3
Method: 92
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 3906
TSTG: 3
Method: 93
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 3948
TSTG: 3
Method: 94
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 3990
TSTG: 3
Method: 95
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 4032
TSTG: 3
Method: 96
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 4074
TSTG: 3
Method: 97
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 4116
TSTG: 3
Method: 98
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 4158
TSTG: 3
Method: 99
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 4200
TSTG: 3
Method: 100
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 4242
TSTG: 3
Method: 101
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 4284
TSTG: 3
Method: 102
DP max: 4
Taking minimum: 3
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 102
  lower bound = 101
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 194668448
planner result = SOLUTION
============ solution ============
number of primitive plan steps = 136
cost of solution               = 102
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 140
number of actions                    = 266
number of abstract actions           = 20
number of primitive actions          = 246
number of methods                    = 141
number of primitive shop actions     = 38
number of primitive non-shop actions = 208
size of largest method               = 17
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 40750
number of clauses               = 234578
average size of clauses         = 2.0039645661570993
number of assert                = 38
number of horn                  = 233727
K offset                        = 0
K chosen value                  = 3
state formula                   = 230951
method children clauses         = 0
number of paths                 = 136
maximum plan length             = 136
number of decomposition clauses = 3627
number of ordering clauses      = 0
number of state clauses         = 230951
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 16823
============ parsing ============
total                         = 952
file parser                   = 543
sort expansion                = 163
closed world assumption       = 89
inherit preconditions         = 0
shop methods                  = 19
eliminate identical variables = 87
strip domain of hybridity     = 1
flatten formula               = 50
============ preprocessing ============
total                                      = 1353
compile negative preconditions             = 36
compile unit methods                       = 0
split parameter                            = 41
compile methods with identical tasks       = 3
removing unnecessary predicates            = 12
lifted reachabiltiy analysis               = 72
grounded planning graph analysis           = 560
grounded task decomposition graph analysis = 477
grounding                                  = 126
create artificial top task                 = 4
============ search preparation ============
compute state invariants = 298
============ sat ============
total                                        = 1475
generate formula                             = 1131
generate path decomposition tree             = 137
normalise path decomposition tree            = 33
sog optimisation                             = 47
translate path decomposition tree to clauses = 135
generate state formula                       = 1094
generate state invariant formula             = 246
transform to DIMACS                          = 133
SAT solver                                   = 80
SAT solver for K=0003                        = 80

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="246";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="20";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="194668448";"40 sat:20:state formula"="230951";"40 sat:01:number of variables"="40750";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="136";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="141";"01 solution:02:cost of solution"="102";"30 problem:07:number of primitive shop actions"="38";"01 solution:01:number of primitive plan steps"="136";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="266";"30 problem:08:number of primitive non-shop actions"="208";"30 problem:02:number of predicates"="140";"40 sat:03:number of horn"="233727";"40 sat:15:K chosen value"="3";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="17";"40 sat:03:average size of clauses"="2.0039645661570993";"40 sat:02:number of clauses"="234578";"40 sat:50:number of state clauses"="230951";"40 sat:03:number of assert"="38";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="136";"40 sat:50:number of decomposition clauses"="3627";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="543";"01 parsing:08:flatten formula"="50";"40 sat:00:total"="1475";"40 sat:16:generate state formula"="1094";"40 sat:20:transform to DIMACS"="133";"40 sat:11:generate path decomposition tree"="137";"02 preprocessing:07:compile methods with identical tasks"="3";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="12";"01 parsing:03:closed world assumption"="89";"02 preprocessing:11:lifted reachabiltiy analysis"="72";"01 parsing:02:sort expansion"="163";"40 sat:12:normalise path decomposition tree"="33";"40 sat:40:SAT solver"="80";"01 parsing:00:total"="952";"40 sat:10:generate formula"="1131";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="36";"00 total:00:total"="16823";"40 sat:13:sog optimisation"="47";"02 preprocessing:12:grounded planning graph analysis"="560";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="477";"02 preprocessing:04:split parameter"="41";"01 parsing:05:shop methods"="19";"10 search preparation:02:compute state invariants"="298";"01 parsing:06:eliminate identical variables"="87";"40 sat:15:translate path decomposition tree to clauses"="135";"40 sat:41:SAT solver for K=0003"="80";"40 sat:17:generate state invariant formula"="246";"02 preprocessing:00:total"="1353";"02 preprocessing:99:create artificial top task"="4";"02 preprocessing:84:grounding"="126"
#!verify __method_precondition_m0_move_two_balls_0_precondition[ball1,rooma,ball2];__method_precondition_m2_goto_2_precondition[rooma];nop[];pick[ball1,rooma,left];pick[ball2,rooma,right];move[rooma,roomb];drop[ball1,roomb,left];drop[ball2,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball3,rooma,ball4];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball3,rooma,right];pick[ball4,rooma,left];move[rooma,roomb];drop[ball3,roomb,right];drop[ball4,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball5,rooma,ball6];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball5,rooma,right];pick[ball6,rooma,left];move[rooma,roomb];drop[ball5,roomb,right];drop[ball6,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball7,rooma,ball8];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball7,rooma,right];pick[ball8,rooma,left];move[rooma,roomb];drop[ball7,roomb,right];drop[ball8,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball9,rooma,ball10];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball9,rooma,left];pick[ball10,rooma,right];move[rooma,roomb];drop[ball9,roomb,left];drop[ball10,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball11,rooma,ball12];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball11,rooma,left];pick[ball12,rooma,right];move[rooma,roomb];drop[ball11,roomb,left];drop[ball12,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball13,rooma,ball14];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball13,rooma,left];pick[ball14,rooma,right];move[rooma,roomb];drop[ball13,roomb,left];drop[ball14,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball15,rooma,ball16];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball15,rooma,right];pick[ball16,rooma,left];move[rooma,roomb];drop[ball15,roomb,right];drop[ball16,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball17,rooma,ball18];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball17,rooma,left];pick[ball18,rooma,right];move[rooma,roomb];drop[ball17,roomb,left];drop[ball18,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball19,rooma,ball20];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball19,rooma,left];pick[ball20,rooma,right];move[rooma,roomb];drop[ball19,roomb,left];drop[ball20,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball21,rooma,ball22];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball21,rooma,right];pick[ball22,rooma,left];move[rooma,roomb];drop[ball21,roomb,right];drop[ball22,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball23,rooma,ball24];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball23,rooma,right];pick[ball24,rooma,left];move[rooma,roomb];drop[ball23,roomb,right];drop[ball24,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball25,rooma,ball26];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball25,rooma,right];pick[ball26,rooma,left];move[rooma,roomb];drop[ball25,roomb,right];drop[ball26,roomb,left];__method_precondition_m0_move_two_balls_0_precondition[ball27,rooma,ball28];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball27,rooma,left];pick[ball28,rooma,right];move[rooma,roomb];drop[ball27,roomb,left];drop[ball28,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball29,rooma,ball30];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball29,rooma,left];pick[ball30,rooma,right];move[rooma,roomb];drop[ball29,roomb,left];drop[ball30,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball31,rooma,ball32];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball31,rooma,left];pick[ball32,rooma,right];move[rooma,roomb];drop[ball31,roomb,left];drop[ball32,roomb,right];__method_precondition_m0_move_two_balls_0_precondition[ball33,rooma,ball34];__method_precondition_m3_goto_3_precondition[roomb];move[roomb,rooma];pick[ball33,rooma,left];pick[ball34,rooma,right];move[rooma,roomb];drop[ball33,roomb,left];drop[ball34,roomb,right]
==>
0 __method_precondition_m0_move_two_balls_0_precondition ball1 rooma ball2 
1 __method_precondition_m2_goto_2_precondition rooma 
2 nop  
3 pick ball1 rooma left 
4 pick ball2 rooma right 
5 move rooma roomb 
6 drop ball1 roomb left 
7 drop ball2 roomb right 
8 __method_precondition_m0_move_two_balls_0_precondition ball3 rooma ball4 
9 __method_precondition_m3_goto_3_precondition roomb 
10 move roomb rooma 
11 pick ball3 rooma right 
12 pick ball4 rooma left 
13 move rooma roomb 
14 drop ball3 roomb right 
15 drop ball4 roomb left 
16 __method_precondition_m0_move_two_balls_0_precondition ball5 rooma ball6 
17 __method_precondition_m3_goto_3_precondition roomb 
18 move roomb rooma 
19 pick ball5 rooma right 
20 pick ball6 rooma left 
21 move rooma roomb 
22 drop ball5 roomb right 
23 drop ball6 roomb left 
24 __method_precondition_m0_move_two_balls_0_precondition ball7 rooma ball8 
25 __method_precondition_m3_goto_3_precondition roomb 
26 move roomb rooma 
27 pick ball7 rooma right 
28 pick ball8 rooma left 
29 move rooma roomb 
30 drop ball7 roomb right 
31 drop ball8 roomb left 
32 __method_precondition_m0_move_two_balls_0_precondition ball9 rooma ball10 
33 __method_precondition_m3_goto_3_precondition roomb 
34 move roomb rooma 
35 pick ball9 rooma left 
36 pick ball10 rooma right 
37 move rooma roomb 
38 drop ball9 roomb left 
39 drop ball10 roomb right 
40 __method_precondition_m0_move_two_balls_0_precondition ball11 rooma ball12 
41 __method_precondition_m3_goto_3_precondition roomb 
42 move roomb rooma 
43 pick ball11 rooma left 
44 pick ball12 rooma right 
45 move rooma roomb 
46 drop ball11 roomb left 
47 drop ball12 roomb right 
48 __method_precondition_m0_move_two_balls_0_precondition ball13 rooma ball14 
49 __method_precondition_m3_goto_3_precondition roomb 
50 move roomb rooma 
51 pick ball13 rooma left 
52 pick ball14 rooma right 
53 move rooma roomb 
54 drop ball13 roomb left 
55 drop ball14 roomb right 
56 __method_precondition_m0_move_two_balls_0_precondition ball15 rooma ball16 
57 __method_precondition_m3_goto_3_precondition roomb 
58 move roomb rooma 
59 pick ball15 rooma right 
60 pick ball16 rooma left 
61 move rooma roomb 
62 drop ball15 roomb right 
63 drop ball16 roomb left 
64 __method_precondition_m0_move_two_balls_0_precondition ball17 rooma ball18 
65 __method_precondition_m3_goto_3_precondition roomb 
66 move roomb rooma 
67 pick ball17 rooma left 
68 pick ball18 rooma right 
69 move rooma roomb 
70 drop ball17 roomb left 
71 drop ball18 roomb right 
72 __method_precondition_m0_move_two_balls_0_precondition ball19 rooma ball20 
73 __method_precondition_m3_goto_3_precondition roomb 
74 move roomb rooma 
75 pick ball19 rooma left 
76 pick ball20 rooma right 
77 move rooma roomb 
78 drop ball19 roomb left 
79 drop ball20 roomb right 
80 __method_precondition_m0_move_two_balls_0_precondition ball21 rooma ball22 
81 __method_precondition_m3_goto_3_precondition roomb 
82 move roomb rooma 
83 pick ball21 rooma right 
84 pick ball22 rooma left 
85 move rooma roomb 
86 drop ball21 roomb right 
87 drop ball22 roomb left 
88 __method_precondition_m0_move_two_balls_0_precondition ball23 rooma ball24 
89 __method_precondition_m3_goto_3_precondition roomb 
90 move roomb rooma 
91 pick ball23 rooma right 
92 pick ball24 rooma left 
93 move rooma roomb 
94 drop ball23 roomb right 
95 drop ball24 roomb left 
96 __method_precondition_m0_move_two_balls_0_precondition ball25 rooma ball26 
97 __method_precondition_m3_goto_3_precondition roomb 
98 move roomb rooma 
99 pick ball25 rooma right 
100 pick ball26 rooma left 
101 move rooma roomb 
102 drop ball25 roomb right 
103 drop ball26 roomb left 
104 __method_precondition_m0_move_two_balls_0_precondition ball27 rooma ball28 
105 __method_precondition_m3_goto_3_precondition roomb 
106 move roomb rooma 
107 pick ball27 rooma left 
108 pick ball28 rooma right 
109 move rooma roomb 
110 drop ball27 roomb left 
111 drop ball28 roomb right 
112 __method_precondition_m0_move_two_balls_0_precondition ball29 rooma ball30 
113 __method_precondition_m3_goto_3_precondition roomb 
114 move roomb rooma 
115 pick ball29 rooma left 
116 pick ball30 rooma right 
117 move rooma roomb 
118 drop ball29 roomb left 
119 drop ball30 roomb right 
120 __method_precondition_m0_move_two_balls_0_precondition ball31 rooma ball32 
121 __method_precondition_m3_goto_3_precondition roomb 
122 move roomb rooma 
123 pick ball31 rooma left 
124 pick ball32 rooma right 
125 move rooma roomb 
126 drop ball31 roomb left 
127 drop ball32 roomb right 
128 __method_precondition_m0_move_two_balls_0_precondition ball33 rooma ball34 
129 __method_precondition_m3_goto_3_precondition roomb 
130 move roomb rooma 
131 pick ball33 rooma left 
132 pick ball34 rooma right 
133 move rooma roomb 
134 drop ball33 roomb left 
135 drop ball34 roomb right 
root 160
136 goto rooma  -> m2_goto 1 2
137 move_two_balls ball17 ball18 roomb  -> m0_move_two_balls 64 147 67 68 69 70 71
138 move_two_balls ball7 ball8 roomb  -> m0_move_two_balls 24 161 27 28 29 30 31
139 move_two_balls ball19 ball20 roomb  -> m0_move_two_balls 72 164 75 76 77 78 79
140 move_two_balls ball1 ball2 roomb  -> m0_move_two_balls 0 136 3 4 5 6 7
141 move_two_balls ball29 ball30 roomb  -> m0_move_two_balls 112 146 115 116 117 118 119
142 move_two_balls ball21 ball22 roomb  -> m0_move_two_balls 80 158 83 84 85 86 87
143 move_two_balls ball9 ball10 roomb  -> m0_move_two_balls 32 152 35 36 37 38 39
144 move_two_balls ball27 ball28 roomb  -> m0_move_two_balls 104 153 107 108 109 110 111
145 goto rooma  -> m3_goto 121 122
146 goto rooma  -> m3_goto 113 114
147 goto rooma  -> m3_goto 65 66
148 move_two_balls ball3 ball4 roomb  -> m0_move_two_balls 8 165 11 12 13 14 15
149 goto rooma  -> m3_goto 17 18
150 move_two_balls ball23 ball24 roomb  -> m0_move_two_balls 88 169 91 92 93 94 95
151 goto rooma  -> m3_goto 57 58
152 goto rooma  -> m3_goto 33 34
153 goto rooma  -> m3_goto 105 106
154 move_two_balls ball13 ball14 roomb  -> m0_move_two_balls 48 162 51 52 53 54 55
155 move_two_balls ball15 ball16 roomb  -> m0_move_two_balls 56 151 59 60 61 62 63
156 goto rooma  -> m3_goto 41 42
157 move_two_balls ball11 ball12 roomb  -> m0_move_two_balls 40 156 43 44 45 46 47
158 goto rooma  -> m3_goto 81 82
159 move_two_balls ball5 ball6 roomb  -> m0_move_two_balls 16 149 19 20 21 22 23
160 __artificialTopCompilation__top_1  -> __top_1 140 148 159 138 143 157 154 155 137 139 142 150 166 144 141 168 170
161 goto rooma  -> m3_goto 25 26
162 goto rooma  -> m3_goto 49 50
163 goto rooma  -> m3_goto 129 130
164 goto rooma  -> m3_goto 73 74
165 goto rooma  -> m3_goto 9 10
166 move_two_balls ball25 ball26 roomb  -> m0_move_two_balls 96 167 99 100 101 102 103
167 goto rooma  -> m3_goto 97 98
168 move_two_balls ball31 ball32 roomb  -> m0_move_two_balls 120 145 123 124 125 126 127
169 goto rooma  -> m3_goto 89 90
170 move_two_balls ball33 ball34 roomb  -> m0_move_two_balls 128 163 131 132 133 134 135

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 17.856 MEMPEAK_KBS 325455.872
