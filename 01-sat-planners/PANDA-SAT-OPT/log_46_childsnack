PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/childsnack/domain.hddl instances/childsnack/p06.hddl"


Planner Configuration
=====================
Domain: instances/childsnack/domain.hddl
Problem: instances/childsnack/p06.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p06.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 13
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 63
Compiling negative preconditions ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 63
Compiling split parameters ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 63
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 63
Grounded planning graph ... done in 872ms.
	Number of Grounded Actions 14862
	Number of Grounded Literals 205
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 63
Two Way TDG ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 63
Grounding ... done.
	number of abstract tasks = 13
	number of tasks = 13087
	number of decomposition methods = 32487
	number of predicates = 231
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 13
	number of tasks = 13087
	number of decomposition methods = 32487
	number of predicates = 153
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1216ms.
	Number of Grounded Actions 13074
	Number of Grounded Literals 153
	number of abstract tasks = 13
	number of tasks = 13087
	number of decomposition methods = 32487
	number of predicates = 153
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 13
	number of tasks = 13087
	number of decomposition methods = 32487
	number of predicates = 153
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 14
	number of tasks = 13088
	number of decomposition methods = 32488
	number of predicates = 153
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 14
	number of tasks = 13088
	number of decomposition methods = 32488
	number of predicates = 153
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 668ms.
	Number of Grounded Actions 13074
	Number of Grounded Literals 153
	number of abstract tasks = 14
	number of tasks = 13088
	number of decomposition methods = 32488
	number of predicates = 153
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 14
	number of tasks = 13088
	number of decomposition methods = 32488
	number of predicates = 153
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 14
	number of tasks = 13088
	number of decomposition methods = 32488
	number of predicates = 153
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 14
	number of tasks = 13088
	number of decomposition methods = 32488
	number of predicates = 153
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 14
	number of tasks = 13088
	number of decomposition methods = 32488
	number of predicates = 153
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 10829
	number of epsilon methods = 0
	number of primitive tasks = 13074
	number of constants = 0
Tasks 13074 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854746262ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854745344
done
initial PDT has 78 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 78 leafs
SHOP LEAFS 13
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 34884
Size 34884 at 0/13074
Size 34884 at 500/13074
Size 34884 at 1000/13074
Size 34884 at 1500/13074
Size 34884 at 2000/13074
Size 34884 at 2500/13074
Size 34884 at 3000/13074
Size 34884 at 3500/13074
Size 34884 at 4000/13074
Size 34884 at 4500/13074
Size 34884 at 5000/13074
Size 34884 at 5500/13074
Size 34884 at 6000/13074
Size 34884 at 6500/13074
Size 34884 at 7000/13074
Size 34884 at 7500/13074
Size 34884 at 8000/13074
Size 34884 at 8500/13074
Size 34884 at 9000/13074
Size 34884 at 9500/13074
Size 34884 at 10000/13074
Size 34884 at 10500/13074
Size 34712 at 11000/13074
Size 25787 at 11500/13074
Size 25787 at 12000/13074
Size 25509 at 12500/13074
Size 16812 at 13000/13074
Size 16812
Size 16812 at 0/13074
Size 16812 at 500/13074
Size 16812 at 1000/13074
Size 16812 at 1500/13074
Size 16812 at 2000/13074
Size 16812 at 2500/13074
Size 16812 at 3000/13074
Size 16812 at 3500/13074
Size 16812 at 4000/13074
Size 16812 at 4500/13074
Size 16812 at 5000/13074
Size 16812 at 5500/13074
Size 16812 at 6000/13074
Size 16812 at 6500/13074
Size 16812 at 7000/13074
Size 16812 at 7500/13074
Size 16812 at 8000/13074
Size 16812 at 8500/13074
Size 16812 at 9000/13074
Size 16812 at 9500/13074
Size 16812 at 10000/13074
Size 16812 at 10500/13074
Size 16812 at 11000/13074
Size 3620 at 11500/13074
Size 3620 at 12000/13074
Size 1664 at 12500/13074
Size 1460 at 13000/13074
Size 1460
Size 1460 at 0/13074
Size 1460 at 500/13074
Size 1460 at 1000/13074
Size 1460 at 1500/13074
Size 1460 at 2000/13074
Size 1460 at 2500/13074
Size 1460 at 3000/13074
Size 1460 at 3500/13074
Size 1460 at 4000/13074
Size 1460 at 4500/13074
Size 1460 at 5000/13074
Size 1460 at 5500/13074
Size 1460 at 6000/13074
Size 1460 at 6500/13074
Size 1460 at 7000/13074
Size 1460 at 7500/13074
Size 1460 at 8000/13074
Size 1460 at 8500/13074
Size 1460 at 9000/13074
Size 1460 at 9500/13074
Size 1460 at 10000/13074
Size 1460 at 10500/13074
Size 205 at 11000/13074
Size 205 at 11500/13074
Size 205 at 12000/13074
Size 205 at 12500/13074
Size 205 at 13000/13074
Size 205
Size 205 at 0/13074
Size 205 at 500/13074
Size 205 at 1000/13074
Size 205 at 1500/13074
Size 205 at 2000/13074
Size 205 at 2500/13074
Size 205 at 3000/13074
Size 205 at 3500/13074
Size 205 at 4000/13074
Size 205 at 4500/13074
Size 205 at 5000/13074
Size 205 at 5500/13074
Size 205 at 6000/13074
Size 205 at 6500/13074
Size 205 at 7000/13074
Size 205 at 7500/13074
Size 205 at 8000/13074
Size 205 at 8500/13074
Size 205 at 9000/13074
Size 205 at 9500/13074
Size 205 at 10000/13074
Size 205 at 10500/13074
Size 205 at 11000/13074
Size 205 at 11500/13074
Size 205 at 12000/13074
Size 205 at 12500/13074
Size 205 at 13000/13074
Size 205
Invariant time: 2.351
Number of invariants: 205
Invariant Clauses 16195
NUMBER OF CLAUSES 584273
NUMBER OF STATE CLAUSES 134779
NUMBER OF DECOMPOSITION CLAUSES 449494
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 23.07% 76.93% 0.0% 
NUMBER OF PATHS 78
Starting cryptominisat5.5
Setting starttime of solver to 1604503590858
Command exited with non-zero status 10
0.75 0.03

Time command gave the following runtime for the solver: 780
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_8,26912 26912 m1_serve
8 56 pathaction!1_8,12640
Consider method^1_10,18813 18813 m0_serve
10 59 pathaction!1_10,12643
Consider method^1_3,32043 32043 m1_serve
3 21 pathaction!1_3,12633
Consider method^0_,32487 32487 __top_1
 2 pathaction!0_,13087
Consider method^1_7,21552 21552 m1_serve
7 87 pathaction!1_7,12631
Consider method^1_0,17997 17997 m0_serve
0 42 pathaction!1_0,12632
Consider method^1_1,25372 25372 m0_serve
1 90 pathaction!1_1,12636
Consider method^1_5,2346 2346 m1_serve
5 62 pathaction!1_5,12641
Consider method^1_11,32469 32469 m0_serve
11 72 pathaction!1_11,12642
Consider method^1_4,32407 32407 m1_serve
4 61 pathaction!1_4,12635
Consider method^1_12,4475 4475 m1_serve
12 47 pathaction!1_12,12638
Consider method^1_9,12168 12168 m1_serve
9 15 pathaction!1_9,12637
Consider method^1_6,16746 16746 m1_serve
6 39 pathaction!1_6,12634
Consider method^1_2,20569 20569 m0_serve
2 17 pathaction!1_2,12639


CHECKING primitive solution of length 78 ...
true 74 __method_precondition_m0_serve_0_precondition[content11,table3,child1,sandw7,bread3;]
true 0 make_sandwich_no_gluten[sandw7,bread3,content11;]
true 64 put_on_tray[sandw7,tray2;kitchen]
true 12 move_tray[tray2,kitchen,table3;]
true 86 serve_sandwich_no_gluten[sandw7,child1,tray2,table3;]
true 22 move_tray[tray2,table3,kitchen;]
true 24 __method_precondition_m0_serve_0_precondition[content7,table2,child2,sandw1,bread8;]
true 7 make_sandwich_no_gluten[sandw1,bread8,content7;]
true 40 put_on_tray[sandw1,tray1;kitchen]
true 70 move_tray[tray1,kitchen,table2;]
true 1 serve_sandwich_no_gluten[sandw1,child2,tray1,table2;]
true 57 move_tray[tray1,table2,kitchen;]
true 91 __method_precondition_m0_serve_0_precondition[content9,table2,child3,sandw15,bread11;]
true 14 make_sandwich_no_gluten[sandw15,bread11,content9;]
true 46 put_on_tray[sandw15,tray1;kitchen]
true 44 move_tray[tray1,kitchen,table2;]
true 52 serve_sandwich_no_gluten[sandw15,child3,tray1,table2;]
true 19 move_tray[tray1,table2,kitchen;]
true 4 __method_precondition_m1_serve_1_precondition[table1,child4,bread12,sandw16,content13;]
true 73 make_sandwich[sandw16,bread12,content13;]
true 76 put_on_tray[sandw16,tray3;kitchen]
true 3 move_tray[tray3,kitchen,table1;]
true 30 serve_sandwich[sandw16,child4,tray3,table1;]
true 29 move_tray[tray3,table1,kitchen;]
true 51 __method_precondition_m1_serve_1_precondition[table2,child5,bread6,sandw14,content10;]
true 80 make_sandwich[sandw14,bread6,content10;]
true 23 put_on_tray[sandw14,tray3;kitchen]
true 18 move_tray[tray3,kitchen,table2;]
true 32 serve_sandwich[sandw14,child5,tray3,table2;]
true 36 move_tray[tray3,table2,kitchen;]
true 11 __method_precondition_m1_serve_1_precondition[table2,child6,bread13,sandw11,content2;]
true 54 make_sandwich[sandw11,bread13,content2;]
true 60 put_on_tray[sandw11,tray1;kitchen]
true 69 move_tray[tray1,kitchen,table2;]
true 13 serve_sandwich[sandw11,child6,tray1,table2;]
true 71 move_tray[tray1,table2,kitchen;]
true 20 __method_precondition_m1_serve_1_precondition[table1,child7,bread9,sandw17,content5;]
true 48 make_sandwich[sandw17,bread9,content5;]
true 79 put_on_tray[sandw17,tray1;kitchen]
true 78 move_tray[tray1,kitchen,table1;]
true 45 serve_sandwich[sandw17,child7,tray1,table1;]
true 28 move_tray[tray1,table1,kitchen;]
true 75 __method_precondition_m1_serve_1_precondition[table2,child8,bread7,sandw4,content1;]
true 37 make_sandwich[sandw4,bread7,content1;]
true 6 put_on_tray[sandw4,tray2;kitchen]
true 16 move_tray[tray2,kitchen,table2;]
true 66 serve_sandwich[sandw4,child8,tray2,table2;]
true 9 move_tray[tray2,table2,kitchen;]
true 88 __method_precondition_m1_serve_1_precondition[table1,child9,bread2,sandw2,content4;]
true 50 make_sandwich[sandw2,bread2,content4;]
true 82 put_on_tray[sandw2,tray2;kitchen]
true 31 move_tray[tray2,kitchen,table1;]
true 67 serve_sandwich[sandw2,child9,tray2,table1;]
true 89 move_tray[tray2,table1,kitchen;]
true 41 __method_precondition_m1_serve_1_precondition[table1,child10,bread1,sandw12,content6;]
true 55 make_sandwich[sandw12,bread1,content6;]
true 83 put_on_tray[sandw12,tray3;kitchen]
true 34 move_tray[tray3,kitchen,table1;]
true 33 serve_sandwich[sandw12,child10,tray3,table1;]
true 8 move_tray[tray3,table1,kitchen;]
true 43 __method_precondition_m0_serve_0_precondition[content12,table3,child11,sandw8,bread5;]
true 38 make_sandwich_no_gluten[sandw8,bread5,content12;]
true 68 put_on_tray[sandw8,tray1;kitchen]
true 81 move_tray[tray1,kitchen,table3;]
true 58 serve_sandwich_no_gluten[sandw8,child11,tray1,table3;]
true 65 move_tray[tray1,table3,kitchen;]
true 77 __method_precondition_m0_serve_0_precondition[content3,table3,child12,sandw6,bread10;]
true 63 make_sandwich_no_gluten[sandw6,bread10,content3;]
true 10 put_on_tray[sandw6,tray3;kitchen]
true 26 move_tray[tray3,kitchen,table3;]
true 53 serve_sandwich_no_gluten[sandw6,child12,tray3,table3;]
true 85 move_tray[tray3,table3,kitchen;]
true 35 __method_precondition_m1_serve_1_precondition[table2,child13,bread4,sandw10,content8;]
true 25 make_sandwich[sandw10,bread4,content8;]
true 27 put_on_tray[sandw10,tray2;kitchen]
true 49 move_tray[tray2,kitchen,table2;]
true 84 serve_sandwich[sandw10,child13,tray2,table2;]
true 5 move_tray[tray2,table2,kitchen;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 30
TSTG: 2
Method: 1
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 60
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 90
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 120
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 150
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 180
TSTG: 2
Method: 2
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 210
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 240
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 270
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 300
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 330
TSTG: 2
Method: 3
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 360
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 390
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 420
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 450
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 480
TSTG: 2
Method: 4
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 510
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 540
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 570
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 600
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 630
TSTG: 2
Method: 5
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 660
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 690
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 720
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 750
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 780
TSTG: 2
Method: 6
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 810
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 840
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 870
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 900
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 930
TSTG: 2
Method: 7
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 960
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 990
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 1020
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 1050
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 1080
TSTG: 2
Method: 8
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 1110
TSTG: 2
Method: 9
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 1140
TSTG: 2
Method: 9
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 1170
TSTG: 2
Method: 9
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 1200
TSTG: 2
Method: 9
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 1230
TSTG: 2
Method: 9
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 1260
TSTG: 2
Method: 10
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 1290
TSTG: 2
Method: 10
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 1320
TSTG: 2
Method: 10
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 1350
TSTG: 2
Method: 10

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.101 MEMPEAK_KBS 1705966.592
