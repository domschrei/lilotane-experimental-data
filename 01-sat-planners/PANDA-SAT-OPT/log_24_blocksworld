PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/blocksworld/domain.hddl instances/blocksworld/p04.hddl"


Planner Configuration
=====================
Domain: instances/blocksworld/domain.hddl
Problem: instances/blocksworld/p04.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p04.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 5
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Grounded planning graph ... done in 167ms.
	Number of Grounded Actions 114
	Number of Grounded Literals 73
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 11
Grounding ... done.
	number of abstract tasks = 35
	number of tasks = 149
	number of decomposition methods = 87
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 35
	number of tasks = 149
	number of decomposition methods = 87
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 45ms.
	Number of Grounded Actions 114
	Number of Grounded Literals 73
	number of abstract tasks = 35
	number of tasks = 149
	number of decomposition methods = 87
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 35
	number of tasks = 149
	number of decomposition methods = 87
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 36
	number of tasks = 150
	number of decomposition methods = 88
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 36
	number of tasks = 150
	number of decomposition methods = 88
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 16ms.
	Number of Grounded Actions 114
	Number of Grounded Literals 73
	number of abstract tasks = 36
	number of tasks = 150
	number of decomposition methods = 88
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 36
	number of tasks = 150
	number of decomposition methods = 88
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 36
	number of tasks = 150
	number of decomposition methods = 88
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 48
	number of tasks = 162
	number of decomposition methods = 100
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 48
	number of tasks = 162
	number of decomposition methods = 100
	number of predicates = 73
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 69
	number of epsilon methods = 0
	number of primitive tasks = 114
	number of constants = 0
Tasks 114 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773825ms

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854773771
done
initial PDT has 61 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 46 leafs
SHOP LEAFS 38
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 7884
Size 7884 at 0/114
Size 5964
Size 5964 at 0/114
Size 3765
Size 3765 at 0/114
Size 1318
Size 1318 at 0/114
Size 620
Size 620 at 0/114
Size 524
Size 524 at 0/114
Size 523
Size 523 at 0/114
Size 523
Invariant time: 0.157
Number of invariants: 523
Invariant Clauses 24581
NUMBER OF CLAUSES 32207
NUMBER OF STATE CLAUSES 31551
NUMBER OF DECOMPOSITION CLAUSES 656
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.96000000000001% 2.04% 0.0% 
NUMBER OF PATHS 46
Starting cryptominisat5.5
Setting starttime of solver to 1604499278435
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 190 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 163 leafs
SHOP LEAFS 101
Assignment implications
Still waiting ... running for 101 will abort at 9223372036854772748
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 85772
NUMBER OF CLAUSES 113562
NUMBER OF STATE CLAUSES 110810
NUMBER OF DECOMPOSITION CLAUSES 2752
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.58% 2.42% 0.0% 
NUMBER OF PATHS 163
Starting cryptominisat5.5
Setting starttime of solver to 1604499279324
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 271 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 244 leafs
SHOP LEAFS 128
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771981
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 128135
NUMBER OF CLAUSES 170906
NUMBER OF STATE CLAUSES 166083
NUMBER OF DECOMPOSITION CLAUSES 4823
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.18% 2.82% 0.0% 
NUMBER OF PATHS 244
Starting cryptominisat5.5
Setting starttime of solver to 1604499280058
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 352 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 325 leafs
SHOP LEAFS 155
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771253
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 170498
NUMBER OF CLAUSES 230111
NUMBER OF STATE CLAUSES 221946
NUMBER OF DECOMPOSITION CLAUSES 8165
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.45% 3.5500000000000003% 0.0% 
NUMBER OF PATHS 325
Starting cryptominisat5.5
Setting starttime of solver to 1604499280819
Command exited with non-zero status 20
0.05 0.01

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 433 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 406 leafs
SHOP LEAFS 182
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770465
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 212861
NUMBER OF CLAUSES 291972
NUMBER OF STATE CLAUSES 278591
NUMBER OF DECOMPOSITION CLAUSES 13381
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.42% 4.58% 0.0% 
NUMBER OF PATHS 406
Starting cryptominisat5.5
Setting starttime of solver to 1604499281710
Command exited with non-zero status 20
0.06 0.01

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 514 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 487 leafs
SHOP LEAFS 209
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854769641
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 255224
NUMBER OF CLAUSES 357404
NUMBER OF STATE CLAUSES 336234
NUMBER OF DECOMPOSITION CLAUSES 21170
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 94.08% 5.92% 0.0% 
NUMBER OF PATHS 487
Starting cryptominisat5.5
Setting starttime of solver to 1604499282640
Command exited with non-zero status 20
0.10 0.00

Time command gave the following runtime for the solver: 100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 595 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 568 leafs
SHOP LEAFS 236
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768689
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 297587
NUMBER OF CLAUSES 426877
NUMBER OF STATE CLAUSES 394977
NUMBER OF DECOMPOSITION CLAUSES 31900
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 92.53% 7.47% 0.0% 
NUMBER OF PATHS 568
Starting cryptominisat5.5
Setting starttime of solver to 1604499283751
Command exited with non-zero status 10
0.15 0.02

Time command gave the following runtime for the solver: 170
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_5;0;3,83 83 m3_do_on_table
5;0;3 228 pathaction!3_5;0;3,75
Consider method^3_2;0;2,74 74 m6_do_clear
2;0;2 243 pathaction!3_2;0;2,85
Consider method^3_10;0;4,12 12 m4_do_move
10;0;4 162 pathaction!3_10;0;4,80
Consider method^3_2;0;3,42 42 m3_do_on_table
2;0;3 224 pathaction!3_2;0;3,69
Consider method^3_0;0;2,3 3 m6_do_clear
0;0;2 151 pathaction!3_0;0;2,87
Consider method^5_6;0;1;1;1,75 75 m6_do_clear
6;0;1;1;1 90 pathaction!5_6;0;1;1;1,86
Consider method^1_2,95 95 __UNIQUE-replacement_8
2 54 pathaction!1_2,158
Consider method^3_1;0;3,33 33 m2_do_on_table
1;0;3 105 pathaction!3_1;0;3,74
Consider method^1_4,94 94 __UNIQUE-replacement_7
4 81 pathaction!1_4,157
Consider method^1_10,93 93 __UNIQUE-replacement_6
10 5 pathaction!1_10,156
Consider method^2_13;4,68 68 m4_do_move
13;4 261 pathaction!2_13;4,76
Consider method^1_6,97 97 __UNIQUE-replacement_10
6 87 pathaction!1_6,160
Consider method^3_3;0;3,9 9 m3_do_on_table
3;0;3 146 pathaction!3_3;0;3,70
Consider method^1_13,5 5 m1_do_put_on
13 195 pathaction!1_13,27
Consider method^3_11;0;2,86 86 m6_do_clear
11;0;2 214 pathaction!3_11;0;2,94
Consider method^3_8;0;2,74 74 m6_do_clear
8;0;2 110 pathaction!3_8;0;2,85
Consider method^3_2;0;1,75 75 m6_do_clear
2;0;1 127 pathaction!3_2;0;1,86
Consider method^2_1;0,21 21 m1_do_put_on
1;0 189 pathaction!2_1;0,28
Consider method^2_3;0,51 51 m1_do_put_on
3;0 244 pathaction!2_3;0,33
Consider method^2_10;0,29 29 m1_do_put_on
10;0 249 pathaction!2_10;0,31
Consider method^3_5;0;4,16 16 m4_do_move
5;0;4 47 pathaction!3_5;0;4,83
Consider method^5_1;0;1;1;1,20 20 m7_do_clear
1;0;1;1;1 53 pathaction!5_1;0;1;1;1,90
Consider method^2_13;2,8 8 m6_do_clear
13;2 148 pathaction!2_13;2,84
Consider method^2_12;1,8 8 m6_do_clear
12;1 83 pathaction!2_12;1,84
Consider method^3_3;0;1,78 78 m6_do_clear
3;0;1 124 pathaction!3_3;0;1,90
Consider method^2_12;3,52 52 m2_do_on_table
12;3 32 pathaction!2_12;3,72
Consider method^3_9;0;1,57 57 m7_do_clear
9;0;1 91 pathaction!3_9;0;1,90
Consider method^3_4;0;2,78 78 m6_do_clear
4;0;2 51 pathaction!3_4;0;2,90
Consider method^7_0;0;1;1;1;1;1,47 47 m7_do_clear
0;0;1;1;1;1;1 188 pathaction!7_0;0;1;1;1;1;1,87
Consider method^2_0;0,56 56 m1_do_put_on
0;0 219 pathaction!2_0;0,29
Consider method^3_10;0;3,73 73 m3_do_on_table
10;0;3 258 pathaction!3_10;0;3,73
Consider method^2_8;0,45 45 m1_do_put_on
8;0 144 pathaction!2_8;0,30
Consider method^2_2;0,45 45 m1_do_put_on
2;0 172 pathaction!2_2;0,30
Consider method^1_3,91 91 __UNIQUE-replacement_4
3 14 pathaction!1_3,154
Consider method^1_7,88 88 __UNIQUE-replacement_1
7 273 pathaction!1_7,151
Consider method^3_3;0;2,75 75 m6_do_clear
3;0;2 176 pathaction!3_3;0;2,86
Consider method^3_1;0;4,62 62 m4_do_move
1;0;4 50 pathaction!3_1;0;4,77
Consider method^3_2;0;4,61 61 m4_do_move
2;0;4 192 pathaction!3_2;0;4,79
Consider method^1_1,87 87 __UNIQUE-replacement_0
1 138 pathaction!1_1,150
Consider method^2_12;4,79 79 m4_do_move
12;4 3 pathaction!2_12;4,81
Consider method^1_12,41 41 m1_do_put_on
12 263 pathaction!1_12,32
Consider method^3_9;0;4,27 27 m4_do_move
9;0;4 79 pathaction!3_9;0;4,82
Consider method^3_5;0;1,2 2 m6_do_clear
5;0;1 202 pathaction!3_5;0;1,88
Consider method^3_7;0;4,62 62 m4_do_move
7;0;4 7 pathaction!3_7;0;4,77
Consider method^3_10;0;1,86 86 m6_do_clear
10;0;1 99 pathaction!3_10;0;1,94
Consider method^1_9,92 92 __UNIQUE-replacement_5
9 165 pathaction!1_9,155
Consider method^3_0;0;1,18 18 m7_do_clear
0;0;1 197 pathaction!3_0;0;1,92
Consider method^3_10;0;2,78 78 m6_do_clear
10;0;2 130 pathaction!3_10;0;2,90
Consider method^4_6;0;1;1,53 53 m7_do_clear
6;0;1;1 215 pathaction!4_6;0;1;1,85
Consider method^6_1;0;1;1;1;1,75 75 m6_do_clear
1;0;1;1;1;1 157 pathaction!6_1;0;1;1;1;1,86
Consider method^2_6;0,56 56 m1_do_put_on
6;0 170 pathaction!2_6;0,29
Consider method^4_0;0;1;1,80 80 m7_do_clear
0;0;1;1 158 pathaction!4_0;0;1;1,91
Consider method^3_4;0;3,63 63 m2_do_on_table
4;0;3 17 pathaction!3_4;0;3,73
Consider method^4_1;0;1;1,11 11 m7_do_clear
1;0;1;1 141 pathaction!4_1;0;1;1,84
Consider method^2_13;1,39 39 m6_do_clear
13;1 37 pathaction!2_13;1,93
Consider method^3_7;0;3,40 40 m3_do_on_table
7;0;3 76 pathaction!3_7;0;3,74
Consider method^3_1;0;2,59 59 m6_do_clear
1;0;2 20 pathaction!3_1;0;2,92
Consider method^2_12;2,2 2 m6_do_clear
12;2 82 pathaction!2_12;2,88
Consider method^3_0;0;3,58 58 m3_do_on_table
0;0;3 208 pathaction!3_0;0;3,71
Consider method^5_9;0;1;1;1,2 2 m6_do_clear
9;0;1;1;1 218 pathaction!5_9;0;1;1;1,88
Consider method^3_4;0;1,86 86 m6_do_clear
4;0;1 29 pathaction!3_4;0;1,94
Consider method^2_4;0,29 29 m1_do_put_on
4;0 201 pathaction!2_4;0,31
Consider method^3_6;0;1,15 15 m7_do_clear
6;0;1 56 pathaction!3_6;0;1,92
Consider method^3_7;0;2,59 59 m6_do_clear
7;0;2 200 pathaction!3_7;0;2,92
Consider method^1_8,96 96 __UNIQUE-replacement_9
8 205 pathaction!1_8,159
Consider method^2_13;3,24 24 m3_do_on_table
13;3 55 pathaction!2_13;3,68
Consider method^3_6;0;2,3 3 m6_do_clear
6;0;2 251 pathaction!3_6;0;2,87
Consider method^6_0;0;1;1;1;1,14 14 m7_do_clear
0;0;1;1;1;1 95 pathaction!6_0;0;1;1;1;1,88
Consider method^1_0,98 98 __UNIQUE-replacement_11
0 134 pathaction!1_0,161
Consider method^3_6;0;4,65 65 m4_do_move
6;0;4 38 pathaction!3_6;0;4,78
Consider method^3_1;0;1,32 32 m7_do_clear
1;0;1 46 pathaction!3_1;0;1,85
Consider method^3_0;0;4,23 23 m5_do_move
0;0;4 98 pathaction!3_0;0;4,78
Consider method^3_11;0;4,16 16 m4_do_move
11;0;4 198 pathaction!3_11;0;4,83
Consider method^3_8;0;3,42 42 m3_do_on_table
8;0;3 175 pathaction!3_8;0;3,69
Consider method^2_5;0,38 38 m1_do_put_on
5;0 121 pathaction!2_5;0,34
Consider method^1_5,89 89 __UNIQUE-replacement_2
5 229 pathaction!1_5,152
Consider method^3_11;0;1,2 2 m6_do_clear
11;0;1 125 pathaction!3_11;0;1,88
Consider method^2_9;0,51 51 m1_do_put_on
9;0 2 pathaction!2_9;0,33
Consider method^3_6;0;3,58 58 m3_do_on_table
6;0;3 102 pathaction!3_6;0;3,71
Consider method^3_9;0;3,9 9 m3_do_on_table
9;0;3 36 pathaction!3_9;0;3,70
Consider method^3_11;0;3,83 83 m3_do_on_table
11;0;3 252 pathaction!3_11;0;3,75
Consider method^3_5;0;2,86 86 m6_do_clear
5;0;2 179 pathaction!3_5;0;2,94
Consider method^4_9;0;1;1,25 25 m7_do_clear
9;0;1;1 262 pathaction!4_9;0;1;1,94
Consider method^3_3;0;4,27 27 m4_do_move
3;0;4 66 pathaction!3_3;0;4,82
Consider method^1_11,90 90 __UNIQUE-replacement_3
11 191 pathaction!1_11,153
Consider method^5_0;0;1;1;1,6 6 m7_do_clear
0;0;1;1;1 250 pathaction!5_0;0;1;1;1,89
Consider method^2_7;0,21 21 m1_do_put_on
7;0 6 pathaction!2_7;0,28
Consider method^3_7;0;1,74 74 m6_do_clear
7;0;1 265 pathaction!3_7;0;1,85
Consider method^3_8;0;4,61 61 m4_do_move
8;0;4 13 pathaction!3_8;0;4,79
Consider method^8_0;0;1;1;1;1;1;1,39 39 m6_do_clear
0;0;1;1;1;1;1;1 226 pathaction!8_0;0;1;1;1;1;1;1,93
Consider method^2_11;0,38 38 m1_do_put_on
11;0 183 pathaction!2_11;0,34
Consider method^3_9;0;2,75 75 m6_do_clear
9;0;2 161 pathaction!3_9;0;2,86
Consider method^3_8;0;1,75 75 m6_do_clear
8;0;1 143 pathaction!3_8;0;1,86
Consider method^3_4;0;4,12 12 m4_do_move
4;0;4 129 pathaction!3_4;0;4,80
Consider method^0_,99 99 __top_1
 221 pathaction!0_,149


CHECKING primitive solution of length 179 ...
true 33 __method_precondition_m1_do_put_on_1_precondition[;]
true 234 __method_precondition_m7_do_clear_7_precondition[b10,b3;]
true 97 __method_precondition_m7_do_clear_7_precondition[b3,b8;]
true 184 __method_precondition_m7_do_clear_7_precondition[b8,b11;]
true 103 __method_precondition_m7_do_clear_7_precondition[b11,b6;]
true 166 __method_precondition_m7_do_clear_7_precondition[b6,b7;]
true 84 __method_precondition_m6_do_clear_6_precondition[b7;]
true 168 nop[;]
true 118 unstack[b7,b6;]
true 77 put-down[b7;]
true 225 unstack[b6,b11;]
true 67 put-down[b6;]
true 137 unstack[b11,b8;]
true 169 put-down[b11;]
true 68 unstack[b8,b3;]
true 12 put-down[b8;]
true 73 unstack[b3,b10;]
true 155 put-down[b3;]
true 238 __method_precondition_m6_do_clear_6_precondition[b6;]
true 101 nop[;]
true 136 __method_precondition_m3_do_on_table_3_precondition[b6;]
true 187 nop[;]
true 30 __method_precondition_m5_do_move_5_precondition[b10,b6;]
true 182 unstack[b10,b1;]
true 113 stack[b10,b6;]
true 10 __method_precondition_m1_do_put_on_1_precondition[;]
true 1 __method_precondition_m7_do_clear_7_precondition[b5,b4;]
true 167 __method_precondition_m7_do_clear_7_precondition[b4,b9;]
true 153 __method_precondition_m7_do_clear_7_precondition[b9,b2;]
true 63 __method_precondition_m6_do_clear_6_precondition[b2;]
true 174 nop[;]
true 267 unstack[b2,b9;]
true 4 put-down[b2;]
true 45 unstack[b9,b4;]
true 21 put-down[b9;]
true 133 unstack[b4,b5;]
true 59 put-down[b4;]
true 26 __method_precondition_m6_do_clear_6_precondition[b10;]
true 260 nop[;]
true 62 __method_precondition_m2_do_on_table_2_precondition[b10;]
true 57 unstack[b10,b6;]
true 111 put-down[b10;]
true 149 __method_precondition_m4_do_move_4_precondition[b5,b10;]
true 271 pick-up[b5;]
true 39 stack[b5,b10;]
true 106 __method_precondition_m1_do_put_on_1_precondition[;]
true 65 __method_precondition_m6_do_clear_6_precondition[b2;]
true 232 nop[;]
true 44 __method_precondition_m6_do_clear_6_precondition[b5;]
true 92 nop[;]
true 119 __method_precondition_m3_do_on_table_3_precondition[b5;]
true 222 nop[;]
true 93 __method_precondition_m4_do_move_4_precondition[b2,b5;]
true 246 pick-up[b2;]
true 209 stack[b2,b5;]
true 35 __method_precondition_m1_do_put_on_1_precondition[;]
true 264 __method_precondition_m6_do_clear_6_precondition[b9;]
true 247 nop[;]
true 256 __method_precondition_m6_do_clear_6_precondition[b2;]
true 223 nop[;]
true 96 __method_precondition_m3_do_on_table_3_precondition[b2;]
true 272 nop[;]
true 40 __method_precondition_m4_do_move_4_precondition[b9,b2;]
true 203 pick-up[b9;]
true 178 stack[b9,b2;]
true 231 __method_precondition_m1_do_put_on_1_precondition[;]
true 150 __method_precondition_m6_do_clear_6_precondition[b1;]
true 52 nop[;]
true 41 __method_precondition_m6_do_clear_6_precondition[b9;]
true 22 nop[;]
true 34 __method_precondition_m2_do_on_table_2_precondition[b9;]
true 180 unstack[b9,b2;]
true 163 put-down[b9;]
true 132 __method_precondition_m4_do_move_4_precondition[b1,b9;]
true 23 pick-up[b1;]
true 254 stack[b1,b9;]
true 216 __method_precondition_m1_do_put_on_1_precondition[;]
true 193 __method_precondition_m6_do_clear_6_precondition[b11;]
true 117 nop[;]
true 237 __method_precondition_m6_do_clear_6_precondition[b1;]
true 190 nop[;]
true 240 __method_precondition_m3_do_on_table_3_precondition[b1;]
true 8 nop[;]
true 235 __method_precondition_m4_do_move_4_precondition[b11,b1;]
true 27 pick-up[b11;]
true 78 stack[b11,b1;]
true 211 __method_precondition_m1_do_put_on_1_precondition[;]
true 42 __method_precondition_m7_do_clear_7_precondition[b10,b5;]
true 159 __method_precondition_m7_do_clear_7_precondition[b5,b2;]
true 60 __method_precondition_m6_do_clear_6_precondition[b2;]
true 204 nop[;]
true 185 unstack[b2,b5;]
true 135 put-down[b2;]
true 64 unstack[b5,b10;]
true 259 put-down[b5;]
true 70 __method_precondition_m6_do_clear_6_precondition[b6;]
true 108 nop[;]
true 128 __method_precondition_m3_do_on_table_3_precondition[b6;]
true 18 nop[;]
true 233 __method_precondition_m4_do_move_4_precondition[b10,b6;]
true 94 pick-up[b10;]
true 11 stack[b10,b6;]
true 69 __method_precondition_m1_do_put_on_1_precondition[;]
true 120 __method_precondition_m6_do_clear_6_precondition[b5;]
true 112 nop[;]
true 210 __method_precondition_m6_do_clear_6_precondition[b10;]
true 0 nop[;]
true 255 __method_precondition_m3_do_on_table_3_precondition[b10;]
true 164 nop[;]
true 248 __method_precondition_m4_do_move_4_precondition[b5,b10;]
true 268 pick-up[b5;]
true 24 stack[b5,b10;]
true 74 __method_precondition_m1_do_put_on_1_precondition[;]
true 116 __method_precondition_m6_do_clear_6_precondition[b2;]
true 115 nop[;]
true 213 __method_precondition_m6_do_clear_6_precondition[b5;]
true 241 nop[;]
true 230 __method_precondition_m3_do_on_table_3_precondition[b5;]
true 16 nop[;]
true 196 __method_precondition_m4_do_move_4_precondition[b2,b5;]
true 71 pick-up[b2;]
true 142 stack[b2,b5;]
true 266 __method_precondition_m1_do_put_on_1_precondition[;]
true 89 __method_precondition_m7_do_clear_7_precondition[b9,b1;]
true 186 __method_precondition_m7_do_clear_7_precondition[b1,b11;]
true 152 __method_precondition_m6_do_clear_6_precondition[b11;]
true 28 nop[;]
true 88 unstack[b11,b1;]
true 19 put-down[b11;]
true 109 unstack[b1,b9;]
true 177 put-down[b1;]
true 72 __method_precondition_m6_do_clear_6_precondition[b2;]
true 61 nop[;]
true 43 __method_precondition_m3_do_on_table_3_precondition[b2;]
true 75 nop[;]
true 48 __method_precondition_m4_do_move_4_precondition[b9,b2;]
true 80 pick-up[b9;]
true 257 stack[b9,b2;]
true 107 __method_precondition_m1_do_put_on_1_precondition[;]
true 9 __method_precondition_m6_do_clear_6_precondition[b1;]
true 207 nop[;]
true 239 __method_precondition_m6_do_clear_6_precondition[b9;]
true 212 nop[;]
true 114 __method_precondition_m3_do_on_table_3_precondition[b9;]
true 25 nop[;]
true 122 __method_precondition_m4_do_move_4_precondition[b1,b9;]
true 220 pick-up[b1;]
true 206 stack[b1,b9;]
true 139 __method_precondition_m1_do_put_on_1_precondition[;]
true 269 __method_precondition_m6_do_clear_6_precondition[b11;]
true 145 nop[;]
true 217 __method_precondition_m6_do_clear_6_precondition[b1;]
true 126 nop[;]
true 58 __method_precondition_m3_do_on_table_3_precondition[b1;]
true 160 nop[;]
true 253 __method_precondition_m4_do_move_4_precondition[b11,b1;]
true 123 pick-up[b11;]
true 49 stack[b11,b1;]
true 156 __method_precondition_m1_do_put_on_1_precondition[;]
true 227 __method_precondition_m6_do_clear_6_precondition[b4;]
true 85 nop[;]
true 270 __method_precondition_m6_do_clear_6_precondition[b11;]
true 171 nop[;]
true 199 __method_precondition_m2_do_on_table_2_precondition[b11;]
true 131 unstack[b11,b1;]
true 31 put-down[b11;]
true 242 __method_precondition_m4_do_move_4_precondition[b4,b11;]
true 140 pick-up[b4;]
true 86 stack[b4,b11;]
true 194 __method_precondition_m1_do_put_on_1_precondition[;]
true 15 __method_precondition_m6_do_clear_6_precondition[b7;]
true 104 nop[;]
true 147 __method_precondition_m6_do_clear_6_precondition[b4;]
true 245 nop[;]
true 173 __method_precondition_m3_do_on_table_3_precondition[b4;]
true 154 nop[;]
true 236 __method_precondition_m4_do_move_4_precondition[b7,b4;]
true 100 pick-up[b7;]
true 181 stack[b7,b4;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 98
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 196
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 294
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 392
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 490
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 588
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 686
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 784
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 882
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 980
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 1078
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 1176
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 1274
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 1372
TSTG: 2147483647
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 15
ICAPS: 1470
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 1568
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 1666
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 1764
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 19
ICAPS: 1862
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 20
ICAPS: 1960
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 21
ICAPS: 2058
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 22
ICAPS: 2156
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 23
ICAPS: 2254
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 24
ICAPS: 2352
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 25
ICAPS: 2450
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 26
ICAPS: 2548
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 97
  lower bound = 25

Running SAT search with cost bound = 61
==================================================
  upper bound = 97
  lower bound = 25
LEN 61
ICAPS: 5978
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 101 will abort at 9223372036854766693
DP max: 26
Taking minimum: 26
Generating initial PDT ... done
initial PDT has 1972 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 1945 leafs
SHOP LEAFS 695
Assignment implications
Generating clauses representing decomposition ... done
At most K: 1674ms input: 14233 K = 61
Number of actions Formula: 1772ms for 1750597 clauses
Layers: 11 paths 1945
Layer 1 g 0 = 0 - 1 / 0 clauses 1894431
Layer 1 g 1 = 2 - 3 / 2 clauses 1894431
Layer 1 g 2 = 4 - 5 / 4 clauses 1894431
Layer 1 g 3 = 6 - 7 / 6 clauses 1894431
Layer 1 g 4 = 8 - 9 / 8 clauses 1894431
Layer 1 g 5 = 10 - 11 / 10 clauses 1894431
Layer 1 g 6 = 12 - 13 / 12 clauses 1894431
Layer 1 g 7 = 14 - 15 / 14 clauses 1894431
Layer 1 g 8 = 16 - 17 / 16 clauses 1894431
Layer 1 g 9 = 18 - 19 / 18 clauses 1894431
Layer 1 g 10 = 20 - 21 / 20 clauses 1894431
Layer 1 g 11 = 22 - 23 / 22 clauses 1894431
Layer 1 g 12 = 24 - 25 / 24 clauses 1894431
Layer 1 g 13 = 26 - 27 / 26 clauses 1894431
Layer 1 g 14 = 28 - 29 / 28 clauses 1894431
Layer 1 g 15 = 30 - 31 / 30 clauses 1894431
Layer 1 g 16 = 32 - 33 / 32 clauses 1894431
Layer 1 g 17 = 34 - 35 / 34 clauses 1894431
Layer 1 g 18 = 36 - 37 / 36 clauses 1894431
Layer 1 g 19 = 38 - 39 / 38 clauses 1894431
Layer 1 g 20 = 40 - 41 / 40 clauses 1894431
Layer 1 g 21 = 42 - 43 / 42Still waiting ... running for 77906 will abort at 9223372036854766693
 clauses 1894431
Layer 1 g 22 = 44 - 45 / 44 clauses 1894431
Layer 1 g 23 = 46 - 47 / 46 clauses 1894431
Layer 1 g 24 = 48 - 49 / 48 clauses 1894431
Layer 1 g 25 = 50 - 51 / 50 clauses 1894431
Layer 1 g 26 = 52 - 53 / 52 clauses 1894431
Layer 1 g 27 = 54 - 55 / 54 clauses 1894431
Layer 1 g 28 = 56 - 57 / 56 clauses 1894431
Layer 1 g 29 = 58 - 59 / 58 clauses 1894431
Layer 1 g 30 = 60 - 61 / 60 clauses 1894431
Layer 1 g 31 = 62 - 63 / 62 clauses 1894431
Layer 1 g 32 = 64 - 65 / 64 clauses 1894431
Layer 1 g 33 = 66 - 67 / 66 clauses 1894431
Layer 1 g 34 = 68 - 69 / 68 clauses 1894431
Layer 1 g 35 = 70 - 71 / 70 clauses 1894431
Layer 1 g 36 = 72 - 73 / 72 clauses 1894431
Layer 1 g 37 = 74 - 75 / 74 clauses 1894431
Layer 1 g 38 = 76 - 77 / 76 clauses 1894431
Layer 1 g 39 = 78 - 79 / 78 clauses 1894431
Layer 1 g 40 = 80 - 81 / 80 clauses 1894431
Layer 1 g 41 = 82 - 83 / 82 clauses 1894431
Layer 1 g 42 = 84 - 85 / 84 clauses 1894431
Layer 1 g 43 = 86 - 87 / 86 clauses 1894431
Layer 1 g 44 = 88 - 89 / 88
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 156.902 MEMPEAK_KBS 8066231.296
