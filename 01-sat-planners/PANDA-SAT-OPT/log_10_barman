PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p10.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p10.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p10.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounded planning graph ... done in 540ms.
	Number of Grounded Actions 2363
	Number of Grounded Literals 372
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounding ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 372
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 323ms.
	Number of Grounded Actions 2341
	Number of Grounded Literals 343
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 179ms.
	Number of Grounded Actions 2341
	Number of Grounded Literals 343
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Tasks 2341 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854769016ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854768454
done
initial PDT has 305 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 305 leafs
SHOP LEAFS 80
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 175959
Size 175959 at 0/2341
Size 175156 at 500/2341
Size 144717 at 1000/2341
Size 44822 at 1500/2341
Size 20962 at 2000/2341
Size 20906
Size 20906 at 0/2341
Size 20898 at 500/2341
Size 11412 at 1000/2341
Size 11370 at 1500/2341
Size 11362 at 2000/2341
Size 11362
Size 11362 at 0/2341
Size 11362 at 500/2341
Size 3351 at 1000/2341
Size 3312 at 1500/2341
Size 3234 at 2000/2341
Size 3234
Size 3234 at 0/2341
Size 3234 at 500/2341
Size 3104 at 1000/2341
Size 3104 at 1500/2341
Size 3104 at 2000/2341
Size 3104
Size 3104 at 0/2341
Size 3104 at 500/2341
Size 3028 at 1000/2341
Size 3028 at 1500/2341
Size 3028 at 2000/2341
Size 3028
Size 3028 at 0/2341
Size 3028 at 500/2341
Size 3028 at 1000/2341
Size 3028 at 1500/2341
Size 3028 at 2000/2341
Size 3028
Invariant time: 3.886
Number of invariants: 3028
Invariant Clauses 926568
NUMBER OF CLAUSES 1453642
NUMBER OF STATE CLAUSES 1219985
NUMBER OF DECOMPOSITION CLAUSES 233657
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.93% 16.07% 0.0% 
NUMBER OF PATHS 305
Starting cryptominisat5.5
Setting starttime of solver to 1604495584368
Command exited with non-zero status 10
0.84 0.05

Time command gave the following runtime for the solver: 890
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_3,1889 1889 m0_do_cocktail_in_shot1
3 271 pathaction!1_3,1534
Consider method^3_2;1;1,1967 1967 m8_do_fill_shot
2;1;1 149 pathaction!3_2;1;1,991
Consider method^2_2;3,407 407 m4_serve_shot
2;3 327 pathaction!2_2;3,3176
Consider method^2_13;2,1521 1521 m3_get_second_ingredient
13;2 270 pathaction!2_13;2,1637
Consider method^3_8;3;5,814 814 _m4_serve_shot_6
8;3;5 226 pathaction!3_8;3;5,1143
Consider method^4_6;3;1;0,3126 3126 m5_do_clean_shot
6;3;1;0 126 pathaction!4_6;3;1;0,2813
Consider method^1_7,97 97 m0_do_cocktail_in_shot1
7 135 pathaction!1_7,1544
Consider method^3_13;3;4,1144 1144 _m4_serve_shot_5
13;3;4 230 pathaction!3_13;3;4,3494
Consider method^3_6;3;5,1612 1612 _m4_serve_shot_6
6;3;5 216 pathaction!3_6;3;5,1160
Consider method^3_3;3;1,4258 4258 _m4_serve_shot_2
3;3;1 16 pathaction!3_3;3;1,1060
Consider method^1_5,1202 1202 m0_do_cocktail_in_shot1
5 33 pathaction!1_5,1540
Consider method^3_0;3;4,2080 2080 _m4_serve_shot_5
0;3;4 267 pathaction!3_0;3;4,3507
Consider method^3_4;2;1,898 898 _m3_get_second_ingredient_2
4;2;1 181 pathaction!3_4;2;1,679
Consider method^3_2;3;1,952 952 _m4_serve_shot_2
2;3;1 78 pathaction!3_2;3;1,1064
Consider method^3_1;3;4,150 150 _m4_serve_shot_5
1;3;4 131 pathaction!3_1;3;4,3484
Consider method^2_12;0,1676 1676 _m1_do_cocktail_in_shot2_4
12;0 23 pathaction!2_12;0,2784
Consider method^3_3;3;5,803 803 _m4_serve_shot_6
3;3;5 362 pathaction!3_3;3;5,1135
Consider method^2_13;1,625 625 m2_get_first_ingredient
13;1 219 pathaction!2_13;1,542
Consider method^3_10;3;5,2846 2846 _m4_serve_shot_6
10;3;5 328 pathaction!3_10;3;5,1164
Consider method^3_8;1;3,3006 3006 _m2_get_first_ingredient_4
8;1;3 280 pathaction!3_8;1;3,767
Consider method^2_4;1,256 256 m2_get_first_ingredient
4;1 43 pathaction!2_4;1,543
Consider method^3_11;1;3,2631 2631 _m2_get_first_ingredient_4
11;1;3 107 pathaction!3_11;1;3,770
Consider method^3_6;1;1,3218 3218 m7_do_fill_shot
6;1;1 18 pathaction!3_6;1;1,926
Consider method^3_7;1;1,3841 3841 m9_do_fill_shot
7;1;1 297 pathaction!3_7;1;1,959
Consider method^2_8;3,3531 3531 m4_serve_shot
8;3 159 pathaction!2_8;3,3179
Consider method^3_11;2;2,1053 1053 _m3_get_second_ingredient_3
11;2;2 266 pathaction!3_11;2;2,3272
Consider method^3_7;3;1,2927 2927 _m4_serve_shot_2
7;3;1 232 pathaction!3_7;3;1,1044
Consider method^3_8;2;1,279 279 _m3_get_second_ingredient_2
8;2;1 144 pathaction!3_8;2;1,723
Consider method^1_6,63 63 m0_do_cocktail_in_shot1
6 114 pathaction!1_6,1542
Consider method^2_10;3,1449 1449 m4_serve_shot
10;3 100 pathaction!2_10;3,3178
Consider method^3_10;1;1,3913 3913 m8_do_fill_shot
10;1;1 260 pathaction!3_10;1;1,1037
Consider method^3_4;2;2,4095 4095 _m3_get_second_ingredient_3
4;2;2 123 pathaction!3_4;2;2,3239
Consider method^3_5;2;1,597 597 _m3_get_second_ingredient_2
5;2;1 414 pathaction!3_5;2;1,676
Consider method^3_13;1;3,3909 3909 _m2_get_first_ingredient_4
13;1;3 71 pathaction!3_13;1;3,855
Consider method^3_11;2;1,4247 4247 _m3_get_second_ingredient_2
11;2;1 97 pathaction!3_11;2;1,725
Consider method^1_8,445 445 m0_do_cocktail_in_shot1
8 412 pathaction!1_8,1538
Consider method^3_0;2;2,3168 3168 _m3_get_second_ingredient_3
0;2;2 80 pathaction!3_0;2;2,3248
Consider method^2_0;3,1575 1575 m4_serve_shot
0;3 96 pathaction!2_0;3,3187
Consider method^3_11;3;4,1142 1142 _m4_serve_shot_5
11;3;4 3 pathaction!3_11;3;4,3480
Consider method^3_4;3;5,480 480 _m4_serve_shot_6
4;3;5 380 pathaction!3_4;3;5,1156
Consider method^3_13;2;1,1510 1510 _m3_get_second_ingredient_2
13;2;1 451 pathaction!3_13;2;1,653
Consider method^3_9;1;3,2930 2930 _m2_get_first_ingredient_4
9;1;3 445 pathaction!3_9;1;3,843
Consider method^3_5;3;5,1122 1122 _m4_serve_shot_6
5;3;5 175 pathaction!3_5;3;5,1139
Consider method^3_7;1;2,1976 1976 _m2_get_first_ingredient_3
7;1;2 373 pathaction!3_7;1;2,1210
Consider method^3_3;1;2,2272 2272 _m2_get_first_ingredient_3
3;1;2 30 pathaction!3_3;1;2,1178
Consider method^1_10,1998 1998 m0_do_cocktail_in_shot1
10 11 pathaction!1_10,1537
Consider method^4_8;3;1;0,3653 3653 m5_do_clean_shot
8;3;1;0 77 pathaction!4_8;3;1;0,2842
Consider method^2_13;3,59 59 m4_serve_shot
13;3 89 pathaction!2_13;3,3180
Consider method^3_8;3;4,1169 1169 _m4_serve_shot_5
8;3;4 425 pathaction!3_8;3;4,3474
Consider method^3_6;3;4,570 570 _m4_serve_shot_5
6;3;4 206 pathaction!3_6;3;4,3506
Consider method^3_4;1;3,1713 1713 _m2_get_first_ingredient_4
4;1;3 340 pathaction!3_4;1;3,820
Consider method^3_2;3;5,322 322 _m4_serve_shot_6
2;3;5 150 pathaction!3_2;3;5,1150
Consider method^3_6;1;3,1813 1813 _m2_get_first_ingredient_4
6;1;3 261 pathaction!3_6;1;3,754
Consider method^2_4;3,4142 4142 m4_serve_shot
4;3 386 pathaction!2_4;3,3186
Consider method^2_5;1,4034 4034 m2_get_first_ingredient
5;1 209 pathaction!2_5;1,557
Consider method^3_0;3;5,143 143 _m4_serve_shot_6
0;3;5 257 pathaction!3_0;3;5,1145
Consider method^3_11;3;5,814 814 _m4_serve_shot_6
11;3;5 341 pathaction!3_11;3;5,1143
Consider method^3_8;3;1,1681 1681 _m4_serve_shot_2
8;3;1 434 pathaction!3_8;3;1,1046
Consider method^2_8;2,1154 1154 m3_get_second_ingredient
8;2 320 pathaction!2_8;2,1656
Consider method^3_1;3;1,1836 1836 _m4_serve_shot_2
1;3;1 289 pathaction!3_1;3;1,1063
Consider method^3_3;2;1,1518 1518 _m3_get_second_ingredient_2
3;2;1 22 pathaction!3_3;2;1,704
Consider method^3_0;3;1,2902 2902 _m4_serve_shot_2
0;3;1 171 pathaction!3_0;3;1,1041
Consider method^4_1;3;1;0,674 674 m6_do_clean_shot
1;3;1;0 203 pathaction!4_1;3;1;0,3069
Consider method^3_6;2;1,279 279 _m3_get_second_ingredient_2
6;2;1 418 pathaction!3_6;2;1,723
Consider method^2_7;1,1641 1641 m2_get_first_ingredient
7;1 129 pathaction!2_7;1,550
Consider method^1_13,2019 2019 m0_do_cocktail_in_shot1
13 202 pathaction!1_13,1539
Consider method^3_9;2;1,4134 4134 _m3_get_second_ingredient_2
9;2;1 198 pathaction!3_9;2;1,634
Consider method^3_0;1;2,88 88 _m2_get_first_ingredient_3
0;1;2 145 pathaction!3_0;1;2,1256
Consider method^4_13;3;1;0,314 314 m6_do_clean_shot
13;3;1;0 290 pathaction!4_13;3;1;0,2853
Consider method^3_10;2;2,2420 2420 _m3_get_second_ingredient_3
10;2;2 52 pathaction!3_10;2;2,3267
Consider method^3_0;2;1,4134 4134 _m3_get_second_ingredient_2
0;2;1 296 pathaction!3_0;2;1,634
Consider method^3_13;3;1,2303 2303 _m4_serve_shot_2
13;3;1 143 pathaction!3_13;3;1,1051
Consider method^3_4;1;1,3611 3611 m8_do_fill_shot
4;1;1 279 pathaction!3_4;1;1,992
Consider method^3_9;1;2,300 300 _m2_get_first_ingredient_3
9;1;2 413 pathaction!3_9;1;2,1238
Consider method^2_7;3,1821 1821 m4_serve_shot
7;3 237 pathaction!2_7;3,3185
Consider method^1_2,3462 3462 m0_do_cocktail_in_shot1
2 339 pathaction!1_2,1535
Consider method^2_1;3,219 219 m4_serve_shot
1;3 409 pathaction!2_1;3,3177
Consider method^4_10;3;1;0,3134 3134 m5_do_clean_shot
10;3;1;0 180 pathaction!4_10;3;1;0,2936
Consider method^3_6;1;2,1024 1024 _m2_get_first_ingredient_3
6;1;2 345 pathaction!3_6;1;2,1234
Consider method^3_5;1;3,1850 1850 _m2_get_first_ingredient_4
5;1;3 378 pathaction!3_5;1;3,751
Consider method^3_5;1;1,264 264 m9_do_fill_shot
5;1;1 446 pathaction!3_5;1;1,923
Consider method^2_11;1,1347 1347 m2_get_first_ingredient
11;1 448 pathaction!2_11;1,561
Consider method^3_9;2;2,3168 3168 _m3_get_second_ingredient_3
9;2;2 157 pathaction!3_9;2;2,3248
Consider method^3_7;2;1,972 972 _m3_get_second_ingredient_2
7;2;1 440 pathaction!3_7;2;1,668
Consider method^2_7;2,1677 1677 m3_get_second_ingredient
7;2 356 pathaction!2_7;2,1645
Consider method^2_0;2,3419 3419 m3_get_second_ingredient
0;2 117 pathaction!2_0;2,1649
Consider method^3_5;3;1,605 605 _m4_serve_shot_2
5;3;1 113 pathaction!3_5;3;1,1047
Consider method^3_8;1;1,424 424 m9_do_fill_shot
8;1;1 119 pathaction!3_8;1;1,939
Consider method^2_6;2,511 511 m3_get_second_ingredient
6;2 393 pathaction!2_6;2,1654
Consider method^2_11;2,3579 3579 m3_get_second_ingredient
11;2 429 pathaction!2_11;2,1656
Consider method^4_4;3;1;0,604 604 m6_do_clean_shot
4;3;1;0 200 pathaction!4_4;3;1;0,3003
Consider method^2_5;2,2970 2970 m3_get_second_ingredient
5;2 359 pathaction!2_5;2,1652
Consider method^3_2;1;2,2987 2987 _m2_get_first_ingredient_3
2;1;2 177 pathaction!3_2;1;2,1211
Consider method^2_2;1,456 456 m2_get_first_ingredient
2;1 368 pathaction!2_2;1,549
Consider method^1_12,1119 1119 m1_do_cocktail_in_shot2
12 34 pathaction!1_12,1065
Consider method^3_9;3;5,4125 4125 _m4_serve_shot_6
9;3;5 400 pathaction!3_9;3;5,1146
Consider method^3_3;1;1,796 796 m8_do_fill_shot
3;1;1 407 pathaction!3_3;1;1,1029
Consider method^3_13;2;2,3834 3834 _m3_get_second_ingredient_3
13;2;2 274 pathaction!3_13;2;2,3254
Consider method^4_0;3;1;0,861 861 m5_do_clean_shot
0;3;1;0 112 pathaction!4_0;3;1;0,3142
Consider method^3_0;1;1,2612 2612 m8_do_fill_shot
0;1;1 239 pathaction!3_0;1;1,939
Consider method^3_1;2;2,3427 3427 _m3_get_second_ingredient_3
1;2;2 332 pathaction!3_1;2;2,3202
Consider method^4_9;3;1;0,2845 2845 m5_do_clean_shot
9;3;1;0 60 pathaction!4_9;3;1;0,2834
Consider method^0_,4277 4277 __top_1
 323 pathaction!0_,3525
Consider method^3_13;3;5,1486 1486 _m4_serve_shot_6
13;3;5 115 pathaction!3_13;3;5,1134
Consider method^3_4;3;1,4052 4052 _m4_serve_shot_2
4;3;1 372 pathaction!3_4;3;1,1040
Consider method^3_11;3;1,739 739 _m4_serve_shot_2
11;3;1 194 pathaction!3_11;3;1,1039
Consider method^3_10;1;3,3441 3441 _m2_get_first_ingredient_4
10;1;3 140 pathaction!3_10;1;3,865
Consider method^3_6;2;2,1747 1747 _m3_get_second_ingredient_3
6;2;2 67 pathaction!3_6;2;2,3252
Consider method^3_9;3;1,481 481 _m4_serve_shot_2
9;3;1 225 pathaction!3_9;3;1,1062
Consider method^3_1;2;1,2651 2651 _m3_get_second_ingredient_2
1;2;1 349 pathaction!3_1;2;1,714
Consider method^3_1;1;2,388 388 _m2_get_first_ingredient_3
1;1;2 369 pathaction!3_1;1;2,1287
Consider method^3_2;2;1,3220 3220 _m3_get_second_ingredient_2
2;2;1 151 pathaction!3_2;2;1,705
Consider method^4_11;3;1;0,2939 2939 m5_do_clean_shot
11;3;1;0 27 pathaction!4_11;3;1;0,3095
Consider method^2_3;1,854 854 m2_get_first_ingredient
3;1 36 pathaction!2_3;1,544
Consider method^1_4,1840 1840 m0_do_cocktail_in_shot1
4 326 pathaction!1_4,1545
Consider method^3_7;1;3,1565 1565 _m2_get_first_ingredient_4
7;1;3 382 pathaction!3_7;1;3,787
Consider method^3_5;3;4,3623 3623 _m4_serve_shot_5
5;3;4 322 pathaction!3_5;3;4,3512
Consider method^3_5;2;2,3005 3005 _m3_get_second_ingredient_3
5;2;2 442 pathaction!3_5;2;2,3201
Consider method^3_7;2;2,2634 2634 _m3_get_second_ingredient_3
7;2;2 366 pathaction!3_7;2;2,3236
Consider method^2_1;2,344 344 m3_get_second_ingredient
1;2 243 pathaction!2_1;2,1642
Consider method^3_9;1;1,1981 1981 m7_do_fill_shot
9;1;1 158 pathaction!3_9;1;1,1015
Consider method^2_6;1,3507 3507 m2_get_first_ingredient
6;1 128 pathaction!2_6;1,559
Consider method^3_1;1;3,2529 2529 _m2_get_first_ingredient_4
1;1;3 283 pathaction!3_1;1;3,838
Consider method^1_1,3682 3682 m0_do_cocktail_in_shot1
1 377 pathaction!1_1,1536
Consider method^4_5;3;1;0,1458 1458 m5_do_clean_shot
5;3;1;0 40 pathaction!4_5;3;1;0,3113
Consider method^3_3;1;3,999 999 _m2_get_first_ingredient_4
3;1;3 428 pathaction!3_3;1;3,857
Consider method^3_1;3;5,3052 3052 _m4_serve_shot_6
1;3;5 304 pathaction!3_1;3;5,1170
Consider method^1_9,1352 1352 m0_do_cocktail_in_shot1
9 201 pathaction!1_9,1541
Consider method^3_10;2;1,3689 3689 _m3_get_second_ingredient_2
10;2;1 162 pathaction!3_10;2;1,650
Consider method^2_0;1,2942 2942 m2_get_first_ingredient
0;1 306 pathaction!2_0;1,554
Consider method^2_9;3,4091 4091 m4_serve_shot
9;3 379 pathaction!2_9;3,3182
Consider method^2_4;2,2028 2028 m3_get_second_ingredient
4;2 188 pathaction!2_4;2,1638
Consider method^3_2;1;3,275 275 _m2_get_first_ingredient_4
2;1;3 15 pathaction!3_2;1;3,819
Consider method^3_13;1;1,3557 3557 m8_do_fill_shot
13;1;1 395 pathaction!3_13;1;1,1027
Consider method^3_10;1;2,3388 3388 _m2_get_first_ingredient_3
10;1;2 288 pathaction!3_10;1;2,1189
Consider method^2_8;1,291 291 m2_get_first_ingredient
8;1 416 pathaction!2_8;1,561
Consider method^2_10;1,2273 2273 m2_get_first_ingredient
10;1 321 pathaction!2_10;1,546
Consider method^2_11;3,3844 3844 m4_serve_shot
11;3 264 pathaction!2_11;3,3184
Consider method^3_7;3;5,3661 3661 _m4_serve_shot_6
7;3;5 83 pathaction!3_7;3;5,1154
Consider method^4_2;3;1;0,1490 1490 m6_do_clean_shot
2;3;1;0 185 pathaction!4_2;3;1;0,3021
Consider method^2_9;1,2587 2587 m2_get_first_ingredient
9;1 76 pathaction!2_9;1,545
Consider method^3_9;3;4,121 121 _m4_serve_shot_5
9;3;4 9 pathaction!3_9;3;4,3499
Consider method^3_8;2;2,1747 1747 _m3_get_second_ingredient_3
8;2;2 238 pathaction!3_8;2;2,3252
Consider method^2_1;1,3143 3143 m2_get_first_ingredient
1;1 251 pathaction!2_1;1,547
Consider method^3_7;3;4,2736 2736 _m4_serve_shot_5
7;3;4 354 pathaction!3_7;3;4,3479
Consider method^3_11;1;2,67 67 _m2_get_first_ingredient_3
11;1;2 1 pathaction!3_11;1;2,1253
Consider method^3_3;3;4,2850 2850 _m4_serve_shot_5
3;3;4 305 pathaction!3_3;3;4,3522
Consider method^2_3;3,1913 1913 m4_serve_shot
3;3 336 pathaction!2_3;3,3175
Consider method^3_2;3;4,704 704 _m4_serve_shot_5
2;3;4 187 pathaction!3_2;3;4,3493
Consider method^2_12;1,3353 3353 m9_do_fill_shot
12;1 222 pathaction!2_12;1,939
Consider method^3_2;2;2,472 472 _m3_get_second_ingredient_3
2;2;2 72 pathaction!3_2;2;2,3291
Consider method^3_10;3;1,2574 2574 _m4_serve_shot_2
10;3;1 218 pathaction!3_10;3;1,1058
Consider method^3_11;1;1,588 588 m7_do_fill_shot
11;1;1 449 pathaction!3_11;1;1,942
Consider method^2_6;3,1266 1266 m4_serve_shot
6;3 358 pathaction!2_6;3,3183
Consider method^3_3;2;2,3174 3174 _m3_get_second_ingredient_3
3;2;2 331 pathaction!3_3;2;2,3227
Consider method^3_13;1;2,4234 4234 _m2_get_first_ingredient_3
13;1;2 334 pathaction!3_13;1;2,1224
Consider method^4_7;3;1;0,2011 2011 m5_do_clean_shot
7;3;1;0 367 pathaction!4_7;3;1;0,3148
Consider method^1_11,106 106 m0_do_cocktail_in_shot1
11 312 pathaction!1_11,1543
Consider method^3_10;3;4,3074 3074 _m4_serve_shot_5
10;3;4 29 pathaction!3_10;3;4,3504
Consider method^2_3;2,831 831 m3_get_second_ingredient
3;2 421 pathaction!2_3;2,1639
Consider method^3_1;1;1,1867 1867 m8_do_fill_shot
1;1;1 388 pathaction!3_1;1;1,1010
Consider method^3_4;1;2,891 891 _m2_get_first_ingredient_3
4;1;2 295 pathaction!3_4;1;2,1201
Consider method^3_8;1;2,88 88 _m2_get_first_ingredient_3
8;1;2 91 pathaction!3_8;1;2,1256
Consider method^3_5;1;2,562 562 _m2_get_first_ingredient_3
5;1;2 351 pathaction!3_5;1;2,1281
Consider method^3_4;3;4,1448 1448 _m4_serve_shot_5
4;3;4 291 pathaction!3_4;3;4,3510
Consider method^2_10;2,1628 1628 m3_get_second_ingredient
10;2 183 pathaction!2_10;2,1641
Consider method^2_2;2,268 268 m3_get_second_ingredient
2;2 435 pathaction!2_2;2,1644
Consider method^1_0,2384 2384 m0_do_cocktail_in_shot1
0 376 pathaction!1_0,1546
Consider method^4_3;3;1;0,3172 3172 m6_do_clean_shot
3;3;1;0 343 pathaction!4_3;3;1;0,2942
Consider method^3_6;3;1,1529 1529 _m4_serve_shot_2
6;3;1 281 pathaction!3_6;3;1,1054
Consider method^2_5;3,4153 4153 m4_serve_shot
5;3 196 pathaction!2_5;3,3181
Consider method^3_0;1;3,3006 3006 _m2_get_first_ingredient_4
0;1;3 146 pathaction!3_0;1;3,767
Consider method^2_9;2,2668 2668 m3_get_second_ingredient
9;2 355 pathaction!2_9;2,1640


CHECKING primitive solution of length 279 ...
true 252 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 229 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot13;]
true 406 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4;]
true 337 grasp[left,shot13;]
true 32 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 235 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1;]
true 250 clean-shot[shot13,ingredient4,left,right;]
true 70 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,left,shot13;]
true 174 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 265 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 319 leave[left,shot13;]
true 298 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3;]
true 154 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 179 nop[;]
true 208 grasp[right,shaker1;]
true 411 shake[cocktail5,ingredient4,ingredient3,shaker1,right,left;]
true 63 pour-shaker-to-shot[cocktail5,shot1,right,shaker1,l2,l1;]
true 136 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 242 clean-shaker[right,left,shaker1;]
true 329 leave[right,shaker1;]
true 127 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 189 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot2;]
true 104 __method_precondition_m8_do_fill_shot_8_precondition[shot2,dispenser1,ingredient1;]
true 156 grasp[left,shot2;]
true 390 fill-shot[shot2,ingredient1,left,right,dispenser1;]
true 65 pour-shot-to-clean-shaker[shot2,ingredient1,shaker1,left,l0,l1;]
true 85 clean-shot[shot2,ingredient1,left,right;]
true 192 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot2;]
true 14 fill-shot[shot2,ingredient3,left,right,dispenser3;]
true 0 pour-shot-to-used-shaker[shot2,ingredient3,shaker1,left,l1,l2;]
true 401 leave[left,shot2;]
true 365 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient3;]
true 133 __method_precondition_m6_do_clean_shot_6_precondition[shot2,left;]
true 79 grasp[left,shot2;]
true 42 clean-shot[shot2,ingredient3,left,right;]
true 172 leave[left,shot2;]
true 419 grasp[right,shaker1;]
true 95 shake[cocktail10,ingredient1,ingredient3,shaker1,right,left;]
true 374 pour-shaker-to-shot[cocktail10,shot2,right,shaker1,l2,l1;]
true 301 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 408 clean-shaker[right,left,shaker1;]
true 94 leave[right,shaker1;]
true 342 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 165 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot3;]
true 182 __method_precondition_m8_do_fill_shot_8_precondition[shot3,dispenser4,ingredient4;]
true 19 grasp[right,shot3;]
true 263 fill-shot[shot3,ingredient4,right,left,dispenser4;]
true 10 pour-shot-to-clean-shaker[shot3,ingredient4,shaker1,right,l0,l1;]
true 220 clean-shot[shot3,ingredient4,right,left;]
true 217 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,right,shot3;]
true 92 fill-shot[shot3,ingredient2,right,left,dispenser2;]
true 389 pour-shot-to-used-shaker[shot3,ingredient2,shaker1,right,l1,l2;]
true 48 leave[right,shot3;]
true 335 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient2;]
true 38 __method_precondition_m6_do_clean_shot_6_precondition[shot3,left;]
true 90 grasp[left,shot3;]
true 363 clean-shot[shot3,ingredient2,left,right;]
true 277 leave[left,shot3;]
true 31 grasp[right,shaker1;]
true 254 shake[cocktail9,ingredient4,ingredient2,shaker1,right,left;]
true 20 pour-shaker-to-shot[cocktail9,shot3,right,shaker1,l2,l1;]
true 253 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 287 clean-shaker[right,left,shaker1;]
true 204 leave[right,shaker1;]
true 233 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 285 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot4;]
true 58 __method_precondition_m8_do_fill_shot_8_precondition[shot4,dispenser3,ingredient3;]
true 26 grasp[left,shot4;]
true 255 fill-shot[shot4,ingredient3,left,right,dispenser3;]
true 4 pour-shot-to-clean-shaker[shot4,ingredient3,shaker1,left,l0,l1;]
true 318 clean-shot[shot4,ingredient3,left,right;]
true 66 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,left,shot4;]
true 88 fill-shot[shot4,ingredient1,left,right,dispenser1;]
true 256 pour-shot-to-used-shaker[shot4,ingredient1,shaker1,left,l1,l2;]
true 324 leave[left,shot4;]
true 116 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1;]
true 176 __method_precondition_m6_do_clean_shot_6_precondition[shot4,right;]
true 39 grasp[right,shot4;]
true 141 clean-shot[shot4,ingredient1,right,left;]
true 56 leave[right,shot4;]
true 214 grasp[left,shaker1;]
true 161 shake[cocktail1,ingredient3,ingredient1,shaker1,left,right;]
true 249 pour-shaker-to-shot[cocktail1,shot4,left,shaker1,l2,l1;]
true 221 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 248 clean-shaker[left,right,shaker1;]
true 314 leave[left,shaker1;]
true 417 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 224 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot5;]
true 125 __method_precondition_m8_do_fill_shot_8_precondition[shot5,dispenser1,ingredient1;]
true 309 grasp[left,shot5;]
true 17 fill-shot[shot5,ingredient1,left,right,dispenser1;]
true 57 pour-shot-to-clean-shaker[shot5,ingredient1,shaker1,left,l0,l1;]
true 276 clean-shot[shot5,ingredient1,left,right;]
true 35 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot5;]
true 427 fill-shot[shot5,ingredient3,left,right,dispenser3;]
true 186 pour-shot-to-used-shaker[shot5,ingredient3,shaker1,left,l1,l2;]
true 223 leave[left,shot5;]
true 106 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient3;]
true 8 __method_precondition_m6_do_clean_shot_6_precondition[shot5,right;]
true 299 grasp[right,shot5;]
true 190 clean-shot[shot5,ingredient3,right,left;]
true 438 leave[right,shot5;]
true 436 grasp[left,shaker1;]
true 169 shake[cocktail3,ingredient1,ingredient3,shaker1,left,right;]
true 124 pour-shaker-to-shot[cocktail3,shot5,left,shaker1,l2,l1;]
true 84 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 74 clean-shaker[left,right,shaker1;]
true 59 leave[left,shaker1;]
true 47 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 245 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot13;]
true 50 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2;]
true 333 grasp[right,shot13;]
true 118 clean-shot[shot13,ingredient3,right,left;]
true 167 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 49 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,right,l0,l1;]
true 109 clean-shot[shot13,ingredient2,right,left;]
true 152 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,right,shot13;]
true 357 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 69 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2;]
true 98 leave[right,shot13;]
true 284 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3;]
true 432 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 303 nop[;]
true 130 grasp[right,shaker1;]
true 160 shake[cocktail6,ingredient2,ingredient3,shaker1,right,left;]
true 315 pour-shaker-to-shot[cocktail6,shot6,right,shaker1,l2,l1;]
true 247 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 246 clean-shaker[right,left,shaker1;]
true 110 leave[right,shaker1;]
true 75 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 313 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot13;]
true 310 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient3,dispenser3;]
true 13 grasp[left,shot13;]
true 399 refill-shot[shot13,ingredient3,left,right,dispenser3;]
true 44 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 46 clean-shot[shot13,ingredient3,left,right;]
true 422 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot13;]
true 278 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 450 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 398 leave[left,shot13;]
true 170 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2;]
true 12 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 207 nop[;]
true 370 grasp[right,shaker1;]
true 364 shake[cocktail8,ingredient3,ingredient2,shaker1,right,left;]
true 55 pour-shaker-to-shot[cocktail8,shot7,right,shaker1,l2,l1;]
true 293 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 394 clean-shaker[right,left,shaker1;]
true 205 leave[right,shaker1;]
true 392 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 240 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13;]
true 272 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient2,dispenser4;]
true 101 grasp[right,shot13;]
true 81 clean-shot[shot13,ingredient2,right,left;]
true 184 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 45 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 352 clean-shot[shot13,ingredient4,right,left;]
true 2 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,right,shot13;]
true 241 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 137 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,right,l1,l2;]
true 268 leave[right,shot13;]
true 213 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient1;]
true 330 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 132 nop[;]
true 350 grasp[left,shaker1;]
true 396 shake[cocktail2,ingredient4,ingredient1,shaker1,left,right;]
true 64 pour-shaker-to-shot[cocktail2,shot8,left,shaker1,l2,l1;]
true 384 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 443 clean-shaker[left,right,shaker1;]
true 148 leave[left,shaker1;]
true 87 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 244 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot13;]
true 191 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient1,dispenser4;]
true 28 grasp[left,shot13;]
true 93 clean-shot[shot13,ingredient1,left,right;]
true 197 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 437 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1;]
true 99 clean-shot[shot13,ingredient4,left,right;]
true 139 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot13;]
true 111 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 441 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 211 leave[left,shot13;]
true 375 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2;]
true 447 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 236 nop[;]
true 199 grasp[right,shaker1;]
true 286 shake[cocktail11,ingredient4,ingredient2,shaker1,right,left;]
true 294 pour-shaker-to-shot[cocktail11,shot9,right,shaker1,l2,l1;]
true 61 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 346 clean-shaker[right,left,shaker1;]
true 371 leave[right,shaker1;]
true 108 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 403 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot13;]
true 259 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient2,dispenser2;]
true 302 grasp[left,shot13;]
true 426 refill-shot[shot13,ingredient2,left,right,dispenser2;]
true 307 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 387 clean-shot[shot13,ingredient2,left,right;]
true 308 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,left,shot13;]
true 166 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 41 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 73 leave[left,shot13;]
true 231 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient3;]
true 292 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 300 nop[;]
true 269 grasp[left,shaker1;]
true 361 shake[cocktail7,ingredient2,ingredient3,shaker1,left,right;]
true 68 pour-shaker-to-shot[cocktail7,shot10,left,shaker1,l2,l1;]
true 415 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 62 clean-shaker[left,right,shaker1;]
true 439 leave[left,shaker1;]
true 25 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 102 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot15;]
true 275 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser1,ingredient1;]
true 5 grasp[left,shot15;]
true 228 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 381 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 7 clean-shot[shot15,ingredient1,left,right;]
true 338 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,left,shot15;]
true 24 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 6 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 311 leave[left,shot15;]
true 347 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient4;]
true 282 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 210 nop[;]
true 423 grasp[left,shaker1;]
true 155 shake[cocktail4,ingredient1,ingredient4,shaker1,left,right;]
true 258 pour-shaker-to-shot[cocktail4,shot11,left,shaker1,l2,l1;]
true 348 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 325 clean-shaker[left,right,shaker1;]
true 433 leave[left,shaker1;]
true 234 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 147 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot15;]
true 54 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient4,dispenser4;]
true 138 grasp[left,shot15;]
true 105 refill-shot[shot15,ingredient4,left,right,dispenser4;]
true 344 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 262 clean-shot[shot15,ingredient4,left,right;]
true 212 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot15;]
true 317 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 86 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 404 leave[left,shot15;]
true 410 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2;]
true 431 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 122 nop[;]
true 121 grasp[right,shaker1;]
true 37 shake[cocktail11,ingredient4,ingredient2,shaker1,right,left;]
true 385 pour-shaker-to-shot[cocktail11,shot12,right,shaker1,l2,l1;]
true 444 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 424 clean-shaker[right,left,shaker1;]
true 215 leave[right,shaker1;]
true 142 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 164 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient3,dispenser4;]
true 21 grasp[left,shot13;]
true 163 clean-shot[shot13,ingredient3,left,right;]
true 405 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 168 leave[left,shot13;]
true 193 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,right;]
true 195 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot14;]
true 134 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser4,ingredient4;]
true 353 grasp[right,shot14;]
true 397 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 173 pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,right,l0,l1;]
true 178 clean-shot[shot14,ingredient4,right,left;]
true 391 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,right,shot14;]
true 273 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 420 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,right,l1,l2;]
true 120 leave[right,shot14;]
true 153 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3;]
true 402 __method_precondition_m6_do_clean_shot_6_precondition[shot14,right;]
true 53 grasp[right,shot14;]
true 383 clean-shot[shot14,ingredient3,right,left;]
true 227 leave[right,shot14;]
true 430 grasp[left,shaker1;]
true 360 shake[cocktail5,ingredient4,ingredient3,shaker1,left,right;]
true 82 pour-shaker-to-shot[cocktail5,shot14,left,shaker1,l2,l1;]
true 103 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 316 clean-shaker[left,right,shaker1;]
true 51 leave[left,shaker1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2372
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 4744
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 7116
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 9488
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 11860
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 14232
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 16604
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 18976
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 21348
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 23720
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 26092
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 28464
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 30836
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 33208
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 35580
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 37952
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 40324
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 42696
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 45068
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 47440
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 49812
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 52184
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 54556
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 56928
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 59300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 61672
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 64044
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 66416
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 68788
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 71160
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 73532
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 75904
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 78276
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 80648
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 83020
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 85392
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 87764
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 90136
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 92508
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 94880
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 97252
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 99624
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 101996
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 104368
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 106740
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 109112
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 111484
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 113856
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 116228
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 118600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 120972
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 123344
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 125716
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 128088
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 130460
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 132832
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 135204
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 137576
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 139948
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 142320
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 144692
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 147064
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 149436
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 151808
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 154180
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 156552
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 158924
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 161296
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 163668
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 166040
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 168412
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 170784
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 173156
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 175528
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 177900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 180272
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 182644
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 185016
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 187388
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 189760
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 192132
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 194504
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 196876
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 199248
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 201620
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 203992
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 206364
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 208736
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 211108
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 213480
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 215852
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 218224
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 220596
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 222968
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 225340
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 227712
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 230084
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 232456
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 234828
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 237200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 239572
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 241944
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 244316
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 246688
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 249060
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 251432
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 253804
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 256176
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 258548
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 260920
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 263292
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 265664
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 268036
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 270408
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 272780
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 275152
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 277524
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 279896
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 282268
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 284640
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 287012
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 289384
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 291756
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 294128
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 296500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 126
ICAPS: 298872
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 127
ICAPS: 301244
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 128
ICAPS: 303616
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 129
ICAPS: 305988
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 130
ICAPS: 308360
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 131
ICAPS: 310732
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 132
ICAPS: 313104
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.101 MEMPEAK_KBS 746180.608
