PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile24.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile24.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile24.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Grounded planning graph ... done in 213ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 107
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Grounding ... done.
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 71ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 88
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 120
	number of tasks = 350
	number of decomposition methods = 328
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 120
	number of tasks = 350
	number of decomposition methods = 328
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 30ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 88
	number of abstract tasks = 120
	number of tasks = 350
	number of decomposition methods = 328
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 120
	number of tasks = 350
	number of decomposition methods = 328
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 120
	number of tasks = 350
	number of decomposition methods = 328
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 176
	number of tasks = 406
	number of decomposition methods = 384
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 176
	number of tasks = 406
	number of decomposition methods = 384
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Tasks 230 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773260ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854773177
done
initial PDT has 70 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 70 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 11484
Size 11481 at 0/230
Size 5044
Size 4929 at 0/230
Size 2128
Size 2125 at 0/230
Size 454
Size 452 at 0/230
Size 224
Size 224 at 0/230
Size 205
Size 205 at 0/230
Size 204
Size 204 at 0/230
Size 204
Invariant time: 0.182
Number of invariants: 204
Invariant Clauses 14484
NUMBER OF CLAUSES 38916
NUMBER OF STATE CLAUSES 28932
NUMBER OF DECOMPOSITION CLAUSES 9984
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 74.34% 25.66% 0.0% 
NUMBER OF PATHS 70
Starting cryptominisat5.5
Setting starttime of solver to 1604531044945
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 98 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 98 leafs
SHOP LEAFS 14
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854771994
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 20196
NUMBER OF CLAUSES 65146
NUMBER OF STATE CLAUSES 41087
NUMBER OF DECOMPOSITION CLAUSES 24059
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 63.07% 36.93% 0.0% 
NUMBER OF PATHS 98
Starting cryptominisat5.5
Setting starttime of solver to 1604531045679
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 126 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854771240
done
PDT has 126 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 25908
NUMBER OF CLAUSES 96866
NUMBER OF STATE CLAUSES 53692
NUMBER OF DECOMPOSITION CLAUSES 43174
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 55.43% 44.57% 0.0% 
NUMBER OF PATHS 126
Starting cryptominisat5.5
Setting starttime of solver to 1604531046531
Command exited with non-zero status 10
0.04 0.01

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_9,12 12 m-deliver
9 5 pathaction!1_9,91
Consider method^5_0;0;0;0;0,321 321 m-i-am-there
0;0;0;0;0 11 pathaction!5_0;0;0;0;0,185
Consider method^4_13;0;0;0,189 189 m-drive-to-via
13;0;0;0 160 pathaction!4_13;0;0;0,179
Consider method^3_6;0;0,131 131 m-i-am-there
6;0;0 47 pathaction!3_6;0;0,196
Consider method^3_7;2;0,169 169 m-drive-to-via
7;2;0 203 pathaction!3_7;2;0,190
Consider method^1_2,254 254 m-deliver
2 39 pathaction!1_2,97
Consider method^2_5;2,219 219 __UNIQUE-replacement_29
5;2 83 pathaction!2_5;2,379
Consider method^2_7;2,359 359 m-drive-to-via
7;2 97 pathaction!2_7;2,201
Consider method^2_9;2,11 11 __UNIQUE-replacement_1
9;2 76 pathaction!2_9;2,351
Consider method^4_0;2;0;0,130 130 m-drive-to-via
0;2;0;0 178 pathaction!4_0;2;0;0,197
Consider method^2_5;0,218 218 __UNIQUE-replacement_28
5;0 136 pathaction!2_5;0,378
Consider method^2_12;0,68 68 m-drive-to-via
12;0 129 pathaction!2_12;0,193
Consider method^3_7;0;0,88 88 m-drive-to-via
7;0;0 7 pathaction!3_7;0;0,185
Consider method^2_3;3,263 263 m-unload
3;3 62 pathaction!2_3;3,63
Consider method^2_8;3,85 85 m-unload
8;3 93 pathaction!2_8;3,79
Consider method^4_1;0;0;0,336 336 m-drive-to-via
1;0;0;0 108 pathaction!4_1;0;0;0,178
Consider method^2_5;3,70 70 m-unload
5;3 57 pathaction!2_5;3,71
Consider method^2_12;3,264 264 m-unload
12;3 74 pathaction!2_12;3,83
Consider method^3_1;2;0,269 269 m-drive-to-via
1;2;0 114 pathaction!3_1;2;0,195
Consider method^0_,383 383 __top_1
 127 pathaction!0_,349
Consider method^1_1,148 148 m-deliver
1 15 pathaction!1_1,94
Consider method^3_10;2;0,131 131 m-i-am-there
10;2;0 24 pathaction!3_10;2;0,196
Consider method^1_0,221 221 m-deliver
0 150 pathaction!1_0,87
Consider method^2_3;0,316 316 __UNIQUE-replacement_48
3;0 219 pathaction!2_3;0,398
Consider method^2_13;3,99 99 m-unload
13;3 34 pathaction!2_13;3,80
Consider method^3_3;2;0,131 131 m-i-am-there
3;2;0 63 pathaction!3_3;2;0,196
Consider method^1_11,69 69 m-deliver
11 29 pathaction!1_11,84
Consider method^3_0;0;0,314 314 m-drive-to-via
0;0;0 144 pathaction!3_0;0;0,185
Consider method^2_8;1,270 270 m-load
8;1 153 pathaction!2_8;1,310
Consider method^4_8;0;0;0,110 110 m-drive-to
8;0;0;0 105 pathaction!4_8;0;0;0,190
Consider method^2_1;0,289 289 m-drive-to-via
1;0 81 pathaction!2_1;0,178
Consider method^1_4,166 166 m-deliver
4 80 pathaction!1_4,89
Consider method^2_11;3,38 38 m-unload
11;3 84 pathaction!2_11;3,56
Consider method^3_4;2;0,131 131 m-i-am-there
4;2;0 41 pathaction!3_4;2;0,196
Consider method^3_5;0;0,131 131 m-i-am-there
5;0;0 28 pathaction!3_5;0;0,196
Consider method^2_2;0,252 252 __UNIQUE-replacement_32
2;0 113 pathaction!2_2;0,382
Consider method^1_10,55 55 m-deliver
10 72 pathaction!1_10,93
Consider method^2_13;0,246 246 m-drive-to-via
13;0 211 pathaction!2_13;0,179
Consider method^2_11;2,107 107 m-drive-to-via
11;2 142 pathaction!2_11;2,187
Consider method^5_12;0;0;0;0,187 187 m-drive-to
12;0;0;0;0 58 pathaction!5_12;0;0;0;0,195
Consider method^4_0;0;0;0,346 346 m-drive-to-via
0;0;0;0 183 pathaction!4_0;0;0;0,183
Consider method^2_12;1,119 119 m-load
12;1 98 pathaction!2_12;1,314
Consider method^3_11;2;0,359 359 m-drive-to-via
11;2;0 16 pathaction!3_11;2;0,201
Consider method^3_3;0;0,131 131 m-i-am-there
3;0;0 14 pathaction!3_3;0;0,196
Consider method^5_12;2;0;0;0,192 192 m-drive-to
12;2;0;0;0 67 pathaction!5_12;2;0;0;0,182
Consider method^2_10;2,54 54 __UNIQUE-replacement_13
10;2 70 pathaction!2_10;2,363
Consider method^3_4;0;0,131 131 m-i-am-there
4;0;0 79 pathaction!3_4;0;0,196
Consider method^1_13,265 265 m-deliver
13 2 pathaction!1_13,96
Consider method^2_4;1,144 144 m-load
4;1 45 pathaction!2_4;1,346
Consider method^2_1;2,190 190 m-drive-to-via
1;2 66 pathaction!2_1;2,184
Consider method^2_4;3,275 275 m-unload
4;3 176 pathaction!2_4;3,82
Consider method^4_12;0;0;0,289 289 m-drive-to-via
12;0;0;0 60 pathaction!4_12;0;0;0,178
Consider method^2_9;0,10 10 __UNIQUE-replacement_0
9;0 130 pathaction!2_9;0,350
Consider method^2_13;2,190 190 m-drive-to-via
13;2 173 pathaction!2_13;2,184
Consider method^3_9;2;0,131 131 m-i-am-there
9;2;0 38 pathaction!3_9;2;0,196
Consider method^2_0;3,14 14 m-unload
0;3 212 pathaction!2_0;3,77
Consider method^2_11;1,129 129 m-load
11;1 94 pathaction!2_11;1,329
Consider method^3_13;0;0,375 375 m-drive-to-via
13;0;0 165 pathaction!3_13;0;0,177
Consider method^1_12,301 301 m-deliver
12 168 pathaction!1_12,90
Consider method^2_7;3,337 337 m-unload
7;3 99 pathaction!2_7;3,58
Consider method^2_2;3,283 283 m-unload
2;3 23 pathaction!2_2;3,74
Consider method^3_0;2;0,191 191 m-drive-to-via
0;2;0 163 pathaction!3_0;2;0,185
Consider method^1_3,318 318 m-deliver
3 155 pathaction!1_3,85
Consider method^1_7,134 134 m-deliver
7 184 pathaction!1_7,88
Consider method^3_6;2;0,131 131 m-i-am-there
6;2;0 207 pathaction!3_6;2;0,196
Consider method^2_10;3,244 244 m-unload
10;3 107 pathaction!2_10;3,67
Consider method^3_12;0;0,362 362 m-drive-to-via
12;0;0 92 pathaction!3_12;0;0,182
Consider method^2_10;0,53 53 __UNIQUE-replacement_12
10;0 18 pathaction!2_10;0,362
Consider method^3_10;0;0,131 131 m-i-am-there
10;0;0 169 pathaction!3_10;0;0,196
Consider method^3_2;2;0,131 131 m-i-am-there
2;2;0 217 pathaction!3_2;2;0,196
Consider method^2_0;1,106 106 m-load
0;1 9 pathaction!2_0;1,343
Consider method^4_1;2;0;0,159 159 m-i-am-there
1;2;0;0 75 pathaction!4_1;2;0;0,178
Consider method^4_7;0;0;0,169 169 m-drive-to-via
7;0;0;0 118 pathaction!4_7;0;0;0,190
Consider method^1_8,223 223 m-deliver
8 193 pathaction!1_8,86
Consider method^2_0;0,169 169 m-drive-to-via
0;0 148 pathaction!2_0;0,190
Consider method^2_7;0,130 130 m-drive-to-via
7;0 121 pathaction!2_7;0,197
Consider method^2_2;1,30 30 m-load
2;1 187 pathaction!2_2;1,333
Consider method^2_6;3,345 345 m-unload
6;3 138 pathaction!2_6;3,65
Consider method^2_4;0,164 164 __UNIQUE-replacement_22
4;0 210 pathaction!2_4;0,372
Consider method^3_13;2;0,371 371 m-drive-to
13;2;0 42 pathaction!3_13;2;0,195
Consider method^3_5;2;0,131 131 m-i-am-there
5;2;0 164 pathaction!3_5;2;0,196
Consider method^2_5;1,193 193 m-load
5;1 27 pathaction!2_5;1,325
Consider method^2_6;0,347 347 __UNIQUE-replacement_52
6;0 137 pathaction!2_6;0,402
Consider method^4_12;2;0;0,336 336 m-drive-to-via
12;2;0;0 55 pathaction!4_12;2;0;0,178
Consider method^2_3;2,317 317 __UNIQUE-replacement_49
3;2 89 pathaction!2_3;2,399
Consider method^3_12;2;0,269 269 m-drive-to-via
12;2;0 8 pathaction!3_12;2;0,195
Consider method^2_12;2,289 289 m-drive-to-via
12;2 182 pathaction!2_12;2,178
Consider method^5_1;0;0;0;0,245 245 m-drive-to
1;0;0;0;0 190 pathaction!5_1;0;0;0;0,182
Consider method^2_6;1,175 175 m-load
6;1 69 pathaction!2_6;1,313
Consider method^2_11;0,224 224 m-drive-to-via
11;0 37 pathaction!2_11;0,200
Consider method^2_9;1,186 186 m-load
9;1 0 pathaction!2_9;1,319
Consider method^3_8;2;0,320 320 m-drive-to
8;2;0 140 pathaction!3_8;2;0,185
Consider method^1_5,220 220 m-deliver
5 179 pathaction!1_5,95
Consider method^2_10;1,100 100 m-load
10;1 131 pathaction!2_10;1,318
Consider method^2_6;2,348 348 __UNIQUE-replacement_53
6;2 25 pathaction!2_6;2,403
Consider method^5_11;2;0;0;0,320 320 m-drive-to
11;2;0;0;0 175 pathaction!5_11;2;0;0;0,185
Consider method^3_1;0;0,269 269 m-drive-to-via
1;0;0 13 pathaction!3_1;0;0,195
Consider method^2_7;1,23 23 m-load
7;1 128 pathaction!2_7;1,330
Consider method^2_1;3,3 3 m-unload
1;3 3 pathaction!2_1;3,73
Consider method^2_2;2,253 253 __UNIQUE-replacement_33
2;2 171 pathaction!2_2;2,383
Consider method^4_11;2;0;0,169 169 m-drive-to-via
11;2;0;0 54 pathaction!4_11;2;0;0,190
Consider method^5_13;0;0;0;0,357 357 m-drive-to
13;0;0;0;0 185 pathaction!5_13;0;0;0;0,195
Consider method^2_9;3,327 327 m-unload
9;3 50 pathaction!2_9;3,68
Consider method^2_13;1,145 145 m-load
13;1 78 pathaction!2_13;1,347
Consider method^3_8;0;0,88 88 m-drive-to-via
8;0;0 220 pathaction!3_8;0;0,185
Consider method^3_9;0;0,131 131 m-i-am-there
9;0;0 40 pathaction!3_9;0;0,196
Consider method^4_7;2;0;0,372 372 m-drive-to
7;2;0;0 82 pathaction!4_7;2;0;0,185
Consider method^2_3;1,142 142 m-load
3;1 143 pathaction!2_3;1,309
Consider method^2_1;1,183 183 m-load
1;1 177 pathaction!2_1;1,337
Consider method^5_0;2;0;0;0,22 22 m-drive-to
0;2;0;0;0 152 pathaction!5_0;2;0;0;0,185
Consider method^1_6,349 349 m-deliver
6 101 pathaction!1_6,92
Consider method^2_0;2,346 346 m-drive-to-via
0;2 35 pathaction!2_0;2,183
Consider method^5_7;0;0;0;0,39 39 m-drive-to
7;0;0;0;0 151 pathaction!5_7;0;0;0;0,185
Consider method^2_8;0,224 224 m-drive-to-via
8;0 188 pathaction!2_8;0,200
Consider method^2_8;2,130 130 m-drive-to-via
8;2 146 pathaction!2_8;2,197
Consider method^3_2;0;0,131 131 m-i-am-there
2;0;0 191 pathaction!3_2;0;0,196
Consider method^3_11;0;0,372 372 m-drive-to
11;0;0 6 pathaction!3_11;0;0,185
Consider method^2_4;2,165 165 __UNIQUE-replacement_23
4;2 85 pathaction!2_4;2,373


CHECKING primitive solution of length 89 ...
true 4 noop[truck-3,city-loc-4;]
true 135 drive[truck-3,city-loc-4,city-loc-1;]
true 196 drive[truck-3,city-loc-1,city-loc-4;]
true 216 drive[truck-3,city-loc-4,city-loc-2;]
true 145 pick-up[truck-3,city-loc-2,package-0,capacity-1,capacity-2;]
true 36 drive[truck-3,city-loc-2,city-loc-4;]
true 215 drive[truck-3,city-loc-4,city-loc-8;]
true 214 drive[truck-3,city-loc-8,city-loc-4;]
true 109 drive[truck-3,city-loc-4,city-loc-1;]
true 194 drop[truck-3,city-loc-1,package-0,capacity-1,capacity-2;]
true 17 drive[truck-0,city-loc-8,city-loc-4;]
true 71 drive[truck-0,city-loc-4,city-loc-2;]
true 125 drive[truck-0,city-loc-2,city-loc-0;]
true 158 drive[truck-0,city-loc-0,city-loc-2;]
true 20 pick-up[truck-0,city-loc-2,package-1,capacity-1,capacity-2;]
true 111 noop[truck-0,city-loc-2;]
true 19 drive[truck-0,city-loc-2,city-loc-0;]
true 102 drive[truck-0,city-loc-0,city-loc-5;]
true 198 drop[truck-0,city-loc-5,package-1,capacity-1,capacity-2;]
true 56 noop[truck-1,city-loc-3;]
true 170 pick-up[truck-1,city-loc-3,package-2,capacity-1,capacity-2;]
true 90 noop[truck-1,city-loc-3;]
true 88 drop[truck-1,city-loc-3,package-2,capacity-1,capacity-2;]
true 95 noop[truck-1,city-loc-3;]
true 154 pick-up[truck-1,city-loc-3,package-3,capacity-1,capacity-2;]
true 159 noop[truck-1,city-loc-3;]
true 166 drop[truck-1,city-loc-3,package-3,capacity-1,capacity-2;]
true 180 noop[truck-1,city-loc-3;]
true 64 pick-up[truck-1,city-loc-3,package-4,capacity-1,capacity-2;]
true 205 noop[truck-1,city-loc-3;]
true 26 drop[truck-1,city-loc-3,package-4,capacity-1,capacity-2;]
true 53 noop[truck-1,city-loc-3;]
true 199 pick-up[truck-1,city-loc-3,package-5,capacity-1,capacity-2;]
true 43 noop[truck-1,city-loc-3;]
true 21 drop[truck-1,city-loc-3,package-5,capacity-1,capacity-2;]
true 189 noop[truck-1,city-loc-3;]
true 149 pick-up[truck-1,city-loc-3,package-6,capacity-1,capacity-2;]
true 112 noop[truck-1,city-loc-3;]
true 51 drop[truck-1,city-loc-3,package-6,capacity-1,capacity-2;]
true 31 drive[truck-3,city-loc-1,city-loc-4;]
true 123 drive[truck-3,city-loc-4,city-loc-2;]
true 117 drive[truck-3,city-loc-2,city-loc-4;]
true 172 drive[truck-3,city-loc-4,city-loc-8;]
true 200 pick-up[truck-3,city-loc-8,package-7,capacity-1,capacity-2;]
true 206 drive[truck-3,city-loc-8,city-loc-4;]
true 106 drive[truck-3,city-loc-4,city-loc-2;]
true 110 drive[truck-3,city-loc-2,city-loc-0;]
true 68 drop[truck-3,city-loc-0,package-7,capacity-1,capacity-2;]
true 202 drive[truck-3,city-loc-0,city-loc-2;]
true 195 drive[truck-3,city-loc-2,city-loc-4;]
true 162 drive[truck-3,city-loc-4,city-loc-6;]
true 122 pick-up[truck-3,city-loc-6,package-8,capacity-1,capacity-2;]
true 133 drive[truck-3,city-loc-6,city-loc-4;]
true 157 drive[truck-3,city-loc-4,city-loc-8;]
true 30 drop[truck-3,city-loc-8,package-8,capacity-1,capacity-2;]
true 1 noop[truck-1,city-loc-3;]
true 116 pick-up[truck-1,city-loc-3,package-9,capacity-1,capacity-2;]
true 22 noop[truck-1,city-loc-3;]
true 12 drop[truck-1,city-loc-3,package-9,capacity-1,capacity-2;]
true 147 noop[truck-1,city-loc-3;]
true 77 pick-up[truck-1,city-loc-3,package-10,capacity-1,capacity-2;]
true 156 noop[truck-1,city-loc-3;]
true 100 drop[truck-1,city-loc-3,package-10,capacity-1,capacity-2;]
true 201 drive[truck-3,city-loc-8,city-loc-4;]
true 115 drive[truck-3,city-loc-4,city-loc-6;]
true 120 pick-up[truck-3,city-loc-6,package-11,capacity-1,capacity-2;]
true 139 drive[truck-3,city-loc-6,city-loc-4;]
true 44 drive[truck-3,city-loc-4,city-loc-2;]
true 204 drive[truck-3,city-loc-2,city-loc-0;]
true 186 drive[truck-3,city-loc-0,city-loc-7;]
true 192 drop[truck-3,city-loc-7,package-11,capacity-1,capacity-2;]
true 167 drive[truck-0,city-loc-5,city-loc-0;]
true 141 drive[truck-0,city-loc-0,city-loc-2;]
true 65 drive[truck-0,city-loc-2,city-loc-4;]
true 134 drive[truck-0,city-loc-4,city-loc-6;]
true 124 pick-up[truck-0,city-loc-6,package-12,capacity-1,capacity-2;]
true 61 drive[truck-0,city-loc-6,city-loc-4;]
true 87 drive[truck-0,city-loc-4,city-loc-2;]
true 213 drive[truck-0,city-loc-2,city-loc-0;]
true 59 drive[truck-0,city-loc-0,city-loc-2;]
true 46 drop[truck-0,city-loc-2,package-12,capacity-1,capacity-2;]
true 91 drive[truck-0,city-loc-2,city-loc-0;]
true 132 drive[truck-0,city-loc-0,city-loc-7;]
true 49 drive[truck-0,city-loc-7,city-loc-9;]
true 10 drive[truck-0,city-loc-9,city-loc-7;]
true 73 pick-up[truck-0,city-loc-7,package-13,capacity-1,capacity-2;]
true 48 drive[truck-0,city-loc-7,city-loc-0;]
true 181 drive[truck-0,city-loc-0,city-loc-5;]
true 209 drop[truck-0,city-loc-5,package-13,capacity-1,capacity-2;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 354
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 708
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 1062
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 1416
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 1770
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 2124
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 2478
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 2832
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 3186
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 3540
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 3894
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 4248
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 4602
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 4956
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 5310
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 5664
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 6018
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 6372
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 6726
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 7080
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 7434
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 7788
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 8142
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 8496
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 8850
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 9204
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 9558
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 9912
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 10266
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 10620
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 10974
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 11328
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 11682
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 12036
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 12390
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 12744
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 13098
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 13452
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 13806
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 14160
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 14514
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 14868
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 15222
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 15576
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 15930
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 16284
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 16638
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 16992
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 17346
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 17700
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 18054
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 18408
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 18762
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 19116
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 19470
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 19824
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 57
ICAPS: 20178
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 89
  lower bound = 56

Running SAT search with cost bound = 72
==================================================
  upper bound = 89
  lower bound = 56
LEN 72
ICAPS: 25488
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854769868
DP max: 21
Taking minimum: 21
Generating initial PDT ... done
initial PDT has 546 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 546 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
At most K: 2276ms input: 17817 K = 72
Number of actions Formula: 2377ms for 2583392 clauses
Layers: 10 paths 546
Layer 1 g 0 = 0 - 1 / 0 clauses 149878
Layer 1 g 1 = 2 - 3 / 2 clauses 149878
Layer 1 g 2 = 4 - 5 / 4 clauses 149878
Layer 1 g 3 = 6 - 7 / 6 clauses 149878
Layer 1 g 4 = 8 - 9 / 8 clauses 149878
Layer 1 g 5 = 10 - 11 / 10 clauses 149878
Layer 1 g 6 = 12 - 13 / 12 clauses 149878
Layer 1 g 7 = 14 - 15 / 14 clauses 149878
Layer 1 g 8 = 16 - 17 / 16 clauses 149878
Layer 1 g 9 = 18 - 19 / 18 clauses 149878
Layer 1 g 10 = 20 - 21 / 20 clauses 149878
Layer 1 g 11 = 22 - 23 / 22 clauses 149878
Layer 1 g 12 = 24 - 25 / 24 clauses 149878
Layer 1 g 13 = 26 - 27 / 26 clauses 149878
Layer 1 g 14 = 28 - 29 / 28 clauses 149878
Layer 1 g 15 = 30 - 31 / 30 clauses 149878
Layer 1 g 16 = 32 - 33 / 32 clauses 149878
Layer 1 g 17 = 34 - 35 / 34 clauses 149878
Layer 1 g 18 = 36 - 37 / 36 clauses 149878
Layer 1 g 19 = 38 - 39 / 38 clauses 149878
Layer 1 g 20 = 40 - 41 / 40 clauses 149878
Layer 1 g 21 = 42 - 43 / 42 clauses 149878
Layer 1 g 22 = 44 - 45 / 44 clauses 149878
Layer 1 g 23 = 46 - 47 / 46 clauses 149878
Layer 1 g 24 = 48 - 49 / 48 clauses 149878
Layer 1 g 25 = 50 - 51 / 50 clauses 149878
Layer 1 g 26 = 52 - 53 / 52 clauses 149878
Layer 1 g 27 = 54 - 55 / 54 clauses 149878
Layer 1 g 28 = 56 - 57 / 56 clauses 149878
Layer 1 g 29 = 58 - 59 / 58 clauses 149878
Layer 1 g 30 = 60 - 61 / 60 clauses 149878
Layer 1 g 31 = 62 - 63 / 62 clauses 149878
Layer 1 g 32 = 64 - 65 / 64 clauses 149878
Layer 1 g 33 = 66 - 67 / 66 clauses 149878
Layer 1 g 34 = 68 - 69 / 68 clauses 149878
Layer 1 g 35 = 70 - 71 / 70 clauses 149878
Layer 1 g 36 = 72 - 73 / 72 clauses 149878
Layer 1 g 37 = 74 - 75 / 74 clauses 149878
Layer 1 g 38 = 76 - 77 / 76 clauses 149878
Layer 1 g 39 = 78 - 79 / 78 clauses 149878
Layer 1 g 40 = 80 - 81 / 80 clauses 149878
Layer 1 g 41 = 82 - 83 / 82 clauses 149878
Layer 1 g 42 = 84 - 85 / 84 clauses 149878
Layer 1 g 43 = 86 - 87 / 86 clauses 149878
Layer 1 g 44 = 88 - 89 / 88 clauses 149878
Layer 1 g 45 = 90 - 91 / 90 clauses 149878
Layer 1 g 46 = 92 - 93 / 92 clauses 149878
Layer 1 g 47 = 94 - 95 / 94 clauses 149878
Layer 1 g 48 = 96 - 97 / 96 clauses 149878
Layer 1 g 49 = 98 - 99 / 98 clauses 149878
Layer 1 g 50 = 100 - 101 / 100 clauses 149878
Layer 1 g 51 = 102 - 103 / 102 clauses 149878
Layer 1 g 52 = 104 - 105 / 104 clauses 149878
Layer 1 g 53 = 106 - 107 / 106 clauses 149878
Layer 1 g 54 = 108 - 109 / 108 clauses 149878
Layer 1 g 55 = 110 - 111 / 110 clauses 149878
Layer 1 g 56 = 112 - 113 / 112 clauses 149878
Layer 1 g 57 = 114 - 115 / 114 clauses 149878
Layer 1 g 58 = 116 - 117 / 116 clauses 149878
Layer 1 g 59 = 118 - 119 / 118 clauses 149878
Layer 1 g 60 = 120 - 121 / 120 clauses 149878
Layer 1 g 61 = 122 - 123 / 122 clauses 149878
Layer 1 g 62 = 124 - 125 / 124 clauses 149878
Layer 1 g 63 = 126 - 127 / 126 clauses 149878
Layer 1 g 64 = 128 - 129 / 128 clauses 149878
Layer 1 g 65 = 130 - 131 / 130 clauses 149878
Layer 1 g 66 = 132 - 133 / 132 clauses 149878
Layer 1 g 67 = 134 - 135 / 134 clauses 149878
Layer 1 g 68 = 136 - 137 / 136 clauses 149878
Layer 1 g 69 = 138 - 139 / 138 clauses 149878
Layer 1 g 70 = 140 - 141 / 140 clauses 149878
Layer 1 g 71 = 142 - 143 / 142 clauses 149878
Layer 1 g 72 = 144 - 145 / 144 clauses 149878
Layer 1 g 73 = 146 - 147 / 146 clauses 149878
Layer 1 g 74 = 148 - 149 / 148 clauses 149878
Layer 1 g 75 = 150 - 151 / 150 clauses 149878
Layer 1 g 76 = 152 - 153 / 152 clauses 149878
Layer 1 g 77 = 154 - 155 / 154 clauses 149878
Layer 1 g 78 = 156 - 157 / 156 clauses 149878
Layer 1 g 79 = 158 - 159 / 158 clauses 149878
Layer 1 g 80 = 160 - 161 / 160 clauses 149878
Layer 1 g 81 = 162 - 163 / 162 clauses 149878
Layer 1 g 82 = 164 - 165 / 164 clauses 149878
Layer 1 g 83 = 166 - 167 / 166 clauses 149878
Layer 1 g 84 = 168 - 169 / 168 clauses 149878
Layer 1 g 85 = 170 - 171 / 170 clauses 149878
Layer 1 g 86 = 172 - 173 / 172 clauses 149878
Layer 1 g 87 = 174 - 175 / 174 clauses 149878
Layer 1 g 88 = 176 - 177 / 176 clauses 149878
Layer 1 g 89 = 178 - 179 / 178 clauses 149878
Layer 1 g 90 = 180 - 181 / 180 clauses 149878
Layer 1 g 91 = 182 - 183 / 182 clauses 149878
Layer 1 g 92 = 184 - 185 / 184 clauses 149878
Layer 1 g 93 = 186 - 187 / 186 clauses 149878
Layer 1 g 94 = 188 - 189 / 188 clauses 149878
Layer 1 g 95 = 190 - 191 / 190 clauses 149878
Layer 1 g 96 = 192 - 193 / 192 clauses 149878
Layer 1 g 97 = 194 - 195 / 194 clauses 149878
Layer 1 g 98 = 196 - 197 / 196 clauses 149878
Layer 1 g 99 = 198 - 199 / 198 clauses 149878
Layer 1 g 100 = 200 - 201 / 200 clauses 149878
Layer 1 g 101 = 202 - 203 / 202 clauses 149878
Layer 1 g 102 = 204 - 205 / 204 clauses 149878
Layer 1 g 103 = 206 - 207 / 206 clauses 149878
Layer 1 g 104 = 208 - 209 / 208 clauses 149878
Layer 1 g 105 = 210 - 211 / 210 clauses 149878
Layer 1 g 106 = 212 - 213 / 212 clauses 149878
Layer 1 g 107 = 214 - 215 / 214 clauses 149878
Layer 1 g 108 = 216 - 217 / 216 clauses 149878
Layer 1 g 109 = 218 - 219 / 218 clauses 149878
Layer 1 g 110 = 220 - 221 / 220 clauses 149878
Layer 1 g 111 = 222 - 223 / 222 clauses 149878
Layer 1 g 112 = 224 - 225 / 224 clauses 149878
Layer 1 g 113 = 226 - 227 / 226 clauses 149878
Layer 1 g 114 = 228 - 229 / 228 clauses 149878
Layer 1 g 115 = 230 - 231 / 230 clauses 149878
Layer 1 g 116 = 232 - 233 / 232 clauses 149878
Layer 1 g 117 = 234 - 235 / 234 clauses 149878
Layer 1 g 118 = 236 - 237 / 236 clauses 149878
Layer 1 g 119 = 238 - 239 / 238 clauses 149878
Layer 1 g 120 = 240 - 241 / 240 clauses 149878
Layer 1 g 121 = 242 - 243 / 242 clauses 149878
Layer 1 g 122 = 244 - 245 / 244 clauses 149878
Layer 1 g 123 = 246 - 247 / 246 clauses 149878
Layer 1 g 124 = 248 - 249 / 248 clauses 149878
Layer 1 g 125 = 250 - 251 / 250 clauses 149878
Layer 1 g 126 = 252 - 253 / 252 clauses 149878
Layer 1 g 127 = 254 - 255 / 254 clauses 149878
Layer 1 g 128 = 256 - 257 / 256 clauses 149878
Layer 1 g 129 = 258 - 259 / 258 clauses 149878
Layer 1 g 130 = 260 - 261 / 260 clauses 149878
Layer 1 g 131 = 262 - 263 / 262 clauses 149878
Layer 1 g 132 = 264 - 265 / 264 clauses 149878
Layer 1 g 133 = 266 - 267 / 266 clauses 149878
Layer 1 g 134 = 268 - 269 / 268 clauses 149878
Layer 1 g 135 = 270 - 271 / 270 clauses 149878
Layer 1 g 136 = 272 - 273 / 272 clauses 149878
Layer 1 g 137 = 274 - 275 / 274 clauses 149878
Layer 1 g 138 = 276 - 277 / 276 clauses 149878
Layer 1 g 139 = 278 - 279 / 278 clauses 149878
Layer 1 g 140 = 280 - 281 / 280 clauses 149878
Layer 1 g 141 = 282 - 283 / 282 clauses 149878
Layer 1 g 142 = 284 - 285 / 284 clauses 149878
Layer 1 g 143 = 286 - 287 / 286 clauses 149878
Layer 1 g 144 = 288 - 289 / 288 clauses 149878
Layer 1 g 145 = 290 - 291 / 290 clauses 149878
Layer 1 g 146 = 292 - 293 / 292 clauses 149878
Layer 1 g 147 = 294 - 295 / 294 clauses 149878
Layer 1 g 148 = 296 - 297 / 296 clauses 149878
Layer 1 g 149 = 298 - 299 / 298 clauses 149878
Layer 1 g 150 = 300 - 301 / 300 clauses 149878
Layer 1 g 151 = 302 - 303 / 302 clauses 149878
Layer 1 g 152 = 304 - 305 / 304 clauses 149878
Layer 1 g 153 = 306 - 307 / 306 clauses 149878
Layer 1 g 154 = 308 - 309 / 308 clauses 149878
Layer 1 g 155 = 310 - 311 / 310 clauses 149878
Layer 1 g 156 = 312 - 313 / 312 clauses 149878
Layer 1 g 157 = 314 - 315 / 314 clauses 149878
Layer 1 g 158 = 316 - 317 / 316 clauses 149878
Layer 1 g 159 = 318 - 319 / 318 clauses 149878
Layer 1 g 160 = 320 - 321 / 320 clauses 149878
Layer 1 g 161 = 322 - 323 / 322 clauses 149878
Layer 1 g 162 = 324 - 325 / 324 clauses 149878
Layer 1 g 163 = 326 - 327 / 326 clauses 149878
Layer 1 g 164 = 328 - 329 / 328 clauses 149878
Layer 1 g 165 = 330 - 331 / 330 clauses 149878
Layer 1 g 166 = 332 - 333 / 332 clauses 149878
Layer 1 g 167 = 334 - 335 / 334 clauses 149878
Layer 1 g 168 = 336 - 337 / 336 clauses 149878
Layer 1 g 169 = 338 - 339 / 338 clauses 149878
Layer 1 g 170 = 340 - 341 / 340 clauses 149878
Layer 1 g 171 = 342 - 343 / 342 clauses 149878
Layer 1 g 172 = 344 - 345 / 344 clauses 149878
Layer 1 g 173 = 346 - 347 / 346 clauses 149878
Layer 1 g 174 = 348 - 349 / 348 clauses 149878
Layer 1 g 175 = 350 - 351 / 350 clauses 149878
Layer 1 g 176 = 352 - 353 / 352 clauses 149878
Layer 1 g 177 = 354 - 355 / 354 clauses 149878
Layer 1 g 178 = 356 - 357 / 356 clauses 149878
Layer 1 g 179 = 358 - 359 / 358 clauses 149878
Layer 1 g 180 = 360 - 361 / 360 clauses 149878
Layer 1 g 181 = 362 - 363 / 362 clauses 149878
Layer 1 g 182 = 364 - 365 / 364 clauses 149878
Layer 1 g 183 = 366 - 367 / 366 clauses 149878
Layer 1 g 184 = 368 - 369 / 368 clauses 149878
Layer 1 g 185 = 370 - 371 / 370 clauses 149878
Layer 1 g 186 = 372 - 373 / 372 clauses 149878
Layer 1 g 187 = 374 - 375 / 374 clauses 149878
Layer 1 g 188 = 376 - 377 / 376 clauses 149878
Layer 1 g 189 = 378 - 379 / 378 clauses 149878
Layer 1 g 190 = 380 - 381 / 380 clauses 149878
Layer 1 g 191 = 382 - 383 / 382 clauses 149878
Layer 1 g 192 = 384 - 385 / 384 clauses 149878
Layer 1 g 193 = 386 - 387 / 386 clauses 149878
Layer 1 g 194 = 388 - 389 / 388 clauses 149878
Layer 1 g 195 = 390 - 391 / 390 clauses 149878
Layer 1 g 196 = 392 - 393 / 392 clauses 149878
Layer 1 g 197 = 394 - 395 / 394 clauses 149878
Layer 1 g 198 = 396 - 397 / 396 clauses 149878
Layer 1 g 199 = 398 - 399 / 398 clauses 149878
Layer 1 g 200 = 400 - 401 / 400 clauses 149878
Layer 1 g 201 = 402 - 403 / 402 clauses 149878
Layer 1 g 202 = 404 - 405 / 404 clauses 149878
Layer 1 g 203 = 406 - 407 / 406 clauses 149878
Layer 1 g 204 = 408 - 409 / 408 clauses 149878
Layer 1 g 205 = 410 - 411 / 410 clauses 149878
Layer 1 g 206 = 412 - 413 / 412 clauses 149878
Layer 1 g 207 = 414 - 415 / 414 clauses 149878
Layer 1 g 208 = 416 - 417 / 416 clauses 149878
Layer 1 g 209 = 418 - 419 / 418 clauses 149878
Layer 1 g 210 = 420 - 421 / 420 clauses 149878
Layer 1 g 211 = 422 - 423 / 422 clauses 149878
Layer 1 g 212 = 424 - 425 / 424 clauses 149878
Layer 1 g 213 = 426 - 427 / 426 clauses 149878
Layer 1 g 214 = 428 - 429 / 428 clauses 149878
Layer 1 g 215 = 430 - 431 / 430 clauses 149878
Layer 1 g 216 = 432 - 433 / 432 clauses 149878
Layer 1 g 217 = 434 - 435 / 434 clauses 149878
Layer 1 g 218 = 436 - 437 / 436 clauses 149878
Layer 1 g 219 = 438 - 439 / 438 clauses 149878
Layer 1 g 220 = 440 - 441 / 440 clauses 149878
Layer 1 g 221 = 442 - 443 / 442 clauses 149878
Layer 1 g 222 = 444 - 445 / 444 clauses 149878
Layer 1 g 223 = 446 - 447 / 446 clauses 149878
Layer 1 g 224 = 448 - 449 / 448 clauses 149878
Layer 1 g 225 = 450 - 451 / 450 clauses 149878
Layer 1 g 226 = 452 - 453 / 452 clauses 149878
Layer 1 g 227 = 454 - 455 / 454 clauses 149878
Layer 1 g 228 = 456 - 457 / 456 clauses 149878
Layer 1 g 229 = 458 - 459 / 458 clauses 149878
Layer 1 g 230 = 460 - 461 / 460 clauses 149878
Layer 1 g 231 = 462 - 463 / 462 clauses 149878
Layer 1 g 232 = 464 - 465 / 464 clauses 149878
Layer 1 g 233 = 466 - 467 / 466 clauses 149878
Layer 1 g 234 = 468 - 469 / 468 clauses 149878
Layer 1 g 235 = 470 - 471 / 470 clauses 149878
Layer 1 g 236 = 472 - 473 / 472 clauses 149878
Layer 1 g 237 = 474 - 475 / 474 clauses 149878
Layer 1 g 238 = 476 - 477 / 476 clauses 149878
Layer 1 g 239 = 478 - 479 / 478 clauses 149878
Layer 1 g 240 = 480 - 481 / 480 clauses 149878
Layer 1 g 241 = 482 - 483 / 482 clauses 149878
Layer 1 g 242 = 484 - 485 / 484 clauses 149878
Layer 1 g 243 = 486 - 487 / 486 clauses 149878
Layer 1 g 244 = 488 - 489 / 488 clauses 149878
Layer 1 g 245 = 490 - 491 / 490 clauses 149878
Layer 1 g 246 = 492 - 493 / 492 clauses 149878
Layer 1 g 247 = 494 - 495 / 494 clauses 149878
Layer 1 g 248 = 496 - 497 / 496 clauses 149878
Layer 1 g 249 = 498 - 499 / 498 clauses 149878
Layer 1 g 250 = 500 - 501 / 500 clauses 149878
Layer 1 g 251 = 502 - 503 / 502 clauses 149878
Layer 1 g 252 = 504 - 505 / 504 clauses 149878
Layer 1 g 253 = 506 - 507 / 506 clauses 149878
Layer 1 g 254 = 508 - 509 / 508 clauses 149878
Layer 1 g 255 = 510 - 511 / 510 clauses 149878
Layer 1 g 256 = 512 - 513 / 512 clauses 149878
Layer 1 g 257 = 514 - 515 / 514 clauses 149878
Layer 1 g 258 = 516 - 517 / 516 clauses 149878
Layer 1 g 259 = 518 - 519 / 518 clauses 149878
Layer 1 g 260 = 520 - 521 / 520 clauses 149878
Layer 1 g 261 = 522 - 523 / 522 clauses 149878
Layer 1 g 262 = 524 - 525 / 524 clauses 149878
Layer 1 g 263 = 526 - 527 / 526 clauses 149878
Layer 1 g 264 = 528 - 529 / 528 clauses 149878
Layer 1 g 265 = 530 - 531 / 530 clauses 149878
Layer 1 g 266 = 532 - 533 / 532 clauses 149878
Layer 1 g 267 = 534 - 535 / 534 clauses 149878
Layer 1 g 268 = 536 - 537 / 536 clauses 149878
Layer 1 g 269 = 538 - 539 / 538 clauses 149878
Layer 1 g 270 = 540 - 541 / 540 clauses 149878
Layer 1 g 271 = 542 - 543 / 542 clauses 149878
Layer 1 g 272 = 544 - 545 / 544 clauses 149878
Layer 2 g 0 = 0 - 3 / 1 clauses 149878
Layer 2 g 1 = 4 - 7 / 5 clauses 149878
Layer 2 g 2 = 8 - 11 / 9 clauses 149878
Layer 2 g 3 = 12 - 15 / 13 clauses 149878
Layer 2 g 4 = 16 - 19 / 17 clauses 149878
Layer 2 g 5 = 20 - 23 / 21 clauses 149878
Layer 2 g 6 = 24 - 27 / 25 clauses 149878
Layer 2 g 7 = 28 - 31 / 29 clauses 149878
Layer 2 g 8 = 32 - 35 / 33 clauses 149878
Layer 2 g 9 = 36 - 39 / 37 clauses 149878
Layer 2 g 10 = 40 - 43 / 41 clauses 149878
Layer 2 g 11 = 44 - 47 / 45 clauses 149878
Layer 2 g 12 = 48 - 51 / 49 clauses 149878
Layer 2 g 13 = 52 - 55 / 53 clauses 149878
Layer 2 g 14 = 56 - 59 / 57 clauses 149878
Layer 2 g 15 = 60 - 63 / 61Still waiting ... running for 75273 will abort at 9223372036854769868
 clauses 149878
Layer 2 g 16 = 64 - 67 / 65 clauses 149878
Layer 2 g 17 = 68 - 71 / 69 clauses 149878
Layer 2 g 18 = 72 - 75 / 73 clauses 149878
Layer 2 g 19 = 76 - 79 / 77 clauses 149878
Layer 2 g 20 = 80 - 83 / 81 clauses 149878
Layer 2 g 21 = 84 - 87 / 85 clauses 149878
Layer 2 g 22 = 88 - 91 / 89 clauses 149878
Layer 2 g 23 = 92 - 95 / 93 clauses 149878
Layer 2 g 24 = 96 - 99 / 97 clauses 149878
Layer 2 g 25 = 100 - 103 / 101 clauses 149878
Layer 2 g 26 = 104 - 107 / 105 clauses 149878
Layer 2 g 27 = 108 - 111 / 109 clauses 149878
Layer 2 g 28 = 112 - 115 / 113 clauses 149878
Layer 2 g 29 = 116 - 119 / 117 clauses 149878
Layer 2 g 30 = 120 - 123 / 121 clauses 149878
Layer 2 g 31 = 124 - 127 / 125 clauses 149878
Layer 2 g 32 = 128 - 131 / 129 clauses 149878
Layer 2 g 33 = 132 - 135 / 133 clauses 149878
Layer 2 g 34 = 136 - 139 / 137 clauses 149878
Layer 2 g 35 = 140 - 143 / 141 clauses 149878
Layer 2 g 36 = 144 - 147 / 145 clauses 149878
Layer 2 g 37 = 148 - 151 / 149 clauses 149878
Layer 2 g 38 = 152 - 155 / 153 clauses 149878
Layer 2 g 39 = 156 - 159 / 157 clauses 149878
Layer 2 g 40 = 160 - 163 / 161 clauses 149878
Layer 2 g 41 = 164 - 167 / 165 clauses 149878
Layer 2 g 42 = 168 - 171 / 169 clauses 149878
Layer 2 g 43 = 172 - 175 / 173 clauses 149878
Layer 2 g 44 = 176 - 179 / 177 clauses 149878
Layer 2 g 45 = 180 - 183 / 181 clauses 149878
Layer 2 g 46 = 184 - 187 / 185 clauses 149878
Layer 2 g 47 = 188 - 191 / 189 clauses 149878
Layer 2 g 48 = 192 - 195 / 193 clauses 149878
Layer 2 g 49 = 196 - 199 / 197 clauses 149878
Layer 2 g 50 = 200 - 203 / 201 clauses 149878
Layer 2 g 51 = 204 - 207 / 205 clauses 149878
Layer 2 g 52 = 208 - 211 / 209 clauses 149878
Layer 2 g 53 = 212 - 215 / 213 clauses 149878
Layer 2 g 54 = 216 - 219 / 217 clauses 149878
Layer 2 g 55 = 220 - 223 / 221 clauses 149878
Layer 2 g 56 = 224 - 227 / 225 clauses 149878
Layer 2 g 57 = 228 - 231 / 229 clauses 149878
Layer 2 g 58 = 232 - 235 / 233 clauses 149878
Layer 2 g 59 = 236 - 239 / 237 clauses 149878
Layer 2 g 60 = 240 - 243 / 241 clauses 149878
Layer 2 g 61 = 244 - 247 / 245 clauses 149878
Layer 2 g 62 = 248 - 251 / 249 clauses 149878
Layer 2 g 63 = 252 - 255 / 253 clauses 149878
Layer 2 g 64 = 256 - 259 / 257 clauses 149878
Layer 2 g 65 = 260 - 263 / 261 clauses 149878
Layer 2 g 66 = 264 - 267 / 265 clauses 149878
Layer 2 g 67 = 268 - 271 / 269 clauses 149878
Layer 2 g 68 = 272 - 275 / 273 clauses 149878
Layer 2 g 69 = 276 - 279 / 277 clauses 149878
Layer 2 g 70 = 280 - 283 / 281 clauses 149878
Layer 2 g 71 = 284 - 287 / 285 clauses 149878
Layer 2 g 72 = 288 - 291 / 289 clauses 149878
Layer 2 g 73 = 292 - 295 / 293 clauses 149878
Layer 2 g 74 = 296 - 299 / 297 clauses 149878
Layer 2 g 75 = 300 - 303 / 301 clauses 149878
Layer 2 g 76 = 304 - 307 / 305 clauses 149878
Layer 2 g 77 = 308 - 311 / 309 clauses 149878
Layer 2 g 78 = 312 - 315 / 313 clauses 149878
Layer 2 g 79 = 316 - 319 / 317 clauses 149878
Layer 2 g 80 = 320 - 323 / 321 clauses 149878
Layer 2 g 81 = 324 - 327 / 325 clauses 149878
Layer 2 g 82 = 328 - 331 / 329 clauses 149878
Layer 2 g 83 = 332 - 335 / 333 clauses 149878
Layer 2 g 84 = 336 - 339 / 337 clauses 149878
Layer 2 g 85 = 340 - 343 / 341 clauses 149878
Layer 2 g 86 = 344 - 347 / 345 clauses 149878
Layer 2 g 87 = 348 - 351 / 349 clauses 149878
Layer 2 g 88 = 352 - 355 / 353 clauses 149878
Layer 2 g 89 = 356 - 359 / 357 clauses 149878
Layer 2 g 90 = 360 - 363 / 361 clauses 149878
Layer 2 g 91 = 364 - 367 / 365 clauses 149878
Layer 2 g 92 = 368 - 371 / 369 clauses 149878
Layer 2 g 93 = 372 - 375 / 373 clauses 149878
Layer 2 g 94 = 376 - 379 / 377 clauses 149878
Layer 2 g 95 = 380 - 383 / 381 clauses 149878
Layer 2 g 96 = 384 - 387 / 385 clauses 149878
Layer 2 g 97 = 388 - 391 / 389 clauses 149878
Layer 2 g 98 = 392 - 395 / 393 clauses 149878
Layer 2 g 99 = 396 - 399 / 397 clauses 149878
Layer 2 g 100 = 400 - 403 / 401 clauses 149878
Layer 2 g 101 = 404 - 407 / 405 clauses 149878
Layer 2 g 102 = 408 - 411 / 409 clauses 149878
Layer 2 g 103 = 412 - 415 / 413 clauses 149878
Layer 2 g 104 = 416 - 419 / 417 clauses 149878
Layer 2 g 105 = 420 - 423 / 421 clauses 149878
Layer 2 g 106 = 424 - 427 / 425 clauses 149878
Layer 2 g 107 = 428 - 431 / 429 clauses 149878
Layer 2 g 108 = 432 - 435 / 433 clauses 149878
Layer 2 g 109 = 436 - 439 / 437 clauses 149878
Layer 2 g 110 = 440 - 443 / 441 clauses 149878
Layer 2 g 111 = 444 - 447 / 445 clauses 149878
Layer 2 g 112 = 448 - 451 / 449 clauses 149878
Layer 2 g 113 = 452 - 455 / 453 clauses 149878
Layer 2 g 114 = 456 - 459 / 457 clauses 149878
Layer 2 g 115 = 460 - 463 / 461 clauses 149878
Layer 2 g 116 = 464 - 467 / 465 clauses 149878
Layer 2 g 117 = 468 - 471 / 469 clauses 149878
Layer 2 g 118 = 472 - 475 / 473 clauses 149878
Layer 2 g 119 = 476 - 479 / 477 clauses 149878
Layer 2 g 120 = 480 - 483 / 481 clauses 149878
Layer 2 g 121 = 484 - 487 / 485 clauses 149878
Layer 2 g 122 = 488 - 491 / 489 clauses 149878
Layer 2 g 123 = 492 - 495 / 493 clauses 149878
Layer 2 g 124 = 496 - 499 / 497 clauses 149878
Layer 2 g 125 = 500 - 503 / 501 clauses 149878
Layer 2 g 126 = 504 - 507 / 505 clauses 149878
Layer 2 g 127 = 508 - 511 / 509 clauses 149878
Layer 2 g 128 = 512 - 515 / 513 clauses 149878
Layer 2 g 129 = 516 - 519 / 517 clauses 149878
Layer 2 g 130 = 520 - 523 / 521 clauses 149878
Layer 2 g 131 = 524 - 527 / 525 clauses 149878
Layer 2 g 132 = 528 - 531 / 529 clauses 149878
Layer 2 g 133 = 532 - 535 / 533 clauses 149878
Layer 2 g 134 = 536 - 539 / 537 clauses 149878
Layer 2 g 135 = 540 - 543 / 541 clauses 149878
Layer 3 g 0 = 0 - 7 / 3 clauses 149878
Layer 3 g 1 = 8 - 15 / 11 clauses 149878
Layer 3 g 2 = 16 - 23 / 19 clauses 149878
Layer 3 g 3 = 24 - 31 / 27 clauses 149878
Layer 3 g 4 = 32 - 39 / 35 clauses 149878
Layer 3 g 5 = 40 - 47 / 43 clauses 149878
Layer 3 g 6 = 48 - 55 / 51 clauses 149878
Layer 3 g 7 = 56 - 63 / 59 clauses 149878
Layer 3 g 8 = 64 - 71 / 67 clauses 149878
Layer 3 g 9 = 72 - 79 / 75 clauses 149878
Layer 3 g 10 = 80 - 87 / 83 clauses 149878
Layer 3 g 11 = 88 - 95 / 91 clauses 149878
Layer 3 g 12 = 96 - 103 / 99 clauses 149878
Layer 3 g 13 = 104 - 111 / 107 clauses 149878
Layer 3 g 14 = 112 - 119 / 115 clauses 149878
Layer 3 g 15 = 120 - 127 / 123 clauses 149878
Layer 3 g 16 = 128 - 135 / 131 clauses 149878
Layer 3 g 17 = 136 - 143 / 139 clauses 149878
Layer 3 g 18 = 144 - 151 / 147 clauses 149878
Layer 3 g 19 = 152 - 159 / 155 clauses 149878
Layer 3 g 20 = 160 - 167 / 163 clauses 149878
Layer 3 g 21 = 168 - 175 / 171 clauses 149878
Layer 3 g 22 = 176 - 183 / 179 clauses 149878
Layer 3 g 23 = 184 - 191 / 187 clauses 149878
Layer 3 g 24 = 192 - 199 / 195 clauses 149878
Layer 3 g 25 = 200 - 207 / 203 clauses 149878
Layer 3 g 26 = 208 - 215 / 211 clauses 149878
Layer 3 g 27 = 216 - 223 / 219 clauses 149878
Layer 3 g 28 = 224 - 231 / 227 clauses 149878
Layer 3 g 29 = 232 - 239 / 235 clauses 149878
Layer 3 g 30 = 240 - 247 / 243 clauses 149878
Layer 3 g 31 = 248 - 255 / 251 clauses 149878
Layer 3 g 32 = 256 - 263 / 259 clauses 149878
Layer 3 g 33 = 264 - 271 / 267 clauses 149878
Layer 3 g 34 = 272 - 279 / 275 clauses 149878
Layer 3 g 35 = 280 - 287 / 283 clauses 149878
Layer 3 g 36 = 288 - 295 / 291 clauses 149878
Layer 3 g 37 = 296 - 303 / 299 clauses 149878
Layer 3 g 38 = 304 - 311 / 307 clauses 149878
Layer 3 g 39 = 312 - 319 / 315 clauses 149878
Layer 3 g 40 = 320 - 327 / 323 clauses 149878
Layer 3 g 41 = 328 - 335 / 331 clauses 149878
Layer 3 g 42 = 336 - 343 / 339 clauses 149878
Layer 3 g 43 = 344 - 351 / 347 clauses 149878
Layer 3 g 44 = 352 - 359 / 355 clauses 149878
Layer 3 g 45 = 360 - 367 / 363 clauses 149878
Layer 3 g 46 = 368 - 375 / 371 clauses 149878
Layer 3 g 47 = 376 - 383 / 379 clauses 149878
Layer 3 g 48 = 384 - 391 / 387 clauses 149878
Layer 3 g 49 = 392 - 399 / 395 clauses 149878
Layer 3 g 50 = 400 - 407 / 403 clauses 149878
Layer 3 g 51 = 408 - 415 / 411 clauses 149878
Layer 3 g 52 = 416 - 423 / 419 clauses 149878
Layer 3 g 53 = 424 - 431 / 427 clauses 149878
Layer 3 g 54 = 432 - 439 / 435 clauses 149878
Layer 3 g 55 = 440 - 447 / 443 clauses 149878
Layer 3 g 56 = 448 - 455 / 451 clauses 149878
Layer 3 g 57 = 456 - 463 / 459 clauses 149878
Layer 3 g 58 = 464 - 471 / 467 clauses 149878
Layer 3 g 59 = 472 - 479 / 475 clauses 149878
Layer 3 g 60 = 480 - 487 / 483 clauses 149878
Layer 3 g 61 = 488 - 495 / 491 clauses 149878
Layer 3 g 62 = 496 - 503 / 499 clauses 149878
Layer 3 g 63 = 504 - 511 / 507 clauses 149878
Layer 3 g 64 = 512 - 519 / 515 clauses 149878
Layer 3 g 65 = 520 - 527 / 523 clauses 149878
Layer 3 g 66 = 528 - 535 / 531 clauses 149878
Layer 3 g 67 = 536 - 543 / 539 clauses 149878
Layer 3 g 68 = 544 - 545 / 547 clauses 149878
Layer 4 g 0 = 0 - 15 / 7 clauses 149878
Layer 4 g 1 = 16 - 31 / 23 clauses 149878
Layer 4 g 2 = 32 - 47 / 39 clauses 149878
Layer 4 g 3 = 48 - 63 / 55 clauses 149878
Layer 4 g 4 = 64 - 79 / 71 clauses 149878
Layer 4 g 5 = 80 - 95 / 87 clauses 149878
Layer 4 g 6 = 96 - 111 / 103 clauses 149878
Layer 4 g 7 = 112 - 127 / 119 clauses 149878
Layer 4 g 8 = 128 - 143 / 135 clauses 149878
Layer 4 g 9 = 144 - 159 / 151 clauses 149878
Layer 4 g 10 = 160 - 175 / 167 clauses 149878
Layer 4 g 11 = 176 - 191 / 183 clauses 149878
Layer 4 g 12 = 192 - 207 / 199 clauses 149878
Layer 4 g 13 = 208 - 223 / 215 clauses 149878
Layer 4 g 14 = 224 - 239 / 231 clauses 149878
Layer 4 g 15 = 240 - 255 / 247 clauses 149878
Layer 4 g 16 = 256 - 271 / 263 clauses 149878
Layer 4 g 17 = 272 - 287 / 279 clauses 149878
Layer 4 g 18 = 288 - 303 / 295 clauses 149878
Layer 4 g 19 = 304 - 319 / 311 clauses 149878
Layer 4 g 20 = 320 - 335 / 327 clauses 149878
Layer 4 g 21 = 336 - 351 / 343 clauses 149878
Layer 4 g 22 = 352 - 367 / 359 clauses 149878
Layer 4 g 23 = 368 - 383 / 375 clauses 149878
Layer 4 g 24 = 384 - 399 / 391 clauses 149878
Layer 4 g 25 = 400 - 415 / 407 clauses 149878
Layer 4 g 26 = 416 - 431 / 423 clauses 149878
Layer 4 g 27 = 432 - 447 / 439 clauses 149878
Layer 4 g 28 = 448 - 463 / 455 clauses 149878
Layer 4 g 29 = 464 - 479 / 471 clauses 149878
Layer 4 g 30 = 480 - 495 / 487 clauses 149878
Layer 4 g 31 = 496 - 511 / 503 clauses 149878
Layer 4 g 32 = 512 - 527 / 519 clauses 149878
Layer 4 g 33 = 528 - 543 / 535 clauses 149878
Layer 4 g 34 = 544 - 545 / 551 clauses 149878
Layer 5 g 0 = 0 - 31 / 15 clauses 149878
Layer 5 g 1 = 32 - 63 / 47 clauses 149878
Layer 5 g 2 = 64 - 95 / 79 clauses 149878
Layer 5 g 3 = 96 - 127 / 111 clauses 149878
Layer 5 g 4 = 128 - 159 / 143 clauses 149878
Layer 5 g 5 = 160 - 191 / 175 clauses 149878
Layer 5 g 6 = 192 - 223 / 207 clauses 149878
Layer 5 g 7 = 224 - 255 / 239 clauses 149878
Layer 5 g 8 = 256 - 287 / 271 clauses 149878
Layer 5 g 9 = 288 - 319 / 303 clauses 149878
Layer 5 g 10 = 320 - 351 / 335 clauses 149878
Layer 5 g 11 = 352 - 383 / 367 clauses 149878
Layer 5 g 12 = 384 - 415 / 399 clauses 149878
Layer 5 g 13 = 416 - 447 / 431 clauses 149878
Layer 5 g 14 = 448 - 479 / 463 clauses 149878
Layer 5 g 15 = 480 - 511 / 495 clauses 149878
Layer 5 g 16 = 512 - 543 / 527 clauses 149878
Layer 5 g 17 = 544 - 545 / 559 clauses 149878
Layer 6 g 0 = 0 - 63 / 31 clauses 149878
Layer 6 g 1 = 64 - 127 / 95 clauses 149878
Layer 6 g 2 = 128 - 191 / 159 clauses 149878
Layer 6 g 3 = 192 - 255 / 223 clauses 149878
Layer 6 g 4 = 256 - 319 / 287 clauses 149878
Layer 6 g 5 = 320 - 383 / 351 clauses 149878
Layer 6 g 6 = 384 - 447 / 415 clauses 149878
Layer 6 g 7 = 448 - 511 / 479 clauses 149878
Layer 6 g 8 = 512 - 545 / 543 clauses 149878
Layer 7 g 0 = 0 - 127 / 63 clauses 149878
Layer 7 g 1 = 128 - 255 / 191 clauses 149878
Layer 7 g 2 = 256 - 383 / 319 clauses 149878
Layer 7 g 3 = 384 - 511 / 447 clauses 149878
Layer 7 g 4 = 512 - 545 / 575 clauses 149878
Layer 8 g 0 = 0 - 255 / 127 clauses 149878
Layer 8 g 1 = 256 - 511 / 383 clauses 149878
Layer 8 g 2 = 512 - 545 / 639 clauses 149878
Layer 9 g 0 = 0 - 511 / 255 clauses 149878
Layer 9 g 1 = 512 - 545 / 767 clauses 149878
Layer 10 g 0 = 0 - 545 / 511 clauses 149878
Invariant Clauses 111588

RUNWATCH_RESULT MEMOUT RETVAL 63232 TIME_SECS 170.454 MEMPEAK_KBS 8065216.512
