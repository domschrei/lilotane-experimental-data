PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p04.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p04.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p04.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounded planning graph ... done in 498ms.
	Number of Grounded Actions 2013
	Number of Grounded Literals 327
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounding ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 327
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 313ms.
	Number of Grounded Actions 1993
	Number of Grounded Literals 300
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 999
	number of tasks = 2992
	number of decomposition methods = 3590
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 999
	number of tasks = 2992
	number of decomposition methods = 3590
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 166ms.
	Number of Grounded Actions 1993
	Number of Grounded Literals 300
	number of abstract tasks = 999
	number of tasks = 2992
	number of decomposition methods = 3590
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 999
	number of tasks = 2992
	number of decomposition methods = 3590
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 999
	number of tasks = 2992
	number of decomposition methods = 3590
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 999
	number of tasks = 2992
	number of decomposition methods = 3590
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 999
	number of tasks = 2992
	number of decomposition methods = 3590
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Tasks 1993 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854769342ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854768971
done
initial PDT has 259 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 259 leafs
SHOP LEAFS 68
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 134550
Size 134543 at 0/1993
Size 133671 at 500/1993
Size 133647 at 1000/1993
Size 132989 at 1500/1993
Size 109883
Size 109855 at 0/1993
Size 108835 at 500/1993
Size 108825 at 1000/1993
Size 20427 at 1500/1993
Size 19315
Size 19048 at 0/1993
Size 11485 at 500/1993
Size 11481 at 1000/1993
Size 11476 at 1500/1993
Size 10538
Size 9811 at 0/1993
Size 2798 at 500/1993
Size 2798 at 1000/1993
Size 2759 at 1500/1993
Size 2718
Size 2718 at 0/1993
Size 2674 at 500/1993
Size 2674 at 1000/1993
Size 2674 at 1500/1993
Size 2674
Size 2664 at 0/1993
Size 2521 at 500/1993
Size 2521 at 1000/1993
Size 2521 at 1500/1993
Size 2521
Size 2521 at 0/1993
Size 2521 at 500/1993
Size 2521 at 1000/1993
Size 2521 at 1500/1993
Size 2521
Invariant time: 3.815
Number of invariants: 2521
Invariant Clauses 655460
NUMBER OF CLAUSES 1036711
NUMBER OF STATE CLAUSES 873188
NUMBER OF DECOMPOSITION CLAUSES 163523
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.23% 15.77% 0.0% 
NUMBER OF PATHS 259
Starting cryptominisat5.5
Setting starttime of solver to 1604493781785
Command exited with non-zero status 10
0.57 0.04

Time command gave the following runtime for the solver: 610
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_1;3;5,1324 1324 _m4_serve_shot_6
1;3;5 190 pathaction!3_1;3;5,707
Consider method^3_10;2;2,369 369 _m3_get_second_ingredient_3
10;2;2 127 pathaction!3_10;2;2,2716
Consider method^3_6;3;1,763 763 _m4_serve_shot_2
6;3;1 268 pathaction!3_6;3;1,752
Consider method^2_3;2,2982 2982 m3_get_second_ingredient
3;2 119 pathaction!2_3;2,691
Consider method^3_2;1;3,2956 2956 _m2_get_first_ingredient_4
2;1;3 112 pathaction!3_2;1;3,2100
Consider method^2_10;3,1040 1040 m4_serve_shot
10;3 1 pathaction!2_10;3,2623
Consider method^1_7,832 832 m0_do_cocktail_in_shot1
7 106 pathaction!1_7,2641
Consider method^4_1;3;1;0,3511 3511 m5_do_clean_shot
1;3;1;0 259 pathaction!4_1;3;1;0,507
Consider method^2_2;2,99 99 m3_get_second_ingredient
2;2 57 pathaction!2_2;2,688
Consider method^3_6;3;4,2736 2736 _m4_serve_shot_5
6;3;4 257 pathaction!3_6;3;4,660
Consider method^3_4;3;1,2461 2461 _m4_serve_shot_2
4;3;1 229 pathaction!3_4;3;1,743
Consider method^2_6;3,2656 2656 m4_serve_shot
6;3 9 pathaction!2_6;3,2626
Consider method^2_10;2,3461 3461 m3_get_second_ingredient
10;2 65 pathaction!2_10;2,679
Consider method^3_0;2;2,1716 1716 _m3_get_second_ingredient_3
0;2;2 285 pathaction!3_0;2;2,2663
Consider method^2_2;1,68 68 m2_get_first_ingredient
2;1 242 pathaction!2_2;1,16
Consider method^3_6;1;1,1665 1665 m7_do_fill_shot
6;1;1 323 pathaction!3_6;1;1,2945
Consider method^3_5;2;1,3078 3078 _m3_get_second_ingredient_2
5;2;1 158 pathaction!3_5;2;1,2837
Consider method^3_10;2;1,1504 1504 _m3_get_second_ingredient_2
10;2;1 124 pathaction!3_10;2;1,2766
Consider method^3_6;3;5,427 427 _m4_serve_shot_6
6;3;5 224 pathaction!3_6;3;5,727
Consider method^2_7;1,3526 3526 m2_get_first_ingredient
7;1 330 pathaction!2_7;1,1
Consider method^3_1;1;3,821 821 _m2_get_first_ingredient_4
1;1;3 170 pathaction!3_1;1;3,2104
Consider method^3_3;3;1,3149 3149 _m4_serve_shot_2
3;3;1 260 pathaction!3_3;3;1,753
Consider method^4_3;3;1;0,3286 3286 m5_do_clean_shot
3;3;1;0 11 pathaction!4_3;3;1;0,513
Consider method^3_6;2;1,2072 2072 _m3_get_second_ingredient_2
6;2;1 187 pathaction!3_6;2;1,2825
Consider method^3_2;3;4,2925 2925 _m4_serve_shot_5
2;3;4 102 pathaction!3_2;3;4,641
Consider method^3_1;3;4,1020 1020 _m4_serve_shot_5
1;3;4 35 pathaction!3_1;3;4,636
Consider method^1_3,640 640 m0_do_cocktail_in_shot1
3 120 pathaction!1_3,2635
Consider method^4_0;3;1;0,3043 3043 m5_do_clean_shot
0;3;1;0 209 pathaction!4_0;3;1;0,561
Consider method^3_6;1;2,459 459 _m2_get_first_ingredient_3
6;1;2 177 pathaction!3_6;1;2,1569
Consider method^3_9;2;2,2368 2368 _m3_get_second_ingredient_3
9;2;2 115 pathaction!3_9;2;2,2720
Consider method^3_0;3;5,3559 3559 _m4_serve_shot_6
0;3;5 288 pathaction!3_0;3;5,711
Consider method^3_0;1;3,3314 3314 _m2_get_first_ingredient_4
0;1;3 28 pathaction!3_0;1;3,2088
Consider method^1_5,2219 2219 m0_do_cocktail_in_shot1
5 309 pathaction!1_5,2638
Consider method^2_1;3,2160 2160 m4_serve_shot
1;3 59 pathaction!2_1;3,2628
Consider method^2_5;2,2649 2649 m3_get_second_ingredient
5;2 141 pathaction!2_5;2,689
Consider method^3_8;2;1,2989 2989 _m3_get_second_ingredient_2
8;2;1 174 pathaction!3_8;2;1,2783
Consider method^3_3;3;5,1423 1423 _m4_serve_shot_6
3;3;5 283 pathaction!3_3;3;5,730
Consider method^3_8;2;2,2935 2935 _m3_get_second_ingredient_3
8;2;2 169 pathaction!3_8;2;2,2679
Consider method^2_0;2,2554 2554 m3_get_second_ingredient
0;2 208 pathaction!2_0;2,680
Consider method^3_7;1;2,2133 2133 _m2_get_first_ingredient_3
7;1;2 74 pathaction!3_7;1;2,1594
Consider method^3_5;3;4,3052 3052 _m4_serve_shot_5
5;3;4 67 pathaction!3_5;3;4,666
Consider method^3_10;3;4,2833 2833 _m4_serve_shot_5
10;3;4 273 pathaction!3_10;3;4,656
Consider method^3_7;3;5,721 721 _m4_serve_shot_6
7;3;5 173 pathaction!3_7;3;5,708
Consider method^3_3;3;4,789 789 _m4_serve_shot_5
3;3;4 92 pathaction!3_3;3;4,638
Consider method^4_4;3;1;0,2281 2281 m6_do_clean_shot
4;3;1;0 314 pathaction!4_4;3;1;0,576
Consider method^3_0;3;4,1944 1944 _m4_serve_shot_5
0;3;4 108 pathaction!3_0;3;4,669
Consider method^3_4;1;2,2601 2601 _m2_get_first_ingredient_3
4;1;2 60 pathaction!3_4;1;2,1521
Consider method^2_8;2,473 473 m3_get_second_ingredient
8;2 191 pathaction!2_8;2,692
Consider method^4_7;3;1;0,2546 2546 m5_do_clean_shot
7;3;1;0 172 pathaction!4_7;3;1;0,321
Consider method^4_10;3;1;0,599 599 m5_do_clean_shot
10;3;1;0 79 pathaction!4_10;3;1;0,423
Consider method^3_5;1;1,2628 2628 m7_do_fill_shot
5;1;1 201 pathaction!3_5;1;1,2881
Consider method^3_3;1;2,931 931 _m2_get_first_ingredient_3
3;1;2 364 pathaction!3_3;1;2,1546
Consider method^3_0;2;1,3561 3561 _m3_get_second_ingredient_2
0;2;1 217 pathaction!3_0;2;1,2794
Consider method^3_7;1;1,193 193 m7_do_fill_shot
7;1;1 331 pathaction!3_7;1;1,2933
Consider method^0_,3589 3589 __top_1
 333 pathaction!0_,2991
Consider method^3_0;1;1,206 206 m8_do_fill_shot
0;1;1 326 pathaction!3_0;1;1,2933
Consider method^2_3;1,2625 2625 m2_get_first_ingredient
3;1 193 pathaction!2_3;1,19
Consider method^3_3;1;1,529 529 m8_do_fill_shot
3;1;1 227 pathaction!3_3;1;1,2863
Consider method^3_9;3;1,1789 1789 _m4_serve_shot_2
9;3;1 212 pathaction!3_9;3;1,745
Consider method^3_3;1;3,1611 1611 _m2_get_first_ingredient_4
3;1;3 153 pathaction!3_3;1;3,2018
Consider method^3_10;3;5,2606 2606 _m4_serve_shot_6
10;3;5 78 pathaction!3_10;3;5,739
Consider method^3_8;1;1,1162 1162 m7_do_fill_shot
8;1;1 90 pathaction!3_8;1;1,2892
Consider method^4_8;3;1;0,1499 1499 m5_do_clean_shot
8;3;1;0 350 pathaction!4_8;3;1;0,466
Consider method^3_8;3;5,3457 3457 _m4_serve_shot_6
8;3;5 95 pathaction!3_8;3;5,717
Consider method^2_5;3,1176 1176 m4_serve_shot
5;3 347 pathaction!2_5;3,2627
Consider method^3_9;3;4,2010 2010 _m4_serve_shot_5
9;3;4 255 pathaction!3_9;3;4,661
Consider method^2_6;2,2144 2144 m3_get_second_ingredient
6;2 17 pathaction!2_6;2,687
Consider method^2_11;0,2130 2130 _m1_do_cocktail_in_shot2_4
11;0 163 pathaction!2_11;0,2961
Consider method^1_1,911 911 m0_do_cocktail_in_shot1
1 32 pathaction!1_1,2639
Consider method^3_8;3;4,843 843 _m4_serve_shot_5
8;3;4 2 pathaction!3_8;3;4,642
Consider method^3_5;3;1,2910 2910 _m4_serve_shot_2
5;3;1 299 pathaction!3_5;3;1,750
Consider method^2_3;3,2812 2812 m4_serve_shot
3;3 96 pathaction!2_3;3,2624
Consider method^3_9;3;5,1125 1125 _m4_serve_shot_6
9;3;5 238 pathaction!3_9;3;5,742
Consider method^3_4;3;5,340 340 _m4_serve_shot_6
4;3;5 298 pathaction!3_4;3;5,741
Consider method^2_9;1,253 253 m2_get_first_ingredient
9;1 159 pathaction!2_9;1,10
Consider method^3_1;2;1,1566 1566 _m3_get_second_ingredient_2
1;2;1 55 pathaction!3_1;2;1,2788
Consider method^2_0;3,1637 1637 m4_serve_shot
0;3 48 pathaction!2_0;3,2629
Consider method^1_4,1331 1331 m0_do_cocktail_in_shot1
4 349 pathaction!1_4,2644
Consider method^3_10;1;3,1760 1760 _m2_get_first_ingredient_4
10;1;3 19 pathaction!3_10;1;3,2053
Consider method^3_1;2;2,1775 1775 _m3_get_second_ingredient_3
1;2;2 183 pathaction!3_1;2;2,2675
Consider method^3_7;2;2,1393 1393 _m3_get_second_ingredient_3
7;2;2 222 pathaction!3_7;2;2,2722
Consider method^3_9;1;1,2664 2664 m8_do_fill_shot
9;1;1 203 pathaction!3_9;1;1,2858
Consider method^2_7;2,648 648 m3_get_second_ingredient
7;2 274 pathaction!2_7;2,673
Consider method^3_10;1;2,1042 1042 _m2_get_first_ingredient_3
10;1;2 138 pathaction!3_10;1;2,1554
Consider method^4_6;3;1;0,749 749 m5_do_clean_shot
6;3;1;0 235 pathaction!4_6;3;1;0,566
Consider method^3_7;3;4,1772 1772 _m4_serve_shot_5
7;3;4 303 pathaction!3_7;3;4,652
Consider method^3_6;1;3,2956 2956 _m2_get_first_ingredient_4
6;1;3 206 pathaction!3_6;1;3,2100
Consider method^2_9;2,2642 2642 m3_get_second_ingredient
9;2 31 pathaction!2_9;2,682
Consider method^3_4;2;1,1942 1942 _m3_get_second_ingredient_2
4;2;1 244 pathaction!3_4;2;1,2838
Consider method^2_4;1,2270 2270 m2_get_first_ingredient
4;1 286 pathaction!2_4;1,9
Consider method^3_0;1;2,2133 2133 _m2_get_first_ingredient_3
0;1;2 87 pathaction!3_0;1;2,1594
Consider method^3_9;1;2,3219 3219 _m2_get_first_ingredient_3
9;1;2 24 pathaction!3_9;1;2,1574
Consider method^4_9;3;1;0,3431 3431 m6_do_clean_shot
9;3;1;0 308 pathaction!4_9;3;1;0,526
Consider method^3_1;1;1,1300 1300 m9_do_fill_shot
1;1;1 178 pathaction!3_1;1;1,2949
Consider method^3_10;1;1,987 987 m9_do_fill_shot
10;1;1 379 pathaction!3_10;1;1,2898
Consider method^3_4;3;4,2055 2055 _m4_serve_shot_5
4;3;4 343 pathaction!3_4;3;4,654
Consider method^4_2;3;1;0,386 386 m5_do_clean_shot
2;3;1;0 373 pathaction!4_2;3;1;0,396
Consider method^3_5;1;3,3156 3156 _m2_get_first_ingredient_4
5;1;3 293 pathaction!3_5;1;3,2036
Consider method^3_0;3;1,2868 2868 _m4_serve_shot_2
0;3;1 302 pathaction!3_0;3;1,744
Consider method^2_7;3,1976 1976 m4_serve_shot
7;3 256 pathaction!2_7;3,2630
Consider method^3_3;2;2,1469 1469 _m3_get_second_ingredient_3
3;2;2 44 pathaction!3_3;2;2,2707
Consider method^3_5;1;2,1973 1973 _m2_get_first_ingredient_3
5;1;2 352 pathaction!3_5;1;2,1518
Consider method^3_7;1;3,3314 3314 _m2_get_first_ingredient_4
7;1;3 354 pathaction!3_7;1;3,2088
Consider method^2_8;1,3096 3096 m2_get_first_ingredient
8;1 82 pathaction!2_8;1,20
Consider method^2_1;2,2452 2452 m3_get_second_ingredient
1;2 29 pathaction!2_1;2,686
Consider method^3_7;2;1,3078 3078 _m3_get_second_ingredient_2
7;2;1 296 pathaction!3_7;2;1,2837
Consider method^1_0,3136 3136 m0_do_cocktail_in_shot1
0 276 pathaction!1_0,2640
Consider method^3_7;3;1,2050 2050 _m4_serve_shot_2
7;3;1 166 pathaction!3_7;3;1,747
Consider method^2_0;1,510 510 m2_get_first_ingredient
0;1 342 pathaction!2_0;1,8
Consider method^3_8;3;1,469 469 _m4_serve_shot_2
8;3;1 297 pathaction!3_8;3;1,751
Consider method^1_9,1519 1519 m0_do_cocktail_in_shot1
9 341 pathaction!1_9,2642
Consider method^3_5;2;2,1393 1393 _m3_get_second_ingredient_3
5;2;2 23 pathaction!3_5;2;2,2722
Consider method^3_2;1;2,459 459 _m2_get_first_ingredient_3
2;1;2 121 pathaction!3_2;1;2,1569
Consider method^3_4;1;1,756 756 m8_do_fill_shot
4;1;1 310 pathaction!3_4;1;1,2871
Consider method^3_6;2;2,3403 3403 _m3_get_second_ingredient_3
6;2;2 372 pathaction!3_6;2;2,2747
Consider method^3_2;2;1,2276 2276 _m3_get_second_ingredient_2
2;2;1 345 pathaction!3_2;2;1,2773
Consider method^3_2;2;2,2156 2156 _m3_get_second_ingredient_3
2;2;2 306 pathaction!3_2;2;2,2671
Consider method^1_8,411 411 m0_do_cocktail_in_shot1
8 258 pathaction!1_8,2636
Consider method^3_1;1;2,157 157 _m2_get_first_ingredient_3
1;1;2 247 pathaction!3_1;1;2,1586
Consider method^2_6;1,1197 1197 m2_get_first_ingredient
6;1 340 pathaction!2_6;1,15
Consider method^2_1;1,3486 3486 m2_get_first_ingredient
1;1 316 pathaction!2_1;1,14
Consider method^3_9;1;3,2062 2062 _m2_get_first_ingredient_4
9;1;3 363 pathaction!3_9;1;3,2013
Consider method^3_10;3;1,1078 1078 _m4_serve_shot_2
10;3;1 52 pathaction!3_10;3;1,759
Consider method^2_5;1,2769 2769 m2_get_first_ingredient
5;1 105 pathaction!2_5;1,17
Consider method^3_9;2;1,1887 1887 _m3_get_second_ingredient_2
9;2;1 185 pathaction!3_9;2;1,2793
Consider method^2_2;3,2331 2331 m4_serve_shot
2;3 371 pathaction!2_2;3,2632
Consider method^2_10;1,1828 1828 m2_get_first_ingredient
10;1 205 pathaction!2_10;1,7
Consider method^1_10,154 154 m0_do_cocktail_in_shot1
10 50 pathaction!1_10,2634
Consider method^3_2;3;1,3133 3133 _m4_serve_shot_2
2;3;1 374 pathaction!3_2;3;1,764
Consider method^3_1;3;1,760 760 _m4_serve_shot_2
1;3;1 63 pathaction!3_1;3;1,757
Consider method^3_2;3;5,2606 2606 _m4_serve_shot_6
2;3;5 202 pathaction!3_2;3;5,739
Consider method^3_4;2;2,1166 1166 _m3_get_second_ingredient_3
4;2;2 125 pathaction!3_4;2;2,2652
Consider method^3_8;1;3,3148 3148 _m2_get_first_ingredient_4
8;1;3 300 pathaction!3_8;1;3,2047
Consider method^4_5;3;1;0,347 347 m5_do_clean_shot
5;3;1;0 136 pathaction!4_5;3;1;0,476
Consider method^2_4;2,2557 2557 m3_get_second_ingredient
4;2 313 pathaction!2_4;2,681
Consider method^3_3;2;1,171 171 _m3_get_second_ingredient_2
3;2;1 129 pathaction!3_3;2;1,2790
Consider method^3_2;1;1,2069 2069 m9_do_fill_shot
2;1;1 254 pathaction!3_2;1;1,2945
Consider method^2_8;3,525 525 m4_serve_shot
8;3 110 pathaction!2_8;3,2625
Consider method^2_9;3,3267 3267 m4_serve_shot
9;3 210 pathaction!2_9;3,2631
Consider method^3_8;1;2,723 723 _m2_get_first_ingredient_3
8;1;2 34 pathaction!3_8;1;2,1537
Consider method^2_4;3,113 113 m4_serve_shot
4;3 262 pathaction!2_4;3,2633
Consider method^3_4;1;3,1920 1920 _m2_get_first_ingredient_4
4;1;3 15 pathaction!3_4;1;3,2026
Consider method^1_2,145 145 m0_do_cocktail_in_shot1
2 338 pathaction!1_2,2643
Consider method^2_11;1,1270 1270 m9_do_fill_shot
11;1 269 pathaction!2_11;1,2933
Consider method^1_6,863 863 m0_do_cocktail_in_shot1
6 118 pathaction!1_6,2637
Consider method^1_11,3231 3231 m1_do_cocktail_in_shot2
11 216 pathaction!1_11,0
Consider method^3_5;3;5,1022 1022 _m4_serve_shot_6
5;3;5 161 pathaction!3_5;3;5,712


CHECKING primitive solution of length 233 ...
true 117 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 64 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot12;]
true 265 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser3,ingredient3;]
true 200 grasp[right,shot12;]
true 188 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 180 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1;]
true 61 clean-shot[shot12,ingredient3,right,left;]
true 145 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot12;]
true 30 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 107 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2;]
true 375 leave[right,shot12;]
true 181 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient2;]
true 327 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 357 nop[;]
true 97 grasp[right,shaker1;]
true 192 shake[cocktail4,ingredient3,ingredient2,shaker1,right,left;]
true 144 pour-shaker-to-shot[cocktail4,shot1,right,shaker1,l2,l1;]
true 236 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 280 clean-shaker[right,left,shaker1;]
true 251 leave[right,shaker1;]
true 362 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 211 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot12;]
true 41 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient2,dispenser1;]
true 279 grasp[left,shot12;]
true 27 clean-shot[shot12,ingredient2,left,right;]
true 353 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 160 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1;]
true 355 clean-shot[shot12,ingredient1,left,right;]
true 176 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,left,shot12;]
true 104 fill-shot[shot12,ingredient2,left,right,dispenser2;]
true 356 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,left,l1,l2;]
true 21 leave[left,shot12;]
true 73 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient2;]
true 39 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 218 nop[;]
true 101 grasp[left,shaker1;]
true 151 shake[cocktail5,ingredient1,ingredient2,shaker1,left,right;]
true 219 pour-shaker-to-shot[cocktail5,shot2,left,shaker1,l2,l1;]
true 36 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 207 clean-shaker[left,right,shaker1;]
true 228 leave[left,shaker1;]
true 287 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 335 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot12;]
true 164 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient2,dispenser1;]
true 277 grasp[right,shot12;]
true 58 clean-shot[shot12,ingredient2,right,left;]
true 284 fill-shot[shot12,ingredient1,right,left,dispenser1;]
true 271 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,right,l0,l1;]
true 215 clean-shot[shot12,ingredient1,right,left;]
true 230 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,right,shot12;]
true 123 fill-shot[shot12,ingredient4,right,left,dispenser4;]
true 26 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,right,l1,l2;]
true 369 leave[right,shot12;]
true 304 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4;]
true 56 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 162 nop[;]
true 332 grasp[right,shaker1;]
true 360 shake[cocktail10,ingredient1,ingredient4,shaker1,right,left;]
true 86 pour-shaker-to-shot[cocktail10,shot3,right,shaker1,l2,l1;]
true 245 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 243 clean-shaker[right,left,shaker1;]
true 199 leave[right,shaker1;]
true 91 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 366 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot13;]
true 319 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3;]
true 7 grasp[left,shot13;]
true 13 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 76 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 103 clean-shot[shot13,ingredient3,left,right;]
true 358 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,left,shot13;]
true 66 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 89 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 263 leave[left,shot13;]
true 329 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient1;]
true 318 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 322 nop[;]
true 47 grasp[right,shaker1;]
true 295 shake[cocktail8,ingredient3,ingredient1,shaker1,right,left;]
true 149 pour-shaker-to-shot[cocktail8,shot4,right,shaker1,l2,l1;]
true 70 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 130 clean-shaker[right,left,shaker1;]
true 378 leave[right,shaker1;]
true 237 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 292 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot5;]
true 359 __method_precondition_m8_do_fill_shot_8_precondition[shot5,dispenser2,ingredient2;]
true 253 grasp[right,shot5;]
true 264 fill-shot[shot5,ingredient2,right,left,dispenser2;]
true 250 pour-shot-to-clean-shaker[shot5,ingredient2,shaker1,right,l0,l1;]
true 240 clean-shot[shot5,ingredient2,right,left;]
true 328 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,right,shot5;]
true 346 fill-shot[shot5,ingredient1,right,left,dispenser1;]
true 175 pour-shot-to-used-shaker[shot5,ingredient1,shaker1,right,l1,l2;]
true 135 leave[right,shot5;]
true 43 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient1;]
true 241 __method_precondition_m6_do_clean_shot_6_precondition[shot5,right;]
true 336 grasp[right,shot5;]
true 49 clean-shot[shot5,ingredient1,right,left;]
true 301 leave[right,shot5;]
true 348 grasp[left,shaker1;]
true 225 shake[cocktail9,ingredient2,ingredient1,shaker1,left,right;]
true 20 pour-shaker-to-shot[cocktail9,shot5,left,shaker1,l2,l1;]
true 16 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 368 clean-shaker[left,right,shaker1;]
true 294 leave[left,shaker1;]
true 367 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 179 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot12;]
true 289 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient4,dispenser4;]
true 266 grasp[right,shot12;]
true 321 refill-shot[shot12,ingredient4,right,left,dispenser4;]
true 81 pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,right,l0,l1;]
true 8 clean-shot[shot12,ingredient4,right,left;]
true 4 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,right,shot12;]
true 33 fill-shot[shot12,ingredient1,right,left,dispenser1;]
true 80 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,right,l1,l2;]
true 83 leave[right,shot12;]
true 351 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1;]
true 261 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 234 nop[;]
true 213 grasp[right,shaker1;]
true 281 shake[cocktail6,ingredient4,ingredient1,shaker1,right,left;]
true 198 pour-shaker-to-shot[cocktail6,shot6,right,shaker1,l2,l1;]
true 128 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 111 clean-shaker[right,left,shaker1;]
true 140 leave[right,shaker1;]
true 171 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 311 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot12;]
true 142 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient1,dispenser1;]
true 186 grasp[right,shot12;]
true 114 refill-shot[shot12,ingredient1,right,left,dispenser1;]
true 168 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,right,l0,l1;]
true 12 clean-shot[shot12,ingredient1,right,left;]
true 146 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,right,shot12;]
true 134 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 339 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,right,l1,l2;]
true 195 leave[right,shot12;]
true 139 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient3;]
true 99 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 25 nop[;]
true 270 grasp[left,shaker1;]
true 156 shake[cocktail3,ingredient1,ingredient3,shaker1,left,right;]
true 116 pour-shaker-to-shot[cocktail3,shot7,left,shaker1,l2,l1;]
true 62 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 377 clean-shaker[left,right,shaker1;]
true 317 leave[left,shaker1;]
true 51 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 154 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot12;]
true 109 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient3,dispenser3;]
true 315 grasp[right,shot12;]
true 196 refill-shot[shot12,ingredient3,right,left,dispenser3;]
true 307 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1;]
true 126 clean-shot[shot12,ingredient3,right,left;]
true 305 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,right,shot12;]
true 10 fill-shot[shot12,ingredient1,right,left,dispenser1;]
true 204 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,right,l1,l2;]
true 194 leave[right,shot12;]
true 45 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1;]
true 54 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 232 nop[;]
true 231 grasp[left,shaker1;]
true 113 shake[cocktail1,ingredient3,ingredient1,shaker1,left,right;]
true 365 pour-shaker-to-shot[cocktail1,shot8,left,shaker1,l2,l1;]
true 182 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 38 clean-shaker[left,right,shaker1;]
true 68 leave[left,shaker1;]
true 5 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 40 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot13;]
true 148 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient1,dispenser1;]
true 46 grasp[right,shot13;]
true 290 refill-shot[shot13,ingredient1,right,left,dispenser1;]
true 325 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1;]
true 122 clean-shot[shot13,ingredient1,right,left;]
true 85 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,right,shot13;]
true 22 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 93 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,right,l1,l2;]
true 334 leave[right,shot13;]
true 131 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient4;]
true 71 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 376 nop[;]
true 0 grasp[left,shaker1;]
true 150 shake[cocktail7,ingredient1,ingredient4,shaker1,left,right;]
true 14 pour-shaker-to-shot[cocktail7,shot9,left,shaker1,l2,l1;]
true 167 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 320 clean-shaker[left,right,shaker1;]
true 3 leave[left,shaker1;]
true 184 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 252 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot10;]
true 155 __method_precondition_m8_do_fill_shot_8_precondition[shot10,dispenser4,ingredient4;]
true 37 grasp[right,shot10;]
true 282 fill-shot[shot10,ingredient4,right,left,dispenser4;]
true 18 pour-shot-to-clean-shaker[shot10,ingredient4,shaker1,right,l0,l1;]
true 100 clean-shot[shot10,ingredient4,right,left;]
true 75 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot10;]
true 272 fill-shot[shot10,ingredient3,right,left,dispenser3;]
true 233 pour-shot-to-used-shaker[shot10,ingredient3,shaker1,right,l1,l2;]
true 42 leave[right,shot10;]
true 94 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 248 __method_precondition_m6_do_clean_shot_6_precondition[shot10,left;]
true 246 grasp[left,shot10;]
true 6 clean-shot[shot10,ingredient3,left,right;]
true 361 leave[left,shot10;]
true 220 grasp[right,shaker1;]
true 278 shake[cocktail2,ingredient4,ingredient3,shaker1,right,left;]
true 239 pour-shaker-to-shot[cocktail2,shot10,right,shaker1,l2,l1;]
true 275 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 267 clean-shaker[right,left,shaker1;]
true 214 leave[right,shaker1;]
true 189 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 221 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot13;]
true 53 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient4,dispenser1;]
true 143 grasp[left,shot13;]
true 69 clean-shot[shot13,ingredient4,left,right;]
true 324 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 337 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 312 clean-shot[shot13,ingredient1,left,right;]
true 157 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot13;]
true 88 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 226 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2;]
true 197 leave[left,shot13;]
true 147 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4;]
true 77 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 133 nop[;]
true 249 grasp[right,shaker1;]
true 344 shake[cocktail10,ingredient1,ingredient4,shaker1,right,left;]
true 98 pour-shaker-to-shot[cocktail10,shot11,right,shaker1,l2,l1;]
true 132 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 291 clean-shaker[right,left,shaker1;]
true 152 leave[right,shaker1;]
true 137 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 165 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient1,dispenser3;]
true 72 grasp[right,shot12;]
true 84 clean-shot[shot12,ingredient1,right,left;]
true 370 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 223 leave[right,shot12;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 4000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 6000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 8000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 10000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 12000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 14000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 16000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 18000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 20000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 22000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 24000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 26000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 28000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 30000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 32000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 34000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 36000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 38000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 40000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 42000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 44000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 46000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 48000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 50000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 52000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 54000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 56000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 58000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 60000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 62000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 64000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 66000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 68000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 70000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 72000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 74000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 76000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 78000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 80000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 82000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 84000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 86000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 88000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 90000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 92000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 94000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 96000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 98000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 100000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 102000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 104000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 106000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 108000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 110000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 112000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 114000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 116000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 118000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 120000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 122000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 124000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 126000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 128000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 130000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 132000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 134000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 136000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 138000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 140000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 142000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 144000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 146000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 148000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 150000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 152000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 154000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 156000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 158000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 160000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 162000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 164000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 166000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 168000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 170000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 172000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 174000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 176000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 178000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 180000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 182000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 184000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 186000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 188000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 190000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 192000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 194000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 196000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 198000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 200000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 202000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 204000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 206000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 208000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 210000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 212000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 214000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 216000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 218000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 220000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 222000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 224000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 226000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 228000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 230000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 232000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 234000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 236000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 238000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 240000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 242000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 244000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 246000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 248000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 250000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 126
ICAPS: 252000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 127
ICAPS: 254000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 128
ICAPS: 256000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 129
ICAPS: 258000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 130
ICAPS: 260000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 131
ICAPS: 262000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 132
ICAPS: 264000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 133
ICAPS: 266000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 134
ICAPS: 268000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 135
ICAPS: 270000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 136
ICAPS: 272000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 137
ICAPS: 274000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 138
ICAPS: 276000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 139
ICAPS: 278000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 140
ICAPS: 280000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 141
ICAPS: 282000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 142
ICAPS: 284000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 143
ICAPS: 286000
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.061 MEMPEAK_KBS 600655.872
