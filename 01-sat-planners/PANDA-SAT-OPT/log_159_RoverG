PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/RoverG/domain.hddl instances/RoverG/p07.hddl"


Planner Configuration
=====================
Domain: instances/RoverG/domain.hddl
Problem: instances/RoverG/p07.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p07.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 26
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 31
Compiling negative preconditions ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 31
Compiling split parameters ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 31
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 31
Grounded planning graph ... done in 360ms.
	Number of Grounded Actions 1168
	Number of Grounded Literals 629
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 31
Two Way TDG ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 31
Grounding ... done.
	number of abstract tasks = 409
	number of tasks = 1485
	number of decomposition methods = 1445
	number of predicates = 1031
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 409
	number of tasks = 1485
	number of decomposition methods = 1445
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 76ms.
	Number of Grounded Actions 1076
	Number of Grounded Literals 100
	number of abstract tasks = 409
	number of tasks = 1485
	number of decomposition methods = 1445
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 409
	number of tasks = 1485
	number of decomposition methods = 1445
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 410
	number of tasks = 1486
	number of decomposition methods = 1446
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 410
	number of tasks = 1486
	number of decomposition methods = 1446
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 49ms.
	Number of Grounded Actions 1076
	Number of Grounded Literals 100
	number of abstract tasks = 410
	number of tasks = 1486
	number of decomposition methods = 1446
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 410
	number of tasks = 1486
	number of decomposition methods = 1446
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 410
	number of tasks = 1486
	number of decomposition methods = 1446
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 410
	number of tasks = 1486
	number of decomposition methods = 1446
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 410
	number of tasks = 1486
	number of decomposition methods = 1446
	number of predicates = 100
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 775
	number of epsilon methods = 0
	number of primitive tasks = 1076
	number of constants = 0
Tasks 1076 - 210
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771409ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854771285
done
initial PDT has 156 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 110 leafs
SHOP LEAFS 62
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 14850
Size 14850 at 0/1076
Size 13775 at 500/1076
Size 5298 at 1000/1076
Size 3475
Size 3475 at 0/1076
Size 3191 at 500/1076
Size 807 at 1000/1076
Size 645
Size 645 at 0/1076
Size 403 at 500/1076
Size 243 at 1000/1076
Size 238
Size 238 at 0/1076
Size 232 at 500/1076
Size 223 at 1000/1076
Size 223
Size 223 at 0/1076
Size 223 at 500/1076
Size 223 at 1000/1076
Size 223
Invariant time: 0.315
Number of invariants: 223
Invariant Clauses 24753
NUMBER OF CLAUSES 88496
NUMBER OF STATE CLAUSES 49104
NUMBER OF DECOMPOSITION CLAUSES 39392
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 55.49% 44.51% 0.0% 
NUMBER OF PATHS 110
Starting cryptominisat5.5
Setting starttime of solver to 1604520741899
Command exited with non-zero status 20
0.03 0.01

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854769183
done
initial PDT has 229 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 175 leafs
SHOP LEAFS 70
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 1ms for 0 clauses
Invariant Clauses 39248
NUMBER OF CLAUSES 620715
NUMBER OF STATE CLAUSES 81071
NUMBER OF DECOMPOSITION CLAUSES 539644
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 13.06% 86.94% 0.0% 
NUMBER OF PATHS 175
Starting cryptominisat5.5
Setting starttime of solver to 1604520744255
Command exited with non-zero status 20
0.24 0.01

Time command gave the following runtime for the solver: 250
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854766650
done
initial PDT has 301 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 247 leafs
SHOP LEAFS 88
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 55304
NUMBER OF CLAUSES 1628192
NUMBER OF STATE CLAUSES 118287
NUMBER OF DECOMPOSITION CLAUSES 1509905
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 7.26% 92.74% 0.0% 
NUMBER OF PATHS 247
Starting cryptominisat5.5
Setting starttime of solver to 1604520747992
Command exited with non-zero status 10
0.79 0.04

Time command gave the following runtime for the solver: 830
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_2;4,229 229 m11_send_rock_data
2;4 199 pathaction!2_2;4,9
Consider method^3_1;4;1,167 167 m1_do_navigate1
1;4;1 174 pathaction!3_1;4;1,806
Consider method^1_2,293 293 m10_get_rock_data
2 23 pathaction!1_2,644
Consider method^2_0;4,725 725 m8_send_soil_data
0;4 122 pathaction!2_0;4,988
Consider method^3_7;4;1,255 255 m1_do_navigate1
7;4;1 80 pathaction!3_7;4;1,786
Consider method^3_7;2;2,475 475 m4_do_navigate2
7;2;2 169 pathaction!3_7;2;2,1385
Consider method^2_7;4,1119 1119 m14_send_image_data
7;4 222 pathaction!2_7;4,1473
Consider method^3_3;1;2,1107 1107 m3_do_navigate2
3;1;2 72 pathaction!3_3;1;2,1324
Consider method^2_3;4,126 126 m11_send_rock_data
3;4 219 pathaction!2_3;4,10
Consider method^4_1;1;2;3,48 48 m4_do_navigate2
1;1;2;3 16 pathaction!4_1;1;2;3,1137
Consider method^4_7;2;2;3,1150 1150 m4_do_navigate2
7;2;2;3 115 pathaction!4_7;2;2;3,1200
Consider method^4_0;1;2;3,579 579 m3_do_navigate2
0;1;2;3 71 pathaction!4_0;1;2;3,1374
Consider method^4_2;1;2;3,104 104 m3_do_navigate2
2;1;2;3 15 pathaction!4_2;1;2;3,1312
Consider method^3_6;2;2,1429 1429 m3_do_navigate2
6;2;2 13 pathaction!3_6;2;2,1248
Consider method^2_2;1,777 777 m1_do_navigate1
2;1 154 pathaction!2_2;1,806
Consider method^2_6;2,1089 1089 m1_do_navigate1
6;2 226 pathaction!2_6;2,807
Consider method^5_3;4;1;2;3,840 840 m3_do_navigate2
3;4;1;2;3 18 pathaction!5_3;4;1;2;3,1211
Consider method^3_6;4;1,866 866 m1_do_navigate1
6;4;1 48 pathaction!3_6;4;1,807
Consider method^5_4;4;1;2;3,840 840 m3_do_navigate2
4;4;1;2;3 220 pathaction!5_4;4;1;2;3,1211
Consider method^3_7;1;1,819 819 m1_do_navigate1
7;1;1 126 pathaction!3_7;1;1,788
Consider method^3_4;4;1,222 222 m1_do_navigate1
4;4;1 32 pathaction!3_4;4;1,817
Consider method^2_3;2,1396 1396 m6_empty_store
3;2 46 pathaction!2_3;2,991
Consider method^5_1;1;2;3;3,1300 1300 m3_do_navigate2
1;1;2;3;3 135 pathaction!5_1;1;2;3;3,1282
Consider method^1_0,1435 1435 m7_get_soil_data
0 75 pathaction!1_0,146
Consider method^4_7;1;1;2,1294 1294 m3_do_navigate2
7;1;1;2 205 pathaction!4_7;1;1;2,1268
Consider method^2_6;4,1049 1049 m14_send_image_data
6;4 157 pathaction!2_6;4,1474
Consider method^4_4;4;1;2,0 0 m4_do_navigate2
4;4;1;2 253 pathaction!4_4;4;1;2,1419
Consider method^4_6;4;1;2,546 546 m2_do_navigate2
6;4;1;2 76 pathaction!4_6;4;1;2,1278
Consider method^4_2;4;1;2,687 687 m4_do_navigate2
2;4;1;2 3 pathaction!4_2;4;1;2,1188
Consider method^3_5;1;1,178 178 m1_do_navigate1
5;1;1 231 pathaction!3_5;1;1,811
Consider method^3_6;1;1,292 292 m1_do_navigate1
6;1;1 187 pathaction!3_6;1;1,795
Consider method^5_7;2;2;3;3,1312 1312 m3_do_navigate2
7;2;2;3;3 274 pathaction!5_7;2;2;3;3,1453
Consider method^2_5;1,480 480 m15_do_calibrate
5;1 263 pathaction!2_5;1,189
Consider method^1_1,1289 1289 m7_get_soil_data
1 264 pathaction!1_1,145
Consider method^2_1;4,82 82 m8_send_soil_data
1;4 167 pathaction!2_1;4,987
Consider method^2_3;1,961 961 m1_do_navigate1
3;1 8 pathaction!2_3;1,800
Consider method^3_1;1;2,1411 1411 m4_do_navigate2
1;1;2 19 pathaction!3_1;1;2,1202
Consider method^5_1;4;1;2;3,104 104 m3_do_navigate2
1;4;1;2;3 194 pathaction!5_1;4;1;2;3,1312
Consider method^2_0;2,1011 1011 m5_empty_store
0;2 9 pathaction!2_0;2,991
Consider method^2_4;2,1396 1396 m6_empty_store
4;2 235 pathaction!2_4;2,991
Consider method^2_7;2,849 849 m1_do_navigate1
7;2 230 pathaction!2_7;2,786
Consider method^3_4;1;2,0 0 m4_do_navigate2
4;1;2 133 pathaction!3_4;1;2,1419
Consider method^2_4;4,1186 1186 m11_send_rock_data
4;4 147 pathaction!2_4;4,8
Consider method^4_5;1;1;2,1245 1245 m4_do_navigate2
5;1;1;2 5 pathaction!4_5;1;1;2,1331
Consider method^3_3;4;1,831 831 m1_do_navigate1
3;4;1 242 pathaction!3_3;4;1,817
Consider method^2_5;4,1024 1024 m14_send_image_data
5;4 12 pathaction!2_5;4,1470
Consider method^3_2;4;1,777 777 m1_do_navigate1
2;4;1 31 pathaction!3_2;4;1,806
Consider method^5_5;4;1;2;3,393 393 m3_do_navigate2
5;4;1;2;3 0 pathaction!5_5;4;1;2;3,1327
Consider method^2_4;1,222 222 m1_do_navigate1
4;1 82 pathaction!2_4;1,817
Consider method^4_3;4;1;2,1134 1134 m4_do_navigate2
3;4;1;2 164 pathaction!4_3;4;1;2,1432
Consider method^2_1;2,1396 1396 m6_empty_store
1;2 73 pathaction!2_1;2,991
Consider method^2_7;1,524 524 m15_do_calibrate
7;1 269 pathaction!2_7;1,192
Consider method^3_2;1;2,687 687 m4_do_navigate2
2;1;2 148 pathaction!3_2;1;2,1188
Consider method^4_7;4;1;2,345 345 m4_do_navigate2
7;4;1;2 20 pathaction!4_7;4;1;2,1277
Consider method^4_6;1;1;2,1054 1054 m2_do_navigate2
6;1;1;2 155 pathaction!4_6;1;1;2,1190
Consider method^5_5;1;1;2;3,279 279 m3_do_navigate2
5;1;1;2;3 61 pathaction!5_5;1;1;2;3,1416
Consider method^5_2;4;1;2;3,104 104 m3_do_navigate2
2;4;1;2;3 30 pathaction!5_2;4;1;2;3,1312
Consider method^3_5;4;1,92 92 m1_do_navigate1
5;4;1 127 pathaction!3_5;4;1,795
Consider method^1_7,851 851 m13_get_image_data
7 197 pathaction!1_7,862
Consider method^4_5;4;1;2,128 128 m4_do_navigate2
5;4;1;2 268 pathaction!4_5;4;1;2,1150
Consider method^5_7;4;1;2;3,1312 1312 m3_do_navigate2
7;4;1;2;3 172 pathaction!5_7;4;1;2;3,1453
Consider method^1_5,1144 1144 m13_get_image_data
5 145 pathaction!1_5,860
Consider method^2_6;1,762 762 m15_do_calibrate
6;1 218 pathaction!2_6;1,189
Consider method^2_1;1,423 423 m1_do_navigate1
1;1 179 pathaction!2_1;1,788
Consider method^2_2;2,1396 1396 m6_empty_store
2;2 128 pathaction!2_2;2,991
Consider method^0_,1445 1445 __top_1
 142 pathaction!0_,1485
Consider method^2_5;2,1282 1282 m0_do_navigate1
5;2 271 pathaction!2_5;2,811
Consider method^4_4;1;2;3,840 840 m3_do_navigate2
4;1;2;3 204 pathaction!4_4;1;2;3,1211
Consider method^1_4,1354 1354 m10_get_rock_data
4 217 pathaction!1_4,643
Consider method^3_0;4;1,1373 1373 m0_do_navigate1
0;4;1 136 pathaction!3_0;4;1,805
Consider method^1_6,881 881 m13_get_image_data
6 33 pathaction!1_6,861
Consider method^2_0;1,320 320 m1_do_navigate1
0;1 24 pathaction!2_0;1,805
Consider method^3_0;1;2,1040 1040 m4_do_navigate2
0;1;2 56 pathaction!3_0;1;2,1298
Consider method^1_3,944 944 m10_get_rock_data
3 267 pathaction!1_3,642
Consider method^4_1;4;1;2,887 887 m4_do_navigate2
1;4;1;2 64 pathaction!4_1;4;1;2,1236


CHECKING primitive solution of length 193 ...
true 11 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 41 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint4;]
true 186 visit[waypoint4;]
true 243 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint4,waypoint3,waypoint0;]
true 118 navigate[rover1,waypoint4,waypoint0;]
true 94 visit[waypoint0;]
true 124 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint0,waypoint3;]
true 214 navigate[rover1,waypoint0,waypoint3;]
true 79 unvisit[waypoint0;]
true 139 unvisit[waypoint4;]
true 201 __method_precondition_m5_empty_store_5_precondition[rover1store;]
true 160 nop[;]
true 87 sample_soil[rover1,rover1store,waypoint3;]
true 27 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint7,waypoint3;]
true 195 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint3;]
true 265 nop[;]
true 212 communicate_soil_data1[rover1,general,waypoint3,waypoint3,waypoint7;]
true 227 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 63 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint3;]
true 161 visit[waypoint3;]
true 150 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint3,waypoint6,waypoint0;]
true 233 navigate[rover1,waypoint3,waypoint0;]
true 93 visit[waypoint0;]
true 134 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint0,waypoint6,waypoint4;]
true 257 navigate[rover1,waypoint0,waypoint4;]
true 14 visit[waypoint4;]
true 180 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint4,waypoint6;]
true 200 navigate[rover1,waypoint4,waypoint6;]
true 185 unvisit[waypoint4;]
true 237 unvisit[waypoint0;]
true 120 unvisit[waypoint3;]
true 258 __method_precondition_m6_empty_store_6_precondition[rover1store;]
true 112 drop[rover1,rover1store;]
true 234 sample_soil[rover1,rover1store,waypoint6;]
true 22 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint7,waypoint5;]
true 58 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint6;]
true 86 visit[waypoint6;]
true 140 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint6,waypoint5,waypoint4;]
true 47 navigate[rover1,waypoint6,waypoint4;]
true 113 visit[waypoint4;]
true 163 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint4,waypoint5;]
true 35 navigate[rover1,waypoint4,waypoint5;]
true 165 unvisit[waypoint4;]
true 89 unvisit[waypoint6;]
true 162 communicate_soil_data1[rover1,general,waypoint6,waypoint5,waypoint7;]
true 203 __method_precondition_m10_get_rock_data_10_precondition[rover1store,rover1;]
true 158 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint5;]
true 273 visit[waypoint5;]
true 168 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint5,waypoint5,waypoint4;]
true 207 navigate[rover1,waypoint5,waypoint4;]
true 232 visit[waypoint4;]
true 153 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint4,waypoint5;]
true 99 navigate[rover1,waypoint4,waypoint5;]
true 189 unvisit[waypoint4;]
true 119 unvisit[waypoint5;]
true 223 __method_precondition_m6_empty_store_6_precondition[rover1store;]
true 131 drop[rover1,rover1store;]
true 59 sample_rock[rover1,rover1store,waypoint5;]
true 278 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint7,waypoint5;]
true 144 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint5;]
true 183 visit[waypoint5;]
true 206 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint5,waypoint5,waypoint4;]
true 108 navigate[rover1,waypoint5,waypoint4;]
true 81 visit[waypoint4;]
true 90 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint4,waypoint5;]
true 156 navigate[rover1,waypoint4,waypoint5;]
true 248 unvisit[waypoint4;]
true 228 unvisit[waypoint5;]
true 52 communicate_rock_data1[rover1,general,waypoint5,waypoint5,waypoint7;]
true 55 __method_precondition_m10_get_rock_data_10_precondition[rover1store,rover1;]
true 129 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint5;]
true 143 visit[waypoint5;]
true 251 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint5,waypoint4;]
true 125 navigate[rover1,waypoint5,waypoint4;]
true 211 unvisit[waypoint5;]
true 101 __method_precondition_m6_empty_store_6_precondition[rover1store;]
true 166 drop[rover1,rover1store;]
true 247 sample_rock[rover1,rover1store,waypoint4;]
true 261 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint7,waypoint8;]
true 77 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint4;]
true 36 visit[waypoint4;]
true 270 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint4,waypoint8,waypoint6;]
true 272 navigate[rover1,waypoint4,waypoint6;]
true 225 visit[waypoint6;]
true 208 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint6,waypoint8;]
true 260 navigate[rover1,waypoint6,waypoint8;]
true 151 unvisit[waypoint6;]
true 196 unvisit[waypoint4;]
true 7 communicate_rock_data1[rover1,general,waypoint4,waypoint8,waypoint7;]
true 152 __method_precondition_m10_get_rock_data_10_precondition[rover1store,rover1;]
true 229 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint8;]
true 106 visit[waypoint8;]
true 88 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint8,waypoint8,waypoint6;]
true 21 navigate[rover1,waypoint8,waypoint6;]
true 175 visit[waypoint6;]
true 176 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint6,waypoint8;]
true 70 navigate[rover1,waypoint6,waypoint8;]
true 116 unvisit[waypoint6;]
true 85 unvisit[waypoint8;]
true 40 __method_precondition_m6_empty_store_6_precondition[rover1store;]
true 39 drop[rover1,rover1store;]
true 190 sample_rock[rover1,rover1store,waypoint8;]
true 43 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint7,waypoint8;]
true 51 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint8;]
true 98 visit[waypoint8;]
true 191 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint8,waypoint8,waypoint6;]
true 182 navigate[rover1,waypoint8,waypoint6;]
true 92 visit[waypoint6;]
true 239 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint6,waypoint8;]
true 215 navigate[rover1,waypoint6,waypoint8;]
true 224 unvisit[waypoint6;]
true 241 unvisit[waypoint8;]
true 130 communicate_rock_data1[rover1,general,waypoint8,waypoint8,waypoint7;]
true 53 __method_precondition_m13_get_image_data_13_precondition[objective0,rover3,camera0,waypoint4,colour;]
true 103 __method_precondition_m15_do_calibrate_15_precondition[camera0,objective2,waypoint4;]
true 110 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint2;]
true 83 visit[waypoint2;]
true 149 __method_precondition_m4_do_navigate2_4_precondition[rover3,waypoint2,waypoint4,waypoint1;]
true 146 navigate[rover3,waypoint2,waypoint1;]
true 91 visit[waypoint1;]
true 84 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint1,waypoint4;]
true 246 navigate[rover3,waypoint1,waypoint4;]
true 65 unvisit[waypoint1;]
true 254 unvisit[waypoint2;]
true 171 calibrate[rover3,camera0,objective2,waypoint4;]
true 178 __method_precondition_m0_do_navigate1_0_precondition[rover3,waypoint4;]
true 74 nop[;]
true 10 take_image[rover3,waypoint4,objective0,camera0,colour;]
true 2 __method_precondition_m14_send_image_data_14_precondition[general,waypoint7,waypoint5;]
true 78 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint4;]
true 60 visit[waypoint4;]
true 210 __method_precondition_m4_do_navigate2_4_precondition[rover3,waypoint4,waypoint5,waypoint1;]
true 42 navigate[rover3,waypoint4,waypoint1;]
true 159 visit[waypoint1;]
true 6 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint1,waypoint5;]
true 141 navigate[rover3,waypoint1,waypoint5;]
true 216 unvisit[waypoint1;]
true 4 unvisit[waypoint4;]
true 249 communicate_image_data[rover3,general,objective0,colour,waypoint5,waypoint7;]
true 117 __method_precondition_m13_get_image_data_13_precondition[objective2,rover3,camera0,waypoint1,low_res;]
true 25 __method_precondition_m15_do_calibrate_15_precondition[camera0,objective2,waypoint5;]
true 202 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint5;]
true 111 visit[waypoint5;]
true 37 __method_precondition_m2_do_navigate2_2_precondition[rover3,waypoint5;]
true 262 nop[;]
true 109 unvisit[waypoint5;]
true 244 calibrate[rover3,camera0,objective2,waypoint5;]
true 221 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint5;]
true 184 visit[waypoint5;]
true 209 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint5,waypoint1;]
true 26 navigate[rover3,waypoint5,waypoint1;]
true 104 unvisit[waypoint5;]
true 255 take_image[rover3,waypoint1,objective2,camera0,low_res;]
true 69 __method_precondition_m14_send_image_data_14_precondition[general,waypoint7,waypoint1;]
true 66 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint1;]
true 95 visit[waypoint1;]
true 238 __method_precondition_m2_do_navigate2_2_precondition[rover3,waypoint1;]
true 67 nop[;]
true 68 unvisit[waypoint1;]
true 34 communicate_image_data[rover3,general,objective2,low_res,waypoint1,waypoint7;]
true 97 __method_precondition_m13_get_image_data_13_precondition[objective0,rover1,camera2,waypoint1,low_res;]
true 193 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective3,waypoint6;]
true 252 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint8;]
true 44 visit[waypoint8;]
true 177 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint8,waypoint6;]
true 1 navigate[rover1,waypoint8,waypoint6;]
true 137 unvisit[waypoint8;]
true 107 calibrate[rover1,camera2,objective3,waypoint6;]
true 54 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint6;]
true 256 visit[waypoint6;]
true 275 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint6,waypoint1,waypoint4;]
true 192 navigate[rover1,waypoint6,waypoint4;]
true 236 visit[waypoint4;]
true 213 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint4,waypoint1,waypoint2;]
true 57 navigate[rover1,waypoint4,waypoint2;]
true 173 visit[waypoint2;]
true 121 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint1;]
true 28 navigate[rover1,waypoint2,waypoint1;]
true 45 unvisit[waypoint2;]
true 100 unvisit[waypoint4;]
true 96 unvisit[waypoint6;]
true 181 take_image[rover1,waypoint1,objective0,camera2,low_res;]
true 277 __method_precondition_m14_send_image_data_14_precondition[general,waypoint7,waypoint1;]
true 240 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint1;]
true 188 visit[waypoint1;]
true 123 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint1,waypoint1,waypoint2;]
true 105 navigate[rover1,waypoint1,waypoint2;]
true 29 visit[waypoint2;]
true 38 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint1;]
true 259 navigate[rover1,waypoint2,waypoint1;]
true 245 unvisit[waypoint2;]
true 102 unvisit[waypoint1;]
true 138 communicate_image_data[rover1,general,objective0,low_res,waypoint1,waypoint7;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 822
TSTG: 2147483647
Method: 1
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 1644
TSTG: 2147483647
Method: 2
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 2466
TSTG: 2147483647
Method: 3
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 3288
TSTG: 2147483647
Method: 4
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 4110
TSTG: 2147483647
Method: 5
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 4932
TSTG: 2147483647
Method: 6
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 5754
TSTG: 2147483647
Method: 7
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 6576
TSTG: 2147483647
Method: 8
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 7398
TSTG: 2147483647
Method: 9
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 8220
TSTG: 2147483647
Method: 10
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 9042
TSTG: 2147483647
Method: 11
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 9864
TSTG: 2147483647
Method: 12
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 10686
TSTG: 2147483647
Method: 13
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 11508
TSTG: 2147483647
Method: 14
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 12330
TSTG: 2147483647
Method: 15
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 13152
TSTG: 2147483647
Method: 16
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 13974
TSTG: 2147483647
Method: 17
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 14796
TSTG: 2147483647
Method: 18
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 15618
TSTG: 2147483647
Method: 19
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 16440
TSTG: 2147483647
Method: 20
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 17262
TSTG: 2147483647
Method: 21
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 18084
TSTG: 2147483647
Method: 22
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 18906
TSTG: 2147483647
Method: 23
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 19728
TSTG: 2147483647
Method: 24
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 20550
TSTG: 2147483647
Method: 25
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 21372
TSTG: 2147483647
Method: 26
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 22194
TSTG: 2147483647
Method: 27
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 23016
TSTG: 2147483647
Method: 28
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 23838
TSTG: 2147483647
Method: 29
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 24660
TSTG: 2147483647
Method: 30
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 25482
TSTG: 2147483647
Method: 31
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 26304
TSTG: 2147483647
Method: 32
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 27126
TSTG: 2147483647
Method: 33
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 27948
TSTG: 2147483647
Method: 34
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 28770
TSTG: 2147483647
Method: 35
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 29592
TSTG: 2147483647
Method: 36
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 30414
TSTG: 2147483647
Method: 37
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 31236
TSTG: 2147483647
Method: 38
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 32058
TSTG: 2147483647
Method: 39
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 32880
TSTG: 2147483647
Method: 40
DP max: 5
Taking minimum: 5
LEN 41
ICAPS: 33702
TSTG: 2147483647
Method: 41
DP max: 5
Taking minimum: 5
LEN 42
ICAPS: 34524
TSTG: 2147483647
Method: 42
DP max: 6
Taking minimum: 6
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 119
  lower bound = 41

Running SAT search with cost bound = 80
==================================================
  upper bound = 119
  lower bound = 41
LEN 80
ICAPS: 65760
TSTG: 2147483647
Method: 80
Still waiting ... running for 100 will abort at 9223372036854760949
DP max: 18
Taking minimum: 18
Generating initial PDT ... done
initial PDT has 1165 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 1111 leafs
SHOP LEAFS 304
Assignment implications
Generating clauses representing decomposition ... done
At most K: 2064ms input: 18770 K = 80
Number of actions Formula: 2981ms for 3021889 clauses
Layers: 11 paths 1111
Layer 1 g 0 = 0 - 1 / 0 clauses 618828
Layer 1 g 1 = 2 - 3 / 2 clauses 618828
Layer 1 g 2 = 4 - 5 / 4 clauses 618828
Layer 1 g 3 = 6 - 7 / 6 clauses 618828
Layer 1 g 4 = 8 - 9 / 8 clauses 618828
Layer 1 g 5 = 10 - 11 / 10 clauses 618828
Layer 1 g 6 = 12 - 13 / 12 clauses 618828
Layer 1 g 7 = 14 - 15 / 14 clauses 618828
Layer 1 g 8 = 16 - 17 / 16 clauses 618828
Layer 1 g 9 = 18 - 19 / 18 clauses 618828
Layer 1 g 10 = 20 - 21 / 20 clauses 618828
Layer 1 g 11 = 22 - 23 / 22 clauses 618828
Layer 1 g 12 = 24 - 25 / 24 clauses 618828
Layer 1 g 13 = 26 - 27 / 26 clauses 618828
Layer 1 g 14 = 28 - 29 / 28 clauses 618828
Layer 1 g 15 = 30 - 31 / 30 clauses 618828
Layer 1 g 16 = 32 - 33 / 32 clauses 618828
Layer 1 g 17 = 34 - 35 / 34 clauses 618828
Layer 1 g 18 = 36 - 37 / 36 clauses 618828
Layer 1 g 19 = 38 - 39 / 38 clauses 618828
Layer 1 g 20 = 40 - 41 / 40 clauses 618828
Layer 1 g 21 = 42 - 43 / 42 clauses 618828
Layer 1 g 22 = 44 - 45 / 44 clauses 618828
Layer 1 g 23 = 46 - 47 / 46 clauses 618828
Layer 1 g 24 = 48 - 49 / 48 clauses 618828
Layer 1 g 25 = 50 - 51 / 50 clauses 618828
Layer 1 g 26 = 52 - 53 / 52 clauses 618828
Layer 1 g 27 = 54 - 55 / 54 clauses 618828
Layer 1 g 28 = 56 - 57 / 56 clauses 618828
Layer 1 g 29 = 58 - 59 / 58 clauses 618828
Layer 1 g 30 = 60 - 61 / 60 clauses 618828
Layer 1 g 31 = 62 - 63 / 62 clauses 618828
Layer 1 g 32 = 64 - 65 / 64 clauses 618828
Layer 1 g 33 = 66 - 67 / 66Still waiting ... running for 72033 will abort at 9223372036854760949
 clauses 618828
Layer 1 g 34 = 68 - 69 / 68 clauses 618828
Layer 1 g 35 = 70 - 71 / 70 clauses 618828
Layer 1 g 36 = 72 - 73 / 72 clauses 618828
Layer 1 g 37 = 74 - 75 / 74 clauses 618828
Layer 1 g 38 = 76 - 77 / 76 clauses 618828
Layer 1 g 39 = 78 - 79 / 78 clauses 618828
Layer 1 g 40 = 80 - 81 / 80 clauses 618828
Layer 1 g 41 = 82 - 83 / 82 clauses 618828
Layer 1 g 42 = 84 - 85 / 84 clauses 618828
Layer 1 g 43 = 86 - 87 / 86 clauses 618828
Layer 1 g 44 = 88 - 89 / 88 clauses 618828
Layer 1 g 45 = 90 - 91 / 90 clauses 618828
Layer 1 g 46 = 92 - 93 / 92 clauses 618828
Layer 1 g 47 = 94 - 95 / 94 clauses 618828
Layer 1 g 48 = 96 - 97 / 96 clauses 618828
Layer 1 g 49 = 98 - 99 / 98 clauses 618828
Layer 1 g 50 = 100 - 101 / 100 clauses 618828
Layer 1 g 51 = 102 - 103 / 102 clauses 618828
Layer 1 g 52 = 104 - 105 / 104 clauses 618828
Layer 1 g 53 = 106 - 107 / 106 clauses 618828
Layer 1 g 54 = 108 - 109 / 108 clauses 618828
Layer 1 g 55 = 110 - 111 / 110 clauses 618828
Layer 1 g 56 = 112 - 113 / 112 clauses 618828
Layer 1 g 57 = 114 - 115 / 114 clauses 618828
Layer 1 g 58 = 116 - 117 / 116 clauses 618828
Layer 1 g 59 = 118 - 119 / 118 clauses 618828
Layer 1 g 60 = 120 - 121 / 120 clauses 618828
Layer 1 g 61 = 122 - 123 / 122 clauses 618828
Layer 1 g 62 = 124 - 125 / 124 clauses 618828
Layer 1 g 63 = 126 - 127 / 126 clauses 618828
Layer 1 g 64 = 128 - 129 / 128 clauses 618828
Layer 1 g 65 = 130 - 131 / 130 clauses 618828
Layer 1 g 66 = 132 - 133 / 132 clauses 618828
Layer 1 g 67 = 134 - 135 / 134 clauses 618828
Layer 1 g 68 = 136 - 137 / 136 clauses 618828
Layer 1 g 69 = 138 - 139 / 138 clauses 618828
Layer 1 g 70 = 140 - 141 / 140 clauses 618828
Layer 1 g 71 = 142 - 143 / 142 clauses 618828
Layer 1 g 72 = 144 - 145 / 144 clauses 618828
Layer 1 g 73 = 146 - 147 / 146 clauses 618828
Layer 1 g 74 = 148 - 149 / 148 clauses 618828
Layer 1 g 75 = 150 - 151 / 150 clauses 618828
Layer 1 g 76 = 152 - 153 / 152 clauses 618828
Layer 1 g 77 = 154 - 155 / 154 clauses 618828
Layer 1 g 78 = 156 - 157 / 156 clauses 618828
Layer 1 g 79 = 158 - 159 / 158 clauses 618828
Layer 1 g 80 = 160 - 161 / 160 clauses 618828
Layer 1 g 81 = 162 - 163 / 162 clauses 618828
Layer 1 g 82 = 164 - 165 / 164 clauses 618828
Layer 1 g 83 = 166 - 167 / 166 clauses 618828
Layer 1 g 84 = 168 - 169 / 168 clauses 618828
Layer 1 g 85 = 170 - 171 / 170 clauses 618828
Layer 1 g 86 = 172 - 173 / 172 clauses 618828
Layer 1 g 87 = 174 - 175 / 174 clauses 618828
Layer 1 g 88 = 176 - 177 / 176Still waiting ... running for 142195 will abort at 9223372036854760949
 clauses 618828
Layer 1 g 89 = 178 - 179 / 178 clauses 618828
Layer 1 g 90 = 180 - 181 / 180 clauses 618828
Layer 1 g 91 = 182 - 183 / 182 clauses 618828
Layer 1 g 92 = 184 - 185 / 184 clauses 618828
Layer 1 g 93 = 186 - 187 / 186 clauses 618828
Layer 1 g 94 = 188 - 189 / 188 clauses 618828
Layer 1 g 95 = 190 - 191 / 190 clauses 618828
Layer 1 g 96 = 192 - 193 / 192 clauses 618828
Layer 1 g 97 = 194 - 195 / 194 clauses 618828
Layer 1 g 98 = 196 - 197 / 196 clauses 618828
Layer 1 g 99 = 198 - 199 / 198 clauses 618828
Layer 1 g 100 = 200 - 201 / 200 clauses 618828
Layer 1 g 101 = 202 - 203 / 202 clauses 618828
Layer 1 g 102 = 204 - 205 / 204 clauses 618828
Layer 1 g 103 = 206 - 207 / 206 clauses 618828
Layer 1 g 104 = 208 - 209 / 208 clauses 618828
Layer 1 g 105 = 210 - 211 / 210 clauses 618828
Layer 1 g 106 = 212 - 213 / 212 clauses 618828
Layer 1 g 107 = 214 - 215 / 214 clauses 618828
Layer 1 g 108 = 216 - 217 / 216 clauses 618828
Layer 1 g 109 = 218 - 219 / 218 clauses 618828
Layer 1 g 110 = 220 - 221 / 220 clauses 618828
Layer 1 g 111 = 222 - 223 / 222 clauses 618828
Layer 1 g 112 = 224 - 225 / 224 clauses 618828
Layer 1 g 113 = 226 - 227 / 226 clauses 618828
Layer 1 g 114 = 228 - 229 / 228 clauses 618828
Layer 1 g 115 = 230 - 231 / 230 clauses 618828
Layer 1 g 116 = 232 - 233 / 232
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 224.990 MEMPEAK_KBS 8012618.752
