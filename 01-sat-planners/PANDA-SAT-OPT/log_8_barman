PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p08.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p08.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p08.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Grounded planning graph ... done in 624ms.
	Number of Grounded Actions 3172
	Number of Grounded Literals 465
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Grounding ... done.
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 465
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 440ms.
	Number of Grounded Actions 2827
	Number of Grounded Literals 435
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1293
	number of tasks = 4120
	number of decomposition methods = 5066
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1293
	number of tasks = 4120
	number of decomposition methods = 5066
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 217ms.
	Number of Grounded Actions 2827
	Number of Grounded Literals 435
	number of abstract tasks = 1293
	number of tasks = 4120
	number of decomposition methods = 5066
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1293
	number of tasks = 4120
	number of decomposition methods = 5066
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1293
	number of tasks = 4120
	number of decomposition methods = 5066
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1293
	number of tasks = 4120
	number of decomposition methods = 5066
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1293
	number of tasks = 4120
	number of decomposition methods = 5066
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Tasks 2827 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768273ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767688
done
initial PDT has 317 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 317 leafs
SHOP LEAFS 84
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 283185
Size 283170 at 0/2827
Size 281375 at 500/2827
Size 281327 at 1000/2827
Size 281237 at 1500/2827
Size 238238 at 2000/2827
Size 237884 at 2500/2827
Size 237884
Size 235022 at 0/2827
Size 26380 at 500/2827
Size 26372 at 1000/2827
Size 17265 at 1500/2827
Size 15861 at 2000/2827
Size 6083 at 2500/2827
Size 6045
Size 6045 at 0/2827
Size 6045 at 500/2827
Size 6045 at 1000/2827
Size 5319 at 1500/2827
Size 5268 at 2000/2827
Size 4636 at 2500/2827
Size 4628
Size 4628 at 0/2827
Size 4580 at 500/2827
Size 4580 at 1000/2827
Size 4448 at 1500/2827
Size 4448 at 2000/2827
Size 4372 at 2500/2827
Size 4372
Size 4372 at 0/2827
Size 4369 at 500/2827
Size 4369 at 1000/2827
Size 4359 at 1500/2827
Size 4358 at 2000/2827
Size 4358 at 2500/2827
Size 4358
Size 4358 at 0/2827
Size 4358 at 500/2827
Size 4358 at 1000/2827
Size 4358 at 1500/2827
Size 4358 at 2000/2827
Size 4358 at 2500/2827
Size 4358
Invariant time: 3.016
Number of invariants: 4358
Invariant Clauses 1385844
NUMBER OF CLAUSES 2087810
NUMBER OF STATE CLAUSES 1765233
NUMBER OF DECOMPOSITION CLAUSES 322577
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.55% 15.450000000000001% 0.0% 
NUMBER OF PATHS 317
Starting cryptominisat5.5
Setting starttime of solver to 1604494985352
Command exited with non-zero status 10
1.74 0.05

Time command gave the following runtime for the solver: 1790
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_7;3;1,29 29 _m4_serve_shot_2
7;3;1 149 pathaction!3_7;3;1,3975
Consider method^3_5;1;3,3150 3150 _m2_get_first_ingredient_4
5;1;3 98 pathaction!3_5;1;3,1352
Consider method^4_6;3;1;0,2100 2100 m6_do_clean_shot
6;3;1;0 270 pathaction!4_6;3;1;0,2445
Consider method^3_6;3;1,57 57 _m4_serve_shot_2
6;3;1 342 pathaction!3_6;3;1,3981
Consider method^2_0;1,2075 2075 m2_get_first_ingredient
0;1 401 pathaction!2_0;1,2584
Consider method^3_10;2;2,2581 2581 _m3_get_second_ingredient_3
10;2;2 334 pathaction!3_10;2;2,3716
Consider method^3_7;1;3,3479 3479 _m2_get_first_ingredient_4
7;1;3 435 pathaction!3_7;1;3,1431
Consider method^3_6;1;1,2572 2572 m8_do_fill_shot
6;1;1 423 pathaction!3_6;1;1,3845
Consider method^2_3;1,1916 1916 m2_get_first_ingredient
3;1 190 pathaction!2_3;1,2590
Consider method^3_6;2;2,4004 4004 _m3_get_second_ingredient_3
6;2;2 385 pathaction!3_6;2;2,3772
Consider method^3_2;1;2,4403 4403 _m2_get_first_ingredient_3
2;1;2 232 pathaction!3_2;1;2,1919
Consider method^3_10;3;4,1780 1780 _m4_serve_shot_5
10;3;4 439 pathaction!3_10;3;4,3685
Consider method^3_10;1;1,593 593 m7_do_fill_shot
10;1;1 109 pathaction!3_10;1;1,3880
Consider method^4_2;3;1;0,3040 3040 m5_do_clean_shot
2;3;1;0 255 pathaction!4_2;3;1;0,2474
Consider method^3_8;2;1,2008 2008 _m3_get_second_ingredient_2
8;2;1 69 pathaction!3_8;2;1,1255
Consider method^2_9;2,2821 2821 m3_get_second_ingredient
9;2 396 pathaction!2_9;2,1983
Consider method^3_11;2;2,885 885 _m3_get_second_ingredient_3
11;2;2 84 pathaction!3_11;2;2,3708
Consider method^3_3;3;1,3411 3411 _m4_serve_shot_2
3;3;1 216 pathaction!3_3;3;1,3991
Consider method^3_1;2;1,4036 4036 _m3_get_second_ingredient_2
1;2;1 115 pathaction!3_1;2;1,1195
Consider method^3_6;3;5,1751 1751 _m4_serve_shot_6
6;3;5 1 pathaction!3_6;3;5,2633
Consider method^3_15;1;2,1082 1082 _m2_get_first_ingredient_3
15;1;2 395 pathaction!3_15;1;2,1893
Consider method^2_2;2,4347 4347 m3_get_second_ingredient
2;2 350 pathaction!2_2;2,1977
Consider method^2_4;3,2652 2652 m4_serve_shot
4;3 372 pathaction!2_4;3,2085
Consider method^2_12;0,1075 1075 _m1_do_cocktail_in_shot2_4
12;0 279 pathaction!2_12;0,3371
Consider method^2_4;2,4909 4909 m3_get_second_ingredient
4;2 112 pathaction!2_4;2,1987
Consider method^3_10;3;5,1342 1342 _m4_serve_shot_6
10;3;5 90 pathaction!3_10;3;5,2638
Consider method^3_4;1;2,398 398 _m2_get_first_ingredient_3
4;1;2 74 pathaction!3_4;1;2,1856
Consider method^2_3;3,3531 3531 m4_serve_shot
3;3 79 pathaction!2_3;3,2075
Consider method^3_2;1;1,980 980 m9_do_fill_shot
2;1;1 145 pathaction!3_2;1;1,3862
Consider method^3_8;3;5,3628 3628 _m4_serve_shot_6
8;3;5 231 pathaction!3_8;3;5,2669
Consider method^3_3;3;5,725 725 _m4_serve_shot_6
3;3;5 102 pathaction!3_3;3;5,2670
Consider method^3_11;3;5,391 391 _m4_serve_shot_6
11;3;5 167 pathaction!3_11;3;5,2636
Consider method^1_15,5037 5037 m0_do_cocktail_in_shot1
15 291 pathaction!1_15,2005
Consider method^3_1;1;1,2843 2843 m8_do_fill_shot
1;1;1 164 pathaction!3_1;1;1,3909
Consider method^3_15;2;2,3285 3285 _m3_get_second_ingredient_3
15;2;2 293 pathaction!3_15;2;2,3788
Consider method^3_11;1;1,938 938 m8_do_fill_shot
11;1;1 195 pathaction!3_11;1;1,3885
Consider method^2_5;1,2063 2063 m2_get_first_ingredient
5;1 326 pathaction!2_5;1,2575
Consider method^2_8;3,4763 4763 m4_serve_shot
8;3 408 pathaction!2_8;3,2082
Consider method^3_5;3;4,3862 3862 _m4_serve_shot_5
5;3;4 67 pathaction!3_5;3;4,3688
Consider method^3_5;3;5,921 921 _m4_serve_shot_6
5;3;5 281 pathaction!3_5;3;5,2634
Consider method^3_8;1;1,4583 4583 m8_do_fill_shot
8;1;1 119 pathaction!3_8;1;1,3923
Consider method^3_15;1;3,3157 3157 _m2_get_first_ingredient_4
15;1;3 463 pathaction!3_15;1;3,1333
Consider method^1_1,4913 4913 m0_do_cocktail_in_shot1
1 351 pathaction!1_1,2004
Consider method^3_10;1;2,2816 2816 _m2_get_first_ingredient_3
10;1;2 225 pathaction!3_10;1;2,1966
Consider method^4_15;3;1;0,3714 3714 m6_do_clean_shot
15;3;1;0 191 pathaction!4_15;3;1;0,2211
Consider method^3_3;1;3,4778 4778 _m2_get_first_ingredient_4
3;1;3 17 pathaction!3_3;1;3,1366
Consider method^3_4;3;4,4925 4925 _m4_serve_shot_5
4;3;4 68 pathaction!3_4;3;4,3667
Consider method^3_5;2;1,5029 5029 _m3_get_second_ingredient_2
5;2;1 256 pathaction!3_5;2;1,1296
Consider method^3_10;3;1,4951 4951 _m4_serve_shot_2
10;3;1 410 pathaction!3_10;3;1,3990
Consider method^2_5;3,3225 3225 m4_serve_shot
5;3 7 pathaction!2_5;3,2086
Consider method^3_2;2;1,544 544 _m3_get_second_ingredient_2
2;2;1 444 pathaction!3_2;2;1,1305
Consider method^3_6;1;3,1200 1200 _m2_get_first_ingredient_4
6;1;3 332 pathaction!3_6;1;3,1338
Consider method^3_7;2;2,434 434 _m3_get_second_ingredient_3
7;2;2 466 pathaction!3_7;2;2,3791
Consider method^3_0;2;1,4882 4882 _m3_get_second_ingredient_2
0;2;1 50 pathaction!3_0;2;1,1196
Consider method^3_1;3;5,4860 4860 _m4_serve_shot_6
1;3;5 31 pathaction!3_1;3;5,2645
Consider method^3_5;2;2,1256 1256 _m3_get_second_ingredient_3
5;2;2 47 pathaction!3_5;2;2,3793
Consider method^2_8;1,1689 1689 m2_get_first_ingredient
8;1 108 pathaction!2_8;1,2587
Consider method^2_2;1,183 183 m2_get_first_ingredient
2;1 8 pathaction!2_2;1,2571
Consider method^1_10,535 535 m0_do_cocktail_in_shot1
10 64 pathaction!1_10,2008
Consider method^3_9;3;5,3380 3380 _m4_serve_shot_6
9;3;5 65 pathaction!3_9;3;5,2663
Consider method^3_9;1;3,1218 1218 _m2_get_first_ingredient_4
9;1;3 371 pathaction!3_9;1;3,1419
Consider method^2_12;1,4389 4389 m9_do_fill_shot
12;1 111 pathaction!2_12;1,3878
Consider method^2_11;3,2476 2476 m4_serve_shot
11;3 318 pathaction!2_11;3,2084
Consider method^3_0;1;1,1862 1862 m8_do_fill_shot
0;1;1 345 pathaction!3_0;1;1,3888
Consider method^3_5;3;1,151 151 _m4_serve_shot_2
5;3;1 143 pathaction!3_5;3;1,3992
Consider method^3_11;2;1,2308 2308 _m3_get_second_ingredient_2
11;2;1 218 pathaction!3_11;2;1,1192
Consider method^4_10;3;1;0,2842 2842 m5_do_clean_shot
10;3;1;0 360 pathaction!4_10;3;1;0,2168
Consider method^2_1;2,2319 2319 m3_get_second_ingredient
1;2 283 pathaction!2_1;2,1997
Consider method^4_8;3;1;0,3214 3214 m6_do_clean_shot
8;3;1;0 378 pathaction!4_8;3;1;0,2187
Consider method^3_2;3;1,2267 2267 _m4_serve_shot_2
2;3;1 85 pathaction!3_2;3;1,3995
Consider method^3_15;3;5,540 540 _m4_serve_shot_6
15;3;5 40 pathaction!3_15;3;5,2655
Consider method^3_10;2;1,4154 4154 _m3_get_second_ingredient_2
10;2;1 282 pathaction!3_10;2;1,1250
Consider method^3_10;1;3,4275 4275 _m2_get_first_ingredient_4
10;1;3 268 pathaction!3_10;1;3,1373
Consider method^3_1;3;1,3266 3266 _m4_serve_shot_2
1;3;1 199 pathaction!3_1;3;1,3988
Consider method^2_1;3,2348 2348 m4_serve_shot
1;3 25 pathaction!2_1;3,2079
Consider method^2_14;0,1075 1075 _m1_do_cocktail_in_shot2_4
14;0 221 pathaction!2_14;0,3371
Consider method^2_0;2,4958 4958 m3_get_second_ingredient
0;2 121 pathaction!2_0;2,1990
Consider method^4_9;3;1;0,8 8 m5_do_clean_shot
9;3;1;0 114 pathaction!4_9;3;1;0,2271
Consider method^3_6;1;2,4693 4693 _m2_get_first_ingredient_3
6;1;2 208 pathaction!3_6;1;2,1903
Consider method^3_7;3;4,307 307 _m4_serve_shot_5
7;3;4 228 pathaction!3_7;3;4,3673
Consider method^3_0;2;2,3759 3759 _m3_get_second_ingredient_3
0;2;2 432 pathaction!3_0;2;2,3765
Consider method^4_1;3;1;0,4621 4621 m5_do_clean_shot
1;3;1;0 156 pathaction!4_1;3;1;0,2486
Consider method^3_8;3;1,416 416 _m4_serve_shot_2
8;3;1 363 pathaction!3_8;3;1,3978
Consider method^3_0;1;3,2417 2417 _m2_get_first_ingredient_4
0;1;3 353 pathaction!3_0;1;3,1381
Consider method^3_2;3;4,1259 1259 _m4_serve_shot_5
2;3;4 271 pathaction!3_2;3;4,3690
Consider method^3_8;1;2,4662 4662 _m2_get_first_ingredient_3
8;1;2 181 pathaction!3_8;1;2,1884
Consider method^2_0;3,2284 2284 m4_serve_shot
0;3 182 pathaction!2_0;3,2078
Consider method^3_4;3;5,4308 4308 _m4_serve_shot_6
4;3;5 30 pathaction!3_4;3;5,2653
Consider method^2_11;1,4824 4824 m2_get_first_ingredient
11;1 219 pathaction!2_11;1,2578
Consider method^3_15;2;1,3539 3539 _m3_get_second_ingredient_2
15;2;1 321 pathaction!3_15;2;1,1234
Consider method^1_12,1679 1679 m1_do_cocktail_in_shot2
12 341 pathaction!1_12,614
Consider method^3_15;3;1,1956 1956 _m4_serve_shot_2
15;3;1 138 pathaction!3_15;3;1,3982
Consider method^3_7;3;5,2562 2562 _m4_serve_shot_6
7;3;5 125 pathaction!3_7;3;5,2654
Consider method^2_6;2,640 640 m3_get_second_ingredient
6;2 235 pathaction!2_6;2,1979
Consider method^2_5;2,3711 3711 m3_get_second_ingredient
5;2 174 pathaction!2_5;2,1981
Consider method^1_5,3704 3704 m0_do_cocktail_in_shot1
5 244 pathaction!1_5,2011
Consider method^2_10;3,4633 4633 m4_serve_shot
10;3 275 pathaction!2_10;3,2083
Consider method^3_5;1;1,257 257 m8_do_fill_shot
5;1;1 416 pathaction!3_5;1;1,3859
Consider method^2_13;0,1075 1075 _m1_do_cocktail_in_shot2_4
13;0 15 pathaction!2_13;0,3371
Consider method^3_3;2;2,2932 2932 _m3_get_second_ingredient_3
3;2;2 252 pathaction!3_3;2;2,3713
Consider method^2_9;1,1511 1511 m2_get_first_ingredient
9;1 319 pathaction!2_9;1,2577
Consider method^3_1;1;2,1598 1598 _m2_get_first_ingredient_3
1;1;2 303 pathaction!3_1;1;2,1897
Consider method^3_11;3;1,69 69 _m4_serve_shot_2
11;3;1 419 pathaction!3_11;3;1,3986
Consider method^2_15;1,3709 3709 m2_get_first_ingredient
15;1 154 pathaction!2_15;1,2586
Consider method^2_10;1,769 769 m2_get_first_ingredient
10;1 132 pathaction!2_10;1,2588
Consider method^3_3;2;1,666 666 _m3_get_second_ingredient_2
3;2;1 188 pathaction!3_3;2;1,1249
Consider method^3_7;1;2,306 306 _m2_get_first_ingredient_3
7;1;2 257 pathaction!3_7;1;2,1917
Consider method^3_7;1;1,4470 4470 m9_do_fill_shot
7;1;1 272 pathaction!3_7;1;1,3938
Consider method^3_3;1;1,3903 3903 m8_do_fill_shot
3;1;1 266 pathaction!3_3;1;1,3873
Consider method^0_,5065 5065 __top_1
 124 pathaction!0_,4119
Consider method^4_5;3;1;0,3416 3416 m5_do_clean_shot
5;3;1;0 76 pathaction!4_5;3;1;0,2192
Consider method^2_13;1,3240 3240 m9_do_fill_shot
13;1 315 pathaction!2_13;1,3886
Consider method^4_0;3;1;0,2172 2172 m5_do_clean_shot
0;3;1;0 331 pathaction!4_0;3;1;0,2190
Consider method^2_7;3,4443 4443 m4_serve_shot
7;3 220 pathaction!2_7;3,2077
Consider method^3_15;3;4,3173 3173 _m4_serve_shot_5
15;3;4 97 pathaction!3_15;3;4,3692
Consider method^3_9;1;2,4713 4713 _m2_get_first_ingredient_3
9;1;2 127 pathaction!3_9;1;2,1873
Consider method^3_9;3;4,1983 1983 _m4_serve_shot_5
9;3;4 302 pathaction!3_9;3;4,3662
Consider method^1_9,1142 1142 m0_do_cocktail_in_shot1
9 307 pathaction!1_9,2001
Consider method^3_2;1;3,4981 4981 _m2_get_first_ingredient_4
2;1;3 187 pathaction!3_2;1;3,1355
Consider method^2_10;2,1473 1473 m3_get_second_ingredient
10;2 116 pathaction!2_10;2,1994
Consider method^2_8;2,1298 1298 m3_get_second_ingredient
8;2 16 pathaction!2_8;2,1993
Consider method^1_8,4563 4563 m0_do_cocktail_in_shot1
8 45 pathaction!1_8,2007
Consider method^2_3;2,301 301 m3_get_second_ingredient
3;2 28 pathaction!2_3;2,1996
Consider method^3_6;2;1,199 199 _m3_get_second_ingredient_2
6;2;1 301 pathaction!3_6;2;1,1303
Consider method^2_2;3,3209 3209 m4_serve_shot
2;3 459 pathaction!2_2;3,2081
Consider method^3_6;3;4,603 603 _m4_serve_shot_5
6;3;4 163 pathaction!3_6;3;4,3679
Consider method^1_0,133 133 m0_do_cocktail_in_shot1
0 155 pathaction!1_0,2003
Consider method^3_1;1;3,2566 2566 _m2_get_first_ingredient_4
1;1;3 126 pathaction!3_1;1;3,1402
Consider method^2_14;1,470 470 m9_do_fill_shot
14;1 443 pathaction!2_14;1,3946
Consider method^3_9;3;1,749 749 _m4_serve_shot_2
9;3;1 183 pathaction!3_9;3;1,3993
Consider method^3_3;1;2,1569 1569 _m2_get_first_ingredient_3
3;1;2 450 pathaction!3_3;1;2,1934
Consider method^3_4;2;1,4692 4692 _m3_get_second_ingredient_2
4;2;1 286 pathaction!3_4;2;1,1243
Consider method^2_15;2,3996 3996 m3_get_second_ingredient
15;2 55 pathaction!2_15;2,1992
Consider method^3_4;1;3,3751 3751 _m2_get_first_ingredient_4
4;1;3 317 pathaction!3_4;1;3,1380
Consider method^2_6;1,1756 1756 m2_get_first_ingredient
6;1 230 pathaction!2_6;1,2573
Consider method^1_7,3192 3192 m0_do_cocktail_in_shot1
7 89 pathaction!1_7,2002
Consider method^3_11;1;3,4112 4112 _m2_get_first_ingredient_4
11;1;3 357 pathaction!3_11;1;3,1378
Consider method^3_0;3;5,407 407 _m4_serve_shot_6
0;3;5 447 pathaction!3_0;3;5,2671
Consider method^3_0;1;2,1372 1372 _m2_get_first_ingredient_3
0;1;2 412 pathaction!3_0;1;2,1922
Consider method^2_9;3,2126 2126 m4_serve_shot
9;3 29 pathaction!2_9;3,2076
Consider method^3_8;1;3,4792 4792 _m2_get_first_ingredient_4
8;1;3 35 pathaction!3_8;1;3,1416
Consider method^1_14,4445 4445 m1_do_cocktail_in_shot2
14 280 pathaction!1_14,612
Consider method^1_11,1578 1578 m0_do_cocktail_in_shot1
11 276 pathaction!1_11,2009
Consider method^3_2;3;5,934 934 _m4_serve_shot_6
2;3;5 359 pathaction!3_2;3;5,2642
Consider method^3_9;2;2,4447 4447 _m3_get_second_ingredient_3
9;2;2 236 pathaction!3_9;2;2,3714
Consider method^3_1;3;4,4932 4932 _m4_serve_shot_5
1;3;4 120 pathaction!3_1;3;4,3654
Consider method^1_4,1490 1490 m0_do_cocktail_in_shot1
4 449 pathaction!1_4,2010
Consider method^4_3;3;1;0,4025 4025 m6_do_clean_shot
3;3;1;0 9 pathaction!4_3;3;1;0,2126
Consider method^1_2,1444 1444 m0_do_cocktail_in_shot1
2 63 pathaction!1_2,2006
Consider method^4_11;3;1;0,3055 3055 m6_do_clean_shot
11;3;1;0 178 pathaction!4_11;3;1;0,2392
Consider method^3_15;1;1,755 755 m8_do_fill_shot
15;1;1 431 pathaction!3_15;1;1,3840
Consider method^2_6;3,1211 1211 m4_serve_shot
6;3 253 pathaction!2_6;3,2074
Consider method^3_0;3;4,3936 3936 _m4_serve_shot_5
0;3;4 246 pathaction!3_0;3;4,3652
Consider method^1_13,4644 4644 m1_do_cocktail_in_shot2
13 367 pathaction!1_13,613
Consider method^3_11;1;2,2341 2341 _m2_get_first_ingredient_3
11;1;2 66 pathaction!3_11;1;2,1878
Consider method^2_15;3,3183 3183 m4_serve_shot
15;3 467 pathaction!2_15;3,2080
Consider method^1_3,3166 3166 m0_do_cocktail_in_shot1
3 177 pathaction!1_3,2000
Consider method^3_4;3;1,5050 5050 _m4_serve_shot_2
4;3;1 60 pathaction!3_4;3;1,3972
Consider method^2_11;2,4460 4460 m3_get_second_ingredient
11;2 373 pathaction!2_11;2,1984
Consider method^4_7;3;1;0,5004 5004 m5_do_clean_shot
7;3;1;0 381 pathaction!4_7;3;1;0,2282
Consider method^3_8;2;2,94 94 _m3_get_second_ingredient_3
8;2;2 159 pathaction!3_8;2;2,3811
Consider method^3_2;2;2,4641 4641 _m3_get_second_ingredient_3
2;2;2 239 pathaction!3_2;2;2,3746
Consider method^4_4;3;1;0,3616 3616 m5_do_clean_shot
4;3;1;0 118 pathaction!4_4;3;1;0,2106
Consider method^3_3;3;4,4147 4147 _m4_serve_shot_5
3;3;4 197 pathaction!3_3;3;4,3671
Consider method^3_4;1;1,3487 3487 m7_do_fill_shot
4;1;1 146 pathaction!3_4;1;1,3887
Consider method^3_0;3;1,4367 4367 _m4_serve_shot_2
0;3;1 323 pathaction!3_0;3;1,3984
Consider method^3_7;2;1,2021 2021 _m3_get_second_ingredient_2
7;2;1 339 pathaction!3_7;2;1,1208
Consider method^2_4;1,2687 2687 m2_get_first_ingredient
4;1 42 pathaction!2_4;1,2581
Consider method^3_1;2;2,5053 5053 _m3_get_second_ingredient_3
1;2;2 325 pathaction!3_1;2;2,3802
Consider method^3_5;1;2,67 67 _m2_get_first_ingredient_3
5;1;2 316 pathaction!3_5;1;2,1932
Consider method^1_6,654 654 m0_do_cocktail_in_shot1
6 234 pathaction!1_6,1999
Consider method^2_7;2,2556 2556 m3_get_second_ingredient
7;2 455 pathaction!2_7;2,1980
Consider method^3_9;1;1,3221 3221 m8_do_fill_shot
9;1;1 92 pathaction!3_9;1;1,3926
Consider method^2_7;1,4794 4794 m2_get_first_ingredient
7;1 289 pathaction!2_7;1,2574
Consider method^3_11;3;4,1025 1025 _m4_serve_shot_5
11;3;4 260 pathaction!3_11;3;4,3669
Consider method^3_9;2;1,2367 2367 _m3_get_second_ingredient_2
9;2;1 19 pathaction!3_9;2;1,1191
Consider method^3_4;2;2,239 239 _m3_get_second_ingredient_3
4;2;2 88 pathaction!3_4;2;2,3799
Consider method^2_1;1,579 579 m2_get_first_ingredient
1;1 461 pathaction!2_1;1,2591
Consider method^3_8;3;4,433 433 _m4_serve_shot_5
8;3;4 454 pathaction!3_8;3;4,3656


CHECKING primitive solution of length 290 ...
true 152 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 22 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot13;]
true 442 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser1,ingredient1;]
true 173 grasp[left,shot13;]
true 207 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 161 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 354 clean-shot[shot13,ingredient1,left,right;]
true 362 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot13;]
true 211 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 37 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 202 leave[left,shot13;]
true 94 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient3;]
true 227 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 421 nop[;]
true 352 grasp[left,shaker1;]
true 290 shake[cocktail9,ingredient1,ingredient3,shaker1,left,right;]
true 370 pour-shaker-to-shot[cocktail9,shot1,left,shaker1,l2,l1;]
true 448 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 346 clean-shaker[left,right,shaker1;]
true 13 leave[left,shaker1;]
true 327 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 3 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot14;]
true 107 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser1,ingredient1;]
true 129 grasp[right,shot14;]
true 337 fill-shot[shot14,ingredient1,right,left,dispenser1;]
true 51 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,right,l0,l1;]
true 468 clean-shot[shot14,ingredient1,right,left;]
true 433 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,right,shot14;]
true 386 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 311 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2;]
true 304 leave[right,shot14;]
true 366 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient2;]
true 298 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 389 nop[;]
true 26 grasp[left,shaker1;]
true 209 shake[cocktail7,ingredient1,ingredient2,shaker1,left,right;]
true 399 pour-shaker-to-shot[cocktail7,shot2,left,shaker1,l2,l1;]
true 458 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 300 clean-shaker[left,right,shaker1;]
true 136 leave[left,shaker1;]
true 36 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 198 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot14;]
true 59 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient2,dispenser3;]
true 428 grasp[right,shot14;]
true 0 clean-shot[shot14,ingredient2,right,left;]
true 169 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 194 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1;]
true 462 clean-shot[shot14,ingredient3,right,left;]
true 264 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,right,shot14;]
true 38 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 56 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2;]
true 403 leave[right,shot14;]
true 144 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4;]
true 192 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 52 nop[;]
true 135 grasp[right,shaker1;]
true 387 shake[cocktail11,ingredient3,ingredient4,shaker1,right,left;]
true 193 pour-shaker-to-shot[cocktail11,shot3,right,shaker1,l2,l1;]
true 397 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 377 clean-shaker[right,left,shaker1;]
true 99 leave[right,shaker1;]
true 137 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 185 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot4;]
true 141 __method_precondition_m8_do_fill_shot_8_precondition[shot4,dispenser4,ingredient4;]
true 347 grasp[left,shot4;]
true 369 fill-shot[shot4,ingredient4,left,right,dispenser4;]
true 150 pour-shot-to-clean-shaker[shot4,ingredient4,shaker1,left,l0,l1;]
true 78 clean-shot[shot4,ingredient4,left,right;]
true 375 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot4;]
true 166 fill-shot[shot4,ingredient2,left,right,dispenser2;]
true 245 pour-shot-to-used-shaker[shot4,ingredient2,shaker1,left,l1,l2;]
true 105 leave[left,shot4;]
true 434 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient2;]
true 200 __method_precondition_m6_do_clean_shot_6_precondition[shot4,right;]
true 310 grasp[right,shot4;]
true 103 clean-shot[shot4,ingredient2,right,left;]
true 77 leave[right,shot4;]
true 436 grasp[left,shaker1;]
true 254 shake[cocktail8,ingredient4,ingredient2,shaker1,left,right;]
true 147 pour-shaker-to-shot[cocktail8,shot4,left,shaker1,l2,l1;]
true 53 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 213 clean-shaker[left,right,shaker1;]
true 273 leave[left,shaker1;]
true 305 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 368 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot13;]
true 292 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient3,dispenser3;]
true 153 grasp[right,shot13;]
true 314 refill-shot[shot13,ingredient3,right,left,dispenser3;]
true 95 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1;]
true 205 clean-shot[shot13,ingredient3,right,left;]
true 400 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient5,right,shot13;]
true 242 fill-shot[shot13,ingredient5,right,left,dispenser5;]
true 312 pour-shot-to-used-shaker[shot13,ingredient5,shaker1,right,l1,l2;]
true 217 leave[right,shot13;]
true 348 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient5;]
true 18 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 358 nop[;]
true 122 grasp[left,shaker1;]
true 249 shake[cocktail2,ingredient3,ingredient5,shaker1,left,right;]
true 388 pour-shaker-to-shot[cocktail2,shot5,left,shaker1,l2,l1;]
true 424 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 21 clean-shaker[left,right,shaker1;]
true 297 leave[left,shaker1;]
true 261 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 248 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient4,shot15;]
true 196 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4;]
true 398 grasp[left,shot15;]
true 54 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 222 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 14 clean-shot[shot15,ingredient4,left,right;]
true 417 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,left,shot15;]
true 57 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 313 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 5 leave[left,shot15;]
true 131 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient4,ingredient2;]
true 210 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 393 nop[;]
true 250 grasp[left,shaker1;]
true 263 shake[cocktail1,ingredient4,ingredient2,shaker1,left,right;]
true 142 pour-shaker-to-shot[cocktail1,shot6,left,shaker1,l2,l1;]
true 440 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 405 clean-shaker[left,right,shaker1;]
true 20 leave[left,shaker1;]
true 335 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 394 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot7;]
true 171 __method_precondition_m8_do_fill_shot_8_precondition[shot7,dispenser1,ingredient1;]
true 93 grasp[right,shot7;]
true 100 fill-shot[shot7,ingredient1,right,left,dispenser1;]
true 336 pour-shot-to-clean-shaker[shot7,ingredient1,shaker1,right,l0,l1;]
true 406 clean-shot[shot7,ingredient1,right,left;]
true 343 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot7;]
true 104 fill-shot[shot7,ingredient2,right,left,dispenser2;]
true 160 pour-shot-to-used-shaker[shot7,ingredient2,shaker1,right,l1,l2;]
true 380 leave[right,shot7;]
true 392 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient2;]
true 407 __method_precondition_m6_do_clean_shot_6_precondition[shot7,right;]
true 445 grasp[right,shot7;]
true 265 clean-shot[shot7,ingredient2,right,left;]
true 75 leave[right,shot7;]
true 215 grasp[left,shaker1;]
true 391 shake[cocktail5,ingredient1,ingredient2,shaker1,left,right;]
true 201 pour-shaker-to-shot[cocktail5,shot7,left,shaker1,l2,l1;]
true 212 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 390 clean-shaker[left,right,shaker1;]
true 384 leave[left,shaker1;]
true 441 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 240 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot13;]
true 294 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient5,dispenser2;]
true 241 grasp[left,shot13;]
true 170 clean-shot[shot13,ingredient5,left,right;]
true 383 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 299 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 134 clean-shot[shot13,ingredient2,left,right;]
true 61 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot13;]
true 180 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 83 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2;]
true 23 leave[left,shot13;]
true 413 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4;]
true 62 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 258 nop[;]
true 411 grasp[right,shaker1;]
true 382 shake[cocktail3,ingredient2,ingredient4,shaker1,right,left;]
true 204 pour-shaker-to-shot[cocktail3,shot8,right,shaker1,l2,l1;]
true 340 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 157 clean-shaker[right,left,shaker1;]
true 162 leave[right,shaker1;]
true 420 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 214 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot9;]
true 262 __method_precondition_m8_do_fill_shot_8_precondition[shot9,dispenser2,ingredient2;]
true 251 grasp[right,shot9;]
true 58 fill-shot[shot9,ingredient2,right,left,dispenser2;]
true 4 pour-shot-to-clean-shaker[shot9,ingredient2,shaker1,right,l0,l1;]
true 457 clean-shot[shot9,ingredient2,right,left;]
true 430 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,right,shot9;]
true 274 fill-shot[shot9,ingredient3,right,left,dispenser3;]
true 186 pour-shot-to-used-shaker[shot9,ingredient3,shaker1,right,l1,l2;]
true 80 leave[right,shot9;]
true 39 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3;]
true 24 __method_precondition_m6_do_clean_shot_6_precondition[shot9,left;]
true 328 grasp[left,shot9;]
true 422 clean-shot[shot9,ingredient3,left,right;]
true 70 leave[left,shot9;]
true 128 grasp[right,shaker1;]
true 133 shake[cocktail10,ingredient2,ingredient3,shaker1,right,left;]
true 306 pour-shaker-to-shot[cocktail10,shot9,right,shaker1,l2,l1;]
true 247 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 33 clean-shaker[right,left,shaker1;]
true 269 leave[right,shaker1;]
true 437 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 324 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot17;]
true 464 __method_precondition_m8_do_fill_shot_8_precondition[shot17,dispenser3,ingredient3;]
true 203 grasp[left,shot17;]
true 296 fill-shot[shot17,ingredient3,left,right,dispenser3;]
true 110 pour-shot-to-clean-shaker[shot17,ingredient3,shaker1,left,l0,l1;]
true 376 clean-shot[shot17,ingredient3,left,right;]
true 465 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot17;]
true 320 fill-shot[shot17,ingredient2,left,right,dispenser2;]
true 151 pour-shot-to-used-shaker[shot17,ingredient2,shaker1,left,l1,l2;]
true 179 leave[left,shot17;]
true 6 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient2;]
true 87 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 259 nop[;]
true 418 grasp[left,shaker1;]
true 402 shake[cocktail4,ingredient3,ingredient2,shaker1,left,right;]
true 238 pour-shaker-to-shot[cocktail4,shot10,left,shaker1,l2,l1;]
true 123 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 11 clean-shaker[left,right,shaker1;]
true 44 leave[left,shaker1;]
true 453 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 426 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot15;]
true 139 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient2,dispenser2;]
true 140 grasp[right,shot15;]
true 456 refill-shot[shot15,ingredient2,right,left,dispenser2;]
true 96 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 409 clean-shot[shot15,ingredient2,right,left;]
true 438 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,right,shot15;]
true 34 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 365 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 322 leave[right,shot15;]
true 10 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3;]
true 267 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 81 nop[;]
true 415 grasp[right,shaker1;]
true 425 shake[cocktail6,ingredient2,ingredient3,shaker1,right,left;]
true 344 pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1;]
true 285 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 32 clean-shaker[right,left,shaker1;]
true 404 leave[right,shaker1;]
true 106 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 338 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot12;]
true 2 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser2,ingredient2;]
true 224 grasp[left,shot12;]
true 451 fill-shot[shot12,ingredient2,left,right,dispenser2;]
true 364 pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,left,l0,l1;]
true 175 clean-shot[shot12,ingredient2,left,right;]
true 41 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot12;]
true 172 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 27 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,left,l1,l2;]
true 206 leave[left,shot12;]
true 12 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3;]
true 287 __method_precondition_m6_do_clean_shot_6_precondition[shot12,right;]
true 329 grasp[right,shot12;]
true 379 clean-shot[shot12,ingredient3,right,left;]
true 72 leave[right,shot12;]
true 277 grasp[left,shaker1;]
true 243 shake[cocktail10,ingredient2,ingredient3,shaker1,left,right;]
true 168 pour-shaker-to-shot[cocktail10,shot12,left,shaker1,l2,l1;]
true 130 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 101 clean-shaker[left,right,shaker1;]
true 427 leave[left,shaker1;]
true 288 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 355 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient4,dispenser1;]
true 184 grasp[right,shot13;]
true 278 clean-shot[shot13,ingredient4,right,left;]
true 233 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 446 leave[right,shot13;]
true 43 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 308 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient1,ingredient4,dispenser1;]
true 356 grasp[left,shot14;]
true 165 clean-shot[shot14,ingredient4,left,right;]
true 229 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 82 leave[left,shot14;]
true 71 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 349 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient3,dispenser1;]
true 86 grasp[right,shot15;]
true 223 clean-shot[shot15,ingredient3,right,left;]
true 333 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 237 leave[right,shot15;]
true 48 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot16,right;]
true 460 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot16;]
true 452 __method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser2,ingredient2;]
true 309 grasp[right,shot16;]
true 330 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 361 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1;]
true 91 clean-shot[shot16,ingredient2,right,left;]
true 374 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,right,shot16;]
true 284 fill-shot[shot16,ingredient4,right,left,dispenser4;]
true 117 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2;]
true 148 leave[right,shot16;]
true 429 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4;]
true 73 __method_precondition_m6_do_clean_shot_6_precondition[shot16,right;]
true 189 grasp[right,shot16;]
true 176 clean-shot[shot16,ingredient4,right,left;]
true 46 leave[right,shot16;]
true 49 grasp[left,shaker1;]
true 158 shake[cocktail3,ingredient2,ingredient4,shaker1,left,right;]
true 113 pour-shaker-to-shot[cocktail3,shot16,left,shaker1,l2,l1;]
true 414 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 226 clean-shaker[left,right,shaker1;]
true 295 leave[left,shaker1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2588
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 5176
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 7764
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 10352
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 12940
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 15528
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 18116
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 20704
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 23292
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 25880
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 28468
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 31056
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 33644
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 36232
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 38820
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 41408
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 43996
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 46584
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 49172
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 51760
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 54348
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 56936
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 59524
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 62112
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 64700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 67288
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 69876
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 72464
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 75052
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 77640
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 80228
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 82816
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 85404
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 87992
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 90580
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 93168
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 95756
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 98344
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 100932
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 103520
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 106108
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 108696
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 111284
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 113872
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 116460
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 119048
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 121636
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 124224
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 126812
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 129400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 131988
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 134576
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 137164
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 139752
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 142340
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 144928
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 147516
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 150104
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 152692
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 155280
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 157868
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 160456
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 163044
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 165632
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 168220
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 170808
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 173396
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 175984
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 178572
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 181160
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 183748
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 186336
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 188924
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 191512
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 194100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 196688
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 199276
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 201864
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 204452
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 207040
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 209628
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 212216
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 214804
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 217392
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 219980
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 222568
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 225156
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 227744
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 230332
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 232920
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 235508
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 238096
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 240684
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 243272
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 245860
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 248448
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 251036
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 253624
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 256212
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 258800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 261388
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 263976
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 266564
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 269152
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 271740
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 274328
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 276916
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 279504
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 282092
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 284680
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 287268
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 289856
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 292444
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 295032
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 297620
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 300208
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 302796
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 305384
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 307972
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 310560
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 313148
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 315736
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 318324
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 320912
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 323500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 126
ICAPS: 326088
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.069 MEMPEAK_KBS 929875.968
