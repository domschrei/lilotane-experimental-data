PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/entertainment/domain.hddl instances/entertainment/p12-tv-ds1-two-dev-and-speaker.hddl"


Planner Configuration
=====================
Domain: instances/entertainment/domain.hddl
Problem: instances/entertainment/p12-tv-ds1-two-dev-and-speaker.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p12-tv-ds1-two-dev-and-speaker.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 9
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 92
Compiling negative preconditions ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 18
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 92
Compiling split parameters ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 18
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 92
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 92
Grounded planning graph ... done in 599ms.
	Number of Grounded Actions 2355
	Number of Grounded Literals 1080
	number of abstract tasks = 13
	number of tasks = 24
	number of decomposition methods = 24
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 11
	number of constants = 92
Two Way TDG ... done.
	number of abstract tasks = 10
	number of tasks = 19
	number of decomposition methods = 18
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 2
	number of primitive SHOP tasks = 4
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 92
Grounding ... done.
	number of abstract tasks = 701
	number of tasks = 1258
	number of decomposition methods = 1164
	number of predicates = 1222
	number of sorts = 0
	number of tasks in largest method = 2
	number of primitive SHOP tasks = 346
	number of epsilon methods = 0
	number of primitive tasks = 557
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 701
	number of tasks = 1258
	number of decomposition methods = 1164
	number of predicates = 223
	number of sorts = 0
	number of tasks in largest method = 2
	number of primitive SHOP tasks = 346
	number of epsilon methods = 0
	number of primitive tasks = 557
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 103ms.
	Number of Grounded Actions 496
	Number of Grounded Literals 162
	number of abstract tasks = 587
	number of tasks = 1042
	number of decomposition methods = 886
	number of predicates = 223
	number of sorts = 0
	number of tasks in largest method = 2
	number of primitive SHOP tasks = 258
	number of epsilon methods = 0
	number of primitive tasks = 455
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 587
	number of tasks = 1042
	number of decomposition methods = 886
	number of predicates = 223
	number of sorts = 0
	number of tasks in largest method = 2
	number of primitive SHOP tasks = 258
	number of epsilon methods = 0
	number of primitive tasks = 455
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 588
	number of tasks = 1043
	number of decomposition methods = 887
	number of predicates = 223
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 258
	number of epsilon methods = 0
	number of primitive tasks = 455
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 588
	number of tasks = 1043
	number of decomposition methods = 887
	number of predicates = 148
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 258
	number of epsilon methods = 0
	number of primitive tasks = 455
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 45ms.
	Number of Grounded Actions 455
	Number of Grounded Literals 148
	number of abstract tasks = 588
	number of tasks = 1043
	number of decomposition methods = 887
	number of predicates = 148
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 258
	number of epsilon methods = 0
	number of primitive tasks = 455
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 588
	number of tasks = 1043
	number of decomposition methods = 887
	number of predicates = 148
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 258
	number of epsilon methods = 0
	number of primitive tasks = 455
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 588
	number of tasks = 1043
	number of decomposition methods = 887
	number of predicates = 148
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 258
	number of epsilon methods = 0
	number of primitive tasks = 455
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 588
	number of tasks = 1043
	number of decomposition methods = 887
	number of predicates = 148
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 258
	number of epsilon methods = 0
	number of primitive tasks = 455
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 588
	number of tasks = 1043
	number of decomposition methods = 887
	number of predicates = 148
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 258
	number of epsilon methods = 0
	number of primitive tasks = 455
	number of constants = 0
Tasks 455 - 175
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854769139ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854769005
done
initial PDT has 24 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 12 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 32634
Size 32052 at 0/455
Size 378
Size 378 at 0/455
Size 378
Invariant time: 0.185
Number of invariants: 378
Invariant Clauses 4914
NUMBER OF CLAUSES 10348
NUMBER OF STATE CLAUSES 8680
NUMBER OF DECOMPOSITION CLAUSES 1668
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.88% 16.12% 0.0% 
NUMBER OF PATHS 12
Starting cryptominisat5.5
Setting starttime of solver to 1604514963768
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 32 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 15 leafs
SHOP LEAFS 13
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Still waiting ... running for 100 will abort at 9223372036854767992
Invariant Clauses 6048
NUMBER OF CLAUSES 13921
NUMBER OF STATE CLAUSES 10829
NUMBER OF DECOMPOSITION CLAUSES 3092
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 77.79% 22.21% 0.0% 
NUMBER OF PATHS 15
Starting cryptominisat5.5
Setting starttime of solver to 1604514964255
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 40 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 30 leafs
SHOP LEAFS 20
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854767639
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 11718
NUMBER OF CLAUSES 35118
NUMBER OF STATE CLAUSES 21804
NUMBER OF DECOMPOSITION CLAUSES 13314
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 62.09% 37.910000000000004% 0.0% 
NUMBER OF PATHS 30
Starting cryptominisat5.5
Setting starttime of solver to 1604514964783
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 48 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 36 leafs
SHOP LEAFS 22
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854767072
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 13986
NUMBER OF CLAUSES 48711
NUMBER OF STATE CLAUSES 26615
NUMBER OF DECOMPOSITION CLAUSES 22096
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 54.64% 45.36% 0.0% 
NUMBER OF PATHS 36
Starting cryptominisat5.5
Setting starttime of solver to 1604514965337
Command exited with non-zero status 10
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_3;0,612 612 m-connect-direct-a
3;0 41 pathaction!2_3;0,183
Consider method^4_5;0;1;1,603 603 _M-plug|ANTECEDENT
5;0;1;1 31 pathaction!4_5;0;1;1,582
Consider method^2_5;1,795 795 m-dconnect-v
5;1 3 pathaction!2_5;1,253
Consider method^2_4;0,84 84 m-connect-direct-v
4;0 7 pathaction!2_4;0,920
Consider method^5_2;0;0;1;0,28 28 _M-plug|CONSEQUENT|ANTECEDENT
2;0;0;1;0 54 pathaction!5_2;0;0;1;0,19
Consider method^5_1;1;1;0;0,727 727 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1
1;1;1;0;0 11 pathaction!5_1;1;1;0;0,395
Consider method^2_2;0,423 423 m-connect-direct-a
2;0 36 pathaction!2_2;0,190
Consider method^4_0;1;1;0,105 105 _M-plug|CONSEQUENT|ANTECEDENT
0;1;1;0 55 pathaction!4_0;1;1;0,59
Consider method^6_2;0;0;1;0;0,86 86 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1
2;0;0;1;0;0 69 pathaction!6_2;0;0;1;0;0,380
Consider method^2_0;1,185 185 m-dconnect-a
0;1 6 pathaction!2_0;1,884
Consider method^5_3;0;0;1;0,150 150 _M-plug|CONSEQUENT|ANTECEDENT
3;0;0;1;0 45 pathaction!5_3;0;0;1;0,13
Consider method^3_3;0;0,622 622 m-dconnect-a
3;0;0 35 pathaction!3_3;0;0,895
Consider method^5_5;0;1;1;0,255 255 _M-plug|ANTECEDENT|DISJUNCT-0
5;0;1;1;0 77 pathaction!5_5;0;1;1;0,846
Consider method^2_3;1,204 204 m-dconnect-a
3;1 84 pathaction!2_3;1,883
Consider method^3_0;0;1,753 753 m-dconnect-a
0;0;1 57 pathaction!3_0;0;1,907
Consider method^3_3;1;1,449 449 _M-plug|CONSEQUENT
3;1;1 71 pathaction!3_3;1;1,571
Consider method^1_2,15 15 m-connect-rec-a
2 29 pathaction!1_2,181
Consider method^4_2;0;0;1,489 489 _M-plug|CONSEQUENT
2;0;0;1 39 pathaction!4_2;0;0;1,532
Consider method^1_0,459 459 m-connect-rec-a
0 38 pathaction!1_0,177
Consider method^3_1;0;1,359 359 m-dconnect-a
1;0;1 9 pathaction!3_1;0;1,897
Consider method^4_4;0;1;1,174 174 _M-plug|CONSEQUENT
4;0;1;1 12 pathaction!4_4;0;1;1,612
Consider method^1_1,92 92 m-connect-rec-a
1 68 pathaction!1_1,178
Consider method^3_4;0;1,693 693 m-dconnect-v
4;0;1 80 pathaction!3_4;0;1,265
Consider method^2_1;0,613 613 m-connect-direct-a
1;0 28 pathaction!2_1;0,185
Consider method^3_5;1;1,152 152 _M-plug|ANTECEDENT
5;1;1 20 pathaction!3_5;1;1,645
Consider method^4_2;1;1;0,277 277 _M-plug|CONSEQUENT|ANTECEDENT
2;1;1;0 13 pathaction!4_2;1;1;0,50
Consider method^1_5,135 135 m-connect-rec-v
5 4 pathaction!1_5,935
Consider method^4_5;1;1;0,352 352 _M-plug|ANTECEDENT|DISJUNCT-1
5;1;1;0 16 pathaction!4_5;1;1;0,876
Consider method^5_3;1;1;0;0,549 549 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0
3;1;1;0;0 62 pathaction!5_3;1;1;0;0,390
Consider method^5_5;1;1;0;0,866 866 _M-plug|ANTECEDENT|DISJUNCT-1|CONSEQUENT
5;1;1;0;0 5 pathaction!5_5;1;1;0;0,108
Consider method^4_3;0;0;1,880 880 _M-plug|CONSEQUENT
3;0;0;1 10 pathaction!4_3;0;0;1,519
Consider method^1_3,384 384 m-connect-rec-a
3 52 pathaction!1_3,189
Consider method^3_4;1;1,593 593 _M-plug|CONSEQUENT
4;1;1 53 pathaction!3_4;1;1,628
Consider method^3_5;0;1,756 756 m-dconnect-v
5;0;1 18 pathaction!3_5;0;1,250
Consider method^4_4;1;1;0,49 49 _M-plug|CONSEQUENT|CONSEQUENT
4;1;1;0 61 pathaction!4_4;1;1;0,70
Consider method^5_4;0;1;1;0,669 669 _M-plug|CONSEQUENT|CONSEQUENT
4;0;1;1;0 42 pathaction!5_4;0;1;1;0,58
Consider method^4_0;0;1;1,503 503 _M-plug|CONSEQUENT
0;0;1;1 17 pathaction!4_0;0;1;1,560
Consider method^5_2;1;1;0;0,550 550 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0
2;1;1;0;0 74 pathaction!5_2;1;1;0;0,399
Consider method^2_2;1,632 632 m-dconnect-a
2;1 30 pathaction!2_2;1,900
Consider method^6_5;0;1;1;0;0,491 491 _M-plug|ANTECEDENT|DISJUNCT-0|CONSEQUENT
5;0;1;1;0;0 65 pathaction!6_5;0;1;1;0;0,715
Consider method^6_1;0;1;1;0;0,18 18 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0
1;0;1;1;0;0 14 pathaction!6_1;0;1;1;0;0,370
Consider method^4_1;0;1;1,801 801 _M-plug|CONSEQUENT
1;0;1;1 83 pathaction!4_1;0;1;1,500
Consider method^2_1;1,122 122 m-dconnect-a
1;1 79 pathaction!2_1;1,904
Consider method^3_1;1;1,638 638 _M-plug|CONSEQUENT
1;1;1 2 pathaction!3_1;1;1,584
Consider method^6_0;0;1;1;0;0,444 444 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0
0;0;1;1;0;0 81 pathaction!6_0;0;1;1;0;0,384
Consider method^3_2;0;0,766 766 m-dconnect-a
2;0;0 76 pathaction!3_2;0;0,905
Consider method^5_1;0;1;1;0,442 442 _M-plug|CONSEQUENT|ANTECEDENT
1;0;1;1;0 51 pathaction!5_1;0;1;1;0,3
Consider method^2_0;0,710 710 m-connect-direct-a
0;0 78 pathaction!2_0;0,191
Consider method^3_0;1;1,208 208 _M-plug|CONSEQUENT
0;1;1 25 pathaction!3_0;1;1,613
Consider method^6_3;0;0;1;0;0,789 789 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1
3;0;0;1;0;0 72 pathaction!6_3;0;0;1;0;0,375
Consider method^2_4;1,480 480 m-dconnect-v
4;1 0 pathaction!2_4;1,266
Consider method^4_3;1;1;0,548 548 _M-plug|CONSEQUENT|ANTECEDENT
3;1;1;0 40 pathaction!4_3;1;1;0,36
Consider method^4_1;1;1;0,580 580 _M-plug|CONSEQUENT|ANTECEDENT
1;1;1;0 21 pathaction!4_1;1;1;0,45
Consider method^5_0;1;1;0;0,203 203 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1
0;1;1;0;0 44 pathaction!5_0;1;1;0;0,405
Consider method^3_2;1;1,145 145 _M-plug|CONSEQUENT
2;1;1 66 pathaction!3_2;1;1,597
Consider method^5_0;0;1;1;0,364 364 _M-plug|CONSEQUENT|ANTECEDENT
0;0;1;1;0 73 pathaction!5_0;0;1;1;0,28
Consider method^2_5;0,312 312 m-connect-direct-v
5;0 15 pathaction!2_5;0,911
Consider method^0_,886 886 __top_1
 8 pathaction!0_,1042
Consider method^1_4,787 787 m-connect-rec-v
4 24 pathaction!1_4,930


CHECKING primitive solution of length 24 ...
true 32 __method_precondition_m-dconnect-a_9_precondition[blu-ray-1-cinch-2,cinch-cable-1-cinch-1;]
true 75 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[blu-ray-1,blu-ray-1-cinch-2,cinch-cable-1,cinch-cable-1-cinch-1;]
true 47 __method_precondition_m-dconnect-a_9_precondition[cinch-cable-1-cinch-2,amplifier-1-cinch-3;]
true 58 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[cinch-cable-1,cinch-cable-1-cinch-2,amplifier-1,amplifier-1-cinch-3;]
true 56 __method_precondition_m-dconnect-a_9_precondition[sat-receiver-1-cinch-6,cinch-cable-3-cinch-1;]
true 64 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[sat-receiver-1,sat-receiver-1-cinch-6,cinch-cable-3,cinch-cable-3-cinch-1;]
true 34 __method_precondition_m-dconnect-a_9_precondition[cinch-cable-3-cinch-2,amplifier-1-cinch-2;]
true 43 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[cinch-cable-3,cinch-cable-3-cinch-2,amplifier-1,amplifier-1-cinch-2;]
true 19 __method_precondition_m-dconnect-a_9_precondition[amplifier-1-speakerWire-10,speaker-wire-1-speakerWire-1;]
true 63 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[amplifier-1,amplifier-1-speakerWire-10,speaker-wire-1,speaker-wire-1-speakerWire-1;]
true 50 __method_precondition_m-dconnect-a_9_precondition[speaker-wire-1-speakerWire-2,box-1-speakerWire-1;]
true 37 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[speaker-wire-1,speaker-wire-1-speakerWire-2,box-1,box-1-speakerWire-1;]
true 23 __method_precondition_m-dconnect-a_9_precondition[amplifier-1-speakerWire-9,speaker-wire-2-speakerWire-1;]
true 60 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[amplifier-1,amplifier-1-speakerWire-9,speaker-wire-2,speaker-wire-2-speakerWire-1;]
true 49 __method_precondition_m-dconnect-a_9_precondition[speaker-wire-2-speakerWire-2,box-2-speakerWire-1;]
true 33 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[speaker-wire-2,speaker-wire-2-speakerWire-2,box-2,box-2-speakerWire-1;]
true 59 __method_precondition_m-dconnect-v_10_precondition[blu-ray-1-hdmi-1,hdmi-cable-2-hdmi-1;]
true 48 plug|CONSEQUENT|CONSEQUENT[blu-ray-1,blu-ray-1-hdmi-1,hdmi-cable-2,hdmi-cable-2-hdmi-1;]
true 22 __method_precondition_m-dconnect-v_10_precondition[hdmi-cable-2-hdmi-2,tv-1-hdmi-1;]
true 67 plug|CONSEQUENT|CONSEQUENT[hdmi-cable-2,hdmi-cable-2-hdmi-2,tv-1,tv-1-hdmi-1;]
true 70 __method_precondition_m-dconnect-v_10_precondition[sat-receiver-1-cinch-5,cinch-cable-4-cinch-1;]
true 46 plug|ANTECEDENT|DISJUNCT-0|CONSEQUENT[sat-receiver-1,sat-receiver-1-cinch-5,cinch-cable-4,cinch-cable-4-cinch-1;]
true 27 __method_precondition_m-dconnect-v_10_precondition[cinch-cable-4-cinch-2,tv-1-cinch-6;]
true 1 plug|ANTECEDENT|DISJUNCT-1|CONSEQUENT[cinch-cable-4,cinch-cable-4-cinch-2,tv-1,tv-1-cinch-6;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 1178
TSTG: 2147483647
Method: 2147483647
DP max: 34
Taking minimum: 34
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 12
  lower bound = 0

Running SAT search with cost bound = 6
==================================================
  upper bound = 12
  lower bound = 0
LEN 6
ICAPS: 7068
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854766229
DP max: 104
Taking minimum: 104
Generating initial PDT ... done
initial PDT has 824 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 816 leafs
SHOP LEAFS 412
Assignment implications
Generating clauses representing decomposition ... done
At most K: 142ms input: 21692 K = 6
Number of actions Formula: 326ms for 281989 clauses
Layers: 10 paths 816
Layer 1 g 0 = 0 - 1 / 0 clauses 334153
Layer 1 g 1 = 2 - 3 / 2 clauses 334153
Layer 1 g 2 = 4 - 5 / 4 clauses 334153
Layer 1 g 3 = 6 - 7 / 6 clauses 334153
Layer 1 g 4 = 8 - 9 / 8 clauses 334153
Layer 1 g 5 = 10 - 11 / 10 clauses 334153
Layer 1 g 6 = 12 - 13 / 12 clauses 334153
Layer 1 g 7 = 14 - 15 / 14 clauses 334153
Layer 1 g 8 = 16 - 17 / 16 clauses 334153
Layer 1 g 9 = 18 - 19 / 18 clauses 334153
Layer 1 g 10 = 20 - 21 / 20 clauses 334153
Layer 1 g 11 = 22 - 23 / 22 clauses 334153
Layer 1 g 12 = 24 - 25 / 24 clauses 334153
Layer 1 g 13 = 26 - 27 / 26 clauses 334153
Layer 1 g 14 = 28 - 29 / 28 clauses 334153
Layer 1 g 15 = 30 - 31 / 30 clauses 334153
Layer 1 g 16 = 32 - 33 / 32 clauses 334153
Layer 1 g 17 = 34 - 35 / 34 clauses 334153
Layer 1 g 18 = 36 - 37 / 36 clauses 334153
Layer 1 g 19 = 38 - 39 / 38 clauses 334153
Layer 1 g 20 = 40 - 41 / 40 clauses 334153
Layer 1 g 21 = 42 - 43 / 42 clauses 334153
Layer 1 g 22 = 44 - 45 / 44 clauses 334153
Layer 1 g 23 = 46 - 47 / 46 clauses 334153
Layer 1 g 24 = 48 - 49 / 48 clauses 334153
Layer 1 g 25 = 50 - 51 / 50 clauses 334153
Layer 1 g 26 = 52 - 53 / 52 clauses 334153
Layer 1 g 27 = 54 - 55 / 54 clauses 334153
Layer 1 g 28 = 56 - 57 / 56 clauses 334153
Layer 1 g 29 = 58 - 59 / 58 clauses 334153
Layer 1 g 30 = 60 - 61 / 60 clauses 334153
Layer 1 g 31 = 62 - 63 / 62 clauses 334153
Layer 1 g 32 = 64 - 65 / 64 clauses 334153
Layer 1 g 33 = 66 - 67 / 66 clauses 334153
Layer 1 g 34 = 68 - 69 / 68 clauses 334153
Layer 1 g 35 = 70 - 71 / 70 clauses 334153
Layer 1 g 36 = 72 - 73 / 72 clauses 334153
Layer 1 g 37 = 74 - 75 / 74 clauses 334153
Layer 1 g 38 = 76 - 77 / 76 clauses 334153
Layer 1 g 39 = 78 - 79 / 78 clauses 334153
Layer 1 g 40 = 80 - 81 / 80 clauses 334153
Layer 1 g 41 = 82 - 83 / 82 clauses 334153
Layer 1 g 42 = 84 - 85 / 84 clauses 334153
Layer 1 g 43 = 86 - 87 / 86 clauses 334153
Layer 1 g 44 = 88 - 89 / 88 clauses 334153
Layer 1 g 45 = 90 - 91 / 90 clauses 334153
Layer 1 g 46 = 92 - 93 / 92 clauses 334153
Layer 1 g 47 = 94 - 95 / 94 clauses 334153
Layer 1 g 48 = 96 - 97 / 96 clauses 334153
Layer 1 g 49 = 98 - 99 / 98 clauses 334153
Layer 1 g 50 = 100 - 101 / 100 clauses 334153
Layer 1 g 51 = 102 - 103 / 102 clauses 334153
Layer 1 g 52 = 104 - 105 / 104 clauses 334153
Layer 1 g 53 = 106 - 107 / 106 clauses 334153
Layer 1 g 54 = 108 - 109 / 108 clauses 334153
Layer 1 g 55 = 110 - 111 / 110 clauses 334153
Layer 1 g 56 = 112 - 113 / 112 clauses 334153
Layer 1 g 57 = 114 - 115 / 114 clauses 334153
Layer 1 g 58 = 116 - 117 / 116 clauses 334153
Layer 1 g 59 = 118 - 119 / 118 clauses 334153
Layer 1 g 60 = 120 - 121 / 120 clauses 334153
Layer 1 g 61 = 122 - 123 / 122 clauses 334153
Layer 1 g 62 = 124 - 125 / 124 clauses 334153
Layer 1 g 63 = 126 - 127 / 126 clauses 334153
Layer 1 g 64 = 128 - 129 / 128 clauses 334153
Layer 1 g 65 = 130 - 131 / 130 clauses 334153
Layer 1 g 66 = 132 - 133 / 132 clauses 334153
Layer 1 g 67 = 134 - 135 / 134 clauses 334153
Layer 1 g 68 = 136 - 137 / 136 clauses 334153
Layer 1 g 69 = 138 - 139 / 138 clauses 334153
Layer 1 g 70 = 140 - 141 / 140 clauses 334153
Layer 1 g 71 = 142 - 143 / 142 clauses 334153
Layer 1 g 72 = 144 - 145 / 144 clauses 334153
Layer 1 g 73 = 146 - 147 / 146 clauses 334153
Layer 1 g 74 = 148 - 149 / 148 clauses 334153
Layer 1 g 75 = 150 - 151 / 150 clauses 334153
Layer 1 g 76 = 152 - 153 / 152 clauses 334153
Layer 1 g 77 = 154 - 155 / 154 clauses 334153
Layer 1 g 78 = 156 - 157 / 156 clauses 334153
Layer 1 g 79 = 158 - 159 / 158 clauses 334153
Layer 1 g 80 = 160 - 161 / 160 clauses 334153
Layer 1 g 81 = 162 - 163 / 162 clauses 334153
Layer 1 g 82 = 164 - 165 / 164 clauses 334153
Layer 1 g 83 = 166 - 167 / 166 clauses 334153
Layer 1 g 84 = 168 - 169 / 168 clauses 334153
Layer 1 g 85 = 170 - 171 / 170 clauses 334153
Layer 1 g 86 = 172 - 173 / 172 clauses 334153
Layer 1 g 87 = 174 - 175 / 174 clauses 334153
Layer 1 g 88 = 176 - 177 / 176 clauses 334153
Layer 1 g 89 = 178 - 179 / 178 clauses 334153
Layer 1 g 90 = 180 - 181 / 180 clauses 334153
Layer 1 g 91 = 182 - 183 / 182 clauses 334153
Layer 1 g 92 = 184 - 185 / 184 clauses 334153
Layer 1 g 93 = 186 - 187 / 186 clauses 334153
Layer 1 g 94 = 188 - 189 / 188 clauses 334153
Layer 1 g 95 = 190 - 191 / 190 clauses 334153
Layer 1 g 96 = 192 - 193 / 192 clauses 334153
Layer 1 g 97 = 194 - 195 / 194 clauses 334153
Layer 1 g 98 = 196 - 197 / 196 clauses 334153
Layer 1 g 99 = 198 - 199 / 198 clauses 334153
Layer 1 g 100 = 200 - 201 / 200 clauses 334153
Layer 1 g 101 = 202 - 203 / 202 clauses 334153
Layer 1 g 102 = 204 - 205 / 204 clauses 334153
Layer 1 g 103 = 206 - 207 / 206 clauses 334153
Layer 1 g 104 = 208 - 209 / 208 clauses 334153
Layer 1 g 105 = 210 - 211 / 210 clauses 334153
Layer 1 g 106 = 212 - 213 / 212 clauses 334153
Layer 1 g 107 = 214 - 215 / 214 clauses 334153
Layer 1 g 108 = 216 - 217 / 216 clauses 334153
Layer 1 g 109 = 218 - 219 / 218 clauses 334153
Layer 1 g 110 = 220 - 221 / 220 clauses 334153
Layer 1 g 111 = 222 - 223 / 222 clauses 334153
Layer 1 g 112 = 224 - 225 / 224 clauses 334153
Layer 1 g 113 = 226 - 227 / 226 clauses 334153
Layer 1 g 114 = 228 - 229 / 228 clauses 334153
Layer 1 g 115 = 230 - 231 / 230 clauses 334153
Layer 1 g 116 = 232 - 233 / 232 clauses 334153
Layer 1 g 117 = 234 - 235 / 234 clauses 334153
Layer 1 g 118 = 236 - 237 / 236Still waiting ... running for 70483 will abort at 9223372036854766229
 clauses 334153
Layer 1 g 119 = 238 - 239 / 238 clauses 334153
Layer 1 g 120 = 240 - 241 / 240 clauses 334153
Layer 1 g 121 = 242 - 243 / 242 clauses 334153
Layer 1 g 122 = 244 - 245 / 244 clauses 334153
Layer 1 g 123 = 246 - 247 / 246 clauses 334153
Layer 1 g 124 = 248 - 249 / 248 clauses 334153
Layer 1 g 125 = 250 - 251 / 250 clauses 334153
Layer 1 g 126 = 252 - 253 / 252 clauses 334153
Layer 1 g 127 = 254 - 255 / 254 clauses 334153
Layer 1 g 128 = 256 - 257 / 256 clauses 334153
Layer 1 g 129 = 258 - 259 / 258 clauses 334153
Layer 1 g 130 = 260 - 261 / 260 clauses 334153
Layer 1 g 131 = 262 - 263 / 262 clauses 334153
Layer 1 g 132 = 264 - 265 / 264 clauses 334153
Layer 1 g 133 = 266 - 267 / 266 clauses 334153
Layer 1 g 134 = 268 - 269 / 268 clauses 334153
Layer 1 g 135 = 270 - 271 / 270 clauses 334153
Layer 1 g 136 = 272 - 273 / 272 clauses 334153
Layer 1 g 137 = 274 - 275 / 274 clauses 334153
Layer 1 g 138 = 276 - 277 / 276 clauses 334153
Layer 1 g 139 = 278 - 279 / 278 clauses 334153
Layer 1 g 140 = 280 - 281 / 280 clauses 334153
Layer 1 g 141 = 282 - 283 / 282 clauses 334153
Layer 1 g 142 = 284 - 285 / 284 clauses 334153
Layer 1 g 143 = 286 - 287 / 286 clauses 334153
Layer 1 g 144 = 288 - 289 / 288 clauses 334153
Layer 1 g 145 = 290 - 291 / 290 clauses 334153
Layer 1 g 146 = 292 - 293 / 292 clauses 334153
Layer 1 g 147 = 294 - 295 / 294 clauses 334153
Layer 1 g 148 = 296 - 297 / 296 clauses 334153
Layer 1 g 149 = 298 - 299 / 298 clauses 334153
Layer 1 g 150 = 300 - 301 / 300 clauses 334153
Layer 1 g 151 = 302 - 303 / 302 clauses 334153
Layer 1 g 152 = 304 - 305 / 304 clauses 334153
Layer 1 g 153 = 306 - 307 / 306 clauses 334153
Layer 1 g 154 = 308 - 309 / 308 clauses 334153
Layer 1 g 155 = 310 - 311 / 310 clauses 334153
Layer 1 g 156 = 312 - 313 / 312 clauses 334153
Layer 1 g 157 = 314 - 315 / 314 clauses 334153
Layer 1 g 158 = 316 - 317 / 316 clauses 334153
Layer 1 g 159 = 318 - 319 / 318 clauses 334153
Layer 1 g 160 = 320 - 321 / 320 clauses 334153
Layer 1 g 161 = 322 - 323 / 322 clauses 334153
Layer 1 g 162 = 324 - 325 / 324 clauses 334153
Layer 1 g 163 = 326 - 327 / 326 clauses 334153
Layer 1 g 164 = 328 - 329 / 328 clauses 334153
Layer 1 g 165 = 330 - 331 / 330 clauses 334153
Layer 1 g 166 = 332 - 333 / 332 clauses 334153
Layer 1 g 167 = 334 - 335 / 334 clauses 334153
Layer 1 g 168 = 336 - 337 / 336 clauses 334153
Layer 1 g 169 = 338 - 339 / 338 clauses 334153
Layer 1 g 170 = 340 - 341 / 340 clauses 334153
Layer 1 g 171 = 342 - 343 / 342 clauses 334153
Layer 1 g 172 = 344 - 345 / 344 clauses 334153
Layer 1 g 173 = 346 - 347 / 346 clauses 334153
Layer 1 g 174 = 348 - 349 / 348 clauses 334153
Layer 1 g 175 = 350 - 351 / 350 clauses 334153
Layer 1 g 176 = 352 - 353 / 352 clauses 334153
Layer 1 g 177 = 354 - 355 / 354 clauses 334153
Layer 1 g 178 = 356 - 357 / 356 clauses 334153
Layer 1 g 179 = 358 - 359 / 358 clauses 334153
Layer 1 g 180 = 360 - 361 / 360 clauses 334153
Layer 1 g 181 = 362 - 363 / 362 clauses 334153
Layer 1 g 182 = 364 - 365 / 364 clauses 334153
Layer 1 g 183 = 366 - 367 / 366 clauses 334153
Layer 1 g 184 = 368 - 369 / 368 clauses 334153
Layer 1 g 185 = 370 - 371 / 370 clauses 334153
Layer 1 g 186 = 372 - 373 / 372 clauses 334153
Layer 1 g 187 = 374 - 375 / 374 clauses 334153
Layer 1 g 188 = 376 - 377 / 376 clauses 334153
Layer 1 g 189 = 378 - 379 / 378 clauses 334153
Layer 1 g 190 = 380 - 381 / 380 clauses 334153
Layer 1 g 191 = 382 - 383 / 382 clauses 334153
Layer 1 g 192 = 384 - 385 / 384 clauses 334153
Layer 1 g 193 = 386 - 387 / 386 clauses 334153
Layer 1 g 194 = 388 - 389 / 388 clauses 334153
Layer 1 g 195 = 390 - 391 / 390 clauses 334153
Layer 1 g 196 = 392 - 393 / 392 clauses 334153
Layer 1 g 197 = 394 - 395 / 394 clauses 334153
Layer 1 g 198 = 396 - 397 / 396 clauses 334153
Layer 1 g 199 = 398 - 399 / 398 clauses 334153
Layer 1 g 200 = 400 - 401 / 400 clauses 334153
Layer 1 g 201 = 402 - 403 / 402 clauses 334153
Layer 1 g 202 = 404 - 405 / 404 clauses 334153
Layer 1 g 203 = 406 - 407 / 406 clauses 334153
Layer 1 g 204 = 408 - 409 / 408 clauses 334153
Layer 1 g 205 = 410 - 411 / 410 clauses 334153
Layer 1 g 206 = 412 - 413 / 412 clauses 334153
Layer 1 g 207 = 414 - 415 / 414 clauses 334153
Layer 1 g 208 = 416 - 417 / 416 clauses 334153
Layer 1 g 209 = 418 - 419 / 418 clauses 334153
Layer 1 g 210 = 420 - 421 / 420 clauses 334153
Layer 1 g 211 = 422 - 423 / 422 clauses 334153
Layer 1 g 212 = 424 - 425 / 424 clauses 334153
Layer 1 g 213 = 426 - 427 / 426 clauses 334153
Layer 1 g 214 = 428 - 429 / 428 clauses 334153
Layer 1 g 215 = 430 - 431 / 430 clauses 334153
Layer 1 g 216 = 432 - 433 / 432 clauses 334153
Layer 1 g 217 = 434 - 435 / 434 clauses 334153
Layer 1 g 218 = 436 - 437 / 436 clauses 334153
Layer 1 g 219 = 438 - 439 / 438 clauses 334153
Layer 1 g 220 = 440 - 441 / 440 clauses 334153
Layer 1 g 221 = 442 - 443 / 442 clauses 334153
Layer 1 g 222 = 444 - 445 / 444 clauses 334153
Layer 1 g 223 = 446 - 447 / 446 clauses 334153
Layer 1 g 224 = 448 - 449 / 448 clauses 334153
Layer 1 g 225 = 450 - 451 / 450 clauses 334153
Layer 1 g 226 = 452 - 453 / 452 clauses 334153
Layer 1 g 227 = 454 - 455 / 454 clauses 334153
Layer 1 g 228 = 456 - 457 / 456 clauses 334153
Layer 1 g 229 = 458 - 459 / 458 clauses 334153
Layer 1 g 230 = 460 - 461 / 460 clauses 334153
Layer 1 g 231 = 462 - 463 / 462 clauses 334153
Layer 1 g 232 = 464 - 465 / 464 clauses 334153
Layer 1 g 233 = 466 - 467 / 466 clauses 334153
Layer 1 g 234 = 468 - 469 / 468 clauses 334153
Layer 1 g 235 = 470 - 471 / 470 clauses 334153
Layer 1 g 236 = 472 - 473 / 472 clauses 334153
Layer 1 g 237 = 474 - 475 / 474 clauses 334153
Layer 1 g 238 = 476 - 477 / 476 clauses 334153
Layer 1 g 239 = 478 - 479 / 478 clauses 334153
Layer 1 g 240 = 480 - 481 / 480 clauses 334153
Layer 1 g 241 = 482 - 483 / 482 clauses 334153
Layer 1 g 242 = 484 - 485 / 484 clauses 334153
Layer 1 g 243 = 486 - 487 / 486 clauses 334153
Layer 1 g 244 = 488 - 489 / 488 clauses 334153
Layer 1 g 245 = 490 - 491 / 490 clauses 334153
Layer 1 g 246 = 492 - 493 / 492 clauses 334153
Layer 1 g 247 = 494 - 495 / 494 clauses 334153
Layer 1 g 248 = 496 - 497 / 496 clauses 334153
Layer 1 g 249 = 498 - 499 / 498 clauses 334153
Layer 1 g 250 = 500 - 501 / 500 clauses 334153
Layer 1 g 251 = 502 - 503 / 502 clauses 334153
Layer 1 g 252 = 504 - 505 / 504 clauses 334153
Layer 1 g 253 = 506 - 507 / 506 clauses 334153
Layer 1 g 254 = 508 - 509 / 508 clauses 334153
Layer 1 g 255 = 510 - 511 / 510 clauses 334153
Layer 1 g 256 = 512 - 513 / 512 clauses 334153
Layer 1 g 257 = 514 - 515 / 514 clauses 334153
Layer 1 g 258 = 516 - 517 / 516 clauses 334153
Layer 1 g 259 = 518 - 519 / 518 clauses 334153
Layer 1 g 260 = 520 - 521 / 520 clauses 334153
Layer 1 g 261 = 522 - 523 / 522 clauses 334153
Layer 1 g 262 = 524 - 525 / 524 clauses 334153
Layer 1 g 263 = 526 - 527 / 526 clauses 334153
Layer 1 g 264 = 528 - 529 / 528 clauses 334153
Layer 1 g 265 = 530 - 531 / 530 clauses 334153
Layer 1 g 266 = 532 - 533 / 532 clauses 334153
Layer 1 g 267 = 534 - 535 / 534Still waiting ... running for 148959 will abort at 9223372036854766229
 clauses 334153
Layer 1 g 268 = 536 - 537 / 536 clauses 334153
Layer 1 g 269 = 538 - 539 / 538 clauses 334153
Layer 1 g 270 = 540 - 541 / 540 clauses 334153
Layer 1 g 271 = 542 - 543 / 542 clauses 334153
Layer 1 g 272 = 544 - 545 / 544 clauses 334153
Layer 1 g 273 = 546 - 547 / 546
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 162.721 MEMPEAK_KBS 8022941.696
