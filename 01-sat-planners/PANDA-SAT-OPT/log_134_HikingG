PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/HikingG/domain.hddl instances/HikingG/p02.hddl"


Planner Configuration
=====================
Domain: instances/HikingG/domain.hddl
Problem: instances/HikingG/p02.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p02.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 20
Compiling negative preconditions ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 20
Compiling split parameters ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 20
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 20
Grounded planning graph ... done in 856ms.
	Number of Grounded Actions 4900
	Number of Grounded Literals 76
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 20
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 20
Grounding ... done.
	number of abstract tasks = 49
	number of tasks = 2672
	number of decomposition methods = 2668
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 1272
	number of epsilon methods = 0
	number of primitive tasks = 2623
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 49
	number of tasks = 2672
	number of decomposition methods = 2668
	number of predicates = 70
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 1272
	number of epsilon methods = 0
	number of primitive tasks = 2623
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 370ms.
	Number of Grounded Actions 2623
	Number of Grounded Literals 70
	number of abstract tasks = 49
	number of tasks = 2672
	number of decomposition methods = 2668
	number of predicates = 70
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 1272
	number of epsilon methods = 0
	number of primitive tasks = 2623
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 49
	number of tasks = 2672
	number of decomposition methods = 2668
	number of predicates = 70
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 1272
	number of epsilon methods = 0
	number of primitive tasks = 2623
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 49
	number of tasks = 2672
	number of decomposition methods = 2669
	number of predicates = 70
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 1272
	number of epsilon methods = 0
	number of primitive tasks = 2623
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 914
	number of tasks = 3537
	number of decomposition methods = 3534
	number of predicates = 70
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 1272
	number of epsilon methods = 0
	number of primitive tasks = 2623
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 914
	number of tasks = 3537
	number of decomposition methods = 3534
	number of predicates = 70
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 1272
	number of epsilon methods = 0
	number of primitive tasks = 2623
	number of constants = 0
Tasks 2623 - 3
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768563ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 105 will abort at 9223372036854768279
done
initial PDT has 16 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 8 leafs
SHOP LEAFS 6
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 7245
Size 7245 at 0/2623
Size 7243 at 500/2623
Size 7009 at 1000/2623
Size 2716 at 1500/2623
Size 2550 at 2000/2623
Size 1615 at 2500/2623
Size 1615
Size 1615 at 0/2623
Size 1143 at 500/2623
Size 1099 at 1000/2623
Size 944 at 1500/2623
Size 918 at 2000/2623
Size 153 at 2500/2623
Size 153
Size 149 at 0/2623
Size 145 at 500/2623
Size 123 at 1000/2623
Size 121 at 1500/2623
Size 121 at 2000/2623
Size 106 at 2500/2623
Size 106
Size 106 at 0/2623
Size 106 at 500/2623
Size 106 at 1000/2623
Size 106 at 1500/2623
Size 106 at 2000/2623
Size 106 at 2500/2623
Size 106
Invariant time: 0.456
Number of invariants: 106
Invariant Clauses 954
NUMBER OF CLAUSES 308451
NUMBER OF STATE CLAUSES 14177
NUMBER OF DECOMPOSITION CLAUSES 294274
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 4.6000000000000005% 95.4% 0.0% 
NUMBER OF PATHS 8
Starting cryptominisat5.5
Setting starttime of solver to 1604515515129
Command exited with non-zero status 20
0.06 0.00

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854766177
done
initial PDT has 35 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 19 leafs
SHOP LEAFS 8
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2120
NUMBER OF CLAUSES 331593
NUMBER OF STATE CLAUSES 20471
NUMBER OF DECOMPOSITION CLAUSES 311122
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 6.17% 93.83% 0.0% 
NUMBER OF PATHS 19
Starting cryptominisat5.5
Setting starttime of solver to 1604515516381
Command exited with non-zero status 20
0.07 0.00

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854764952
done
initial PDT has 67 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 41 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 4452
NUMBER OF CLAUSES 443502
NUMBER OF STATE CLAUSES 32564
NUMBER OF DECOMPOSITION CLAUSES 410938
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 7.34% 92.66% 0.0% 
NUMBER OF PATHS 41
Starting cryptominisat5.5
Setting starttime of solver to 1604515517853
Command exited with non-zero status 20
0.09 0.01

Time command gave the following runtime for the solver: 100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854763374
done
initial PDT has 107 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 76 leafs
SHOP LEAFS 24
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 8162
NUMBER OF CLAUSES 669541
NUMBER OF STATE CLAUSES 54323
NUMBER OF DECOMPOSITION CLAUSES 615218
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 8.11% 91.89% 0.0% 
NUMBER OF PATHS 76
Starting cryptominisat5.5
Setting starttime of solver to 1604515520018
Command exited with non-zero status 20
0.18 0.02

Time command gave the following runtime for the solver: 200
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854761161
done
initial PDT has 154 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 117 leafs
SHOP LEAFS 37
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 12508
NUMBER OF CLAUSES 844425
NUMBER OF STATE CLAUSES 76544
NUMBER OF DECOMPOSITION CLAUSES 767881
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 9.06% 90.94% 0.0% 
NUMBER OF PATHS 117
Starting cryptominisat5.5
Setting starttime of solver to 1604515522717
Command exited with non-zero status 20
0.36 0.00

Time command gave the following runtime for the solver: 360
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 207 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854758296
done
PDT has 164 leafs
SHOP LEAFS 53
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 17490
NUMBER OF CLAUSES 1022432
NUMBER OF STATE CLAUSES 100871
NUMBER OF DECOMPOSITION CLAUSES 921561
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 9.870000000000001% 90.13% 0.0% 
NUMBER OF PATHS 164
Starting cryptominisat5.5
Setting starttime of solver to 1604515525656
Command exited with non-zero status 20
0.54 0.01

Time command gave the following runtime for the solver: 550
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... Still waiting ... running for 105 will abort at 9223372036854755036
done
initial PDT has 266 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 217 leafs
SHOP LEAFS 72
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 23108
NUMBER OF CLAUSES 1204054
NUMBER OF STATE CLAUSES 127304
NUMBER OF DECOMPOSITION CLAUSES 1076750
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 10.57% 89.43% 0.0% 
NUMBER OF PATHS 217
Starting cryptominisat5.5
Setting starttime of solver to 1604515529326
Command exited with non-zero status 10
0.65 0.02

Time command gave the following runtime for the solver: 670
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_0;2,2692 2692 m0_trip_to1
0;2 15 pathaction!2_0;2,128
Consider method^1_0,3327 3327 m14_everyone_go_hiking
0 19 pathaction!1_0,1939
Consider method^4_0;2;1;8,3289 3289 m3_trip_to2
0;2;1;8 23 pathaction!4_0;2;1;8,650
Consider method^5_0;2;1;8;5,2480 2480 m5_walk_everyone
0;2;1;8;5 66 pathaction!5_0;2;1;8;5,2671
Consider method^3_0;1;0,2196 2196 m10_bring_tent
0;1;0 35 pathaction!3_0;1;0,142
Consider method^6_0;2;1;9;9;9,291 291 __UNIQUE-replacement_77
0;2;1;9;9;9 85 pathaction!6_0;2;1;9;9;9,2749
Consider method^6_0;2;1;9;9;5,192 192 m5_walk_everyone
0;2;1;9;9;5 30 pathaction!6_0;2;1;9;9;5,2665
Consider method^4_0;2;1;9,1721 1721 m2_trip_to2
0;2;1;9 17 pathaction!4_0;2;1;9,655
Consider method^8_0;2;1;8;5;2;2;2,3491 3491 m4_walk_everyone
0;2;1;8;5;2;2;2 81 pathaction!8_0;2;1;8;5;2;2;2,2671
Consider method^6_0;2;1;8;5;2,2490 2490 m5_walk_everyone
0;2;1;8;5;2 11 pathaction!6_0;2;1;8;5;2,2671
Consider method^2_0;1,56 56 m6_prepare_trip
0;1 32 pathaction!2_0;1,698
Consider method^7_0;2;1;8;5;2;2,361 361 m5_walk_everyone
0;2;1;8;5;2;2 37 pathaction!7_0;2;1;8;5;2;2,2671
Consider method^6_0;2;1;9;9;2,290 290 __UNIQUE-replacement_76
0;2;1;9;9;2 77 pathaction!6_0;2;1;9;9;2,2748
Consider method^5_0;2;1;8;9,3288 3288 __UNIQUE-replacement_813
0;2;1;8;9 55 pathaction!5_0;2;1;8;9,3485
Consider method^6_0;2;1;9;8;2,2811 2811 __UNIQUE-replacement_700
0;2;1;9;8;2 12 pathaction!6_0;2;1;9;8;2,3372
Consider method^9_0;2;1;9;9;5;2;2;2,1882 1882 m4_walk_everyone
0;2;1;9;9;5;2;2;2 6 pathaction!9_0;2;1;9;9;5;2;2;2,2665
Consider method^7_0;2;1;9;9;5;2,1310 1310 m5_walk_everyone
0;2;1;9;9;5;2 100 pathaction!7_0;2;1;9;9;5;2,2665
Consider method^3_0;2;1,80 80 m2_trip_to2
0;2;1 34 pathaction!3_0;2;1,664
Consider method^5_0;2;1;9;8,2813 2813 m3_trip_to2
0;2;1;9;8 44 pathaction!5_0;2;1;9;8,670
Consider method^8_0;2;1;9;8;5;2;2,2081 2081 m5_walk_everyone
0;2;1;9;8;5;2;2 13 pathaction!8_0;2;1;9;8;5;2;2,2666
Consider method^0_,3533 3533 __top_2
 49 pathaction!0_,3536
Consider method^5_0;2;1;9;9,292 292 m3_trip_to2
0;2;1;9;9 96 pathaction!5_0;2;1;9;9,657
Consider method^9_0;2;1;9;8;5;2;2;2,2483 2483 m4_walk_everyone
0;2;1;9;8;5;2;2;2 72 pathaction!9_0;2;1;9;8;5;2;2;2,2666
Consider method^5_0;2;1;8;2,3287 3287 __UNIQUE-replacement_812
0;2;1;8;2 47 pathaction!5_0;2;1;8;2,3484
Consider method^6_0;2;1;9;8;9,2812 2812 __UNIQUE-replacement_701
0;2;1;9;8;9 83 pathaction!6_0;2;1;9;8;9,3373
Consider method^3_0;1;1,1125 1125 m11_bring_cars
0;1;1 64 pathaction!3_0;1;1,30
Consider method^8_0;2;1;9;9;5;2;2,1544 1544 m5_walk_everyone
0;2;1;9;9;5;2;2 2 pathaction!8_0;2;1;9;9;5;2;2,2665
Consider method^6_0;2;1;9;8;5,2835 2835 m5_walk_everyone
0;2;1;9;8;5 42 pathaction!6_0;2;1;9;8;5,2666
Consider method^7_0;2;1;9;8;5;2,1574 1574 m5_walk_everyone
0;2;1;9;8;5;2 90 pathaction!7_0;2;1;9;8;5;2,2666


CHECKING primitive solution of length 56 ...
true 24 __method_precondition_m14_everyone_go_hiking_14_precondition[couple1,guy1,girl1,place0;]
true 20 __method_precondition_m10_bring_tent_10_precondition[tent2,place0,guy2;]
true 97 put_down[guy2,place0,tent2;]
true 51 __method_precondition_m11_bring_cars_11_precondition[car3,place0,car2;]
true 79 nop[;]
true 46 __method_precondition_m0_trip_to1_0_precondition[couple1,guy1,girl1,place0;]
true 29 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 0 __method_precondition_m3_trip_to2_3_precondition[girl1,tent2,couple1,place0,car2,guy1,car0,place1;]
true 48 drive_tent[guy1,place0,place1,car2,tent2;]
true 8 drive[girl1,place0,place1,car0;]
true 86 put_up[guy1,place1,tent2;]
true 45 drive_passenger[girl1,place1,place0,car0,guy1;]
true 16 __method_precondition_m5_walk_everyone_5_precondition[place0,guy2,couple2,place1,girl2;]
true 80 walk_together[tent2,place1,guy2,place0,girl2,couple2;]
true 4 __method_precondition_m5_walk_everyone_5_precondition[place0,guy0,couple0,place1,girl0;]
true 104 walk_together[tent2,place1,guy0,place0,girl0,couple0;]
true 82 __method_precondition_m5_walk_everyone_5_precondition[place0,guy1,couple1,place1,girl1;]
true 73 walk_together[tent2,place1,guy1,place0,girl1,couple1;]
true 101 nop[;]
true 1 put_down[girl1,place1,tent2;]
true 98 drive_passenger[guy1,place1,place0,car2,girl1;]
true 91 drive[guy1,place0,place1,car2;]
true 3 drive[girl1,place0,place1,car0;]
true 36 __method_precondition_m2_trip_to2_2_precondition[place1,place2;]
true 9 __method_precondition_m3_trip_to2_3_precondition[girl1,tent2,couple1,place1,car2,guy1,car0,place2;]
true 84 drive_tent[guy1,place1,place2,car2,tent2;]
true 26 drive[girl1,place1,place2,car0;]
true 52 put_up[guy1,place2,tent2;]
true 56 drive_passenger[girl1,place2,place1,car0,guy1;]
true 59 __method_precondition_m5_walk_everyone_5_precondition[place1,guy0,couple0,place2,girl0;]
true 41 walk_together[tent2,place2,guy0,place1,girl0,couple0;]
true 25 __method_precondition_m5_walk_everyone_5_precondition[place1,guy1,couple1,place2,girl1;]
true 71 walk_together[tent2,place2,guy1,place1,girl1,couple1;]
true 10 __method_precondition_m5_walk_everyone_5_precondition[place1,guy2,couple2,place2,girl2;]
true 60 walk_together[tent2,place2,guy2,place1,girl2,couple2;]
true 54 nop[;]
true 43 put_down[girl1,place2,tent2;]
true 89 drive_passenger[guy1,place2,place1,car2,girl1;]
true 14 drive[guy1,place1,place2,car2;]
true 95 drive[girl1,place1,place2,car0;]
true 94 __method_precondition_m3_trip_to2_3_precondition[girl1,tent2,couple1,place2,car0,guy1,car2,place3;]
true 33 drive_tent[guy1,place2,place3,car0,tent2;]
true 63 drive[girl1,place2,place3,car2;]
true 61 put_up[guy1,place3,tent2;]
true 76 drive_passenger[girl1,place3,place2,car2,guy1;]
true 62 __method_precondition_m5_walk_everyone_5_precondition[place2,guy2,couple2,place3,girl2;]
true 102 walk_together[tent2,place3,guy2,place2,girl2,couple2;]
true 18 __method_precondition_m5_walk_everyone_5_precondition[place2,guy1,couple1,place3,girl1;]
true 5 walk_together[tent2,place3,guy1,place2,girl1,couple1;]
true 7 __method_precondition_m5_walk_everyone_5_precondition[place2,guy0,couple0,place3,girl0;]
true 21 walk_together[tent2,place3,guy0,place2,girl0,couple0;]
true 65 nop[;]
true 74 put_down[girl1,place3,tent2;]
true 67 drive_passenger[guy1,place3,place2,car0,girl1;]
true 70 drive[guy1,place2,place3,car0;]
true 22 drive[girl1,place2,place3,car2;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 1830
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 3660
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 5490
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 4
ICAPS: 7320
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 5
ICAPS: 9150
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 6
ICAPS: 10980
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 7
ICAPS: 12810
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
LEN 8
ICAPS: 14640
TSTG: 2147483647
Method: 2147483647
DP max: 10
Taking minimum: 10
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 38
  lower bound = 7

Running SAT search with cost bound = 22
==================================================
  upper bound = 38
  lower bound = 7
LEN 22
ICAPS: 40260
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854750474
DP max: 24
Taking minimum: 24
Generating initial PDT ... done
initial PDT has 1722 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 1589 leafs
SHOP LEAFS 653
Assignment implications
Generating clauses representing decomposition ... done
At most K: 1504ms input: 27534 K = 22
Number of actions Formula: 1708ms for 1239007 clauses
Layers: 11 paths 1589
Layer 1 g 0 = 0 - 1 / 0 clauses 1264845
Layer 1 g 1 = 2 - 3 / 2 clauses 1264845
Layer 1 g 2 = 4 - 5 / 4 clauses 1264845
Layer 1 g 3 = 6 - 7 / 6 clauses 1264845
Layer 1 g 4 = 8 - 9 / 8 clauses 1264845
Layer 1 g 5 = 10 - 11 / 10 clauses 1264845
Layer 1 g 6 = 12 - 13 / 12 clauses 1264845
Layer 1 g 7 = 14 - 15 / 14 clauses 1264845
Layer 1 g 8 = 16 - 17 / 16 clauses 1264845
Layer 1 g 9 = 18 - 19 / 18 clauses 1264845
Layer 1 g 10 = 20 - 21 / 20 clauses 1264845
Layer 1 g 11 = 22 - 23 / 22 clauses 1264845
Layer 1 g 12 = 24 - 25 / 24 clauses 1264845
Layer 1 g 13 = 26 - 27 / 26 clauses 1264845
Layer 1 g 14 = 28 - 29 / 28 clauses 1264845
Layer 1 g 15 = 30 - 31 / 30 clauses 1264845
Layer 1 g 16 = 32 - 33 / 32 clauses 1264845
Layer 1 g 17 = 34 - 35 / 34 clauses 1264845
Layer 1 g 18 = 36 - 37 / 36 clauses 1264845
Layer 1 g 19 = 38 - 39 / 38 clauses 1264845
Layer 1 g 20 = 40 - 41 / 40 clauses 1264845
Layer 1 g 21 = 42 - 43 / 42 clauses 1264845
Layer 1 g 22 = 44 - 45 / 44 clauses 1264845
Layer 1 g 23 = 46 - 47 / 46 clauses 1264845
Layer 1 g 24 = 48 - 49 / 48 clauses 1264845
Layer 1 g 25 = 50 - 51 / 50 clauses 1264845
Layer 1 g 26 = 52 - 53 / 52 clauses 1264845
Layer 1 g 27 = 54 - 55 / 54 clauses 1264845
Layer 1 g 28 = 56 - 57 / 56 clauses 1264845
Layer 1 g 29 = 58 - 59 / 58 clauses 1264845
Layer 1 g 30 = 60 - 61 / 60 clauses 1264845
Layer 1 g 31 = 62 - 63 / 62 clauses 1264845
Layer 1 g 32 = 64 - 65 / 64 clauses 1264845
Layer 1 g 33 = 66 - 67 / 66 clauses 1264845
Layer 1 g 34 = 68 - 69 / 68Still waiting ... running for 78720 will abort at 9223372036854750474
 clauses 1264845
Layer 1 g 35 = 70 - 71 / 70 clauses 1264845
Layer 1 g 36 = 72 - 73 / 72 clauses 1264845
Layer 1 g 37 = 74 - 75 / 74 clauses 1264845
Layer 1 g 38 = 76 - 77 / 76 clauses 1264845
Layer 1 g 39 = 78 - 79 / 78 clauses 1264845
Layer 1 g 40 = 80 - 81 / 80 clauses 1264845
Layer 1 g 41 = 82 - 83 / 82 clauses 1264845
Layer 1 g 42 = 84 - 85 / 84 clauses 1264845
Layer 1 g 43 = 86 - 87 / 86 clauses 1264845
Layer 1 g 44 = 88 - 89 / 88 clauses 1264845
Layer 1 g 45 = 90 - 91 / 90 clauses 1264845
Layer 1 g 46 = 92 - 93 / 92 clauses 1264845
Layer 1 g 47 = 94 - 95 / 94 clauses 1264845
Layer 1 g 48 = 96 - 97 / 96 clauses 1264845
Layer 1 g 49 = 98 - 99 / 98 clauses 1264845
Layer 1 g 50 = 100 - 101 / 100 clauses 1264845
Layer 1 g 51 = 102 - 103 / 102 clauses 1264845
Layer 1 g 52 = 104 - 105 / 104 clauses 1264845
Layer 1 g 53 = 106 - 107 / 106 clauses 1264845
Layer 1 g 54 = 108 - 109 / 108 clauses 1264845
Layer 1 g 55 = 110 - 111 / 110 clauses 1264845
Layer 1 g 56 = 112 - 113 / 112 clauses 1264845
Layer 1 g 57 = 114 - 115 / 114 clauses 1264845
Layer 1 g 58 = 116 - 117 / 116 clauses 1264845
Layer 1 g 59 = 118 - 119 / 118 clauses 1264845
Layer 1 g 60 = 120 - 121 / 120 clauses 1264845
Layer 1 g 61 = 122 - 123 / 122 clauses 1264845
Layer 1 g 62 = 124 - 125 / 124 clauses 1264845
Layer 1 g 63 = 126 - 127 / 126
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 160.574 MEMPEAK_KBS 8018935.808
