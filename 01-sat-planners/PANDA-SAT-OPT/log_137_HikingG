PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/HikingG/domain.hddl instances/HikingG/p05.hddl"


Planner Configuration
=====================
Domain: instances/HikingG/domain.hddl
Problem: instances/HikingG/p05.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p05.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 23
Compiling negative preconditions ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 23
Compiling split parameters ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 23
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 23
Grounded planning graph ... done in 1417ms.
	Number of Grounded Actions 13228
	Number of Grounded Literals 127
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 23
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 23
Grounding ... done.
	number of abstract tasks = 94
	number of tasks = 6842
	number of decomposition methods = 8323
	number of predicates = 127
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2337
	number of epsilon methods = 0
	number of primitive tasks = 6748
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 94
	number of tasks = 6842
	number of decomposition methods = 8323
	number of predicates = 118
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2337
	number of epsilon methods = 0
	number of primitive tasks = 6748
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 1034ms.
	Number of Grounded Actions 6748
	Number of Grounded Literals 118
	number of abstract tasks = 94
	number of tasks = 6842
	number of decomposition methods = 8323
	number of predicates = 118
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2337
	number of epsilon methods = 0
	number of primitive tasks = 6748
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 94
	number of tasks = 6842
	number of decomposition methods = 8323
	number of predicates = 118
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2337
	number of epsilon methods = 0
	number of primitive tasks = 6748
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 94
	number of tasks = 6842
	number of decomposition methods = 8324
	number of predicates = 118
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2337
	number of epsilon methods = 0
	number of primitive tasks = 6748
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1823
	number of tasks = 8571
	number of decomposition methods = 10053
	number of predicates = 118
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2337
	number of epsilon methods = 0
	number of primitive tasks = 6748
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1823
	number of tasks = 8571
	number of decomposition methods = 10053
	number of predicates = 118
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 2337
	number of epsilon methods = 0
	number of primitive tasks = 6748
	number of constants = 0
Tasks 6748 - 6
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854764406ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854762139
done
initial PDT has 16 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 8 leafs
SHOP LEAFS 6
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 20709
Size 20707 at 0/6748
Size 20599 at 500/6748
Size 20599 at 1000/6748
Size 10846 at 1500/6748
Size 10240 at 2000/6748
Size 6876 at 2500/6748
Size 5642 at 3000/6748
Size 5642 at 3500/6748
Size 5642 at 4000/6748
Size 5642 at 4500/6748
Size 5642 at 5000/6748
Size 5642 at 5500/6748
Size 5642 at 6000/6748
Size 5642 at 6500/6748
Size 5642
Size 5638 at 0/6748
Size 4864 at 500/6748
Size 4864 at 1000/6748
Size 4864 at 1500/6748
Size 4864 at 2000/6748
Size 1614 at 2500/6748
Size 1451 at 3000/6748
Size 1450 at 3500/6748
Size 1450 at 4000/6748
Size 1450 at 4500/6748
Size 1450 at 5000/6748
Size 1450 at 5500/6748
Size 1450 at 6000/6748
Size 1450 at 6500/6748
Size 1450
Size 1450 at 0/6748
Size 1450 at 500/6748
Size 1450 at 1000/6748
Size 1450 at 1500/6748
Size 1450 at 2000/6748
Size 399 at 2500/6748
Size 346 at 3000/6748
Size 346 at 3500/6748
Size 346 at 4000/6748
Size 346 at 4500/6748
Size 346 at 5000/6748
Size 346 at 5500/6748
Size 346 at 6000/6748
Size 346 at 6500/6748
Size 346
Size 346 at 0/6748
Size 346 at 500/6748
Size 346 at 1000/6748
Size 346 at 1500/6748
Size 346 at 2000/6748
Size 346 at 2500/6748
Size 346 at 3000/6748
Size 346 at 3500/6748
Size 346 at 4000/6748
Size 346 at 4500/6748
Size 346 at 5000/6748
Size 346 at 5500/6748
Size 346 at 6000/6748
Size 346 at 6500/6748
Size 346
Invariant time: 1.305
Number of invariants: 346
Invariant Clauses 3114
NUMBER OF CLAUSES 1705338
NUMBER OF STATE CLAUSES 41291
NUMBER OF DECOMPOSITION CLAUSES 1664047
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 2.42% 97.58% 0.0% 
NUMBER OF PATHS 8
Starting cryptominisat5.5
Setting starttime of solver to 1604516059408
Command exited with non-zero status 20
0.30 0.01

Time command gave the following runtime for the solver: 310
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854756160
done
initial PDT has 35 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 19 leafs
SHOP LEAFS 8
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 6920
NUMBER OF CLAUSES 1756341
NUMBER OF STATE CLAUSES 55817
NUMBER OF DECOMPOSITION CLAUSES 1700524
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 3.18% 96.82000000000001% 0.0% 
NUMBER OF PATHS 19
Starting cryptominisat5.5
Setting starttime of solver to 1604516063211
Command exited with non-zero status 20
0.33 0.00

Time command gave the following runtime for the solver: 330
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854752439
done
initial PDT has 67 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 41 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 14532
NUMBER OF CLAUSES 1900599
NUMBER OF STATE CLAUSES 79838
NUMBER OF DECOMPOSITION CLAUSES 1820761
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 4.2% 95.8% 0.0% 
NUMBER OF PATHS 41
Starting cryptominisat5.5
Setting starttime of solver to 1604516067227
Command exited with non-zero status 20
0.39 0.01

Time command gave the following runtime for the solver: 400
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854748351
done
initial PDT has 114 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 76 leafs
SHOP LEAFS 24
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 1ms for 0 clauses
Invariant Clauses 26642
NUMBER OF CLAUSES 2163355
NUMBER OF STATE CLAUSES 117893
NUMBER OF DECOMPOSITION CLAUSES 2045462
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 5.45% 94.55% 0.0% 
NUMBER OF PATHS 76
Starting cryptominisat5.5
Setting starttime of solver to 1604516071677
Command exited with non-zero status 20
0.47 0.03

Time command gave the following runtime for the solver: 500
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854743716
done
initial PDT has 178 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 126 leafs
SHOP LEAFS 39
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 43942
NUMBER OF CLAUSES 2660898
NUMBER OF STATE CLAUSES 174764
NUMBER OF DECOMPOSITION CLAUSES 2486134
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 6.57% 93.43% 0.0% 
NUMBER OF PATHS 126
Starting cryptominisat5.5
Setting starttime of solver to 1604516077557
Command exited with non-zero status 20
0.71 0.02

Time command gave the following runtime for the solver: 730
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854737533
done
initial PDT has 261 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 193 leafs
SHOP LEAFS 60
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 67124
NUMBER OF CLAUSES 3560086
NUMBER OF STATE CLAUSES 255548
NUMBER OF DECOMPOSITION CLAUSES 3304538
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 7.18% 92.82000000000001% 0.0% 
NUMBER OF PATHS 193
Starting cryptominisat5.5
Setting starttime of solver to 1604516086681
Command exited with non-zero status 20
1.20 0.05

Time command gave the following runtime for the solver: 1250
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854727605
done
initial PDT has 358 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 279 leafs
SHOP LEAFS 88
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 96880
NUMBER OF CLAUSES 5073914
NUMBER OF STATE CLAUSES 365657
NUMBER OF DECOMPOSITION CLAUSES 4708257
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 7.21% 92.79% 0.0% 
NUMBER OF PATHS 279
Starting cryptominisat5.5
Setting starttime of solver to 1604516101321
Command exited with non-zero status 20
4.80 0.09

Time command gave the following runtime for the solver: 4890
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854709190
done
initial PDT has 468 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 377 leafs
SHOP LEAFS 122
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 130788
NUMBER OF CLAUSES 6027577
NUMBER OF STATE CLAUSES 468599
NUMBER OF DECOMPOSITION CLAUSES 5558978
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 7.7700000000000005% 92.23% 0.0% 
NUMBER OF PATHS 377
Starting cryptominisat5.5
Setting starttime of solver to 1604516121187
Command exited with non-zero status 20
11.36 0.18

Time command gave the following runtime for the solver: 11540
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 12
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854682413
done
initial PDT has 590 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 487 leafs
SHOP LEAFS 162
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 168848
NUMBER OF CLAUSES 6996735
NUMBER OF STATE CLAUSES 580730
NUMBER OF DECOMPOSITION CLAUSES 6416005
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 8.3% 91.7% 0.0% 
NUMBER OF PATHS 487
Starting cryptominisat5.5
Setting starttime of solver to 1604516151547
Command exited with non-zero status 20
17.55 0.20

Time command gave the following runtime for the solver: 17750
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 13
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854645357
done
initial PDT has 724 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 609 leafs
SHOP LEAFS 208
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 211060
NUMBER OF CLAUSES 7981880
NUMBER OF STATE CLAUSES 702050
NUMBER OF DECOMPOSITION CLAUSES 7279830
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 8.8% 91.2% 0.0% 
NUMBER OF PATHS 609
Starting cryptominisat5.5
Setting starttime of solver to 1604516191819
Command exited with non-zero status 10
23.00 0.23

Time command gave the following runtime for the solver: 23230
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_0;2,6511 6511 m0_trip_to1
0;2 128 pathaction!2_0;2,6789
Consider method^6_0;2;1;8;8;8,4589 4589 m3_trip_to2
0;2;1;8;8;8 183 pathaction!6_0;2;1;8;8;8,6621
Consider method^7_0;2;1;8;8;8;5,3466 3466 m5_walk_everyone
0;2;1;8;8;8;5 197 pathaction!7_0;2;1;8;8;8;5,6378
Consider method^4_0;2;1;9,2419 2419 m2_trip_to2
0;2;1;9 114 pathaction!4_0;2;1;9,6598
Consider method^9_0;2;1;9;9;9;9;8;2,1883 1883 __UNIQUE-replacement_315
0;2;1;9;9;9;9;8;2 93 pathaction!9_0;2;1;9;9;9;9;8;2,7157
Consider method^10_0;2;1;9;9;8;8;5;2;2,9718 9718 m5_walk_everyone
0;2;1;9;9;8;8;5;2;2 42 pathaction!10_0;2;1;9;9;8;8;5;2;2,6369
Consider method^10_0;2;1;8;8;8;5;2;2;2,4595 4595 m4_walk_everyone
0;2;1;8;8;8;5;2;2;2 170 pathaction!10_0;2;1;8;8;8;5;2;2;2,6378
Consider method^2_0;1,139 139 m6_prepare_trip
0;1 17 pathaction!2_0;1,2453
Consider method^4_0;2;1;8,9617 9617 m2_trip_to2
0;2;1;8 142 pathaction!4_0;2;1;8,6621
Consider method^11_0;2;1;9;9;9;9;9;5;2;2,7678 7678 m5_walk_everyone
0;2;1;9;9;9;9;9;5;2;2 12 pathaction!11_0;2;1;9;9;9;9;9;5;2;2,6377
Consider method^3_0;1;1,1875 1875 m11_bring_cars
0;1;1 106 pathaction!3_0;1;1,6836
Consider method^8_0;2;1;9;9;9;9;9,8563 8563 m3_trip_to2
0;2;1;9;9;9;9;9 152 pathaction!8_0;2;1;9;9;9;9;9,6636
Consider method^8_0;2;1;9;9;9;8;5,8604 8604 m5_walk_everyone
0;2;1;9;9;9;8;5 41 pathaction!8_0;2;1;9;9;9;8;5,6367
Consider method^9_0;2;1;9;9;9;8;5;2,8452 8452 m5_walk_everyone
0;2;1;9;9;9;8;5;2 184 pathaction!9_0;2;1;9;9;9;8;5;2,6367
Consider method^8_0;2;1;8;8;8;5;2,1970 1970 m5_walk_everyone
0;2;1;8;8;8;5;2 18 pathaction!8_0;2;1;8;8;8;5;2,6378
Consider method^8_0;2;1;9;9;8;8;2,4349 4349 __UNIQUE-replacement_753
0;2;1;9;9;8;8;2 99 pathaction!8_0;2;1;9;9;8;8;2,7595
Consider method^6_0;2;1;8;8;9,5641 5641 m1_trip_to2
0;2;1;8;8;9 7 pathaction!6_0;2;1;8;8;9,6629
Consider method^11_0;2;1;9;9;9;9;8;5;2;2,5843 5843 m5_walk_everyone
0;2;1;9;9;9;9;8;5;2;2 120 pathaction!11_0;2;1;9;9;9;9;8;5;2;2,6368
Consider method^8_0;2;1;9;9;9;8;2,2884 2884 __UNIQUE-replacement_491
0;2;1;9;9;9;8;2 219 pathaction!8_0;2;1;9;9;9;8;2,7333
Consider method^6_0;2;1;9;8;9,1472 1472 m1_trip_to2
0;2;1;9;8;9 74 pathaction!6_0;2;1;9;8;9,6610
Consider method^8_0;2;1;9;9;8;8;5,9936 9936 m5_walk_everyone
0;2;1;9;9;8;8;5 133 pathaction!8_0;2;1;9;9;8;8;5,6369
Consider method^7_0;2;1;9;9;9;8,2885 2885 m3_trip_to2
0;2;1;9;9;9;8 67 pathaction!7_0;2;1;9;9;9;8,6626
Consider method^5_0;2;1;9;9,457 457 m2_trip_to2
0;2;1;9;9 3 pathaction!5_0;2;1;9;9,6624
Consider method^10_0;2;1;9;9;9;8;5;2;2,8560 8560 m5_walk_everyone
0;2;1;9;9;9;8;5;2;2 57 pathaction!10_0;2;1;9;9;9;8;5;2;2,6367
Consider method^7_0;2;1;9;9;8;8,4350 4350 m3_trip_to2
0;2;1;9;9;8;8 24 pathaction!7_0;2;1;9;9;8;8,6618
Consider method^3_0;2;1,460 460 m2_trip_to2
0;2;1 188 pathaction!3_0;2;1,6606
Consider method^9_0;2;1;9;9;9;9;8;9,1882 1882 __UNIQUE-replacement_314
0;2;1;9;9;9;9;8;9 33 pathaction!9_0;2;1;9;9;9;9;8;9,7156
Consider method^8_0;2;1;9;9;8;8;9,4348 4348 __UNIQUE-replacement_752
0;2;1;9;9;8;8;9 66 pathaction!8_0;2;1;9;9;8;8;9,7594
Consider method^6_0;2;1;9;8;8,9672 9672 m3_trip_to2
0;2;1;9;8;8 117 pathaction!6_0;2;1;9;8;8,6609
Consider method^7_0;2;1;9;8;8;9,9670 9670 __UNIQUE-replacement_1682
0;2;1;9;8;8;9 187 pathaction!7_0;2;1;9;8;8;9,8524
Consider method^9_0;2;1;9;9;9;9;8;5,6251 6251 m5_walk_everyone
0;2;1;9;9;9;9;8;5 65 pathaction!9_0;2;1;9;9;9;9;8;5,6368
Consider method^7_0;2;1;8;8;8;9,4587 4587 __UNIQUE-replacement_812
0;2;1;8;8;8;9 56 pathaction!7_0;2;1;8;8;8;9,7654
Consider method^9_0;2;1;9;9;9;9;9;5,1519 1519 m5_walk_everyone
0;2;1;9;9;9;9;9;5 127 pathaction!9_0;2;1;9;9;9;9;9;5,6377
Consider method^7_0;2;1;9;9;8;9,9777 9777 m1_trip_to2
0;2;1;9;9;8;9 85 pathaction!7_0;2;1;9;9;8;9,6597
Consider method^5_0;2;1;8;9,5641 5641 m1_trip_to2
0;2;1;8;9 43 pathaction!5_0;2;1;8;9,6629
Consider method^7_0;2;1;9;8;8;5,6932 6932 m5_walk_everyone
0;2;1;9;8;8;5 217 pathaction!7_0;2;1;9;8;8;5,6381
Consider method^12_0;2;1;9;9;9;9;9;5;2;2;2,5183 5183 m4_walk_everyone
0;2;1;9;9;9;9;9;5;2;2;2 62 pathaction!12_0;2;1;9;9;9;9;9;5;2;2;2,6377
Consider method^8_0;2;1;9;9;9;9;8,1884 1884 m3_trip_to2
0;2;1;9;9;9;9;8 132 pathaction!8_0;2;1;9;9;9;9;8,6617
Consider method^3_0;1;0,7503 7503 m10_bring_tent
0;1;0 25 pathaction!3_0;1;0,2446
Consider method^0_,10052 10052 __top_2
 130 pathaction!0_,8570
Consider method^9_0;2;1;9;9;9;9;9;2,8562 8562 __UNIQUE-replacement_1505
0;2;1;9;9;9;9;9;2 144 pathaction!9_0;2;1;9;9;9;9;9;2,8347
Consider method^9_0;2;1;9;9;9;9;9;9,8561 8561 __UNIQUE-replacement_1504
0;2;1;9;9;9;9;9;9 193 pathaction!9_0;2;1;9;9;9;9;9;9,8346
Consider method^7_0;2;1;8;8;8;2,4588 4588 __UNIQUE-replacement_813
0;2;1;8;8;8;2 16 pathaction!7_0;2;1;8;8;8;2,7655
Consider method^9_0;2;1;9;8;8;5;2;2,5149 5149 m5_walk_everyone
0;2;1;9;8;8;5;2;2 54 pathaction!9_0;2;1;9;8;8;5;2;2,6381
Consider method^11_0;2;1;9;9;9;8;5;2;2;2,5785 5785 m4_walk_everyone
0;2;1;9;9;9;8;5;2;2;2 2 pathaction!11_0;2;1;9;9;9;8;5;2;2;2,6367
Consider method^1_0,8704 8704 m14_everyone_go_hiking
0 49 pathaction!1_0,6792
Consider method^9_0;2;1;8;8;8;5;2;2,6849 6849 m5_walk_everyone
0;2;1;8;8;8;5;2;2 51 pathaction!9_0;2;1;8;8;8;5;2;2,6378
Consider method^11_0;2;1;9;9;8;8;5;2;2;2,2735 2735 m4_walk_everyone
0;2;1;9;9;8;8;5;2;2;2 124 pathaction!11_0;2;1;9;9;8;8;5;2;2;2,6369
Consider method^5_0;2;1;8;8,9617 9617 m2_trip_to2
0;2;1;8;8 220 pathaction!5_0;2;1;8;8,6621
Consider method^5_0;2;1;9;8,4026 4026 m2_trip_to2
0;2;1;9;8 164 pathaction!5_0;2;1;9;8,6609
Consider method^7_0;2;1;9;9;9;9,4333 4333 m2_trip_to2
0;2;1;9;9;9;9 131 pathaction!7_0;2;1;9;9;9;9,6635
Consider method^10_0;2;1;9;8;8;5;2;2;2,8629 8629 m4_walk_everyone
0;2;1;9;8;8;5;2;2;2 35 pathaction!10_0;2;1;9;8;8;5;2;2;2,6381
Consider method^8_0;2;1;9;9;9;8;9,2883 2883 __UNIQUE-replacement_490
0;2;1;9;9;9;8;9 214 pathaction!8_0;2;1;9;9;9;8;9,7332
Consider method^10_0;2;1;9;9;9;9;8;5;2,5796 5796 m5_walk_everyone
0;2;1;9;9;9;9;8;5;2 213 pathaction!10_0;2;1;9;9;9;9;8;5;2,6368
Consider method^10_0;2;1;9;9;9;9;9;5;2,6999 6999 m5_walk_everyone
0;2;1;9;9;9;9;9;5;2 19 pathaction!10_0;2;1;9;9;9;9;9;5;2,6377
Consider method^6_0;2;1;9;9;8,622 622 m2_trip_to2
0;2;1;9;9;8 174 pathaction!6_0;2;1;9;9;8,6618
Consider method^7_0;2;1;9;8;8;2,9671 9671 __UNIQUE-replacement_1683
0;2;1;9;8;8;2 29 pathaction!7_0;2;1;9;8;8;2,8525
Consider method^8_0;2;1;9;8;8;5;2,3930 3930 m5_walk_everyone
0;2;1;9;8;8;5;2 171 pathaction!8_0;2;1;9;8;8;5;2,6381
Consider method^6_0;2;1;9;9;9,4342 4342 m2_trip_to2
0;2;1;9;9;9 82 pathaction!6_0;2;1;9;9;9,6639
Consider method^12_0;2;1;9;9;9;9;8;5;2;2;2,8883 8883 m4_walk_everyone
0;2;1;9;9;9;9;8;5;2;2;2 210 pathaction!12_0;2;1;9;9;9;9;8;5;2;2;2,6368
Consider method^9_0;2;1;9;9;8;8;5;2,1240 1240 m5_walk_everyone
0;2;1;9;9;8;8;5;2 166 pathaction!9_0;2;1;9;9;8;8;5;2,6369


CHECKING primitive solution of length 115 ...
true 64 __method_precondition_m14_everyone_go_hiking_14_precondition[couple0,guy0,girl0,place0;]
true 211 __method_precondition_m10_bring_tent_10_precondition[tent2,place0,girl1;]
true 191 put_down[girl1,place0,tent2;]
true 113 __method_precondition_m11_bring_cars_11_precondition[car2,place0,car0;]
true 23 nop[;]
true 125 __method_precondition_m0_trip_to1_0_precondition[couple0,guy0,girl0,place0;]
true 216 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 9 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 185 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 94 __method_precondition_m3_trip_to2_3_precondition[girl0,guy0,car0,place1,place0,car1,couple0,tent0;]
true 30 drive_tent[guy0,place0,place1,car1,tent0;]
true 77 drive[girl0,place0,place1,car0;]
true 78 put_up[guy0,place1,tent0;]
true 89 drive_passenger[girl0,place1,place0,car0,guy0;]
true 215 __method_precondition_m5_walk_everyone_5_precondition[girl2,couple2,guy2,place1,place0;]
true 190 walk_together[tent0,place1,guy2,place0,girl2,couple2;]
true 143 __method_precondition_m5_walk_everyone_5_precondition[girl1,couple1,guy1,place1,place0;]
true 141 walk_together[tent0,place1,guy1,place0,girl1,couple1;]
true 108 __method_precondition_m5_walk_everyone_5_precondition[girl0,couple0,guy0,place1,place0;]
true 167 walk_together[tent0,place1,guy0,place0,girl0,couple0;]
true 39 nop[;]
true 92 put_down[girl0,place1,tent0;]
true 100 drive_passenger[guy0,place1,place0,car1,girl0;]
true 212 drive[guy0,place0,place1,car1;]
true 84 drive[girl0,place0,place1,car0;]
true 178 nop[;]
true 28 nop[;]
true 61 __method_precondition_m2_trip_to2_2_precondition[place1,place2;]
true 118 __method_precondition_m2_trip_to2_2_precondition[place1,place2;]
true 55 __method_precondition_m3_trip_to2_3_precondition[girl0,guy0,car0,place2,place1,car1,couple0,tent0;]
true 37 drive_tent[guy0,place1,place2,car1,tent0;]
true 111 drive[girl0,place1,place2,car0;]
true 47 put_up[guy0,place2,tent0;]
true 71 drive_passenger[girl0,place2,place1,car0,guy0;]
true 83 __method_precondition_m5_walk_everyone_5_precondition[girl0,couple0,guy0,place2,place1;]
true 70 walk_together[tent0,place2,guy0,place1,girl0,couple0;]
true 151 __method_precondition_m5_walk_everyone_5_precondition[girl2,couple2,guy2,place2,place1;]
true 181 walk_together[tent0,place2,guy2,place1,girl2,couple2;]
true 80 __method_precondition_m5_walk_everyone_5_precondition[girl1,couple1,guy1,place2,place1;]
true 11 walk_together[tent0,place2,guy1,place1,girl1,couple1;]
true 58 nop[;]
true 27 put_down[girl0,place2,tent0;]
true 103 drive_passenger[guy0,place2,place1,car1,girl0;]
true 31 drive[guy0,place1,place2,car1;]
true 104 drive[girl0,place1,place2,car0;]
true 72 nop[;]
true 139 __method_precondition_m2_trip_to2_2_precondition[place2,place3;]
true 45 __method_precondition_m2_trip_to2_2_precondition[place2,place3;]
true 115 __method_precondition_m3_trip_to2_3_precondition[girl0,guy0,car1,place3,place2,car0,couple0,tent0;]
true 95 drive_tent[guy0,place2,place3,car0,tent0;]
true 192 drive[girl0,place2,place3,car1;]
true 86 put_up[guy0,place3,tent0;]
true 204 drive_passenger[girl0,place3,place2,car1,guy0;]
true 179 __method_precondition_m5_walk_everyone_5_precondition[girl2,couple2,guy2,place3,place2;]
true 150 walk_together[tent0,place3,guy2,place2,girl2,couple2;]
true 135 __method_precondition_m5_walk_everyone_5_precondition[girl1,couple1,guy1,place3,place2;]
true 68 walk_together[tent0,place3,guy1,place2,girl1,couple1;]
true 200 __method_precondition_m5_walk_everyone_5_precondition[girl0,couple0,guy0,place3,place2;]
true 196 walk_together[tent0,place3,guy0,place2,girl0,couple0;]
true 53 nop[;]
true 123 put_down[girl0,place3,tent0;]
true 98 drive_passenger[guy0,place3,place2,car0,girl0;]
true 209 drive[guy0,place2,place3,car0;]
true 206 drive[girl0,place2,place3,car1;]
true 163 nop[;]
true 145 __method_precondition_m2_trip_to2_2_precondition[place3,place4;]
true 156 __method_precondition_m3_trip_to2_3_precondition[girl0,guy0,car0,place4,place3,car1,couple0,tent0;]
true 110 drive_tent[guy0,place3,place4,car1,tent0;]
true 202 drive[girl0,place3,place4,car0;]
true 91 put_up[guy0,place4,tent0;]
true 26 drive_passenger[girl0,place4,place3,car0,guy0;]
true 102 __method_precondition_m5_walk_everyone_5_precondition[girl2,couple2,guy2,place4,place3;]
true 46 walk_together[tent0,place4,guy2,place3,girl2,couple2;]
true 1 __method_precondition_m5_walk_everyone_5_precondition[girl1,couple1,guy1,place4,place3;]
true 116 walk_together[tent0,place4,guy1,place3,girl1,couple1;]
true 146 __method_precondition_m5_walk_everyone_5_precondition[girl0,couple0,guy0,place4,place3;]
true 129 walk_together[tent0,place4,guy0,place3,girl0,couple0;]
true 50 nop[;]
true 189 put_down[girl0,place4,tent0;]
true 194 drive_passenger[guy0,place4,place3,car1,girl0;]
true 137 drive[guy0,place3,place4,car1;]
true 76 drive[girl0,place3,place4,car0;]
true 73 __method_precondition_m2_trip_to2_2_precondition[place4,place5;]
true 5 __method_precondition_m3_trip_to2_3_precondition[girl0,guy0,car1,place5,place4,car0,couple0,tent0;]
true 122 drive_tent[guy0,place4,place5,car0,tent0;]
true 34 drive[girl0,place4,place5,car1;]
true 38 put_up[guy0,place5,tent0;]
true 21 drive_passenger[girl0,place5,place4,car1,guy0;]
true 173 __method_precondition_m5_walk_everyone_5_precondition[girl1,couple1,guy1,place5,place4;]
true 140 walk_together[tent0,place5,guy1,place4,girl1,couple1;]
true 101 __method_precondition_m5_walk_everyone_5_precondition[girl2,couple2,guy2,place5,place4;]
true 75 walk_together[tent0,place5,guy2,place4,girl2,couple2;]
true 52 __method_precondition_m5_walk_everyone_5_precondition[girl0,couple0,guy0,place5,place4;]
true 63 walk_together[tent0,place5,guy0,place4,girl0,couple0;]
true 176 nop[;]
true 154 put_down[girl0,place5,tent0;]
true 169 drive_passenger[guy0,place5,place4,car0,girl0;]
true 175 drive[guy0,place4,place5,car0;]
true 121 drive[girl0,place4,place5,car1;]
true 161 __method_precondition_m3_trip_to2_3_precondition[girl0,guy0,car1,place6,place5,car0,couple0,tent0;]
true 207 drive_tent[guy0,place5,place6,car0,tent0;]
true 112 drive[girl0,place5,place6,car1;]
true 14 put_up[guy0,place6,tent0;]
true 218 drive_passenger[girl0,place6,place5,car1,guy0;]
true 168 __method_precondition_m5_walk_everyone_5_precondition[girl2,couple2,guy2,place6,place5;]
true 157 walk_together[tent0,place6,guy2,place5,girl2,couple2;]
true 81 __method_precondition_m5_walk_everyone_5_precondition[girl0,couple0,guy0,place6,place5;]
true 60 walk_together[tent0,place6,guy0,place5,girl0,couple0;]
true 97 __method_precondition_m5_walk_everyone_5_precondition[girl1,couple1,guy1,place6,place5;]
true 88 walk_together[tent0,place6,guy1,place5,girl1,couple1;]
true 87 nop[;]
true 96 put_down[girl0,place6,tent0;]
true 160 drive_passenger[guy0,place6,place5,car0,girl0;]
true 182 drive[guy0,place5,place6,car0;]
true 105 drive[girl0,place5,place6,car1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 3648
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 7296
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 10944
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 4
ICAPS: 14592
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 5
ICAPS: 18240
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 6
ICAPS: 21888
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 7
ICAPS: 25536
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
LEN 8
ICAPS: 29184
TSTG: 2147483647
Method: 2147483647
DP max: 10
Taking minimum: 10
LEN 9
ICAPS: 32832
TSTG: 2147483647
Method: 2147483647
DP max: 11
Taking minimum: 11
LEN 10
ICAPS: 36480
TSTG: 2147483647
Method: 2147483647
DP max: 12
Taking minimum: 12
LEN 11
ICAPS: 40128
TSTG: 2147483647
Method: 2147483647
DP max: 13
Taking minimum: 13
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 78
  lower bound = 10

Running SAT search with cost bound = 44
==================================================
  upper bound = 78
  lower bound = 10
LEN 44
ICAPS: 160512
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854597388
DP max: 46
Taking minimum: 46
Generating initial PDT ... done
initial PDT has 11878 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 11367 leafs
SHOP LEAFS 5092
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 71627 will abort at 9223372036854597388

RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 299.789 MEMPEAK_KBS 8029089.792
