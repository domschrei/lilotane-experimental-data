PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p20.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p20.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p20.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 45
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 45
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 45
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 45
Grounded planning graph ... done in 567ms.
	Number of Grounded Actions 2086
	Number of Grounded Literals 404
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 45
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 45
Grounding ... done.
	number of abstract tasks = 449
	number of tasks = 1416
	number of decomposition methods = 1229
	number of predicates = 423
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 449
	number of tasks = 1416
	number of decomposition methods = 1229
	number of predicates = 304
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 100ms.
	Number of Grounded Actions 967
	Number of Grounded Literals 304
	number of abstract tasks = 449
	number of tasks = 1416
	number of decomposition methods = 1229
	number of predicates = 304
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 449
	number of tasks = 1416
	number of decomposition methods = 1229
	number of predicates = 304
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 450
	number of tasks = 1417
	number of decomposition methods = 1230
	number of predicates = 304
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 450
	number of tasks = 1417
	number of decomposition methods = 1230
	number of predicates = 304
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 58ms.
	Number of Grounded Actions 967
	Number of Grounded Literals 304
	number of abstract tasks = 450
	number of tasks = 1417
	number of decomposition methods = 1230
	number of predicates = 304
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 450
	number of tasks = 1417
	number of decomposition methods = 1230
	number of predicates = 304
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 450
	number of tasks = 1417
	number of decomposition methods = 1230
	number of predicates = 304
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 450
	number of tasks = 1417
	number of decomposition methods = 1230
	number of predicates = 304
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 450
	number of tasks = 1417
	number of decomposition methods = 1230
	number of predicates = 304
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 446
	number of epsilon methods = 0
	number of primitive tasks = 967
	number of constants = 0
Tasks 967 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771417ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854771209
done
initial PDT has 42 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 28 leafs
SHOP LEAFS 28
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 138168
Size 138168 at 0/967
Size 117224 at 500/967
Size 79082
Size 79082 at 0/967
Size 70662 at 500/967
Size 33320
Size 33320 at 0/967
Size 32818 at 500/967
Size 12050
Size 12050 at 0/967
Size 12028 at 500/967
Size 3653
Size 3653 at 0/967
Size 3650 at 500/967
Size 3334
Size 3334 at 0/967
Size 3333 at 500/967
Size 3288
Size 3288 at 0/967
Size 3287 at 500/967
Size 3259
Size 3259 at 0/967
Size 3259 at 500/967
Size 3259
Invariant time: 1.226
Number of invariants: 3259
Invariant Clauses 94511
NUMBER OF CLAUSES 112083
NUMBER OF STATE CLAUSES 111853
NUMBER OF DECOMPOSITION CLAUSES 230
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.79% 0.21% 0.0% 
NUMBER OF PATHS 28
Starting cryptominisat5.5
Setting starttime of solver to 1604510235248
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854768592
done
initial PDT has 204 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 112 leafs
SHOP LEAFS 70
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 368267
NUMBER OF CLAUSES 454429
NUMBER OF STATE CLAUSES 441119
NUMBER OF DECOMPOSITION CLAUSES 13310
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.07000000000001% 2.93% 0.0% 
NUMBER OF PATHS 112
Starting cryptominisat5.5
Setting starttime of solver to 1604510236821
Command exited with non-zero status 20
0.10 0.00

Time command gave the following runtime for the solver: 100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854767131
done
initial PDT has 411 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 265 leafs
SHOP LEAFS 145
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 866894
NUMBER OF CLAUSES 1091763
NUMBER OF STATE CLAUSES 1042354
NUMBER OF DECOMPOSITION CLAUSES 49409
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.47% 4.53% 0.0% 
NUMBER OF PATHS 265
Starting cryptominisat5.5
Setting starttime of solver to 1604510238919
Command exited with non-zero status 20
0.25 0.03

Time command gave the following runtime for the solver: 280
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854764736
done
initial PDT has 626 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 560 leafs
SHOP LEAFS 305
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1828299
NUMBER OF CLAUSES 2303777
NUMBER OF STATE CLAUSES 2198258
NUMBER OF DECOMPOSITION CLAUSES 105519
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.42% 4.58% 0.0% 
NUMBER OF PATHS 560
Starting cryptominisat5.5
Setting starttime of solver to 1604510243542
Command exited with non-zero status 20
0.59 0.01

Time command gave the following runtime for the solver: 600
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 763 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854759608
done
PDT has 725 leafs
SHOP LEAFS 371
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2366034
NUMBER OF CLAUSES 2974704
NUMBER OF STATE CLAUSES 2844827
NUMBER OF DECOMPOSITION CLAUSES 129877
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.63% 4.37% 0.0% 
NUMBER OF PATHS 725
Starting cryptominisat5.5
Setting starttime of solver to 1604510249503
Command exited with non-zero status 10
1.16 0.12

Time command gave the following runtime for the solver: 1280
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_12;2,141 141 m4_do_clear
12;2 230 pathaction!2_12;2,1381
Consider method^4_8;2;4;2,1209 1209 m4_do_clear
8;2;4;2 181 pathaction!4_8;2;4;2,1369
Consider method^1_0,594 594 m3_do_put_on
0 122 pathaction!1_0,497
Consider method^1_1,890 890 m3_do_put_on
1 118 pathaction!1_1,492
Consider method^3_4;2;4,107 107 m10_do_load_truck
4;2;4 236 pathaction!3_4;2;4,1133
Consider method^1_13,472 472 m2_do_put_on
13 198 pathaction!1_13,489
Consider method^2_3;2,23 23 _m3_do_put_on_2
3;2 177 pathaction!2_3;2,616
Consider method^1_5,439 439 m3_do_put_on
5 286 pathaction!1_5,487
Consider method^3_2;2;4,379 379 m10_do_load_truck
2;2;4 299 pathaction!3_2;2;4,1205
Consider method^5_2;2;4;2;1,403 403 m4_do_clear
2;2;4;2;1 53 pathaction!5_2;2;4;2;1,1365
Consider method^2_13;2,358 358 m4_do_clear
13;2 223 pathaction!2_13;2,1371
Consider method^3_2;4;1,821 821 m4_do_clear
2;4;1 159 pathaction!3_2;4;1,1378
Consider method^3_3;2;4,638 638 m10_do_load_truck
3;2;4 243 pathaction!3_3;2;4,1160
Consider method^2_9;2,911 911 m4_do_clear
9;2 84 pathaction!2_9;2,1366
Consider method^4_5;2;4;2,521 521 m4_do_clear
5;2;4;2 85 pathaction!4_5;2;4;2,1372
Consider method^1_4,155 155 m3_do_put_on
4 110 pathaction!1_4,485
Consider method^2_10;2,860 860 m4_do_clear
10;2 36 pathaction!2_10;2,1370
Consider method^4_1;2;4;1,916 916 m7_do_get_truck
1;2;4;1 151 pathaction!4_1;2;4;1,653
Consider method^2_11;2,951 951 m4_do_clear
11;2 270 pathaction!2_11;2,1362
Consider method^2_8;4,50 50 m11_do_unload_truck
8;4 17 pathaction!2_8;4,809
Consider method^1_8,655 655 m3_do_put_on
8 135 pathaction!1_8,490
Consider method^2_13;1,143 143 m7_do_get_truck
13;1 254 pathaction!2_13;1,626
Consider method^4_4;4;1;3,1074 1074 m7_do_get_truck
4;4;1;3 210 pathaction!4_4;4;1;3,636
Consider method^5_3;2;4;2;3,12 12 m7_do_get_truck
3;2;4;2;3 234 pathaction!5_3;2;4;2;3,629
Consider method^5_0;4;1;1;1,748 748 m4_do_clear
0;4;1;1;1 187 pathaction!5_0;4;1;1;1,1386
Consider method^3_5;2;4,164 164 m10_do_load_truck
5;2;4 313 pathaction!3_5;2;4,1150
Consider method^3_5;4;1,583 583 m4_do_clear
5;4;1 4 pathaction!3_5;4;1,1368
Consider method^2_0;4,1147 1147 m11_do_unload_truck
0;4 90 pathaction!2_0;4,814
Consider method^2_2;4,909 909 m11_do_unload_truck
2;4 99 pathaction!2_2;4,832
Consider method^2_4;2,1 1 _m3_do_put_on_2
4;2 111 pathaction!2_4;2,571
Consider method^2_2;2,757 757 _m3_do_put_on_2
2;2 176 pathaction!2_2;2,573
Consider method^4_8;2;4;1,433 433 m7_do_get_truck
8;2;4;1 273 pathaction!4_8;2;4;1,642
Consider method^0_,1229 1229 __top_1
 290 pathaction!0_,1416
Consider method^2_8;2,229 229 _m3_do_put_on_2
8;2 184 pathaction!2_8;2,508
Consider method^3_3;4;1,871 871 m4_do_clear
3;4;1 203 pathaction!3_3;4;1,1390
Consider method^2_10;1,718 718 m7_do_get_truck
10;1 189 pathaction!2_10;1,647
Consider method^2_7;1,685 685 m7_do_get_truck
7;1 208 pathaction!2_7;1,644
Consider method^2_1;4,470 470 m11_do_unload_truck
1;4 15 pathaction!2_1;4,841
Consider method^4_2;2;4;1,469 469 m7_do_get_truck
2;2;4;1 98 pathaction!4_2;2;4;1,632
Consider method^3_1;4;1,542 542 m4_do_clear
1;4;1 136 pathaction!3_1;4;1,1387
Consider method^5_2;2;4;2;3,1187 1187 m7_do_get_truck
2;2;4;2;3 260 pathaction!5_2;2;4;2;3,628
Consider method^2_12;1,1141 1141 m7_do_get_truck
12;1 133 pathaction!2_12;1,649
Consider method^2_5;2,456 456 _m3_do_put_on_2
5;2 143 pathaction!2_5;2,581
Consider method^4_0;2;4;2,542 542 m4_do_clear
0;2;4;2 137 pathaction!4_0;2;4;2,1387
Consider method^4_2;2;4;2,367 367 m5_do_clear
2;2;4;2 78 pathaction!4_2;2;4;2,1359
Consider method^5_8;4;1;1;3,69 69 m6_do_get_truck
8;4;1;1;3 155 pathaction!5_8;4;1;1;3,643
Consider method^2_4;4,263 263 m11_do_unload_truck
4;4 205 pathaction!2_4;4,835
Consider method^4_4;2;4;1,833 833 m7_do_get_truck
4;2;4;1 29 pathaction!4_4;2;4;1,626
Consider method^1_9,1030 1030 m2_do_put_on
9 12 pathaction!1_9,491
Consider method^2_6;2,80 80 m4_do_clear
6;2 259 pathaction!2_6;2,1383
Consider method^4_4;2;4;2,580 580 m5_do_clear
4;2;4;2 113 pathaction!4_4;2;4;2,1393
Consider method^3_0;2;4,688 688 m10_do_load_truck
0;2;4 56 pathaction!3_0;2;4,1169
Consider method^2_11;1,834 834 m6_do_get_truck
11;1 123 pathaction!2_11;1,647
Consider method^2_7;2,1216 1216 m4_do_clear
7;2 185 pathaction!2_7;2,1358
Consider method^2_5;4,422 422 m11_do_unload_truck
5;4 5 pathaction!2_5;4,787
Consider method^3_0;4;1,809 809 m5_do_clear
0;4;1 276 pathaction!3_0;4;1,1361
Consider method^3_1;2;4,788 788 m10_do_load_truck
1;2;4 247 pathaction!3_1;2;4,1252
Consider method^4_4;4;1;1,60 60 m4_do_clear
4;4;1;1 93 pathaction!4_4;4;1;1,1374
Consider method^1_6,956 956 m2_do_put_on
6 279 pathaction!1_6,498
Consider method^2_6;1,921 921 m7_do_get_truck
6;1 171 pathaction!2_6;1,641
Consider method^1_3,233 233 m3_do_put_on
3 24 pathaction!1_3,493
Consider method^4_0;4;1;1,944 944 m5_do_clear
0;4;1;1 114 pathaction!4_0;4;1;1,1385
Consider method^4_8;4;1;1,459 459 m5_do_clear
8;4;1;1 39 pathaction!4_8;4;1;1,1388
Consider method^2_0;2,1158 1158 _m3_do_put_on_2
0;2 206 pathaction!2_0;2,604
Consider method^2_1;2,217 217 _m3_do_put_on_2
1;2 26 pathaction!2_1;2,600
Consider method^5_8;4;1;1;1,1186 1186 m4_do_clear
8;4;1;1;1 31 pathaction!5_8;4;1;1;1,1367
Consider method^5_0;4;1;1;3,862 862 m7_do_get_truck
0;4;1;1;3 298 pathaction!5_0;4;1;1;3,635
Consider method^5_4;2;4;2;1,170 170 m4_do_clear
4;2;4;2;1 164 pathaction!5_4;2;4;2;1,1384
Consider method^4_3;2;4;1,840 840 m7_do_get_truck
3;2;4;1 95 pathaction!4_3;2;4;1,647
Consider method^3_8;4;1,401 401 m5_do_clear
8;4;1 139 pathaction!3_8;4;1,1379
Consider method^1_2,102 102 m3_do_put_on
2 213 pathaction!1_2,495
Consider method^1_10,303 303 m2_do_put_on
10 108 pathaction!1_10,496
Consider method^3_4;4;1,1094 1094 m5_do_clear
4;4;1 224 pathaction!3_4;4;1,1382
Consider method^4_0;2;4;1,480 480 m6_do_get_truck
0;2;4;1 35 pathaction!4_0;2;4;1,638
Consider method^5_4;2;4;2;3,918 918 m7_do_get_truck
4;2;4;2;3 252 pathaction!5_4;2;4;2;3,634
Consider method^5_3;2;4;2;1,596 596 m4_do_clear
3;2;4;2;1 128 pathaction!5_3;2;4;2;1,1392
Consider method^4_1;2;4;2,989 989 m4_do_clear
1;2;4;2 282 pathaction!4_1;2;4;2,1364
Consider method^4_0;4;1;3,1154 1154 m7_do_get_truck
0;4;1;3 154 pathaction!4_0;4;1;3,650
Consider method^1_12,710 710 m2_do_put_on
12 179 pathaction!1_12,494
Consider method^4_8;4;1;3,69 69 m6_do_get_truck
8;4;1;3 66 pathaction!4_8;4;1;3,643
Consider method^1_11,516 516 m2_do_put_on
11 168 pathaction!1_11,486
Consider method^4_5;2;4;1,508 508 m7_do_get_truck
5;2;4;1 287 pathaction!4_5;2;4;1,654
Consider method^3_8;2;4,460 460 m10_do_load_truck
8;2;4 132 pathaction!3_8;2;4,1154
Consider method^2_9;1,69 69 m6_do_get_truck
9;1 293 pathaction!2_9;1,643
Consider method^2_3;4,306 306 m11_do_unload_truck
3;4 301 pathaction!2_3;4,850
Consider method^1_7,668 668 m2_do_put_on
7 58 pathaction!1_7,488
Consider method^4_3;2;4;2,868 868 m5_do_clear
3;2;4;2 297 pathaction!4_3;2;4;2,1363


CHECKING primitive solution of length 180 ...
true 130 __method_precondition_m10_do_load_truck_10_precondition[crate14,depot1,crate12,hoist1;]
true 11 __method_precondition_m6_do_get_truck_6_precondition[truck2,depot1;]
true 311 nop[;]
true 147 __method_precondition_m4_do_clear_4_precondition[crate14,depot1;]
true 152 nop[;]
true 296 Lift[hoist1,crate14,crate12,depot1;]
true 34 Load[hoist1,crate14,truck2,depot1;]
true 79 Drive[truck2,depot1,depot1;]
true 280 __method_precondition_m11_do_unload_truck_11_precondition[depot1,pallet1,crate14,hoist1,truck2;]
true 233 __method_precondition_m5_do_clear_5_precondition[pallet1,crate6,depot1,hoist1;]
true 13 __method_precondition_m5_do_clear_5_precondition[crate6,crate12,depot1,hoist1;]
true 37 __method_precondition_m4_do_clear_4_precondition[crate12,depot1;]
true 166 nop[;]
true 249 Lift[hoist1,crate12,crate6,depot1;]
true 112 __method_precondition_m7_do_get_truck_7_precondition[truck3,depot1;]
true 173 Drive[truck3,distributor1,depot1;]
true 162 Load[hoist1,crate12,truck3,depot1;]
true 232 Lift[hoist1,crate6,pallet1,depot1;]
true 125 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot1;]
true 80 Drive[truck1,depot0,depot1;]
true 69 Load[hoist1,crate6,truck1,depot1;]
true 105 Unload[hoist1,crate14,truck2,depot1;]
true 235 Drop[hoist1,crate14,pallet1,depot1;]
true 228 __method_precondition_m10_do_load_truck_10_precondition[crate5,depot3,crate2,hoist3;]
true 7 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot3;]
true 83 Drive[truck1,depot1,depot3;]
true 88 __method_precondition_m4_do_clear_4_precondition[crate5,depot3;]
true 28 nop[;]
true 14 Lift[hoist3,crate5,crate2,depot3;]
true 117 Load[hoist3,crate5,truck1,depot3;]
true 157 Drive[truck1,depot3,depot1;]
true 278 __method_precondition_m11_do_unload_truck_11_precondition[depot1,crate14,crate5,hoist1,truck1;]
true 138 __method_precondition_m4_do_clear_4_precondition[crate14,depot1;]
true 119 nop[;]
true 201 Unload[hoist1,crate5,truck1,depot1;]
true 141 Drop[hoist1,crate5,crate14,depot1;]
true 186 __method_precondition_m10_do_load_truck_10_precondition[crate4,depot0,crate3,hoist0;]
true 246 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot0;]
true 115 Drive[truck0,distributor2,depot0;]
true 175 __method_precondition_m5_do_clear_5_precondition[crate4,crate13,depot0,hoist0;]
true 48 __method_precondition_m4_do_clear_4_precondition[crate13,depot0;]
true 131 nop[;]
true 148 Lift[hoist0,crate13,crate4,depot0;]
true 178 __method_precondition_m7_do_get_truck_7_precondition[truck3,depot0;]
true 248 Drive[truck3,depot1,depot0;]
true 82 Load[hoist0,crate13,truck3,depot0;]
true 89 Lift[hoist0,crate4,crate3,depot0;]
true 86 Load[hoist0,crate4,truck0,depot0;]
true 55 Drive[truck0,depot0,depot1;]
true 196 __method_precondition_m11_do_unload_truck_11_precondition[depot1,crate5,crate4,hoist1,truck0;]
true 250 __method_precondition_m4_do_clear_4_precondition[crate5,depot1;]
true 104 nop[;]
true 54 Unload[hoist1,crate4,truck0,depot1;]
true 109 Drop[hoist1,crate4,crate5,depot1;]
true 52 __method_precondition_m10_do_load_truck_10_precondition[crate7,distributor2,pallet6,hoist6;]
true 19 __method_precondition_m7_do_get_truck_7_precondition[truck3,distributor2;]
true 97 Drive[truck3,depot0,distributor2;]
true 257 __method_precondition_m5_do_clear_5_precondition[crate7,crate8,distributor2,hoist6;]
true 30 __method_precondition_m4_do_clear_4_precondition[crate8,distributor2;]
true 3 nop[;]
true 46 Lift[hoist6,crate8,crate7,distributor2;]
true 285 __method_precondition_m7_do_get_truck_7_precondition[truck2,distributor2;]
true 160 Drive[truck2,depot1,distributor2;]
true 261 Load[hoist6,crate8,truck2,distributor2;]
true 120 Lift[hoist6,crate7,pallet6,distributor2;]
true 91 Load[hoist6,crate7,truck3,distributor2;]
true 76 Drive[truck3,distributor2,depot2;]
true 140 __method_precondition_m11_do_unload_truck_11_precondition[depot2,pallet2,crate7,hoist2,truck3;]
true 142 __method_precondition_m4_do_clear_4_precondition[pallet2,depot2;]
true 314 nop[;]
true 27 Unload[hoist2,crate7,truck3,depot2;]
true 239 Drop[hoist2,crate7,pallet2,depot2;]
true 42 __method_precondition_m10_do_load_truck_10_precondition[crate0,distributor3,pallet7,hoist7;]
true 145 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor3;]
true 183 Drive[truck0,depot1,distributor3;]
true 121 __method_precondition_m5_do_clear_5_precondition[crate0,crate10,distributor3,hoist7;]
true 240 __method_precondition_m4_do_clear_4_precondition[crate10,distributor3;]
true 64 nop[;]
true 256 Lift[hoist7,crate10,crate0,distributor3;]
true 61 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor3;]
true 300 Drive[truck1,depot1,distributor3;]
true 153 Load[hoist7,crate10,truck1,distributor3;]
true 265 Lift[hoist7,crate0,pallet7,distributor3;]
true 124 Load[hoist7,crate0,truck0,distributor3;]
true 75 Drive[truck0,distributor3,depot3;]
true 204 __method_precondition_m11_do_unload_truck_11_precondition[depot3,pallet3,crate0,hoist3,truck0;]
true 307 __method_precondition_m5_do_clear_5_precondition[pallet3,crate2,depot3,hoist3;]
true 65 __method_precondition_m4_do_clear_4_precondition[crate2,depot3;]
true 8 nop[;]
true 150 Lift[hoist3,crate2,pallet3,depot3;]
true 220 __method_precondition_m7_do_get_truck_7_precondition[truck3,depot3;]
true 215 Drive[truck3,depot2,depot3;]
true 94 Load[hoist3,crate2,truck3,depot3;]
true 209 Unload[hoist3,crate0,truck0,depot3;]
true 47 Drop[hoist3,crate0,pallet3,depot3;]
true 16 __method_precondition_m10_do_load_truck_10_precondition[crate3,depot0,pallet0,hoist0;]
true 2 __method_precondition_m7_do_get_truck_7_precondition[truck2,depot0;]
true 292 Drive[truck2,distributor2,depot0;]
true 129 __method_precondition_m4_do_clear_4_precondition[crate3,depot0;]
true 165 nop[;]
true 41 Lift[hoist0,crate3,pallet0,depot0;]
true 193 Load[hoist0,crate3,truck2,depot0;]
true 191 Drive[truck2,depot0,depot3;]
true 195 __method_precondition_m11_do_unload_truck_11_precondition[depot3,crate0,crate3,hoist3,truck2;]
true 10 __method_precondition_m4_do_clear_4_precondition[crate0,depot3;]
true 32 nop[;]
true 77 Unload[hoist3,crate3,truck2,depot3;]
true 182 Drop[hoist3,crate3,crate0,depot3;]
true 281 __method_precondition_m2_do_put_on_2_precondition[crate6,truck1;]
true 192 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 237 Drive[truck1,distributor3,distributor0;]
true 51 __method_precondition_m4_do_clear_4_precondition[pallet4,distributor0;]
true 226 nop[;]
true 244 Unload[hoist4,crate6,truck1,distributor0;]
true 1 Drop[hoist4,crate6,pallet4,distributor0;]
true 242 __method_precondition_m2_do_put_on_2_precondition[crate12,truck3;]
true 92 __method_precondition_m7_do_get_truck_7_precondition[truck3,distributor0;]
true 217 Drive[truck3,depot3,distributor0;]
true 71 __method_precondition_m4_do_clear_4_precondition[crate6,distributor0;]
true 22 nop[;]
true 312 Unload[hoist4,crate12,truck3,distributor0;]
true 9 Drop[hoist4,crate12,crate6,distributor0;]
true 180 __method_precondition_m10_do_load_truck_10_precondition[crate11,depot1,pallet8,hoist1;]
true 227 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot1;]
true 174 Drive[truck0,depot3,depot1;]
true 274 __method_precondition_m4_do_clear_4_precondition[crate11,depot1;]
true 214 nop[;]
true 116 Lift[hoist1,crate11,pallet8,depot1;]
true 161 Load[hoist1,crate11,truck0,depot1;]
true 207 Drive[truck0,depot1,distributor1;]
true 197 __method_precondition_m11_do_unload_truck_11_precondition[distributor1,pallet5,crate11,hoist5,truck0;]
true 100 __method_precondition_m5_do_clear_5_precondition[pallet5,crate1,distributor1,hoist5;]
true 216 __method_precondition_m5_do_clear_5_precondition[crate1,crate9,distributor1,hoist5;]
true 251 __method_precondition_m4_do_clear_4_precondition[crate9,distributor1;]
true 288 nop[;]
true 38 Lift[hoist5,crate9,crate1,distributor1;]
true 283 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 267 nop[;]
true 221 Load[hoist5,crate9,truck0,distributor1;]
true 170 Lift[hoist5,crate1,pallet5,distributor1;]
true 295 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 304 nop[;]
true 62 Load[hoist5,crate1,truck0,distributor1;]
true 25 Unload[hoist5,crate11,truck0,distributor1;]
true 309 Drop[hoist5,crate11,pallet5,distributor1;]
true 103 __method_precondition_m2_do_put_on_2_precondition[crate1,truck0;]
true 238 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 63 nop[;]
true 87 __method_precondition_m4_do_clear_4_precondition[crate11,distributor1;]
true 20 nop[;]
true 310 Unload[hoist5,crate1,truck0,distributor1;]
true 172 Drop[hoist5,crate1,crate11,distributor1;]
true 49 __method_precondition_m2_do_put_on_2_precondition[crate2,truck3;]
true 67 __method_precondition_m7_do_get_truck_7_precondition[truck3,distributor2;]
true 202 Drive[truck3,distributor0,distributor2;]
true 241 __method_precondition_m4_do_clear_4_precondition[pallet6,distributor2;]
true 188 nop[;]
true 245 Unload[hoist6,crate2,truck3,distributor2;]
true 269 Drop[hoist6,crate2,pallet6,distributor2;]
true 225 __method_precondition_m2_do_put_on_2_precondition[crate13,truck3;]
true 253 __method_precondition_m6_do_get_truck_6_precondition[truck3,distributor2;]
true 315 nop[;]
true 44 __method_precondition_m4_do_clear_4_precondition[crate2,distributor2;]
true 6 nop[;]
true 50 Unload[hoist6,crate13,truck3,distributor2;]
true 271 Drop[hoist6,crate13,crate2,distributor2;]
true 96 __method_precondition_m2_do_put_on_2_precondition[crate8,truck2;]
true 306 __method_precondition_m7_do_get_truck_7_precondition[truck2,distributor3;]
true 258 Drive[truck2,depot3,distributor3;]
true 262 __method_precondition_m4_do_clear_4_precondition[pallet7,distributor3;]
true 284 nop[;]
true 23 Unload[hoist7,crate8,truck2,distributor3;]
true 68 Drop[hoist7,crate8,pallet7,distributor3;]
true 144 __method_precondition_m2_do_put_on_2_precondition[crate9,truck0;]
true 107 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor3;]
true 72 Drive[truck0,distributor1,distributor3;]
true 222 __method_precondition_m4_do_clear_4_precondition[crate8,distributor3;]
true 0 nop[;]
true 33 Unload[hoist7,crate9,truck0,distributor3;]
true 200 Drop[hoist7,crate9,crate8,distributor3;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 902
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 1804
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 2706
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 3608
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 4510
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 5412
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 6314
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 7216
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 8118
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 9020
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 9922
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 10824
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 11726
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 12628
TSTG: 9
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 15
ICAPS: 13530
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 14432
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 15334
TSTG: 9
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 18
ICAPS: 16236
TSTG: 9
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 19
ICAPS: 17138
TSTG: 9
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 18040
TSTG: 9
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 21
ICAPS: 18942
TSTG: 9
Method: 2147483647
DP max: 6
Taking minimum: 6
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 108
  lower bound = 20

Running SAT search with cost bound = 64
==================================================
  upper bound = 108
  lower bound = 20
LEN 64
ICAPS: 57728
TSTG: 9
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854750508
DP max: 10
Taking minimum: 9
Generating initial PDT ... done
initial PDT has 870 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 870 leafs
SHOP LEAFS 429
Assignment implications
Generating clauses representing decomposition ... done
At most K: 721ms input: 8382 K = 64
Number of actions Formula: 789ms for 1081213 clauses
Layers: 10 paths 870
Layer 1 g 0 = 0 - 1 / 0 clauses 379756
Layer 1 g 1 = 2 - 3 / 2 clauses 379756
Layer 1 g 2 = 4 - 5 / 4 clauses 379756
Layer 1 g 3 = 6 - 7 / 6 clauses 379756
Layer 1 g 4 = 8 - 9 / 8 clauses 379756
Layer 1 g 5 = 10 - 11 / 10 clauses 379756
Layer 1 g 6 = 12 - 13 / 12 clauses 379756
Layer 1 g 7 = 14 - 15 / 14 clauses 379756
Layer 1 g 8 = 16 - 17 / 16 clauses 379756
Layer 1 g 9 = 18 - 19 / 18 clauses 379756
Layer 1 g 10 = 20 - 21 / 20 clauses 379756
Layer 1 g 11 = 22 - 23 / 22 clauses 379756
Layer 1 g 12 = 24 - 25 / 24 clauses 379756
Layer 1 g 13 = 26 - 27 / 26 clauses 379756
Layer 1 g 14 = 28 - 29 / 28 clauses 379756
Layer 1 g 15 = 30 - 31 / 30 clauses 379756
Layer 1 g 16 = 32 - 33 / 32 clauses 379756
Layer 1 g 17 = 34 - 35 / 34 clauses 379756
Layer 1 g 18 = 36 - 37 / 36 clauses 379756
Layer 1 g 19 = 38 - 39 / 38 clauses 379756
Layer 1 g 20 = 40 - 41 / 40 clauses 379756
Layer 1 g 21 = 42 - 43 / 42 clauses 379756
Layer 1 g 22 = 44 - 45 / 44 clauses 379756
Layer 1 g 23 = 46 - 47 / 46 clauses 379756
Layer 1 g 24 = 48 - 49 / 48 clauses 379756
Layer 1 g 25 = 50 - 51 / 50 clauses 379756
Layer 1 g 26 = 52 - 53 / 52 clauses 379756
Layer 1 g 27 = 54 - 55 / 54 clauses 379756
Layer 1 g 28 = 56 - 57 / 56 clauses 379756
Layer 1 g 29 = 58 - 59 / 58 clauses 379756
Layer 1 g 30 = 60 - 61 / 60 clauses 379756
Layer 1 g 31 = 62 - 63 / 62 clauses 379756
Layer 1 g 32 = 64 - 65 / 64 clauses 379756
Layer 1 g 33 = 66 - 67 / 66 clauses 379756
Layer 1 g 34 = 68 - 69 / 68 clauses 379756
Layer 1 g 35 = 70 - 71 / 70 clauses 379756
Layer 1 g 36 = 72 - 73 / 72 clauses 379756
Layer 1 g 37 = 74 - 75 / 74 clauses 379756
Layer 1 g 38 = 76 - 77 / 76 clauses 379756
Layer 1 g 39 = 78 - 79 / 78 clauses 379756
Layer 1 g 40 = 80 - 81 / 80 clauses 379756
Layer 1 g 41 = 82 - 83 / 82 clauses 379756
Layer 1 g 42 = 84 - 85 / 84 clauses 379756
Layer 1 g 43 = 86 - 87 / 86 clauses 379756
Layer 1 g 44 = 88 - 89 / 88 clauses 379756
Layer 1 g 45 = 90 - 91 / 90 clauses 379756
Layer 1 g 46 = 92 - 93 / 92 clauses 379756
Layer 1 g 47 = 94 - 95 / 94 clauses 379756
Layer 1 g 48 = 96 - 97 / 96 clauses 379756
Layer 1 g 49 = 98 - 99 / 98 clauses 379756
Layer 1 g 50 = 100 - 101 / 100 clauses 379756
Layer 1 g 51 = 102 - 103 / 102 clauses 379756
Layer 1 g 52 = 104 - 105 / 104 clauses 379756
Layer 1 g 53 = 106 - 107 / 106 clauses 379756
Layer 1 g 54 = 108 - 109 / 108 clauses 379756
Layer 1 g 55 = 110 - 111 / 110 clauses 379756
Layer 1 g 56 = 112 - 113 / 112 clauses 379756
Layer 1 g 57 = 114 - 115 / 114 clauses 379756
Layer 1 g 58 = 116 - 117 / 116 clauses 379756
Layer 1 g 59 = 118 - 119 / 118 clauses 379756
Layer 1 g 60 = 120 - 121 / 120 clauses 379756
Layer 1 g 61 = 122 - 123 / 122 clauses 379756
Layer 1 g 62 = 124 - 125 / 124 clauses 379756
Layer 1 g 63 = 126 - 127 / 126 clauses 379756
Layer 1 g 64 = 128 - 129 / 128 clauses 379756
Layer 1 g 65 = 130 - 131 / 130 clauses 379756
Layer 1 g 66 = 132 - 133 / 132 clauses 379756
Layer 1 g 67 = 134 - 135 / 134 clauses 379756
Layer 1 g 68 = 136 - 137 / 136 clauses 379756
Layer 1 g 69 = 138 - 139 / 138 clauses 379756
Layer 1 g 70 = 140 - 141 / 140 clauses 379756
Layer 1 g 71 = 142 - 143 / 142 clauses 379756
Layer 1 g 72 = 144 - 145 / 144 clauses 379756
Layer 1 g 73 = 146 - 147 / 146 clauses 379756
Layer 1 g 74 = 148 - 149 / 148 clauses 379756
Layer 1 g 75 = 150 - 151 / 150 clauses 379756
Layer 1 g 76 = 152 - 153 / 152 clauses 379756
Layer 1 g 77 = 154 - 155 / 154 clauses 379756
Layer 1 g 78 = 156 - 157 / 156 clauses 379756
Layer 1 g 79 = 158 - 159 / 158 clauses 379756
Layer 1 g 80 = 160 - 161 / 160 clauses 379756
Layer 1 g 81 = 162 - 163 / 162 clauses 379756
Layer 1 g 82 = 164 - 165 / 164 clauses 379756
Layer 1 g 83 = 166 - 167 / 166 clauses 379756
Layer 1 g 84 = 168 - 169 / 168 clauses 379756
Layer 1 g 85 = 170 - 171 / 170 clauses 379756
Layer 1 g 86 = 172 - 173 / 172 clauses 379756
Layer 1 g 87 = 174 - 175 / 174 clauses 379756
Layer 1 g 88 = 176 - 177 / 176 clauses 379756
Layer 1 g 89 = 178 - 179 / 178 clauses 379756
Layer 1 g 90 = 180 - 181 / 180 clauses 379756
Layer 1 g 91 = 182 - 183 / 182 clauses 379756
Layer 1 g 92 = 184 - 185 / 184 clauses 379756
Layer 1 g 93 = 186 - 187 / 186 clauses 379756
Layer 1 g 94 = 188 - 189 / 188 clauses 379756
Layer 1 g 95 = 190 - 191 / 190 clauses 379756
Layer 1 g 96 = 192 - 193 / 192 clauses 379756
Layer 1 g 97 = 194 - 195 / 194 clauses 379756
Layer 1 g 98 = 196 - 197 / 196 clauses 379756
Layer 1 g 99 = 198 - 199 / 198 clauses 379756
Layer 1 g 100 = 200 - 201 / 200 clauses 379756
Layer 1 g 101 = 202 - 203 / 202 clauses 379756
Layer 1 g 102 = 204 - 205 / 204 clauses 379756
Layer 1 g 103 = 206 - 207 / 206 clauses 379756
Layer 1 g 104 = 208 - 209 / 208 clauses 379756
Layer 1 g 105 = 210 - 211 / 210 clauses 379756
Layer 1 g 106 = 212 - 213 / 212 clauses 379756
Layer 1 g 107 = 214 - 215 / 214 clauses 379756
Layer 1 g 108 = 216 - 217 / 216 clauses 379756
Layer 1 g 109 = 218 - 219 / 218 clauses 379756
Layer 1 g 110 = 220 - 221 / 220 clauses 379756
Layer 1 g 111 = 222 - 223 / 222 clauses 379756
Layer 1 g 112 = 224 - 225 / 224 clauses 379756
Layer 1 g 113 = 226 - 227 / 226 clauses 379756
Layer 1 g 114 = 228 - 229 / 228 clauses 379756
Layer 1 g 115 = 230 - 231 / 230 clauses 379756
Layer 1 g 116 = 232 - 233 / 232 clauses 379756
Layer 1 g 117 = 234 - 235 / 234 clauses 379756
Layer 1 g 118 = 236 - 237 / 236 clauses 379756
Layer 1 g 119 = 238 - 239 / 238 clauses 379756
Layer 1 g 120 = 240 - 241 / 240 clauses 379756
Layer 1 g 121 = 242 - 243 / 242 clauses 379756
Layer 1 g 122 = 244 - 245 / 244 clauses 379756
Layer 1 g 123 = 246 - 247 / 246 clauses 379756
Layer 1 g 124 = 248 - 249 / 248 clauses 379756
Layer 1 g 125 = 250 - 251 / 250 clauses 379756
Layer 1 g 126 = 252 - 253 / 252 clauses 379756
Layer 1 g 127 = 254 - 255 / 254Still waiting ... running for 73041 will abort at 9223372036854750508
 clauses 379756
Layer 1 g 128 = 256 - 257 / 256 clauses 379756
Layer 1 g 129 = 258 - 259 / 258 clauses 379756
Layer 1 g 130 = 260 - 261 / 260 clauses 379756
Layer 1 g 131 = 262 - 263 / 262 clauses 379756
Layer 1 g 132 = 264 - 265 / 264 clauses 379756
Layer 1 g 133 = 266 - 267 / 266 clauses 379756
Layer 1 g 134 = 268 - 269 / 268 clauses 379756
Layer 1 g 135 = 270 - 271 / 270 clauses 379756
Layer 1 g 136 = 272 - 273 / 272 clauses 379756
Layer 1 g 137 = 274 - 275 / 274 clauses 379756
Layer 1 g 138 = 276 - 277 / 276 clauses 379756
Layer 1 g 139 = 278 - 279 / 278 clauses 379756
Layer 1 g 140 = 280 - 281 / 280 clauses 379756
Layer 1 g 141 = 282 - 283 / 282 clauses 379756
Layer 1 g 142 = 284 - 285 / 284 clauses 379756
Layer 1 g 143 = 286 - 287 / 286 clauses 379756
Layer 1 g 144 = 288 - 289 / 288 clauses 379756
Layer 1 g 145 = 290 - 291 / 290 clauses 379756
Layer 1 g 146 = 292 - 293 / 292 clauses 379756
Layer 1 g 147 = 294 - 295 / 294 clauses 379756
Layer 1 g 148 = 296 - 297 / 296 clauses 379756
Layer 1 g 149 = 298 - 299 / 298 clauses 379756
Layer 1 g 150 = 300 - 301 / 300 clauses 379756
Layer 1 g 151 = 302 - 303 / 302 clauses 379756
Layer 1 g 152 = 304 - 305 / 304 clauses 379756
Layer 1 g 153 = 306 - 307 / 306 clauses 379756
Layer 1 g 154 = 308 - 309 / 308 clauses 379756
Layer 1 g 155 = 310 - 311 / 310 clauses 379756
Layer 1 g 156 = 312 - 313 / 312 clauses 379756
Layer 1 g 157 = 314 - 315 / 314 clauses 379756
Layer 1 g 158 = 316 - 317 / 316 clauses 379756
Layer 1 g 159 = 318 - 319 / 318 clauses 379756
Layer 1 g 160 = 320 - 321 / 320 clauses 379756
Layer 1 g 161 = 322 - 323 / 322 clauses 379756
Layer 1 g 162 = 324 - 325 / 324 clauses 379756
Layer 1 g 163 = 326 - 327 / 326 clauses 379756
Layer 1 g 164 = 328 - 329 / 328 clauses 379756
Layer 1 g 165 = 330 - 331 / 330 clauses 379756
Layer 1 g 166 = 332 - 333 / 332 clauses 379756
Layer 1 g 167 = 334 - 335 / 334 clauses 379756
Layer 1 g 168 = 336 - 337 / 336 clauses 379756
Layer 1 g 169 = 338 - 339 / 338 clauses 379756
Layer 1 g 170 = 340 - 341 / 340 clauses 379756
Layer 1 g 171 = 342 - 343 / 342 clauses 379756
Layer 1 g 172 = 344 - 345 / 344 clauses 379756
Layer 1 g 173 = 346 - 347 / 346 clauses 379756
Layer 1 g 174 = 348 - 349 / 348 clauses 379756
Layer 1 g 175 = 350 - 351 / 350 clauses 379756
Layer 1 g 176 = 352 - 353 / 352 clauses 379756
Layer 1 g 177 = 354 - 355 / 354 clauses 379756
Layer 1 g 178 = 356 - 357 / 356 clauses 379756
Layer 1 g 179 = 358 - 359 / 358 clauses 379756
Layer 1 g 180 = 360 - 361 / 360 clauses 379756
Layer 1 g 181 = 362 - 363 / 362 clauses 379756
Layer 1 g 182 = 364 - 365 / 364 clauses 379756
Layer 1 g 183 = 366 - 367 / 366 clauses 379756
Layer 1 g 184 = 368 - 369 / 368 clauses 379756
Layer 1 g 185 = 370 - 371 / 370 clauses 379756
Layer 1 g 186 = 372 - 373 / 372 clauses 379756
Layer 1 g 187 = 374 - 375 / 374 clauses 379756
Layer 1 g 188 = 376 - 377 / 376 clauses 379756
Layer 1 g 189 = 378 - 379 / 378 clauses 379756
Layer 1 g 190 = 380 - 381 / 380 clauses 379756
Layer 1 g 191 = 382 - 383 / 382 clauses 379756
Layer 1 g 192 = 384 - 385 / 384 clauses 379756
Layer 1 g 193 = 386 - 387 / 386 clauses 379756
Layer 1 g 194 = 388 - 389 / 388 clauses 379756
Layer 1 g 195 = 390 - 391 / 390 clauses 379756
Layer 1 g 196 = 392 - 393 / 392 clauses 379756
Layer 1 g 197 = 394 - 395 / 394 clauses 379756
Layer 1 g 198 = 396 - 397 / 396 clauses 379756
Layer 1 g 199 = 398 - 399 / 398 clauses 379756
Layer 1 g 200 = 400 - 401 / 400 clauses 379756
Layer 1 g 201 = 402 - 403 / 402 clauses 379756
Layer 1 g 202 = 404 - 405 / 404 clauses 379756
Layer 1 g 203 = 406 - 407 / 406 clauses 379756
Layer 1 g 204 = 408 - 409 / 408 clauses 379756
Layer 1 g 205 = 410 - 411 / 410 clauses 379756
Layer 1 g 206 = 412 - 413 / 412 clauses 379756
Layer 1 g 207 = 414 - 415 / 414 clauses 379756
Layer 1 g 208 = 416 - 417 / 416 clauses 379756
Layer 1 g 209 = 418 - 419 / 418 clauses 379756
Layer 1 g 210 = 420 - 421 / 420 clauses 379756
Layer 1 g 211 = 422 - 423 / 422 clauses 379756
Layer 1 g 212 = 424 - 425 / 424 clauses 379756
Layer 1 g 213 = 426 - 427 / 426 clauses 379756
Layer 1 g 214 = 428 - 429 / 428 clauses 379756
Layer 1 g 215 = 430 - 431 / 430 clauses 379756
Layer 1 g 216 = 432 - 433 / 432 clauses 379756
Layer 1 g 217 = 434 - 435 / 434 clauses 379756
Layer 1 g 218 = 436 - 437 / 436 clauses 379756
Layer 1 g 219 = 438 - 439 / 438 clauses 379756
Layer 1 g 220 = 440 - 441 / 440 clauses 379756
Layer 1 g 221 = 442 - 443 / 442 clauses 379756
Layer 1 g 222 = 444 - 445 / 444 clauses 379756
Layer 1 g 223 = 446 - 447 / 446 clauses 379756
Layer 1 g 224 = 448 - 449 / 448 clauses 379756
Layer 1 g 225 = 450 - 451 / 450 clauses 379756
Layer 1 g 226 = 452 - 453 / 452 clauses 379756
Layer 1 g 227 = 454 - 455 / 454 clauses 379756
Layer 1 g 228 = 456 - 457 / 456 clauses 379756
Layer 1 g 229 = 458 - 459 / 458 clauses 379756
Layer 1 g 230 = 460 - 461 / 460 clauses 379756
Layer 1 g 231 = 462 - 463 / 462 clauses 379756
Layer 1 g 232 = 464 - 465 / 464 clauses 379756
Layer 1 g 233 = 466 - 467 / 466 clauses 379756
Layer 1 g 234 = 468 - 469 / 468 clauses 379756
Layer 1 g 235 = 470 - 471 / 470 clauses 379756
Layer 1 g 236 = 472 - 473 / 472 clauses 379756
Layer 1 g 237 = 474 - 475 / 474 clauses 379756
Layer 1 g 238 = 476 - 477 / 476 clauses 379756
Layer 1 g 239 = 478 - 479 / 478 clauses 379756
Layer 1 g 240 = 480 - 481 / 480 clauses 379756
Layer 1 g 241 = 482 - 483 / 482 clauses 379756
Layer 1 g 242 = 484 - 485 / 484 clauses 379756
Layer 1 g 243 = 486 - 487 / 486 clauses 379756
Layer 1 g 244 = 488 - 489 / 488 clauses 379756
Layer 1 g 245 = 490 - 491 / 490 clauses 379756
Layer 1 g 246 = 492 - 493 / 492 clauses 379756
Layer 1 g 247 = 494 - 495 / 494 clauses 379756
Layer 1 g 248 = 496 - 497 / 496
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 166.110 MEMPEAK_KBS 8006983.68
