PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p13.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p13.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p13.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Grounded planning graph ... done in 290ms.
	Number of Grounded Actions 437
	Number of Grounded Literals 157
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Grounding ... done.
	number of abstract tasks = 96
	number of tasks = 336
	number of decomposition methods = 242
	number of predicates = 174
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 96
	number of tasks = 336
	number of decomposition methods = 242
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 62ms.
	Number of Grounded Actions 240
	Number of Grounded Literals 114
	number of abstract tasks = 96
	number of tasks = 336
	number of decomposition methods = 242
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 96
	number of tasks = 336
	number of decomposition methods = 242
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 97
	number of tasks = 337
	number of decomposition methods = 243
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 97
	number of tasks = 337
	number of decomposition methods = 243
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 9ms.
	Number of Grounded Actions 240
	Number of Grounded Literals 114
	number of abstract tasks = 97
	number of tasks = 337
	number of decomposition methods = 243
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 97
	number of tasks = 337
	number of decomposition methods = 243
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 97
	number of tasks = 337
	number of decomposition methods = 243
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 97
	number of tasks = 337
	number of decomposition methods = 243
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 97
	number of tasks = 337
	number of decomposition methods = 243
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Tasks 240 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773083ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854773020
done
initial PDT has 18 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 12 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 19323
Size 19318 at 0/240
Size 10954
Size 10942 at 0/240
Size 4584
Size 4584 at 0/240
Size 2160
Size 2160 at 0/240
Size 1018
Size 1018 at 0/240
Size 976
Size 976 at 0/240
Size 976
Invariant time: 0.21
Number of invariants: 976
Invariant Clauses 12688
NUMBER OF CLAUSES 15646
NUMBER OF STATE CLAUSES 15544
NUMBER OF DECOMPOSITION CLAUSES 102
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.35000000000001% 0.65% 0.0% 
NUMBER OF PATHS 12
Starting cryptominisat5.5
Setting starttime of solver to 1604509070479
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 78 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 48 leafs
SHOP LEAFS 30
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854772098
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 47824
NUMBER OF CLAUSES 61598
NUMBER OF STATE CLAUSES 59542
NUMBER OF DECOMPOSITION CLAUSES 2056
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.66% 3.34% 0.0% 
NUMBER OF PATHS 48
Starting cryptominisat5.5
Setting starttime of solver to 1604509071150
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 138 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 90 leafs
SHOP LEAFS 48
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854771501
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 88816
NUMBER OF CLAUSES 116100
NUMBER OF STATE CLAUSES 111031
NUMBER OF DECOMPOSITION CLAUSES 5069
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.63% 4.37% 0.0% 
NUMBER OF PATHS 90
Starting cryptominisat5.5
Setting starttime of solver to 1604509071776
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 184 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 180 leafs
SHOP LEAFS 102
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770841
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 176656
NUMBER OF CLAUSES 231512
NUMBER OF STATE CLAUSES 220960
NUMBER OF DECOMPOSITION CLAUSES 10552
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.44% 4.5600000000000005% 0.0% 
NUMBER OF PATHS 180
Starting cryptominisat5.5
Setting starttime of solver to 1604509072490
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 192 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 190 leafs
SHOP LEAFS 106
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 101 will abort at 9223372036854770209
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 186416
NUMBER OF CLAUSES 244240
NUMBER OF STATE CLAUSES 233176
NUMBER OF DECOMPOSITION CLAUSES 11064
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.47% 4.53% 0.0% 
NUMBER OF PATHS 190
Starting cryptominisat5.5
Setting starttime of solver to 1604509073087
Command exited with non-zero status 20
0.06 0.00

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 108
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Still waiting ... running for 100 will abort at 9223372036854769550
Invariant Clauses 191296
NUMBER OF CLAUSES 250592
NUMBER OF STATE CLAUSES 239284
NUMBER OF DECOMPOSITION CLAUSES 11308
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.49% 4.51% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509073736
Command exited with non-zero status 10
0.07 0.02

Time command gave the following runtime for the solver: 90
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_3;2,60 60 m4_do_clear
3;2 25 pathaction!2_3;2,276
Consider method^1_4,43 43 m1_do_put_on
4 76 pathaction!1_4,5
Consider method^1_1,66 66 m2_do_put_on
1 26 pathaction!1_1,1
Consider method^2_5;2,186 186 m4_do_clear
5;2 112 pathaction!2_5;2,272
Consider method^2_5;1,225 225 m7_do_get_truck
5;1 89 pathaction!2_5;1,97
Consider method^3_0;4;1,65 65 m5_do_clear
0;4;1 24 pathaction!3_0;4;1,281
Consider method^2_3;1,103 103 m4_do_clear
3;1 67 pathaction!2_3;1,275
Consider method^6_0;2;4;2;1;3,37 37 m6_do_get_truck
0;2;4;2;1;3 83 pathaction!6_0;2;4;2;1;3,94
Consider method^2_3;3,13 13 m9_do_lift_crate
3;3 102 pathaction!2_3;3,330
Consider method^2_2;1,78 78 m7_do_get_truck
2;1 84 pathaction!2_2;1,98
Consider method^2_4;2,107 107 m4_do_clear
4;2 22 pathaction!2_4;2,274
Consider method^1_3,137 137 m1_do_put_on
3 105 pathaction!1_3,4
Consider method^1_5,211 211 m2_do_put_on
5 0 pathaction!1_5,0
Consider method^1_0,96 96 m3_do_put_on
0 92 pathaction!1_0,2
Consider method^1_2,240 240 m2_do_put_on
2 93 pathaction!1_2,3
Consider method^2_0;4,21 21 m11_do_unload_truck
0;4 111 pathaction!2_0;4,82
Consider method^0_,242 242 __top_1
 55 pathaction!0_,336
Consider method^4_0;4;1;3,185 185 m6_do_get_truck
0;4;1;3 29 pathaction!4_0;4;1;3,93
Consider method^3_0;2;4,18 18 m10_do_load_truck
0;2;4 108 pathaction!3_0;2;4,199
Consider method^5_0;2;4;2;3,37 37 m6_do_get_truck
0;2;4;2;3 1 pathaction!5_0;2;4;2;3,94
Consider method^4_0;2;4;2,140 140 m5_do_clear
0;2;4;2 91 pathaction!4_0;2;4;2,284
Consider method^4_0;2;4;1,135 135 m7_do_get_truck
0;2;4;1 73 pathaction!4_0;2;4;1,94
Consider method^2_1;2,26 26 m4_do_clear
1;2 79 pathaction!2_1;2,277
Consider method^5_0;2;4;2;1,126 126 m5_do_clear
0;2;4;2;1 44 pathaction!5_0;2;4;2;1,273
Consider method^2_2;2,29 29 m4_do_clear
2;2 114 pathaction!2_2;2,278
Consider method^2_4;3,169 169 m9_do_lift_crate
4;3 9 pathaction!2_4;3,332
Consider method^2_1;1,165 165 m7_do_get_truck
1;1 71 pathaction!2_1;1,91
Consider method^6_0;2;4;2;1;1,198 198 m4_do_clear
0;2;4;2;1;1 77 pathaction!6_0;2;4;2;1;1,270
Consider method^2_0;2,215 215 _m3_do_put_on_2
0;2 30 pathaction!2_0;2,297
Consider method^2_4;1,166 166 m4_do_clear
4;1 98 pathaction!2_4;1,285
Consider method^4_0;4;1;1,111 111 m4_do_clear
0;4;1;1 21 pathaction!4_0;4;1;1,283


CHECKING primitive solution of length 65 ...
true 63 __method_precondition_m10_do_load_truck_10_precondition[crate0,depot2,pallet2,hoist2;]
true 75 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot2;]
true 107 Drive[truck0,distributor1,depot2;]
true 85 __method_precondition_m5_do_clear_5_precondition[crate0,crate1,depot2,hoist2;]
true 34 __method_precondition_m5_do_clear_5_precondition[crate1,crate5,depot2,hoist2;]
true 35 __method_precondition_m4_do_clear_4_precondition[crate5,depot2;]
true 40 nop[;]
true 109 Lift[hoist2,crate5,crate1,depot2;]
true 39 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot2;]
true 18 nop[;]
true 56 Load[hoist2,crate5,truck0,depot2;]
true 54 Lift[hoist2,crate1,crate0,depot2;]
true 52 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot2;]
true 38 nop[;]
true 80 Load[hoist2,crate1,truck0,depot2;]
true 72 Lift[hoist2,crate0,pallet2,depot2;]
true 3 Load[hoist2,crate0,truck0,depot2;]
true 42 Drive[truck0,depot2,depot0;]
true 41 __method_precondition_m11_do_unload_truck_11_precondition[pallet0,hoist0,crate0,truck0,depot0;]
true 58 __method_precondition_m5_do_clear_5_precondition[pallet0,crate2,depot0,hoist0;]
true 49 __method_precondition_m4_do_clear_4_precondition[crate2,depot0;]
true 81 nop[;]
true 14 Lift[hoist0,crate2,pallet0,depot0;]
true 82 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 32 nop[;]
true 45 Load[hoist0,crate2,truck0,depot0;]
true 62 Unload[hoist0,crate0,truck0,depot0;]
true 94 Drop[hoist0,crate0,pallet0,depot0;]
true 86 __method_precondition_m2_do_put_on_2_precondition[crate1,truck0;]
true 50 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor2;]
true 27 Drive[truck0,depot0,distributor2;]
true 8 __method_precondition_m4_do_clear_4_precondition[pallet5,distributor2;]
true 17 nop[;]
true 48 Unload[hoist5,crate1,truck0,distributor2;]
true 59 Drop[hoist5,crate1,pallet5,distributor2;]
true 100 __method_precondition_m2_do_put_on_2_precondition[crate2,truck0;]
true 28 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 51 Drive[truck0,distributor2,distributor1;]
true 74 __method_precondition_m4_do_clear_4_precondition[pallet4,distributor1;]
true 116 nop[;]
true 31 Unload[hoist4,crate2,truck0,distributor1;]
true 4 Drop[hoist4,crate2,pallet4,distributor1;]
true 23 __method_precondition_m1_do_put_on_1_precondition[crate3,depot0;]
true 5 __method_precondition_m4_do_clear_4_precondition[crate3,depot0;]
true 87 nop[;]
true 16 __method_precondition_m4_do_clear_4_precondition[pallet7,depot0;]
true 46 nop[;]
true 57 __method_precondition_m9_do_lift_crate_9_precondition[crate3,pallet8,depot0,hoist0;]
true 33 Lift[hoist0,crate3,pallet8,depot0;]
true 10 Drop[hoist0,crate3,pallet7,depot0;]
true 66 __method_precondition_m1_do_put_on_1_precondition[crate4,distributor0;]
true 106 __method_precondition_m4_do_clear_4_precondition[crate4,distributor0;]
true 90 nop[;]
true 95 __method_precondition_m4_do_clear_4_precondition[pallet9,distributor0;]
true 2 nop[;]
true 68 __method_precondition_m9_do_lift_crate_9_precondition[crate4,pallet3,distributor0,hoist3;]
true 101 Lift[hoist3,crate4,pallet3,distributor0;]
true 78 Drop[hoist3,crate4,pallet9,distributor0;]
true 70 __method_precondition_m2_do_put_on_2_precondition[crate5,truck0;]
true 99 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot1;]
true 15 Drive[truck0,distributor1,depot1;]
true 37 __method_precondition_m4_do_clear_4_precondition[pallet1,depot1;]
true 43 nop[;]
true 20 Unload[hoist1,crate5,truck0,depot1;]
true 36 Drop[hoist1,crate5,pallet1,depot1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 196
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 392
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 588
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 784
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 980
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 1176
TSTG: 7
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 7
ICAPS: 1372
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 1568
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 1764
TSTG: 7
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 10
ICAPS: 1960
TSTG: 7
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 11
ICAPS: 2156
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 2352
TSTG: 7
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 13
ICAPS: 2548
TSTG: 7
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 14
ICAPS: 2744
TSTG: 7
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 15
ICAPS: 2940
TSTG: 7
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 16
ICAPS: 3136
TSTG: 7
Method: 2147483647
DP max: 7
Taking minimum: 7
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 37
  lower bound = 15

Running SAT search with cost bound = 26
==================================================
  upper bound = 37
  lower bound = 15
LEN 26
ICAPS: 5096
TSTG: 7
Method: 2147483647
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854768490
done
PDT has 195 leafs
SHOP LEAFS 108
Assignment implications
Generating clauses representing decomposition ... done
At most K: 8ms input: 645 K = 26
Number of actions Formula: 24ms for 34158 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 191296
NUMBER OF CLAUSES 4147126
NUMBER OF STATE CLAUSES 4101660
NUMBER OF DECOMPOSITION CLAUSES 45466
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.9% 1.1% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509081726
Command exited with non-zero status 20
1.04 0.05

Time command gave the following runtime for the solver: 1090
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 31
==================================================
  upper bound = 37
  lower bound = 26
LEN 31
ICAPS: 6076
TSTG: 7
Method: 2147483647
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 108
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854759589
done
At most K: 9ms input: 645 K = 31
Number of actions Formula: 14ms for 40603 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 191296
NUMBER OF CLAUSES 4153571
NUMBER OF STATE CLAUSES 4101660
NUMBER OF DECOMPOSITION CLAUSES 51911
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.75% 1.25% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509089738
Command exited with non-zero status 20
1.02 0.05

Time command gave the following runtime for the solver: 1070
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 34
==================================================
  upper bound = 37
  lower bound = 31
LEN 34
ICAPS: 6664
TSTG: 7
Method: 2147483647
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... Still waiting ... running for 101 will abort at 9223372036854751561
done
PDT has 195 leafs
SHOP LEAFS 108
Assignment implications
Generating clauses representing decomposition ... done
At most K: 24ms input: 645 K = 34
Number of actions Formula: 26ms for 44470 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 191296
NUMBER OF CLAUSES 4157438
NUMBER OF STATE CLAUSES 4101660
NUMBER OF DECOMPOSITION CLAUSES 55778
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.66% 1.34% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509097557
Command exited with non-zero status 20
1.04 0.04

Time command gave the following runtime for the solver: 1080
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 35
==================================================
  upper bound = 37
  lower bound = 34
LEN 35
ICAPS: 6860
TSTG: 7
Method: 2147483647
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 108
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854743751
Generating clauses representing decomposition ... done
At most K: 8ms input: 645 K = 35
Number of actions Formula: 10ms for 45759 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 191296
NUMBER OF CLAUSES 4158727
NUMBER OF STATE CLAUSES 4101660
NUMBER OF DECOMPOSITION CLAUSES 57067
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.63% 1.37% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509105282
Command exited with non-zero status 20
1.04 0.07

Time command gave the following runtime for the solver: 1110
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 36
==================================================
  upper bound = 37
  lower bound = 35
LEN 36
ICAPS: 7056
TSTG: 7
Method: 2147483647
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854736022
done
PDT has 195 leafs
SHOP LEAFS 108
Assignment implications
Generating clauses representing decomposition ... done
At most K: 9ms input: 645 K = 36
Number of actions Formula: 11ms for 47048 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 191296
NUMBER OF CLAUSES 4160016
NUMBER OF STATE CLAUSES 4101660
NUMBER OF DECOMPOSITION CLAUSES 58356
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.60000000000001% 1.4000000000000001% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509113310
Command exited with non-zero status 20
1.06 0.06

Time command gave the following runtime for the solver: 1120
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 746230968
planner result = SOLUTION
============ solution ============
number of primitive plan steps = 65
cost of solution               = 37
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 114
number of actions                    = 337
number of abstract actions           = 97
number of primitive actions          = 240
number of methods                    = 243
number of primitive shop actions     = 117
number of primitive non-shop actions = 123
size of largest method               = 6
average method size                  = 2
============ sat ============
plan length                     = 36
number of variables             = 153329
number of clauses               = 4160175
average size of clauses         = 2.916884506060442
number of assert                = 46
number of horn                  = 4130675
K offset                        = 0
K chosen value                  = 7
state formula                   = 4101660
method children clauses         = 0
number of paths                 = 195
maximum plan length             = 195
number of decomposition clauses = 58356
number of ordering clauses      = 0
number of state clauses         = 4101660
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 47753
============ parsing ============
total                         = 1024
file parser                   = 562
sort expansion                = 163
closed world assumption       = 122
inherit preconditions         = 0
shop methods                  = 42
eliminate identical variables = 52
strip domain of hybridity     = 2
flatten formula               = 80
============ preprocessing ============
total                                      = 1568
compile negative preconditions             = 63
compile unit methods                       = 0
split parameter                            = 17
compile methods with identical tasks       = 3
removing unnecessary predicates            = 167
lifted reachabiltiy analysis               = 69
grounded planning graph analysis           = 583
grounded task decomposition graph analysis = 485
grounding                                  = 141
create artificial top task                 = 33
============ search preparation ============
compute state invariants = 309
============ sat ============
total                                        = 40835
generate formula                             = 30512
generate path decomposition tree             = 439
normalise path decomposition tree            = 123
sog optimisation                             = 141
translate path decomposition tree to clauses = 520
generate state formula                       = 28856
generate state invariant formula             = 1047
transform to DIMACS                          = 4047
SAT solver                                   = 5710
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 30
SAT solver for K=0005                        = 50
SAT solver for K=0006                        = 60
SAT solver for K=0007                        = 1120

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="240";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="97";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="746230968";"40 sat:20:state formula"="4101660";"40 sat:01:number of variables"="153329";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="195";"40 sat:00:plan length"="36";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="243";"01 solution:02:cost of solution"="37";"30 problem:07:number of primitive shop actions"="117";"01 solution:01:number of primitive plan steps"="65";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="337";"30 problem:08:number of primitive non-shop actions"="123";"30 problem:02:number of predicates"="114";"40 sat:03:number of horn"="4130675";"40 sat:15:K chosen value"="7";"30 problem:10:average method size"="2";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="6";"40 sat:03:average size of clauses"="2.916884506060442";"40 sat:02:number of clauses"="4160175";"40 sat:50:number of state clauses"="4101660";"40 sat:03:number of assert"="46";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="195";"40 sat:50:number of decomposition clauses"="58356";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="562";"01 parsing:08:flatten formula"="80";"40 sat:41:SAT solver for K=0004"="30";"40 sat:00:total"="40835";"40 sat:16:generate state formula"="28856";"40 sat:20:transform to DIMACS"="4047";"40 sat:11:generate path decomposition tree"="439";"02 preprocessing:07:compile methods with identical tasks"="3";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="167";"01 parsing:03:closed world assumption"="122";"02 preprocessing:11:lifted reachabiltiy analysis"="69";"01 parsing:02:sort expansion"="163";"40 sat:12:normalise path decomposition tree"="123";"40 sat:40:SAT solver"="5710";"01 parsing:00:total"="1024";"40 sat:10:generate formula"="30512";"40 sat:41:SAT solver for K=0005"="50";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="63";"00 total:00:total"="47753";"40 sat:13:sog optimisation"="141";"02 preprocessing:12:grounded planning graph analysis"="583";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="485";"40 sat:41:SAT solver for K=0006"="60";"02 preprocessing:04:split parameter"="17";"01 parsing:05:shop methods"="42";"10 search preparation:02:compute state invariants"="309";"01 parsing:06:eliminate identical variables"="52";"40 sat:15:translate path decomposition tree to clauses"="520";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="1047";"02 preprocessing:00:total"="1568";"02 preprocessing:99:create artificial top task"="33";"02 preprocessing:84:grounding"="141";"40 sat:41:SAT solver for K=0007"="1120"
#!verify __method_precondition_m10_do_load_truck_10_precondition[crate0,depot2,pallet2,hoist2];__method_precondition_m7_do_get_truck_7_precondition[truck0,depot2];Drive[truck0,distributor1,depot2];__method_precondition_m5_do_clear_5_precondition[crate0,crate1,depot2,hoist2];__method_precondition_m5_do_clear_5_precondition[crate1,crate5,depot2,hoist2];__method_precondition_m4_do_clear_4_precondition[crate5,depot2];nop[];Lift[hoist2,crate5,crate1,depot2];__method_precondition_m6_do_get_truck_6_precondition[truck0,depot2];nop[];Load[hoist2,crate5,truck0,depot2];Lift[hoist2,crate1,crate0,depot2];__method_precondition_m6_do_get_truck_6_precondition[truck0,depot2];nop[];Load[hoist2,crate1,truck0,depot2];Lift[hoist2,crate0,pallet2,depot2];Load[hoist2,crate0,truck0,depot2];Drive[truck0,depot2,depot0];__method_precondition_m11_do_unload_truck_11_precondition[pallet0,hoist0,crate0,truck0,depot0];__method_precondition_m5_do_clear_5_precondition[pallet0,crate2,depot0,hoist0];__method_precondition_m4_do_clear_4_precondition[crate2,depot0];nop[];Lift[hoist0,crate2,pallet0,depot0];__method_precondition_m6_do_get_truck_6_precondition[truck0,depot0];nop[];Load[hoist0,crate2,truck0,depot0];Unload[hoist0,crate0,truck0,depot0];Drop[hoist0,crate0,pallet0,depot0];__method_precondition_m2_do_put_on_2_precondition[crate1,truck0];__method_precondition_m7_do_get_truck_7_precondition[truck0,distributor2];Drive[truck0,depot0,distributor2];__method_precondition_m4_do_clear_4_precondition[pallet5,distributor2];nop[];Unload[hoist5,crate1,truck0,distributor2];Drop[hoist5,crate1,pallet5,distributor2];__method_precondition_m2_do_put_on_2_precondition[crate2,truck0];__method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1];Drive[truck0,distributor2,distributor1];__method_precondition_m4_do_clear_4_precondition[pallet4,distributor1];nop[];Unload[hoist4,crate2,truck0,distributor1];Drop[hoist4,crate2,pallet4,distributor1];__method_precondition_m1_do_put_on_1_precondition[crate3,depot0];__method_precondition_m4_do_clear_4_precondition[crate3,depot0];nop[];__method_precondition_m4_do_clear_4_precondition[pallet7,depot0];nop[];__method_precondition_m9_do_lift_crate_9_precondition[crate3,pallet8,depot0,hoist0];Lift[hoist0,crate3,pallet8,depot0];Drop[hoist0,crate3,pallet7,depot0];__method_precondition_m1_do_put_on_1_precondition[crate4,distributor0];__method_precondition_m4_do_clear_4_precondition[crate4,distributor0];nop[];__method_precondition_m4_do_clear_4_precondition[pallet9,distributor0];nop[];__method_precondition_m9_do_lift_crate_9_precondition[crate4,pallet3,distributor0,hoist3];Lift[hoist3,crate4,pallet3,distributor0];Drop[hoist3,crate4,pallet9,distributor0];__method_precondition_m2_do_put_on_2_precondition[crate5,truck0];__method_precondition_m7_do_get_truck_7_precondition[truck0,depot1];Drive[truck0,distributor1,depot1];__method_precondition_m4_do_clear_4_precondition[pallet1,depot1];nop[];Unload[hoist1,crate5,truck0,depot1];Drop[hoist1,crate5,pallet1,depot1]
==>
0 __method_precondition_m10_do_load_truck_10_precondition crate0 depot2 pallet2 hoist2 
1 __method_precondition_m7_do_get_truck_7_precondition truck0 depot2 
2 Drive truck0 distributor1 depot2 
3 __method_precondition_m5_do_clear_5_precondition crate0 crate1 depot2 hoist2 
4 __method_precondition_m5_do_clear_5_precondition crate1 crate5 depot2 hoist2 
5 __method_precondition_m4_do_clear_4_precondition crate5 depot2 
6 nop  
7 Lift hoist2 crate5 crate1 depot2 
8 __method_precondition_m6_do_get_truck_6_precondition truck0 depot2 
9 nop  
10 Load hoist2 crate5 truck0 depot2 
11 Lift hoist2 crate1 crate0 depot2 
12 __method_precondition_m6_do_get_truck_6_precondition truck0 depot2 
13 nop  
14 Load hoist2 crate1 truck0 depot2 
15 Lift hoist2 crate0 pallet2 depot2 
16 Load hoist2 crate0 truck0 depot2 
17 Drive truck0 depot2 depot0 
18 __method_precondition_m11_do_unload_truck_11_precondition pallet0 hoist0 crate0 truck0 depot0 
19 __method_precondition_m5_do_clear_5_precondition pallet0 crate2 depot0 hoist0 
20 __method_precondition_m4_do_clear_4_precondition crate2 depot0 
21 nop  
22 Lift hoist0 crate2 pallet0 depot0 
23 __method_precondition_m6_do_get_truck_6_precondition truck0 depot0 
24 nop  
25 Load hoist0 crate2 truck0 depot0 
26 Unload hoist0 crate0 truck0 depot0 
27 Drop hoist0 crate0 pallet0 depot0 
28 __method_precondition_m2_do_put_on_2_precondition crate1 truck0 
29 __method_precondition_m7_do_get_truck_7_precondition truck0 distributor2 
30 Drive truck0 depot0 distributor2 
31 __method_precondition_m4_do_clear_4_precondition pallet5 distributor2 
32 nop  
33 Unload hoist5 crate1 truck0 distributor2 
34 Drop hoist5 crate1 pallet5 distributor2 
35 __method_precondition_m2_do_put_on_2_precondition crate2 truck0 
36 __method_precondition_m7_do_get_truck_7_precondition truck0 distributor1 
37 Drive truck0 distributor2 distributor1 
38 __method_precondition_m4_do_clear_4_precondition pallet4 distributor1 
39 nop  
40 Unload hoist4 crate2 truck0 distributor1 
41 Drop hoist4 crate2 pallet4 distributor1 
42 __method_precondition_m1_do_put_on_1_precondition crate3 depot0 
43 __method_precondition_m4_do_clear_4_precondition crate3 depot0 
44 nop  
45 __method_precondition_m4_do_clear_4_precondition pallet7 depot0 
46 nop  
47 __method_precondition_m9_do_lift_crate_9_precondition crate3 pallet8 depot0 hoist0 
48 Lift hoist0 crate3 pallet8 depot0 
49 Drop hoist0 crate3 pallet7 depot0 
50 __method_precondition_m1_do_put_on_1_precondition crate4 distributor0 
51 __method_precondition_m4_do_clear_4_precondition crate4 distributor0 
52 nop  
53 __method_precondition_m4_do_clear_4_precondition pallet9 distributor0 
54 nop  
55 __method_precondition_m9_do_lift_crate_9_precondition crate4 pallet3 distributor0 hoist3 
56 Lift hoist3 crate4 pallet3 distributor0 
57 Drop hoist3 crate4 pallet9 distributor0 
58 __method_precondition_m2_do_put_on_2_precondition crate5 truck0 
59 __method_precondition_m7_do_get_truck_7_precondition truck0 depot1 
60 Drive truck0 distributor1 depot1 
61 __method_precondition_m4_do_clear_4_precondition pallet1 depot1 
62 nop  
63 Unload hoist1 crate5 truck0 depot1 
64 Drop hoist1 crate5 pallet1 depot1 
root 87
65 do_put_on crate1 pallet5  -> m2_do_put_on 28 92 75 33 34
66 do_unload_truck crate0 pallet0 depot0 truck0  -> m11_do_unload_truck 18 77 26 27
67 do_clear pallet9 distributor0  -> m4_do_clear 53 54
68 do_get_truck truck0 depot2  -> m7_do_get_truck 1 2
69 do_clear crate2 depot0  -> m4_do_clear 20 21
70 do_get_truck truck0 depot2  -> m6_do_get_truck 8 9
71 do_put_on crate4 pallet9  -> m1_do_put_on 50 80 67 89 57
72 do_get_truck truck0 depot1  -> m7_do_get_truck 59 60
73 do_put_on crate0 pallet0  -> m3_do_put_on 85 17 66
74 do_lift_crate crate3 depot0 hoist0  -> m9_do_lift_crate 47 48
75 do_clear pallet5 distributor2  -> m4_do_clear 31 32
76 do_clear crate5 depot2  -> m4_do_clear 5 6
77 do_clear pallet0 depot0  -> m5_do_clear 19 69 22 82 25
78 do_clear pallet7 depot0  -> m4_do_clear 45 46
79 do_get_truck truck0 distributor1  -> m7_do_get_truck 36 37
80 do_clear crate4 distributor0  -> m4_do_clear 51 52
81 do_put_on crate2 pallet4  -> m2_do_put_on 35 79 88 40 41
82 do_get_truck truck0 depot0  -> m6_do_get_truck 23 24
83 do_get_truck truck0 depot2  -> m6_do_get_truck 12 13
84 do_clear pallet1 depot1  -> m4_do_clear 61 62
85 do_load_truck_m3_do_put_on_sip_2 crate0 depot2 truck0  -> _m3_do_put_on_2 86
86 do_load_truck crate0 pallet2 depot2 truck0  -> m10_do_load_truck 0 68 90 15 16
87 __artificialTopCompilation__top_1  -> __top_1 73 65 81 93 71 94
88 do_clear pallet4 distributor1  -> m4_do_clear 38 39
89 do_lift_crate crate4 distributor0 hoist3  -> m9_do_lift_crate 55 56
90 do_clear crate0 depot2  -> m5_do_clear 3 95 11 83 14
91 do_clear crate3 depot0  -> m4_do_clear 43 44
92 do_get_truck truck0 distributor2  -> m7_do_get_truck 29 30
93 do_put_on crate3 pallet7  -> m1_do_put_on 42 91 78 74 49
94 do_put_on crate5 pallet1  -> m2_do_put_on 58 72 84 63 64
95 do_clear crate1 depot2  -> m5_do_clear 4 76 7 70 10

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 48.766 MEMPEAK_KBS 1060139.008
