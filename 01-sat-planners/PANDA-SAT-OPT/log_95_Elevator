PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/Elevator/domain.hddl instances/Elevator/p15.hddl"


Planner Configuration
=====================
Domain: instances/Elevator/domain.hddl
Problem: instances/Elevator/p15.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p15.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Compiling negative preconditions ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Compiling split parameters ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Grounded planning graph ... done in 474ms.
	Number of Grounded Actions 1951
	Number of Grounded Literals 555
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Two Way TDG ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Grounding ... done.
	number of abstract tasks = 92
	number of tasks = 1666
	number of decomposition methods = 1050
	number of predicates = 555
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 1050
	number of epsilon methods = 0
	number of primitive tasks = 1574
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 92
	number of tasks = 1666
	number of decomposition methods = 1050
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 1050
	number of epsilon methods = 0
	number of primitive tasks = 1574
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 140ms.
	Number of Grounded Actions 898
	Number of Grounded Literals 77
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 69ms.
	Number of Grounded Actions 898
	Number of Grounded Literals 77
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 54
	number of tasks = 952
	number of decomposition methods = 597
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 54
	number of tasks = 952
	number of decomposition methods = 597
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Tasks 898 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771982ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854771918
done
initial PDT has 20 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 14 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 1ms for 0 clauses
Computing invariants [Rintanen]
candidates build 8778
Size 8778 at 0/898
Size 5201 at 500/898
Size 2714
Size 2714 at 0/898
Size 2086 at 500/898
Size 864
Size 864 at 0/898
Size 592 at 500/898
Size 196
Size 196 at 0/898
Size 196 at 500/898
Size 196
Invariant time: 0.222
Number of invariants: 196
Invariant Clauses 2940
NUMBER OF CLAUSES 21231
NUMBER OF STATE CLAUSES 6770
NUMBER OF DECOMPOSITION CLAUSES 14461
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.89% 68.11% 0.0% 
NUMBER OF PATHS 14
Starting cryptominisat5.5
Setting starttime of solver to 1604512467118
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 34 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 20
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770765
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 5292
NUMBER OF CLAUSES 49027
NUMBER OF STATE CLAUSES 13186
NUMBER OF DECOMPOSITION CLAUSES 35841
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 26.900000000000002% 73.10000000000001% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat5.5
Setting starttime of solver to 1604512467819
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 52 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 42 leafs
SHOP LEAFS 30
Assignment implications
Still waiting ... running for 101 will abort at 9223372036854770199
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 8428
NUMBER OF CLAUSES 75780
NUMBER OF STATE CLAUSES 20942
NUMBER OF DECOMPOSITION CLAUSES 54838
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 27.64% 72.36% 0.0% 
NUMBER OF PATHS 42
Starting cryptominisat5.5
Setting starttime of solver to 1604512468492
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 74 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 62 leafs
SHOP LEAFS 42
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854769544
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 12348
NUMBER OF CLAUSES 107187
NUMBER OF STATE CLAUSES 30416
NUMBER OF DECOMPOSITION CLAUSES 76771
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 28.38% 71.62% 0.0% 
NUMBER OF PATHS 62
Starting cryptominisat5.5
Setting starttime of solver to 1604512469191
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 100 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 86 leafs
SHOP LEAFS 56
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768898
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 17052
NUMBER OF CLAUSES 143248
NUMBER OF STATE CLAUSES 41608
NUMBER OF DECOMPOSITION CLAUSES 101640
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.05% 70.95% 0.0% 
NUMBER OF PATHS 86
Starting cryptominisat5.5
Setting starttime of solver to 1604512469913
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 130 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854768095
done
PDT has 114 leafs
SHOP LEAFS 72
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 22540
NUMBER OF CLAUSES 183963
NUMBER OF STATE CLAUSES 54518
NUMBER OF DECOMPOSITION CLAUSES 129445
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.64% 70.36% 0.0% 
NUMBER OF PATHS 114
Starting cryptominisat5.5
Setting starttime of solver to 1604512470806
Command exited with non-zero status 20
0.06 0.00

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... done
initial PDT has 164 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 146 leafs
SHOP LEAFS 90
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854767210
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 28812
NUMBER OF CLAUSES 229332
NUMBER OF STATE CLAUSES 69146
NUMBER OF DECOMPOSITION CLAUSES 160186
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 30.150000000000002% 69.85000000000001% 0.0% 
NUMBER OF PATHS 146
Starting cryptominisat5.5
Setting starttime of solver to 1604512471673
Command exited with non-zero status 20
0.09 0.00

Time command gave the following runtime for the solver: 90
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... done
initial PDT has 202 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854766382
done
PDT has 182 leafs
SHOP LEAFS 110
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 35868
NUMBER OF CLAUSES 279355
NUMBER OF STATE CLAUSES 85492
NUMBER OF DECOMPOSITION CLAUSES 193863
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 30.6% 69.4% 0.0% 
NUMBER OF PATHS 182
Starting cryptominisat5.5
Setting starttime of solver to 1604512472787
Command exited with non-zero status 20
1.98 0.01

Time command gave the following runtime for the solver: 1990
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 12
Generating initial PDT ... done
initial PDT has 244 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854763237
done
PDT has 222 leafs
SHOP LEAFS 132
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 43708
NUMBER OF CLAUSES 334032
NUMBER OF STATE CLAUSES 103556
NUMBER OF DECOMPOSITION CLAUSES 230476
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.0% 69.0% 0.0% 
NUMBER OF PATHS 222
Starting cryptominisat5.5
Setting starttime of solver to 1604512475778
Still waiting ... running for 60192 will abort at 9223372036854763237
Command exited with non-zero status 20
59.86 0.07

Time command gave the following runtime for the solver: 59930
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 13
Generating initial PDT ... done
initial PDT has 290 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854702275
done
PDT has 266 leafs
SHOP LEAFS 156
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 52332
NUMBER OF CLAUSES 393363
NUMBER OF STATE CLAUSES 123338
NUMBER OF DECOMPOSITION CLAUSES 270025
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.35% 68.65% 0.0% 
NUMBER OF PATHS 266
Starting cryptominisat5.5
Setting starttime of solver to 1604512536889
Command exited with non-zero status 10
2.83 0.03

Time command gave the following runtime for the solver: 2860
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^4_0;3;1;2,471 471 m2_do_check_floor
0;3;1;2 81 pathaction!4_0;3;1;2,904
Consider method^7_0;2;3;3;3;3;3,338 338 m6_do_take_all
0;2;3;3;3;3;3 77 pathaction!7_0;2;3;3;3;3;3,47
Consider method^2_0;1,394 394 m3_do_check_floor
0;1 127 pathaction!2_0;1,916
Consider method^12_0;2;3;3;3;3;3;3;3;2;2;2,184 184 m1_do_check_floor
0;2;3;3;3;3;3;3;3;2;2;2 208 pathaction!12_0;2;3;3;3;3;3;3;3;2;2;2,904
Consider method^8_0;3;1;3;3;3;3;3,22 22 m9_do_throw_all
0;3;1;3;3;3;3;3 212 pathaction!8_0;3;1;3;3;3;3;3,15
Consider method^6_0;3;1;3;3;3,492 492 m10_do_throw_all
0;3;1;3;3;3 5 pathaction!6_0;3;1;3;3;3,22
Consider method^6_0;3;1;3;3;2,19 19 m2_do_check_floor
0;3;1;3;3;2 79 pathaction!6_0;3;1;3;3;2,907
Consider method^0_,596 596 __top_3
 167 pathaction!0_,951
Consider method^6_0;2;3;3;2;2,42 42 m2_do_check_floor
0;2;3;3;2;2 34 pathaction!6_0;2;3;3;2;2,908
Consider method^11_0;3;1;3;3;3;3;3;3;3;2,33 33 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;2 144 pathaction!11_0;3;1;3;3;3;3;3;3;3;2,906
Consider method^3_0;2;2,404 404 m3_do_check_floor
0;2;2 40 pathaction!3_0;2;2,902
Consider method^2_0;2,280 280 m5_do_take_all
0;2 28 pathaction!2_0;2,48
Consider method^10_0;2;3;3;3;3;3;3;3;2,438 438 m2_do_check_floor
0;2;3;3;3;3;3;3;3;2 25 pathaction!10_0;2;3;3;3;3;3;3;3;2,904
Consider method^12_0;3;1;3;3;3;3;3;3;3;2;2,494 494 m1_do_check_floor
0;3;1;3;3;3;3;3;3;3;2;2 11 pathaction!12_0;3;1;3;3;3;3;3;3;3;2;2,906
Consider method^7_0;2;3;3;3;2;2,261 261 m2_do_check_floor
0;2;3;3;3;2;2 33 pathaction!7_0;2;3;3;3;2;2,912
Consider method^8_0;2;3;3;3;3;2;2,465 465 m3_do_check_floor
0;2;3;3;3;3;2;2 119 pathaction!8_0;2;3;3;3;3;2;2,915
Consider method^9_0;2;3;3;3;3;2;2;2,446 446 m1_do_check_floor
0;2;3;3;3;3;2;2;2 38 pathaction!9_0;2;3;3;3;3;2;2;2,915
Consider method^6_0;2;3;2;2;2,65 65 m1_do_check_floor
0;2;3;2;2;2 210 pathaction!6_0;2;3;2;2;2,910
Consider method^8_0;2;3;3;3;3;3;2,561 561 m3_do_check_floor
0;2;3;3;3;3;3;2 203 pathaction!8_0;2;3;3;3;3;3;2,905
Consider method^4_0;2;3;3,235 235 m6_do_take_all
0;2;3;3 182 pathaction!4_0;2;3;3,42
Consider method^11_0;3;1;3;3;3;3;3;3;2;2,359 359 m1_do_check_floor
0;3;1;3;3;3;3;3;3;2;2 213 pathaction!11_0;3;1;3;3;3;3;3;3;2;2,914
Consider method^9_0;2;3;3;3;3;3;2;2,491 491 m1_do_check_floor
0;2;3;3;3;3;3;2;2 145 pathaction!9_0;2;3;3;3;3;3;2;2,905
Consider method^5_0;3;1;3;3,498 498 m9_do_throw_all
0;3;1;3;3 168 pathaction!5_0;3;1;3;3,18
Consider method^8_0;3;1;3;3;3;3;2,25 25 m2_do_check_floor
0;3;1;3;3;3;3;2 1 pathaction!8_0;3;1;3;3;3;3;2,900
Consider method^9_0;3;1;3;3;3;2;2;2,90 90 m1_do_check_floor
0;3;1;3;3;3;2;2;2 111 pathaction!9_0;3;1;3;3;3;2;2;2,913
Consider method^1_0,234 234 m0_do_problem
0 43 pathaction!1_0,580
Consider method^5_0;3;1;3;2,564 564 m2_do_check_floor
0;3;1;3;2 42 pathaction!5_0;3;1;3;2,903
Consider method^10_0;3;1;3;3;3;3;3;3;2,209 209 m2_do_check_floor
0;3;1;3;3;3;3;3;3;2 113 pathaction!10_0;3;1;3;3;3;3;3;3;2,914
Consider method^8_0;2;3;3;3;2;2;2,362 362 m1_do_check_floor
0;2;3;3;3;2;2;2 173 pathaction!8_0;2;3;3;3;2;2;2,912
Consider method^6_0;2;2;2;2;2,146 146 m1_do_check_floor
0;2;2;2;2;2 75 pathaction!6_0;2;2;2;2;2,902
Consider method^9_0;3;1;3;3;3;3;3;3,109 109 m10_do_throw_all
0;3;1;3;3;3;3;3;3 243 pathaction!9_0;3;1;3;3;3;3;3;3,26
Consider method^4_0;3;1;3,152 152 m10_do_throw_all
0;3;1;3 269 pathaction!4_0;3;1;3,19
Consider method^5_0;2;3;3;3,233 233 m6_do_take_all
0;2;3;3;3 247 pathaction!5_0;2;3;3;3,40
Consider method^7_0;2;3;3;2;2;2,194 194 m1_do_check_floor
0;2;3;3;2;2;2 46 pathaction!7_0;2;3;3;2;2;2,908
Consider method^11_0;3;1;3;3;3;3;3;2;2;2,478 478 m2_do_check_floor
0;3;1;3;3;3;3;3;2;2;2 99 pathaction!11_0;3;1;3;3;3;3;3;2;2;2,911
Consider method^5_0;2;3;2;2,543 543 m2_do_check_floor
0;2;3;2;2 31 pathaction!5_0;2;3;2;2,910
Consider method^9_0;3;1;3;3;3;3;3;2,200 200 m2_do_check_floor
0;3;1;3;3;3;3;3;2 211 pathaction!9_0;3;1;3;3;3;3;3;2,911
Consider method^11_0;2;3;3;3;3;3;3;2;2;2,30 30 m1_do_check_floor
0;2;3;3;3;3;3;3;2;2;2 258 pathaction!11_0;2;3;3;3;3;3;3;2;2;2,901
Consider method^7_0;3;1;3;3;3;2,333 333 m2_do_check_floor
0;3;1;3;3;3;2 141 pathaction!7_0;3;1;3;3;3;2,913
Consider method^6_0;2;3;3;3;2,567 567 m3_do_check_floor
0;2;3;3;3;2 268 pathaction!6_0;2;3;3;3;2,912
Consider method^3_0;3;1,417 417 m9_do_throw_all
0;3;1 16 pathaction!3_0;3;1,24
Consider method^6_0;2;3;3;3;3,573 573 m5_do_take_all
0;2;3;3;3;3 185 pathaction!6_0;2;3;3;3;3,44
Consider method^5_0;3;1;2;2,455 455 m3_do_check_floor
0;3;1;2;2 82 pathaction!5_0;3;1;2;2,904
Consider method^4_0;2;3;2,26 26 m3_do_check_floor
0;2;3;2 188 pathaction!4_0;2;3;2,910
Consider method^10_0;2;3;3;3;3;3;3;3;3,279 279 m6_do_take_all
0;2;3;3;3;3;3;3;3;3 224 pathaction!10_0;2;3;3;3;3;3;3;3;3,36
Consider method^11_0;2;3;3;3;3;3;3;3;3;2,439 439 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;2 146 pathaction!11_0;2;3;3;3;3;3;3;3;3;2,909
Consider method^5_0;2;2;2;2,178 178 m3_do_check_floor
0;2;2;2;2 47 pathaction!5_0;2;2;2;2,902
Consider method^3_0;1;2,511 511 m1_do_check_floor
0;1;2 169 pathaction!3_0;1;2,916
Consider method^6_0;3;1;2;2;2,184 184 m1_do_check_floor
0;3;1;2;2;2 152 pathaction!6_0;3;1;2;2;2,904
Consider method^10_0;3;1;3;3;3;3;3;3;3,454 454 m10_do_throw_all
0;3;1;3;3;3;3;3;3;3 53 pathaction!10_0;3;1;3;3;3;3;3;3;3,29
Consider method^9_0;3;1;3;3;3;3;2;2,316 316 m1_do_check_floor
0;3;1;3;3;3;3;2;2 266 pathaction!9_0;3;1;3;3;3;3;2;2,900
Consider method^11_0;2;3;3;3;3;3;3;3;3;3,395 395 m4_do_take_all
0;2;3;3;3;3;3;3;3;3;3 257 pathaction!11_0;2;3;3;3;3;3;3;3;3;3,41
Consider method^7_0;3;1;3;3;3;3,253 253 m10_do_throw_all
0;3;1;3;3;3;3 76 pathaction!7_0;3;1;3;3;3;3,28
Consider method^12_0;2;3;3;3;3;3;3;3;3;2;2,535 535 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;2;2 202 pathaction!12_0;2;3;3;3;3;3;3;3;3;2;2,909
Consider method^12_0;3;1;3;3;3;3;3;2;2;2;2,342 342 m1_do_check_floor
0;3;1;3;3;3;3;3;2;2;2;2 67 pathaction!12_0;3;1;3;3;3;3;3;2;2;2;2,911
Consider method^7_0;2;3;3;3;3;2,322 322 m3_do_check_floor
0;2;3;3;3;3;2 80 pathaction!7_0;2;3;3;3;3;2,915
Consider method^2_0;3,275 275 m7_do_start_throw_all
0;3 13 pathaction!2_0;3,596
Consider method^6_0;3;1;3;2;2,503 503 m1_do_check_floor
0;3;1;3;2;2 139 pathaction!6_0;3;1;3;2;2,903
Consider method^8_0;3;1;3;3;3;2;2,559 559 m3_do_check_floor
0;3;1;3;3;3;2;2 199 pathaction!8_0;3;1;3;3;3;2;2,913
Consider method^3_0;2;3,5 5 m5_do_take_all
0;2;3 91 pathaction!3_0;2;3,34
Consider method^4_0;2;2;2,555 555 m3_do_check_floor
0;2;2;2 58 pathaction!4_0;2;2;2,902
Consider method^7_0;3;1;3;3;2;2,568 568 m1_do_check_floor
0;3;1;3;3;2;2 159 pathaction!7_0;3;1;3;3;2;2,907
Consider method^9_0;2;3;3;3;3;3;3;2,43 43 m3_do_check_floor
0;2;3;3;3;3;3;3;2 259 pathaction!9_0;2;3;3;3;3;3;3;2,901
Consider method^11_0;2;3;3;3;3;3;3;3;2;2,479 479 m2_do_check_floor
0;2;3;3;3;3;3;3;3;2;2 148 pathaction!11_0;2;3;3;3;3;3;3;3;2;2,904
Consider method^9_0;2;3;3;3;3;3;3;3,412 412 m6_do_take_all
0;2;3;3;3;3;3;3;3 88 pathaction!9_0;2;3;3;3;3;3;3;3,33
Consider method^10_0;2;3;3;3;3;3;3;2;2,15 15 m3_do_check_floor
0;2;3;3;3;3;3;3;2;2 0 pathaction!10_0;2;3;3;3;3;3;3;2;2,901
Consider method^5_0;2;3;3;2,246 246 m3_do_check_floor
0;2;3;3;2 176 pathaction!5_0;2;3;3;2,908
Consider method^11_0;3;1;3;3;3;3;3;3;3;3,580 580 m8_do_throw_all
0;3;1;3;3;3;3;3;3;3;3 24 pathaction!11_0;3;1;3;3;3;3;3;3;3;3,21
Consider method^8_0;2;3;3;3;3;3;3,485 485 m5_do_take_all
0;2;3;3;3;3;3;3 217 pathaction!8_0;2;3;3;3;3;3;3,37
Consider method^10_0;3;1;3;3;3;3;3;2;2,148 148 m2_do_check_floor
0;3;1;3;3;3;3;3;2;2 187 pathaction!10_0;3;1;3;3;3;3;3;2;2,911


CHECKING primitive solution of length 136 ...
true 228 __method_precondition_m0_do_problem_0_precondition[f0;]
true 104 __method_precondition_m3_do_check_floor_3_precondition[f0,p8;]
true 45 board[f0,p8;]
true 92 __method_precondition_m1_do_check_floor_1_precondition[f0;]
true 215 nop[;]
true 151 __method_precondition_m5_do_take_all_5_precondition[f0,f2,p12;]
true 108 up[f0,f2;]
true 216 __method_precondition_m3_do_check_floor_3_precondition[f2,p5;]
true 121 board[f2,p5;]
true 19 __method_precondition_m3_do_check_floor_3_precondition[f2,p12;]
true 93 board[f2,p12;]
true 260 __method_precondition_m3_do_check_floor_3_precondition[f2,p13;]
true 189 board[f2,p13;]
true 128 __method_precondition_m1_do_check_floor_1_precondition[f2;]
true 241 nop[;]
true 109 __method_precondition_m5_do_take_all_5_precondition[f2,f20,p6;]
true 236 up[f2,f20;]
true 70 __method_precondition_m3_do_check_floor_3_precondition[f20,p6;]
true 193 board[f20,p6;]
true 150 __method_precondition_m2_do_check_floor_2_precondition[f20,p12;]
true 158 depart[f20,p12;]
true 254 __method_precondition_m1_do_check_floor_1_precondition[f20;]
true 233 nop[;]
true 175 __method_precondition_m6_do_take_all_6_precondition[f20,f13,p0;]
true 191 down[f20,f13;]
true 131 __method_precondition_m3_do_check_floor_3_precondition[f13,p0;]
true 221 board[f13,p0;]
true 114 __method_precondition_m2_do_check_floor_2_precondition[f13,p13;]
true 29 depart[f13,p13;]
true 134 __method_precondition_m1_do_check_floor_1_precondition[f13;]
true 140 nop[;]
true 30 __method_precondition_m6_do_take_all_6_precondition[f13,f7,p14;]
true 18 down[f13,f7;]
true 237 __method_precondition_m3_do_check_floor_3_precondition[f7,p14;]
true 244 board[f7,p14;]
true 264 __method_precondition_m2_do_check_floor_2_precondition[f7,p5;]
true 147 depart[f7,p5;]
true 195 __method_precondition_m1_do_check_floor_1_precondition[f7;]
true 184 nop[;]
true 256 __method_precondition_m5_do_take_all_5_precondition[f7,f27,p1;]
true 44 up[f7,f27;]
true 94 __method_precondition_m3_do_check_floor_3_precondition[f27,p11;]
true 205 board[f27,p11;]
true 206 __method_precondition_m3_do_check_floor_3_precondition[f27,p1;]
true 7 board[f27,p1;]
true 181 __method_precondition_m1_do_check_floor_1_precondition[f27;]
true 226 nop[;]
true 78 __method_precondition_m6_do_take_all_6_precondition[f27,f22,p9;]
true 242 down[f27,f22;]
true 124 __method_precondition_m3_do_check_floor_3_precondition[f22,p9;]
true 267 board[f22,p9;]
true 153 __method_precondition_m1_do_check_floor_1_precondition[f22;]
true 6 nop[;]
true 255 __method_precondition_m5_do_take_all_5_precondition[f22,f23,p7;]
true 143 up[f22,f23;]
true 214 __method_precondition_m3_do_check_floor_3_precondition[f23,p7;]
true 110 board[f23,p7;]
true 48 __method_precondition_m3_do_check_floor_3_precondition[f23,p2;]
true 98 board[f23,p2;]
true 253 __method_precondition_m1_do_check_floor_1_precondition[f23;]
true 132 nop[;]
true 14 __method_precondition_m6_do_take_all_6_precondition[f23,f16,p3;]
true 161 down[f23,f16;]
true 115 __method_precondition_m2_do_check_floor_2_precondition[f16,p9;]
true 190 depart[f16,p9;]
true 62 __method_precondition_m2_do_check_floor_2_precondition[f16,p0;]
true 17 depart[f16,p0;]
true 218 __method_precondition_m1_do_check_floor_1_precondition[f16;]
true 69 nop[;]
true 73 __method_precondition_m6_do_take_all_6_precondition[f16,f11,p10;]
true 196 down[f16,f11;]
true 164 __method_precondition_m3_do_check_floor_3_precondition[f11,p10;]
true 50 board[f11,p10;]
true 95 __method_precondition_m1_do_check_floor_1_precondition[f11;]
true 97 nop[;]
true 162 __method_precondition_m4_do_take_all_4_precondition[f11;]
true 107 nop[;]
true 60 __method_precondition_m7_do_start_throw_all_7_precondition[f11;]
true 96 __method_precondition_m9_do_throw_all_9_precondition[f11,f16,p7;]
true 231 up[f11,f16;]
true 102 __method_precondition_m2_do_check_floor_2_precondition[f16,p7;]
true 64 depart[f16,p7;]
true 239 __method_precondition_m3_do_check_floor_3_precondition[f16,p3;]
true 59 board[f16,p3;]
true 156 __method_precondition_m1_do_check_floor_1_precondition[f16;]
true 201 nop[;]
true 219 __method_precondition_m10_do_throw_all_10_precondition[f16,f12,p3;]
true 250 down[f16,f12;]
true 52 __method_precondition_m2_do_check_floor_2_precondition[f12,p3;]
true 122 depart[f12,p3;]
true 27 __method_precondition_m1_do_check_floor_1_precondition[f12;]
true 66 nop[;]
true 74 __method_precondition_m9_do_throw_all_9_precondition[f12,f19,p6;]
true 246 up[f12,f19;]
true 160 __method_precondition_m2_do_check_floor_2_precondition[f19,p6;]
true 8 depart[f19,p6;]
true 142 __method_precondition_m1_do_check_floor_1_precondition[f19;]
true 245 nop[;]
true 125 __method_precondition_m10_do_throw_all_10_precondition[f19,f9,p11;]
true 207 down[f19,f9;]
true 63 __method_precondition_m2_do_check_floor_2_precondition[f9,p11;]
true 222 depart[f9,p11;]
true 223 __method_precondition_m3_do_check_floor_3_precondition[f9,p4;]
true 85 board[f9,p4;]
true 186 __method_precondition_m1_do_check_floor_1_precondition[f9;]
true 37 nop[;]
true 71 __method_precondition_m10_do_throw_all_10_precondition[f9,f8,p10;]
true 9 down[f9,f8;]
true 165 __method_precondition_m2_do_check_floor_2_precondition[f8,p10;]
true 10 depart[f8,p10;]
true 39 __method_precondition_m1_do_check_floor_1_precondition[f8;]
true 235 nop[;]
true 105 __method_precondition_m9_do_throw_all_9_precondition[f8,f25,p2;]
true 61 up[f8,f25;]
true 166 __method_precondition_m2_do_check_floor_2_precondition[f25,p1;]
true 265 depart[f25,p1;]
true 174 __method_precondition_m2_do_check_floor_2_precondition[f25,p14;]
true 251 depart[f25,p14;]
true 84 __method_precondition_m2_do_check_floor_2_precondition[f25,p2;]
true 209 depart[f25,p2;]
true 240 __method_precondition_m1_do_check_floor_1_precondition[f25;]
true 248 nop[;]
true 89 __method_precondition_m10_do_throw_all_10_precondition[f25,f6,p8;]
true 129 down[f25,f6;]
true 220 __method_precondition_m2_do_check_floor_2_precondition[f6,p8;]
true 32 depart[f6,p8;]
true 172 __method_precondition_m1_do_check_floor_1_precondition[f6;]
true 263 nop[;]
true 36 __method_precondition_m10_do_throw_all_10_precondition[f6,f1,p4;]
true 183 down[f6,f1;]
true 137 __method_precondition_m2_do_check_floor_2_precondition[f1,p4;]
true 117 depart[f1,p4;]
true 238 __method_precondition_m1_do_check_floor_1_precondition[f1;]
true 154 nop[;]
true 90 __method_precondition_m8_do_throw_all_8_precondition[f1;]
true 3 nop[;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 110
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 220
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 330
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 4
ICAPS: 440
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 5
ICAPS: 550
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 6
ICAPS: 660
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 7
ICAPS: 770
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 8
ICAPS: 880
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
LEN 9
ICAPS: 990
TSTG: 2147483647
Method: 2147483647
DP max: 10
Taking minimum: 10
LEN 10
ICAPS: 1100
TSTG: 2147483647
Method: 2147483647
DP max: 11
Taking minimum: 11
LEN 11
ICAPS: 1210
TSTG: 2147483647
Method: 2147483647
DP max: 12
Taking minimum: 12
LEN 12
ICAPS: 1320
TSTG: 2147483647
Method: 2147483647
DP max: 13
Taking minimum: 13
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 67
  lower bound = 11

Running SAT search with cost bound = 39
==================================================
  upper bound = 67
  lower bound = 11
LEN 39
ICAPS: 4290
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854697519
DP max: 40
Taking minimum: 40
Generating initial PDT ... done
initial PDT has 3044 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 2966 leafs
SHOP LEAFS 1560
Assignment implications
Generating clauses representing decomposition ... done
At most K: 2972ms input: 36600 K = 39
Number of actions Formula: 3160ms for 2891360 clauses
Layers: 12 paths 2966
Layer 1 g 0 = 0 - 1 / 0 clauses 4403028
Layer 1 g 1 = 2 - 3 / 2 clauses 4403028
Layer 1 g 2 = 4 - 5 / 4 clauses 4403028
Layer 1 g 3 = 6 - 7 / 6 clauses 4403028
Layer 1 g 4 = 8 - 9 / 8 clauses 4403028
Layer 1 g 5 = 10 - 11 / 10Still waiting ... running for 80669 will abort at 9223372036854697519
 clauses 4403028
Layer 1 g 6 = 12 - 13 / 12 clauses 4403028
Layer 1 g 7 = 14 - 15 / 14 clauses 4403028
Layer 1 g 8 = 16 - 17 / 16 clauses 4403028
Layer 1 g 9 = 18 - 19 / 18 clauses 4403028
Layer 1 g 10 = 20 - 21 / 20
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 216.103 MEMPEAK_KBS 8008324.096
