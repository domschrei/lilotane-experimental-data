PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p06.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p06.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p06.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 26
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 26
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 26
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 26
Grounded planning graph ... done in 449ms.
	Number of Grounded Actions 584
	Number of Grounded Literals 212
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 26
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 26
Grounding ... done.
	number of abstract tasks = 251
	number of tasks = 750
	number of decomposition methods = 624
	number of predicates = 218
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 251
	number of tasks = 750
	number of decomposition methods = 624
	number of predicates = 200
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 88ms.
	Number of Grounded Actions 499
	Number of Grounded Literals 200
	number of abstract tasks = 251
	number of tasks = 750
	number of decomposition methods = 624
	number of predicates = 200
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 251
	number of tasks = 750
	number of decomposition methods = 624
	number of predicates = 200
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 252
	number of tasks = 751
	number of decomposition methods = 625
	number of predicates = 200
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 252
	number of tasks = 751
	number of decomposition methods = 625
	number of predicates = 200
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 49ms.
	Number of Grounded Actions 499
	Number of Grounded Literals 200
	number of abstract tasks = 252
	number of tasks = 751
	number of decomposition methods = 625
	number of predicates = 200
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 252
	number of tasks = 751
	number of decomposition methods = 625
	number of predicates = 200
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 252
	number of tasks = 751
	number of decomposition methods = 625
	number of predicates = 200
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 252
	number of tasks = 751
	number of decomposition methods = 625
	number of predicates = 200
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 252
	number of tasks = 751
	number of decomposition methods = 625
	number of predicates = 200
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 308
	number of epsilon methods = 0
	number of primitive tasks = 499
	number of constants = 0
Tasks 499 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772229ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854772141
done
initial PDT has 33 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 22 leafs
SHOP LEAFS 22
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 59700
Size 59700 at 0/499
Size 44500
Size 44500 at 0/499
Size 35231
Size 35231 at 0/499
Size 26071
Size 26071 at 0/499
Size 18549
Size 18549 at 0/499
Size 14403
Size 14403 at 0/499
Size 10323
Size 10323 at 0/499
Size 6204
Size 6204 at 0/499
Size 4389
Size 4389 at 0/499
Size 3979
Size 3979 at 0/499
Size 3941
Size 3941 at 0/499
Size 3939
Size 3939 at 0/499
Size 3939
Invariant time: 0.893
Number of invariants: 3939
Invariant Clauses 90597
NUMBER OF CLAUSES 99790
NUMBER OF STATE CLAUSES 99608
NUMBER OF DECOMPOSITION CLAUSES 182
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.82000000000001% 0.18% 0.0% 
NUMBER OF PATHS 22
Starting cryptominisat5.5
Setting starttime of solver to 1604508017650
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770169
done
initial PDT has 163 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 88 leafs
SHOP LEAFS 55
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 350571
NUMBER OF CLAUSES 393688
NUMBER OF STATE CLAUSES 387852
NUMBER OF DECOMPOSITION CLAUSES 5836
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.52% 1.48% 0.0% 
NUMBER OF PATHS 88
Starting cryptominisat5.5
Setting starttime of solver to 1604508018785
Command exited with non-zero status 20
0.09 0.00

Time command gave the following runtime for the solver: 90
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 345 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854769095
done
PDT has 215 leafs
SHOP LEAFS 118
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 850824
NUMBER OF CLAUSES 964416
NUMBER OF STATE CLAUSES 942493
NUMBER OF DECOMPOSITION CLAUSES 21923
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.73% 2.27% 0.0% 
NUMBER OF PATHS 215
Starting cryptominisat5.5
Setting starttime of solver to 1604508020359
Command exited with non-zero status 20
0.21 0.00

Time command gave the following runtime for the solver: 210
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 569 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 485 leafs
Still waiting ... running for 100 will abort at 9223372036854767255
SHOP LEAFS 259
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1914354
NUMBER OF CLAUSES 2172218
NUMBER OF STATE CLAUSES 2121208
NUMBER OF DECOMPOSITION CLAUSES 51010
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.65% 2.35% 0.0% 
NUMBER OF PATHS 485
Starting cryptominisat5.5
Setting starttime of solver to 1604508023304
Command exited with non-zero status 20
0.46 0.04

Time command gave the following runtime for the solver: 500
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 777 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854763977
done
PDT has 695 leafs
SHOP LEAFS 343
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2741544
NUMBER OF CLAUSES 3109288
NUMBER OF STATE CLAUSES 3038866
NUMBER OF DECOMPOSITION CLAUSES 70422
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.74000000000001% 2.2600000000000002% 0.0% 
NUMBER OF PATHS 695
Starting cryptominisat5.5
Setting starttime of solver to 1604508027998
Command exited with non-zero status 20
0.71 0.04

Time command gave the following runtime for the solver: 750
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 982 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854758860
done
PDT has 900 leafs
SHOP LEAFS 425
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 3549039
NUMBER OF CLAUSES 4024296
NUMBER OF STATE CLAUSES 3934705
NUMBER OF DECOMPOSITION CLAUSES 89591
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.77% 2.23% 0.0% 
NUMBER OF PATHS 900
Starting cryptominisat5.5
Setting starttime of solver to 1604508034231
Command exited with non-zero status 20
0.85 0.08

Time command gave the following runtime for the solver: 930
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 1187 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854752545
done
PDT has 1105 leafs
SHOP LEAFS 507
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 4356534
NUMBER OF CLAUSES 4937916
NUMBER OF STATE CLAUSES 4830182
NUMBER OF DECOMPOSITION CLAUSES 107734
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.82000000000001% 2.18% 0.0% 
NUMBER OF PATHS 1105
Starting cryptominisat5.5
Setting starttime of solver to 1604508041570
Command exited with non-zero status 20
1.09 0.04

Time command gave the following runtime for the solver: 1130
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854744826
done
initial PDT has 1388 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 1310 leafs
SHOP LEAFS 589
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 5164029
NUMBER OF CLAUSES 5850352
NUMBER OF STATE CLAUSES 5725493
NUMBER OF DECOMPOSITION CLAUSES 124859
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.87% 2.13% 0.0% 
NUMBER OF PATHS 1310
Starting cryptominisat5.5
Setting starttime of solver to 1604508050037
Command exited with non-zero status 10
1.93 0.11

Time command gave the following runtime for the solver: 2040
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_9;1,211 211 m7_do_get_truck
9;1 17 pathaction!2_9;1,110
Consider method^5_4;2;4;2;1,375 375 m4_do_clear
4;2;4;2;1 56 pathaction!5_4;2;4;2;1,533
Consider method^6_0;2;4;2;1;1,523 523 m5_do_clear
0;2;4;2;1;1 10 pathaction!6_0;2;4;2;1;1,539
Consider method^3_1;2;4,2 2 m10_do_load_truck
1;2;4 147 pathaction!3_1;2;4,288
Consider method^1_5,292 292 m2_do_put_on
5 164 pathaction!1_5,277
Consider method^2_3;1,478 478 m6_do_get_truck
3;1 40 pathaction!2_3;1,111
Consider method^2_5;1,478 478 m6_do_get_truck
5;1 70 pathaction!2_5;1,111
Consider method^8_0;2;4;2;1;1;1;3,552 552 m7_do_get_truck
0;2;4;2;1;1;1;3 180 pathaction!8_0;2;4;2;1;1;1;3,113
Consider method^1_9,366 366 m2_do_put_on
9 185 pathaction!1_9,273
Consider method^3_6;2;1,560 560 m4_do_clear
6;2;1 169 pathaction!3_6;2;1,549
Consider method^2_10;2,144 144 m4_do_clear
10;2 98 pathaction!2_10;2,534
Consider method^2_1;2,61 61 _m3_do_put_on_2
1;2 178 pathaction!2_1;2,370
Consider method^2_2;2,575 575 m4_do_clear
2;2 122 pathaction!2_2;2,555
Consider method^1_3,77 77 m2_do_put_on
3 77 pathaction!1_3,274
Consider method^3_1;4;1,346 346 m4_do_clear
1;4;1 124 pathaction!3_1;4;1,557
Consider method^2_7;1,273 273 m6_do_get_truck
7;1 212 pathaction!2_7;1,112
Consider method^3_6;2;3,254 254 m7_do_get_truck
6;2;3 181 pathaction!3_6;2;3,112
Consider method^4_0;2;4;1,477 477 m7_do_get_truck
0;2;4;1 1 pathaction!4_0;2;4;1,112
Consider method^4_4;2;4;1,170 170 m6_do_get_truck
4;2;4;1 82 pathaction!4_4;2;4;1,113
Consider method^5_0;2;4;2;1,62 62 m5_do_clear
0;2;4;2;1 234 pathaction!5_0;2;4;2;1,543
Consider method^4_4;2;4;2,558 558 m5_do_clear
4;2;4;2 53 pathaction!4_4;2;4;2,558
Consider method^1_8,329 329 m2_do_put_on
8 149 pathaction!1_8,267
Consider method^4_1;2;4;2,200 200 m5_do_clear
1;2;4;2 3 pathaction!4_1;2;4;2,536
Consider method^1_1,621 621 m3_do_put_on
1 110 pathaction!1_1,272
Consider method^6_1;2;4;2;1;1,71 71 m5_do_clear
1;2;4;2;1;1 209 pathaction!6_1;2;4;2;1;1,547
Consider method^7_0;2;4;2;1;1;3,170 170 m6_do_get_truck
0;2;4;2;1;1;3 31 pathaction!7_0;2;4;2;1;1;3,113
Consider method^3_4;4;1,581 581 m4_do_clear
4;4;1 159 pathaction!3_4;4;1,538
Consider method^1_10,207 207 m2_do_put_on
10 23 pathaction!1_10,275
Consider method^3_4;2;4,322 322 m10_do_load_truck
4;2;4 95 pathaction!3_4;2;4,287
Consider method^2_4;4,222 222 m11_do_unload_truck
4;4 157 pathaction!2_4;4,87
Consider method^7_1;2;4;2;1;1;1,171 171 m4_do_clear
1;2;4;2;1;1;1 134 pathaction!7_1;2;4;2;1;1;1,542
Consider method^8_0;2;4;2;1;1;1;1,320 320 m4_do_clear
0;2;4;2;1;1;1;1 61 pathaction!8_0;2;4;2;1;1;1;1,529
Consider method^2_5;2,385 385 m4_do_clear
5;2 190 pathaction!2_5;2,528
Consider method^0_,624 624 __top_1
 218 pathaction!0_,750
Consider method^1_7,63 63 m2_do_put_on
7 30 pathaction!1_7,271
Consider method^4_1;2;4;1,264 264 m7_do_get_truck
1;2;4;1 241 pathaction!4_1;2;4;1,114
Consider method^2_6;2,339 339 m5_do_clear
6;2 170 pathaction!2_6;2,546
Consider method^5_1;2;4;2;1,53 53 m5_do_clear
1;2;4;2;1 262 pathaction!5_1;2;4;2;1,540
Consider method^6_0;4;1;1;1;1,581 581 m4_do_clear
0;4;1;1;1;1 165 pathaction!6_0;4;1;1;1;1,538
Consider method^2_10;1,516 516 m7_do_get_truck
10;1 229 pathaction!2_10;1,114
Consider method^5_0;4;1;1;1,410 410 m5_do_clear
0;4;1;1;1 24 pathaction!5_0;4;1;1;1,554
Consider method^4_0;4;1;3,478 478 m6_do_get_truck
0;4;1;3 123 pathaction!4_0;4;1;3,111
Consider method^2_3;2,596 596 m4_do_clear
3;2 269 pathaction!2_3;2,551
Consider method^4_0;4;1;1,266 266 m5_do_clear
0;4;1;1 85 pathaction!4_0;4;1;1,541
Consider method^6_0;4;1;1;1;3,478 478 m6_do_get_truck
0;4;1;1;1;3 230 pathaction!6_0;4;1;1;1;3,111
Consider method^2_1;4,569 569 m11_do_unload_truck
1;4 27 pathaction!2_1;4,78
Consider method^1_0,451 451 m3_do_put_on
0 155 pathaction!1_0,268
Consider method^6_1;2;4;2;1;3,42 42 m6_do_get_truck
1;2;4;2;1;3 236 pathaction!6_1;2;4;2;1;3,114
Consider method^2_0;2,231 231 _m3_do_put_on_2
0;2 231 pathaction!2_0;2,396
Consider method^2_4;2,356 356 _m3_do_put_on_2
4;2 202 pathaction!2_4;2,404
Consider method^5_4;2;4;2;3,170 170 m6_do_get_truck
4;2;4;2;3 199 pathaction!5_4;2;4;2;3,113
Consider method^1_2,484 484 m2_do_put_on
2 60 pathaction!1_2,270
Consider method^6_0;2;4;2;1;3,170 170 m6_do_get_truck
0;2;4;2;1;3 126 pathaction!6_0;2;4;2;1;3,113
Consider method^5_1;2;4;2;3,42 42 m6_do_get_truck
1;2;4;2;3 19 pathaction!5_1;2;4;2;3,114
Consider method^7_0;2;4;2;1;1;1,561 561 m5_do_clear
0;2;4;2;1;1;1 182 pathaction!7_0;2;4;2;1;1;1,545
Consider method^3_0;4;1,525 525 m5_do_clear
0;4;1 216 pathaction!3_0;4;1,553
Consider method^1_6,580 580 m2_do_put_on
6 48 pathaction!1_6,269
Consider method^1_4,534 534 m3_do_put_on
4 58 pathaction!1_4,276
Consider method^3_0;2;4,119 119 m10_do_load_truck
0;2;4 57 pathaction!3_0;2;4,313
Consider method^5_0;2;4;2;3,170 170 m6_do_get_truck
0;2;4;2;3 54 pathaction!5_0;2;4;2;3,113
Consider method^2_8;1,273 273 m6_do_get_truck
8;1 111 pathaction!2_8;1,112
Consider method^2_2;1,478 478 m6_do_get_truck
2;1 168 pathaction!2_2;1,111
Consider method^2_7;2,268 268 m4_do_clear
7;2 125 pathaction!2_7;2,543
Consider method^7_1;2;4;2;1;1;3,42 42 m6_do_get_truck
1;2;4;2;1;1;3 84 pathaction!7_1;2;4;2;1;1;3,114
Consider method^4_0;2;4;2,475 475 m5_do_clear
0;2;4;2 158 pathaction!4_0;2;4;2,535
Consider method^2_0;4,536 536 m11_do_unload_truck
0;4 113 pathaction!2_0;4,108
Consider method^2_9;2,117 117 m4_do_clear
9;2 224 pathaction!2_9;2,544
Consider method^2_8;2,152 152 m4_do_clear
8;2 255 pathaction!2_8;2,527
Consider method^2_6;1,552 552 m7_do_get_truck
6;1 44 pathaction!2_6;1,113
Consider method^5_0;4;1;1;3,478 478 m6_do_get_truck
0;4;1;1;3 192 pathaction!5_0;4;1;1;3,111


CHECKING primitive solution of length 155 ...
true 29 __method_precondition_m10_do_load_truck_10_precondition[crate8,distributor0,crate7,hoist1;]
true 101 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor0;]
true 177 Drive[truck0,distributor1,distributor0;]
true 75 __method_precondition_m5_do_clear_5_precondition[crate8,crate9,distributor0,hoist1;]
true 162 __method_precondition_m5_do_clear_5_precondition[crate9,crate12,distributor0,hoist1;]
true 120 __method_precondition_m5_do_clear_5_precondition[crate12,crate13,distributor0,hoist1;]
true 266 __method_precondition_m5_do_clear_5_precondition[crate13,crate14,distributor0,hoist1;]
true 71 __method_precondition_m4_do_clear_4_precondition[crate14,distributor0;]
true 166 nop[;]
true 207 Lift[hoist1,crate14,crate13,distributor0;]
true 210 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 41 Drive[truck1,depot0,distributor0;]
true 129 Load[hoist1,crate14,truck1,distributor0;]
true 243 Lift[hoist1,crate13,crate12,distributor0;]
true 227 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 4 nop[;]
true 167 Load[hoist1,crate13,truck1,distributor0;]
true 237 Lift[hoist1,crate12,crate9,distributor0;]
true 6 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 13 nop[;]
true 259 Load[hoist1,crate12,truck1,distributor0;]
true 222 Lift[hoist1,crate9,crate8,distributor0;]
true 141 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 254 nop[;]
true 217 Load[hoist1,crate9,truck1,distributor0;]
true 176 Lift[hoist1,crate8,crate7,distributor0;]
true 51 Load[hoist1,crate8,truck0,distributor0;]
true 174 Drive[truck0,distributor0,depot0;]
true 34 __method_precondition_m11_do_unload_truck_11_precondition[hoist0,depot0,truck0,crate8,pallet0;]
true 26 __method_precondition_m5_do_clear_5_precondition[pallet0,crate1,depot0,hoist0;]
true 135 __method_precondition_m5_do_clear_5_precondition[crate1,crate6,depot0,hoist0;]
true 35 __method_precondition_m5_do_clear_5_precondition[crate6,crate11,depot0,hoist0;]
true 39 __method_precondition_m4_do_clear_4_precondition[crate11,depot0;]
true 46 nop[;]
true 179 Lift[hoist0,crate11,crate6,depot0;]
true 65 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 160 nop[;]
true 257 Load[hoist0,crate11,truck0,depot0;]
true 268 Lift[hoist0,crate6,crate1,depot0;]
true 223 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 152 nop[;]
true 250 Load[hoist0,crate6,truck0,depot0;]
true 148 Lift[hoist0,crate1,pallet0,depot0;]
true 116 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 28 nop[;]
true 263 Load[hoist0,crate1,truck0,depot0;]
true 203 Unload[hoist0,crate8,truck0,depot0;]
true 66 Drop[hoist0,crate8,pallet0,depot0;]
true 80 __method_precondition_m10_do_load_truck_10_precondition[crate0,distributor1,pallet2,hoist2;]
true 68 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 251 Drive[truck0,depot0,distributor1;]
true 195 __method_precondition_m5_do_clear_5_precondition[crate0,crate2,distributor1,hoist2;]
true 144 __method_precondition_m5_do_clear_5_precondition[crate2,crate5,distributor1,hoist2;]
true 73 __method_precondition_m5_do_clear_5_precondition[crate5,crate10,distributor1,hoist2;]
true 205 __method_precondition_m4_do_clear_4_precondition[crate10,distributor1;]
true 89 nop[;]
true 0 Lift[hoist2,crate10,crate5,distributor1;]
true 115 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 270 nop[;]
true 21 Load[hoist2,crate10,truck0,distributor1;]
true 150 Lift[hoist2,crate5,crate2,distributor1;]
true 107 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 117 nop[;]
true 67 Load[hoist2,crate5,truck0,distributor1;]
true 92 Lift[hoist2,crate2,crate0,distributor1;]
true 22 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 90 nop[;]
true 136 Load[hoist2,crate2,truck0,distributor1;]
true 43 Lift[hoist2,crate0,pallet2,distributor1;]
true 221 Load[hoist2,crate0,truck0,distributor1;]
true 15 Drive[truck0,distributor1,depot0;]
true 153 __method_precondition_m11_do_unload_truck_11_precondition[hoist0,depot0,truck0,crate0,crate8;]
true 118 __method_precondition_m4_do_clear_4_precondition[crate8,depot0;]
true 62 nop[;]
true 99 Unload[hoist0,crate0,truck0,depot0;]
true 127 Drop[hoist0,crate0,crate8,depot0;]
true 244 __method_precondition_m2_do_put_on_2_precondition[crate5,truck0;]
true 105 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 52 nop[;]
true 137 __method_precondition_m4_do_clear_4_precondition[crate0,depot0;]
true 74 nop[;]
true 81 Unload[hoist0,crate5,truck0,depot0;]
true 171 Drop[hoist0,crate5,crate0,depot0;]
true 265 __method_precondition_m2_do_put_on_2_precondition[crate11,truck0;]
true 11 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 96 nop[;]
true 119 __method_precondition_m4_do_clear_4_precondition[crate5,depot0;]
true 175 nop[;]
true 8 Unload[hoist0,crate11,truck0,depot0;]
true 140 Drop[hoist0,crate11,crate5,depot0;]
true 154 __method_precondition_m10_do_load_truck_10_precondition[crate4,distributor0,crate3,hoist1;]
true 219 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 233 nop[;]
true 69 __method_precondition_m5_do_clear_5_precondition[crate4,crate7,distributor0,hoist1;]
true 109 __method_precondition_m4_do_clear_4_precondition[crate7,distributor0;]
true 55 nop[;]
true 245 Lift[hoist1,crate7,crate4,distributor0;]
true 163 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 198 nop[;]
true 38 Load[hoist1,crate7,truck1,distributor0;]
true 106 Lift[hoist1,crate4,crate3,distributor0;]
true 196 Load[hoist1,crate4,truck1,distributor0;]
true 208 Drive[truck1,distributor0,depot0;]
true 173 __method_precondition_m11_do_unload_truck_11_precondition[hoist0,depot0,truck1,crate4,crate11;]
true 156 __method_precondition_m4_do_clear_4_precondition[crate11,depot0;]
true 240 nop[;]
true 211 Unload[hoist0,crate4,truck1,depot0;]
true 248 Drop[hoist0,crate4,crate11,depot0;]
true 5 __method_precondition_m2_do_put_on_2_precondition[crate10,truck0;]
true 232 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 78 nop[;]
true 200 __method_precondition_m4_do_clear_4_precondition[crate4,depot0;]
true 151 nop[;]
true 14 Unload[hoist0,crate10,truck0,depot0;]
true 145 Drop[hoist0,crate10,crate4,depot0;]
true 131 __method_precondition_m2_do_put_on_2_precondition[crate9,truck1;]
true 226 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 271 Drive[truck1,depot0,distributor0;]
true 2 __method_precondition_m5_do_clear_5_precondition[pallet1,crate3,distributor0,hoist1;]
true 204 __method_precondition_m4_do_clear_4_precondition[crate3,distributor0;]
true 253 nop[;]
true 63 Lift[hoist1,crate3,pallet1,distributor0;]
true 213 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor0;]
true 201 Drive[truck0,depot0,distributor0;]
true 143 Load[hoist1,crate3,truck0,distributor0;]
true 87 Unload[hoist1,crate9,truck1,distributor0;]
true 9 Drop[hoist1,crate9,pallet1,distributor0;]
true 76 __method_precondition_m2_do_put_on_2_precondition[crate1,truck0;]
true 214 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor0;]
true 146 nop[;]
true 161 __method_precondition_m4_do_clear_4_precondition[crate9,distributor0;]
true 264 nop[;]
true 72 Unload[hoist1,crate1,truck0,distributor0;]
true 261 Drop[hoist1,crate1,crate9,distributor0;]
true 242 __method_precondition_m2_do_put_on_2_precondition[crate2,truck0;]
true 133 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor0;]
true 25 nop[;]
true 128 __method_precondition_m4_do_clear_4_precondition[crate1,distributor0;]
true 50 nop[;]
true 114 Unload[hoist1,crate2,truck0,distributor0;]
true 108 Drop[hoist1,crate2,crate1,distributor0;]
true 36 __method_precondition_m2_do_put_on_2_precondition[crate12,truck1;]
true 256 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 121 Drive[truck1,distributor0,distributor1;]
true 12 __method_precondition_m4_do_clear_4_precondition[pallet2,distributor1;]
true 228 nop[;]
true 64 Unload[hoist2,crate12,truck1,distributor1;]
true 188 Drop[hoist2,crate12,pallet2,distributor1;]
true 252 __method_precondition_m2_do_put_on_2_precondition[crate3,truck0;]
true 37 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 247 Drive[truck0,distributor0,distributor1;]
true 197 __method_precondition_m4_do_clear_4_precondition[crate12,distributor1;]
true 132 nop[;]
true 100 Unload[hoist2,crate3,truck0,distributor1;]
true 45 Drop[hoist2,crate3,crate12,distributor1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 506
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 1012
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 1518
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 2024
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 2530
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 3036
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 3542
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 4048
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 4554
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 5060
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 5566
TSTG: 2147483647
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 12
ICAPS: 6072
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 6578
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 7084
TSTG: 2147483647
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 15
ICAPS: 7590
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 16
ICAPS: 8096
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 8602
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 18
ICAPS: 9108
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 19
ICAPS: 9614
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 20
ICAPS: 10120
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 21
ICAPS: 10626
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 22
ICAPS: 11132
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 23
ICAPS: 11638
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 24
ICAPS: 12144
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 25
ICAPS: 12650
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 26
ICAPS: 13156
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 27
ICAPS: 13662
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 92
  lower bound = 26

Running SAT search with cost bound = 59
==================================================
  upper bound = 92
  lower bound = 26
LEN 59
ICAPS: 29854
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854732641
DP max: 19
Taking minimum: 19
Generating initial PDT ... done
initial PDT has 3202 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 3130 leafs
SHOP LEAFS 1317
Assignment implications
Generating clauses representing decomposition ... done
At most K: 898ms input: 16692 K = 59
Number of actions Formula: 993ms for 1986288 clauses
Layers: 12 paths 3130
Layer 1 g 0 = 0 - 1 / 0 clauses 4903146
Layer 1 g 1 = 2 - 3 / 2 clauses 4903146
Layer 1 g 2 = 4 - 5 / 4 clauses 4903146
Layer 1 g 3 = 6 - 7 / 6 clauses 4903146
Layer 1 g 4 = 8 - 9 / 8 clauses 4903146
Layer 1 g 5 = 10 - 11 / 10Still waiting ... running for 83248 will abort at 9223372036854732641
 clauses 4903146
Layer 1 g 6 = 12 - 13 / 12 clauses 4903146
Layer 1 g 7 = 14 - 15 / 14 clauses 4903146
Layer 1 g 8 = 16 - 17 / 16 clauses 4903146
Layer 1 g 9 = 18 - 19 / 18 clauses 4903146
Layer 1 g 10 = 20 - 21 / 20
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 187.056 MEMPEAK_KBS 8058145.792
