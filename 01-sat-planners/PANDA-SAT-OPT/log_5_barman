PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p05.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p05.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p05.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounded planning graph ... done in 531ms.
	Number of Grounded Actions 2363
	Number of Grounded Literals 372
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounding ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 372
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 390ms.
	Number of Grounded Actions 2341
	Number of Grounded Literals 343
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 183ms.
	Number of Grounded Actions 2341
	Number of Grounded Literals 343
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1185
	number of tasks = 3526
	number of decomposition methods = 4278
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Tasks 2341 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768928ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854768435
done
initial PDT has 305 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 305 leafs
SHOP LEAFS 80
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 175959
Size 175959 at 0/2341
Size 175156 at 500/2341
Size 144717 at 1000/2341
Size 44822 at 1500/2341
Size 20962 at 2000/2341
Size 20906
Size 20906 at 0/2341
Size 20898 at 500/2341
Size 11442 at 1000/2341
Size 11370 at 1500/2341
Size 11362 at 2000/2341
Size 11362
Size 11362 at 0/2341
Size 11362 at 500/2341
Size 3351 at 1000/2341
Size 3312 at 1500/2341
Size 3234 at 2000/2341
Size 3234
Size 3234 at 0/2341
Size 3234 at 500/2341
Size 3104 at 1000/2341
Size 3104 at 1500/2341
Size 3104 at 2000/2341
Size 3104
Size 3104 at 0/2341
Size 3104 at 500/2341
Size 3028 at 1000/2341
Size 3028 at 1500/2341
Size 3028 at 2000/2341
Size 3028
Size 3028 at 0/2341
Size 3028 at 500/2341
Size 3028 at 1000/2341
Size 3028 at 1500/2341
Size 3028 at 2000/2341
Size 3028
Invariant time: 2.224
Number of invariants: 3028
Invariant Clauses 926568
NUMBER OF CLAUSES 1453642
NUMBER OF STATE CLAUSES 1219985
NUMBER OF DECOMPOSITION CLAUSES 233657
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.93% 16.07% 0.0% 
NUMBER OF PATHS 305
Starting cryptominisat5.5
Setting starttime of solver to 1604494081762
Command exited with non-zero status 10
1.06 0.06

Time command gave the following runtime for the solver: 1120
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_10;3;5,3225 3225 _m4_serve_shot_6
10;3;5 27 pathaction!3_10;3;5,1140
Consider method^3_11;2;2,794 794 _m3_get_second_ingredient_3
11;2;2 298 pathaction!3_11;2;2,3233
Consider method^3_3;3;4,3486 3486 _m4_serve_shot_5
3;3;4 416 pathaction!3_3;3;4,3503
Consider method^4_9;3;1;0,1375 1375 m5_do_clean_shot
9;3;1;0 357 pathaction!4_9;3;1;0,2996
Consider method^3_3;2;1,1703 1703 _m3_get_second_ingredient_2
3;2;1 218 pathaction!3_3;2;1,647
Consider method^4_2;3;1;0,1856 1856 m6_do_clean_shot
2;3;1;0 244 pathaction!4_2;3;1;0,3011
Consider method^3_7;1;1,3763 3763 m8_do_fill_shot
7;1;1 370 pathaction!3_7;1;1,919
Consider method^2_2;2,3003 3003 m3_get_second_ingredient
2;2 103 pathaction!2_2;2,1638
Consider method^3_3;1;3,2916 2916 _m2_get_first_ingredient_4
3;1;3 225 pathaction!3_3;1;3,843
Consider method^1_9,102 102 m0_do_cocktail_in_shot1
9 194 pathaction!1_9,1541
Consider method^2_10;1,691 691 m2_get_first_ingredient
10;1 402 pathaction!2_10;1,540
Consider method^2_6;3,2768 2768 m4_serve_shot
6;3 55 pathaction!2_6;3,3187
Consider method^2_8;3,611 611 m4_serve_shot
8;3 297 pathaction!2_8;3,3177
Consider method^1_8,1454 1454 m0_do_cocktail_in_shot1
8 219 pathaction!1_8,1536
Consider method^3_2;3;1,1105 1105 _m4_serve_shot_2
2;3;1 317 pathaction!3_2;3;1,1056
Consider method^3_4;2;2,1678 1678 _m3_get_second_ingredient_3
4;2;2 399 pathaction!3_4;2;2,3232
Consider method^3_5;1;2,1410 1410 _m2_get_first_ingredient_3
5;1;2 321 pathaction!3_5;1;2,1220
Consider method^1_7,1906 1906 m0_do_cocktail_in_shot1
7 102 pathaction!1_7,1543
Consider method^3_10;3;4,3404 3404 _m4_serve_shot_5
10;3;4 363 pathaction!3_10;3;4,3519
Consider method^3_6;2;2,4020 4020 _m3_get_second_ingredient_3
6;2;2 143 pathaction!3_6;2;2,3242
Consider method^3_9;3;5,2321 2321 _m4_serve_shot_6
9;3;5 188 pathaction!3_9;3;5,1144
Consider method^2_2;1,1628 1628 m2_get_first_ingredient
2;1 60 pathaction!2_2;1,543
Consider method^3_5;3;5,4249 4249 _m4_serve_shot_6
5;3;5 176 pathaction!3_5;3;5,1138
Consider method^1_1,62 62 m0_do_cocktail_in_shot1
1 355 pathaction!1_1,1539
Consider method^2_10;2,2337 2337 m3_get_second_ingredient
10;2 326 pathaction!2_10;2,1635
Consider method^1_0,3079 3079 m0_do_cocktail_in_shot1
0 196 pathaction!1_0,1537
Consider method^2_1;3,3310 3310 m4_serve_shot
1;3 119 pathaction!2_1;3,3180
Consider method^3_7;1;3,2194 2194 _m2_get_first_ingredient_4
7;1;3 134 pathaction!3_7;1;3,747
Consider method^3_3;3;5,635 635 _m4_serve_shot_6
3;3;5 280 pathaction!3_3;3;5,1171
Consider method^3_1;1;1,213 213 m8_do_fill_shot
1;1;1 26 pathaction!3_1;1;1,1011
Consider method^3_1;1;3,3685 3685 _m2_get_first_ingredient_4
1;1;3 33 pathaction!3_1;1;3,839
Consider method^2_10;3,1813 1813 m4_serve_shot
10;3 131 pathaction!2_10;3,3176
Consider method^3_7;3;1,2754 2754 _m4_serve_shot_2
7;3;1 149 pathaction!3_7;3;1,1043
Consider method^3_13;1;1,3263 3263 m8_do_fill_shot
13;1;1 407 pathaction!3_13;1;1,925
Consider method^3_2;1;2,3682 3682 _m2_get_first_ingredient_3
2;1;2 366 pathaction!3_2;1;2,1230
Consider method^3_6;1;1,3379 3379 m8_do_fill_shot
6;1;1 274 pathaction!3_6;1;1,974
Consider method^3_3;1;1,1943 1943 m8_do_fill_shot
3;1;1 114 pathaction!3_3;1;1,1015
Consider method^3_9;1;3,1815 1815 _m2_get_first_ingredient_4
9;1;3 254 pathaction!3_9;1;3,754
Consider method^3_2;1;1,3640 3640 m8_do_fill_shot
2;1;1 256 pathaction!3_2;1;1,994
Consider method^2_7;1,909 909 m2_get_first_ingredient
7;1 395 pathaction!2_7;1,541
Consider method^3_1;1;2,508 508 _m2_get_first_ingredient_3
1;1;2 64 pathaction!3_1;1;2,1257
Consider method^3_5;3;4,4078 4078 _m4_serve_shot_5
5;3;4 213 pathaction!3_5;3;4,3495
Consider method^3_7;2;2,1415 1415 _m3_get_second_ingredient_3
7;2;2 368 pathaction!3_7;2;2,3276
Consider method^3_9;2;2,1663 1663 _m3_get_second_ingredient_3
9;2;2 279 pathaction!3_9;2;2,3257
Consider method^2_9;2,3774 3774 m3_get_second_ingredient
9;2 406 pathaction!2_9;2,1647
Consider method^4_11;3;1;0,786 786 m6_do_clean_shot
11;3;1;0 238 pathaction!4_11;3;1;0,2879
Consider method^3_8;2;2,1057 1057 _m3_get_second_ingredient_3
8;2;2 16 pathaction!3_8;2;2,3272
Consider method^3_4;1;1,3087 3087 m8_do_fill_shot
4;1;1 204 pathaction!3_4;1;1,971
Consider method^3_7;1;2,3095 3095 _m2_get_first_ingredient_3
7;1;2 343 pathaction!3_7;1;2,1260
Consider method^1_12,127 127 m1_do_cocktail_in_shot2
12 31 pathaction!1_12,1065
Consider method^3_13;3;4,204 204 _m4_serve_shot_5
13;3;4 15 pathaction!3_13;3;4,3522
Consider method^3_13;2;2,3932 3932 _m3_get_second_ingredient_3
13;2;2 308 pathaction!3_13;2;2,3238
Consider method^3_0;3;5,332 332 _m4_serve_shot_6
0;3;5 28 pathaction!3_0;3;5,1150
Consider method^3_9;3;4,3114 3114 _m4_serve_shot_5
9;3;4 231 pathaction!3_9;3;4,3520
Consider method^3_2;1;3,1088 1088 _m2_get_first_ingredient_4
2;1;3 422 pathaction!3_2;1;3,822
Consider method^2_11;3,3779 3779 m4_serve_shot
11;3 364 pathaction!2_11;3,3179
Consider method^2_5;2,961 961 m3_get_second_ingredient
5;2 152 pathaction!2_5;2,1643
Consider method^3_4;1;3,4090 4090 _m2_get_first_ingredient_4
4;1;3 222 pathaction!3_4;1;3,799
Consider method^4_0;3;1;0,3027 3027 m6_do_clean_shot
0;3;1;0 273 pathaction!4_0;3;1;0,2860
Consider method^3_6;3;4,68 68 _m4_serve_shot_5
6;3;4 440 pathaction!3_6;3;4,3501
Consider method^3_8;1;1,175 175 m9_do_fill_shot
8;1;1 299 pathaction!3_8;1;1,942
Consider method^3_5;1;1,1816 1816 m8_do_fill_shot
5;1;1 2 pathaction!3_5;1;1,938
Consider method^3_6;3;1,1501 1501 _m4_serve_shot_2
6;3;1 99 pathaction!3_6;3;1,1050
Consider method^3_0;1;2,3645 3645 _m2_get_first_ingredient_3
0;1;2 365 pathaction!3_0;1;2,1236
Consider method^2_0;3,2940 2940 m4_serve_shot
0;3 421 pathaction!2_0;3,3178
Consider method^4_7;3;1;0,3151 3151 m6_do_clean_shot
7;3;1;0 351 pathaction!4_7;3;1;0,2969
Consider method^3_0;3;4,448 448 _m4_serve_shot_5
0;3;4 77 pathaction!3_0;3;4,3499
Consider method^3_0;3;1,1124 1124 _m4_serve_shot_2
0;3;1 165 pathaction!3_0;3;1,1041
Consider method^3_2;3;5,494 494 _m4_serve_shot_6
2;3;5 95 pathaction!3_2;3;5,1156
Consider method^3_2;2;1,1167 1167 _m3_get_second_ingredient_2
2;2;1 91 pathaction!3_2;2;1,659
Consider method^3_4;2;1,3458 3458 _m3_get_second_ingredient_2
4;2;1 410 pathaction!3_4;2;1,645
Consider method^3_3;3;1,2199 2199 _m4_serve_shot_2
3;3;1 13 pathaction!3_3;3;1,1060
Consider method^4_4;3;1;0,2056 2056 m6_do_clean_shot
4;3;1;0 212 pathaction!4_4;3;1;0,2824
Consider method^3_11;1;2,176 176 _m2_get_first_ingredient_3
11;1;2 246 pathaction!3_11;1;2,1282
Consider method^3_8;3;4,3772 3772 _m4_serve_shot_5
8;3;4 127 pathaction!3_8;3;4,3476
Consider method^2_3;2,3407 3407 m3_get_second_ingredient
3;2 123 pathaction!2_3;2,1654
Consider method^3_7;2;1,3761 3761 _m3_get_second_ingredient_2
7;2;1 23 pathaction!3_7;2;1,732
Consider method^3_5;1;3,849 849 _m2_get_first_ingredient_4
5;1;3 270 pathaction!3_5;1;3,766
Consider method^2_2;3,2993 2993 m4_serve_shot
2;3 312 pathaction!2_2;3,3186
Consider method^2_7;3,761 761 m4_serve_shot
7;3 381 pathaction!2_7;3,3184
Consider method^3_1;3;1,2725 2725 _m4_serve_shot_2
1;3;1 125 pathaction!3_1;3;1,1057
Consider method^3_0;2;2,2749 2749 _m3_get_second_ingredient_3
0;2;2 20 pathaction!3_0;2;2,3283
Consider method^3_13;1;3,158 158 _m2_get_first_ingredient_4
13;1;3 257 pathaction!3_13;1;3,753
Consider method^4_10;3;1;0,3910 3910 m6_do_clean_shot
10;3;1;0 322 pathaction!4_10;3;1;0,3129
Consider method^2_9;1,3505 3505 m2_get_first_ingredient
9;1 170 pathaction!2_9;1,552
Consider method^3_6;1;3,3246 3246 _m2_get_first_ingredient_4
6;1;3 135 pathaction!3_6;1;3,802
Consider method^2_0;1,2932 2932 m2_get_first_ingredient
0;1 187 pathaction!2_0;1,553
Consider method^3_1;3;5,4112 4112 _m4_serve_shot_6
1;3;5 252 pathaction!3_1;3;5,1146
Consider method^3_8;2;1,4244 4244 _m3_get_second_ingredient_2
8;2;1 104 pathaction!3_8;2;1,725
Consider method^2_11;1,2662 2662 m2_get_first_ingredient
11;1 311 pathaction!2_11;1,553
Consider method^4_8;3;1;0,3634 3634 m5_do_clean_shot
8;3;1;0 87 pathaction!4_8;3;1;0,2842
Consider method^3_0;1;3,3513 3513 _m2_get_first_ingredient_4
0;1;3 81 pathaction!3_0;1;3,808
Consider method^2_13;3,1335 1335 m4_serve_shot
13;3 262 pathaction!2_13;3,3183
Consider method^2_13;2,1496 1496 m3_get_second_ingredient
13;2 129 pathaction!2_13;2,1635
Consider method^1_4,583 583 m0_do_cocktail_in_shot1
4 17 pathaction!1_4,1544
Consider method^3_3;1;2,307 307 _m2_get_first_ingredient_3
3;1;2 138 pathaction!3_3;1;2,1238
Consider method^3_8;1;2,67 67 _m2_get_first_ingredient_3
8;1;2 302 pathaction!3_8;1;2,1253
Consider method^1_5,3855 3855 m0_do_cocktail_in_shot1
5 30 pathaction!1_5,1540
Consider method^2_5;3,1646 1646 m4_serve_shot
5;3 192 pathaction!2_5;3,3181
Consider method^4_1;3;1;0,3589 3589 m6_do_clean_shot
1;3;1;0 32 pathaction!4_1;3;1;0,3157
Consider method^1_10,2233 2233 m0_do_cocktail_in_shot1
10 142 pathaction!1_10,1535
Consider method^2_3;1,2285 2285 m2_get_first_ingredient
3;1 348 pathaction!2_3;1,559
Consider method^3_2;3;4,979 979 _m4_serve_shot_5
2;3;4 58 pathaction!3_2;3;4,3474
Consider method^2_6;2,1892 1892 m3_get_second_ingredient
6;2 181 pathaction!2_6;2,1642
Consider method^3_0;2;1,266 266 _m3_get_second_ingredient_2
0;2;1 240 pathaction!3_0;2;1,655
Consider method^2_0;2,2356 2356 m3_get_second_ingredient
0;2 433 pathaction!2_0;2,1648
Consider method^3_5;3;1,1707 1707 _m4_serve_shot_2
5;3;1 113 pathaction!3_5;3;1,1047
Consider method^2_12;1,3922 3922 m7_do_fill_shot
12;1 70 pathaction!2_12;1,969
Consider method^2_3;3,2913 2913 m4_serve_shot
3;3 345 pathaction!2_3;3,3175
Consider method^2_12;0,926 926 _m1_do_cocktail_in_shot2_4
12;0 24 pathaction!2_12;0,2784
Consider method^0_,4277 4277 __top_1
 333 pathaction!0_,3525
Consider method^4_5;3;1;0,1688 1688 m5_do_clean_shot
5;3;1;0 423 pathaction!4_5;3;1;0,3057
Consider method^3_1;2;2,446 446 _m3_get_second_ingredient_3
1;2;2 314 pathaction!3_1;2;2,3190
Consider method^3_9;2;1,194 194 _m3_get_second_ingredient_2
9;2;1 98 pathaction!3_9;2;1,677
Consider method^3_4;1;2,4041 4041 _m2_get_first_ingredient_3
4;1;2 101 pathaction!3_4;1;2,1225
Consider method^3_6;1;2,2244 2244 _m2_get_first_ingredient_3
6;1;2 427 pathaction!3_6;1;2,1207
Consider method^3_11;3;4,2959 2959 _m4_serve_shot_5
11;3;4 8 pathaction!3_11;3;4,3512
Consider method^3_3;2;2,416 416 _m3_get_second_ingredient_3
3;2;2 391 pathaction!3_3;2;2,3270
Consider method^2_6;1,1052 1052 m2_get_first_ingredient
6;1 66 pathaction!2_6;1,547
Consider method^3_8;3;5,146 146 _m4_serve_shot_6
8;3;5 22 pathaction!3_8;3;5,1145
Consider method^3_5;2;2,2138 2138 _m3_get_second_ingredient_3
5;2;2 303 pathaction!3_5;2;2,3205
Consider method^3_9;3;1,4048 4048 _m4_serve_shot_2
9;3;1 230 pathaction!3_9;3;1,1062
Consider method^3_8;3;1,1670 1670 _m4_serve_shot_2
8;3;1 437 pathaction!3_8;3;1,1046
Consider method^3_7;3;4,2907 2907 _m4_serve_shot_5
7;3;4 272 pathaction!3_7;3;4,3497
Consider method^2_5;1,3231 3231 m2_get_first_ingredient
5;1 354 pathaction!2_5;1,548
Consider method^3_11;1;1,817 817 m8_do_fill_shot
11;1;1 309 pathaction!3_11;1;1,1025
Consider method^3_10;2;1,3147 3147 _m3_get_second_ingredient_2
10;2;1 198 pathaction!3_10;2;1,736
Consider method^3_4;3;4,4160 4160 _m4_serve_shot_5
4;3;4 137 pathaction!3_4;3;4,3496
Consider method^2_8;2,4202 4202 m3_get_second_ingredient
8;2 341 pathaction!2_8;2,1649
Consider method^1_13,322 322 m0_do_cocktail_in_shot1
13 445 pathaction!1_13,1542
Consider method^1_6,1037 1037 m0_do_cocktail_in_shot1
6 25 pathaction!1_6,1546
Consider method^3_10;1;2,4274 4274 _m2_get_first_ingredient_3
10;1;2 426 pathaction!3_10;1;2,1274
Consider method^3_9;1;2,1026 1026 _m2_get_first_ingredient_3
9;1;2 324 pathaction!3_9;1;2,1234
Consider method^3_10;1;1,2664 2664 m8_do_fill_shot
10;1;1 205 pathaction!3_10;1;1,1009
Consider method^2_7;2,3094 3094 m3_get_second_ingredient
7;2 378 pathaction!2_7;2,1636
Consider method^3_1;3;4,4167 4167 _m4_serve_shot_5
1;3;4 174 pathaction!3_1;3;4,3479
Consider method^3_9;1;1,1090 1090 m9_do_fill_shot
9;1;1 369 pathaction!3_9;1;1,926
Consider method^3_2;2;2,877 877 _m3_get_second_ingredient_3
2;2;2 199 pathaction!3_2;2;2,3278
Consider method^4_6;3;1;0,1653 1653 m6_do_clean_shot
6;3;1;0 289 pathaction!4_6;3;1;0,3035
Consider method^3_11;2;1,1599 1599 _m3_get_second_ingredient_2
11;2;1 379 pathaction!3_11;2;1,658
Consider method^2_4;3,2809 2809 m4_serve_shot
4;3 62 pathaction!2_4;3,3185
Consider method^2_1;1,3873 3873 m2_get_first_ingredient
1;1 56 pathaction!2_1;1,545
Consider method^3_0;1;1,1551 1551 m8_do_fill_shot
0;1;1 164 pathaction!3_0;1;1,980
Consider method^3_13;3;1,1095 1095 _m4_serve_shot_2
13;3;1 148 pathaction!3_13;3;1,1051
Consider method^2_13;1,3546 3546 m2_get_first_ingredient
13;1 456 pathaction!2_13;1,540
Consider method^3_1;2;1,554 554 _m3_get_second_ingredient_2
1;2;1 338 pathaction!3_1;2;1,691
Consider method^3_11;3;5,332 332 _m4_serve_shot_6
11;3;5 452 pathaction!3_11;3;5,1150
Consider method^3_13;3;5,3225 3225 _m4_serve_shot_6
13;3;5 397 pathaction!3_13;3;5,1140
Consider method^2_4;2,3699 3699 m3_get_second_ingredient
4;2 457 pathaction!2_4;2,1653
Consider method^3_4;3;1,1329 1329 _m4_serve_shot_2
4;3;1 376 pathaction!3_4;3;1,1040
Consider method^3_11;1;3,919 919 _m2_get_first_ingredient_4
11;1;3 294 pathaction!3_11;1;3,853
Consider method^3_5;2;1,3492 3492 _m3_get_second_ingredient_2
5;2;1 387 pathaction!3_5;2;1,684
Consider method^2_8;1,2125 2125 m2_get_first_ingredient
8;1 105 pathaction!2_8;1,554
Consider method^3_10;3;1,3677 3677 _m4_serve_shot_2
10;3;1 220 pathaction!3_10;3;1,1058
Consider method^3_6;2;1,600 600 _m3_get_second_ingredient_2
6;2;1 215 pathaction!3_6;2;1,746
Consider method^3_4;3;5,3642 3642 _m4_serve_shot_6
4;3;5 347 pathaction!3_4;3;5,1154
Consider method^1_3,1082 1082 m0_do_cocktail_in_shot1
3 293 pathaction!1_3,1534
Consider method^4_13;3;1;0,3595 3595 m6_do_clean_shot
13;3;1;0 269 pathaction!4_13;3;1;0,3128
Consider method^1_11,1687 1687 m0_do_cocktail_in_shot1
11 409 pathaction!1_11,1538
Consider method^4_3;3;1;0,4010 4010 m5_do_clean_shot
3;3;1;0 264 pathaction!4_3;3;1;0,3101
Consider method^3_10;1;3,319 319 _m2_get_first_ingredient_4
10;1;3 197 pathaction!3_10;1;3,837
Consider method^2_1;2,2243 2243 m3_get_second_ingredient
1;2 126 pathaction!2_1;2,1640
Consider method^3_7;3;5,911 911 _m4_serve_shot_6
7;3;5 78 pathaction!3_7;3;5,1148
Consider method^3_6;3;5,378 378 _m4_serve_shot_6
6;3;5 332 pathaction!3_6;3;5,1137
Consider method^2_11;2,396 396 m3_get_second_ingredient
11;2 160 pathaction!2_11;2,1648
Consider method^3_11;3;1,506 506 _m4_serve_shot_2
11;3;1 189 pathaction!3_11;3;1,1039
Consider method^2_9;3,3043 3043 m4_serve_shot
9;3 386 pathaction!2_9;3,3182
Consider method^3_10;2;2,2631 2631 _m3_get_second_ingredient_3
10;2;2 328 pathaction!3_10;2;2,3262
Consider method^3_13;1;2,2598 2598 _m2_get_first_ingredient_3
13;1;2 136 pathaction!3_13;1;2,1265
Consider method^2_4;1,4114 4114 m2_get_first_ingredient
4;1 373 pathaction!2_4;1,558
Consider method^3_8;1;3,2626 2626 _m2_get_first_ingredient_4
8;1;3 144 pathaction!3_8;1;3,770
Consider method^3_13;2;1,497 497 _m3_get_second_ingredient_2
13;2;1 228 pathaction!3_13;2;1,735
Consider method^1_2,1084 1084 m0_do_cocktail_in_shot1
2 454 pathaction!1_2,1545


CHECKING primitive solution of length 285 ...
true 275 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 4 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot1;]
true 85 __method_precondition_m8_do_fill_shot_8_precondition[shot1,dispenser1,ingredient1;]
true 214 grasp[left,shot1;]
true 226 fill-shot[shot1,ingredient1,left,right,dispenser1;]
true 74 pour-shot-to-clean-shaker[shot1,ingredient1,shaker1,left,l0,l1;]
true 292 clean-shot[shot1,ingredient1,left,right;]
true 59 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient4,left,shot1;]
true 162 fill-shot[shot1,ingredient4,left,right,dispenser4;]
true 21 pour-shot-to-used-shaker[shot1,ingredient4,shaker1,left,l1,l2;]
true 130 leave[left,shot1;]
true 305 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient4;]
true 271 __method_precondition_m6_do_clean_shot_6_precondition[shot1,left;]
true 374 grasp[left,shot1;]
true 229 clean-shot[shot1,ingredient4,left,right;]
true 206 leave[left,shot1;]
true 203 grasp[right,shaker1;]
true 167 shake[cocktail9,ingredient1,ingredient4,shaker1,right,left;]
true 161 pour-shaker-to-shot[cocktail9,shot1,right,shaker1,l2,l1;]
true 12 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 261 clean-shaker[right,left,shaker1;]
true 342 leave[right,shaker1;]
true 128 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 377 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot2;]
true 75 __method_precondition_m8_do_fill_shot_8_precondition[shot2,dispenser4,ingredient4;]
true 157 grasp[left,shot2;]
true 418 fill-shot[shot2,ingredient4,left,right,dispenser4;]
true 139 pour-shot-to-clean-shaker[shot2,ingredient4,shaker1,left,l0,l1;]
true 69 clean-shot[shot2,ingredient4,left,right;]
true 307 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot2;]
true 122 fill-shot[shot2,ingredient2,left,right,dispenser2;]
true 19 pour-shot-to-used-shaker[shot2,ingredient2,shaker1,left,l1,l2;]
true 403 leave[left,shot2;]
true 247 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient2;]
true 400 __method_precondition_m6_do_clean_shot_6_precondition[shot2,right;]
true 141 grasp[right,shot2;]
true 434 clean-shot[shot2,ingredient2,right,left;]
true 47 leave[right,shot2;]
true 42 grasp[left,shaker1;]
true 323 shake[cocktail7,ingredient4,ingredient2,shaker1,left,right;]
true 67 pour-shaker-to-shot[cocktail7,shot2,left,shaker1,l2,l1;]
true 57 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 118 clean-shaker[left,right,shaker1;]
true 288 leave[left,shaker1;]
true 39 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 330 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot3;]
true 266 __method_precondition_m8_do_fill_shot_8_precondition[shot3,dispenser2,ingredient2;]
true 394 grasp[left,shot3;]
true 40 fill-shot[shot3,ingredient2,left,right,dispenser2;]
true 234 pour-shot-to-clean-shaker[shot3,ingredient2,shaker1,left,l0,l1;]
true 375 clean-shot[shot3,ingredient2,left,right;]
true 207 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot3;]
true 390 fill-shot[shot3,ingredient4,left,right,dispenser4;]
true 96 pour-shot-to-used-shaker[shot3,ingredient4,shaker1,left,l1,l2;]
true 267 leave[left,shot3;]
true 296 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4;]
true 153 __method_precondition_m6_do_clean_shot_6_precondition[shot3,right;]
true 417 grasp[right,shot3;]
true 65 clean-shot[shot3,ingredient4,right,left;]
true 93 leave[right,shot3;]
true 344 grasp[left,shaker1;]
true 71 shake[cocktail3,ingredient2,ingredient4,shaker1,left,right;]
true 150 pour-shaker-to-shot[cocktail3,shot3,left,shaker1,l2,l1;]
true 14 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 175 clean-shaker[left,right,shaker1;]
true 217 leave[left,shaker1;]
true 250 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 166 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot13;]
true 232 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser2,ingredient2;]
true 248 grasp[left,shot13;]
true 284 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 6 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 443 clean-shot[shot13,ingredient2,left,right;]
true 251 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot13;]
true 384 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 319 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2;]
true 53 leave[left,shot13;]
true 396 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient4;]
true 446 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 282 nop[;]
true 209 grasp[left,shaker1;]
true 436 shake[cocktail8,ingredient2,ingredient4,shaker1,left,right;]
true 362 pour-shaker-to-shot[cocktail8,shot4,left,shaker1,l2,l1;]
true 133 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 268 clean-shaker[left,right,shaker1;]
true 325 leave[left,shaker1;]
true 412 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 448 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot5;]
true 346 __method_precondition_m8_do_fill_shot_8_precondition[shot5,dispenser3,ingredient3;]
true 318 grasp[left,shot5;]
true 315 fill-shot[shot5,ingredient3,left,right,dispenser3;]
true 38 pour-shot-to-clean-shaker[shot5,ingredient3,shaker1,left,l0,l1;]
true 265 clean-shot[shot5,ingredient3,left,right;]
true 255 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient2,left,shot5;]
true 283 fill-shot[shot5,ingredient2,left,right,dispenser2;]
true 383 pour-shot-to-used-shaker[shot5,ingredient2,shaker1,left,l1,l2;]
true 223 leave[left,shot5;]
true 151 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient2;]
true 7 __method_precondition_m6_do_clean_shot_6_precondition[shot5,right;]
true 306 grasp[right,shot5;]
true 221 clean-shot[shot5,ingredient2,right,left;]
true 441 leave[right,shot5;]
true 439 grasp[left,shaker1;]
true 249 shake[cocktail2,ingredient3,ingredient2,shaker1,left,right;]
true 350 pour-shaker-to-shot[cocktail2,shot5,left,shaker1,l2,l1;]
true 210 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 84 clean-shaker[left,right,shaker1;]
true 61 leave[left,shaker1;]
true 37 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 48 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient4,shot15;]
true 185 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4;]
true 36 grasp[right,shot15;]
true 380 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 82 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 295 clean-shot[shot15,ingredient4,right,left;]
true 335 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient3,right,shot15;]
true 145 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 340 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 260 leave[right,shot15;]
true 444 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient4,ingredient3;]
true 432 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 313 nop[;]
true 132 grasp[right,shaker1;]
true 168 shake[cocktail4,ingredient4,ingredient3,shaker1,right,left;]
true 29 pour-shaker-to-shot[cocktail4,shot6,right,shaker1,l2,l1;]
true 339 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 263 clean-shaker[right,left,shaker1;]
true 111 leave[right,shaker1;]
true 86 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 359 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot7;]
true 179 __method_precondition_m8_do_fill_shot_8_precondition[shot7,dispenser2,ingredient2;]
true 45 grasp[left,shot7;]
true 177 fill-shot[shot7,ingredient2,left,right,dispenser2;]
true 393 pour-shot-to-clean-shaker[shot7,ingredient2,shaker1,left,l0,l1;]
true 186 clean-shot[shot7,ingredient2,left,right;]
true 242 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot7;]
true 450 fill-shot[shot7,ingredient3,left,right,dispenser3;]
true 241 pour-shot-to-used-shaker[shot7,ingredient3,shaker1,left,l1,l2;]
true 147 leave[left,shot7;]
true 320 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3;]
true 361 __method_precondition_m6_do_clean_shot_6_precondition[shot7,right;]
true 451 grasp[right,shot7;]
true 413 clean-shot[shot7,ingredient3,right,left;]
true 331 leave[right,shot7;]
true 304 grasp[left,shaker1;]
true 51 shake[cocktail10,ingredient2,ingredient3,shaker1,left,right;]
true 80 pour-shaker-to-shot[cocktail10,shot7,left,shaker1,l2,l1;]
true 428 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 281 clean-shaker[left,right,shaker1;]
true 259 leave[left,shaker1;]
true 398 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 276 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot8;]
true 455 __method_precondition_m8_do_fill_shot_8_precondition[shot8,dispenser3,ingredient3;]
true 286 grasp[right,shot8;]
true 106 fill-shot[shot8,ingredient3,right,left,dispenser3;]
true 216 pour-shot-to-clean-shaker[shot8,ingredient3,shaker1,right,l0,l1;]
true 50 clean-shot[shot8,ingredient3,right,left;]
true 447 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,right,shot8;]
true 46 fill-shot[shot8,ingredient4,right,left,dispenser4;]
true 9 pour-shot-to-used-shaker[shot8,ingredient4,shaker1,right,l1,l2;]
true 236 leave[right,shot8;]
true 155 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient4;]
true 108 __method_precondition_m6_do_clean_shot_6_precondition[shot8,left;]
true 334 grasp[left,shot8;]
true 277 clean-shot[shot8,ingredient4,left,right;]
true 159 leave[left,shot8;]
true 237 grasp[right,shaker1;]
true 408 shake[cocktail1,ingredient3,ingredient4,shaker1,right,left;]
true 239 pour-shaker-to-shot[cocktail1,shot8,right,shaker1,l2,l1;]
true 184 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 245 clean-shaker[right,left,shaker1;]
true 449 leave[right,shaker1;]
true 92 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 367 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot15;]
true 115 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient3,dispenser4;]
true 41 grasp[left,shot15;]
true 173 clean-shot[shot15,ingredient3,left,right;]
true 110 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 401 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 63 clean-shot[shot15,ingredient4,left,right;]
true 5 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,left,shot15;]
true 190 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 385 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 88 leave[left,shot15;]
true 200 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient2;]
true 453 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 258 nop[;]
true 193 grasp[right,shaker1;]
true 35 shake[cocktail5,ingredient4,ingredient2,shaker1,right,left;]
true 202 pour-shaker-to-shot[cocktail5,shot9,right,shaker1,l2,l1;]
true 392 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 353 clean-shaker[right,left,shaker1;]
true 372 leave[right,shaker1;]
true 109 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 90 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient3,shot13;]
true 11 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient4,dispenser3;]
true 285 grasp[left,shot13;]
true 140 clean-shot[shot13,ingredient4,left,right;]
true 224 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 349 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 429 clean-shot[shot13,ingredient3,left,right;]
true 107 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot13;]
true 18 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 208 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 83 leave[left,shot13;]
true 94 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient3,ingredient1;]
true 301 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 310 nop[;]
true 291 grasp[left,shaker1;]
true 183 shake[cocktail6,ingredient3,ingredient1,shaker1,left,right;]
true 10 pour-shaker-to-shot[cocktail6,shot10,left,shaker1,l2,l1;]
true 180 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 68 clean-shaker[left,right,shaker1;]
true 442 leave[left,shaker1;]
true 243 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 169 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient2,shot11;]
true 235 __method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser2,ingredient2;]
true 73 grasp[right,shot11;]
true 425 fill-shot[shot11,ingredient2,right,left,dispenser2;]
true 1 pour-shot-to-clean-shaker[shot11,ingredient2,shaker1,right,l0,l1;]
true 116 clean-shot[shot11,ingredient2,right,left;]
true 172 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,right,shot11;]
true 100 fill-shot[shot11,ingredient4,right,left,dispenser4;]
true 290 pour-shot-to-used-shaker[shot11,ingredient4,shaker1,right,l1,l2;]
true 72 leave[right,shot11;]
true 89 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient2,ingredient4;]
true 404 __method_precondition_m6_do_clean_shot_6_precondition[shot11,right;]
true 171 grasp[right,shot11;]
true 316 clean-shot[shot11,ingredient4,right,left;]
true 278 leave[right,shot11;]
true 414 grasp[left,shaker1;]
true 76 shake[cocktail11,ingredient2,ingredient4,shaker1,left,right;]
true 112 pour-shaker-to-shot[cocktail11,shot11,left,shaker1,l2,l1;]
true 154 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 337 clean-shaker[left,right,shaker1;]
true 435 leave[left,shaker1;]
true 253 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 34 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot12;]
true 424 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser1,ingredient1;]
true 178 grasp[left,shot12;]
true 352 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 195 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1;]
true 201 clean-shot[shot12,ingredient1,left,right;]
true 156 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient4,left,shot12;]
true 388 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 382 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2;]
true 287 leave[left,shot12;]
true 227 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient4;]
true 389 __method_precondition_m6_do_clean_shot_6_precondition[shot12,left;]
true 300 grasp[left,shot12;]
true 52 clean-shot[shot12,ingredient4,left,right;]
true 358 leave[left,shot12;]
true 121 grasp[right,shaker1;]
true 54 shake[cocktail9,ingredient1,ingredient4,shaker1,right,left;]
true 431 pour-shaker-to-shot[cocktail9,shot12,right,shaker1,l2,l1;]
true 420 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 415 clean-shaker[right,left,shaker1;]
true 211 leave[right,shaker1;]
true 146 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 44 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient1,dispenser1;]
true 3 grasp[left,shot13;]
true 356 refill-shot[shot13,ingredient1,left,right,dispenser1;]
true 163 leave[left,shot13;]
true 182 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,right;]
true 79 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient2,shot14;]
true 411 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser2,ingredient2;]
true 360 grasp[right,shot14;]
true 336 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 117 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,right,l0,l1;]
true 371 clean-shot[shot14,ingredient2,right,left;]
true 0 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,right,shot14;]
true 419 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 124 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2;]
true 120 leave[right,shot14;]
true 191 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient2,ingredient4;]
true 405 __method_precondition_m6_do_clean_shot_6_precondition[shot14,right;]
true 49 grasp[right,shot14;]
true 438 clean-shot[shot14,ingredient4,right,left;]
true 233 leave[right,shot14;]
true 430 grasp[left,shaker1;]
true 158 shake[cocktail11,ingredient2,ingredient4,shaker1,left,right;]
true 329 pour-shaker-to-shot[cocktail11,shot14,left,shaker1,l2,l1;]
true 97 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 327 clean-shaker[left,right,shaker1;]
true 43 leave[left,shaker1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2372
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 4744
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 7116
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 9488
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 11860
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 14232
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 16604
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 18976
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 21348
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 23720
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 26092
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 28464
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 30836
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 33208
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 35580
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 37952
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 40324
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 42696
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 45068
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 47440
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 49812
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 52184
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 54556
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 56928
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 59300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 61672
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 64044
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 66416
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 68788
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 71160
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 73532
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 75904
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 78276
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 80648
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 83020
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 85392
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 87764
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 90136
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 92508
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 94880
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 97252
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 99624
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 101996
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 104368
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 106740
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 109112
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 111484
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 113856
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 116228
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 118600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 120972
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 123344
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 125716
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 128088
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 130460
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 132832
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 135204
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 137576
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 139948
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 142320
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 144692
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 147064
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 149436
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 151808
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 154180
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 156552
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 158924
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 161296
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 163668
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 166040
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 168412
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 170784
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 173156
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 175528
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 177900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 180272
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 182644
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 185016
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 187388
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 189760
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 192132
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 194504
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 196876
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 199248
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 201620
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 203992
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 206364
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 208736
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 211108
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 213480
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 215852
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 218224
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 220596
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 222968
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 225340
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 227712
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 230084
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 232456
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 234828
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 237200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 239572
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 241944
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 244316
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 246688
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 249060
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 251432
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 253804
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 256176
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 258548
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 260920
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 263292
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 265664
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 268036
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 270408
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 272780
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 275152
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 277524
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 279896
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 282268
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 284640
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 287012
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 289384
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 291756
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 294128
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 296500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 126
ICAPS: 298872
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 127
ICAPS: 301244
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 128
ICAPS: 303616
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 129
ICAPS: 305988
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 130
ICAPS: 308360
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 131
ICAPS: 310732
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 132
ICAPS: 313104
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.101 MEMPEAK_KBS 732207.104
