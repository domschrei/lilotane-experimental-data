PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/entertainment/domain.hddl instances/entertainment/p08-use-twice-amp.hddl"


Planner Configuration
=====================
Domain: instances/entertainment/domain.hddl
Problem: instances/entertainment/p08-use-twice-amp.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p08-use-twice-amp.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 9
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 48
Compiling negative preconditions ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 18
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 48
Compiling split parameters ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 18
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 48
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 48
Grounded planning graph ... done in 318ms.
	Number of Grounded Actions 810
	Number of Grounded Literals 457
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 48
Two Way TDG ... done.
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 48
Grounding ... done.
	number of abstract tasks = 441
	number of tasks = 747
	number of decomposition methods = 1193
	number of predicates = 523
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 245
	number of epsilon methods = 0
	number of primitive tasks = 306
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 441
	number of tasks = 747
	number of decomposition methods = 1193
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 245
	number of epsilon methods = 0
	number of primitive tasks = 306
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 105ms.
	Number of Grounded Actions 254
	Number of Grounded Literals 89
	number of abstract tasks = 295
	number of tasks = 549
	number of decomposition methods = 595
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 193
	number of epsilon methods = 0
	number of primitive tasks = 254
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 295
	number of tasks = 549
	number of decomposition methods = 595
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 193
	number of epsilon methods = 0
	number of primitive tasks = 254
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 296
	number of tasks = 550
	number of decomposition methods = 596
	number of predicates = 129
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 193
	number of epsilon methods = 0
	number of primitive tasks = 254
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 296
	number of tasks = 550
	number of decomposition methods = 596
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 193
	number of epsilon methods = 0
	number of primitive tasks = 254
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 25ms.
	Number of Grounded Actions 254
	Number of Grounded Literals 89
	number of abstract tasks = 296
	number of tasks = 550
	number of decomposition methods = 596
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 193
	number of epsilon methods = 0
	number of primitive tasks = 254
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 296
	number of tasks = 550
	number of decomposition methods = 596
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 193
	number of epsilon methods = 0
	number of primitive tasks = 254
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 296
	number of tasks = 550
	number of decomposition methods = 596
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 193
	number of epsilon methods = 0
	number of primitive tasks = 254
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 296
	number of tasks = 550
	number of decomposition methods = 596
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 193
	number of epsilon methods = 0
	number of primitive tasks = 254
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 296
	number of tasks = 550
	number of decomposition methods = 596
	number of predicates = 89
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 193
	number of epsilon methods = 0
	number of primitive tasks = 254
	number of constants = 0
Tasks 254 - 113
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854770100ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854770034
done
initial PDT has 39 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 15 leafs
SHOP LEAFS 15
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 11748
Size 11748 at 0/254
Size 406
Size 406 at 0/254
Size 406
Invariant time: 0.088
Number of invariants: 406
Invariant Clauses 6496
NUMBER OF CLAUSES 10887
NUMBER OF STATE CLAUSES 9337
NUMBER OF DECOMPOSITION CLAUSES 1550
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 85.76% 14.24% 0.0% 
NUMBER OF PATHS 15
Starting cryptominisat5.5
Setting starttime of solver to 1604514464650
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 63 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 27 leafs
SHOP LEAFS 24
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854769153
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 11368
NUMBER OF CLAUSES 24095
NUMBER OF STATE CLAUSES 16573
NUMBER OF DECOMPOSITION CLAUSES 7522
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 68.78% 31.220000000000002% 0.0% 
NUMBER OF PATHS 27
Starting cryptominisat5.5
Setting starttime of solver to 1604514465192
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854768587
done
initial PDT has 99 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 54 leafs
SHOP LEAFS 39
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 22330
NUMBER OF CLAUSES 64933
NUMBER OF STATE CLAUSES 33697
NUMBER OF DECOMPOSITION CLAUSES 31236
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 51.9% 48.1% 0.0% 
NUMBER OF PATHS 54
Starting cryptominisat5.5
Setting starttime of solver to 1604514465995
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854767816
done
initial PDT has 147 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 93 leafs
SHOP LEAFS 63
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 38164
NUMBER OF CLAUSES 134003
NUMBER OF STATE CLAUSES 58402
NUMBER OF DECOMPOSITION CLAUSES 75601
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 43.58% 56.42% 0.0% 
NUMBER OF PATHS 93
Starting cryptominisat5.5
Setting starttime of solver to 1604514466908
Command exited with non-zero status 10
0.06 0.01

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^5_3;2;1;1;1,335 335 _M-plug|CONSEQUENT|CONSEQUENT
3;2;1;1;1 17 pathaction!5_3;2;1;1;1,108
Consider method^2_4;1,523 523 m-connect-direct-a
4;1 144 pathaction!2_4;1,456
Consider method^5_1;1;1;0;0,553 553 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1
1;1;1;0;0 86 pathaction!5_1;1;1;0;0,274
Consider method^3_4;2;1,359 359 m-connect-direct-a
4;2;1 24 pathaction!3_4;2;1,467
Consider method^5_5;2;1;1;1,253 253 _M-plug|CONSEQUENT|CONSEQUENT
5;2;1;1;1 128 pathaction!5_5;2;1;1;1,76
Consider method^2_5;1,192 192 m-connect-direct-a
5;1 100 pathaction!2_5;1,446
Consider method^3_5;1;1,524 524 m-dconnect-a-empty
5;1;1 147 pathaction!3_5;1;1,188
Consider method^4_3;0;1;1,495 495 _M-plug|CONSEQUENT
3;0;1;1 33 pathaction!4_3;0;1;1,221
Consider method^5_1;0;0;1;0,148 148 _M-plug|CONSEQUENT|ANTECEDENT
1;0;0;1;0 97 pathaction!5_1;0;0;1;0,68
Consider method^2_3;1,23 23 m-connect-rec-a
3;1 126 pathaction!2_3;1,459
Consider method^5_2;1;1;0;0,364 364 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0
2;1;1;0;0 43 pathaction!5_2;1;1;0;0,270
Consider method^5_2;0;0;1;0,261 261 _M-plug|CONSEQUENT|ANTECEDENT
2;0;0;1;0 16 pathaction!5_2;0;0;1;0,88
Consider method^4_5;0;1;1,251 251 _M-plug|CONSEQUENT
5;0;1;1 146 pathaction!4_5;0;1;1,234
Consider method^5_4;2;2;2;1,519 519 m-connect-direct-v
4;2;2;2;1 19 pathaction!5_4;2;2;2;1,343
Consider method^4_0;1;1;0,47 47 _M-plug|CONSEQUENT|ANTECEDENT
0;1;1;0 13 pathaction!4_0;1;1;0,86
Consider method^6_4;2;2;2;1;1,305 305 m-dconnect-v-empty
4;2;2;2;1;1 46 pathaction!6_4;2;2;2;1;1,112
Consider method^4_2;0;0;1,76 76 _M-plug|CONSEQUENT
2;0;0;1 65 pathaction!4_2;0;0;1,242
Consider method^4_3;2;2;2,20 20 m-dconnect-av
3;2;2;2 72 pathaction!4_3;2;2;2,39
Consider method^2_0;1,458 458 m-dconnect-a
0;1 149 pathaction!2_0;1,194
Consider method^5_4;2;2;2;2,456 456 m-connect-direct-a
4;2;2;2;2 67 pathaction!5_4;2;2;2;2,442
Consider method^3_4;2;0,225 225 m-connect-direct-v
4;2;0 18 pathaction!3_4;2;0,364
Consider method^0_,595 595 __top_1
 63 pathaction!0_,549
Consider method^4_5;2;1;1,541 541 _M-plug|CONSEQUENT
5;2;1;1 88 pathaction!4_5;2;1;1,230
Consider method^4_5;2;2;0,140 140 m-connect-direct-v
5;2;2;0 41 pathaction!4_5;2;2;0,360
Consider method^6_3;0;0;1;1;0,452 452 _M-plug|CONSEQUENT|CONSEQUENT
3;0;0;1;1;0 47 pathaction!6_3;0;0;1;1;0,94
Consider method^5_5;2;2;1;1,0 0 m-dconnect-a-empty
5;2;2;1;1 71 pathaction!5_5;2;2;1;1,199
Consider method^4_5;2;2;1,118 118 m-connect-direct-a
5;2;2;1 79 pathaction!4_5;2;2;1,461
Consider method^2_5;0,572 572 m-connect-direct-v
5;0 50 pathaction!2_5;0,347
Consider method^2_2;0,410 410 m-connect-direct-a
2;0 11 pathaction!2_2;0,465
Consider method^1_0,298 298 m-connect-rec-a
0 103 pathaction!1_0,453
Consider method^3_4;0;1,580 580 m-dconnect-v
4;0;1 20 pathaction!3_4;0;1,120
Consider method^2_2;1,127 127 m-dconnect-a
2;1 10 pathaction!2_2;1,189
Consider method^2_3;2,422 422 m-connect-rec-av-1
3;2 110 pathaction!2_3;2,432
Consider method^6_4;2;0;1;1;0,349 349 _M-plug|CONSEQUENT|CONSEQUENT
4;2;0;1;1;0 123 pathaction!6_4;2;0;1;1;0,98
Consider method^3_1;0;0,429 429 m-dconnect-a
1;0;0 68 pathaction!3_1;0;0,214
Consider method^6_2;0;0;1;0;0,513 513 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0
2;0;0;1;0;0 31 pathaction!6_2;0;0;1;0;0,273
Consider method^5_4;2;0;1;1,477 477 _M-plug|CONSEQUENT
4;2;0;1;1 1 pathaction!5_4;2;0;1;1,252
Consider method^3_2;1;1,300 300 _M-plug|CONSEQUENT
2;1;1 124 pathaction!3_2;1;1,235
Consider method^3_0;1;1,399 399 _M-plug|CONSEQUENT
0;1;1 125 pathaction!3_0;1;1,240
Consider method^5_0;0;0;1;0,147 147 _M-plug|CONSEQUENT|ANTECEDENT
0;0;0;1;0 52 pathaction!5_0;0;0;1;0,103
Consider method^3_3;1;0,476 476 m-connect-direct-a
3;1;0 145 pathaction!3_3;1;0,463
Consider method^2_1;1,420 420 m-dconnect-a
1;1 148 pathaction!2_1;1,207
Consider method^4_3;1;0;1,585 585 m-dconnect-a-empty
3;1;0;1 62 pathaction!4_3;1;0;1,200
Consider method^5_3;0;1;1;0,184 184 _M-plug|CONSEQUENT|CONSEQUENT
3;0;1;1;0 14 pathaction!5_3;0;1;1;0,67
Consider method^2_1;0,277 277 m-connect-direct-a
1;0 5 pathaction!2_1;0,483
Consider method^3_3;1;1,481 481 m-dconnect-a-empty
3;1;1 116 pathaction!3_3;1;1,212
Consider method^4_4;2;0;1,358 358 m-dconnect-v
4;2;0;1 80 pathaction!4_4;2;0;1,125
Consider method^3_3;0;1,207 207 m-dconnect-v
3;0;1 151 pathaction!3_3;0;1,132
Consider method^6_4;2;2;2;2;2,323 323 m-dconnect-a-empty
4;2;2;2;2;2 38 pathaction!6_4;2;2;2;2;2,185
Consider method^1_4,13 13 m-connect-split-2
4 21 pathaction!1_4,428
Consider method^3_4;1;1,571 571 m-dconnect-a-empty
4;1;1 101 pathaction!3_4;1;1,195
Consider method^2_4;2,397 397 m-connect-split-2
4;2 64 pathaction!2_4;2,435
Consider method^4_1;0;0;1,236 236 _M-plug|CONSEQUENT
1;0;0;1 78 pathaction!4_1;0;0;1,222
Consider method^5_3;2;2;2;2,518 518 _M-plug|CONSEQUENT
3;2;2;2;2 114 pathaction!5_3;2;2;2;2,223
Consider method^5_5;2;2;0;1,29 29 m-dconnect-v-empty
5;2;2;0;1 127 pathaction!5_5;2;2;0;1,122
Consider method^4_1;1;1;0,187 187 _M-plug|CONSEQUENT|ANTECEDENT
1;1;1;0 35 pathaction!4_1;1;1;0,89
Consider method^2_4;0,288 288 m-connect-direct-v
4;0 57 pathaction!2_4;0,356
Consider method^3_0;0;0,551 551 m-dconnect-a
0;0;0 29 pathaction!3_0;0;0,198
Consider method^4_4;2;2;2,129 129 m-connect-split-1
4;2;2;2 85 pathaction!4_4;2;2;2,429
Consider method^6_3;2;2;2;2;2,556 556 _M-plug|CONSEQUENT|CONSEQUENT
3;2;2;2;2;2 99 pathaction!6_3;2;2;2;2;2,69
Consider method^2_0;0,221 221 m-connect-direct-a
0;0 45 pathaction!2_0;0,460
Consider method^3_4;2;2,422 422 m-connect-rec-av-1
4;2;2 40 pathaction!3_4;2;2,432
Consider method^4_4;2;1;1,254 254 m-dconnect-a-empty
4;2;1;1 95 pathaction!4_4;2;1;1,203
Consider method^5_4;0;1;1;0,224 224 _M-plug|CONSEQUENT|CONSEQUENT
4;0;1;1;0 76 pathaction!5_4;0;1;1;0,73
Consider method^2_5;2,381 381 m-connect-rec-av-1
5;2 136 pathaction!2_5;2,434
Consider method^3_1;1;1,94 94 _M-plug|CONSEQUENT
1;1;1 77 pathaction!3_1;1;1,243
Consider method^4_2;1;1;0,363 363 _M-plug|CONSEQUENT|ANTECEDENT
2;1;1;0 89 pathaction!4_2;1;1;0,81
Consider method^4_3;2;1;1,11 11 _M-plug|CONSEQUENT
3;2;1;1 138 pathaction!4_3;2;1;1,262
Consider method^3_3;0;0,480 480 m-connect-direct-v
3;0;0 54 pathaction!3_3;0;0,362
Consider method^2_3;0,42 42 m-connect-rec-v
3;0 137 pathaction!2_3;0,359
Consider method^3_5;2;2,186 186 m-connect-split-2
5;2;2 60 pathaction!3_5;2;2,432
Consider method^5_3;0;0;1;1,87 87 _M-plug|CONSEQUENT
3;0;0;1;1 39 pathaction!5_3;0;0;1;1,248
Consider method^1_1,8 8 m-connect-rec-a
1 8 pathaction!1_1,464
Consider method^3_2;0;0,284 284 m-dconnect-a
2;0;0 132 pathaction!3_2;0;0,201
Consider method^6_1;0;0;1;0;0,123 123 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0
1;0;0;1;0;0 109 pathaction!6_1;0;0;1;0;0,266
Consider method^3_5;2;1,336 336 m-dconnect-av
5;2;1 82 pathaction!3_5;2;1,37
Consider method^4_5;2;2;2,22 22 m-connect-direct-av
5;2;2;2 51 pathaction!4_5;2;2;2,429
Consider method^4_0;0;0;1,491 491 _M-plug|CONSEQUENT
0;0;0;1 141 pathaction!4_0;0;0;1,257
Consider method^1_3,174 174 m-connect-split-2
3 66 pathaction!1_3,433
Consider method^5_5;2;2;2;2,343 343 m-dconnect-av-empty
5;2;2;2;2 104 pathaction!5_5;2;2;2;2,39
Consider method^1_5,32 32 m-connect-split-2
5 107 pathaction!1_5,431
Consider method^4_4;2;2;1,84 84 m-dconnect-av-empty
4;2;2;1 81 pathaction!4_4;2;2;1,49
Consider method^3_5;0;1,545 545 m-dconnect-v
5;0;1 130 pathaction!3_5;0;1,115
Consider method^1_2,246 246 m-connect-rec-a
2 36 pathaction!1_2,482
Consider method^3_3;2;1,194 194 m-dconnect-av
3;2;1 83 pathaction!3_3;2;1,49
Consider method^4_3;0;0;1,244 244 m-dconnect-v
3;0;0;1 105 pathaction!4_3;0;0;1,123
Consider method^5_0;1;1;0;0,71 71 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1
0;1;1;0;0 0 pathaction!5_0;1;1;0;0,272
Consider method^3_3;2;2,22 22 m-connect-direct-av
3;2;2 150 pathaction!3_3;2;2,429
Consider method^5_5;0;1;1;0,401 401 _M-plug|CONSEQUENT|CONSEQUENT
5;0;1;1;0 49 pathaction!5_5;0;1;1;0,80
Consider method^4_4;0;1;1,301 301 _M-plug|CONSEQUENT
4;0;1;1 58 pathaction!4_4;0;1;1,227
Consider method^6_0;0;0;1;0;0,320 320 _M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0
0;0;0;1;0;0 122 pathaction!6_0;0;0;1;0;0,278


CHECKING primitive solution of length 39 ...
true 75 __method_precondition_m-dconnect-a_9_precondition[tv1-1-cinch-2,cinch-cable-1-cinch-1;]
true 26 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[tv1-1,tv1-1-cinch-2,cinch-cable-1,cinch-cable-1-cinch-1;]
true 106 __method_precondition_m-dconnect-a_9_precondition[cinch-cable-1-cinch-2,amplifier-1-cinch-2;]
true 117 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[cinch-cable-1,cinch-cable-1-cinch-2,amplifier-1,amplifier-1-cinch-2;]
true 55 __method_precondition_m-dconnect-a_9_precondition[amplifier-1-speakerWire-6,speaker-wire-1-speakerWire-1;]
true 2 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[amplifier-1,amplifier-1-speakerWire-6,speaker-wire-1,speaker-wire-1-speakerWire-1;]
true 96 __method_precondition_m-dconnect-a_9_precondition[speaker-wire-1-speakerWire-2,box-1-speakerWire-1;]
true 23 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[speaker-wire-1,speaker-wire-1-speakerWire-2,box-1,box-1-speakerWire-1;]
true 48 __method_precondition_m-dconnect-a_9_precondition[amplifier-1-speakerWire-5,speaker-wire-2-speakerWire-1;]
true 131 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[amplifier-1,amplifier-1-speakerWire-5,speaker-wire-2,speaker-wire-2-speakerWire-1;]
true 73 __method_precondition_m-dconnect-a_9_precondition[speaker-wire-2-speakerWire-2,box-2-speakerWire-1;]
true 70 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[speaker-wire-2,speaker-wire-2-speakerWire-2,box-2,box-2-speakerWire-1;]
true 42 __method_precondition_m-dconnect-v_10_precondition[blu-ray-1-scart-1,scart-cable-1-scart-1;]
true 90 plug|CONSEQUENT|CONSEQUENT[blu-ray-1,blu-ray-1-scart-1,scart-cable-1,scart-cable-1-scart-1;]
true 7 __method_precondition_m-dconnect-v_10_precondition[scart-cable-1-scart-2,multi-scart-1-scart-4;]
true 113 plug|CONSEQUENT|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,multi-scart-1,multi-scart-1-scart-4;]
true 139 __method_precondition_m-dconnect-a-empty_12_precondition[blu-ray-1,scart-cable-1;]
true 98 __method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-1,multi-scart-1;]
true 25 __method_precondition_m-dconnect-av_8_precondition[multi-scart-1-scart-1,scart-cable-4-scart-1;]
true 121 plug|CONSEQUENT|CONSEQUENT[multi-scart-1,multi-scart-1-scart-1,scart-cable-4,scart-cable-4-scart-1;]
true 143 __method_precondition_m-dconnect-av_8_precondition[scart-cable-4-scart-2,tv1-1-scart-1;]
true 22 plug|CONSEQUENT|CONSEQUENT[scart-cable-4,scart-cable-4-scart-2,tv1-1,tv1-1-scart-1;]
true 108 __method_precondition_m-dconnect-v_10_precondition[dvd-1-scart-1,scart-cable-3-scart-1;]
true 34 plug|CONSEQUENT|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-3,scart-cable-3-scart-1;]
true 84 __method_precondition_m-dconnect-a-empty_12_precondition[dvd-1,scart-cable-3;]
true 120 __method_precondition_m-dconnect-v_10_precondition[scart-cable-3-scart-2,multi-scart-1-scart-3;]
true 32 plug|CONSEQUENT|CONSEQUENT[scart-cable-3,scart-cable-3-scart-2,multi-scart-1,multi-scart-1-scart-3;]
true 102 __method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-3,multi-scart-1;]
true 59 __method_precondition_m-dconnect-av-empty_11_precondition[multi-scart-1,scart-cable-4;]
true 91 __method_precondition_m-dconnect-v-empty_13_precondition[scart-cable-4,tv1-1;]
true 56 __method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-4,tv1-1;]
true 15 __method_precondition_m-dconnect-v_10_precondition[game-console-1-scart-1,scart-cable-2-scart-1;]
true 92 plug|CONSEQUENT|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-2,scart-cable-2-scart-1;]
true 9 __method_precondition_m-dconnect-a-empty_12_precondition[game-console-1,scart-cable-2;]
true 152 __method_precondition_m-dconnect-av_8_precondition[scart-cable-2-scart-2,multi-scart-1-scart-2;]
true 111 plug|CONSEQUENT|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,multi-scart-1,multi-scart-1-scart-2;]
true 69 __method_precondition_m-dconnect-v-empty_13_precondition[multi-scart-1,scart-cable-4;]
true 119 __method_precondition_m-dconnect-a-empty_12_precondition[multi-scart-1,scart-cable-4;]
true 133 __method_precondition_m-dconnect-av-empty_11_precondition[scart-cable-4,tv1-1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 594
TSTG: 2147483647
Method: 2147483647
DP max: 30
Taking minimum: 30
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 14
  lower bound = 0

Running SAT search with cost bound = 7
==================================================
  upper bound = 14
  lower bound = 0
LEN 7
ICAPS: 4158
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854766463
DP max: 102
Taking minimum: 102
Generating initial PDT ... done
initial PDT has 59427 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 58233 leafs
SHOP LEAFS 29703
Assignment implications
Still waiting ... running for 76775 will abort at 9223372036854766463
Generating clauses representing decomposition ... 
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 139.467 MEMPEAK_KBS 8006234.112
