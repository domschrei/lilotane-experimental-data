PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p07.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p07.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p07.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Grounded planning graph ... done in 592ms.
	Number of Grounded Actions 3009
	Number of Grounded Literals 443
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Grounding ... done.
	number of abstract tasks = 1354
	number of tasks = 4101
	number of decomposition methods = 5067
	number of predicates = 443
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1354
	number of tasks = 4101
	number of decomposition methods = 5067
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 425ms.
	Number of Grounded Actions 2747
	Number of Grounded Literals 413
	number of abstract tasks = 1354
	number of tasks = 4101
	number of decomposition methods = 5067
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1354
	number of tasks = 4101
	number of decomposition methods = 5067
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1355
	number of tasks = 4102
	number of decomposition methods = 5068
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1355
	number of tasks = 4102
	number of decomposition methods = 5068
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 243ms.
	Number of Grounded Actions 2747
	Number of Grounded Literals 413
	number of abstract tasks = 1355
	number of tasks = 4102
	number of decomposition methods = 5068
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1355
	number of tasks = 4102
	number of decomposition methods = 5068
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1355
	number of tasks = 4102
	number of decomposition methods = 5068
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1355
	number of tasks = 4102
	number of decomposition methods = 5068
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1355
	number of tasks = 4102
	number of decomposition methods = 5068
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Tasks 2747 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767890ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854767308
done
initial PDT has 328 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 328 leafs
SHOP LEAFS 86
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 255234
Size 255190 at 0/2747
Size 253946 at 500/2747
Size 56999 at 1000/2747
Size 34333 at 1500/2747
Size 34333 at 2000/2747
Size 29563 at 2500/2747
Size 29563
Size 25811 at 0/2747
Size 22990 at 500/2747
Size 21924 at 1000/2747
Size 9654 at 1500/2747
Size 9654 at 2000/2747
Size 9053 at 2500/2747
Size 9053
Size 9053 at 0/2747
Size 9053 at 500/2747
Size 9024 at 1000/2747
Size 4421 at 1500/2747
Size 4421 at 2000/2747
Size 4403 at 2500/2747
Size 4403
Size 4387 at 0/2747
Size 4367 at 500/2747
Size 4347 at 1000/2747
Size 4178 at 1500/2747
Size 4178 at 2000/2747
Size 4158 at 2500/2747
Size 4158
Size 4154 at 0/2747
Size 4143 at 500/2747
Size 4143 at 1000/2747
Size 4108 at 1500/2747
Size 4108 at 2000/2747
Size 4103 at 2500/2747
Size 4103
Size 4103 at 0/2747
Size 4103 at 500/2747
Size 4103 at 1000/2747
Size 4079 at 1500/2747
Size 4079 at 2000/2747
Size 4079 at 2500/2747
Size 4079
Size 4079 at 0/2747
Size 4079 at 500/2747
Size 4079 at 1000/2747
Size 4079 at 1500/2747
Size 4079 at 2000/2747
Size 4079 at 2500/2747
Size 4079
Invariant time: 1.451
Number of invariants: 4079
Invariant Clauses 1341991
NUMBER OF CLAUSES 2035625
NUMBER OF STATE CLAUSES 1717628
NUMBER OF DECOMPOSITION CLAUSES 317997
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.38% 15.620000000000001% 0.0% 
NUMBER OF PATHS 328
Starting cryptominisat5.5
Setting starttime of solver to 1604494683814
Command exited with non-zero status 10
1.36 0.07

Time command gave the following runtime for the solver: 1430
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_12;3;1,4207 4207 _m4_serve_shot_2
12;3;1 464 pathaction!3_12;3;1,3400
Consider method^3_14;3;1,2567 2567 _m4_serve_shot_2
14;3;1 237 pathaction!3_14;3;1,3410
Consider method^3_2;3;4,4607 4607 _m4_serve_shot_5
2;3;4 214 pathaction!3_2;3;4,1476
Consider method^3_1;1;2,2397 2397 _m2_get_first_ingredient_3
1;1;2 67 pathaction!3_1;1;2,1914
Consider method^3_2;2;2,1763 1763 _m3_get_second_ingredient_3
2;2;2 194 pathaction!3_2;2;2,1359
Consider method^3_14;2;2,861 861 _m3_get_second_ingredient_3
14;2;2 249 pathaction!3_14;2;2,1295
Consider method^2_1;2,21 21 m3_get_second_ingredient
1;2 0 pathaction!2_1;2,268
Consider method^3_12;3;4,710 710 _m4_serve_shot_5
12;3;4 255 pathaction!3_12;3;4,1456
Consider method^1_4,3949 3949 m0_do_cocktail_in_shot1
4 292 pathaction!1_4,3437
Consider method^2_4;3,3729 3729 m4_serve_shot
4;3 409 pathaction!2_4;3,1491
Consider method^2_6;1,671 671 m2_get_first_ingredient
6;1 178 pathaction!2_6;1,3346
Consider method^2_11;3,1814 1814 m4_serve_shot
11;3 18 pathaction!2_11;3,1480
Consider method^3_0;1;2,4176 4176 _m2_get_first_ingredient_3
0;1;2 197 pathaction!3_0;1;2,2024
Consider method^3_5;1;2,3818 3818 _m2_get_first_ingredient_3
5;1;2 336 pathaction!3_5;1;2,1969
Consider method^4_8;3;1;0,4733 4733 m5_do_clean_shot
8;3;1;0 439 pathaction!4_8;3;1;0,2999
Consider method^3_6;3;5,1018 1018 _m4_serve_shot_6
6;3;5 64 pathaction!3_6;3;5,731
Consider method^2_14;1,3395 3395 m2_get_first_ingredient
14;1 299 pathaction!2_14;1,3358
Consider method^1_5,3474 3474 m0_do_cocktail_in_shot1
5 344 pathaction!1_5,3427
Consider method^3_8;3;5,1567 1567 _m4_serve_shot_6
8;3;5 393 pathaction!3_8;3;5,769
Consider method^3_11;1;1,4437 4437 m7_do_fill_shot
11;1;1 235 pathaction!3_11;1;1,671
Consider method^2_5;3,325 325 m4_serve_shot
5;3 445 pathaction!2_5;3,1481
Consider method^1_10,480 480 m0_do_cocktail_in_shot1
10 45 pathaction!1_10,3428
Consider method^2_2;2,4666 4666 m3_get_second_ingredient
2;2 23 pathaction!2_2;2,261
Consider method^3_9;2;1,3613 3613 _m3_get_second_ingredient_2
9;2;1 337 pathaction!3_9;2;1,920
Consider method^3_5;1;1,3943 3943 m9_do_fill_shot
5;1;1 211 pathaction!3_5;1;1,614
Consider method^2_14;2,2429 2429 m3_get_second_ingredient
14;2 94 pathaction!2_14;2,272
Consider method^3_1;3;1,2569 2569 _m4_serve_shot_2
1;3;1 430 pathaction!3_1;3;1,3418
Consider method^3_8;2;1,3647 3647 _m3_get_second_ingredient_2
8;2;1 174 pathaction!3_8;2;1,997
Consider method^3_5;2;2,1641 1641 _m3_get_second_ingredient_3
5;2;2 72 pathaction!3_5;2;2,1320
Consider method^2_2;1,376 376 m2_get_first_ingredient
2;1 269 pathaction!2_2;1,3347
Consider method^3_1;2;1,3918 3918 _m3_get_second_ingredient_2
1;2;1 240 pathaction!3_1;2;1,990
Consider method^3_12;2;1,4662 4662 _m3_get_second_ingredient_2
12;2;1 306 pathaction!3_12;2;1,887
Consider method^4_9;3;1;0,1543 1543 m5_do_clean_shot
9;3;1;0 347 pathaction!4_9;3;1;0,2894
Consider method^3_12;1;2,4176 4176 _m2_get_first_ingredient_3
12;1;2 480 pathaction!3_12;1;2,2024
Consider method^3_10;3;4,3715 3715 _m4_serve_shot_5
10;3;4 429 pathaction!3_10;3;4,1453
Consider method^3_12;2;2,4444 4444 _m3_get_second_ingredient_3
12;2;2 315 pathaction!3_12;2;2,1277
Consider method^1_13,3586 3586 m1_do_cocktail_in_shot2
13 270 pathaction!1_13,4100
Consider method^3_1;3;4,3532 3532 _m4_serve_shot_5
1;3;4 327 pathaction!3_1;3;4,1442
Consider method^3_2;1;1,722 722 m9_do_fill_shot
2;1;1 259 pathaction!3_2;1;1,622
Consider method^3_9;1;2,1163 1163 _m2_get_first_ingredient_3
9;1;2 317 pathaction!3_9;1;2,1945
Consider method^3_1;3;5,2865 2865 _m4_serve_shot_6
1;3;5 401 pathaction!3_1;3;5,740
Consider method^3_3;3;1,4752 4752 _m4_serve_shot_2
3;3;1 291 pathaction!3_3;3;1,3421
Consider method^4_3;3;1;0,3538 3538 m5_do_clean_shot
3;3;1;0 222 pathaction!4_3;3;1;0,3064
Consider method^4_11;3;1;0,2697 2697 m5_do_clean_shot
11;3;1;0 341 pathaction!4_11;3;1;0,3055
Consider method^2_0;2,3082 3082 m3_get_second_ingredient
0;2 331 pathaction!2_0;2,277
Consider method^3_14;3;5,444 444 _m4_serve_shot_6
14;3;5 200 pathaction!3_14;3;5,733
Consider method^3_4;3;5,3702 3702 _m4_serve_shot_6
4;3;5 36 pathaction!3_4;3;5,766
Consider method^3_3;2;2,2763 2763 _m3_get_second_ingredient_3
3;2;2 2 pathaction!3_3;2;2,1343
Consider method^2_0;1,67 67 m2_get_first_ingredient
0;1 131 pathaction!2_0;1,3363
Consider method^3_1;1;1,3253 3253 m8_do_fill_shot
1;1;1 210 pathaction!3_1;1;1,691
Consider method^1_11,1446 1446 m0_do_cocktail_in_shot1
11 54 pathaction!1_11,3426
Consider method^4_4;3;1;0,4417 4417 m5_do_clean_shot
4;3;1;0 276 pathaction!4_4;3;1;0,3158
Consider method^3_4;1;1,4309 4309 m9_do_fill_shot
4;1;1 63 pathaction!3_4;1;1,656
Consider method^2_5;2,2950 2950 m3_get_second_ingredient
5;2 149 pathaction!2_5;2,269
Consider method^3_11;2;1,4086 4086 _m3_get_second_ingredient_2
11;2;1 302 pathaction!3_11;2;1,876
Consider method^4_6;3;1;0,4734 4734 m6_do_clean_shot
6;3;1;0 424 pathaction!4_6;3;1;0,2973
Consider method^1_12,1863 1863 m0_do_cocktail_in_shot1
12 353 pathaction!1_12,3435
Consider method^2_7;1,4093 4093 m2_get_first_ingredient
7;1 164 pathaction!2_7;1,3357
Consider method^3_4;3;1,2536 2536 _m4_serve_shot_2
4;3;1 234 pathaction!3_4;3;1,3407
Consider method^3_3;3;4,4195 4195 _m4_serve_shot_5
3;3;4 227 pathaction!3_3;3;4,1451
Consider method^2_12;1,3019 3019 m2_get_first_ingredient
12;1 201 pathaction!2_12;1,3356
Consider method^3_8;2;2,4906 4906 _m3_get_second_ingredient_3
8;2;2 296 pathaction!3_8;2;2,1265
Consider method^2_13;1,2369 2369 m9_do_fill_shot
13;1 420 pathaction!2_13;1,656
Consider method^3_9;1;3,3228 3228 _m2_get_first_ingredient_4
9;1;3 472 pathaction!3_9;1;3,1076
Consider method^3_1;2;2,282 282 _m3_get_second_ingredient_3
1;2;2 65 pathaction!3_1;2;2,1315
Consider method^3_8;3;4,2764 2764 _m4_serve_shot_5
8;3;4 88 pathaction!3_8;3;4,1425
Consider method^3_10;2;2,2763 2763 _m3_get_second_ingredient_3
10;2;2 161 pathaction!3_10;2;2,1343
Consider method^3_9;2;2,3351 3351 _m3_get_second_ingredient_3
9;2;2 154 pathaction!3_9;2;2,1310
Consider method^3_3;3;5,773 773 _m4_serve_shot_6
3;3;5 371 pathaction!3_3;3;5,767
Consider method^3_12;3;5,1838 1838 _m4_serve_shot_6
12;3;5 236 pathaction!3_12;3;5,730
Consider method^3_0;1;1,853 853 m8_do_fill_shot
0;1;1 444 pathaction!3_0;1;1,690
Consider method^2_8;3,3163 3163 m4_serve_shot
8;3 185 pathaction!2_8;3,1484
Consider method^3_8;3;1,479 479 _m4_serve_shot_2
8;3;1 108 pathaction!3_8;3;1,3408
Consider method^3_14;1;3,2492 2492 _m2_get_first_ingredient_4
14;1;3 176 pathaction!3_14;1;3,1186
Consider method^3_7;1;2,3493 3493 _m2_get_first_ingredient_3
7;1;2 56 pathaction!3_7;1;2,1905
Consider method^1_8,2702 2702 m0_do_cocktail_in_shot1
8 170 pathaction!1_8,3430
Consider method^2_5;1,2529 2529 m2_get_first_ingredient
5;1 456 pathaction!2_5;1,3355
Consider method^3_7;3;1,1479 1479 _m4_serve_shot_2
7;3;1 448 pathaction!3_7;3;1,3405
Consider method^2_9;2,3603 3603 m3_get_second_ingredient
9;2 352 pathaction!2_9;2,258
Consider method^3_5;1;3,860 860 _m2_get_first_ingredient_4
5;1;3 297 pathaction!3_5;1;3,1088
Consider method^1_9,2175 2175 m0_do_cocktail_in_shot1
9 410 pathaction!1_9,3432
Consider method^4_10;3;1;0,3799 3799 m5_do_clean_shot
10;3;1;0 460 pathaction!4_10;3;1;0,3067
Consider method^1_0,2630 2630 m0_do_cocktail_in_shot1
0 245 pathaction!1_0,3439
Consider method^3_7;1;3,3285 3285 _m2_get_first_ingredient_4
7;1;3 469 pathaction!3_7;1;3,1178
Consider method^3_3;2;1,2947 2947 _m3_get_second_ingredient_2
3;2;1 84 pathaction!3_3;2;1,893
Consider method^3_11;2;2,5055 5055 _m3_get_second_ingredient_3
11;2;2 366 pathaction!3_11;2;2,1326
Consider method^1_14,1873 1873 m0_do_cocktail_in_shot1
14 150 pathaction!1_14,3438
Consider method^2_10;1,2736 2736 m2_get_first_ingredient
10;1 368 pathaction!2_10;1,3348
Consider method^3_9;3;5,1838 1838 _m4_serve_shot_6
9;3;5 104 pathaction!3_9;3;5,730
Consider method^3_7;1;1,4276 4276 m7_do_fill_shot
7;1;1 263 pathaction!3_7;1;1,704
Consider method^3_2;3;5,2749 2749 _m4_serve_shot_6
2;3;5 99 pathaction!3_2;3;5,758
Consider method^2_1;3,2721 2721 m4_serve_shot
1;3 31 pathaction!2_1;3,1488
Consider method^2_8;2,2940 2940 m3_get_second_ingredient
8;2 279 pathaction!2_8;2,274
Consider method^2_11;2,3147 3147 m3_get_second_ingredient
11;2 133 pathaction!2_11;2,271
Consider method^3_8;1;3,4776 4776 _m2_get_first_ingredient_4
8;1;3 191 pathaction!3_8;1;3,1182
Consider method^2_7;3,697 697 m4_serve_shot
7;3 313 pathaction!2_7;3,1487
Consider method^3_4;2;2,1752 1752 _m3_get_second_ingredient_3
4;2;2 186 pathaction!3_4;2;2,1261
Consider method^2_6;3,2329 2329 m4_serve_shot
6;3 221 pathaction!2_6;3,1490
Consider method^3_3;1;3,744 744 _m2_get_first_ingredient_4
3;1;3 87 pathaction!3_3;1;3,1175
Consider method^3_14;1;1,1735 1735 m8_do_fill_shot
14;1;1 12 pathaction!3_14;1;1,712
Consider method^3_10;3;5,3463 3463 _m4_serve_shot_6
10;3;5 475 pathaction!3_10;3;5,760
Consider method^2_0;3,2603 2603 m4_serve_shot
0;3 320 pathaction!2_0;3,1493
Consider method^2_4;2,1161 1161 m3_get_second_ingredient
4;2 286 pathaction!2_4;2,272
Consider method^4_0;3;1;0,2274 2274 m5_do_clean_shot
0;3;1;0 443 pathaction!4_0;3;1;0,3003
Consider method^3_11;3;4,4082 4082 _m4_serve_shot_5
11;3;4 239 pathaction!3_11;3;4,1440
Consider method^2_9;3,1353 1353 m4_serve_shot
9;3 427 pathaction!2_9;3,1486
Consider method^3_4;1;2,1449 1449 _m2_get_first_ingredient_3
4;1;2 204 pathaction!3_4;1;2,1939
Consider method^3_6;1;1,873 873 m8_do_fill_shot
6;1;1 411 pathaction!3_6;1;1,717
Consider method^3_7;2;1,884 884 _m3_get_second_ingredient_2
7;2;1 147 pathaction!3_7;2;1,874
Consider method^1_3,3450 3450 m0_do_cocktail_in_shot1
3 426 pathaction!1_3,3429
Consider method^3_6;2;2,4594 4594 _m3_get_second_ingredient_3
6;2;2 121 pathaction!3_6;2;2,1296
Consider method^3_5;3;1,186 186 _m4_serve_shot_2
5;3;1 181 pathaction!3_5;3;1,3422
Consider method^3_10;2;1,2947 2947 _m3_get_second_ingredient_2
10;2;1 417 pathaction!3_10;2;1,893
Consider method^3_6;3;4,4440 4440 _m4_serve_shot_5
6;3;4 143 pathaction!3_6;3;4,1439
Consider method^3_10;1;1,1809 1809 m9_do_fill_shot
10;1;1 118 pathaction!3_10;1;1,701
Consider method^2_1;1,4622 4622 m2_get_first_ingredient
1;1 58 pathaction!2_1;1,3354
Consider method^4_5;3;1;0,3492 3492 m5_do_clean_shot
5;3;1;0 111 pathaction!4_5;3;1;0,3006
Consider method^3_14;2;1,4873 4873 _m3_get_second_ingredient_2
14;2;1 81 pathaction!3_14;2;1,1002
Consider method^3_5;3;4,2198 2198 _m4_serve_shot_5
5;3;4 114 pathaction!3_5;3;4,1452
Consider method^3_4;2;1,3591 3591 _m3_get_second_ingredient_2
4;2;1 463 pathaction!3_4;2;1,961
Consider method^2_8;1,1672 1672 m2_get_first_ingredient
8;1 231 pathaction!2_8;1,3360
Consider method^3_5;3;5,457 457 _m4_serve_shot_6
5;3;5 329 pathaction!3_5;3;5,768
Consider method^2_11;1,1305 1305 m2_get_first_ingredient
11;1 267 pathaction!2_11;1,3357
Consider method^2_12;3,1055 1055 m4_serve_shot
12;3 406 pathaction!2_12;3,1489
Consider method^3_6;1;2,4692 4692 _m2_get_first_ingredient_3
6;1;2 219 pathaction!3_6;1;2,1938
Consider method^3_10;3;1,3164 3164 _m4_serve_shot_2
10;3;1 26 pathaction!3_10;3;1,3419
Consider method^3_14;3;4,3698 3698 _m4_serve_shot_5
14;3;4 195 pathaction!3_14;3;4,1459
Consider method^3_12;1;3,3704 3704 _m2_get_first_ingredient_4
12;1;3 188 pathaction!3_12;1;3,1164
Consider method^3_14;1;2,587 587 _m2_get_first_ingredient_3
14;1;2 241 pathaction!3_14;1;2,1931
Consider method^2_3;1,3391 3391 m2_get_first_ingredient
3;1 256 pathaction!2_3;1,3361
Consider method^3_1;1;3,4796 4796 _m2_get_first_ingredient_4
1;1;3 32 pathaction!3_1;1;3,1165
Consider method^3_7;3;5,2656 2656 _m4_serve_shot_6
7;3;5 34 pathaction!3_7;3;5,751
Consider method^3_11;3;5,2656 2656 _m4_serve_shot_6
11;3;5 365 pathaction!3_11;3;5,751
Consider method^4_7;3;1;0,203 203 m5_do_clean_shot
7;3;1;0 38 pathaction!4_7;3;1;0,2918
Consider method^3_2;1;2,1059 1059 _m2_get_first_ingredient_3
2;1;2 319 pathaction!3_2;1;2,1978
Consider method^1_7,278 278 m0_do_cocktail_in_shot1
7 116 pathaction!1_7,3433
Consider method^3_0;2;2,2699 2699 _m3_get_second_ingredient_3
0;2;2 169 pathaction!3_0;2;2,1313
Consider method^2_14;3,5041 5041 m4_serve_shot
14;3 453 pathaction!2_14;3,1492
Consider method^2_3;3,1182 1182 m4_serve_shot
3;3 90 pathaction!2_3;3,1483
Consider method^0_,5067 5067 __top_1
 1 pathaction!0_,4101
Consider method^4_14;3;1;0,1061 1061 m6_do_clean_shot
14;3;1;0 10 pathaction!4_14;3;1;0,3267
Consider method^3_9;3;1,416 416 _m4_serve_shot_2
9;3;1 260 pathaction!3_9;3;1,3423
Consider method^3_11;1;2,1676 1676 _m2_get_first_ingredient_3
11;1;2 309 pathaction!3_11;1;2,1948
Consider method^2_10;2,255 255 m3_get_second_ingredient
10;2 193 pathaction!2_10;2,262
Consider method^2_12;2,1684 1684 m3_get_second_ingredient
12;2 281 pathaction!2_12;2,270
Consider method^3_11;3;1,2135 2135 _m4_serve_shot_2
11;3;1 62 pathaction!3_11;3;1,3398
Consider method^3_0;2;1,5029 5029 _m3_get_second_ingredient_2
0;2;1 308 pathaction!3_0;2;1,930
Consider method^1_6,1270 1270 m0_do_cocktail_in_shot1
6 356 pathaction!1_6,3436
Consider method^2_6;2,4143 4143 m3_get_second_ingredient
6;2 175 pathaction!2_6;2,260
Consider method^3_9;1;1,4485 4485 m9_do_fill_shot
9;1;1 335 pathaction!3_9;1;1,602
Consider method^2_10;3,1823 1823 m4_serve_shot
10;3 438 pathaction!2_10;3,1482
Consider method^2_3;2,4621 4621 m3_get_second_ingredient
3;2 82 pathaction!2_3;2,275
Consider method^2_7;2,1389 1389 m3_get_second_ingredient
7;2 220 pathaction!2_7;2,271
Consider method^4_12;3;1;0,1299 1299 m5_do_clean_shot
12;3;1;0 400 pathaction!4_12;3;1;0,3023
Consider method^3_6;2;1,3364 3364 _m3_get_second_ingredient_2
6;2;1 351 pathaction!3_6;2;1,905
Consider method^3_0;3;5,3909 3909 _m4_serve_shot_6
0;3;5 74 pathaction!3_0;3;5,736
Consider method^2_13;0,3263 3263 _m1_do_cocktail_in_shot2_4
13;0 461 pathaction!2_13;0,4085
Consider method^2_2;3,3630 3630 m4_serve_shot
2;3 452 pathaction!2_2;3,1485
Consider method^3_0;1;3,3704 3704 _m2_get_first_ingredient_4
0;1;3 387 pathaction!3_0;1;3,1164
Consider method^3_11;1;3,2660 2660 _m2_get_first_ingredient_4
11;1;3 390 pathaction!3_11;1;3,1145
Consider method^3_12;1;1,1629 1629 m7_do_fill_shot
12;1;1 379 pathaction!3_12;1;1,690
Consider method^3_7;3;4,366 366 _m4_serve_shot_5
7;3;4 57 pathaction!3_7;3;4,1458
Consider method^2_4;1,2412 2412 m2_get_first_ingredient
4;1 396 pathaction!2_4;1,3358
Consider method^3_7;2;2,3093 3093 _m3_get_second_ingredient_3
7;2;2 153 pathaction!3_7;2;2,1257
Consider method^1_1,123 123 m0_do_cocktail_in_shot1
1 92 pathaction!1_1,3434
Consider method^3_5;2;1,650 650 _m3_get_second_ingredient_2
5;2;1 42 pathaction!3_5;2;1,974
Consider method^3_9;3;4,3265 3265 _m4_serve_shot_5
9;3;4 372 pathaction!3_9;3;4,1469
Consider method^1_2,4998 4998 m0_do_cocktail_in_shot1
2 413 pathaction!1_2,3431
Consider method^3_2;1;3,2949 2949 _m2_get_first_ingredient_4
2;1;3 330 pathaction!3_2;1;3,1096
Consider method^3_10;1;3,744 744 _m2_get_first_ingredient_4
10;1;3 98 pathaction!3_10;1;3,1175
Consider method^3_4;3;4,2347 2347 _m4_serve_shot_5
4;3;4 224 pathaction!3_4;3;4,1466
Consider method^3_4;1;3,5031 5031 _m2_get_first_ingredient_4
4;1;3 378 pathaction!3_4;1;3,1130
Consider method^3_3;1;1,2925 2925 m8_do_fill_shot
3;1;1 7 pathaction!3_3;1;1,701
Consider method^3_6;1;3,2143 2143 _m2_get_first_ingredient_4
6;1;3 385 pathaction!3_6;1;3,1191
Consider method^3_6;3;1,3794 3794 _m4_serve_shot_2
6;3;1 311 pathaction!3_6;3;1,3412
Consider method^4_1;3;1;0,427 427 m6_do_clean_shot
1;3;1;0 127 pathaction!4_1;3;1;0,3139
Consider method^3_0;3;4,497 497 _m4_serve_shot_5
0;3;4 389 pathaction!3_0;3;4,1446
Consider method^3_2;3;1,1424 1424 _m4_serve_shot_2
2;3;1 265 pathaction!3_2;3;1,3425
Consider method^3_2;2;1,4529 4529 _m3_get_second_ingredient_2
2;2;1 397 pathaction!3_2;2;1,982
Consider method^3_3;1;2,3724 3724 _m2_get_first_ingredient_3
3;1;2 179 pathaction!3_3;1;2,1951
Consider method^2_9;1,2248 2248 m2_get_first_ingredient
9;1 473 pathaction!2_9;1,3344
Consider method^4_2;3;1;0,4280 4280 m5_do_clean_shot
2;3;1;0 159 pathaction!4_2;3;1;0,3270
Consider method^3_8;1;1,3873 3873 m7_do_fill_shot
8;1;1 134 pathaction!3_8;1;1,708
Consider method^3_10;1;2,3724 3724 _m2_get_first_ingredient_3
10;1;2 326 pathaction!3_10;1;2,1951
Consider method^3_8;1;2,267 267 _m2_get_first_ingredient_3
8;1;2 160 pathaction!3_8;1;2,1957
Consider method^3_0;3;1,4426 4426 _m4_serve_shot_2
0;3;1 383 pathaction!3_0;3;1,3414


CHECKING primitive solution of length 297 ...
true 254 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 451 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient2,shot14;]
true 349 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser2,ingredient2;]
true 264 grasp[left,shot14;]
true 91 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 180 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 388 clean-shot[shot14,ingredient2,left,right;]
true 196 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient1,left,shot14;]
true 435 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 208 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2;]
true 115 leave[left,shot14;]
true 73 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient2,ingredient1;]
true 113 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 394 nop[;]
true 189 grasp[left,shaker1;]
true 470 shake[cocktail11,ingredient2,ingredient1,shaker1,left,right;]
true 339 pour-shaker-to-shot[cocktail11,shot1,left,shaker1,l2,l1;]
true 375 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 301 clean-shaker[left,right,shaker1;]
true 207 leave[left,shaker1;]
true 119 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 361 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient3,shot2;]
true 262 __method_precondition_m8_do_fill_shot_8_precondition[shot2,dispenser3,ingredient3;]
true 465 grasp[left,shot2;]
true 59 fill-shot[shot2,ingredient3,left,right,dispenser3;]
true 183 pour-shot-to-clean-shaker[shot2,ingredient3,shaker1,left,l0,l1;]
true 328 clean-shot[shot2,ingredient3,left,right;]
true 162 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,left,shot2;]
true 19 fill-shot[shot2,ingredient4,left,right,dispenser4;]
true 8 pour-shot-to-used-shaker[shot2,ingredient4,shaker1,left,l1,l2;]
true 28 leave[left,shot2;]
true 243 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient3,ingredient4;]
true 449 __method_precondition_m6_do_clean_shot_6_precondition[shot2,right;]
true 218 grasp[right,shot2;]
true 51 clean-shot[shot2,ingredient4,right,left;]
true 275 leave[right,shot2;]
true 423 grasp[left,shaker1;]
true 437 shake[cocktail6,ingredient3,ingredient4,shaker1,left,right;]
true 408 pour-shaker-to-shot[cocktail6,shot2,left,shaker1,l2,l1;]
true 93 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 37 clean-shaker[left,right,shaker1;]
true 278 leave[left,shaker1;]
true 199 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 382 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient3,shot14;]
true 182 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient1,dispenser3;]
true 77 grasp[left,shot14;]
true 89 clean-shot[shot14,ingredient1,left,right;]
true 316 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 203 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1;]
true 307 clean-shot[shot14,ingredient3,left,right;]
true 229 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot14;]
true 467 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 212 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,left,l1,l2;]
true 447 leave[left,shot14;]
true 466 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient3,ingredient2;]
true 130 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 123 nop[;]
true 136 grasp[right,shaker1;]
true 398 shake[cocktail7,ingredient3,ingredient2,shaker1,right,left;]
true 332 pour-shaker-to-shot[cocktail7,shot3,right,shaker1,l2,l1;]
true 300 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 446 clean-shaker[right,left,shaker1;]
true 422 leave[right,shaker1;]
true 458 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 75 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot16;]
true 61 __method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser3,ingredient3;]
true 363 grasp[left,shot16;]
true 342 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 71 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1;]
true 425 clean-shot[shot16,ingredient3,left,right;]
true 418 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot16;]
true 322 fill-shot[shot16,ingredient4,left,right,dispenser4;]
true 415 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2;]
true 345 leave[left,shot16;]
true 455 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient4;]
true 295 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 380 nop[;]
true 283 grasp[left,shaker1;]
true 324 shake[cocktail8,ingredient3,ingredient4,shaker1,left,right;]
true 258 pour-shaker-to-shot[cocktail8,shot4,left,shaker1,l2,l1;]
true 414 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 433 clean-shaker[left,right,shaker1;]
true 434 leave[left,shaker1;]
true 13 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 80 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot14;]
true 141 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient2,dispenser5;]
true 482 grasp[right,shot14;]
true 402 clean-shot[shot14,ingredient2,right,left;]
true 459 fill-shot[shot14,ingredient5,right,left,dispenser5;]
true 376 pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1;]
true 83 clean-shot[shot14,ingredient5,right,left;]
true 285 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,right,shot14;]
true 50 fill-shot[shot14,ingredient1,right,left,dispenser1;]
true 462 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,right,l1,l2;]
true 120 leave[right,shot14;]
true 321 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient1;]
true 381 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 187 nop[;]
true 440 grasp[right,shaker1;]
true 314 shake[cocktail10,ingredient5,ingredient1,shaker1,right,left;]
true 360 pour-shaker-to-shot[cocktail10,shot5,right,shaker1,l2,l1;]
true 310 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 144 clean-shaker[right,left,shaker1;]
true 168 leave[right,shaker1;]
true 106 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 252 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient5,shot16;]
true 223 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient4,dispenser5;]
true 14 grasp[left,shot16;]
true 290 clean-shot[shot16,ingredient4,left,right;]
true 284 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 55 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1;]
true 163 clean-shot[shot16,ingredient5,left,right;]
true 248 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,left,shot16;]
true 21 fill-shot[shot16,ingredient1,left,right,dispenser1;]
true 266 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,left,l1,l2;]
true 416 leave[left,shot16;]
true 172 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient5,ingredient1;]
true 137 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 76 nop[;]
true 350 grasp[left,shaker1;]
true 103 shake[cocktail9,ingredient5,ingredient1,shaker1,left,right;]
true 441 pour-shaker-to-shot[cocktail9,shot6,left,shaker1,l2,l1;]
true 293 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 117 clean-shaker[left,right,shaker1;]
true 246 leave[left,shaker1;]
true 323 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 107 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot7;]
true 206 __method_precondition_m8_do_fill_shot_8_precondition[shot7,dispenser1,ingredient1;]
true 47 grasp[left,shot7;]
true 253 fill-shot[shot7,ingredient1,left,right,dispenser1;]
true 289 pour-shot-to-clean-shaker[shot7,ingredient1,shaker1,left,l0,l1;]
true 428 clean-shot[shot7,ingredient1,left,right;]
true 22 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient5,left,shot7;]
true 53 fill-shot[shot7,ingredient5,left,right,dispenser5;]
true 46 pour-shot-to-used-shaker[shot7,ingredient5,shaker1,left,l1,l2;]
true 318 leave[left,shot7;]
true 101 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient5;]
true 70 __method_precondition_m6_do_clean_shot_6_precondition[shot7,right;]
true 126 grasp[right,shot7;]
true 277 clean-shot[shot7,ingredient5,right,left;]
true 6 leave[right,shot7;]
true 151 grasp[left,shaker1;]
true 340 shake[cocktail1,ingredient1,ingredient5,shaker1,left,right;]
true 128 pour-shaker-to-shot[cocktail1,shot7,left,shaker1,l2,l1;]
true 346 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 374 clean-shaker[left,right,shaker1;]
true 215 leave[left,shaker1;]
true 348 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 450 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot16;]
true 109 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient1,dispenser1;]
true 165 grasp[right,shot16;]
true 479 refill-shot[shot16,ingredient1,right,left,dispenser1;]
true 359 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1;]
true 30 clean-shot[shot16,ingredient1,right,left;]
true 156 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient2,right,shot16;]
true 242 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 148 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,right,l1,l2;]
true 250 leave[right,shot16;]
true 362 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient2;]
true 216 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 135 nop[;]
true 52 grasp[right,shaker1;]
true 69 shake[cocktail3,ingredient1,ingredient2,shaker1,right,left;]
true 4 pour-shaker-to-shot[cocktail3,shot8,right,shaker1,l2,l1;]
true 304 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 325 clean-shaker[right,left,shaker1;]
true 355 leave[right,shaker1;]
true 192 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 244 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot16;]
true 190 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient2,dispenser2;]
true 478 grasp[left,shot16;]
true 233 refill-shot[shot16,ingredient2,left,right,dispenser2;]
true 11 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1;]
true 477 clean-shot[shot16,ingredient2,left,right;]
true 138 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot16;]
true 24 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 110 pour-shot-to-used-shaker[shot16,ingredient3,shaker1,left,l1,l2;]
true 122 leave[left,shot16;]
true 155 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient3;]
true 357 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 217 nop[;]
true 17 grasp[right,shaker1;]
true 33 shake[cocktail2,ingredient2,ingredient3,shaker1,right,left;]
true 386 pour-shaker-to-shot[cocktail2,shot9,right,shaker1,l2,l1;]
true 66 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 3 clean-shaker[right,left,shaker1;]
true 146 leave[right,shaker1;]
true 125 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 228 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot16;]
true 20 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient3,dispenser2;]
true 333 grasp[right,shot16;]
true 272 clean-shot[shot16,ingredient3,right,left;]
true 49 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 184 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1;]
true 166 clean-shot[shot16,ingredient2,right,left;]
true 294 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient4,right,shot16;]
true 43 fill-shot[shot16,ingredient4,right,left,dispenser4;]
true 481 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2;]
true 288 leave[right,shot16;]
true 48 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient4;]
true 25 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 442 nop[;]
true 139 grasp[left,shaker1;]
true 140 shake[cocktail5,ingredient2,ingredient4,shaker1,left,right;]
true 100 pour-shaker-to-shot[cocktail5,shot10,left,shaker1,l2,l1;]
true 213 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 39 clean-shaker[left,right,shaker1;]
true 209 leave[left,shaker1;]
true 171 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 257 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot16;]
true 364 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient4,dispenser3;]
true 97 grasp[left,shot16;]
true 287 clean-shot[shot16,ingredient4,left,right;]
true 273 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 95 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1;]
true 354 clean-shot[shot16,ingredient3,left,right;]
true 454 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,left,shot16;]
true 105 fill-shot[shot16,ingredient4,left,right,dispenser4;]
true 29 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2;]
true 392 leave[left,shot16;]
true 436 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient4;]
true 358 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 370 nop[;]
true 177 grasp[left,shaker1;]
true 198 shake[cocktail4,ingredient3,ingredient4,shaker1,left,right;]
true 395 pour-shaker-to-shot[cocktail4,shot11,left,shaker1,l2,l1;]
true 431 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 132 clean-shaker[left,right,shaker1;]
true 68 leave[left,shaker1;]
true 124 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right;]
true 369 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot14;]
true 421 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient1,dispenser1;]
true 225 grasp[right,shot14;]
true 142 refill-shot[shot14,ingredient1,right,left,dispenser1;]
true 145 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,right,l0,l1;]
true 226 clean-shot[shot14,ingredient1,right,left;]
true 85 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient2,right,shot14;]
true 41 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 457 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2;]
true 129 leave[right,shot14;]
true 27 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient2;]
true 261 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 303 nop[;]
true 173 grasp[right,shaker1;]
true 373 shake[cocktail3,ingredient1,ingredient2,shaker1,right,left;]
true 16 pour-shaker-to-shot[cocktail3,shot12,right,shaker1,l2,l1;]
true 40 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 44 clean-shaker[right,left,shaker1;]
true 471 leave[right,shaker1;]
true 412 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left;]
true 274 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot14;]
true 35 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient2,dispenser2;]
true 474 grasp[left,shot14;]
true 102 refill-shot[shot14,ingredient2,left,right,dispenser2;]
true 343 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 405 clean-shot[shot14,ingredient2,left,right;]
true 202 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient4,left,shot14;]
true 377 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 338 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,left,l1,l2;]
true 399 leave[left,shot14;]
true 60 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient4;]
true 79 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 78 nop[;]
true 152 grasp[left,shaker1;]
true 230 shake[cocktail5,ingredient2,ingredient4,shaker1,left,right;]
true 404 pour-shaker-to-shot[cocktail5,shot13,left,shaker1,l2,l1;]
true 367 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 5 clean-shaker[left,right,shaker1;]
true 238 leave[left,shaker1;]
true 271 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser5,ingredient5;]
true 15 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient4,dispenser5;]
true 205 grasp[right,shot14;]
true 407 clean-shot[shot14,ingredient4,right,left;]
true 232 fill-shot[shot14,ingredient5,right,left,dispenser5;]
true 476 leave[right,shot14;]
true 251 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,right;]
true 112 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot15;]
true 298 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser5,ingredient5;]
true 432 grasp[right,shot15;]
true 158 fill-shot[shot15,ingredient5,right,left,dispenser5;]
true 384 pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,right,l0,l1;]
true 280 clean-shot[shot15,ingredient5,right,left;]
true 157 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,right,shot15;]
true 305 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 9 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 391 leave[right,shot15;]
true 268 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient1;]
true 403 __method_precondition_m6_do_clean_shot_6_precondition[shot15,right;]
true 167 grasp[right,shot15;]
true 282 clean-shot[shot15,ingredient1,right,left;]
true 468 leave[right,shot15;]
true 419 grasp[left,shaker1;]
true 312 shake[cocktail10,ingredient5,ingredient1,shaker1,left,right;]
true 247 pour-shaker-to-shot[cocktail10,shot15,left,shaker1,l2,l1;]
true 96 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 334 clean-shaker[left,right,shaker1;]
true 86 leave[left,shaker1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2712
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 5424
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 8136
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 10848
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 13560
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 16272
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 18984
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 21696
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 24408
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 27120
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 29832
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 32544
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 35256
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 37968
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 40680
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 43392
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 46104
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 48816
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 51528
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 54240
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 56952
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 59664
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 62376
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 65088
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 67800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 70512
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 73224
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 75936
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 78648
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 81360
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 84072
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 86784
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 89496
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 92208
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 94920
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 97632
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 100344
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 103056
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 105768
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 108480
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 111192
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 113904
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 116616
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 119328
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 122040
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 124752
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 127464
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 130176
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 132888
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 135600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 138312
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 141024
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 143736
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 146448
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 149160
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 151872
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 154584
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 157296
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 160008
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 162720
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 165432
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 168144
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 170856
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 173568
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 176280
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 178992
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 181704
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 184416
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 187128
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 189840
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 192552
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 195264
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 197976
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 200688
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 203400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 206112
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 208824
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 211536
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 214248
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 216960
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 219672
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 222384
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 225096
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 227808
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 230520
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 233232
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 235944
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 238656
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 241368
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 244080
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 246792
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 249504
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 252216
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 254928
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 257640
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 260352
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 263064
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 265776
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 268488
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 271200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 273912
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 276624
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 279336
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 282048
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 284760
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 287472
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 290184
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 292896
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 295608
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 298320
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 301032
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 303744
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 306456
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 309168
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 311880
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 314592
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 317304
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 320016
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 322728
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 325440
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 328152
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 330864
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 333576
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 336288
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 339000
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.101 MEMPEAK_KBS 894413.824
