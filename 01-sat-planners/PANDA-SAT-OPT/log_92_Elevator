PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/Elevator/domain.hddl instances/Elevator/p12.hddl"


Planner Configuration
=====================
Domain: instances/Elevator/domain.hddl
Problem: instances/Elevator/p12.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p12.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 36
Compiling negative preconditions ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 36
Compiling split parameters ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 36
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 36
Grounded planning graph ... done in 293ms.
	Number of Grounded Actions 1273
	Number of Grounded Literals 372
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 36
Two Way TDG ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 36
Grounding ... done.
	number of abstract tasks = 74
	number of tasks = 1163
	number of decomposition methods = 696
	number of predicates = 372
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 696
	number of epsilon methods = 0
	number of primitive tasks = 1089
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 74
	number of tasks = 1163
	number of decomposition methods = 696
	number of predicates = 72
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 696
	number of epsilon methods = 0
	number of primitive tasks = 1089
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 93ms.
	Number of Grounded Actions 774
	Number of Grounded Literals 65
	number of abstract tasks = 53
	number of tasks = 827
	number of decomposition methods = 493
	number of predicates = 72
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 493
	number of epsilon methods = 0
	number of primitive tasks = 774
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 53
	number of tasks = 827
	number of decomposition methods = 493
	number of predicates = 72
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 493
	number of epsilon methods = 0
	number of primitive tasks = 774
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 53
	number of tasks = 827
	number of decomposition methods = 494
	number of predicates = 72
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 493
	number of epsilon methods = 0
	number of primitive tasks = 774
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 53
	number of tasks = 827
	number of decomposition methods = 494
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 493
	number of epsilon methods = 0
	number of primitive tasks = 774
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 50ms.
	Number of Grounded Actions 774
	Number of Grounded Literals 65
	number of abstract tasks = 53
	number of tasks = 827
	number of decomposition methods = 494
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 493
	number of epsilon methods = 0
	number of primitive tasks = 774
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 53
	number of tasks = 827
	number of decomposition methods = 493
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 493
	number of epsilon methods = 0
	number of primitive tasks = 774
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 53
	number of tasks = 827
	number of decomposition methods = 494
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 493
	number of epsilon methods = 0
	number of primitive tasks = 774
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 54
	number of tasks = 828
	number of decomposition methods = 495
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 493
	number of epsilon methods = 0
	number of primitive tasks = 774
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 54
	number of tasks = 828
	number of decomposition methods = 495
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 493
	number of epsilon methods = 0
	number of primitive tasks = 774
	number of constants = 0
Tasks 774 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772411ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 103 will abort at 9223372036854772316
done
initial PDT has 20 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 14 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 6240
Size 6240 at 0/774
Size 4468 at 500/774
Size 3962
Size 3962 at 0/774
Size 524 at 500/774
Size 452
Size 452 at 0/774
Size 256 at 500/774
Size 256
Size 256 at 0/774
Size 232 at 500/774
Size 232
Size 232 at 0/774
Size 232 at 500/774
Size 232
Invariant time: 0.198
Number of invariants: 232
Invariant Clauses 3480
NUMBER OF CLAUSES 19553
NUMBER OF STATE CLAUSES 6772
NUMBER OF DECOMPOSITION CLAUSES 12781
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 34.63% 65.37% 0.0% 
NUMBER OF PATHS 14
Starting cryptominisat5.5
Setting starttime of solver to 1604511856402
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 34 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 20
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771262
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 6264
NUMBER OF CLAUSES 44567
NUMBER OF STATE CLAUSES 13085
NUMBER OF DECOMPOSITION CLAUSES 31482
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.36% 70.64% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat5.5
Setting starttime of solver to 1604511856975
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 52 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 42 leafs
SHOP LEAFS 30
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 101 will abort at 9223372036854770719
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 9976
NUMBER OF CLAUSES 69074
NUMBER OF STATE CLAUSES 20792
NUMBER OF DECOMPOSITION CLAUSES 48282
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 30.1% 69.9% 0.0% 
NUMBER OF PATHS 42
Starting cryptominisat5.5
Setting starttime of solver to 1604511857578
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 74 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 62 leafs
SHOP LEAFS 42
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854770161
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 14616
NUMBER OF CLAUSES 98043
NUMBER OF STATE CLAUSES 30235
NUMBER OF DECOMPOSITION CLAUSES 67808
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 30.84% 69.16% 0.0% 
NUMBER OF PATHS 62
Starting cryptominisat5.5
Setting starttime of solver to 1604511858243
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 100 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854769499
done
PDT has 86 leafs
SHOP LEAFS 56
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 20184
NUMBER OF CLAUSES 131474
NUMBER OF STATE CLAUSES 41414
NUMBER OF DECOMPOSITION CLAUSES 90060
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.5% 68.5% 0.0% 
NUMBER OF PATHS 86
Starting cryptominisat5.5
Setting starttime of solver to 1604511858969
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 130 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 114 leafs
SHOP LEAFS 72
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768737
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 26680
NUMBER OF CLAUSES 169367
NUMBER OF STATE CLAUSES 54329
NUMBER OF DECOMPOSITION CLAUSES 115038
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 32.08% 67.92% 0.0% 
NUMBER OF PATHS 114
Starting cryptominisat5.5
Setting starttime of solver to 1604511859785
Command exited with non-zero status 20
0.06 0.00

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... done
initial PDT has 164 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 101 will abort at 9223372036854767990
done
PDT has 146 leafs
SHOP LEAFS 90
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 34104
NUMBER OF CLAUSES 211722
NUMBER OF STATE CLAUSES 68980
NUMBER OF DECOMPOSITION CLAUSES 142742
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 32.58% 67.42% 0.0% 
NUMBER OF PATHS 146
Starting cryptominisat5.5
Setting starttime of solver to 1604511860558
Command exited with non-zero status 20
1.56 0.00

Time command gave the following runtime for the solver: 1560
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... done
initial PDT has 202 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 182 leafs
SHOP LEAFS 110
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854765602
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 42456
NUMBER OF CLAUSES 258539
NUMBER OF STATE CLAUSES 85367
NUMBER OF DECOMPOSITION CLAUSES 173172
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 33.02% 66.98% 0.0% 
NUMBER OF PATHS 182
Starting cryptominisat5.5
Setting starttime of solver to 1604511863072
Command exited with non-zero status 20
8.44 0.03

Time command gave the following runtime for the solver: 8470
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 12
Generating initial PDT ... done
initial PDT has 244 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 222 leafs
SHOP LEAFS 132
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854756280
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 51736
NUMBER OF CLAUSES 309818
NUMBER OF STATE CLAUSES 103490
NUMBER OF DECOMPOSITION CLAUSES 206328
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 33.4% 66.6% 0.0% 
NUMBER OF PATHS 222
Starting cryptominisat5.5
Setting starttime of solver to 1604511872370
Command exited with non-zero status 20
39.60 0.04

Time command gave the following runtime for the solver: 39640
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 13
Generating initial PDT ... done
initial PDT has 290 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854715758
done
PDT has 266 leafs
SHOP LEAFS 156
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 61944
NUMBER OF CLAUSES 365559
NUMBER OF STATE CLAUSES 123349
NUMBER OF DECOMPOSITION CLAUSES 242210
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 33.74% 66.26% 0.0% 
NUMBER OF PATHS 266
Starting cryptominisat5.5
Setting starttime of solver to 1604511912962
Command exited with non-zero status 10
1.58 0.01

Time command gave the following runtime for the solver: 1590
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^10_0;2;3;3;3;3;3;3;2;2,109 109 m2_do_check_floor
0;2;3;3;3;3;3;3;2;2 98 pathaction!10_0;2;3;3;3;3;3;3;2;2,437
Consider method^9_0;3;1;3;3;3;3;2;2,463 463 m3_do_check_floor
0;3;1;3;3;3;3;2;2 40 pathaction!9_0;3;1;3;3;3;3;2;2,442
Consider method^9_0;3;1;3;3;3;3;3;3,455 455 m10_do_throw_all
0;3;1;3;3;3;3;3;3 133 pathaction!9_0;3;1;3;3;3;3;3;3,474
Consider method^5_0;2;3;3;2,386 386 m3_do_check_floor
0;2;3;3;2 105 pathaction!5_0;2;3;3;2,430
Consider method^12_0;2;3;3;3;3;3;3;2;2;2;2,145 145 m1_do_check_floor
0;2;3;3;3;3;3;3;2;2;2;2 118 pathaction!12_0;2;3;3;3;3;3;3;2;2;2;2,437
Consider method^10_0;2;3;3;3;3;3;3;3;3,331 331 m6_do_take_all
0;2;3;3;3;3;3;3;3;3 90 pathaction!10_0;2;3;3;3;3;3;3;3;3,264
Consider method^6_0;3;1;3;2;2,387 387 m1_do_check_floor
0;3;1;3;2;2 179 pathaction!6_0;3;1;3;2;2,440
Consider method^9_0;2;3;3;3;3;3;3;3,7 7 m5_do_take_all
0;2;3;3;3;3;3;3;3 11 pathaction!9_0;2;3;3;3;3;3;3;3,270
Consider method^9_0;2;3;3;3;3;3;3;2,384 384 m2_do_check_floor
0;2;3;3;3;3;3;3;2 74 pathaction!9_0;2;3;3;3;3;3;3;2,437
Consider method^5_0;3;1;3;3,316 316 m9_do_throw_all
0;3;1;3;3 167 pathaction!5_0;3;1;3;3,475
Consider method^9_0;2;3;3;3;3;3;2;2,27 27 m3_do_check_floor
0;2;3;3;3;3;3;2;2 246 pathaction!9_0;2;3;3;3;3;3;2;2,432
Consider method^11_0;3;1;3;3;3;3;3;3;3;3,470 470 m8_do_throw_all
0;3;1;3;3;3;3;3;3;3;3 132 pathaction!11_0;3;1;3;3;3;3;3;3;3;3,470
Consider method^4_0;2;3;2,102 102 m3_do_check_floor
0;2;3;2 255 pathaction!4_0;2;3;2,433
Consider method^4_0;3;1;2,120 120 m2_do_check_floor
0;3;1;2 150 pathaction!4_0;3;1;2,438
Consider method^6_0;3;1;3;3;2,42 42 m3_do_check_floor
0;3;1;3;3;2 114 pathaction!6_0;3;1;3;3;2,429
Consider method^5_0;2;3;2;2,91 91 m2_do_check_floor
0;2;3;2;2 8 pathaction!5_0;2;3;2;2,433
Consider method^12_0;3;1;3;3;3;3;3;3;2;2;2,148 148 m1_do_check_floor
0;3;1;3;3;3;3;3;3;2;2;2 43 pathaction!12_0;3;1;3;3;3;3;3;3;2;2;2,436
Consider method^4_0;2;2;2,413 413 m1_do_check_floor
0;2;2;2 35 pathaction!4_0;2;2;2,434
Consider method^10_0;2;3;3;3;3;3;3;3;2,222 222 m3_do_check_floor
0;2;3;3;3;3;3;3;3;2 210 pathaction!10_0;2;3;3;3;3;3;3;3;2,431
Consider method^7_0;3;1;3;3;3;2,363 363 m2_do_check_floor
0;3;1;3;3;3;2 85 pathaction!7_0;3;1;3;3;3;2,441
Consider method^8_0;2;3;3;3;3;3;2,439 439 m2_do_check_floor
0;2;3;3;3;3;3;2 208 pathaction!8_0;2;3;3;3;3;3;2,432
Consider method^6_0;3;1;3;3;3,344 344 m10_do_throw_all
0;3;1;3;3;3 86 pathaction!6_0;3;1;3;3;3,464
Consider method^11_0;2;3;3;3;3;3;3;3;3;2,75 75 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;2 54 pathaction!11_0;2;3;3;3;3;3;3;3;3;2,443
Consider method^8_0;3;1;3;3;3;2;2,290 290 m1_do_check_floor
0;3;1;3;3;3;2;2 135 pathaction!8_0;3;1;3;3;3;2;2,441
Consider method^10_0;3;1;3;3;3;3;3;2;2,55 55 m1_do_check_floor
0;3;1;3;3;3;3;3;2;2 97 pathaction!10_0;3;1;3;3;3;3;3;2;2,439
Consider method^11_0;2;3;3;3;3;3;3;3;3;3,207 207 m4_do_take_all
0;2;3;3;3;3;3;3;3;3;3 187 pathaction!11_0;2;3;3;3;3;3;3;3;3;3,276
Consider method^10_0;3;1;3;3;3;3;3;3;3,398 398 m9_do_throw_all
0;3;1;3;3;3;3;3;3;3 10 pathaction!10_0;3;1;3;3;3;3;3;3;3,471
Consider method^10_0;3;1;3;3;3;3;3;3;2,81 81 m2_do_check_floor
0;3;1;3;3;3;3;3;3;2 162 pathaction!10_0;3;1;3;3;3;3;3;3;2,436
Consider method^3_0;2;2,128 128 m3_do_check_floor
0;2;2 224 pathaction!3_0;2;2,434
Consider method^6_0;2;3;3;3;2,287 287 m1_do_check_floor
0;2;3;3;3;2 176 pathaction!6_0;2;3;3;3;2,443
Consider method^8_0;3;1;3;3;3;3;3,350 350 m9_do_throw_all
0;3;1;3;3;3;3;3 106 pathaction!8_0;3;1;3;3;3;3;3,477
Consider method^8_0;2;3;3;3;3;3;3,241 241 m5_do_take_all
0;2;3;3;3;3;3;3 175 pathaction!8_0;2;3;3;3;3;3;3,265
Consider method^2_0;3,255 255 m7_do_start_throw_all
0;3 100 pathaction!2_0;3,415
Consider method^3_0;3;1,351 351 m9_do_throw_all
0;3;1 57 pathaction!3_0;3;1,478
Consider method^0_,494 494 __top_3
 198 pathaction!0_,827
Consider method^4_0;3;1;3,271 271 m9_do_throw_all
0;3;1;3 78 pathaction!4_0;3;1;3,473
Consider method^10_0;2;3;3;3;3;3;2;2;2,177 177 m3_do_check_floor
0;2;3;3;3;3;3;2;2;2 182 pathaction!10_0;2;3;3;3;3;3;2;2;2,432
Consider method^8_0;3;1;3;3;2;2;2,35 35 m1_do_check_floor
0;3;1;3;3;2;2;2 7 pathaction!8_0;3;1;3;3;2;2;2,429
Consider method^7_0;3;1;3;3;2;2,448 448 m2_do_check_floor
0;3;1;3;3;2;2 169 pathaction!7_0;3;1;3;3;2;2,429
Consider method^1_0,33 33 m0_do_problem
0 146 pathaction!1_0,414
Consider method^9_0;3;1;3;3;3;3;3;2,129 129 m2_do_check_floor
0;3;1;3;3;3;3;3;2 130 pathaction!9_0;3;1;3;3;3;3;3;2,439
Consider method^5_0;2;3;3;3,337 337 m6_do_take_all
0;2;3;3;3 170 pathaction!5_0;2;3;3;3,263
Consider method^10_0;3;1;3;3;3;3;2;2;2,417 417 m1_do_check_floor
0;3;1;3;3;3;3;2;2;2 172 pathaction!10_0;3;1;3;3;3;3;2;2;2,442
Consider method^11_0;3;1;3;3;3;3;3;3;2;2,65 65 m3_do_check_floor
0;3;1;3;3;3;3;3;3;2;2 245 pathaction!11_0;3;1;3;3;3;3;3;3;2;2,436
Consider method^4_0;2;3;3,44 44 m6_do_take_all
0;2;3;3 31 pathaction!4_0;2;3;3,266
Consider method^5_0;3;1;3;2,228 228 m2_do_check_floor
0;3;1;3;2 145 pathaction!5_0;3;1;3;2,440
Consider method^6_0;2;3;3;3;3,178 178 m5_do_take_all
0;2;3;3;3;3 205 pathaction!6_0;2;3;3;3;3,276
Consider method^12_0;2;3;3;3;3;3;3;3;3;2;2,287 287 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;2;2 63 pathaction!12_0;2;3;3;3;3;3;3;3;3;2;2,443
Consider method^11_0;2;3;3;3;3;3;3;2;2;2,395 395 m3_do_check_floor
0;2;3;3;3;3;3;3;2;2;2 4 pathaction!11_0;2;3;3;3;3;3;3;2;2;2,437
Consider method^12_0;3;1;3;3;3;3;3;3;3;2;2,471 471 m1_do_check_floor
0;3;1;3;3;3;3;3;3;3;2;2 148 pathaction!12_0;3;1;3;3;3;3;3;3;3;2;2,435
Consider method^7_0;2;3;3;3;3;2,59 59 m3_do_check_floor
0;2;3;3;3;3;2 81 pathaction!7_0;2;3;3;3;3;2,428
Consider method^8_0;2;3;3;3;3;2;2,254 254 m1_do_check_floor
0;2;3;3;3;3;2;2 240 pathaction!8_0;2;3;3;3;3;2;2,428
Consider method^11_0;2;3;3;3;3;3;3;3;2;2,139 139 m1_do_check_floor
0;2;3;3;3;3;3;3;3;2;2 45 pathaction!11_0;2;3;3;3;3;3;3;3;2;2,431
Consider method^3_0;2;3,247 247 m5_do_take_all
0;2;3 181 pathaction!3_0;2;3,267
Consider method^5_0;3;1;2;2,447 447 m1_do_check_floor
0;3;1;2;2 241 pathaction!5_0;3;1;2;2,438
Consider method^6_0;2;3;2;2;2,407 407 m1_do_check_floor
0;2;3;2;2;2 6 pathaction!6_0;2;3;2;2;2,433
Consider method^7_0;3;1;3;3;3;3,260 260 m9_do_throw_all
0;3;1;3;3;3;3 80 pathaction!7_0;3;1;3;3;3;3,476
Consider method^2_0;2,433 433 m5_do_take_all
0;2 186 pathaction!2_0;2,277
Consider method^2_0;1,426 426 m1_do_check_floor
0;1 47 pathaction!2_0;1,444
Consider method^6_0;2;3;3;2;2,418 418 m1_do_check_floor
0;2;3;3;2;2 129 pathaction!6_0;2;3;3;2;2,430
Consider method^8_0;3;1;3;3;3;3;2,23 23 m2_do_check_floor
0;3;1;3;3;3;3;2 14 pathaction!8_0;3;1;3;3;3;3;2,442
Consider method^11_0;3;1;3;3;3;3;3;3;3;2,56 56 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;2 204 pathaction!11_0;3;1;3;3;3;3;3;3;3;2,435
Consider method^7_0;2;3;3;3;3;3,39 39 m6_do_take_all
0;2;3;3;3;3;3 134 pathaction!7_0;2;3;3;3;3;3,261
Consider method^11_0;2;3;3;3;3;3;2;2;2;2,366 366 m1_do_check_floor
0;2;3;3;3;3;3;2;2;2;2 94 pathaction!11_0;2;3;3;3;3;3;2;2;2;2,432


CHECKING primitive solution of length 124 ...
true 92 __method_precondition_m0_do_problem_0_precondition[f0;]
true 194 __method_precondition_m1_do_check_floor_1_precondition[f0;]
true 127 nop[;]
true 34 __method_precondition_m5_do_take_all_5_precondition[f0,f1,p3;]
true 225 up[f0,f1;]
true 136 __method_precondition_m3_do_check_floor_3_precondition[f1,p3;]
true 17 board[f1,p3;]
true 254 __method_precondition_m1_do_check_floor_1_precondition[f1;]
true 157 nop[;]
true 20 __method_precondition_m5_do_take_all_5_precondition[f1,f22,p10;]
true 143 up[f1,f22;]
true 73 __method_precondition_m3_do_check_floor_3_precondition[f22,p10;]
true 243 board[f22,p10;]
true 126 __method_precondition_m2_do_check_floor_2_precondition[f22,p3;]
true 218 depart[f22,p3;]
true 232 __method_precondition_m1_do_check_floor_1_precondition[f22;]
true 233 nop[;]
true 196 __method_precondition_m6_do_take_all_6_precondition[f22,f12,p5;]
true 13 down[f22,f12;]
true 220 __method_precondition_m3_do_check_floor_3_precondition[f12,p5;]
true 91 board[f12,p5;]
true 171 __method_precondition_m1_do_check_floor_1_precondition[f12;]
true 248 nop[;]
true 38 __method_precondition_m6_do_take_all_6_precondition[f12,f6,p9;]
true 197 down[f12,f6;]
true 82 __method_precondition_m1_do_check_floor_1_precondition[f6;]
true 251 nop[;]
true 125 __method_precondition_m5_do_take_all_5_precondition[f6,f8,p0;]
true 226 up[f6,f8;]
true 71 __method_precondition_m3_do_check_floor_3_precondition[f8,p0;]
true 44 board[f8,p0;]
true 53 __method_precondition_m1_do_check_floor_1_precondition[f8;]
true 137 nop[;]
true 37 __method_precondition_m6_do_take_all_6_precondition[f8,f4,p11;]
true 27 down[f8,f4;]
true 99 __method_precondition_m2_do_check_floor_2_precondition[f4,p5;]
true 59 depart[f4,p5;]
true 227 __method_precondition_m3_do_check_floor_3_precondition[f4,p8;]
true 61 board[f4,p8;]
true 212 __method_precondition_m3_do_check_floor_3_precondition[f4,p11;]
true 122 board[f4,p11;]
true 189 __method_precondition_m1_do_check_floor_1_precondition[f4;]
true 242 nop[;]
true 124 __method_precondition_m5_do_take_all_5_precondition[f4,f5,p6;]
true 18 up[f4,f5;]
true 64 __method_precondition_m2_do_check_floor_2_precondition[f5,p10;]
true 221 depart[f5,p10;]
true 30 __method_precondition_m2_do_check_floor_2_precondition[f5,p0;]
true 25 depart[f5,p0;]
true 101 __method_precondition_m3_do_check_floor_3_precondition[f5,p6;]
true 68 board[f5,p6;]
true 79 __method_precondition_m1_do_check_floor_1_precondition[f5;]
true 222 nop[;]
true 36 __method_precondition_m5_do_take_all_5_precondition[f5,f16,p2;]
true 207 up[f5,f16;]
true 228 __method_precondition_m3_do_check_floor_3_precondition[f16,p2;]
true 142 board[f16,p2;]
true 67 __method_precondition_m1_do_check_floor_1_precondition[f16;]
true 56 nop[;]
true 219 __method_precondition_m6_do_take_all_6_precondition[f16,f6,p9;]
true 213 down[f16,f6;]
true 108 __method_precondition_m3_do_check_floor_3_precondition[f6,p9;]
true 65 board[f6,p9;]
true 191 __method_precondition_m1_do_check_floor_1_precondition[f6;]
true 131 nop[;]
true 9 __method_precondition_m4_do_take_all_4_precondition[f6;]
true 119 nop[;]
true 48 __method_precondition_m7_do_start_throw_all_7_precondition[f6;]
true 184 __method_precondition_m9_do_throw_all_9_precondition[f6,f11,p6;]
true 244 up[f6,f11;]
true 128 __method_precondition_m2_do_check_floor_2_precondition[f11,p6;]
true 237 depart[f11,p6;]
true 88 __method_precondition_m1_do_check_floor_1_precondition[f11;]
true 70 nop[;]
true 202 __method_precondition_m9_do_throw_all_9_precondition[f11,f15,p9;]
true 23 up[f11,f15;]
true 110 __method_precondition_m2_do_check_floor_2_precondition[f15,p9;]
true 253 depart[f15,p9;]
true 147 __method_precondition_m1_do_check_floor_1_precondition[f15;]
true 5 nop[;]
true 177 __method_precondition_m9_do_throw_all_9_precondition[f15,f23,p11;]
true 156 up[f15,f23;]
true 256 __method_precondition_m3_do_check_floor_3_precondition[f23,p1;]
true 32 board[f23,p1;]
true 49 __method_precondition_m2_do_check_floor_2_precondition[f23,p11;]
true 160 depart[f23,p11;]
true 22 __method_precondition_m1_do_check_floor_1_precondition[f23;]
true 238 nop[;]
true 235 __method_precondition_m10_do_throw_all_10_precondition[f23,f7,p2;]
true 19 down[f23,f7;]
true 247 __method_precondition_m2_do_check_floor_2_precondition[f7,p2;]
true 138 depart[f7,p2;]
true 258 __method_precondition_m1_do_check_floor_1_precondition[f7;]
true 164 nop[;]
true 84 __method_precondition_m9_do_throw_all_9_precondition[f7,f18,p8;]
true 77 up[f7,f18;]
true 75 __method_precondition_m2_do_check_floor_2_precondition[f18,p8;]
true 180 depart[f18,p8;]
true 24 __method_precondition_m3_do_check_floor_3_precondition[f18,p7;]
true 161 board[f18,p7;]
true 15 __method_precondition_m1_do_check_floor_1_precondition[f18;]
true 29 nop[;]
true 66 __method_precondition_m9_do_throw_all_9_precondition[f18,f20,p1;]
true 112 up[f18,f20;]
true 21 __method_precondition_m2_do_check_floor_2_precondition[f20,p1;]
true 236 depart[f20,p1;]
true 214 __method_precondition_m1_do_check_floor_1_precondition[f20;]
true 154 nop[;]
true 102 __method_precondition_m10_do_throw_all_10_precondition[f20,f13,p7;]
true 229 down[f20,f13;]
true 230 __method_precondition_m2_do_check_floor_2_precondition[f13,p7;]
true 104 depart[f13,p7;]
true 158 __method_precondition_m3_do_check_floor_3_precondition[f13,p4;]
true 153 board[f13,p4;]
true 62 __method_precondition_m1_do_check_floor_1_precondition[f13;]
true 26 nop[;]
true 168 __method_precondition_m9_do_throw_all_9_precondition[f13,f19,p4;]
true 51 up[f13,f19;]
true 211 __method_precondition_m2_do_check_floor_2_precondition[f19,p4;]
true 144 depart[f19,p4;]
true 200 __method_precondition_m1_do_check_floor_1_precondition[f19;]
true 140 nop[;]
true 1 __method_precondition_m8_do_throw_all_8_precondition[f19;]
true 50 nop[;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 110
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 220
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 330
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 4
ICAPS: 440
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 5
ICAPS: 550
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 6
ICAPS: 660
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 7
ICAPS: 770
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 8
ICAPS: 880
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
LEN 9
ICAPS: 990
TSTG: 2147483647
Method: 2147483647
DP max: 10
Taking minimum: 10
LEN 10
ICAPS: 1100
TSTG: 2147483647
Method: 2147483647
DP max: 11
Taking minimum: 11
LEN 11
ICAPS: 1210
TSTG: 2147483647
Method: 2147483647
DP max: 12
Taking minimum: 12
LEN 12
ICAPS: 1320
TSTG: 2147483647
Method: 2147483647
DP max: 13
Taking minimum: 13
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 61
  lower bound = 11

Running SAT search with cost bound = 36
==================================================
  upper bound = 61
  lower bound = 11
LEN 36
ICAPS: 3960
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854712473
DP max: 37
Taking minimum: 37
Generating initial PDT ... done
initial PDT has 2594 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 2522 leafs
SHOP LEAFS 1332
Assignment implications
Generating clauses representing decomposition ... done
At most K: 1932ms input: 29079 K = 36
Number of actions Formula: 2069ms for 2122730 clauses
Layers: 12 paths 2522
Layer 1 g 0 = 0 - 1 / 0 clauses 3184026
Layer 1 g 1 = 2 - 3 / 2 clauses 3184026
Layer 1 g 2 = 4 - 5 / 4 clauses 3184026
Layer 1 g 3 = 6 - 7 / 6 clauses 3184026
Layer 1 g 4 = 8 - 9 / 8 clauses 3184026
Layer 1 g 5 = 10 - 11 / 10 clauses 3184026
Layer 1 g 6 = 12 - 13 / 12 clauses 3184026
Layer 1 g 7 = 14 - 15 / 14 clauses 3184026
Layer 1 g 8 = 16 - 17 / 16 clauses 3184026
Layer 1 g 9 = 18 - 19 / 18 clauses 3184026
Layer 1 g 10 = 20 - 21 / 20 clauses 3184026
Layer 1 g 11 = 22 - 23 / 22Still waiting ... running for 79089 will abort at 9223372036854712473
 clauses 3184026
Layer 1 g 12 = 24 - 25 / 24 clauses 3184026
Layer 1 g 13 = 26 - 27 / 26 clauses 3184026
Layer 1 g 14 = 28 - 29 / 28 clauses 3184026
Layer 1 g 15 = 30 - 31 / 30 clauses 3184026
Layer 1 g 16 = 32 - 33 / 32 clauses 3184026
Layer 1 g 17 = 34 - 35 / 34 clauses 3184026
Layer 1 g 18 = 36 - 37 / 36 clauses 3184026
Layer 1 g 19 = 38 - 39 / 38 clauses 3184026
Layer 1 g 20 = 40 - 41 / 40 clauses 3184026
Layer 1 g 21 = 42 - 43 / 42
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 195.025 MEMPEAK_KBS 8003077.12
