PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p09.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p09.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p09.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 29
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 29
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 29
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 29
Grounded planning graph ... done in 404ms.
	Number of Grounded Actions 580
	Number of Grounded Literals 219
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 29
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 29
Grounding ... done.
	number of abstract tasks = 224
	number of tasks = 658
	number of decomposition methods = 505
	number of predicates = 228
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 224
	number of tasks = 658
	number of decomposition methods = 505
	number of predicates = 196
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 73ms.
	Number of Grounded Actions 434
	Number of Grounded Literals 196
	number of abstract tasks = 224
	number of tasks = 658
	number of decomposition methods = 505
	number of predicates = 196
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 224
	number of tasks = 658
	number of decomposition methods = 505
	number of predicates = 196
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 225
	number of tasks = 659
	number of decomposition methods = 506
	number of predicates = 196
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 225
	number of tasks = 659
	number of decomposition methods = 506
	number of predicates = 196
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 66ms.
	Number of Grounded Actions 434
	Number of Grounded Literals 196
	number of abstract tasks = 225
	number of tasks = 659
	number of decomposition methods = 506
	number of predicates = 196
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 225
	number of tasks = 659
	number of decomposition methods = 506
	number of predicates = 196
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 225
	number of tasks = 659
	number of decomposition methods = 506
	number of predicates = 196
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 225
	number of tasks = 659
	number of decomposition methods = 506
	number of predicates = 196
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 225
	number of tasks = 659
	number of decomposition methods = 506
	number of predicates = 196
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 271
	number of epsilon methods = 0
	number of primitive tasks = 434
	number of constants = 0
Tasks 434 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772457ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854772364
done
initial PDT has 39 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 26
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 57330
Size 57330 at 0/434
Size 39462
Size 39462 at 0/434
Size 20703
Size 20703 at 0/434
Size 7262
Size 7262 at 0/434
Size 2885
Size 2885 at 0/434
Size 2335
Size 2335 at 0/434
Size 2259
Size 2259 at 0/434
Size 2218
Size 2218 at 0/434
Size 2218
Invariant time: 0.541
Number of invariants: 2218
Invariant Clauses 59886
NUMBER OF CLAUSES 70501
NUMBER OF STATE CLAUSES 70287
NUMBER OF DECOMPOSITION CLAUSES 214
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.7% 0.3% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat5.5
Setting starttime of solver to 1604508467199
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770859
done
initial PDT has 191 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 104 leafs
SHOP LEAFS 65
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 232890
NUMBER OF CLAUSES 280164
NUMBER OF STATE CLAUSES 275366
NUMBER OF DECOMPOSITION CLAUSES 4798
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.29% 1.71% 0.0% 
NUMBER OF PATHS 104
Starting cryptominisat5.5
Setting starttime of solver to 1604508468340
Command exited with non-zero status 20
0.07 0.00

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 390 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854769796
done
PDT has 250 leafs
SHOP LEAFS 137
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 556718
NUMBER OF CLAUSES 674474
NUMBER OF STATE CLAUSES 659074
NUMBER OF DECOMPOSITION CLAUSES 15400
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.72% 2.2800000000000002% 0.0% 
NUMBER OF PATHS 250
Starting cryptominisat5.5
Setting starttime of solver to 1604508469666
Command exited with non-zero status 20
0.15 0.01

Time command gave the following runtime for the solver: 160
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 611 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854768226
done
PDT has 535 leafs
SHOP LEAFS 290
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1188848
NUMBER OF CLAUSES 1442556
NUMBER OF STATE CLAUSES 1408029
NUMBER OF DECOMPOSITION CLAUSES 34527
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.61% 2.39% 0.0% 
NUMBER OF PATHS 535
Starting cryptominisat5.5
Setting starttime of solver to 1604508472229
Command exited with non-zero status 20
0.36 0.02

Time command gave the following runtime for the solver: 380
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 793 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 111 will abort at 9223372036854765404
done
PDT has 725 leafs
SHOP LEAFS 366
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1610268
NUMBER OF CLAUSES 1953707
NUMBER OF STATE CLAUSES 1907837
NUMBER OF DECOMPOSITION CLAUSES 45870
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.65% 2.35% 0.0% 
NUMBER OF PATHS 725
Starting cryptominisat5.5
Setting starttime of solver to 1604508475752
Command exited with non-zero status 20
0.45 0.03

Time command gave the following runtime for the solver: 480
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 955 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854761675
done
PDT has 895 leafs
SHOP LEAFS 434
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1987328
NUMBER OF CLAUSES 2410431
NUMBER OF STATE CLAUSES 2354841
NUMBER OF DECOMPOSITION CLAUSES 55590
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.69% 2.31% 0.0% 
NUMBER OF PATHS 895
Starting cryptominisat5.5
Setting starttime of solver to 1604508479962
Command exited with non-zero status 20
0.54 0.03

Time command gave the following runtime for the solver: 570
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 1099 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854757384
done
PDT has 1045 leafs
SHOP LEAFS 494
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2320028
NUMBER OF CLAUSES 2813797
NUMBER OF STATE CLAUSES 2749383
NUMBER OF DECOMPOSITION CLAUSES 64414
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.71000000000001% 2.29% 0.0% 
NUMBER OF PATHS 1045
Starting cryptominisat5.5
Setting starttime of solver to 1604508485161
Command exited with non-zero status 20
0.68 0.03

Time command gave the following runtime for the solver: 710
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 1226 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854751959
done
PDT has 1180 leafs
SHOP LEAFS 548
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2619458
NUMBER OF CLAUSES 3177199
NUMBER OF STATE CLAUSES 3104545
NUMBER OF DECOMPOSITION CLAUSES 72654
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.71000000000001% 2.29% 0.0% 
NUMBER OF PATHS 1180
Starting cryptominisat5.5
Setting starttime of solver to 1604508490831
Command exited with non-zero status 10
1.28 0.07

Time command gave the following runtime for the solver: 1350
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_10,49 49 m2_do_put_on
10 227 pathaction!1_10,289
Consider method^4_3;2;4;1,159 159 m7_do_get_truck
3;2;4;1 0 pathaction!4_3;2;4;1,652
Consider method^1_12,118 118 m2_do_put_on
12 10 pathaction!1_12,291
Consider method^5_0;2;4;2;1,255 255 m5_do_clear
0;2;4;2;1 246 pathaction!5_0;2;4;2;1,512
Consider method^8_0;2;4;2;1;1;1;1,246 246 m4_do_clear
0;2;4;2;1;1;1;1 151 pathaction!8_0;2;4;2;1;1;1;1,514
Consider method^4_3;4;1;1,464 464 m5_do_clear
3;4;1;1 282 pathaction!4_3;4;1;1,520
Consider method^2_4;2,134 134 m4_do_clear
4;2 29 pathaction!2_4;2,525
Consider method^2_4;1,419 419 m6_do_get_truck
4;1 225 pathaction!2_4;1,652
Consider method^1_8,423 423 m2_do_put_on
8 193 pathaction!1_8,296
Consider method^4_0;4;1;1,199 199 m5_do_clear
0;4;1;1 213 pathaction!4_0;4;1;1,524
Consider method^2_11;2,39 39 m5_do_clear
11;2 245 pathaction!2_11;2,511
Consider method^2_2;1,71 71 m5_do_clear
2;1 292 pathaction!2_2;1,510
Consider method^3_7;2;3,30 30 m6_do_get_truck
7;2;3 149 pathaction!3_7;2;3,656
Consider method^4_3;2;4;2,134 134 m4_do_clear
3;2;4;2 52 pathaction!4_3;2;4;2,525
Consider method^1_9,380 380 m2_do_put_on
9 110 pathaction!1_9,298
Consider method^5_0;2;4;2;3,131 131 m6_do_get_truck
0;2;4;2;3 109 pathaction!5_0;2;4;2;3,655
Consider method^3_0;2;4,198 198 m10_do_load_truck
0;2;4 264 pathaction!3_0;2;4,498
Consider method^2_10;2,501 501 m4_do_clear
10;2 21 pathaction!2_10;2,512
Consider method^2_7;2,110 110 m5_do_clear
7;2 126 pathaction!2_7;2,532
Consider method^2_11;1,416 416 m7_do_get_truck
11;1 43 pathaction!2_11;1,653
Consider method^2_9;2,33 33 m4_do_clear
9;2 137 pathaction!2_9;2,535
Consider method^5_0;4;1;1;3,9 9 m7_do_get_truck
0;4;1;1;3 26 pathaction!5_0;4;1;1;3,657
Consider method^1_7,335 335 m2_do_put_on
7 285 pathaction!1_7,297
Consider method^3_11;2;1,269 269 m4_do_clear
11;2;1 294 pathaction!3_11;2;1,541
Consider method^1_4,44 44 m2_do_put_on
4 279 pathaction!1_4,295
Consider method^3_2;1;1,475 475 m4_do_clear
2;1;1 84 pathaction!3_2;1;1,522
Consider method^3_3;2;4,25 25 m10_do_load_truck
3;2;4 147 pathaction!3_3;2;4,466
Consider method^1_1,76 76 m3_do_put_on
1 226 pathaction!1_1,292
Consider method^4_1;2;4;2,212 212 m4_do_clear
1;2;4;2 56 pathaction!4_1;2;4;2,513
Consider method^6_0;2;4;2;1;1,84 84 m5_do_clear
0;2;4;2;1;1 242 pathaction!6_0;2;4;2;1;1,517
Consider method^5_3;4;1;1;1,308 308 m4_do_clear
3;4;1;1;1 289 pathaction!5_3;4;1;1;1,531
Consider method^1_5,166 166 m2_do_put_on
5 58 pathaction!1_5,290
Consider method^2_6;2,211 211 m4_do_clear
6;2 248 pathaction!2_6;2,538
Consider method^4_3;4;1;3,30 30 m6_do_get_truck
3;4;1;3 49 pathaction!4_3;4;1;3,656
Consider method^7_0;2;4;2;1;1;1,457 457 m5_do_clear
0;2;4;2;1;1;1 131 pathaction!7_0;2;4;2;1;1;1,526
Consider method^2_12;1,395 395 m6_do_get_truck
12;1 267 pathaction!2_12;1,653
Consider method^5_3;4;1;1;3,210 210 m7_do_get_truck
3;4;1;1;3 208 pathaction!5_3;4;1;1;3,656
Consider method^2_8;1,419 419 m6_do_get_truck
8;1 168 pathaction!2_8;1,652
Consider method^2_6;1,30 30 m6_do_get_truck
6;1 86 pathaction!2_6;1,656
Consider method^2_5;1,30 30 m6_do_get_truck
5;1 257 pathaction!2_5;1,656
Consider method^1_3,135 135 m3_do_put_on
3 204 pathaction!1_3,287
Consider method^4_1;2;4;1,489 489 m7_do_get_truck
1;2;4;1 232 pathaction!4_1;2;4;1,652
Consider method^3_11;2;3,9 9 m7_do_get_truck
11;2;3 7 pathaction!3_11;2;3,657
Consider method^8_0;2;4;2;1;1;1;3,131 131 m6_do_get_truck
0;2;4;2;1;1;1;3 66 pathaction!8_0;2;4;2;1;1;1;3,655
Consider method^3_3;4;1,94 94 m5_do_clear
3;4;1 238 pathaction!3_3;4;1,527
Consider method^1_6,364 364 m2_do_put_on
6 28 pathaction!1_6,293
Consider method^2_2;3,384 384 m9_do_lift_crate
2;3 150 pathaction!2_2;3,272
Consider method^2_3;4,330 330 m11_do_unload_truck
3;4 180 pathaction!2_3;4,79
Consider method^2_8;2,174 174 m4_do_clear
8;2 198 pathaction!2_8;2,537
Consider method^1_2,481 481 m1_do_put_on
2 81 pathaction!1_2,288
Consider method^2_5;2,42 42 m4_do_clear
5;2 162 pathaction!2_5;2,523
Consider method^2_12;2,487 487 m4_do_clear
12;2 207 pathaction!2_12;2,534
Consider method^3_1;4;1,209 209 m4_do_clear
1;4;1 280 pathaction!3_1;4;1,521
Consider method^2_9;1,158 158 m7_do_get_truck
9;1 256 pathaction!2_9;1,655
Consider method^5_0;4;1;1;1,223 223 m4_do_clear
0;4;1;1;1 103 pathaction!5_0;4;1;1;1,540
Consider method^0_,505 505 __top_1
 95 pathaction!0_,658
Consider method^2_7;1,419 419 m6_do_get_truck
7;1 141 pathaction!2_7;1,652
Consider method^2_2;2,237 237 m4_do_clear
2;2 55 pathaction!2_2;2,529
Consider method^4_0;4;1;3,395 395 m6_do_get_truck
0;4;1;3 165 pathaction!4_0;4;1;3,653
Consider method^2_0;2,386 386 _m3_do_put_on_2
0;2 85 pathaction!2_0;2,552
Consider method^3_2;1;3,452 452 m7_do_get_truck
2;1;3 71 pathaction!3_2;1;3,655
Consider method^7_0;2;4;2;1;1;3,219 219 m6_do_get_truck
0;2;4;2;1;1;3 188 pathaction!7_0;2;4;2;1;1;3,654
Consider method^2_1;4,273 273 m11_do_unload_truck
1;4 38 pathaction!2_1;4,78
Consider method^3_7;2;1,287 287 m4_do_clear
7;2;1 187 pathaction!3_7;2;1,530
Consider method^3_0;4;1,43 43 m5_do_clear
0;4;1 211 pathaction!3_0;4;1,536
Consider method^1_0,140 140 m3_do_put_on
0 48 pathaction!1_0,286
Consider method^4_0;2;4;2,195 195 m5_do_clear
0;2;4;2 287 pathaction!4_0;2;4;2,533
Consider method^2_1;2,144 144 _m3_do_put_on_2
1;2 128 pathaction!2_1;2,566
Consider method^2_3;2,236 236 _m3_do_put_on_2
3;2 136 pathaction!2_3;2,553
Consider method^2_0;4,391 391 m11_do_unload_truck
0;4 106 pathaction!2_0;4,80
Consider method^4_0;2;4;1,219 219 m6_do_get_truck
0;2;4;1 177 pathaction!4_0;2;4;1,654
Consider method^2_10;1,394 394 m7_do_get_truck
10;1 218 pathaction!2_10;1,654
Consider method^1_11,68 68 m2_do_put_on
11 286 pathaction!1_11,294
Consider method^6_0;2;4;2;1;3,131 131 m6_do_get_truck
0;2;4;2;1;3 176 pathaction!6_0;2;4;2;1;3,655
Consider method^3_1;2;4,201 201 m10_do_load_truck
1;2;4 261 pathaction!3_1;2;4,487


CHECKING primitive solution of length 165 ...
true 215 __method_precondition_m10_do_load_truck_10_precondition[crate3,distributor0,pallet1,hoist1;]
true 16 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor0;]
true 173 nop[;]
true 6 __method_precondition_m5_do_clear_5_precondition[crate3,crate6,distributor0,hoist1;]
true 199 __method_precondition_m5_do_clear_5_precondition[crate6,crate7,distributor0,hoist1;]
true 290 __method_precondition_m5_do_clear_5_precondition[crate7,crate9,distributor0,hoist1;]
true 160 __method_precondition_m5_do_clear_5_precondition[crate9,crate14,distributor0,hoist1;]
true 19 __method_precondition_m4_do_clear_4_precondition[crate14,distributor0;]
true 196 nop[;]
true 104 Lift[hoist1,crate14,crate9,distributor0;]
true 87 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 93 nop[;]
true 102 Load[hoist1,crate14,truck1,distributor0;]
true 266 Lift[hoist1,crate9,crate7,distributor0;]
true 54 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor0;]
true 2 nop[;]
true 134 Load[hoist1,crate9,truck0,distributor0;]
true 202 Lift[hoist1,crate7,crate6,distributor0;]
true 145 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 78 nop[;]
true 260 Load[hoist1,crate7,truck1,distributor0;]
true 241 Lift[hoist1,crate6,crate3,distributor0;]
true 186 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 98 nop[;]
true 214 Load[hoist1,crate6,truck1,distributor0;]
true 194 Lift[hoist1,crate3,pallet1,distributor0;]
true 249 Load[hoist1,crate3,truck0,distributor0;]
true 250 Drive[truck0,distributor0,depot0;]
true 166 __method_precondition_m11_do_unload_truck_11_precondition[hoist0,crate3,truck0,pallet0,depot0;]
true 275 __method_precondition_m5_do_clear_5_precondition[pallet0,crate1,depot0,hoist0;]
true 22 __method_precondition_m5_do_clear_5_precondition[crate1,crate2,depot0,hoist0;]
true 183 __method_precondition_m4_do_clear_4_precondition[crate2,depot0;]
true 233 nop[;]
true 50 Lift[hoist0,crate2,crate1,depot0;]
true 9 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot0;]
true 224 Drive[truck1,distributor0,depot0;]
true 152 Load[hoist0,crate2,truck1,depot0;]
true 32 Lift[hoist0,crate1,pallet0,depot0;]
true 255 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 283 nop[;]
true 127 Load[hoist0,crate1,truck0,depot0;]
true 18 Unload[hoist0,crate3,truck0,depot0;]
true 234 Drop[hoist0,crate3,pallet0,depot0;]
true 161 __method_precondition_m10_do_load_truck_10_precondition[crate13,distributor1,crate4,hoist2;]
true 192 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 212 Drive[truck1,depot0,distributor1;]
true 153 __method_precondition_m4_do_clear_4_precondition[crate13,distributor1;]
true 146 nop[;]
true 277 Lift[hoist2,crate13,crate4,distributor1;]
true 88 Load[hoist2,crate13,truck1,distributor1;]
true 80 Drive[truck1,distributor1,depot0;]
true 35 __method_precondition_m11_do_unload_truck_11_precondition[hoist0,crate13,truck1,crate3,depot0;]
true 276 __method_precondition_m4_do_clear_4_precondition[crate3,depot0;]
true 258 nop[;]
true 111 Unload[hoist0,crate13,truck1,depot0;]
true 230 Drop[hoist0,crate13,crate3,depot0;]
true 185 __method_precondition_m1_do_put_on_1_precondition[crate11,distributor0;]
true 178 __method_precondition_m5_do_clear_5_precondition[crate11,crate12,distributor0,hoist1;]
true 67 __method_precondition_m4_do_clear_4_precondition[crate12,distributor0;]
true 31 nop[;]
true 120 Lift[hoist1,crate12,crate11,distributor0;]
true 90 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 125 Drive[truck1,depot0,distributor0;]
true 25 Load[hoist1,crate12,truck1,distributor0;]
true 253 __method_precondition_m4_do_clear_4_precondition[pallet1,distributor0;]
true 263 nop[;]
true 270 __method_precondition_m9_do_lift_crate_9_precondition[crate11,pallet4,distributor0,hoist1;]
true 251 Lift[hoist1,crate11,pallet4,distributor0;]
true 1 Drop[hoist1,crate11,pallet1,distributor0;]
true 82 __method_precondition_m10_do_load_truck_10_precondition[crate10,distributor1,crate5,hoist2;]
true 73 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 148 Drive[truck1,distributor0,distributor1;]
true 122 __method_precondition_m4_do_clear_4_precondition[crate10,distributor1;]
true 45 nop[;]
true 236 Lift[hoist2,crate10,crate5,distributor1;]
true 36 Load[hoist2,crate10,truck1,distributor1;]
true 223 Drive[truck1,distributor1,distributor1;]
true 220 __method_precondition_m11_do_unload_truck_11_precondition[hoist2,crate10,truck1,pallet2,distributor1;]
true 41 __method_precondition_m5_do_clear_5_precondition[pallet2,crate0,distributor1,hoist2;]
true 108 __method_precondition_m5_do_clear_5_precondition[crate0,crate4,distributor1,hoist2;]
true 30 __method_precondition_m4_do_clear_4_precondition[crate4,distributor1;]
true 42 nop[;]
true 235 Lift[hoist2,crate4,crate0,distributor1;]
true 123 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 44 Drive[truck0,depot0,distributor1;]
true 20 Load[hoist2,crate4,truck0,distributor1;]
true 79 Lift[hoist2,crate0,pallet2,distributor1;]
true 139 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 269 nop[;]
true 163 Load[hoist2,crate0,truck0,distributor1;]
true 72 Unload[hoist2,crate10,truck1,distributor1;]
true 107 Drop[hoist2,crate10,pallet2,distributor1;]
true 76 __method_precondition_m2_do_put_on_2_precondition[crate2,truck1;]
true 91 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 273 nop[;]
true 75 __method_precondition_m4_do_clear_4_precondition[crate10,distributor1;]
true 119 nop[;]
true 51 Unload[hoist2,crate2,truck1,distributor1;]
true 11 Drop[hoist2,crate2,crate10,distributor1;]
true 57 __method_precondition_m2_do_put_on_2_precondition[crate1,truck0;]
true 13 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 100 nop[;]
true 278 __method_precondition_m4_do_clear_4_precondition[crate2,distributor1;]
true 60 nop[;]
true 14 Unload[hoist2,crate1,truck0,distributor1;]
true 179 Drop[hoist2,crate1,crate2,distributor1;]
true 47 __method_precondition_m2_do_put_on_2_precondition[crate9,truck0;]
true 132 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 121 nop[;]
true 291 __method_precondition_m4_do_clear_4_precondition[crate1,distributor1;]
true 117 nop[;]
true 189 Unload[hoist2,crate9,truck0,distributor1;]
true 228 Drop[hoist2,crate9,crate1,distributor1;]
true 27 __method_precondition_m2_do_put_on_2_precondition[crate14,truck1;]
true 69 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 219 nop[;]
true 170 __method_precondition_m5_do_clear_5_precondition[pallet3,crate5,distributor1,hoist2;]
true 155 __method_precondition_m4_do_clear_4_precondition[crate5,distributor1;]
true 284 nop[;]
true 4 Lift[hoist2,crate5,pallet3,distributor1;]
true 46 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 138 nop[;]
true 97 Load[hoist2,crate5,truck0,distributor1;]
true 23 Unload[hoist2,crate14,truck1,distributor1;]
true 142 Drop[hoist2,crate14,pallet3,distributor1;]
true 182 __method_precondition_m2_do_put_on_2_precondition[crate12,truck1;]
true 116 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 12 nop[;]
true 191 __method_precondition_m4_do_clear_4_precondition[crate14,distributor1;]
true 243 nop[;]
true 197 Unload[hoist2,crate12,truck1,distributor1;]
true 70 Drop[hoist2,crate12,crate14,distributor1;]
true 205 __method_precondition_m2_do_put_on_2_precondition[crate6,truck1;]
true 37 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 181 Drive[truck1,distributor1,distributor0;]
true 159 __method_precondition_m4_do_clear_4_precondition[pallet4,distributor0;]
true 143 nop[;]
true 99 Unload[hoist1,crate6,truck1,distributor0;]
true 140 Drop[hoist1,crate6,pallet4,distributor0;]
true 221 __method_precondition_m2_do_put_on_2_precondition[crate4,truck0;]
true 124 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor0;]
true 272 Drive[truck0,distributor1,distributor0;]
true 64 __method_precondition_m4_do_clear_4_precondition[crate6,distributor0;]
true 281 nop[;]
true 65 Unload[hoist1,crate4,truck0,distributor0;]
true 216 Drop[hoist1,crate4,crate6,distributor0;]
true 157 __method_precondition_m2_do_put_on_2_precondition[crate5,truck0;]
true 5 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot0;]
true 112 Drive[truck0,distributor0,depot0;]
true 154 __method_precondition_m5_do_clear_5_precondition[pallet5,crate8,depot0,hoist0;]
true 135 __method_precondition_m4_do_clear_4_precondition[crate8,depot0;]
true 59 nop[;]
true 63 Lift[hoist0,crate8,pallet5,depot0;]
true 167 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot0;]
true 174 Drive[truck1,distributor0,depot0;]
true 210 Load[hoist0,crate8,truck1,depot0;]
true 203 Unload[hoist0,crate5,truck0,depot0;]
true 171 Drop[hoist0,crate5,pallet5,depot0;]
true 229 __method_precondition_m2_do_put_on_2_precondition[crate0,truck0;]
true 209 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 101 nop[;]
true 105 __method_precondition_m4_do_clear_4_precondition[crate5,depot0;]
true 114 nop[;]
true 74 Unload[hoist0,crate0,truck0,depot0;]
true 206 Drop[hoist0,crate0,crate5,depot0;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 452
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 904
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 1356
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 1808
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 2260
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 2712
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 3164
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 3616
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 4068
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 4520
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 4972
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 5424
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 5876
TSTG: 2147483647
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 14
ICAPS: 6328
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 6780
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 7232
TSTG: 2147483647
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 17
ICAPS: 7684
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 18
ICAPS: 8136
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 8588
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 20
ICAPS: 9040
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 21
ICAPS: 9492
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 22
ICAPS: 9944
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 23
ICAPS: 10396
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 24
ICAPS: 10848
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 25
ICAPS: 11300
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 26
ICAPS: 11752
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 27
ICAPS: 12204
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 28
ICAPS: 12656
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 29
ICAPS: 13108
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 97
  lower bound = 28

Running SAT search with cost bound = 62
==================================================
  upper bound = 97
  lower bound = 28
LEN 62
ICAPS: 28024
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854744170
DP max: 20
Taking minimum: 20
Generating initial PDT ... done
initial PDT has 2387 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 2345 leafs
SHOP LEAFS 1014
Assignment implications
Generating clauses representing decomposition ... done
At most K: 763ms input: 8016 K = 62
Number of actions Formula: 845ms for 1001937 clauses
Layers: 12 paths 2345
Layer 1 g 0 = 0 - 1 / 0 clauses 2753031
Layer 1 g 1 = 2 - 3 / 2 clauses 2753031
Layer 1 g 2 = 4 - 5 / 4 clauses 2753031
Layer 1 g 3 = 6 - 7 / 6 clauses 2753031
Layer 1 g 4 = 8 - 9 / 8 clauses 2753031
Layer 1 g 5 = 10 - 11 / 10 clauses 2753031
Layer 1 g 6 = 12 - 13 / 12 clauses 2753031
Layer 1 g 7 = 14 - 15 / 14 clauses 2753031
Layer 1 g 8 = 16 - 17 / 16 clauses 2753031
Layer 1 g 9 = 18 - 19 / 18 clauses 2753031
Layer 1 g 10 = 20 - 21 / 20Still waiting ... running for 77619 will abort at 9223372036854744170
 clauses 2753031
Layer 1 g 11 = 22 - 23 / 22 clauses 2753031
Layer 1 g 12 = 24 - 25 / 24 clauses 2753031
Layer 1 g 13 = 26 - 27 / 26 clauses 2753031
Layer 1 g 14 = 28 - 29 / 28 clauses 2753031
Layer 1 g 15 = 30 - 31 / 30 clauses 2753031
Layer 1 g 16 = 32 - 33 / 32 clauses 2753031
Layer 1 g 17 = 34 - 35 / 34 clauses 2753031
Layer 1 g 18 = 36 - 37 / 36 clauses 2753031
Layer 1 g 19 = 38 - 39 / 38 clauses 2753031
Layer 1 g 20 = 40 - 41 / 40 clauses 2753031
Layer 1 g 21 = 42 - 43 / 42 clauses 2753031
Layer 1 g 22 = 44 - 45 / 44 clauses 2753031
Layer 1 g 23 = 46 - 47 / 46Still waiting ... running for 148542 will abort at 9223372036854744170
 clauses 2753031
Layer 1 g 24 = 48 - 49 / 48 clauses 2753031
Layer 1 g 25 = 50 - 51 / 50 clauses 2753031
Layer 1 g 26 = 52 - 53 / 52 clauses 2753031
Layer 1 g 27 = 54 - 55 / 54
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 207.145 MEMPEAK_KBS 8086141.952
