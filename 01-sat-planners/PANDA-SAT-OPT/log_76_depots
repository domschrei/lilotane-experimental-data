PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p16.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p16.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p16.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Grounded planning graph ... done in 382ms.
	Number of Grounded Actions 819
	Number of Grounded Literals 183
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Grounding ... done.
	number of abstract tasks = 161
	number of tasks = 635
	number of decomposition methods = 537
	number of predicates = 202
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 161
	number of tasks = 635
	number of decomposition methods = 537
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 72ms.
	Number of Grounded Actions 474
	Number of Grounded Literals 145
	number of abstract tasks = 161
	number of tasks = 635
	number of decomposition methods = 537
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 161
	number of tasks = 635
	number of decomposition methods = 537
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 162
	number of tasks = 636
	number of decomposition methods = 538
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 162
	number of tasks = 636
	number of decomposition methods = 538
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 39ms.
	Number of Grounded Actions 474
	Number of Grounded Literals 145
	number of abstract tasks = 162
	number of tasks = 636
	number of decomposition methods = 538
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 162
	number of tasks = 636
	number of decomposition methods = 538
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 162
	number of tasks = 636
	number of decomposition methods = 538
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 162
	number of tasks = 636
	number of decomposition methods = 538
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 162
	number of tasks = 636
	number of decomposition methods = 538
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Tasks 474 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772500ms

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854772403
done
initial PDT has 15 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 10 leafs
SHOP LEAFS 10
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 31320
Size 31320 at 0/474
Size 14753
Size 14753 at 0/474
Size 5845
Size 5845 at 0/474
Size 2116
Size 2116 at 0/474
Size 1397
Size 1397 at 0/474
Size 1353
Size 1353 at 0/474
Size 1345
Size 1345 at 0/474
Size 1343
Size 1343 at 0/474
Size 1343
Invariant time: 0.414
Number of invariants: 1343
Invariant Clauses 14773
NUMBER OF CLAUSES 17909
NUMBER OF STATE CLAUSES 17823
NUMBER OF DECOMPOSITION CLAUSES 86
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.52% 0.48% 0.0% 
NUMBER OF PATHS 10
Starting cryptominisat5.5
Setting starttime of solver to 1604509443878
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 67 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 40 leafs
SHOP LEAFS 25
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854771348
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 55063
NUMBER OF CLAUSES 71603
NUMBER OF STATE CLAUSES 67947
NUMBER OF DECOMPOSITION CLAUSES 3656
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 94.89% 5.11% 0.0% 
NUMBER OF PATHS 40
Starting cryptominisat5.5
Setting starttime of solver to 1604509444502
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 124 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854770774
done
PDT has 80 leafs
SHOP LEAFS 43
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 108783
NUMBER OF CLAUSES 146078
NUMBER OF STATE CLAUSES 135002
NUMBER OF DECOMPOSITION CLAUSES 11076
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 92.42% 7.58% 0.0% 
NUMBER OF PATHS 80
Starting cryptominisat5.5
Setting starttime of solver to 1604509445184
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 175 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 165 leafs
SHOP LEAFS 92
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854770014
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 222938
NUMBER OF CLAUSES 303712
NUMBER OF STATE CLAUSES 277295
NUMBER OF DECOMPOSITION CLAUSES 26417
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 91.3% 8.700000000000001% 0.0% 
NUMBER OF PATHS 165
Starting cryptominisat5.5
Setting starttime of solver to 1604509446006
Command exited with non-zero status 20
0.08 0.00

Time command gave the following runtime for the solver: 80
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 192 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 190 leafs
SHOP LEAFS 102
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854769038
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 256513
NUMBER OF CLAUSES 348269
NUMBER OF STATE CLAUSES 319082
NUMBER OF DECOMPOSITION CLAUSES 29187
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 91.62% 8.38% 0.0% 
NUMBER OF PATHS 190
Starting cryptominisat5.5
Setting starttime of solver to 1604509447093
Command exited with non-zero status 10
0.12 0.01

Time command gave the following runtime for the solver: 130
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_3;2,183 183 m4_do_clear
3;2 12 pathaction!2_3;2,4
Consider method^1_4,4 4 m3_do_put_on
4 110 pathaction!1_4,326
Consider method^3_4;4;1,316 316 m4_do_clear
4;4;1 52 pathaction!3_4;4;1,8
Consider method^3_4;2;4,72 72 m10_do_load_truck
4;2;4 59 pathaction!3_4;2;4,393
Consider method^3_1;4;1,217 217 m4_do_clear
1;4;1 29 pathaction!3_1;4;1,5
Consider method^2_1;4,150 150 m11_do_unload_truck
1;4 44 pathaction!2_1;4,624
Consider method^3_1;2;4,49 49 m10_do_load_truck
1;2;4 108 pathaction!3_1;2;4,425
Consider method^2_2;2,271 271 m5_do_clear
2;2 65 pathaction!2_2;2,2
Consider method^2_3;1,204 204 m7_do_get_truck
3;1 2 pathaction!2_3;1,538
Consider method^1_0,180 180 m3_do_put_on
0 112 pathaction!1_0,327
Consider method^3_2;2;3,137 137 m6_do_get_truck
2;2;3 34 pathaction!3_2;2;3,544
Consider method^4_1;2;4;2,378 378 m4_do_clear
1;2;4;2 94 pathaction!4_1;2;4;2,14
Consider method^2_0;2,221 221 _m3_do_put_on_2
0;2 61 pathaction!2_0;2,293
Consider method^1_1,260 260 m3_do_put_on
1 109 pathaction!1_1,330
Consider method^4_0;2;4;1,384 384 m7_do_get_truck
0;2;4;1 30 pathaction!4_0;2;4;1,536
Consider method^1_2,277 277 m2_do_put_on
2 91 pathaction!1_2,328
Consider method^2_2;1,506 506 m7_do_get_truck
2;1 57 pathaction!2_2;1,544
Consider method^4_4;2;4;2,433 433 m4_do_clear
4;2;4;2 56 pathaction!4_4;2;4;2,9
Consider method^4_0;4;1;3,57 57 m7_do_get_truck
0;4;1;3 47 pathaction!4_0;4;1;3,545
Consider method^5_0;4;1;1;3,205 205 m7_do_get_truck
0;4;1;1;3 7 pathaction!5_0;4;1;1;3,534
Consider method^4_1;2;4;1,478 478 m7_do_get_truck
1;2;4;1 99 pathaction!4_1;2;4;1,539
Consider method^2_4;4,274 274 m11_do_unload_truck
4;4 48 pathaction!2_4;4,628
Consider method^3_0;2;4,457 457 m10_do_load_truck
0;2;4 105 pathaction!3_0;2;4,397
Consider method^4_0;2;4;2,107 107 m4_do_clear
0;2;4;2 10 pathaction!4_0;2;4;2,6
Consider method^0_,537 537 __top_1
 20 pathaction!0_,635
Consider method^2_0;4,239 239 m11_do_unload_truck
0;4 38 pathaction!2_0;4,616
Consider method^4_4;2;4;1,137 137 m6_do_get_truck
4;2;4;1 32 pathaction!4_4;2;4;1,544
Consider method^3_2;2;1,344 344 m4_do_clear
2;2;1 78 pathaction!3_2;2;1,1
Consider method^2_4;2,71 71 _m3_do_put_on_2
4;2 76 pathaction!2_4;2,303
Consider method^1_3,111 111 m2_do_put_on
3 67 pathaction!1_3,329
Consider method^2_1;2,501 501 _m3_do_put_on_2
1;2 79 pathaction!2_1;2,304
Consider method^3_0;4;1,3 3 m5_do_clear
0;4;1 77 pathaction!3_0;4;1,11
Consider method^4_0;4;1;1,259 259 m5_do_clear
0;4;1;1 16 pathaction!4_0;4;1;1,13
Consider method^5_0;4;1;1;1,514 514 m4_do_clear
0;4;1;1;1 5 pathaction!5_0;4;1;1;1,10


CHECKING primitive solution of length 68 ...
true 43 __method_precondition_m10_do_load_truck_10_precondition[crate3,depot1,crate1,hoist6;]
true 92 __method_precondition_m7_do_get_truck_7_precondition[truck3,depot1;]
true 96 Drive[truck3,distributor1,depot1;]
true 31 __method_precondition_m4_do_clear_4_precondition[crate3,depot1;]
true 13 nop[;]
true 45 Lift[hoist6,crate3,crate1,depot1;]
true 68 Load[hoist6,crate3,truck3,depot1;]
true 70 Drive[truck3,depot1,depot0;]
true 63 __method_precondition_m11_do_unload_truck_11_precondition[depot0,crate3,pallet0,truck3,hoist0;]
true 83 __method_precondition_m5_do_clear_5_precondition[pallet0,crate2,depot0,hoist0;]
true 39 __method_precondition_m5_do_clear_5_precondition[crate2,crate5,depot0,hoist0;]
true 51 __method_precondition_m4_do_clear_4_precondition[crate5,depot0;]
true 35 nop[;]
true 103 Lift[hoist0,crate5,crate2,depot0;]
true 28 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot0;]
true 102 Drive[truck0,depot1,depot0;]
true 50 Load[hoist0,crate5,truck0,depot0;]
true 6 Lift[hoist0,crate2,pallet0,depot0;]
true 97 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot0;]
true 90 Drive[truck1,depot1,depot0;]
true 72 Load[hoist0,crate2,truck1,depot0;]
true 37 Unload[hoist0,crate3,truck3,depot0;]
true 40 Drop[hoist0,crate3,pallet0,depot0;]
true 49 __method_precondition_m10_do_load_truck_10_precondition[crate4,distributor0,pallet2,hoist2;]
true 87 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 41 Drive[truck1,depot0,distributor0;]
true 113 __method_precondition_m4_do_clear_4_precondition[crate4,distributor0;]
true 64 nop[;]
true 11 Lift[hoist2,crate4,pallet2,distributor0;]
true 8 Load[hoist2,crate4,truck1,distributor0;]
true 36 Drive[truck1,distributor0,depot0;]
true 21 __method_precondition_m11_do_unload_truck_11_precondition[depot0,crate4,crate3,truck1,hoist0;]
true 71 __method_precondition_m4_do_clear_4_precondition[crate3,depot0;]
true 82 nop[;]
true 42 Unload[hoist0,crate4,truck1,depot0;]
true 3 Drop[hoist0,crate4,crate3,depot0;]
true 84 __method_precondition_m2_do_put_on_2_precondition[crate2,truck1;]
true 18 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot1;]
true 58 Drive[truck1,depot0,depot1;]
true 0 __method_precondition_m5_do_clear_5_precondition[pallet1,crate1,depot1,hoist5;]
true 75 __method_precondition_m4_do_clear_4_precondition[crate1,depot1;]
true 24 nop[;]
true 54 Lift[hoist5,crate1,pallet1,depot1;]
true 107 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot1;]
true 86 nop[;]
true 98 Load[hoist5,crate1,truck1,depot1;]
true 66 Unload[hoist6,crate2,truck1,depot1;]
true 69 Drop[hoist6,crate2,pallet1,depot1;]
true 115 __method_precondition_m2_do_put_on_2_precondition[crate5,truck0;]
true 85 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor0;]
true 46 Drive[truck0,depot0,distributor0;]
true 23 __method_precondition_m4_do_clear_4_precondition[pallet2,distributor0;]
true 14 nop[;]
true 17 Unload[hoist2,crate5,truck0,distributor0;]
true 1 Drop[hoist2,crate5,pallet2,distributor0;]
true 104 __method_precondition_m10_do_load_truck_10_precondition[crate0,depot1,pallet4,hoist6;]
true 26 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot1;]
true 101 nop[;]
true 25 __method_precondition_m4_do_clear_4_precondition[crate0,depot1;]
true 4 nop[;]
true 81 Lift[hoist6,crate0,pallet4,depot1;]
true 111 Load[hoist6,crate0,truck1,depot1;]
true 88 Drive[truck1,depot1,distributor1;]
true 100 __method_precondition_m11_do_unload_truck_11_precondition[distributor1,crate0,pallet3,truck1,hoist3;]
true 114 __method_precondition_m4_do_clear_4_precondition[pallet3,distributor1;]
true 80 nop[;]
true 74 Unload[hoist3,crate0,truck1,distributor1;]
true 22 Drop[hoist3,crate0,pallet3,distributor1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 326
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 652
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 978
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 1304
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 1630
TSTG: 7
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 6
ICAPS: 1956
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 2282
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 2608
TSTG: 7
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 9
ICAPS: 2934
TSTG: 7
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 10
ICAPS: 3260
TSTG: 7
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 3586
TSTG: 7
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 12
ICAPS: 3912
TSTG: 7
Method: 2147483647
DP max: 6
Taking minimum: 6
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 41
  lower bound = 11

Running SAT search with cost bound = 26
==================================================
  upper bound = 41
  lower bound = 11
LEN 26
ICAPS: 8476
TSTG: 7
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854767535
DP max: 7
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 104
Assignment implications
Generating clauses representing decomposition ... done
At most K: 31ms input: 1306 K = 26
Number of actions Formula: 44ms for 69191 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 263228
NUMBER OF CLAUSES 4290364
NUMBER OF STATE CLAUSES 4191484
NUMBER OF DECOMPOSITION CLAUSES 98880
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.7% 2.3000000000000003% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509458336
Command exited with non-zero status 20
1.16 0.04

Time command gave the following runtime for the solver: 1200
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 33
==================================================
  upper bound = 41
  lower bound = 26
LEN 33
ICAPS: 10758
TSTG: 7
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854755319
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 104
Assignment implications
Generating clauses representing decomposition ... done
At most K: 40ms input: 1306 K = 33
Number of actions Formula: 57ms for 87468 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 263228
NUMBER OF CLAUSES 4308641
NUMBER OF STATE CLAUSES 4191484
NUMBER OF DECOMPOSITION CLAUSES 117157
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.28% 2.72% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509469082
Command exited with non-zero status 20
1.17 0.03

Time command gave the following runtime for the solver: 1200
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 37
==================================================
  upper bound = 41
  lower bound = 33
LEN 37
ICAPS: 12062
TSTG: 7
Method: 2147483647
Still waiting ... running for 101 will abort at 9223372036854744651
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 104
Assignment implications
Generating clauses representing decomposition ... done
At most K: 36ms input: 1306 K = 37
Number of actions Formula: 41ms for 97912 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 263228
NUMBER OF CLAUSES 4319085
NUMBER OF STATE CLAUSES 4191484
NUMBER OF DECOMPOSITION CLAUSES 127601
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.05% 2.95% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509479883
Command exited with non-zero status 20
1.16 0.05

Time command gave the following runtime for the solver: 1210
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 39
==================================================
  upper bound = 41
  lower bound = 37
LEN 39
ICAPS: 12714
TSTG: 7
Method: 2147483647
Still waiting ... running for 101 will abort at 9223372036854733776
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 104
Assignment implications
Generating clauses representing decomposition ... done
At most K: 20ms input: 1306 K = 39
Number of actions Formula: 37ms for 103134 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 263228
NUMBER OF CLAUSES 4324307
NUMBER OF STATE CLAUSES 4191484
NUMBER OF DECOMPOSITION CLAUSES 132823
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.93% 3.0700000000000003% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509491246
Command exited with non-zero status 20
1.20 0.07

Time command gave the following runtime for the solver: 1270
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 40
==================================================
  upper bound = 41
  lower bound = 39
LEN 40
ICAPS: 13040
TSTG: 7
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854722440
DP max: 8
Taking minimum: 7
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 104
Assignment implications
Generating clauses representing decomposition ... done
At most K: 21ms input: 1306 K = 40
Number of actions Formula: 39ms for 105745 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 263228
NUMBER OF CLAUSES 4326918
NUMBER OF STATE CLAUSES 4191484
NUMBER OF DECOMPOSITION CLAUSES 135434
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 96.87% 3.13% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604509502233
Command exited with non-zero status 20
1.25 0.05

Time command gave the following runtime for the solver: 1300
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 871925392
planner result = SOLUTION
============ solution ============
number of primitive plan steps = 68
cost of solution               = 41
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 145
number of actions                    = 636
number of abstract actions           = 162
number of primitive actions          = 474
number of methods                    = 538
number of primitive shop actions     = 229
number of primitive non-shop actions = 245
size of largest method               = 5
average method size                  = 3
============ sat ============
plan length                     = 40
number of variables             = 202007
number of clauses               = 4327073
average size of clauses         = 2.8951868849913094
number of assert                = 48
number of horn                  = 4300060
K offset                        = 0
K chosen value                  = 7
state formula                   = 4191484
method children clauses         = 0
number of paths                 = 195
maximum plan length             = 195
number of decomposition clauses = 135434
number of ordering clauses      = 0
number of state clauses         = 4191484
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 64482
============ parsing ============
total                         = 1021
file parser                   = 566
sort expansion                = 193
closed world assumption       = 127
inherit preconditions         = 0
shop methods                  = 14
eliminate identical variables = 64
strip domain of hybridity     = 1
flatten formula               = 54
============ preprocessing ============
total                                      = 2048
compile negative preconditions             = 28
compile unit methods                       = 0
split parameter                            = 43
compile methods with identical tasks       = 5
removing unnecessary predicates            = 261
lifted reachabiltiy analysis               = 94
grounded planning graph analysis           = 701
grounded task decomposition graph analysis = 697
grounding                                  = 199
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 542
============ sat ============
total                                        = 55696
generate formula                             = 43669
generate path decomposition tree             = 487
normalise path decomposition tree            = 123
sog optimisation                             = 113
translate path decomposition tree to clauses = 734
generate state formula                       = 42259
generate state invariant formula             = 1701
transform to DIMACS                          = 5025
SAT solver                                   = 6430
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 30
SAT solver for K=0005                        = 80
SAT solver for K=0006                        = 130
SAT solver for K=0007                        = 1300

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="474";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="162";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="871925392";"40 sat:20:state formula"="4191484";"40 sat:01:number of variables"="202007";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="195";"40 sat:00:plan length"="40";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="538";"01 solution:02:cost of solution"="41";"30 problem:07:number of primitive shop actions"="229";"01 solution:01:number of primitive plan steps"="68";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="636";"30 problem:08:number of primitive non-shop actions"="245";"30 problem:02:number of predicates"="145";"40 sat:03:number of horn"="4300060";"40 sat:15:K chosen value"="7";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="5";"40 sat:03:average size of clauses"="2.8951868849913094";"40 sat:02:number of clauses"="4327073";"40 sat:50:number of state clauses"="4191484";"40 sat:03:number of assert"="48";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="195";"40 sat:50:number of decomposition clauses"="135434";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="566";"01 parsing:08:flatten formula"="54";"40 sat:41:SAT solver for K=0004"="30";"40 sat:00:total"="55696";"40 sat:16:generate state formula"="42259";"40 sat:20:transform to DIMACS"="5025";"40 sat:11:generate path decomposition tree"="487";"02 preprocessing:07:compile methods with identical tasks"="5";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="261";"01 parsing:03:closed world assumption"="127";"02 preprocessing:11:lifted reachabiltiy analysis"="94";"01 parsing:02:sort expansion"="193";"40 sat:12:normalise path decomposition tree"="123";"40 sat:40:SAT solver"="6430";"01 parsing:00:total"="1021";"40 sat:10:generate formula"="43669";"40 sat:41:SAT solver for K=0005"="80";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="28";"00 total:00:total"="64482";"40 sat:13:sog optimisation"="113";"02 preprocessing:12:grounded planning graph analysis"="701";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="697";"40 sat:41:SAT solver for K=0006"="130";"02 preprocessing:04:split parameter"="43";"01 parsing:05:shop methods"="14";"10 search preparation:02:compute state invariants"="542";"01 parsing:06:eliminate identical variables"="64";"40 sat:15:translate path decomposition tree to clauses"="734";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="1701";"02 preprocessing:00:total"="2048";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="199";"40 sat:41:SAT solver for K=0007"="1300"
#!verify __method_precondition_m10_do_load_truck_10_precondition[crate3,depot1,crate1,hoist6];__method_precondition_m7_do_get_truck_7_precondition[truck3,depot1];Drive[truck3,distributor1,depot1];__method_precondition_m4_do_clear_4_precondition[crate3,depot1];nop[];Lift[hoist6,crate3,crate1,depot1];Load[hoist6,crate3,truck3,depot1];Drive[truck3,depot1,depot0];__method_precondition_m11_do_unload_truck_11_precondition[depot0,crate3,pallet0,truck3,hoist0];__method_precondition_m5_do_clear_5_precondition[pallet0,crate2,depot0,hoist0];__method_precondition_m5_do_clear_5_precondition[crate2,crate5,depot0,hoist0];__method_precondition_m4_do_clear_4_precondition[crate5,depot0];nop[];Lift[hoist0,crate5,crate2,depot0];__method_precondition_m7_do_get_truck_7_precondition[truck0,depot0];Drive[truck0,depot1,depot0];Load[hoist0,crate5,truck0,depot0];Lift[hoist0,crate2,pallet0,depot0];__method_precondition_m7_do_get_truck_7_precondition[truck1,depot0];Drive[truck1,depot1,depot0];Load[hoist0,crate2,truck1,depot0];Unload[hoist0,crate3,truck3,depot0];Drop[hoist0,crate3,pallet0,depot0];__method_precondition_m10_do_load_truck_10_precondition[crate4,distributor0,pallet2,hoist2];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0];Drive[truck1,depot0,distributor0];__method_precondition_m4_do_clear_4_precondition[crate4,distributor0];nop[];Lift[hoist2,crate4,pallet2,distributor0];Load[hoist2,crate4,truck1,distributor0];Drive[truck1,distributor0,depot0];__method_precondition_m11_do_unload_truck_11_precondition[depot0,crate4,crate3,truck1,hoist0];__method_precondition_m4_do_clear_4_precondition[crate3,depot0];nop[];Unload[hoist0,crate4,truck1,depot0];Drop[hoist0,crate4,crate3,depot0];__method_precondition_m2_do_put_on_2_precondition[crate2,truck1];__method_precondition_m7_do_get_truck_7_precondition[truck1,depot1];Drive[truck1,depot0,depot1];__method_precondition_m5_do_clear_5_precondition[pallet1,crate1,depot1,hoist5];__method_precondition_m4_do_clear_4_precondition[crate1,depot1];nop[];Lift[hoist5,crate1,pallet1,depot1];__method_precondition_m6_do_get_truck_6_precondition[truck1,depot1];nop[];Load[hoist5,crate1,truck1,depot1];Unload[hoist6,crate2,truck1,depot1];Drop[hoist6,crate2,pallet1,depot1];__method_precondition_m2_do_put_on_2_precondition[crate5,truck0];__method_precondition_m7_do_get_truck_7_precondition[truck0,distributor0];Drive[truck0,depot0,distributor0];__method_precondition_m4_do_clear_4_precondition[pallet2,distributor0];nop[];Unload[hoist2,crate5,truck0,distributor0];Drop[hoist2,crate5,pallet2,distributor0];__method_precondition_m10_do_load_truck_10_precondition[crate0,depot1,pallet4,hoist6];__method_precondition_m6_do_get_truck_6_precondition[truck1,depot1];nop[];__method_precondition_m4_do_clear_4_precondition[crate0,depot1];nop[];Lift[hoist6,crate0,pallet4,depot1];Load[hoist6,crate0,truck1,depot1];Drive[truck1,depot1,distributor1];__method_precondition_m11_do_unload_truck_11_precondition[distributor1,crate0,pallet3,truck1,hoist3];__method_precondition_m4_do_clear_4_precondition[pallet3,distributor1];nop[];Unload[hoist3,crate0,truck1,distributor1];Drop[hoist3,crate0,pallet3,distributor1]
==>
0 __method_precondition_m10_do_load_truck_10_precondition crate3 depot1 crate1 hoist6 
1 __method_precondition_m7_do_get_truck_7_precondition truck3 depot1 
2 Drive truck3 distributor1 depot1 
3 __method_precondition_m4_do_clear_4_precondition crate3 depot1 
4 nop  
5 Lift hoist6 crate3 crate1 depot1 
6 Load hoist6 crate3 truck3 depot1 
7 Drive truck3 depot1 depot0 
8 __method_precondition_m11_do_unload_truck_11_precondition depot0 crate3 pallet0 truck3 hoist0 
9 __method_precondition_m5_do_clear_5_precondition pallet0 crate2 depot0 hoist0 
10 __method_precondition_m5_do_clear_5_precondition crate2 crate5 depot0 hoist0 
11 __method_precondition_m4_do_clear_4_precondition crate5 depot0 
12 nop  
13 Lift hoist0 crate5 crate2 depot0 
14 __method_precondition_m7_do_get_truck_7_precondition truck0 depot0 
15 Drive truck0 depot1 depot0 
16 Load hoist0 crate5 truck0 depot0 
17 Lift hoist0 crate2 pallet0 depot0 
18 __method_precondition_m7_do_get_truck_7_precondition truck1 depot0 
19 Drive truck1 depot1 depot0 
20 Load hoist0 crate2 truck1 depot0 
21 Unload hoist0 crate3 truck3 depot0 
22 Drop hoist0 crate3 pallet0 depot0 
23 __method_precondition_m10_do_load_truck_10_precondition crate4 distributor0 pallet2 hoist2 
24 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor0 
25 Drive truck1 depot0 distributor0 
26 __method_precondition_m4_do_clear_4_precondition crate4 distributor0 
27 nop  
28 Lift hoist2 crate4 pallet2 distributor0 
29 Load hoist2 crate4 truck1 distributor0 
30 Drive truck1 distributor0 depot0 
31 __method_precondition_m11_do_unload_truck_11_precondition depot0 crate4 crate3 truck1 hoist0 
32 __method_precondition_m4_do_clear_4_precondition crate3 depot0 
33 nop  
34 Unload hoist0 crate4 truck1 depot0 
35 Drop hoist0 crate4 crate3 depot0 
36 __method_precondition_m2_do_put_on_2_precondition crate2 truck1 
37 __method_precondition_m7_do_get_truck_7_precondition truck1 depot1 
38 Drive truck1 depot0 depot1 
39 __method_precondition_m5_do_clear_5_precondition pallet1 crate1 depot1 hoist5 
40 __method_precondition_m4_do_clear_4_precondition crate1 depot1 
41 nop  
42 Lift hoist5 crate1 pallet1 depot1 
43 __method_precondition_m6_do_get_truck_6_precondition truck1 depot1 
44 nop  
45 Load hoist5 crate1 truck1 depot1 
46 Unload hoist6 crate2 truck1 depot1 
47 Drop hoist6 crate2 pallet1 depot1 
48 __method_precondition_m2_do_put_on_2_precondition crate5 truck0 
49 __method_precondition_m7_do_get_truck_7_precondition truck0 distributor0 
50 Drive truck0 depot0 distributor0 
51 __method_precondition_m4_do_clear_4_precondition pallet2 distributor0 
52 nop  
53 Unload hoist2 crate5 truck0 distributor0 
54 Drop hoist2 crate5 pallet2 distributor0 
55 __method_precondition_m10_do_load_truck_10_precondition crate0 depot1 pallet4 hoist6 
56 __method_precondition_m6_do_get_truck_6_precondition truck1 depot1 
57 nop  
58 __method_precondition_m4_do_clear_4_precondition crate0 depot1 
59 nop  
60 Lift hoist6 crate0 pallet4 depot1 
61 Load hoist6 crate0 truck1 depot1 
62 Drive truck1 depot1 distributor1 
63 __method_precondition_m11_do_unload_truck_11_precondition distributor1 crate0 pallet3 truck1 hoist3 
64 __method_precondition_m4_do_clear_4_precondition pallet3 distributor1 
65 nop  
66 Unload hoist3 crate0 truck1 distributor1 
67 Drop hoist3 crate0 pallet3 distributor1 
root 76
68 do_clear crate2 depot0  -> m5_do_clear 10 80 13 87 16
69 do_unload_truck crate3 pallet0 depot0 truck3  -> m11_do_unload_truck 8 88 21 22
70 do_clear crate3 depot1  -> m4_do_clear 3 4
71 do_clear crate4 distributor0  -> m4_do_clear 26 27
72 do_load_truck_m3_do_put_on_sip_2 crate3 depot1 truck3  -> _m3_do_put_on_2 78
73 do_unload_truck crate4 crate3 depot0 truck1  -> m11_do_unload_truck 31 99 34 35
74 do_load_truck crate4 pallet2 distributor0 truck1  -> m10_do_load_truck 23 89 71 28 29
75 do_load_truck_m3_do_put_on_sip_2 crate0 depot1 truck1  -> _m3_do_put_on_2 90
76 __artificialTopCompilation__top_1  -> __top_1 94 100 95 79 92
77 do_clear pallet3 distributor1  -> m4_do_clear 64 65
78 do_load_truck crate3 crate1 depot1 truck3  -> m10_do_load_truck 0 97 70 5 6
79 do_put_on crate5 pallet2  -> m2_do_put_on 48 101 98 53 54
80 do_clear crate5 depot0  -> m4_do_clear 11 12
81 do_load_truck_m3_do_put_on_sip_2 crate4 distributor0 truck1  -> _m3_do_put_on_2 74
82 do_get_truck truck1 depot1  -> m7_do_get_truck 37 38
83 do_get_truck truck1 depot1  -> m6_do_get_truck 43 44
84 do_clear crate0 depot1  -> m4_do_clear 58 59
85 do_clear crate1 depot1  -> m4_do_clear 40 41
86 do_unload_truck crate0 pallet3 distributor1 truck1  -> m11_do_unload_truck 63 77 66 67
87 do_get_truck truck0 depot0  -> m7_do_get_truck 14 15
88 do_clear pallet0 depot0  -> m5_do_clear 9 68 17 93 20
89 do_get_truck truck1 distributor0  -> m7_do_get_truck 24 25
90 do_load_truck crate0 pallet4 depot1 truck1  -> m10_do_load_truck 55 96 84 60 61
91 do_clear pallet1 depot1  -> m5_do_clear 39 85 42 83 45
92 do_put_on crate0 pallet3  -> m3_do_put_on 75 62 86
93 do_get_truck truck1 depot0  -> m7_do_get_truck 18 19
94 do_put_on crate3 pallet0  -> m3_do_put_on 72 7 69
95 do_put_on crate2 pallet1  -> m2_do_put_on 36 82 91 46 47
96 do_get_truck truck1 depot1  -> m6_do_get_truck 56 57
97 do_get_truck truck3 depot1  -> m7_do_get_truck 1 2
98 do_clear pallet2 distributor0  -> m4_do_clear 51 52
99 do_clear crate3 depot0  -> m4_do_clear 32 33
100 do_put_on crate4 crate3  -> m3_do_put_on 81 30 73
101 do_get_truck truck0 distributor0  -> m7_do_get_truck 49 50

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 65.441 MEMPEAK_KBS 1201683.456
