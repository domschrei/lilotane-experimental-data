PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p18.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p18.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p18.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounded planning graph ... done in 637ms.
	Number of Grounded Actions 2355
	Number of Grounded Literals 371
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounding ... done.
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 371
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 355ms.
	Number of Grounded Actions 2333
	Number of Grounded Literals 342
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 183ms.
	Number of Grounded Actions 2333
	Number of Grounded Literals 342
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1149
	number of tasks = 3482
	number of decomposition methods = 4191
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Tasks 2333 - 13
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768634ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854768207
done
initial PDT has 288 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 288 leafs
SHOP LEAFS 76
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 174933
Size 174933 at 0/2333
Size 174130 at 500/2333
Size 143793 at 1000/2333
Size 41577 at 1500/2333
Size 20243 at 2000/2333
Size 20203
Size 20203 at 0/2333
Size 20195 at 500/2333
Size 10697 at 1000/2333
Size 10697 at 1500/2333
Size 10689 at 2000/2333
Size 10689
Size 10689 at 0/2333
Size 10689 at 500/2333
Size 3291 at 1000/2333
Size 3270 at 1500/2333
Size 3198 at 2000/2333
Size 3198
Size 3198 at 0/2333
Size 3198 at 500/2333
Size 3078 at 1000/2333
Size 3078 at 1500/2333
Size 3078 at 2000/2333
Size 3078
Size 3078 at 0/2333
Size 3078 at 500/2333
Size 3013 at 1000/2333
Size 3013 at 1500/2333
Size 3013 at 2000/2333
Size 3013
Size 3013 at 0/2333
Size 3013 at 500/2333
Size 3013 at 1000/2333
Size 3013 at 1500/2333
Size 3013 at 2000/2333
Size 3013
Invariant time: 2.356
Number of invariants: 3013
Invariant Clauses 870757
NUMBER OF CLAUSES 1361893
NUMBER OF STATE CLAUSES 1145745
NUMBER OF DECOMPOSITION CLAUSES 216148
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.13% 15.870000000000001% 0.0% 
NUMBER OF PATHS 288
Starting cryptominisat5.5
Setting starttime of solver to 1604497984320
Command exited with non-zero status 10
1.01 0.07

Time command gave the following runtime for the solver: 1080
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_2;2;1,4151 4151 _m3_get_second_ingredient_2
2;2;1 187 pathaction!3_2;2;1,666
Consider method^2_7;2,284 284 m3_get_second_ingredient
7;2 333 pathaction!2_7;2,1645
Consider method^3_8;3;1,4103 4103 _m4_serve_shot_2
8;3;1 322 pathaction!3_8;3;1,1039
Consider method^3_5;3;1,3752 3752 _m4_serve_shot_2
5;3;1 156 pathaction!3_5;3;1,1050
Consider method^2_10;2,1944 1944 m3_get_second_ingredient
10;2 374 pathaction!2_10;2,1636
Consider method^3_0;3;5,2986 2986 _m4_serve_shot_6
0;3;5 127 pathaction!3_0;3;5,1160
Consider method^3_13;2;1,3834 3834 _m3_get_second_ingredient_2
13;2;1 190 pathaction!3_13;2;1,639
Consider method^2_11;0,888 888 _m1_do_cocktail_in_shot2_4
11;0 129 pathaction!2_11;0,2775
Consider method^4_6;3;1;0,1430 1430 m6_do_clean_shot
6;3;1;0 27 pathaction!4_6;3;1;0,2807
Consider method^3_13;1;2,817 817 _m2_get_first_ingredient_3
13;1;2 97 pathaction!3_13;1;2,1237
Consider method^2_4;3,953 953 m4_serve_shot
4;3 235 pathaction!2_4;3,3143
Consider method^2_6;2,3532 3532 m3_get_second_ingredient
6;2 99 pathaction!2_6;2,1632
Consider method^2_5;1,3900 3900 m2_get_first_ingredient
5;1 422 pathaction!2_5;1,555
Consider method^3_0;3;4,3211 3211 _m4_serve_shot_5
0;3;4 289 pathaction!3_0;3;4,3437
Consider method^2_8;2,3434 3434 m3_get_second_ingredient
8;2 131 pathaction!2_8;2,1642
Consider method^2_4;2,316 316 m3_get_second_ingredient
4;2 272 pathaction!2_4;2,1635
Consider method^3_3;2;2,1012 1012 _m3_get_second_ingredient_3
3;2;2 419 pathaction!3_3;2;2,3232
Consider method^3_3;1;2,3312 3312 _m2_get_first_ingredient_3
3;1;2 270 pathaction!3_3;1;2,1179
Consider method^3_0;2;1,2402 2402 _m3_get_second_ingredient_2
0;2;1 232 pathaction!3_0;2;1,641
Consider method^3_3;3;1,1520 1520 _m4_serve_shot_2
3;3;1 212 pathaction!3_3;3;1,1042
Consider method^3_4;3;1,2791 2791 _m4_serve_shot_2
4;3;1 149 pathaction!3_4;3;1,1030
Consider method^3_1;3;4,4127 4127 _m4_serve_shot_5
1;3;4 294 pathaction!3_1;3;4,3442
Consider method^3_9;3;4,2600 2600 _m4_serve_shot_5
9;3;4 412 pathaction!3_9;3;4,3471
Consider method^2_2;1,2681 2681 m2_get_first_ingredient
2;1 279 pathaction!2_2;1,545
Consider method^1_0,1453 1453 m0_do_cocktail_in_shot1
0 171 pathaction!1_0,1526
Consider method^2_7;3,306 306 m4_serve_shot
7;3 144 pathaction!2_7;3,3137
Consider method^3_9;1;3,3861 3861 _m2_get_first_ingredient_4
9;1;3 250 pathaction!3_9;1;3,830
Consider method^3_5;1;2,2191 2191 _m2_get_first_ingredient_3
5;1;2 362 pathaction!3_5;1;2,1192
Consider method^1_11,2690 2690 m1_do_cocktail_in_shot2
11 16 pathaction!1_11,1054
Consider method^3_2;3;1,83 83 _m4_serve_shot_2
2;3;1 59 pathaction!3_2;3;1,1053
Consider method^3_10;1;3,1770 1770 _m2_get_first_ingredient_4
10;1;3 350 pathaction!3_10;1;3,749
Consider method^0_,4190 4190 __top_1
 227 pathaction!0_,3481
Consider method^2_3;2,3260 3260 m3_get_second_ingredient
3;2 426 pathaction!2_3;2,1628
Consider method^1_12,507 507 m1_do_cocktail_in_shot2
12 158 pathaction!1_12,1055
Consider method^3_1;1;1,2130 2130 m9_do_fill_shot
1;1;1 261 pathaction!3_1;1;1,952
Consider method^2_0;2,1902 1902 m3_get_second_ingredient
0;2 377 pathaction!2_0;2,1640
Consider method^2_9;3,3587 3587 m4_serve_shot
9;3 78 pathaction!2_9;3,3141
Consider method^4_1;3;1;0,483 483 m5_do_clean_shot
1;3;1;0 124 pathaction!4_1;3;1;0,3051
Consider method^3_7;2;2,2998 2998 _m3_get_second_ingredient_3
7;2;2 267 pathaction!3_7;2;2,3163
Consider method^3_8;2;2,1695 1695 _m3_get_second_ingredient_3
8;2;2 179 pathaction!3_8;2;2,3212
Consider method^3_2;1;3,2566 2566 _m2_get_first_ingredient_4
2;1;3 326 pathaction!3_2;1;3,840
Consider method^1_9,2405 2405 m0_do_cocktail_in_shot1
9 262 pathaction!1_9,1529
Consider method^3_7;2;1,3689 3689 _m3_get_second_ingredient_2
7;2;1 316 pathaction!3_7;2;1,740
Consider method^2_12;0,2370 2370 _m1_do_cocktail_in_shot2_4
12;0 152 pathaction!2_12;0,2774
Consider method^1_13,4055 4055 m0_do_cocktail_in_shot1
13 159 pathaction!1_13,1535
Consider method^3_6;1;1,1920 1920 m8_do_fill_shot
6;1;1 249 pathaction!3_6;1;1,920
Consider method^3_1;3;1,2482 2482 _m4_serve_shot_2
1;3;1 353 pathaction!3_1;3;1,1052
Consider method^2_1;3,1447 1447 m4_serve_shot
1;3 287 pathaction!2_1;3,3146
Consider method^3_8;3;5,3576 3576 _m4_serve_shot_6
8;3;5 401 pathaction!3_8;3;5,1144
Consider method^3_9;2;2,1905 1905 _m3_get_second_ingredient_3
9;2;2 293 pathaction!3_9;2;2,3168
Consider method^3_0;3;1,3326 3326 _m4_serve_shot_2
0;3;1 95 pathaction!3_0;3;1,1031
Consider method^4_7;3;1;0,3050 3050 m5_do_clean_shot
7;3;1;0 219 pathaction!4_7;3;1;0,2893
Consider method^2_0;3,4132 4132 m4_serve_shot
0;3 200 pathaction!2_0;3,3138
Consider method^2_1;2,3301 3301 m3_get_second_ingredient
1;2 360 pathaction!2_1;2,1633
Consider method^4_9;3;1;0,7 7 m5_do_clean_shot
9;3;1;0 49 pathaction!4_9;3;1;0,2941
Consider method^4_2;3;1;0,45 45 m5_do_clean_shot
2;3;1;0 173 pathaction!4_2;3;1;0,2836
Consider method^3_1;1;2,2282 2282 _m2_get_first_ingredient_3
1;1;2 185 pathaction!3_1;1;2,1273
Consider method^1_2,3528 3528 m0_do_cocktail_in_shot1
2 22 pathaction!1_2,1528
Consider method^2_9;2,4073 4073 m3_get_second_ingredient
9;2 178 pathaction!2_9;2,1626
Consider method^3_7;1;3,4004 4004 _m2_get_first_ingredient_4
7;1;3 321 pathaction!3_7;1;3,786
Consider method^1_10,177 177 m0_do_cocktail_in_shot1
10 19 pathaction!1_10,1533
Consider method^2_13;2,777 777 m3_get_second_ingredient
13;2 126 pathaction!2_13;2,1631
Consider method^3_13;1;1,794 794 m8_do_fill_shot
13;1;1 146 pathaction!3_13;1;1,939
Consider method^3_0;2;2,3233 3233 _m3_get_second_ingredient_3
0;2;2 245 pathaction!3_0;2;2,3194
Consider method^2_8;1,433 433 m2_get_first_ingredient
8;1 3 pathaction!2_8;1,558
Consider method^2_8;3,1540 1540 m4_serve_shot
8;3 121 pathaction!2_8;3,3139
Consider method^3_5;1;1,358 358 m8_do_fill_shot
5;1;1 36 pathaction!3_5;1;1,940
Consider method^3_2;1;1,340 340 m9_do_fill_shot
2;1;1 65 pathaction!3_2;1;1,1008
Consider method^3_3;3;4,2589 2589 _m4_serve_shot_5
3;3;4 155 pathaction!3_3;3;4,3451
Consider method^3_5;2;2,1513 1513 _m3_get_second_ingredient_3
5;2;2 415 pathaction!3_5;2;2,3237
Consider method^3_8;3;4,4020 4020 _m4_serve_shot_5
8;3;4 224 pathaction!3_8;3;4,3458
Consider method^3_13;3;5,355 355 _m4_serve_shot_6
13;3;5 32 pathaction!3_13;3;5,1127
Consider method^3_5;3;4,1231 1231 _m4_serve_shot_5
5;3;4 104 pathaction!3_5;3;4,3475
Consider method^3_1;2;1,2402 2402 _m3_get_second_ingredient_2
1;2;1 113 pathaction!3_1;2;1,641
Consider method^4_4;3;1;0,3131 3131 m6_do_clean_shot
4;3;1;0 273 pathaction!4_4;3;1;0,3074
Consider method^4_5;3;1;0,2605 2605 m5_do_clean_shot
5;3;1;0 307 pathaction!4_5;3;1;0,3018
Consider method^3_4;1;2,2974 2974 _m2_get_first_ingredient_3
4;1;2 15 pathaction!3_4;1;2,1195
Consider method^3_6;3;1,3684 3684 _m4_serve_shot_2
6;3;1 341 pathaction!3_6;3;1,1040
Consider method^3_7;1;2,2859 2859 _m2_get_first_ingredient_3
7;1;2 285 pathaction!3_7;1;2,1256
Consider method^3_3;1;3,3363 3363 _m2_get_first_ingredient_4
3;1;3 20 pathaction!3_3;1;3,860
Consider method^3_6;1;2,3897 3897 _m2_get_first_ingredient_3
6;1;2 141 pathaction!3_6;1;2,1216
Consider method^3_8;1;3,1956 1956 _m2_get_first_ingredient_4
8;1;3 110 pathaction!3_8;1;3,792
Consider method^3_0;1;2,2939 2939 _m2_get_first_ingredient_3
0;1;2 31 pathaction!3_0;1;2,1181
Consider method^3_1;3;5,312 312 _m4_serve_shot_6
1;3;5 153 pathaction!3_1;3;5,1140
Consider method^3_6;2;1,1925 1925 _m3_get_second_ingredient_2
6;2;1 192 pathaction!3_6;2;1,633
Consider method^3_9;3;1,638 638 _m4_serve_shot_2
9;3;1 277 pathaction!3_9;3;1,1051
Consider method^2_2;2,1875 1875 m3_get_second_ingredient
2;2 198 pathaction!2_2;2,1629
Consider method^3_4;3;5,608 608 _m4_serve_shot_6
4;3;5 394 pathaction!3_4;3;5,1161
Consider method^3_2;2;2,903 903 _m3_get_second_ingredient_3
2;2;2 12 pathaction!3_2;2;2,3240
Consider method^3_5;2;1,3573 3573 _m3_get_second_ingredient_2
5;2;1 295 pathaction!3_5;2;1,723
Consider method^2_4;1,3875 3875 m2_get_first_ingredient
4;1 312 pathaction!2_4;1,551
Consider method^3_8;1;1,1096 1096 m8_do_fill_shot
8;1;1 385 pathaction!3_8;1;1,960
Consider method^3_10;3;1,3770 3770 _m4_serve_shot_2
10;3;1 346 pathaction!3_10;3;1,1048
Consider method^2_5;2,2880 2880 m3_get_second_ingredient
5;2 139 pathaction!2_5;2,1639
Consider method^1_1,2506 2506 m0_do_cocktail_in_shot1
1 133 pathaction!1_1,1534
Consider method^3_4;1;1,2850 2850 m8_do_fill_shot
4;1;1 265 pathaction!3_4;1;1,925
Consider method^3_7;1;1,1438 1438 m9_do_fill_shot
7;1;1 276 pathaction!3_7;1;1,954
Consider method^3_8;1;2,1098 1098 _m2_get_first_ingredient_3
8;1;2 193 pathaction!3_8;1;2,1233
Consider method^2_10;1,3428 3428 m2_get_first_ingredient
10;1 291 pathaction!2_10;1,552
Consider method^1_3,1844 1844 m0_do_cocktail_in_shot1
3 378 pathaction!1_3,1524
Consider method^3_3;2;1,4158 4158 _m3_get_second_ingredient_2
3;2;1 213 pathaction!3_3;2;1,720
Consider method^3_10;3;4,1457 1457 _m4_serve_shot_5
10;3;4 199 pathaction!3_10;3;4,3469
Consider method^3_7;3;1,2211 2211 _m4_serve_shot_2
7;3;1 233 pathaction!3_7;3;1,1033
Consider method^2_3;3,359 359 m4_serve_shot
3;3 248 pathaction!2_3;3,3136
Consider method^3_9;1;2,2371 2371 _m2_get_first_ingredient_3
9;1;2 421 pathaction!3_9;1;2,1281
Consider method^4_10;3;1;0,2616 2616 m5_do_clean_shot
10;3;1;0 63 pathaction!4_10;3;1;0,3000
Consider method^3_10;3;5,1077 1077 _m4_serve_shot_6
10;3;5 375 pathaction!3_10;3;5,1129
Consider method^4_13;3;1;0,3522 3522 m6_do_clean_shot
13;3;1;0 275 pathaction!4_13;3;1;0,3091
Consider method^2_12;1,3329 3329 m9_do_fill_shot
12;1 191 pathaction!2_12;1,917
Consider method^3_2;1;2,1059 1059 _m2_get_first_ingredient_3
2;1;2 228 pathaction!3_2;1;2,1248
Consider method^2_13;3,1242 1242 m4_serve_shot
13;3 218 pathaction!2_13;3,3147
Consider method^3_9;2;1,4162 4162 _m3_get_second_ingredient_2
9;2;1 399 pathaction!3_9;2;1,676
Consider method^3_6;3;5,2782 2782 _m4_serve_shot_6
6;3;5 313 pathaction!3_6;3;5,1154
Consider method^2_7;1,2463 2463 m2_get_first_ingredient
7;1 223 pathaction!2_7;1,561
Consider method^3_6;2;2,2889 2889 _m3_get_second_ingredient_3
6;2;2 128 pathaction!3_6;2;2,3242
Consider method^1_4,1075 1075 m0_do_cocktail_in_shot1
4 256 pathaction!1_4,1531
Consider method^3_3;3;5,872 872 _m4_serve_shot_6
3;3;5 84 pathaction!3_3;3;5,1138
Consider method^3_10;1;1,3329 3329 m9_do_fill_shot
10;1;1 42 pathaction!3_10;1;1,917
Consider method^4_8;3;1;0,1060 1060 m5_do_clean_shot
8;3;1;0 215 pathaction!4_8;3;1;0,2878
Consider method^2_9;1,3501 3501 m2_get_first_ingredient
9;1 271 pathaction!2_9;1,542
Consider method^3_10;1;2,986 986 _m2_get_first_ingredient_3
10;1;2 108 pathaction!3_10;1;2,1224
Consider method^3_2;3;5,2160 2160 _m4_serve_shot_6
2;3;5 168 pathaction!3_2;3;5,1152
Consider method^3_7;3;5,798 798 _m4_serve_shot_6
7;3;5 148 pathaction!3_7;3;5,1133
Consider method^3_13;1;3,2336 2336 _m2_get_first_ingredient_4
13;1;3 52 pathaction!3_13;1;3,771
Consider method^1_6,2902 2902 m0_do_cocktail_in_shot1
6 306 pathaction!1_6,1530
Consider method^2_11;1,1608 1608 m9_do_fill_shot
11;1 166 pathaction!2_11;1,1016
Consider method^3_3;1;1,3189 3189 m9_do_fill_shot
3;1;1 225 pathaction!3_3;1;1,1028
Consider method^3_2;3;4,3785 3785 _m4_serve_shot_5
2;3;4 48 pathaction!3_2;3;4,3474
Consider method^3_1;2;2,3233 3233 _m3_get_second_ingredient_3
1;2;2 26 pathaction!3_1;2;2,3194
Consider method^2_6;3,2458 2458 m4_serve_shot
6;3 101 pathaction!2_6;3,3142
Consider method^3_1;1;3,3539 3539 _m2_get_first_ingredient_4
1;1;3 296 pathaction!3_1;1;3,784
Consider method^4_3;3;1;0,2481 2481 m5_do_clean_shot
3;3;1;0 337 pathaction!4_3;3;1;0,2931
Consider method^3_13;3;1,1049 1049 _m4_serve_shot_2
13;3;1 96 pathaction!3_13;3;1,1041
Consider method^2_1;1,3771 3771 m2_get_first_ingredient
1;1 1 pathaction!2_1;1,549
Consider method^3_13;2;2,3635 3635 _m3_get_second_ingredient_3
13;2;2 318 pathaction!3_13;2;2,3205
Consider method^3_4;1;3,2126 2126 _m2_get_first_ingredient_4
4;1;3 410 pathaction!3_4;1;3,757
Consider method^1_5,3967 3967 m0_do_cocktail_in_shot1
5 372 pathaction!1_5,1532
Consider method^3_4;2;2,1248 1248 _m3_get_second_ingredient_3
4;2;2 300 pathaction!3_4;2;2,3155
Consider method^2_3;1,102 102 m2_get_first_ingredient
3;1 30 pathaction!2_3;1,544
Consider method^3_6;1;3,976 976 _m2_get_first_ingredient_4
6;1;3 380 pathaction!3_6;1;3,752
Consider method^2_5;3,2244 2244 m4_serve_shot
5;3 251 pathaction!2_5;3,3144
Consider method^3_5;3;5,466 466 _m4_serve_shot_6
5;3;5 102 pathaction!3_5;3;5,1146
Consider method^3_8;2;1,267 267 _m3_get_second_ingredient_2
8;2;1 11 pathaction!3_8;2;1,718
Consider method^1_7,2058 2058 m0_do_cocktail_in_shot1
7 92 pathaction!1_7,1525
Consider method^3_13;3;4,3151 3151 _m4_serve_shot_5
13;3;4 268 pathaction!3_13;3;4,3467
Consider method^2_2;3,247 247 m4_serve_shot
2;3 354 pathaction!2_2;3,3140
Consider method^2_13;1,3318 3318 m2_get_first_ingredient
13;1 264 pathaction!2_13;1,547
Consider method^3_9;3;5,1433 1433 _m4_serve_shot_6
9;3;5 389 pathaction!3_9;3;5,1124
Consider method^3_0;1;3,2115 2115 _m2_get_first_ingredient_4
0;1;3 50 pathaction!3_0;1;3,799
Consider method^4_0;3;1;0,3105 3105 m5_do_clean_shot
0;3;1;0 140 pathaction!4_0;3;1;0,2925
Consider method^3_5;1;3,3666 3666 _m2_get_first_ingredient_4
5;1;3 297 pathaction!3_5;1;3,772
Consider method^2_10;3,576 576 m4_serve_shot
10;3 257 pathaction!2_10;3,3145
Consider method^3_0;1;1,3986 3986 m8_do_fill_shot
0;1;1 207 pathaction!3_0;1;1,967
Consider method^3_4;2;1,2156 2156 _m3_get_second_ingredient_2
4;2;1 75 pathaction!3_4;2;1,725
Consider method^3_6;3;4,213 213 _m4_serve_shot_5
6;3;4 370 pathaction!3_6;3;4,3452
Consider method^3_10;2;2,1695 1695 _m3_get_second_ingredient_3
10;2;2 366 pathaction!3_10;2;2,3212
Consider method^3_9;1;1,3817 3817 m9_do_fill_shot
9;1;1 89 pathaction!3_9;1;1,998
Consider method^2_6;1,2151 2151 m2_get_first_ingredient
6;1 181 pathaction!2_6;1,548
Consider method^3_10;2;1,267 267 _m3_get_second_ingredient_2
10;2;1 255 pathaction!3_10;2;1,718
Consider method^3_4;3;4,3222 3222 _m4_serve_shot_5
4;3;4 238 pathaction!3_4;3;4,3479
Consider method^1_8,955 955 m0_do_cocktail_in_shot1
8 371 pathaction!1_8,1527
Consider method^2_0;1,2922 2922 m2_get_first_ingredient
0;1 38 pathaction!2_0;1,556
Consider method^3_7;3;4,1504 1504 _m4_serve_shot_5
7;3;4 247 pathaction!3_7;3;4,3444


CHECKING primitive solution of length 264 ...
true 342 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 424 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot15;]
true 221 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser3,ingredient3;]
true 209 grasp[right,shot15;]
true 409 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 243 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1;]
true 172 clean-shot[shot15,ingredient3,right,left;]
true 398 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,right,shot15;]
true 319 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 29 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 111 leave[right,shot15;]
true 286 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient4;]
true 203 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 332 nop[;]
true 194 grasp[right,shaker1;]
true 214 shake[cocktail10,ingredient3,ingredient4,shaker1,right,left;]
true 280 pour-shaker-to-shot[cocktail10,shot1,right,shaker1,l2,l1;]
true 135 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 106 clean-shaker[right,left,shaker1;]
true 39 leave[right,shaker1;]
true 81 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 119 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot15;]
true 392 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient4,dispenser2;]
true 56 grasp[right,shot15;]
true 85 clean-shot[shot15,ingredient4,right,left;]
true 82 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 73 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 384 clean-shot[shot15,ingredient2,right,left;]
true 210 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient4,right,shot15;]
true 393 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 383 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 388 leave[right,shot15;]
true 231 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient4;]
true 311 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 177 nop[;]
true 33 grasp[right,shaker1;]
true 336 shake[cocktail9,ingredient2,ingredient4,shaker1,right,left;]
true 404 pour-shaker-to-shot[cocktail9,shot2,right,shaker1,l2,l1;]
true 137 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 87 clean-shaker[right,left,shaker1;]
true 302 leave[right,shaker1;]
true 345 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 357 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot15;]
true 176 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient4,dispenser2;]
true 25 grasp[left,shot15;]
true 320 clean-shot[shot15,ingredient4,left,right;]
true 40 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 93 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1;]
true 308 clean-shot[shot15,ingredient2,left,right;]
true 184 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,left,shot15;]
true 327 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 35 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 138 leave[left,shot15;]
true 361 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient3;]
true 274 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 252 nop[;]
true 335 grasp[right,shaker1;]
true 76 shake[cocktail7,ingredient2,ingredient3,shaker1,right,left;]
true 330 pour-shaker-to-shot[cocktail7,shot3,right,shaker1,l2,l1;]
true 395 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 10 clean-shaker[right,left,shaker1;]
true 80 leave[right,shaker1;]
true 301 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 303 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot15;]
true 387 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient3,dispenser1;]
true 376 grasp[left,shot15;]
true 288 clean-shot[shot15,ingredient3,left,right;]
true 69 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 161 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 338 clean-shot[shot15,ingredient1,left,right;]
true 379 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,left,shot15;]
true 132 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 68 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 44 leave[left,shot15;]
true 88 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient2;]
true 230 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 349 nop[;]
true 174 grasp[right,shaker1;]
true 334 shake[cocktail1,ingredient1,ingredient2,shaker1,right,left;]
true 34 pour-shaker-to-shot[cocktail1,shot4,right,shaker1,l2,l1;]
true 13 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 226 clean-shaker[right,left,shaker1;]
true 317 leave[right,shaker1;]
true 331 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 355 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot5;]
true 352 __method_precondition_m8_do_fill_shot_8_precondition[shot5,dispenser2,ingredient2;]
true 364 grasp[right,shot5;]
true 365 fill-shot[shot5,ingredient2,right,left,dispenser2;]
true 2 pour-shot-to-clean-shaker[shot5,ingredient2,shaker1,right,l0,l1;]
true 258 clean-shot[shot5,ingredient2,right,left;]
true 246 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,right,shot5;]
true 55 fill-shot[shot5,ingredient1,right,left,dispenser1;]
true 90 pour-shot-to-used-shaker[shot5,ingredient1,shaker1,right,l1,l2;]
true 64 leave[right,shot5;]
true 164 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient1;]
true 136 __method_precondition_m6_do_clean_shot_6_precondition[shot5,right;]
true 381 grasp[right,shot5;]
true 292 clean-shot[shot5,ingredient1,right,left;]
true 47 leave[right,shot5;]
true 416 grasp[left,shaker1;]
true 188 shake[cocktail8,ingredient2,ingredient1,shaker1,left,right;]
true 236 pour-shaker-to-shot[cocktail8,shot5,left,shaker1,l2,l1;]
true 418 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 151 clean-shaker[left,right,shaker1;]
true 116 leave[left,shaker1;]
true 417 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 60 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot12;]
true 358 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser4,ingredient4;]
true 122 grasp[right,shot12;]
true 167 fill-shot[shot12,ingredient4,right,left,dispenser4;]
true 299 pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,right,l0,l1;]
true 239 clean-shot[shot12,ingredient4,right,left;]
true 382 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,right,shot12;]
true 160 fill-shot[shot12,ingredient1,right,left,dispenser1;]
true 46 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,right,l1,l2;]
true 107 leave[right,shot12;]
true 359 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient1;]
true 325 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 117 nop[;]
true 244 grasp[left,shaker1;]
true 351 shake[cocktail3,ingredient4,ingredient1,shaker1,left,right;]
true 324 pour-shaker-to-shot[cocktail3,shot6,left,shaker1,l2,l1;]
true 24 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 340 clean-shaker[left,right,shaker1;]
true 112 leave[left,shaker1;]
true 62 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 391 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot7;]
true 205 __method_precondition_m8_do_fill_shot_8_precondition[shot7,dispenser1,ingredient1;]
true 186 grasp[right,shot7;]
true 309 fill-shot[shot7,ingredient1,right,left,dispenser1;]
true 0 pour-shot-to-clean-shaker[shot7,ingredient1,shaker1,right,l0,l1;]
true 57 clean-shot[shot7,ingredient1,right,left;]
true 53 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,right,shot7;]
true 162 fill-shot[shot7,ingredient4,right,left,dispenser4;]
true 414 pour-shot-to-used-shaker[shot7,ingredient4,shaker1,right,l1,l2;]
true 182 leave[right,shot7;]
true 170 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient4;]
true 45 __method_precondition_m6_do_clean_shot_6_precondition[shot7,right;]
true 305 grasp[right,shot7;]
true 269 clean-shot[shot7,ingredient4,right,left;]
true 165 leave[right,shot7;]
true 142 grasp[left,shaker1;]
true 23 shake[cocktail4,ingredient1,ingredient4,shaker1,left,right;]
true 37 pour-shaker-to-shot[cocktail4,shot7,left,shaker1,l2,l1;]
true 9 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 114 clean-shaker[left,right,shaker1;]
true 4 leave[left,shaker1;]
true 125 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 70 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot15;]
true 396 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient2,dispenser3;]
true 290 grasp[left,shot15;]
true 43 clean-shot[shot15,ingredient2,left,right;]
true 197 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 406 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 8 clean-shot[shot15,ingredient3,left,right;]
true 420 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient1,left,shot15;]
true 91 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 390 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,left,l1,l2;]
true 100 leave[left,shot15;]
true 323 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient1;]
true 339 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 237 nop[;]
true 363 grasp[right,shaker1;]
true 263 shake[cocktail11,ingredient3,ingredient1,shaker1,right,left;]
true 83 pour-shaker-to-shot[cocktail11,shot8,right,shaker1,l2,l1;]
true 423 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 234 clean-shaker[right,left,shaker1;]
true 41 leave[right,shaker1;]
true 54 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 408 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient1,shot13;]
true 147 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser1,ingredient1;]
true 189 grasp[left,shot13;]
true 202 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 310 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 201 clean-shot[shot13,ingredient1,left,right;]
true 403 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient2,left,shot13;]
true 344 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 413 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 240 leave[left,shot13;]
true 229 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient1,ingredient2;]
true 79 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 6 nop[;]
true 5 grasp[left,shaker1;]
true 17 shake[cocktail2,ingredient1,ingredient2,shaker1,left,right;]
true 386 pour-shaker-to-shot[cocktail2,shot9,left,shaker1,l2,l1;]
true 400 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 109 clean-shaker[left,right,shaker1;]
true 120 leave[left,shaker1;]
true 175 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 14 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot12;]
true 180 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient1,dispenser3;]
true 105 grasp[right,shot12;]
true 348 clean-shot[shot12,ingredient1,right,left;]
true 242 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 328 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1;]
true 397 clean-shot[shot12,ingredient3,right,left;]
true 51 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot12;]
true 211 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 284 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2;]
true 7 leave[right,shot12;]
true 196 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient2;]
true 145 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 259 nop[;]
true 130 grasp[left,shaker1;]
true 254 shake[cocktail5,ingredient3,ingredient2,shaker1,left,right;]
true 278 pour-shaker-to-shot[cocktail5,shot10,left,shaker1,l2,l1;]
true 77 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 163 clean-shaker[left,right,shaker1;]
true 314 leave[left,shaker1;]
true 94 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 61 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient3,shot13;]
true 98 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient2,dispenser3;]
true 281 grasp[left,shot13;]
true 425 clean-shot[shot13,ingredient2,left,right;]
true 115 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 356 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 411 clean-shot[shot13,ingredient3,left,right;]
true 86 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient2,left,shot13;]
true 103 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 405 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 260 leave[left,shot13;]
true 304 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient3,ingredient2;]
true 407 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 282 nop[;]
true 373 grasp[right,shaker1;]
true 220 shake[cocktail6,ingredient3,ingredient2,shaker1,right,left;]
true 222 pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1;]
true 118 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 217 clean-shaker[right,left,shaker1;]
true 58 leave[right,shaker1;]
true 241 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 368 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient2,dispenser1;]
true 66 grasp[left,shot12;]
true 67 clean-shot[shot12,ingredient2,left,right;]
true 315 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 169 leave[left,shot12;]
true 143 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 329 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient2,dispenser3;]
true 150 grasp[left,shot13;]
true 157 clean-shot[shot13,ingredient2,left,right;]
true 28 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 253 leave[left,shot13;]
true 343 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left;]
true 123 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot14;]
true 208 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser3,ingredient3;]
true 74 grasp[left,shot14;]
true 134 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 367 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1;]
true 154 clean-shot[shot14,ingredient3,left,right;]
true 18 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot14;]
true 206 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 195 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,left,l1,l2;]
true 183 leave[left,shot14;]
true 298 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient4;]
true 71 __method_precondition_m6_do_clean_shot_6_precondition[shot14,right;]
true 369 grasp[right,shot14;]
true 347 clean-shot[shot14,ingredient4,right,left;]
true 402 leave[right,shot14;]
true 21 grasp[left,shaker1;]
true 204 shake[cocktail10,ingredient3,ingredient4,shaker1,left,right;]
true 266 pour-shaker-to-shot[cocktail10,shot14,left,shaker1,l2,l1;]
true 72 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 216 clean-shaker[left,right,shaker1;]
true 283 leave[left,shaker1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 4600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 6900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 9200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 11500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 13800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 16100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 18400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 20700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 23000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 25300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 27600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 29900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 32200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 34500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 36800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 39100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 41400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 43700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 46000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 48300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 50600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 52900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 55200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 57500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 59800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 62100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 64400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 66700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 69000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 71300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 73600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 75900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 78200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 80500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 82800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 85100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 87400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 89700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 92000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 94300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 96600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 98900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 101200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 103500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 105800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 108100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 110400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 112700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 115000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 117300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 119600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 121900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 124200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 126500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 128800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 131100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 133400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 135700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 138000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 140300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 142600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 144900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 147200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 149500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 151800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 154100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 156400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 158700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 161000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 163300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 165600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 167900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 170200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 172500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 174800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 177100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 179400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 181700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 184000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 186300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 188600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 190900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 193200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 195500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 197800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 200100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 202400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 204700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 207000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 209300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 211600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 213900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 216200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 218500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 220800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 223100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 225400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 227700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 230000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 232300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 234600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 236900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 239200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 241500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 243800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 246100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 248400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 250700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 253000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 255300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 257600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 259900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 262200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 264500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 266800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 269100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 271400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 273700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 276000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 278300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 280600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 282900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 285200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 287500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 126
ICAPS: 289800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 127
ICAPS: 292100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 128
ICAPS: 294400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 129
ICAPS: 296700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 130
ICAPS: 299000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 131
ICAPS: 301300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 132
ICAPS: 303600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 133
ICAPS: 305900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 134
ICAPS: 308200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 135
ICAPS: 310500
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.100 MEMPEAK_KBS 705659.904
