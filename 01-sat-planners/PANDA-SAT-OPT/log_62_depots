PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p02.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p02.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p02.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Grounded planning graph ... done in 241ms.
	Number of Grounded Actions 179
	Number of Grounded Literals 76
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Grounding ... done.
	number of abstract tasks = 60
	number of tasks = 184
	number of decomposition methods = 126
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 60
	number of tasks = 184
	number of decomposition methods = 126
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 38ms.
	Number of Grounded Actions 124
	Number of Grounded Literals 65
	number of abstract tasks = 60
	number of tasks = 184
	number of decomposition methods = 126
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 60
	number of tasks = 184
	number of decomposition methods = 126
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 61
	number of tasks = 185
	number of decomposition methods = 127
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 61
	number of tasks = 185
	number of decomposition methods = 127
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 10ms.
	Number of Grounded Actions 124
	Number of Grounded Literals 65
	number of abstract tasks = 61
	number of tasks = 185
	number of decomposition methods = 127
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 61
	number of tasks = 185
	number of decomposition methods = 127
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 61
	number of tasks = 185
	number of decomposition methods = 127
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 61
	number of tasks = 185
	number of decomposition methods = 127
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 61
	number of tasks = 185
	number of decomposition methods = 127
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Tasks 124 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773499ms

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 12 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 102 will abort at 9223372036854773454
done
PDT has 8 leafs
SHOP LEAFS 8
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 6240
Size 6240 at 0/124
Size 2582
Size 2582 at 0/124
Size 1447
Size 1447 at 0/124
Size 1159
Size 1159 at 0/124
Size 495
Size 495 at 0/124
Size 451
Size 451 at 0/124
Size 451
Invariant time: 0.132
Number of invariants: 451
Invariant Clauses 4059
NUMBER OF CLAUSES 5238
NUMBER OF STATE CLAUSES 5168
NUMBER OF DECOMPOSITION CLAUSES 70
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.66% 1.34% 0.0% 
NUMBER OF PATHS 8
Starting cryptominisat5.5
Setting starttime of solver to 1604507477503
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 54 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 32 leafs
SHOP LEAFS 20
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854772783
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 14883
NUMBER OF CLAUSES 20469
NUMBER OF STATE CLAUSES 19411
NUMBER OF DECOMPOSITION CLAUSES 1058
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 94.83% 5.17% 0.0% 
NUMBER OF PATHS 32
Starting cryptominisat5.5
Setting starttime of solver to 1604507477927
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 101 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 65 leafs
SHOP LEAFS 35
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854772427
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 29766
NUMBER OF CLAUSES 41839
NUMBER OF STATE CLAUSES 39049
NUMBER OF DECOMPOSITION CLAUSES 2790
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 93.33% 6.67% 0.0% 
NUMBER OF PATHS 65
Starting cryptominisat5.5
Setting starttime of solver to 1604507478354
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 143 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 135 leafs
SHOP LEAFS 75
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 101 will abort at 9223372036854771959
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 61336
NUMBER OF CLAUSES 86755
NUMBER OF STATE CLAUSES 80604
NUMBER OF DECOMPOSITION CLAUSES 6151
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 92.91% 7.09% 0.0% 
NUMBER OF PATHS 135
Starting cryptominisat5.5
Setting starttime of solver to 1604507478936
Command exited with non-zero status 10
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^4_1;4;1;1,116 116 m4_do_clear
1;4;1;1 63 pathaction!4_1;4;1;1,85
Consider method^2_1;2,76 76 _m3_do_put_on_2
1;2 7 pathaction!2_1;2,94
Consider method^2_3;1,120 120 m7_do_get_truck
3;1 22 pathaction!2_3;1,147
Consider method^4_1;4;1;3,85 85 m6_do_get_truck
1;4;1;3 38 pathaction!4_1;4;1;3,152
Consider method^4_2;2;4;2,50 50 m4_do_clear
2;2;4;2 6 pathaction!4_2;2;4;2,84
Consider method^3_2;2;4,97 97 m10_do_load_truck
2;2;4 67 pathaction!3_2;2;4,44
Consider method^4_1;2;4;1,49 49 m7_do_get_truck
1;2;4;1 21 pathaction!4_1;2;4;1,151
Consider method^2_2;2,77 77 _m3_do_put_on_2
2;2 69 pathaction!2_2;2,99
Consider method^3_1;2;4,72 72 m10_do_load_truck
1;2;4 62 pathaction!3_1;2;4,40
Consider method^3_2;4;1,112 112 m4_do_clear
2;4;1 16 pathaction!3_2;4;1,82
Consider method^1_1,105 105 m3_do_put_on
1 8 pathaction!1_1,103
Consider method^4_1;2;4;2,12 12 m4_do_clear
1;2;4;2 34 pathaction!4_1;2;4;2,79
Consider method^0_,126 126 __top_1
 27 pathaction!0_,184
Consider method^1_2,7 7 m3_do_put_on
2 61 pathaction!1_2,104
Consider method^2_1;4,30 30 m11_do_unload_truck
1;4 15 pathaction!2_1;4,169
Consider method^1_0,123 123 m0_do_put_on
0 48 pathaction!1_0,101
Consider method^2_3;2,17 17 m4_do_clear
3;2 19 pathaction!2_3;2,80
Consider method^1_3,13 13 m2_do_put_on
3 41 pathaction!1_3,102
Consider method^4_2;2;4;1,49 49 m7_do_get_truck
2;2;4;1 55 pathaction!4_2;2;4;1,151
Consider method^3_1;4;1,34 34 m5_do_clear
1;4;1 47 pathaction!3_1;4;1,83
Consider method^2_2;4,73 73 m11_do_unload_truck
2;4 24 pathaction!2_2;4,171


CHECKING primitive solution of length 40 ...
true 5 __method_precondition_m0_do_put_on_0_precondition[crate3,pallet1;]
true 11 nop[;]
true 56 __method_precondition_m10_do_load_truck_10_precondition[crate2,distributor1,crate1,hoist2;]
true 59 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 53 Drive[truck0,depot0,distributor1;]
true 44 __method_precondition_m4_do_clear_4_precondition[crate2,distributor1;]
true 9 nop[;]
true 66 Lift[hoist2,crate2,crate1,distributor1;]
true 29 Load[hoist2,crate2,truck0,distributor1;]
true 30 Drive[truck0,distributor1,depot0;]
true 2 __method_precondition_m11_do_unload_truck_11_precondition[hoist0,pallet0,depot0,crate2,truck0;]
true 17 __method_precondition_m5_do_clear_5_precondition[pallet0,crate0,depot0,hoist0;]
true 23 __method_precondition_m4_do_clear_4_precondition[crate0,depot0;]
true 45 nop[;]
true 65 Lift[hoist0,crate0,pallet0,depot0;]
true 14 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 10 nop[;]
true 39 Load[hoist0,crate0,truck1,depot0;]
true 35 Unload[hoist0,crate2,truck0,depot0;]
true 1 Drop[hoist0,crate2,pallet0,depot0;]
true 28 __method_precondition_m10_do_load_truck_10_precondition[crate1,distributor1,pallet2,hoist2;]
true 0 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 46 Drive[truck0,depot0,distributor1;]
true 68 __method_precondition_m4_do_clear_4_precondition[crate1,distributor1;]
true 3 nop[;]
true 12 Lift[hoist2,crate1,pallet2,distributor1;]
true 18 Load[hoist2,crate1,truck0,distributor1;]
true 26 Drive[truck0,distributor1,distributor0;]
true 42 __method_precondition_m11_do_unload_truck_11_precondition[hoist1,crate3,distributor0,crate1,truck0;]
true 33 __method_precondition_m4_do_clear_4_precondition[crate3,distributor0;]
true 43 nop[;]
true 50 Unload[hoist1,crate1,truck0,distributor0;]
true 51 Drop[hoist1,crate1,crate3,distributor0;]
true 60 __method_precondition_m2_do_put_on_2_precondition[crate0,truck1;]
true 20 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 40 Drive[truck1,depot0,distributor1;]
true 52 __method_precondition_m4_do_clear_4_precondition[pallet2,distributor1;]
true 36 nop[;]
true 4 Unload[hoist2,crate0,truck1,distributor1;]
true 57 Drop[hoist2,crate0,pallet2,distributor1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 124
TSTG: 6
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 248
TSTG: 6
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 372
TSTG: 6
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 496
TSTG: 6
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 5
ICAPS: 620
TSTG: 6
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 744
TSTG: 6
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 868
TSTG: 6
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 8
ICAPS: 992
TSTG: 6
Method: 2147483647
DP max: 5
Taking minimum: 5
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 24
  lower bound = 7

Running SAT search with cost bound = 15
==================================================
  upper bound = 24
  lower bound = 7
LEN 15
ICAPS: 1860
TSTG: 6
Method: 2147483647
DP max: 6
Taking minimum: 6
Generating initial PDT ... done
initial PDT has 155 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 155 leafs
SHOP LEAFS 83
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854770988
Generating clauses representing decomposition ... done
At most K: 4ms input: 346 K = 15
Number of actions Formula: 24ms for 10710 clauses
Layers: 8 paths 155
Layer 1 g 0 = 0 - 1 / 0 clauses 12246
Layer 1 g 1 = 2 - 3 / 2 clauses 12246
Layer 1 g 2 = 4 - 5 / 4 clauses 12246
Layer 1 g 3 = 6 - 7 / 6 clauses 12246
Layer 1 g 4 = 8 - 9 / 8 clauses 12246
Layer 1 g 5 = 10 - 11 / 10 clauses 12246
Layer 1 g 6 = 12 - 13 / 12 clauses 12246
Layer 1 g 7 = 14 - 15 / 14 clauses 12246
Layer 1 g 8 = 16 - 17 / 16 clauses 12246
Layer 1 g 9 = 18 - 19 / 18 clauses 12246
Layer 1 g 10 = 20 - 21 / 20 clauses 12246
Layer 1 g 11 = 22 - 23 / 22 clauses 12246
Layer 1 g 12 = 24 - 25 / 24 clauses 12246
Layer 1 g 13 = 26 - 27 / 26 clauses 12246
Layer 1 g 14 = 28 - 29 / 28 clauses 12246
Layer 1 g 15 = 30 - 31 / 30 clauses 12246
Layer 1 g 16 = 32 - 33 / 32 clauses 12246
Layer 1 g 17 = 34 - 35 / 34 clauses 12246
Layer 1 g 18 = 36 - 37 / 36 clauses 12246
Layer 1 g 19 = 38 - 39 / 38 clauses 12246
Layer 1 g 20 = 40 - 41 / 40 clauses 12246
Layer 1 g 21 = 42 - 43 / 42 clauses 12246
Layer 1 g 22 = 44 - 45 / 44 clauses 12246
Layer 1 g 23 = 46 - 47 / 46 clauses 12246
Layer 1 g 24 = 48 - 49 / 48 clauses 12246
Layer 1 g 25 = 50 - 51 / 50 clauses 12246
Layer 1 g 26 = 52 - 53 / 52 clauses 12246
Layer 1 g 27 = 54 - 55 / 54 clauses 12246
Layer 1 g 28 = 56 - 57 / 56 clauses 12246
Layer 1 g 29 = 58 - 59 / 58 clauses 12246
Layer 1 g 30 = 60 - 61 / 60 clauses 12246
Layer 1 g 31 = 62 - 63 / 62 clauses 12246
Layer 1 g 32 = 64 - 65 / 64 clauses 12246
Layer 1 g 33 = 66 - 67 / 66 clauses 12246
Layer 1 g 34 = 68 - 69 / 68 clauses 12246
Layer 1 g 35 = 70 - 71 / 70 clauses 12246
Layer 1 g 36 = 72 - 73 / 72 clauses 12246
Layer 1 g 37 = 74 - 75 / 74 clauses 12246
Layer 1 g 38 = 76 - 77 / 76 clauses 12246
Layer 1 g 39 = 78 - 79 / 78 clauses 12246
Layer 1 g 40 = 80 - 81 / 80 clauses 12246
Layer 1 g 41 = 82 - 83 / 82 clauses 12246
Layer 1 g 42 = 84 - 85 / 84 clauses 12246
Layer 1 g 43 = 86 - 87 / 86 clauses 12246
Layer 1 g 44 = 88 - 89 / 88 clauses 12246
Layer 1 g 45 = 90 - 91 / 90 clauses 12246
Layer 1 g 46 = 92 - 93 / 92 clauses 12246
Layer 1 g 47 = 94 - 95 / 94 clauses 12246
Layer 1 g 48 = 96 - 97 / 96 clauses 12246
Layer 1 g 49 = 98 - 99 / 98 clauses 12246
Layer 1 g 50 = 100 - 101 / 100 clauses 12246
Layer 1 g 51 = 102 - 103 / 102 clauses 12246
Layer 1 g 52 = 104 - 105 / 104 clauses 12246
Layer 1 g 53 = 106 - 107 / 106 clauses 12246
Layer 1 g 54 = 108 - 109 / 108 clauses 12246
Layer 1 g 55 = 110 - 111 / 110 clauses 12246
Layer 1 g 56 = 112 - 113 / 112 clauses 12246
Layer 1 g 57 = 114 - 115 / 114 clauses 12246
Layer 1 g 58 = 116 - 117 / 116 clauses 12246
Layer 1 g 59 = 118 - 119 / 118 clauses 12246
Layer 1 g 60 = 120 - 121 / 120 clauses 12246
Layer 1 g 61 = 122 - 123 / 122 clauses 12246
Layer 1 g 62 = 124 - 125 / 124 clauses 12246
Layer 1 g 63 = 126 - 127 / 126 clauses 12246
Layer 1 g 64 = 128 - 129 / 128 clauses 12246
Layer 1 g 65 = 130 - 131 / 130 clauses 12246
Layer 1 g 66 = 132 - 133 / 132 clauses 12246
Layer 1 g 67 = 134 - 135 / 134 clauses 12246
Layer 1 g 68 = 136 - 137 / 136 clauses 12246
Layer 1 g 69 = 138 - 139 / 138 clauses 12246
Layer 1 g 70 = 140 - 141 / 140 clauses 12246
Layer 1 g 71 = 142 - 143 / 142 clauses 12246
Layer 1 g 72 = 144 - 145 / 144 clauses 12246
Layer 1 g 73 = 146 - 147 / 146 clauses 12246
Layer 1 g 74 = 148 - 149 / 148 clauses 12246
Layer 1 g 75 = 150 - 151 / 150 clauses 12246
Layer 1 g 76 = 152 - 153 / 152 clauses 12246
Layer 2 g 0 = 0 - 3 / 1 clauses 12246
Layer 2 g 1 = 4 - 7 / 5 clauses 12246
Layer 2 g 2 = 8 - 11 / 9 clauses 12246
Layer 2 g 3 = 12 - 15 / 13 clauses 12246
Layer 2 g 4 = 16 - 19 / 17 clauses 12246
Layer 2 g 5 = 20 - 23 / 21 clauses 12246
Layer 2 g 6 = 24 - 27 / 25 clauses 12246
Layer 2 g 7 = 28 - 31 / 29 clauses 12246
Layer 2 g 8 = 32 - 35 / 33 clauses 12246
Layer 2 g 9 = 36 - 39 / 37 clauses 12246
Layer 2 g 10 = 40 - 43 / 41 clauses 12246
Layer 2 g 11 = 44 - 47 / 45 clauses 12246
Layer 2 g 12 = 48 - 51 / 49 clauses 12246
Layer 2 g 13 = 52 - 55 / 53 clauses 12246
Layer 2 g 14 = 56 - 59 / 57 clauses 12246
Layer 2 g 15 = 60 - 63 / 61 clauses 12246
Layer 2 g 16 = 64 - 67 / 65 clauses 12246
Layer 2 g 17 = 68 - 71 / 69 clauses 12246
Layer 2 g 18 = 72 - 75 / 73 clauses 12246
Layer 2 g 19 = 76 - 79 / 77 clauses 12246
Layer 2 g 20 = 80 - 83 / 81 clauses 12246
Layer 2 g 21 = 84 - 87 / 85 clauses 12246
Layer 2 g 22 = 88 - 91 / 89 clauses 12246
Layer 2 g 23 = 92 - 95 / 93 clauses 12246
Layer 2 g 24 = 96 - 99 / 97 clauses 12246
Layer 2 g 25 = 100 - 103 / 101 clauses 12246
Layer 2 g 26 = 104 - 107 / 105 clauses 12246
Layer 2 g 27 = 108 - 111 / 109 clauses 12246
Layer 2 g 28 = 112 - 115 / 113 clauses 12246
Layer 2 g 29 = 116 - 119 / 117 clauses 12246
Layer 2 g 30 = 120 - 123 / 121 clauses 12246
Layer 2 g 31 = 124 - 127 / 125 clauses 12246
Layer 2 g 32 = 128 - 131 / 129 clauses 12246
Layer 2 g 33 = 132 - 135 / 133 clauses 12246
Layer 2 g 34 = 136 - 139 / 137 clauses 12246
Layer 2 g 35 = 140 - 143 / 141 clauses 12246
Layer 2 g 36 = 144 - 147 / 145 clauses 12246
Layer 2 g 37 = 148 - 151 / 149 clauses 12246
Layer 2 g 38 = 152 - 154 / 153 clauses 12246
Layer 3 g 0 = 0 - 7 / 3 clauses 12246
Layer 3 g 1 = 8 - 15 / 11 clauses 12246
Layer 3 g 2 = 16 - 23 / 19 clauses 12246
Layer 3 g 3 = 24 - 31 / 27 clauses 12246
Layer 3 g 4 = 32 - 39 / 35 clauses 12246
Layer 3 g 5 = 40 - 47 / 43 clauses 12246
Layer 3 g 6 = 48 - 55 / 51 clauses 12246
Layer 3 g 7 = 56 - 63 / 59 clauses 12246
Layer 3 g 8 = 64 - 71 / 67 clauses 12246
Layer 3 g 9 = 72 - 79 / 75 clauses 12246
Layer 3 g 10 = 80 - 87 / 83 clauses 12246
Layer 3 g 11 = 88 - 95 / 91 clauses 12246
Layer 3 g 12 = 96 - 103 / 99 clauses 12246
Layer 3 g 13 = 104 - 111 / 107 clauses 12246
Layer 3 g 14 = 112 - 119 / 115 clauses 12246
Layer 3 g 15 = 120 - 127 / 123 clauses 12246
Layer 3 g 16 = 128 - 135 / 131 clauses 12246
Layer 3 g 17 = 136 - 143 / 139 clauses 12246
Layer 3 g 18 = 144 - 151 / 147 clauses 12246
Layer 3 g 19 = 152 - 154 / 155 clauses 12246
Layer 4 g 0 = 0 - 15 / 7 clauses 12246
Layer 4 g 1 = 16 - 31 / 23 clauses 12246
Layer 4 g 2 = 32 - 47 / 39 clauses 12246
Layer 4 g 3 = 48 - 63 / 55 clauses 12246
Layer 4 g 4 = 64 - 79 / 71 clauses 12246
Layer 4 g 5 = 80 - 95 / 87 clauses 12246
Layer 4 g 6 = 96 - 111 / 103 clauses 12246
Layer 4 g 7 = 112 - 127 / 119 clauses 12246
Layer 4 g 8 = 128 - 143 / 135 clauses 12246
Layer 4 g 9 = 144 - 154 / 151 clauses 12246
Layer 5 g 0 = 0 - 31 / 15 clauses 12246
Layer 5 g 1 = 32 - 63 / 47 clauses 12246
Layer 5 g 2 = 64 - 95 / 79 clauses 12246
Layer 5 g 3 = 96 - 127 / 111 clauses 12246
Layer 5 g 4 = 128 - 154 / 143 clauses 12246
Layer 6 g 0 = 0 - 63 / 31 clauses 12246
Layer 6 g 1 = 64 - 127 / 95 clauses 12246
Layer 6 g 2 = 128 - 154 / 159 clauses 12246
Layer 7 g 0 = 0 - 127 / 63 clauses 12246
Layer 7 g 1 = 128 - 154 / 191 clauses 12246
Layer 8 g 0 = 0 - 154 / 127 clauses 12246
Invariant Clauses 70356
NUMBER OF CLAUSES 2057739
NUMBER OF STATE CLAUSES 2040166
NUMBER OF DECOMPOSITION CLAUSES 17573
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.15% 0.85% 0.0% 
NUMBER OF PATHS 155
Starting cryptominisat5.5
Setting starttime of solver to 1604507482926
Command exited with non-zero status 20
0.50 0.00

Time command gave the following runtime for the solver: 500
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 19
==================================================
  upper bound = 24
  lower bound = 15
LEN 19
ICAPS: 2356
TSTG: 6
Method: 2147483647
DP max: 6
Taking minimum: 6
Generating initial PDT ... done
initial PDT has 155 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 155 leafs
SHOP LEAFS 83
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854766744
done
At most K: 3ms input: 346 K = 19
Number of actions Formula: 4ms for 13474 clauses
Layers: 8 paths 155
Layer 1 g 0 = 0 - 1 / 0 clauses 12246
Layer 1 g 1 = 2 - 3 / 2 clauses 12246
Layer 1 g 2 = 4 - 5 / 4 clauses 12246
Layer 1 g 3 = 6 - 7 / 6 clauses 12246
Layer 1 g 4 = 8 - 9 / 8 clauses 12246
Layer 1 g 5 = 10 - 11 / 10 clauses 12246
Layer 1 g 6 = 12 - 13 / 12 clauses 12246
Layer 1 g 7 = 14 - 15 / 14 clauses 12246
Layer 1 g 8 = 16 - 17 / 16 clauses 12246
Layer 1 g 9 = 18 - 19 / 18 clauses 12246
Layer 1 g 10 = 20 - 21 / 20 clauses 12246
Layer 1 g 11 = 22 - 23 / 22 clauses 12246
Layer 1 g 12 = 24 - 25 / 24 clauses 12246
Layer 1 g 13 = 26 - 27 / 26 clauses 12246
Layer 1 g 14 = 28 - 29 / 28 clauses 12246
Layer 1 g 15 = 30 - 31 / 30 clauses 12246
Layer 1 g 16 = 32 - 33 / 32 clauses 12246
Layer 1 g 17 = 34 - 35 / 34 clauses 12246
Layer 1 g 18 = 36 - 37 / 36 clauses 12246
Layer 1 g 19 = 38 - 39 / 38 clauses 12246
Layer 1 g 20 = 40 - 41 / 40 clauses 12246
Layer 1 g 21 = 42 - 43 / 42 clauses 12246
Layer 1 g 22 = 44 - 45 / 44 clauses 12246
Layer 1 g 23 = 46 - 47 / 46 clauses 12246
Layer 1 g 24 = 48 - 49 / 48 clauses 12246
Layer 1 g 25 = 50 - 51 / 50 clauses 12246
Layer 1 g 26 = 52 - 53 / 52 clauses 12246
Layer 1 g 27 = 54 - 55 / 54 clauses 12246
Layer 1 g 28 = 56 - 57 / 56 clauses 12246
Layer 1 g 29 = 58 - 59 / 58 clauses 12246
Layer 1 g 30 = 60 - 61 / 60 clauses 12246
Layer 1 g 31 = 62 - 63 / 62 clauses 12246
Layer 1 g 32 = 64 - 65 / 64 clauses 12246
Layer 1 g 33 = 66 - 67 / 66 clauses 12246
Layer 1 g 34 = 68 - 69 / 68 clauses 12246
Layer 1 g 35 = 70 - 71 / 70 clauses 12246
Layer 1 g 36 = 72 - 73 / 72 clauses 12246
Layer 1 g 37 = 74 - 75 / 74 clauses 12246
Layer 1 g 38 = 76 - 77 / 76 clauses 12246
Layer 1 g 39 = 78 - 79 / 78 clauses 12246
Layer 1 g 40 = 80 - 81 / 80 clauses 12246
Layer 1 g 41 = 82 - 83 / 82 clauses 12246
Layer 1 g 42 = 84 - 85 / 84 clauses 12246
Layer 1 g 43 = 86 - 87 / 86 clauses 12246
Layer 1 g 44 = 88 - 89 / 88 clauses 12246
Layer 1 g 45 = 90 - 91 / 90 clauses 12246
Layer 1 g 46 = 92 - 93 / 92 clauses 12246
Layer 1 g 47 = 94 - 95 / 94 clauses 12246
Layer 1 g 48 = 96 - 97 / 96 clauses 12246
Layer 1 g 49 = 98 - 99 / 98 clauses 12246
Layer 1 g 50 = 100 - 101 / 100 clauses 12246
Layer 1 g 51 = 102 - 103 / 102 clauses 12246
Layer 1 g 52 = 104 - 105 / 104 clauses 12246
Layer 1 g 53 = 106 - 107 / 106 clauses 12246
Layer 1 g 54 = 108 - 109 / 108 clauses 12246
Layer 1 g 55 = 110 - 111 / 110 clauses 12246
Layer 1 g 56 = 112 - 113 / 112 clauses 12246
Layer 1 g 57 = 114 - 115 / 114 clauses 12246
Layer 1 g 58 = 116 - 117 / 116 clauses 12246
Layer 1 g 59 = 118 - 119 / 118 clauses 12246
Layer 1 g 60 = 120 - 121 / 120 clauses 12246
Layer 1 g 61 = 122 - 123 / 122 clauses 12246
Layer 1 g 62 = 124 - 125 / 124 clauses 12246
Layer 1 g 63 = 126 - 127 / 126 clauses 12246
Layer 1 g 64 = 128 - 129 / 128 clauses 12246
Layer 1 g 65 = 130 - 131 / 130 clauses 12246
Layer 1 g 66 = 132 - 133 / 132 clauses 12246
Layer 1 g 67 = 134 - 135 / 134 clauses 12246
Layer 1 g 68 = 136 - 137 / 136 clauses 12246
Layer 1 g 69 = 138 - 139 / 138 clauses 12246
Layer 1 g 70 = 140 - 141 / 140 clauses 12246
Layer 1 g 71 = 142 - 143 / 142 clauses 12246
Layer 1 g 72 = 144 - 145 / 144 clauses 12246
Layer 1 g 73 = 146 - 147 / 146 clauses 12246
Layer 1 g 74 = 148 - 149 / 148 clauses 12246
Layer 1 g 75 = 150 - 151 / 150 clauses 12246
Layer 1 g 76 = 152 - 153 / 152 clauses 12246
Layer 2 g 0 = 0 - 3 / 1 clauses 12246
Layer 2 g 1 = 4 - 7 / 5 clauses 12246
Layer 2 g 2 = 8 - 11 / 9 clauses 12246
Layer 2 g 3 = 12 - 15 / 13 clauses 12246
Layer 2 g 4 = 16 - 19 / 17 clauses 12246
Layer 2 g 5 = 20 - 23 / 21 clauses 12246
Layer 2 g 6 = 24 - 27 / 25 clauses 12246
Layer 2 g 7 = 28 - 31 / 29 clauses 12246
Layer 2 g 8 = 32 - 35 / 33 clauses 12246
Layer 2 g 9 = 36 - 39 / 37 clauses 12246
Layer 2 g 10 = 40 - 43 / 41 clauses 12246
Layer 2 g 11 = 44 - 47 / 45 clauses 12246
Layer 2 g 12 = 48 - 51 / 49 clauses 12246
Layer 2 g 13 = 52 - 55 / 53 clauses 12246
Layer 2 g 14 = 56 - 59 / 57 clauses 12246
Layer 2 g 15 = 60 - 63 / 61 clauses 12246
Layer 2 g 16 = 64 - 67 / 65 clauses 12246
Layer 2 g 17 = 68 - 71 / 69 clauses 12246
Layer 2 g 18 = 72 - 75 / 73 clauses 12246
Layer 2 g 19 = 76 - 79 / 77 clauses 12246
Layer 2 g 20 = 80 - 83 / 81 clauses 12246
Layer 2 g 21 = 84 - 87 / 85 clauses 12246
Layer 2 g 22 = 88 - 91 / 89 clauses 12246
Layer 2 g 23 = 92 - 95 / 93 clauses 12246
Layer 2 g 24 = 96 - 99 / 97 clauses 12246
Layer 2 g 25 = 100 - 103 / 101 clauses 12246
Layer 2 g 26 = 104 - 107 / 105 clauses 12246
Layer 2 g 27 = 108 - 111 / 109 clauses 12246
Layer 2 g 28 = 112 - 115 / 113 clauses 12246
Layer 2 g 29 = 116 - 119 / 117 clauses 12246
Layer 2 g 30 = 120 - 123 / 121 clauses 12246
Layer 2 g 31 = 124 - 127 / 125 clauses 12246
Layer 2 g 32 = 128 - 131 / 129 clauses 12246
Layer 2 g 33 = 132 - 135 / 133 clauses 12246
Layer 2 g 34 = 136 - 139 / 137 clauses 12246
Layer 2 g 35 = 140 - 143 / 141 clauses 12246
Layer 2 g 36 = 144 - 147 / 145 clauses 12246
Layer 2 g 37 = 148 - 151 / 149 clauses 12246
Layer 2 g 38 = 152 - 154 / 153 clauses 12246
Layer 3 g 0 = 0 - 7 / 3 clauses 12246
Layer 3 g 1 = 8 - 15 / 11 clauses 12246
Layer 3 g 2 = 16 - 23 / 19 clauses 12246
Layer 3 g 3 = 24 - 31 / 27 clauses 12246
Layer 3 g 4 = 32 - 39 / 35 clauses 12246
Layer 3 g 5 = 40 - 47 / 43 clauses 12246
Layer 3 g 6 = 48 - 55 / 51 clauses 12246
Layer 3 g 7 = 56 - 63 / 59 clauses 12246
Layer 3 g 8 = 64 - 71 / 67 clauses 12246
Layer 3 g 9 = 72 - 79 / 75 clauses 12246
Layer 3 g 10 = 80 - 87 / 83 clauses 12246
Layer 3 g 11 = 88 - 95 / 91 clauses 12246
Layer 3 g 12 = 96 - 103 / 99 clauses 12246
Layer 3 g 13 = 104 - 111 / 107 clauses 12246
Layer 3 g 14 = 112 - 119 / 115 clauses 12246
Layer 3 g 15 = 120 - 127 / 123 clauses 12246
Layer 3 g 16 = 128 - 135 / 131 clauses 12246
Layer 3 g 17 = 136 - 143 / 139 clauses 12246
Layer 3 g 18 = 144 - 151 / 147 clauses 12246
Layer 3 g 19 = 152 - 154 / 155 clauses 12246
Layer 4 g 0 = 0 - 15 / 7 clauses 12246
Layer 4 g 1 = 16 - 31 / 23 clauses 12246
Layer 4 g 2 = 32 - 47 / 39 clauses 12246
Layer 4 g 3 = 48 - 63 / 55 clauses 12246
Layer 4 g 4 = 64 - 79 / 71 clauses 12246
Layer 4 g 5 = 80 - 95 / 87 clauses 12246
Layer 4 g 6 = 96 - 111 / 103 clauses 12246
Layer 4 g 7 = 112 - 127 / 119 clauses 12246
Layer 4 g 8 = 128 - 143 / 135 clauses 12246
Layer 4 g 9 = 144 - 154 / 151 clauses 12246
Layer 5 g 0 = 0 - 31 / 15 clauses 12246
Layer 5 g 1 = 32 - 63 / 47 clauses 12246
Layer 5 g 2 = 64 - 95 / 79 clauses 12246
Layer 5 g 3 = 96 - 127 / 111 clauses 12246
Layer 5 g 4 = 128 - 154 / 143 clauses 12246
Layer 6 g 0 = 0 - 63 / 31 clauses 12246
Layer 6 g 1 = 64 - 127 / 95 clauses 12246
Layer 6 g 2 = 128 - 154 / 159 clauses 12246
Layer 7 g 0 = 0 - 127 / 63 clauses 12246
Layer 7 g 1 = 128 - 154 / 191 clauses 12246
Layer 8 g 0 = 0 - 154 / 127 clauses 12246
Invariant Clauses 70356
NUMBER OF CLAUSES 2060503
NUMBER OF STATE CLAUSES 2040166
NUMBER OF DECOMPOSITION CLAUSES 20337
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.01% 0.99% 0.0% 
NUMBER OF PATHS 155
Starting cryptominisat5.5
Setting starttime of solver to 1604507486715
Command exited with non-zero status 20
0.52 0.01

Time command gave the following runtime for the solver: 530
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 21
==================================================
  upper bound = 24
  lower bound = 19
LEN 21
ICAPS: 2604
TSTG: 6
Method: 2147483647
DP max: 7
Taking minimum: 6
Generating initial PDT ... done
initial PDT has 155 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 155 leafs
SHOP LEAFS 83
Assignment implications
Generating clauses representing decomposition ... done
At most K: 3ms input: 346 K = 21
Number of actions Formula: 5ms for 14856 clauses
Still waiting ... running for 100 will abort at 9223372036854762932
Layers: 8 paths 155
Layer 1 g 0 = 0 - 1 / 0 clauses 12246
Layer 1 g 1 = 2 - 3 / 2 clauses 12246
Layer 1 g 2 = 4 - 5 / 4 clauses 12246
Layer 1 g 3 = 6 - 7 / 6 clauses 12246
Layer 1 g 4 = 8 - 9 / 8 clauses 12246
Layer 1 g 5 = 10 - 11 / 10 clauses 12246
Layer 1 g 6 = 12 - 13 / 12 clauses 12246
Layer 1 g 7 = 14 - 15 / 14 clauses 12246
Layer 1 g 8 = 16 - 17 / 16 clauses 12246
Layer 1 g 9 = 18 - 19 / 18 clauses 12246
Layer 1 g 10 = 20 - 21 / 20 clauses 12246
Layer 1 g 11 = 22 - 23 / 22 clauses 12246
Layer 1 g 12 = 24 - 25 / 24 clauses 12246
Layer 1 g 13 = 26 - 27 / 26 clauses 12246
Layer 1 g 14 = 28 - 29 / 28 clauses 12246
Layer 1 g 15 = 30 - 31 / 30 clauses 12246
Layer 1 g 16 = 32 - 33 / 32 clauses 12246
Layer 1 g 17 = 34 - 35 / 34 clauses 12246
Layer 1 g 18 = 36 - 37 / 36 clauses 12246
Layer 1 g 19 = 38 - 39 / 38 clauses 12246
Layer 1 g 20 = 40 - 41 / 40 clauses 12246
Layer 1 g 21 = 42 - 43 / 42 clauses 12246
Layer 1 g 22 = 44 - 45 / 44 clauses 12246
Layer 1 g 23 = 46 - 47 / 46 clauses 12246
Layer 1 g 24 = 48 - 49 / 48 clauses 12246
Layer 1 g 25 = 50 - 51 / 50 clauses 12246
Layer 1 g 26 = 52 - 53 / 52 clauses 12246
Layer 1 g 27 = 54 - 55 / 54 clauses 12246
Layer 1 g 28 = 56 - 57 / 56 clauses 12246
Layer 1 g 29 = 58 - 59 / 58 clauses 12246
Layer 1 g 30 = 60 - 61 / 60 clauses 12246
Layer 1 g 31 = 62 - 63 / 62 clauses 12246
Layer 1 g 32 = 64 - 65 / 64 clauses 12246
Layer 1 g 33 = 66 - 67 / 66 clauses 12246
Layer 1 g 34 = 68 - 69 / 68 clauses 12246
Layer 1 g 35 = 70 - 71 / 70 clauses 12246
Layer 1 g 36 = 72 - 73 / 72 clauses 12246
Layer 1 g 37 = 74 - 75 / 74 clauses 12246
Layer 1 g 38 = 76 - 77 / 76 clauses 12246
Layer 1 g 39 = 78 - 79 / 78 clauses 12246
Layer 1 g 40 = 80 - 81 / 80 clauses 12246
Layer 1 g 41 = 82 - 83 / 82 clauses 12246
Layer 1 g 42 = 84 - 85 / 84 clauses 12246
Layer 1 g 43 = 86 - 87 / 86 clauses 12246
Layer 1 g 44 = 88 - 89 / 88 clauses 12246
Layer 1 g 45 = 90 - 91 / 90 clauses 12246
Layer 1 g 46 = 92 - 93 / 92 clauses 12246
Layer 1 g 47 = 94 - 95 / 94 clauses 12246
Layer 1 g 48 = 96 - 97 / 96 clauses 12246
Layer 1 g 49 = 98 - 99 / 98 clauses 12246
Layer 1 g 50 = 100 - 101 / 100 clauses 12246
Layer 1 g 51 = 102 - 103 / 102 clauses 12246
Layer 1 g 52 = 104 - 105 / 104 clauses 12246
Layer 1 g 53 = 106 - 107 / 106 clauses 12246
Layer 1 g 54 = 108 - 109 / 108 clauses 12246
Layer 1 g 55 = 110 - 111 / 110 clauses 12246
Layer 1 g 56 = 112 - 113 / 112 clauses 12246
Layer 1 g 57 = 114 - 115 / 114 clauses 12246
Layer 1 g 58 = 116 - 117 / 116 clauses 12246
Layer 1 g 59 = 118 - 119 / 118 clauses 12246
Layer 1 g 60 = 120 - 121 / 120 clauses 12246
Layer 1 g 61 = 122 - 123 / 122 clauses 12246
Layer 1 g 62 = 124 - 125 / 124 clauses 12246
Layer 1 g 63 = 126 - 127 / 126 clauses 12246
Layer 1 g 64 = 128 - 129 / 128 clauses 12246
Layer 1 g 65 = 130 - 131 / 130 clauses 12246
Layer 1 g 66 = 132 - 133 / 132 clauses 12246
Layer 1 g 67 = 134 - 135 / 134 clauses 12246
Layer 1 g 68 = 136 - 137 / 136 clauses 12246
Layer 1 g 69 = 138 - 139 / 138 clauses 12246
Layer 1 g 70 = 140 - 141 / 140 clauses 12246
Layer 1 g 71 = 142 - 143 / 142 clauses 12246
Layer 1 g 72 = 144 - 145 / 144 clauses 12246
Layer 1 g 73 = 146 - 147 / 146 clauses 12246
Layer 1 g 74 = 148 - 149 / 148 clauses 12246
Layer 1 g 75 = 150 - 151 / 150 clauses 12246
Layer 1 g 76 = 152 - 153 / 152 clauses 12246
Layer 2 g 0 = 0 - 3 / 1 clauses 12246
Layer 2 g 1 = 4 - 7 / 5 clauses 12246
Layer 2 g 2 = 8 - 11 / 9 clauses 12246
Layer 2 g 3 = 12 - 15 / 13 clauses 12246
Layer 2 g 4 = 16 - 19 / 17 clauses 12246
Layer 2 g 5 = 20 - 23 / 21 clauses 12246
Layer 2 g 6 = 24 - 27 / 25 clauses 12246
Layer 2 g 7 = 28 - 31 / 29 clauses 12246
Layer 2 g 8 = 32 - 35 / 33 clauses 12246
Layer 2 g 9 = 36 - 39 / 37 clauses 12246
Layer 2 g 10 = 40 - 43 / 41 clauses 12246
Layer 2 g 11 = 44 - 47 / 45 clauses 12246
Layer 2 g 12 = 48 - 51 / 49 clauses 12246
Layer 2 g 13 = 52 - 55 / 53 clauses 12246
Layer 2 g 14 = 56 - 59 / 57 clauses 12246
Layer 2 g 15 = 60 - 63 / 61 clauses 12246
Layer 2 g 16 = 64 - 67 / 65 clauses 12246
Layer 2 g 17 = 68 - 71 / 69 clauses 12246
Layer 2 g 18 = 72 - 75 / 73 clauses 12246
Layer 2 g 19 = 76 - 79 / 77 clauses 12246
Layer 2 g 20 = 80 - 83 / 81 clauses 12246
Layer 2 g 21 = 84 - 87 / 85 clauses 12246
Layer 2 g 22 = 88 - 91 / 89 clauses 12246
Layer 2 g 23 = 92 - 95 / 93 clauses 12246
Layer 2 g 24 = 96 - 99 / 97 clauses 12246
Layer 2 g 25 = 100 - 103 / 101 clauses 12246
Layer 2 g 26 = 104 - 107 / 105 clauses 12246
Layer 2 g 27 = 108 - 111 / 109 clauses 12246
Layer 2 g 28 = 112 - 115 / 113 clauses 12246
Layer 2 g 29 = 116 - 119 / 117 clauses 12246
Layer 2 g 30 = 120 - 123 / 121 clauses 12246
Layer 2 g 31 = 124 - 127 / 125 clauses 12246
Layer 2 g 32 = 128 - 131 / 129 clauses 12246
Layer 2 g 33 = 132 - 135 / 133 clauses 12246
Layer 2 g 34 = 136 - 139 / 137 clauses 12246
Layer 2 g 35 = 140 - 143 / 141 clauses 12246
Layer 2 g 36 = 144 - 147 / 145 clauses 12246
Layer 2 g 37 = 148 - 151 / 149 clauses 12246
Layer 2 g 38 = 152 - 154 / 153 clauses 12246
Layer 3 g 0 = 0 - 7 / 3 clauses 12246
Layer 3 g 1 = 8 - 15 / 11 clauses 12246
Layer 3 g 2 = 16 - 23 / 19 clauses 12246
Layer 3 g 3 = 24 - 31 / 27 clauses 12246
Layer 3 g 4 = 32 - 39 / 35 clauses 12246
Layer 3 g 5 = 40 - 47 / 43 clauses 12246
Layer 3 g 6 = 48 - 55 / 51 clauses 12246
Layer 3 g 7 = 56 - 63 / 59 clauses 12246
Layer 3 g 8 = 64 - 71 / 67 clauses 12246
Layer 3 g 9 = 72 - 79 / 75 clauses 12246
Layer 3 g 10 = 80 - 87 / 83 clauses 12246
Layer 3 g 11 = 88 - 95 / 91 clauses 12246
Layer 3 g 12 = 96 - 103 / 99 clauses 12246
Layer 3 g 13 = 104 - 111 / 107 clauses 12246
Layer 3 g 14 = 112 - 119 / 115 clauses 12246
Layer 3 g 15 = 120 - 127 / 123 clauses 12246
Layer 3 g 16 = 128 - 135 / 131 clauses 12246
Layer 3 g 17 = 136 - 143 / 139 clauses 12246
Layer 3 g 18 = 144 - 151 / 147 clauses 12246
Layer 3 g 19 = 152 - 154 / 155 clauses 12246
Layer 4 g 0 = 0 - 15 / 7 clauses 12246
Layer 4 g 1 = 16 - 31 / 23 clauses 12246
Layer 4 g 2 = 32 - 47 / 39 clauses 12246
Layer 4 g 3 = 48 - 63 / 55 clauses 12246
Layer 4 g 4 = 64 - 79 / 71 clauses 12246
Layer 4 g 5 = 80 - 95 / 87 clauses 12246
Layer 4 g 6 = 96 - 111 / 103 clauses 12246
Layer 4 g 7 = 112 - 127 / 119 clauses 12246
Layer 4 g 8 = 128 - 143 / 135 clauses 12246
Layer 4 g 9 = 144 - 154 / 151 clauses 12246
Layer 5 g 0 = 0 - 31 / 15 clauses 12246
Layer 5 g 1 = 32 - 63 / 47 clauses 12246
Layer 5 g 2 = 64 - 95 / 79 clauses 12246
Layer 5 g 3 = 96 - 127 / 111 clauses 12246
Layer 5 g 4 = 128 - 154 / 143 clauses 12246
Layer 6 g 0 = 0 - 63 / 31 clauses 12246
Layer 6 g 1 = 64 - 127 / 95 clauses 12246
Layer 6 g 2 = 128 - 154 / 159 clauses 12246
Layer 7 g 0 = 0 - 127 / 63 clauses 12246
Layer 7 g 1 = 128 - 154 / 191 clauses 12246
Layer 8 g 0 = 0 - 154 / 127 clauses 12246
Invariant Clauses 70356
NUMBER OF CLAUSES 2061885
NUMBER OF STATE CLAUSES 2040166
NUMBER OF DECOMPOSITION CLAUSES 21719
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.95% 1.05% 0.0% 
NUMBER OF PATHS 155
Starting cryptominisat5.5
Setting starttime of solver to 1604507490617
Command exited with non-zero status 20
0.49 0.03

Time command gave the following runtime for the solver: 520
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 22
==================================================
  upper bound = 24
  lower bound = 21
LEN 22
ICAPS: 2728
TSTG: 6
Method: 2147483647
DP max: 7
Taking minimum: 6
Generating initial PDT ... done
initial PDT has 155 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 155 leafs
SHOP LEAFS 83
Assignment implications
Generating clauses representing decomposition ... done
Still waiting ... running for 100 will abort at 9223372036854759103
At most K: 28ms input: 346 K = 22
Number of actions Formula: 29ms for 15547 clauses
Layers: 8 paths 155
Layer 1 g 0 = 0 - 1 / 0 clauses 12246
Layer 1 g 1 = 2 - 3 / 2 clauses 12246
Layer 1 g 2 = 4 - 5 / 4 clauses 12246
Layer 1 g 3 = 6 - 7 / 6 clauses 12246
Layer 1 g 4 = 8 - 9 / 8 clauses 12246
Layer 1 g 5 = 10 - 11 / 10 clauses 12246
Layer 1 g 6 = 12 - 13 / 12 clauses 12246
Layer 1 g 7 = 14 - 15 / 14 clauses 12246
Layer 1 g 8 = 16 - 17 / 16 clauses 12246
Layer 1 g 9 = 18 - 19 / 18 clauses 12246
Layer 1 g 10 = 20 - 21 / 20 clauses 12246
Layer 1 g 11 = 22 - 23 / 22 clauses 12246
Layer 1 g 12 = 24 - 25 / 24 clauses 12246
Layer 1 g 13 = 26 - 27 / 26 clauses 12246
Layer 1 g 14 = 28 - 29 / 28 clauses 12246
Layer 1 g 15 = 30 - 31 / 30 clauses 12246
Layer 1 g 16 = 32 - 33 / 32 clauses 12246
Layer 1 g 17 = 34 - 35 / 34 clauses 12246
Layer 1 g 18 = 36 - 37 / 36 clauses 12246
Layer 1 g 19 = 38 - 39 / 38 clauses 12246
Layer 1 g 20 = 40 - 41 / 40 clauses 12246
Layer 1 g 21 = 42 - 43 / 42 clauses 12246
Layer 1 g 22 = 44 - 45 / 44 clauses 12246
Layer 1 g 23 = 46 - 47 / 46 clauses 12246
Layer 1 g 24 = 48 - 49 / 48 clauses 12246
Layer 1 g 25 = 50 - 51 / 50 clauses 12246
Layer 1 g 26 = 52 - 53 / 52 clauses 12246
Layer 1 g 27 = 54 - 55 / 54 clauses 12246
Layer 1 g 28 = 56 - 57 / 56 clauses 12246
Layer 1 g 29 = 58 - 59 / 58 clauses 12246
Layer 1 g 30 = 60 - 61 / 60 clauses 12246
Layer 1 g 31 = 62 - 63 / 62 clauses 12246
Layer 1 g 32 = 64 - 65 / 64 clauses 12246
Layer 1 g 33 = 66 - 67 / 66 clauses 12246
Layer 1 g 34 = 68 - 69 / 68 clauses 12246
Layer 1 g 35 = 70 - 71 / 70 clauses 12246
Layer 1 g 36 = 72 - 73 / 72 clauses 12246
Layer 1 g 37 = 74 - 75 / 74 clauses 12246
Layer 1 g 38 = 76 - 77 / 76 clauses 12246
Layer 1 g 39 = 78 - 79 / 78 clauses 12246
Layer 1 g 40 = 80 - 81 / 80 clauses 12246
Layer 1 g 41 = 82 - 83 / 82 clauses 12246
Layer 1 g 42 = 84 - 85 / 84 clauses 12246
Layer 1 g 43 = 86 - 87 / 86 clauses 12246
Layer 1 g 44 = 88 - 89 / 88 clauses 12246
Layer 1 g 45 = 90 - 91 / 90 clauses 12246
Layer 1 g 46 = 92 - 93 / 92 clauses 12246
Layer 1 g 47 = 94 - 95 / 94 clauses 12246
Layer 1 g 48 = 96 - 97 / 96 clauses 12246
Layer 1 g 49 = 98 - 99 / 98 clauses 12246
Layer 1 g 50 = 100 - 101 / 100 clauses 12246
Layer 1 g 51 = 102 - 103 / 102 clauses 12246
Layer 1 g 52 = 104 - 105 / 104 clauses 12246
Layer 1 g 53 = 106 - 107 / 106 clauses 12246
Layer 1 g 54 = 108 - 109 / 108 clauses 12246
Layer 1 g 55 = 110 - 111 / 110 clauses 12246
Layer 1 g 56 = 112 - 113 / 112 clauses 12246
Layer 1 g 57 = 114 - 115 / 114 clauses 12246
Layer 1 g 58 = 116 - 117 / 116 clauses 12246
Layer 1 g 59 = 118 - 119 / 118 clauses 12246
Layer 1 g 60 = 120 - 121 / 120 clauses 12246
Layer 1 g 61 = 122 - 123 / 122 clauses 12246
Layer 1 g 62 = 124 - 125 / 124 clauses 12246
Layer 1 g 63 = 126 - 127 / 126 clauses 12246
Layer 1 g 64 = 128 - 129 / 128 clauses 12246
Layer 1 g 65 = 130 - 131 / 130 clauses 12246
Layer 1 g 66 = 132 - 133 / 132 clauses 12246
Layer 1 g 67 = 134 - 135 / 134 clauses 12246
Layer 1 g 68 = 136 - 137 / 136 clauses 12246
Layer 1 g 69 = 138 - 139 / 138 clauses 12246
Layer 1 g 70 = 140 - 141 / 140 clauses 12246
Layer 1 g 71 = 142 - 143 / 142 clauses 12246
Layer 1 g 72 = 144 - 145 / 144 clauses 12246
Layer 1 g 73 = 146 - 147 / 146 clauses 12246
Layer 1 g 74 = 148 - 149 / 148 clauses 12246
Layer 1 g 75 = 150 - 151 / 150 clauses 12246
Layer 1 g 76 = 152 - 153 / 152 clauses 12246
Layer 2 g 0 = 0 - 3 / 1 clauses 12246
Layer 2 g 1 = 4 - 7 / 5 clauses 12246
Layer 2 g 2 = 8 - 11 / 9 clauses 12246
Layer 2 g 3 = 12 - 15 / 13 clauses 12246
Layer 2 g 4 = 16 - 19 / 17 clauses 12246
Layer 2 g 5 = 20 - 23 / 21 clauses 12246
Layer 2 g 6 = 24 - 27 / 25 clauses 12246
Layer 2 g 7 = 28 - 31 / 29 clauses 12246
Layer 2 g 8 = 32 - 35 / 33 clauses 12246
Layer 2 g 9 = 36 - 39 / 37 clauses 12246
Layer 2 g 10 = 40 - 43 / 41 clauses 12246
Layer 2 g 11 = 44 - 47 / 45 clauses 12246
Layer 2 g 12 = 48 - 51 / 49 clauses 12246
Layer 2 g 13 = 52 - 55 / 53 clauses 12246
Layer 2 g 14 = 56 - 59 / 57 clauses 12246
Layer 2 g 15 = 60 - 63 / 61 clauses 12246
Layer 2 g 16 = 64 - 67 / 65 clauses 12246
Layer 2 g 17 = 68 - 71 / 69 clauses 12246
Layer 2 g 18 = 72 - 75 / 73 clauses 12246
Layer 2 g 19 = 76 - 79 / 77 clauses 12246
Layer 2 g 20 = 80 - 83 / 81 clauses 12246
Layer 2 g 21 = 84 - 87 / 85 clauses 12246
Layer 2 g 22 = 88 - 91 / 89 clauses 12246
Layer 2 g 23 = 92 - 95 / 93 clauses 12246
Layer 2 g 24 = 96 - 99 / 97 clauses 12246
Layer 2 g 25 = 100 - 103 / 101 clauses 12246
Layer 2 g 26 = 104 - 107 / 105 clauses 12246
Layer 2 g 27 = 108 - 111 / 109 clauses 12246
Layer 2 g 28 = 112 - 115 / 113 clauses 12246
Layer 2 g 29 = 116 - 119 / 117 clauses 12246
Layer 2 g 30 = 120 - 123 / 121 clauses 12246
Layer 2 g 31 = 124 - 127 / 125 clauses 12246
Layer 2 g 32 = 128 - 131 / 129 clauses 12246
Layer 2 g 33 = 132 - 135 / 133 clauses 12246
Layer 2 g 34 = 136 - 139 / 137 clauses 12246
Layer 2 g 35 = 140 - 143 / 141 clauses 12246
Layer 2 g 36 = 144 - 147 / 145 clauses 12246
Layer 2 g 37 = 148 - 151 / 149 clauses 12246
Layer 2 g 38 = 152 - 154 / 153 clauses 12246
Layer 3 g 0 = 0 - 7 / 3 clauses 12246
Layer 3 g 1 = 8 - 15 / 11 clauses 12246
Layer 3 g 2 = 16 - 23 / 19 clauses 12246
Layer 3 g 3 = 24 - 31 / 27 clauses 12246
Layer 3 g 4 = 32 - 39 / 35 clauses 12246
Layer 3 g 5 = 40 - 47 / 43 clauses 12246
Layer 3 g 6 = 48 - 55 / 51 clauses 12246
Layer 3 g 7 = 56 - 63 / 59 clauses 12246
Layer 3 g 8 = 64 - 71 / 67 clauses 12246
Layer 3 g 9 = 72 - 79 / 75 clauses 12246
Layer 3 g 10 = 80 - 87 / 83 clauses 12246
Layer 3 g 11 = 88 - 95 / 91 clauses 12246
Layer 3 g 12 = 96 - 103 / 99 clauses 12246
Layer 3 g 13 = 104 - 111 / 107 clauses 12246
Layer 3 g 14 = 112 - 119 / 115 clauses 12246
Layer 3 g 15 = 120 - 127 / 123 clauses 12246
Layer 3 g 16 = 128 - 135 / 131 clauses 12246
Layer 3 g 17 = 136 - 143 / 139 clauses 12246
Layer 3 g 18 = 144 - 151 / 147 clauses 12246
Layer 3 g 19 = 152 - 154 / 155 clauses 12246
Layer 4 g 0 = 0 - 15 / 7 clauses 12246
Layer 4 g 1 = 16 - 31 / 23 clauses 12246
Layer 4 g 2 = 32 - 47 / 39 clauses 12246
Layer 4 g 3 = 48 - 63 / 55 clauses 12246
Layer 4 g 4 = 64 - 79 / 71 clauses 12246
Layer 4 g 5 = 80 - 95 / 87 clauses 12246
Layer 4 g 6 = 96 - 111 / 103 clauses 12246
Layer 4 g 7 = 112 - 127 / 119 clauses 12246
Layer 4 g 8 = 128 - 143 / 135 clauses 12246
Layer 4 g 9 = 144 - 154 / 151 clauses 12246
Layer 5 g 0 = 0 - 31 / 15 clauses 12246
Layer 5 g 1 = 32 - 63 / 47 clauses 12246
Layer 5 g 2 = 64 - 95 / 79 clauses 12246
Layer 5 g 3 = 96 - 127 / 111 clauses 12246
Layer 5 g 4 = 128 - 154 / 143 clauses 12246
Layer 6 g 0 = 0 - 63 / 31 clauses 12246
Layer 6 g 1 = 64 - 127 / 95 clauses 12246
Layer 6 g 2 = 128 - 154 / 159 clauses 12246
Layer 7 g 0 = 0 - 127 / 63 clauses 12246
Layer 7 g 1 = 128 - 154 / 191 clauses 12246
Layer 8 g 0 = 0 - 154 / 127 clauses 12246
Invariant Clauses 70356
NUMBER OF CLAUSES 2062576
NUMBER OF STATE CLAUSES 2040166
NUMBER OF DECOMPOSITION CLAUSES 22410
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.91% 1.09% 0.0% 
NUMBER OF PATHS 155
Starting cryptominisat5.5
Setting starttime of solver to 1604507494545
Command exited with non-zero status 20
0.50 0.01

Time command gave the following runtime for the solver: 510
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 23
==================================================
  upper bound = 24
  lower bound = 22
LEN 23
ICAPS: 2852
TSTG: 6
Method: 2147483647
DP max: 7
Taking minimum: 6
Generating initial PDT ... done
initial PDT has 155 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 155 leafs
SHOP LEAFS 83
Assignment implications
Generating clauses representing decomposition ... done
Still waiting ... running for 100 will abort at 9223372036854755102
At most K: 14ms input: 346 K = 23
Number of actions Formula: 16ms for 16238 clauses
Layers: 8 paths 155
Layer 1 g 0 = 0 - 1 / 0 clauses 12246
Layer 1 g 1 = 2 - 3 / 2 clauses 12246
Layer 1 g 2 = 4 - 5 / 4 clauses 12246
Layer 1 g 3 = 6 - 7 / 6 clauses 12246
Layer 1 g 4 = 8 - 9 / 8 clauses 12246
Layer 1 g 5 = 10 - 11 / 10 clauses 12246
Layer 1 g 6 = 12 - 13 / 12 clauses 12246
Layer 1 g 7 = 14 - 15 / 14 clauses 12246
Layer 1 g 8 = 16 - 17 / 16 clauses 12246
Layer 1 g 9 = 18 - 19 / 18 clauses 12246
Layer 1 g 10 = 20 - 21 / 20 clauses 12246
Layer 1 g 11 = 22 - 23 / 22 clauses 12246
Layer 1 g 12 = 24 - 25 / 24 clauses 12246
Layer 1 g 13 = 26 - 27 / 26 clauses 12246
Layer 1 g 14 = 28 - 29 / 28 clauses 12246
Layer 1 g 15 = 30 - 31 / 30 clauses 12246
Layer 1 g 16 = 32 - 33 / 32 clauses 12246
Layer 1 g 17 = 34 - 35 / 34 clauses 12246
Layer 1 g 18 = 36 - 37 / 36 clauses 12246
Layer 1 g 19 = 38 - 39 / 38 clauses 12246
Layer 1 g 20 = 40 - 41 / 40 clauses 12246
Layer 1 g 21 = 42 - 43 / 42 clauses 12246
Layer 1 g 22 = 44 - 45 / 44 clauses 12246
Layer 1 g 23 = 46 - 47 / 46 clauses 12246
Layer 1 g 24 = 48 - 49 / 48 clauses 12246
Layer 1 g 25 = 50 - 51 / 50 clauses 12246
Layer 1 g 26 = 52 - 53 / 52 clauses 12246
Layer 1 g 27 = 54 - 55 / 54 clauses 12246
Layer 1 g 28 = 56 - 57 / 56 clauses 12246
Layer 1 g 29 = 58 - 59 / 58 clauses 12246
Layer 1 g 30 = 60 - 61 / 60 clauses 12246
Layer 1 g 31 = 62 - 63 / 62 clauses 12246
Layer 1 g 32 = 64 - 65 / 64 clauses 12246
Layer 1 g 33 = 66 - 67 / 66 clauses 12246
Layer 1 g 34 = 68 - 69 / 68 clauses 12246
Layer 1 g 35 = 70 - 71 / 70 clauses 12246
Layer 1 g 36 = 72 - 73 / 72 clauses 12246
Layer 1 g 37 = 74 - 75 / 74 clauses 12246
Layer 1 g 38 = 76 - 77 / 76 clauses 12246
Layer 1 g 39 = 78 - 79 / 78 clauses 12246
Layer 1 g 40 = 80 - 81 / 80 clauses 12246
Layer 1 g 41 = 82 - 83 / 82 clauses 12246
Layer 1 g 42 = 84 - 85 / 84 clauses 12246
Layer 1 g 43 = 86 - 87 / 86 clauses 12246
Layer 1 g 44 = 88 - 89 / 88 clauses 12246
Layer 1 g 45 = 90 - 91 / 90 clauses 12246
Layer 1 g 46 = 92 - 93 / 92 clauses 12246
Layer 1 g 47 = 94 - 95 / 94 clauses 12246
Layer 1 g 48 = 96 - 97 / 96 clauses 12246
Layer 1 g 49 = 98 - 99 / 98 clauses 12246
Layer 1 g 50 = 100 - 101 / 100 clauses 12246
Layer 1 g 51 = 102 - 103 / 102 clauses 12246
Layer 1 g 52 = 104 - 105 / 104 clauses 12246
Layer 1 g 53 = 106 - 107 / 106 clauses 12246
Layer 1 g 54 = 108 - 109 / 108 clauses 12246
Layer 1 g 55 = 110 - 111 / 110 clauses 12246
Layer 1 g 56 = 112 - 113 / 112 clauses 12246
Layer 1 g 57 = 114 - 115 / 114 clauses 12246
Layer 1 g 58 = 116 - 117 / 116 clauses 12246
Layer 1 g 59 = 118 - 119 / 118 clauses 12246
Layer 1 g 60 = 120 - 121 / 120 clauses 12246
Layer 1 g 61 = 122 - 123 / 122 clauses 12246
Layer 1 g 62 = 124 - 125 / 124 clauses 12246
Layer 1 g 63 = 126 - 127 / 126 clauses 12246
Layer 1 g 64 = 128 - 129 / 128 clauses 12246
Layer 1 g 65 = 130 - 131 / 130 clauses 12246
Layer 1 g 66 = 132 - 133 / 132 clauses 12246
Layer 1 g 67 = 134 - 135 / 134 clauses 12246
Layer 1 g 68 = 136 - 137 / 136 clauses 12246
Layer 1 g 69 = 138 - 139 / 138 clauses 12246
Layer 1 g 70 = 140 - 141 / 140 clauses 12246
Layer 1 g 71 = 142 - 143 / 142 clauses 12246
Layer 1 g 72 = 144 - 145 / 144 clauses 12246
Layer 1 g 73 = 146 - 147 / 146 clauses 12246
Layer 1 g 74 = 148 - 149 / 148 clauses 12246
Layer 1 g 75 = 150 - 151 / 150 clauses 12246
Layer 1 g 76 = 152 - 153 / 152 clauses 12246
Layer 2 g 0 = 0 - 3 / 1 clauses 12246
Layer 2 g 1 = 4 - 7 / 5 clauses 12246
Layer 2 g 2 = 8 - 11 / 9 clauses 12246
Layer 2 g 3 = 12 - 15 / 13 clauses 12246
Layer 2 g 4 = 16 - 19 / 17 clauses 12246
Layer 2 g 5 = 20 - 23 / 21 clauses 12246
Layer 2 g 6 = 24 - 27 / 25 clauses 12246
Layer 2 g 7 = 28 - 31 / 29 clauses 12246
Layer 2 g 8 = 32 - 35 / 33 clauses 12246
Layer 2 g 9 = 36 - 39 / 37 clauses 12246
Layer 2 g 10 = 40 - 43 / 41 clauses 12246
Layer 2 g 11 = 44 - 47 / 45 clauses 12246
Layer 2 g 12 = 48 - 51 / 49 clauses 12246
Layer 2 g 13 = 52 - 55 / 53 clauses 12246
Layer 2 g 14 = 56 - 59 / 57 clauses 12246
Layer 2 g 15 = 60 - 63 / 61 clauses 12246
Layer 2 g 16 = 64 - 67 / 65 clauses 12246
Layer 2 g 17 = 68 - 71 / 69 clauses 12246
Layer 2 g 18 = 72 - 75 / 73 clauses 12246
Layer 2 g 19 = 76 - 79 / 77 clauses 12246
Layer 2 g 20 = 80 - 83 / 81 clauses 12246
Layer 2 g 21 = 84 - 87 / 85 clauses 12246
Layer 2 g 22 = 88 - 91 / 89 clauses 12246
Layer 2 g 23 = 92 - 95 / 93 clauses 12246
Layer 2 g 24 = 96 - 99 / 97 clauses 12246
Layer 2 g 25 = 100 - 103 / 101 clauses 12246
Layer 2 g 26 = 104 - 107 / 105 clauses 12246
Layer 2 g 27 = 108 - 111 / 109 clauses 12246
Layer 2 g 28 = 112 - 115 / 113 clauses 12246
Layer 2 g 29 = 116 - 119 / 117 clauses 12246
Layer 2 g 30 = 120 - 123 / 121 clauses 12246
Layer 2 g 31 = 124 - 127 / 125 clauses 12246
Layer 2 g 32 = 128 - 131 / 129 clauses 12246
Layer 2 g 33 = 132 - 135 / 133 clauses 12246
Layer 2 g 34 = 136 - 139 / 137 clauses 12246
Layer 2 g 35 = 140 - 143 / 141 clauses 12246
Layer 2 g 36 = 144 - 147 / 145 clauses 12246
Layer 2 g 37 = 148 - 151 / 149 clauses 12246
Layer 2 g 38 = 152 - 154 / 153 clauses 12246
Layer 3 g 0 = 0 - 7 / 3 clauses 12246
Layer 3 g 1 = 8 - 15 / 11 clauses 12246
Layer 3 g 2 = 16 - 23 / 19 clauses 12246
Layer 3 g 3 = 24 - 31 / 27 clauses 12246
Layer 3 g 4 = 32 - 39 / 35 clauses 12246
Layer 3 g 5 = 40 - 47 / 43 clauses 12246
Layer 3 g 6 = 48 - 55 / 51 clauses 12246
Layer 3 g 7 = 56 - 63 / 59 clauses 12246
Layer 3 g 8 = 64 - 71 / 67 clauses 12246
Layer 3 g 9 = 72 - 79 / 75 clauses 12246
Layer 3 g 10 = 80 - 87 / 83 clauses 12246
Layer 3 g 11 = 88 - 95 / 91 clauses 12246
Layer 3 g 12 = 96 - 103 / 99 clauses 12246
Layer 3 g 13 = 104 - 111 / 107 clauses 12246
Layer 3 g 14 = 112 - 119 / 115 clauses 12246
Layer 3 g 15 = 120 - 127 / 123 clauses 12246
Layer 3 g 16 = 128 - 135 / 131 clauses 12246
Layer 3 g 17 = 136 - 143 / 139 clauses 12246
Layer 3 g 18 = 144 - 151 / 147 clauses 12246
Layer 3 g 19 = 152 - 154 / 155 clauses 12246
Layer 4 g 0 = 0 - 15 / 7 clauses 12246
Layer 4 g 1 = 16 - 31 / 23 clauses 12246
Layer 4 g 2 = 32 - 47 / 39 clauses 12246
Layer 4 g 3 = 48 - 63 / 55 clauses 12246
Layer 4 g 4 = 64 - 79 / 71 clauses 12246
Layer 4 g 5 = 80 - 95 / 87 clauses 12246
Layer 4 g 6 = 96 - 111 / 103 clauses 12246
Layer 4 g 7 = 112 - 127 / 119 clauses 12246
Layer 4 g 8 = 128 - 143 / 135 clauses 12246
Layer 4 g 9 = 144 - 154 / 151 clauses 12246
Layer 5 g 0 = 0 - 31 / 15 clauses 12246
Layer 5 g 1 = 32 - 63 / 47 clauses 12246
Layer 5 g 2 = 64 - 95 / 79 clauses 12246
Layer 5 g 3 = 96 - 127 / 111 clauses 12246
Layer 5 g 4 = 128 - 154 / 143 clauses 12246
Layer 6 g 0 = 0 - 63 / 31 clauses 12246
Layer 6 g 1 = 64 - 127 / 95 clauses 12246
Layer 6 g 2 = 128 - 154 / 159 clauses 12246
Layer 7 g 0 = 0 - 127 / 63 clauses 12246
Layer 7 g 1 = 128 - 154 / 191 clauses 12246
Layer 8 g 0 = 0 - 154 / 127 clauses 12246
Invariant Clauses 70356
NUMBER OF CLAUSES 2063267
NUMBER OF STATE CLAUSES 2040166
NUMBER OF DECOMPOSITION CLAUSES 23101
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.88% 1.12% 0.0% 
NUMBER OF PATHS 155
Starting cryptominisat5.5
Setting starttime of solver to 1604507498503
Command exited with non-zero status 20
0.51 0.01

Time command gave the following runtime for the solver: 520
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 530536320
planner result = SOLUTION
============ solution ============
number of primitive plan steps = 40
cost of solution               = 24
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 65
number of actions                    = 185
number of abstract actions           = 61
number of primitive actions          = 124
number of methods                    = 127
number of primitive shop actions     = 72
number of primitive non-shop actions = 52
size of largest method               = 5
average method size                  = 3
============ sat ============
plan length                     = 23
number of variables             = 82169
number of clauses               = 2063399
average size of clauses         = 2.9258223930514653
number of assert                = 25
number of horn                  = 2055072
K offset                        = 0
K chosen value                  = 6
state formula                   = 2040166
method children clauses         = 0
number of paths                 = 155
maximum plan length             = 155
number of decomposition clauses = 23101
number of ordering clauses      = 0
number of state clauses         = 2040166
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 24583
============ parsing ============
total                         = 997
file parser                   = 554
sort expansion                = 183
closed world assumption       = 65
inherit preconditions         = 0
shop methods                  = 7
eliminate identical variables = 101
strip domain of hybridity     = 1
flatten formula               = 86
============ preprocessing ============
total                                      = 1202
compile negative preconditions             = 35
compile unit methods                       = 0
split parameter                            = 34
compile methods with identical tasks       = 3
removing unnecessary predicates            = 70
lifted reachabiltiy analysis               = 49
grounded planning graph analysis           = 493
grounded task decomposition graph analysis = 390
grounding                                  = 116
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 171
============ sat ============
total                                        = 19517
generate formula                             = 14166
generate path decomposition tree             = 275
normalise path decomposition tree            = 112
sog optimisation                             = 51
translate path decomposition tree to clauses = 376
generate state formula                       = 13679
generate state invariant formula             = 308
transform to DIMACS                          = 2301
SAT solver                                   = 2610
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 0
SAT solver for K=0004                        = 0
SAT solver for K=0005                        = 30
SAT solver for K=0006                        = 520

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="124";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="61";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="530536320";"40 sat:20:state formula"="2040166";"40 sat:01:number of variables"="82169";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="155";"40 sat:00:plan length"="23";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="127";"01 solution:02:cost of solution"="24";"30 problem:07:number of primitive shop actions"="72";"01 solution:01:number of primitive plan steps"="40";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="185";"30 problem:08:number of primitive non-shop actions"="52";"30 problem:02:number of predicates"="65";"40 sat:03:number of horn"="2055072";"40 sat:15:K chosen value"="6";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="5";"40 sat:03:average size of clauses"="2.9258223930514653";"40 sat:02:number of clauses"="2063399";"40 sat:50:number of state clauses"="2040166";"40 sat:03:number of assert"="25";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="155";"40 sat:50:number of decomposition clauses"="23101";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="554";"01 parsing:08:flatten formula"="86";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="19517";"40 sat:16:generate state formula"="13679";"40 sat:20:transform to DIMACS"="2301";"40 sat:11:generate path decomposition tree"="275";"02 preprocessing:07:compile methods with identical tasks"="3";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="70";"01 parsing:03:closed world assumption"="65";"02 preprocessing:11:lifted reachabiltiy analysis"="49";"01 parsing:02:sort expansion"="183";"40 sat:12:normalise path decomposition tree"="112";"40 sat:40:SAT solver"="2610";"01 parsing:00:total"="997";"40 sat:10:generate formula"="14166";"40 sat:41:SAT solver for K=0005"="30";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="35";"00 total:00:total"="24583";"40 sat:13:sog optimisation"="51";"02 preprocessing:12:grounded planning graph analysis"="493";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="390";"40 sat:41:SAT solver for K=0006"="520";"02 preprocessing:04:split parameter"="34";"01 parsing:05:shop methods"="7";"10 search preparation:02:compute state invariants"="171";"01 parsing:06:eliminate identical variables"="101";"40 sat:15:translate path decomposition tree to clauses"="376";"40 sat:41:SAT solver for K=0003"="0";"40 sat:17:generate state invariant formula"="308";"02 preprocessing:00:total"="1202";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="116"
#!verify __method_precondition_m0_do_put_on_0_precondition[crate3,pallet1];nop[];__method_precondition_m10_do_load_truck_10_precondition[crate2,distributor1,crate1,hoist2];__method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1];Drive[truck0,depot0,distributor1];__method_precondition_m4_do_clear_4_precondition[crate2,distributor1];nop[];Lift[hoist2,crate2,crate1,distributor1];Load[hoist2,crate2,truck0,distributor1];Drive[truck0,distributor1,depot0];__method_precondition_m11_do_unload_truck_11_precondition[hoist0,pallet0,depot0,crate2,truck0];__method_precondition_m5_do_clear_5_precondition[pallet0,crate0,depot0,hoist0];__method_precondition_m4_do_clear_4_precondition[crate0,depot0];nop[];Lift[hoist0,crate0,pallet0,depot0];__method_precondition_m6_do_get_truck_6_precondition[truck1,depot0];nop[];Load[hoist0,crate0,truck1,depot0];Unload[hoist0,crate2,truck0,depot0];Drop[hoist0,crate2,pallet0,depot0];__method_precondition_m10_do_load_truck_10_precondition[crate1,distributor1,pallet2,hoist2];__method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1];Drive[truck0,depot0,distributor1];__method_precondition_m4_do_clear_4_precondition[crate1,distributor1];nop[];Lift[hoist2,crate1,pallet2,distributor1];Load[hoist2,crate1,truck0,distributor1];Drive[truck0,distributor1,distributor0];__method_precondition_m11_do_unload_truck_11_precondition[hoist1,crate3,distributor0,crate1,truck0];__method_precondition_m4_do_clear_4_precondition[crate3,distributor0];nop[];Unload[hoist1,crate1,truck0,distributor0];Drop[hoist1,crate1,crate3,distributor0];__method_precondition_m2_do_put_on_2_precondition[crate0,truck1];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1];Drive[truck1,depot0,distributor1];__method_precondition_m4_do_clear_4_precondition[pallet2,distributor1];nop[];Unload[hoist2,crate0,truck1,distributor1];Drop[hoist2,crate0,pallet2,distributor1]
==>
0 __method_precondition_m0_do_put_on_0_precondition crate3 pallet1 
1 nop  
2 __method_precondition_m10_do_load_truck_10_precondition crate2 distributor1 crate1 hoist2 
3 __method_precondition_m7_do_get_truck_7_precondition truck0 distributor1 
4 Drive truck0 depot0 distributor1 
5 __method_precondition_m4_do_clear_4_precondition crate2 distributor1 
6 nop  
7 Lift hoist2 crate2 crate1 distributor1 
8 Load hoist2 crate2 truck0 distributor1 
9 Drive truck0 distributor1 depot0 
10 __method_precondition_m11_do_unload_truck_11_precondition hoist0 pallet0 depot0 crate2 truck0 
11 __method_precondition_m5_do_clear_5_precondition pallet0 crate0 depot0 hoist0 
12 __method_precondition_m4_do_clear_4_precondition crate0 depot0 
13 nop  
14 Lift hoist0 crate0 pallet0 depot0 
15 __method_precondition_m6_do_get_truck_6_precondition truck1 depot0 
16 nop  
17 Load hoist0 crate0 truck1 depot0 
18 Unload hoist0 crate2 truck0 depot0 
19 Drop hoist0 crate2 pallet0 depot0 
20 __method_precondition_m10_do_load_truck_10_precondition crate1 distributor1 pallet2 hoist2 
21 __method_precondition_m7_do_get_truck_7_precondition truck0 distributor1 
22 Drive truck0 depot0 distributor1 
23 __method_precondition_m4_do_clear_4_precondition crate1 distributor1 
24 nop  
25 Lift hoist2 crate1 pallet2 distributor1 
26 Load hoist2 crate1 truck0 distributor1 
27 Drive truck0 distributor1 distributor0 
28 __method_precondition_m11_do_unload_truck_11_precondition hoist1 crate3 distributor0 crate1 truck0 
29 __method_precondition_m4_do_clear_4_precondition crate3 distributor0 
30 nop  
31 Unload hoist1 crate1 truck0 distributor0 
32 Drop hoist1 crate1 crate3 distributor0 
33 __method_precondition_m2_do_put_on_2_precondition crate0 truck1 
34 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor1 
35 Drive truck1 depot0 distributor1 
36 __method_precondition_m4_do_clear_4_precondition pallet2 distributor1 
37 nop  
38 Unload hoist2 crate0 truck1 distributor1 
39 Drop hoist2 crate0 pallet2 distributor1 
root 55
40 do_put_on crate2 pallet0  -> m3_do_put_on 41 9 47
41 do_load_truck_m3_do_put_on_sip_2 crate2 distributor1 truck0  -> _m3_do_put_on_2 42
42 do_load_truck crate2 crate1 distributor1 truck0  -> m10_do_load_truck 2 50 60 7 8
43 do_load_truck_m3_do_put_on_sip_2 crate1 distributor1 truck0  -> _m3_do_put_on_2 52
44 do_put_on crate1 crate3  -> m3_do_put_on 43 27 51
45 do_put_on crate3 pallet1  -> m0_do_put_on 0 1
46 do_clear pallet2 distributor1  -> m4_do_clear 36 37
47 do_unload_truck crate2 pallet0 depot0 truck0  -> m11_do_unload_truck 10 57 18 19
48 do_clear crate0 depot0  -> m4_do_clear 12 13
49 do_clear crate1 distributor1  -> m4_do_clear 23 24
50 do_get_truck truck0 distributor1  -> m7_do_get_truck 3 4
51 do_unload_truck crate1 crate3 distributor0 truck0  -> m11_do_unload_truck 28 56 31 32
52 do_load_truck crate1 pallet2 distributor1 truck0  -> m10_do_load_truck 20 59 49 25 26
53 do_get_truck truck1 distributor1  -> m7_do_get_truck 34 35
54 do_put_on crate0 pallet2  -> m2_do_put_on 33 53 46 38 39
55 __artificialTopCompilation__top_1  -> __top_1 45 40 44 54
56 do_clear crate3 distributor0  -> m4_do_clear 29 30
57 do_clear pallet0 depot0  -> m5_do_clear 11 48 14 58 17
58 do_get_truck truck1 depot0  -> m6_do_get_truck 15 16
59 do_get_truck truck0 distributor1  -> m7_do_get_truck 21 22
60 do_clear crate2 distributor1  -> m4_do_clear 5 6

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 25.497 MEMPEAK_KBS 736551.936
