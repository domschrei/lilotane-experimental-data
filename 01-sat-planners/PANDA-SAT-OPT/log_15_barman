PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p15.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p15.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p15.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounded planning graph ... done in 479ms.
	Number of Grounded Actions 2354
	Number of Grounded Literals 371
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounding ... done.
	number of abstract tasks = 1147
	number of tasks = 3479
	number of decomposition methods = 4189
	number of predicates = 371
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1147
	number of tasks = 3479
	number of decomposition methods = 4189
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 365ms.
	Number of Grounded Actions 2332
	Number of Grounded Literals 342
	number of abstract tasks = 1147
	number of tasks = 3479
	number of decomposition methods = 4189
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1147
	number of tasks = 3479
	number of decomposition methods = 4189
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1148
	number of tasks = 3480
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1148
	number of tasks = 3480
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 204ms.
	Number of Grounded Actions 2332
	Number of Grounded Literals 342
	number of abstract tasks = 1148
	number of tasks = 3480
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1148
	number of tasks = 3480
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1148
	number of tasks = 3480
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1148
	number of tasks = 3480
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1148
	number of tasks = 3480
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 927
	number of epsilon methods = 0
	number of primitive tasks = 2332
	number of constants = 0
Tasks 2332 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768418ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767903
done
initial PDT has 288 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 288 leafs
SHOP LEAFS 76
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 174933
Size 174933 at 0/2332
Size 174130 at 500/2332
Size 143793 at 1000/2332
Size 41304 at 1500/2332
Size 20243 at 2000/2332
Size 20203
Size 20203 at 0/2332
Size 20195 at 500/2332
Size 10699 at 1000/2332
Size 10697 at 1500/2332
Size 10689 at 2000/2332
Size 10689
Size 10689 at 0/2332
Size 10689 at 500/2332
Size 3294 at 1000/2332
Size 3270 at 1500/2332
Size 3198 at 2000/2332
Size 3198
Size 3198 at 0/2332
Size 3198 at 500/2332
Size 3078 at 1000/2332
Size 3078 at 1500/2332
Size 3078 at 2000/2332
Size 3078
Size 3078 at 0/2332
Size 3078 at 500/2332
Size 3013 at 1000/2332
Size 3013 at 1500/2332
Size 3013 at 2000/2332
Size 3013
Size 3013 at 0/2332
Size 3013 at 500/2332
Size 3013 at 1000/2332
Size 3013 at 1500/2332
Size 3013 at 2000/2332
Size 3013
Invariant time: 2.682
Number of invariants: 3013
Invariant Clauses 870757
NUMBER OF CLAUSES 1361893
NUMBER OF STATE CLAUSES 1145745
NUMBER OF DECOMPOSITION CLAUSES 216148
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.13% 15.870000000000001% 0.0% 
NUMBER OF PATHS 288
Starting cryptominisat5.5
Setting starttime of solver to 1604497084237
Command exited with non-zero status 10
0.96 0.02

Time command gave the following runtime for the solver: 980
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_5;2;2,690 690 _m3_get_second_ingredient_3
5;2;2 335 pathaction!3_5;2;2,3218
Consider method^3_6;1;3,3185 3185 _m2_get_first_ingredient_4
6;1;3 422 pathaction!3_6;1;3,797
Consider method^3_9;2;2,2136 2136 _m3_get_second_ingredient_3
9;2;2 283 pathaction!3_9;2;2,3227
Consider method^3_3;1;3,149 149 _m2_get_first_ingredient_4
3;1;3 64 pathaction!3_3;1;3,748
Consider method^3_2;2;2,3234 3234 _m3_get_second_ingredient_3
2;2;2 301 pathaction!3_2;2;2,3192
Consider method^2_10;1,2531 2531 m2_get_first_ingredient
10;1 293 pathaction!2_10;1,561
Consider method^3_6;1;1,3319 3319 m8_do_fill_shot
6;1;1 167 pathaction!3_6;1;1,965
Consider method^3_1;3;5,364 364 _m4_serve_shot_6
1;3;5 196 pathaction!3_1;3;5,1162
Consider method^3_8;3;5,1236 1236 _m4_serve_shot_6
8;3;5 372 pathaction!3_8;3;5,1163
Consider method^0_,4189 4189 __top_1
 93 pathaction!0_,3479
Consider method^3_9;2;1,4152 4152 _m3_get_second_ingredient_2
9;2;1 69 pathaction!3_9;2;1,670
Consider method^2_8;2,161 161 m3_get_second_ingredient
8;2 311 pathaction!2_8;2,1634
Consider method^3_5;3;1,94 94 _m4_serve_shot_2
5;3;1 171 pathaction!3_5;3;1,1039
Consider method^1_7,1288 1288 m0_do_cocktail_in_shot1
7 122 pathaction!1_7,1533
Consider method^3_0;1;1,3339 3339 m8_do_fill_shot
0;1;1 399 pathaction!3_0;1;1,954
Consider method^3_12;3;4,33 33 _m4_serve_shot_5
12;3;4 155 pathaction!3_12;3;4,3448
Consider method^4_8;3;1;0,349 349 m6_do_clean_shot
8;3;1;0 389 pathaction!4_8;3;1;0,2862
Consider method^1_4,1283 1283 m0_do_cocktail_in_shot1
4 401 pathaction!1_4,1526
Consider method^3_10;2;1,4157 4157 _m3_get_second_ingredient_2
10;2;1 291 pathaction!3_10;2;1,720
Consider method^3_0;1;2,2862 2862 _m2_get_first_ingredient_3
0;1;2 115 pathaction!3_0;1;2,1256
Consider method^3_7;1;3,2589 2589 _m2_get_first_ingredient_4
7;1;3 146 pathaction!3_7;1;3,840
Consider method^3_5;1;2,1385 1385 _m2_get_first_ingredient_3
5;1;2 195 pathaction!3_5;1;2,1210
Consider method^4_7;3;1;0,3123 3123 m5_do_clean_shot
7;3;1;0 202 pathaction!4_7;3;1;0,3128
Consider method^3_3;2;1,1491 1491 _m3_get_second_ingredient_2
3;2;1 45 pathaction!3_3;2;1,648
Consider method^3_7;1;1,2030 2030 m9_do_fill_shot
7;1;1 84 pathaction!3_7;1;1,1008
Consider method^2_3;1,140 140 m2_get_first_ingredient
3;1 370 pathaction!2_3;1,541
Consider method^3_7;3;5,135 135 _m4_serve_shot_6
7;3;5 402 pathaction!3_7;3;5,1135
Consider method^3_4;1;1,1281 1281 m8_do_fill_shot
4;1;1 232 pathaction!3_4;1;1,957
Consider method^2_1;1,2765 2765 m2_get_first_ingredient
1;1 1 pathaction!2_1;1,549
Consider method^3_7;3;4,2974 2974 _m4_serve_shot_5
7;3;4 153 pathaction!3_7;3;4,3472
Consider method^2_8;3,2455 2455 m4_serve_shot
8;3 99 pathaction!2_8;3,3139
Consider method^3_2;3;4,836 836 _m4_serve_shot_5
2;3;4 349 pathaction!3_2;3;4,3462
Consider method^3_2;3;1,3225 3225 _m4_serve_shot_2
2;3;1 307 pathaction!3_2;3;1,1045
Consider method^4_9;3;1;0,2899 2899 m5_do_clean_shot
9;3;1;0 168 pathaction!4_9;3;1;0,2812
Consider method^3_7;2;2,2998 2998 _m3_get_second_ingredient_3
7;2;2 162 pathaction!3_7;2;2,3161
Consider method^2_2;3,791 791 m4_serve_shot
2;3 25 pathaction!2_2;3,3145
Consider method^3_7;1;2,1077 1077 _m2_get_first_ingredient_3
7;1;2 180 pathaction!3_7;1;2,1248
Consider method^3_6;3;5,2184 2184 _m4_serve_shot_6
6;3;5 182 pathaction!3_6;3;5,1152
Consider method^2_7;2,896 896 m3_get_second_ingredient
7;2 132 pathaction!2_7;2,1638
Consider method^3_5;3;4,3548 3548 _m4_serve_shot_5
5;3;4 144 pathaction!3_5;3;4,3467
Consider method^4_2;3;1;0,3606 3606 m5_do_clean_shot
2;3;1;0 252 pathaction!4_2;3;1;0,2854
Consider method^2_6;3,687 687 m4_serve_shot
6;3 138 pathaction!2_6;3,3135
Consider method^3_6;1;2,2220 2220 _m2_get_first_ingredient_3
6;1;2 244 pathaction!3_6;1;2,1197
Consider method^3_5;2;1,4017 4017 _m3_get_second_ingredient_2
5;2;1 109 pathaction!3_5;2;1,724
Consider method^3_2;2;1,2427 2427 _m3_get_second_ingredient_2
2;2;1 231 pathaction!3_2;2;1,641
Consider method^1_8,1582 1582 m0_do_cocktail_in_shot1
8 204 pathaction!1_8,1529
Consider method^2_2;2,1455 1455 m3_get_second_ingredient
2;2 278 pathaction!2_2;2,1635
Consider method^3_10;3;1,2251 2251 _m4_serve_shot_2
10;3;1 173 pathaction!3_10;3;1,1047
Consider method^2_5;2,3301 3301 m3_get_second_ingredient
5;2 330 pathaction!2_5;2,1641
Consider method^3_12;1;1,3532 3532 m8_do_fill_shot
12;1;1 46 pathaction!3_12;1;1,914
Consider method^2_9;1,3415 3415 m2_get_first_ingredient
9;1 379 pathaction!2_9;1,543
Consider method^3_10;1;2,3320 3320 _m2_get_first_ingredient_3
10;1;2 59 pathaction!3_10;1;2,1179
Consider method^3_2;1;3,3551 3551 _m2_get_first_ingredient_4
2;1;3 169 pathaction!3_2;1;3,784
Consider method^4_1;3;1;0,796 796 m5_do_clean_shot
1;3;1;0 110 pathaction!4_1;3;1;0,3113
Consider method^3_3;3;4,2790 2790 _m4_serve_shot_5
3;3;4 140 pathaction!3_3;3;4,3478
Consider method^2_3;3,2908 2908 m4_serve_shot
3;3 76 pathaction!2_3;3,3134
Consider method^3_5;1;3,842 842 _m2_get_first_ingredient_4
5;1;3 265 pathaction!3_5;1;3,761
Consider method^3_1;1;3,2134 2134 _m2_get_first_ingredient_4
1;1;3 3 pathaction!3_1;1;3,799
Consider method^2_0;3,4132 4132 m4_serve_shot
0;3 211 pathaction!2_0;3,3137
Consider method^3_4;2;2,757 757 _m3_get_second_ingredient_3
4;2;2 57 pathaction!3_4;2;2,3157
Consider method^1_9,343 343 m0_do_cocktail_in_shot1
9 250 pathaction!1_9,1532
Consider method^3_9;1;1,2421 2421 m9_do_fill_shot
9;1;1 360 pathaction!3_9;1;1,996
Consider method^4_0;3;1;0,3534 3534 m5_do_clean_shot
0;3;1;0 328 pathaction!4_0;3;1;0,3058
Consider method^2_2;1,1235 1235 m2_get_first_ingredient
2;1 184 pathaction!2_2;1,551
Consider method^1_11,2410 2410 m1_do_cocktail_in_shot2
11 20 pathaction!1_11,1054
Consider method^2_4;1,2864 2864 m2_get_first_ingredient
4;1 79 pathaction!2_4;1,546
Consider method^3_5;1;1,1971 1971 m7_do_fill_shot
5;1;1 258 pathaction!3_5;1;1,929
Consider method^2_9;3,3296 3296 m4_serve_shot
9;3 413 pathaction!2_9;3,3142
Consider method^3_12;3;1,131 131 _m4_serve_shot_2
12;3;1 288 pathaction!3_12;3;1,1034
Consider method^1_1,2533 2533 m0_do_cocktail_in_shot1
1 113 pathaction!1_1,1534
Consider method^2_3;2,1154 1154 m3_get_second_ingredient
3;2 28 pathaction!2_3;2,1625
Consider method^3_9;1;2,3416 3416 _m2_get_first_ingredient_3
9;1;2 137 pathaction!3_9;1;2,1283
Consider method^3_4;1;3,3399 3399 _m2_get_first_ingredient_4
4;1;3 186 pathaction!3_4;1;3,789
Consider method^3_3;3;1,2491 2491 _m4_serve_shot_2
3;3;1 92 pathaction!3_3;3;1,1049
Consider method^2_6;2,431 431 m3_get_second_ingredient
6;2 248 pathaction!2_6;2,1629
Consider method^3_10;1;1,654 654 m7_do_fill_shot
10;1;1 70 pathaction!3_10;1;1,1028
Consider method^4_10;3;1;0,419 419 m5_do_clean_shot
10;3;1;0 49 pathaction!4_10;3;1;0,3047
Consider method^3_8;2;2,89 89 _m3_get_second_ingredient_3
8;2;2 393 pathaction!3_8;2;2,3247
Consider method^3_1;2;2,690 690 _m3_get_second_ingredient_3
1;2;2 305 pathaction!3_1;2;2,3218
Consider method^1_5,1174 1174 m0_do_cocktail_in_shot1
5 129 pathaction!1_5,1530
Consider method^3_10;1;3,3367 3367 _m2_get_first_ingredient_4
10;1;3 334 pathaction!3_10;1;3,860
Consider method^3_1;3;4,2792 2792 _m4_serve_shot_5
1;3;4 281 pathaction!3_1;3;4,3433
Consider method^3_10;3;4,3340 3340 _m4_serve_shot_5
10;3;4 261 pathaction!3_10;3;4,3468
Consider method^3_10;2;2,1029 1029 _m3_get_second_ingredient_3
10;2;2 62 pathaction!3_10;2;2,3230
Consider method^3_4;2;1,1889 1889 _m3_get_second_ingredient_2
4;2;1 356 pathaction!3_4;2;1,627
Consider method^3_0;2;1,3610 3610 _m3_get_second_ingredient_2
0;2;1 318 pathaction!3_0;2;1,645
Consider method^3_5;3;5,1095 1095 _m4_serve_shot_6
5;3;5 139 pathaction!3_5;3;5,1129
Consider method^3_6;3;4,233 233 _m4_serve_shot_5
6;3;4 241 pathaction!3_6;3;4,3456
Consider method^1_12,1679 1679 m0_do_cocktail_in_shot1
12 292 pathaction!1_12,1531
Consider method^3_2;1;1,2498 2498 m9_do_fill_shot
2;1;1 237 pathaction!3_2;1;1,952
Consider method^3_6;2;2,4086 4086 _m3_get_second_ingredient_3
6;2;2 136 pathaction!3_6;2;2,3188
Consider method^3_3;1;2,2565 2565 _m2_get_first_ingredient_3
3;1;2 130 pathaction!3_3;1;2,1255
Consider method^3_1;1;1,711 711 m9_do_fill_shot
1;1;1 374 pathaction!3_1;1;1,967
Consider method^2_0;1,3079 3079 m2_get_first_ingredient
0;1 98 pathaction!2_0;1,547
Consider method^2_12;2,2121 2121 m3_get_second_ingredient
12;2 221 pathaction!2_12;2,1625
Consider method^3_12;3;5,891 891 _m4_serve_shot_6
12;3;5 321 pathaction!3_12;3;5,1138
Consider method^3_12;1;3,1832 1832 _m2_get_first_ingredient_4
12;1;3 172 pathaction!3_12;1;3,746
Consider method^2_1;2,3020 3020 m3_get_second_ingredient
1;2 362 pathaction!2_1;2,1633
Consider method^3_12;2;1,596 596 _m3_get_second_ingredient_2
12;2;1 177 pathaction!3_12;2;1,671
Consider method^3_9;3;4,1796 1796 _m4_serve_shot_5
9;3;4 260 pathaction!3_9;3;4,3447
Consider method^3_12;1;2,561 561 _m2_get_first_ingredient_3
12;1;2 148 pathaction!3_12;1;2,1271
Consider method^3_4;3;4,3612 3612 _m4_serve_shot_5
4;3;4 68 pathaction!3_4;3;4,3474
Consider method^3_0;1;3,4002 4002 _m2_get_first_ingredient_4
0;1;3 222 pathaction!3_0;1;3,786
Consider method^3_8;3;1,379 379 _m4_serve_shot_2
8;3;1 107 pathaction!3_8;3;1,1038
Consider method^2_1;3,3423 3423 m4_serve_shot
1;3 7 pathaction!2_1;3,3144
Consider method^2_7;1,2389 2389 m2_get_first_ingredient
7;1 188 pathaction!2_7;1,554
Consider method^2_0;2,786 786 m3_get_second_ingredient
0;2 316 pathaction!2_0;2,1631
Consider method^2_10;2,3499 3499 m3_get_second_ingredient
10;2 193 pathaction!2_10;2,1645
Consider method^1_6,2059 2059 m0_do_cocktail_in_shot1
6 243 pathaction!1_6,1525
Consider method^3_9;3;1,3345 3345 _m4_serve_shot_2
9;3;1 189 pathaction!3_9;3;1,1033
Consider method^4_3;3;1;0,1267 1267 m5_do_clean_shot
3;3;1;0 4 pathaction!4_3;3;1;0,2782
Consider method^2_4;3,1783 1783 m4_serve_shot
4;3 313 pathaction!2_4;3,3136
Consider method^4_4;3;1;0,3203 3203 m5_do_clean_shot
4;3;1;0 246 pathaction!4_4;3;1;0,2931
Consider method^3_6;3;1,1744 1744 _m4_serve_shot_2
6;3;1 35 pathaction!3_6;3;1,1044
Consider method^3_4;1;2,1912 1912 _m2_get_first_ingredient_3
4;1;2 131 pathaction!3_4;1;2,1196
Consider method^2_10;3,3417 3417 m4_serve_shot
10;3 192 pathaction!2_10;3,3138
Consider method^1_10,3112 3112 m0_do_cocktail_in_shot1
10 236 pathaction!1_10,1528
Consider method^3_4;3;5,2786 2786 _m4_serve_shot_6
4;3;5 323 pathaction!3_4;3;5,1154
Consider method^2_5;1,1214 1214 m2_get_first_ingredient
5;1 190 pathaction!2_5;1,557
Consider method^3_7;2;1,3694 3694 _m3_get_second_ingredient_2
7;2;1 309 pathaction!3_7;2;1,740
Consider method^2_13;1,1541 1541 m9_do_fill_shot
13;1 408 pathaction!2_13;1,1018
Consider method^1_3,1768 1768 m0_do_cocktail_in_shot1
3 377 pathaction!1_3,1524
Consider method^3_12;2;2,2941 2941 _m3_get_second_ingredient_3
12;2;2 34 pathaction!3_12;2;2,3159
Consider method^2_8;1,1702 1702 m2_get_first_ingredient
8;1 366 pathaction!2_8;1,550
Consider method^3_7;3;1,255 255 _m4_serve_shot_2
7;3;1 152 pathaction!3_7;3;1,1035
Consider method^1_0,3709 3709 m0_do_cocktail_in_shot1
0 361 pathaction!1_0,1527
Consider method^3_3;1;1,3202 3202 m8_do_fill_shot
3;1;1 90 pathaction!3_3;1;1,916
Consider method^2_9;2,1622 1622 m3_get_second_ingredient
9;2 403 pathaction!2_9;2,1627
Consider method^1_13,536 536 m1_do_cocktail_in_shot2
13 215 pathaction!1_13,1055
Consider method^3_0;3;5,2985 2985 _m4_serve_shot_6
0;3;5 103 pathaction!3_0;3;5,1160
Consider method^3_8;2;1,1678 1678 _m3_get_second_ingredient_2
8;2;1 128 pathaction!3_8;2;1,681
Consider method^3_10;3;5,3170 3170 _m4_serve_shot_6
10;3;5 343 pathaction!3_10;3;5,1130
Consider method^1_2,3375 3375 m0_do_cocktail_in_shot1
2 322 pathaction!1_2,1535
Consider method^4_6;3;1;0,2246 2246 m6_do_clean_shot
6;3;1;0 298 pathaction!4_6;3;1;0,3096
Consider method^3_0;3;1,3311 3311 _m4_serve_shot_2
0;3;1 415 pathaction!3_0;3;1,1032
Consider method^4_5;3;1;0,641 641 m5_do_clean_shot
5;3;1;0 355 pathaction!4_5;3;1;0,2875
Consider method^3_8;1;1,4144 4144 m8_do_fill_shot
8;1;1 400 pathaction!3_8;1;1,993
Consider method^2_12;3,2206 2206 m4_serve_shot
12;3 6 pathaction!2_12;3,3141
Consider method^3_3;3;5,802 802 _m4_serve_shot_6
3;3;5 176 pathaction!3_3;3;5,1125
Consider method^2_7;3,2112 2112 m4_serve_shot
7;3 317 pathaction!2_7;3,3143
Consider method^2_11;1,1216 1216 m9_do_fill_shot
11;1 181 pathaction!2_11;1,940
Consider method^3_9;3;5,2092 2092 _m4_serve_shot_6
9;3;5 53 pathaction!3_9;3;5,1145
Consider method^3_1;3;1,2119 2119 _m4_serve_shot_2
1;3;1 96 pathaction!3_1;3;1,1046
Consider method^2_12;1,2024 2024 m2_get_first_ingredient
12;1 33 pathaction!2_12;1,541
Consider method^4_12;3;1;0,657 657 m6_do_clean_shot
12;3;1;0 230 pathaction!4_12;3;1;0,2795
Consider method^3_0;3;4,3212 3212 _m4_serve_shot_5
0;3;4 160 pathaction!3_0;3;4,3436
Consider method^3_6;2;1,181 181 _m3_get_second_ingredient_2
6;2;1 319 pathaction!3_6;2;1,733
Consider method^3_8;1;2,3879 3879 _m2_get_first_ingredient_3
8;1;2 74 pathaction!3_8;1;2,1202
Consider method^3_8;1;3,3977 3977 _m2_get_first_ingredient_4
8;1;3 23 pathaction!3_8;1;3,825
Consider method^3_8;3;4,2200 2200 _m4_serve_shot_5
8;3;4 78 pathaction!3_8;3;4,3435
Consider method^3_0;2;2,2372 2372 _m3_get_second_ingredient_3
0;2;2 238 pathaction!3_0;2;2,3225
Consider method^3_1;2;1,4017 4017 _m3_get_second_ingredient_2
1;2;1 392 pathaction!3_1;2;1,724
Consider method^2_13;0,1648 1648 _m1_do_cocktail_in_shot2_4
13;0 338 pathaction!2_13;0,2773
Consider method^3_2;3;5,612 612 _m4_serve_shot_6
2;3;5 101 pathaction!3_2;3;5,1161
Consider method^3_4;3;1,1206 1206 _m4_serve_shot_2
4;3;1 346 pathaction!3_4;3;1,1031
Consider method^3_9;1;3,2989 2989 _m2_get_first_ingredient_4
9;1;3 147 pathaction!3_9;1;3,828
Consider method^3_1;1;2,2939 2939 _m2_get_first_ingredient_3
1;1;2 367 pathaction!3_1;1;2,1181
Consider method^2_6;1,3710 3710 m2_get_first_ingredient
6;1 226 pathaction!2_6;1,545
Consider method^2_5;3,1290 1290 m4_serve_shot
5;3 282 pathaction!2_5;3,3140
Consider method^2_11;0,1648 1648 _m1_do_cocktail_in_shot2_4
11;0 391 pathaction!2_11;0,2773
Consider method^3_3;2;2,3752 3752 _m3_get_second_ingredient_3
3;2;2 32 pathaction!3_3;2;2,3212
Consider method^2_4;2,2467 2467 m3_get_second_ingredient
4;2 21 pathaction!2_4;2,1630
Consider method^3_2;1;2,2308 2308 _m2_get_first_ingredient_3
2;1;2 125 pathaction!3_2;1;2,1273


CHECKING primitive solution of length 262 ...
true 354 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 259 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot15;]
true 209 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser3,ingredient3;]
true 326 grasp[left,shot15;]
true 165 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 233 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 112 clean-shot[shot15,ingredient3,left,right;]
true 41 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot15;]
true 38 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 108 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 340 leave[left,shot15;]
true 145 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient4;]
true 194 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 212 nop[;]
true 185 grasp[right,shaker1;]
true 201 shake[cocktail10,ingredient3,ingredient4,shaker1,right,left;]
true 272 pour-shaker-to-shot[cocktail10,shot1,right,shaker1,l2,l1;]
true 114 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 304 clean-shaker[right,left,shaker1;]
true 31 leave[right,shaker1;]
true 65 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 10 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient3,shot15;]
true 87 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient4,dispenser3;]
true 50 grasp[right,shot15;]
true 71 clean-shot[shot15,ingredient4,right,left;]
true 187 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 219 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1;]
true 257 clean-shot[shot15,ingredient3,right,left;]
true 2 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,right,shot15;]
true 266 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 19 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 395 leave[right,shot15;]
true 27 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient3,ingredient1;]
true 306 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 352 nop[;]
true 119 grasp[left,shaker1;]
true 380 shake[cocktail9,ingredient3,ingredient1,shaker1,left,right;]
true 12 pour-shaker-to-shot[cocktail9,shot2,left,shaker1,l2,l1;]
true 350 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 72 clean-shaker[left,right,shaker1;]
true 85 leave[left,shaker1;]
true 16 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 397 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot15;]
true 157 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient1,dispenser2;]
true 417 grasp[right,shot15;]
true 0 clean-shot[shot15,ingredient1,right,left;]
true 86 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 255 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 369 clean-shot[shot15,ingredient2,right,left;]
true 286 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,right,shot15;]
true 414 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 314 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 279 leave[right,shot15;]
true 378 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient4;]
true 263 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 345 nop[;]
true 253 grasp[left,shaker1;]
true 174 shake[cocktail8,ingredient2,ingredient4,shaker1,left,right;]
true 163 pour-shaker-to-shot[cocktail8,shot3,left,shaker1,l2,l1;]
true 97 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 15 clean-shaker[left,right,shaker1;]
true 418 leave[left,shaker1;]
true 198 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 133 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot14;]
true 29 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser2,ingredient2;]
true 228 grasp[right,shot14;]
true 371 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 287 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,right,l0,l1;]
true 170 clean-shot[shot14,ingredient2,right,left;]
true 351 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient3,right,shot14;]
true 166 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 13 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,right,l1,l2;]
true 40 leave[right,shot14;]
true 127 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient3;]
true 224 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 225 nop[;]
true 5 grasp[left,shaker1;]
true 269 shake[cocktail1,ingredient2,ingredient3,shaker1,left,right;]
true 376 pour-shaker-to-shot[cocktail1,shot4,left,shaker1,l2,l1;]
true 398 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 217 clean-shaker[left,right,shaker1;]
true 117 leave[left,shaker1;]
true 410 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 247 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot12;]
true 218 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser2,ingredient2;]
true 290 grasp[left,shot12;]
true 159 fill-shot[shot12,ingredient2,left,right,dispenser2;]
true 262 pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,left,l0,l1;]
true 22 clean-shot[shot12,ingredient2,left,right;]
true 197 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient3,left,shot12;]
true 245 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 239 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,left,l1,l2;]
true 207 leave[left,shot12;]
true 254 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient3;]
true 121 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 416 nop[;]
true 419 grasp[left,shaker1;]
true 89 shake[cocktail4,ingredient2,ingredient3,shaker1,left,right;]
true 54 pour-shaker-to-shot[cocktail4,shot5,left,shaker1,l2,l1;]
true 104 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 384 clean-shaker[left,right,shaker1;]
true 95 leave[left,shaker1;]
true 421 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 63 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot15;]
true 331 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient4,dispenser4;]
true 142 grasp[right,shot15;]
true 332 refill-shot[shot15,ingredient4,right,left,dispenser4;]
true 8 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 404 clean-shot[shot15,ingredient4,right,left;]
true 9 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,right,shot15;]
true 120 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 342 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 303 leave[right,shot15;]
true 43 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1;]
true 320 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 302 nop[;]
true 394 grasp[right,shaker1;]
true 55 shake[cocktail6,ingredient4,ingredient1,shaker1,right,left;]
true 18 pour-shaker-to-shot[cocktail6,shot6,right,shaker1,l2,l1;]
true 223 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 210 clean-shaker[right,left,shaker1;]
true 14 leave[right,shaker1;]
true 102 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 240 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot7;]
true 158 __method_precondition_m8_do_fill_shot_8_precondition[shot7,dispenser2,ingredient2;]
true 406 grasp[left,shot7;]
true 175 fill-shot[shot7,ingredient2,left,right,dispenser2;]
true 42 pour-shot-to-clean-shaker[shot7,ingredient2,shaker1,left,l0,l1;]
true 141 clean-shot[shot7,ingredient2,left,right;]
true 213 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,left,shot7;]
true 234 fill-shot[shot7,ingredient4,left,right,dispenser4;]
true 388 pour-shot-to-used-shaker[shot7,ingredient4,shaker1,left,l1,l2;]
true 271 leave[left,shot7;]
true 284 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient4;]
true 80 __method_precondition_m6_do_clean_shot_6_precondition[shot7,left;]
true 44 grasp[left,shot7;]
true 199 clean-shot[shot7,ingredient4,left,right;]
true 382 leave[left,shot7;]
true 249 grasp[right,shaker1;]
true 200 shake[cocktail7,ingredient2,ingredient4,shaker1,right,left;]
true 295 pour-shaker-to-shot[cocktail7,shot7,right,shaker1,l2,l1;]
true 270 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 359 clean-shaker[right,left,shaker1;]
true 294 leave[right,shaker1;]
true 227 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 83 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot15;]
true 386 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient1,dispenser2;]
true 280 grasp[left,shot15;]
true 11 clean-shot[shot15,ingredient1,left,right;]
true 348 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 56 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1;]
true 123 clean-shot[shot15,ingredient2,left,right;]
true 124 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot15;]
true 149 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 396 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,left,l1,l2;]
true 82 leave[left,shot15;]
true 299 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient1;]
true 339 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 135 nop[;]
true 365 grasp[right,shaker1;]
true 276 shake[cocktail5,ingredient2,ingredient1,shaker1,right,left;]
true 94 pour-shaker-to-shot[cocktail5,shot8,right,shaker1,l2,l1;]
true 315 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 412 clean-shaker[right,left,shaker1;]
true 37 leave[right,shaker1;]
true 191 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 296 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot9;]
true 118 __method_precondition_m8_do_fill_shot_8_precondition[shot9,dispenser2,ingredient2;]
true 267 grasp[right,shot9;]
true 310 fill-shot[shot9,ingredient2,right,left,dispenser2;]
true 26 pour-shot-to-clean-shaker[shot9,ingredient2,shaker1,right,l0,l1;]
true 385 clean-shot[shot9,ingredient2,right,left;]
true 47 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot9;]
true 423 fill-shot[shot9,ingredient3,right,left,dispenser3;]
true 387 pour-shot-to-used-shaker[shot9,ingredient3,shaker1,right,l1,l2;]
true 300 leave[right,shot9;]
true 375 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient3;]
true 329 __method_precondition_m6_do_clean_shot_6_precondition[shot9,left;]
true 381 grasp[left,shot9;]
true 116 clean-shot[shot9,ingredient3,left,right;]
true 151 leave[left,shot9;]
true 341 grasp[right,shaker1;]
true 364 shake[cocktail2,ingredient2,ingredient3,shaker1,right,left;]
true 203 pour-shaker-to-shot[cocktail2,shot9,right,shaker1,l2,l1;]
true 134 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 368 clean-shaker[right,left,shaker1;]
true 51 leave[right,shaker1;]
true 77 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 285 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot14;]
true 100 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient3,dispenser2;]
true 106 grasp[left,shot14;]
true 143 clean-shot[shot14,ingredient3,left,right;]
true 58 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 61 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 208 clean-shot[shot14,ingredient2,left,right;]
true 344 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,left,shot14;]
true 333 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 30 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2;]
true 327 leave[left,shot14;]
true 39 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient1;]
true 126 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 312 nop[;]
true 229 grasp[right,shaker1;]
true 268 shake[cocktail3,ingredient2,ingredient1,shaker1,right,left;]
true 52 pour-shaker-to-shot[cocktail3,shot10,right,shaker1,l2,l1;]
true 220 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 390 clean-shaker[right,left,shaker1;]
true 409 leave[right,shaker1;]
true 75 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 24 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient1,shot15;]
true 178 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient1,dispenser1;]
true 336 grasp[left,shot15;]
true 81 refill-shot[shot15,ingredient1,left,right,dispenser1;]
true 363 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 214 clean-shot[shot15,ingredient1,left,right;]
true 273 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot15;]
true 154 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 264 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 347 leave[left,shot15;]
true 373 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient1,ingredient2;]
true 411 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 183 nop[;]
true 67 grasp[left,shaker1;]
true 179 shake[cocktail11,ingredient1,ingredient2,shaker1,left,right;]
true 424 pour-shaker-to-shot[cocktail11,shot11,left,shaker1,l2,l1;]
true 88 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 206 clean-shaker[left,right,shaker1;]
true 164 leave[left,shaker1;]
true 235 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 405 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient3,dispenser4;]
true 205 grasp[right,shot12;]
true 420 clean-shot[shot12,ingredient3,right,left;]
true 337 fill-shot[shot12,ingredient4,right,left,dispenser4;]
true 91 leave[right,shot12;]
true 48 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right;]
true 274 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot13;]
true 275 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser2,ingredient2;]
true 242 grasp[right,shot13;]
true 36 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 407 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,right,l0,l1;]
true 60 clean-shot[shot13,ingredient2,right,left;]
true 66 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient3,right,shot13;]
true 17 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 277 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2;]
true 308 leave[right,shot13;]
true 325 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient3;]
true 105 __method_precondition_m6_do_clean_shot_6_precondition[shot13,left;]
true 256 grasp[left,shot13;]
true 111 clean-shot[shot13,ingredient3,left,right;]
true 358 leave[left,shot13;]
true 73 grasp[right,shaker1;]
true 357 shake[cocktail1,ingredient2,ingredient3,shaker1,right,left;]
true 383 pour-shaker-to-shot[cocktail1,shot13,right,shaker1,l2,l1;]
true 324 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 216 clean-shaker[right,left,shaker1;]
true 161 leave[right,shaker1;]
true 156 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 150 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient4,ingredient1,dispenser4;]
true 297 grasp[right,shot14;]
true 353 clean-shot[shot14,ingredient1,right,left;]
true 251 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 289 leave[right,shot14;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2298
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 4596
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 6894
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 9192
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 11490
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 13788
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 16086
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 18384
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 20682
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 22980
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 25278
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 27576
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 29874
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 32172
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 34470
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 36768
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 39066
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 41364
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 43662
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 45960
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 48258
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 50556
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 52854
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 55152
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 57450
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 59748
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 62046
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 64344
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 66642
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 68940
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 71238
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 73536
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 75834
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 78132
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 80430
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 82728
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 85026
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 87324
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 89622
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 91920
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 94218
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 96516
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 98814
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 101112
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 103410
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 105708
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 108006
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 110304
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 112602
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 114900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 117198
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 119496
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 121794
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 124092
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 126390
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 128688
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 130986
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 133284
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 135582
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 137880
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 140178
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 142476
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 144774
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 147072
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 149370
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 151668
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 153966
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 156264
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 158562
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 160860
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 163158
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 165456
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 167754
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 170052
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 172350
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 174648
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 176946
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 179244
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 181542
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 183840
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 186138
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 188436
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 190734
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 193032
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 195330
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 197628
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 199926
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 202224
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 204522
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 206820
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 209118
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 211416
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 213714
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 216012
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 218310
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 220608
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 222906
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 225204
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 227502
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 229800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 232098
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 234396
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 236694
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 238992
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 241290
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 243588
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 245886
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 248184
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 250482
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 252780
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 255078
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 257376
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 259674
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 261972
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 264270
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 266568
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 268866
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 271164
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 273462
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 275760
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 278058
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 280356
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 282654
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 284952
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 287250
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 126
ICAPS: 289548
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 127
ICAPS: 291846
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 128
ICAPS: 294144
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 129
ICAPS: 296442
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 130
ICAPS: 298740
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 131
ICAPS: 301038
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.101 MEMPEAK_KBS 690249.728
