PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p20.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p20.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p20.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Grounded planning graph ... done in 621ms.
	Number of Grounded Actions 3009
	Number of Grounded Literals 443
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Grounding ... done.
	number of abstract tasks = 1290
	number of tasks = 3973
	number of decomposition methods = 4939
	number of predicates = 443
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1290
	number of tasks = 3973
	number of decomposition methods = 4939
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 479ms.
	Number of Grounded Actions 2683
	Number of Grounded Literals 413
	number of abstract tasks = 1290
	number of tasks = 3973
	number of decomposition methods = 4939
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1290
	number of tasks = 3973
	number of decomposition methods = 4939
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1291
	number of tasks = 3974
	number of decomposition methods = 4940
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1291
	number of tasks = 3974
	number of decomposition methods = 4940
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 230ms.
	Number of Grounded Actions 2683
	Number of Grounded Literals 413
	number of abstract tasks = 1291
	number of tasks = 3974
	number of decomposition methods = 4940
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1291
	number of tasks = 3974
	number of decomposition methods = 4940
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1291
	number of tasks = 3974
	number of decomposition methods = 4940
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1291
	number of tasks = 3974
	number of decomposition methods = 4940
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1291
	number of tasks = 3974
	number of decomposition methods = 4940
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Tasks 2683 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768153ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767618
done
initial PDT has 328 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 328 leafs
SHOP LEAFS 86
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 255234
Size 255192 at 0/2683
Size 253946 at 500/2683
Size 56999 at 1000/2683
Size 33998 at 1500/2683
Size 33998 at 2000/2683
Size 28732 at 2500/2683
Size 28732
Size 28406 at 0/2683
Size 22095 at 500/2683
Size 20693 at 1000/2683
Size 6157 at 1500/2683
Size 6157 at 2000/2683
Size 5556 at 2500/2683
Size 5556
Size 5556 at 0/2683
Size 5556 at 500/2683
Size 5515 at 1000/2683
Size 4409 at 1500/2683
Size 4409 at 2000/2683
Size 4383 at 2500/2683
Size 4383
Size 4353 at 0/2683
Size 4331 at 500/2683
Size 4323 at 1000/2683
Size 4105 at 1500/2683
Size 4105 at 2000/2683
Size 4093 at 2500/2683
Size 4093
Size 4091 at 0/2683
Size 4090 at 500/2683
Size 4090 at 1000/2683
Size 4080 at 1500/2683
Size 4080 at 2000/2683
Size 4079 at 2500/2683
Size 4079
Size 4079 at 0/2683
Size 4079 at 500/2683
Size 4079 at 1000/2683
Size 4079 at 1500/2683
Size 4079 at 2000/2683
Size 4079 at 2500/2683
Size 4079
Invariant time: 2.691
Number of invariants: 4079
Invariant Clauses 1341991
NUMBER OF CLAUSES 2035625
NUMBER OF STATE CLAUSES 1717628
NUMBER OF DECOMPOSITION CLAUSES 317997
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.38% 15.620000000000001% 0.0% 
NUMBER OF PATHS 328
Starting cryptominisat5.5
Setting starttime of solver to 1604498587226
Command exited with non-zero status 10
1.18 0.07

Time command gave the following runtime for the solver: 1250
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_14;3;5,1104 1104 _m4_serve_shot_6
14;3;5 205 pathaction!3_14;3;5,744
Consider method^3_7;3;4,1914 1914 _m4_serve_shot_5
7;3;4 255 pathaction!3_7;3;4,1372
Consider method^3_4;3;5,759 759 _m4_serve_shot_6
4;3;5 436 pathaction!3_4;3;5,767
Consider method^3_9;1;3,3110 3110 _m2_get_first_ingredient_4
9;1;3 59 pathaction!3_9;1;3,1097
Consider method^3_6;1;3,1531 1531 _m2_get_first_ingredient_4
6;1;3 362 pathaction!3_6;1;3,1074
Consider method^3_2;2;1,3623 3623 _m3_get_second_ingredient_2
2;2;1 373 pathaction!3_2;2;1,945
Consider method^2_10;1,3383 3383 m2_get_first_ingredient
10;1 185 pathaction!2_10;1,3280
Consider method^3_10;1;3,3793 3793 _m2_get_first_ingredient_4
10;1;3 181 pathaction!3_10;1;3,1124
Consider method^4_10;3;1;0,515 515 m5_do_clean_shot
10;3;1;0 101 pathaction!4_10;3;1;0,3171
Consider method^2_7;3,1160 1160 m4_serve_shot
7;3 471 pathaction!2_7;3,1417
Consider method^3_3;1;1,3935 3935 m8_do_fill_shot
3;1;1 35 pathaction!3_3;1;1,691
Consider method^4_3;3;1;0,822 822 m6_do_clean_shot
3;3;1;0 338 pathaction!4_3;3;1;0,3037
Consider method^3_10;1;1,1995 1995 m9_do_fill_shot
10;1;1 477 pathaction!3_10;1;1,682
Consider method^3_1;1;1,538 538 m8_do_fill_shot
1;1;1 378 pathaction!3_1;1;1,667
Consider method^3_8;1;2,4843 4843 _m2_get_first_ingredient_3
8;1;2 80 pathaction!3_8;1;2,1883
Consider method^2_13;1,2840 2840 m2_get_first_ingredient
13;1 356 pathaction!2_13;1,3299
Consider method^3_13;2;1,1176 1176 _m3_get_second_ingredient_2
13;2;1 169 pathaction!3_13;2;1,886
Consider method^3_7;1;2,3653 3653 _m2_get_first_ingredient_3
7;1;2 195 pathaction!3_7;1;2,1926
Consider method^3_5;2;1,2321 2321 _m3_get_second_ingredient_2
5;2;1 242 pathaction!3_5;2;1,919
Consider method^3_5;2;2,3043 3043 _m3_get_second_ingredient_3
5;2;2 43 pathaction!3_5;2;2,1251
Consider method^3_1;2;2,2224 2224 _m3_get_second_ingredient_3
1;2;2 50 pathaction!3_1;2;2,1249
Consider method^3_4;1;2,3993 3993 _m2_get_first_ingredient_3
4;1;2 234 pathaction!3_4;1;2,1843
Consider method^3_7;3;5,999 999 _m4_serve_shot_6
7;3;5 360 pathaction!3_7;3;5,739
Consider method^2_5;2,588 588 m3_get_second_ingredient
5;2 163 pathaction!2_5;2,269
Consider method^2_13;3,3609 3609 m4_serve_shot
13;3 173 pathaction!2_13;3,1427
Consider method^3_1;2;1,3881 3881 _m3_get_second_ingredient_2
1;2;1 310 pathaction!3_1;2;1,927
Consider method^1_6,4208 4208 m0_do_cocktail_in_shot1
6 427 pathaction!1_6,3365
Consider method^3_0;3;4,2658 2658 _m4_serve_shot_5
0;3;4 414 pathaction!3_0;3;4,1407
Consider method^4_4;3;1;0,4463 4463 m5_do_clean_shot
4;3;1;0 251 pathaction!4_4;3;1;0,3060
Consider method^3_4;1;1,4376 4376 m8_do_fill_shot
4;1;1 211 pathaction!3_4;1;1,603
Consider method^3_8;3;5,4248 4248 _m4_serve_shot_6
8;3;5 345 pathaction!3_8;3;5,750
Consider method^3_10;1;2,2748 2748 _m2_get_first_ingredient_3
10;1;2 71 pathaction!3_10;1;2,1956
Consider method^3_6;1;2,3863 3863 _m2_get_first_ingredient_3
6;1;2 469 pathaction!3_6;1;2,1905
Consider method^3_14;1;2,779 779 _m2_get_first_ingredient_3
14;1;2 136 pathaction!3_14;1;2,1913
Consider method^0_,4939 4939 __top_1
 203 pathaction!0_,3973
Consider method^2_3;1,3552 3552 m2_get_first_ingredient
3;1 268 pathaction!2_3;1,3282
Consider method^2_0;2,800 800 m3_get_second_ingredient
0;2 241 pathaction!2_0;2,264
Consider method^3_9;3;5,431 431 _m4_serve_shot_6
9;3;5 161 pathaction!3_9;3;5,733
Consider method^1_0,16 16 m0_do_cocktail_in_shot1
0 346 pathaction!1_0,3371
Consider method^3_14;1;1,4391 4391 m8_do_fill_shot
14;1;1 140 pathaction!3_14;1;1,724
Consider method^2_13;2,2651 2651 m3_get_second_ingredient
13;2 276 pathaction!2_13;2,277
Consider method^3_8;1;1,4153 4153 m8_do_fill_shot
8;1;1 318 pathaction!3_8;1;1,716
Consider method^3_9;3;4,1825 1825 _m4_serve_shot_5
9;3;4 387 pathaction!3_9;3;4,1387
Consider method^4_5;3;1;0,679 679 m6_do_clean_shot
5;3;1;0 226 pathaction!4_5;3;1;0,3002
Consider method^2_9;1,1792 1792 m2_get_first_ingredient
9;1 380 pathaction!2_9;1,3294
Consider method^3_12;3;5,1968 1968 _m4_serve_shot_6
12;3;5 170 pathaction!3_12;3;5,756
Consider method^3_14;3;1,1030 1030 _m4_serve_shot_2
14;3;1 3 pathaction!3_14;3;1,3334
Consider method^2_14;1,4448 4448 m2_get_first_ingredient
14;1 431 pathaction!2_14;1,3282
Consider method^3_10;2;1,4914 4914 _m3_get_second_ingredient_2
10;2;1 391 pathaction!3_10;2;1,923
Consider method^3_3;1;2,986 986 _m2_get_first_ingredient_3
3;1;2 324 pathaction!3_3;1;2,1924
Consider method^2_0;3,4209 4209 m4_serve_shot
0;3 385 pathaction!2_0;3,1425
Consider method^1_14,332 332 m0_do_cocktail_in_shot1
14 111 pathaction!1_14,3375
Consider method^3_10;2;2,2382 2382 _m3_get_second_ingredient_3
10;2;2 235 pathaction!3_10;2;2,1187
Consider method^3_2;3;1,1161 1161 _m4_serve_shot_2
2;3;1 86 pathaction!3_2;3;1,3361
Consider method^3_8;3;4,4767 4767 _m4_serve_shot_5
8;3;4 171 pathaction!3_8;3;4,1394
Consider method^3_14;1;3,1267 1267 _m2_get_first_ingredient_4
14;1;3 260 pathaction!3_14;1;3,1166
Consider method^3_5;1;2,1156 1156 _m2_get_first_ingredient_3
5;1;2 39 pathaction!3_5;1;2,1896
Consider method^3_5;3;1,4161 4161 _m4_serve_shot_2
5;3;1 485 pathaction!3_5;3;1,3344
Consider method^3_12;1;3,1165 1165 _m2_get_first_ingredient_4
12;1;3 393 pathaction!3_12;1;3,1087
Consider method^1_7,4108 4108 m0_do_cocktail_in_shot1
7 155 pathaction!1_7,3363
Consider method^3_8;2;2,4447 4447 _m3_get_second_ingredient_3
8;2;2 294 pathaction!3_8;2;2,1276
Consider method^3_0;2;2,2228 2228 _m3_get_second_ingredient_3
0;2;2 483 pathaction!3_0;2;2,1233
Consider method^3_13;1;2,3631 3631 _m2_get_first_ingredient_3
13;1;2 88 pathaction!3_13;1;2,1881
Consider method^3_12;1;2,2126 2126 _m2_get_first_ingredient_3
12;1;2 453 pathaction!3_12;1;2,1884
Consider method^2_3;3,4491 4491 m4_serve_shot
3;3 139 pathaction!2_3;3,1416
Consider method^3_0;3;1,237 237 _m4_serve_shot_2
0;3;1 17 pathaction!3_0;3;1,3337
Consider method^3_13;1;1,1799 1799 m9_do_fill_shot
13;1;1 196 pathaction!3_13;1;1,703
Consider method^3_13;1;3,728 728 _m2_get_first_ingredient_4
13;1;3 350 pathaction!3_13;1;3,1145
Consider method^2_10;2,3955 3955 m3_get_second_ingredient
10;2 38 pathaction!2_10;2,258
Consider method^4_0;3;1;0,210 210 m6_do_clean_shot
0;3;1;0 37 pathaction!4_0;3;1;0,3226
Consider method^1_4,1188 1188 m0_do_cocktail_in_shot1
4 62 pathaction!1_4,3370
Consider method^3_10;3;5,1828 1828 _m4_serve_shot_6
10;3;5 132 pathaction!3_10;3;5,730
Consider method^3_1;1;3,18 18 _m2_get_first_ingredient_4
1;1;3 443 pathaction!3_1;1;3,1109
Consider method^3_13;2;2,3069 3069 _m3_get_second_ingredient_3
13;2;2 125 pathaction!3_13;2;2,1238
Consider method^3_13;3;4,280 280 _m4_serve_shot_5
13;3;4 304 pathaction!3_13;3;4,1381
Consider method^2_0;1,2023 2023 m2_get_first_ingredient
0;1 449 pathaction!2_0;1,3286
Consider method^3_7;2;1,308 308 _m3_get_second_ingredient_2
7;2;1 183 pathaction!3_7;2;1,901
Consider method^3_3;2;1,705 705 _m3_get_second_ingredient_2
3;2;1 206 pathaction!3_3;2;1,926
Consider method^4_12;3;1;0,1927 1927 m5_do_clean_shot
12;3;1;0 168 pathaction!4_12;3;1;0,2884
Consider method^2_1;3,119 119 m4_serve_shot
1;3 295 pathaction!2_1;3,1420
Consider method^3_3;3;4,3155 3155 _m4_serve_shot_5
3;3;4 452 pathaction!3_3;3;4,1378
Consider method^3_4;2;1,1951 1951 _m3_get_second_ingredient_2
4;2;1 419 pathaction!3_4;2;1,898
Consider method^2_10;3,170 170 m4_serve_shot
10;3 314 pathaction!2_10;3,1421
Consider method^3_2;1;3,3076 3076 _m2_get_first_ingredient_4
2;1;3 78 pathaction!3_2;1;3,1076
Consider method^4_8;3;1;0,1386 1386 m6_do_clean_shot
8;3;1;0 77 pathaction!4_8;3;1;0,3146
Consider method^2_11;1,4142 4142 m9_do_fill_shot
11;1 225 pathaction!2_11;1,603
Consider method^3_9;2;2,2070 2070 _m3_get_second_ingredient_3
9;2;2 70 pathaction!3_9;2;2,1189
Consider method^3_5;1;1,3636 3636 m8_do_fill_shot
5;1;1 184 pathaction!3_5;1;1,693
Consider method^3_0;1;3,1173 1173 _m2_get_first_ingredient_4
0;1;3 118 pathaction!3_0;1;3,1050
Consider method^3_12;1;1,1410 1410 m8_do_fill_shot
12;1;1 69 pathaction!3_12;1;1,645
Consider method^1_12,4830 4830 m0_do_cocktail_in_shot1
12 68 pathaction!1_12,3369
Consider method^2_7;2,2974 2974 m3_get_second_ingredient
7;2 129 pathaction!2_7;2,256
Consider method^1_5,3367 3367 m0_do_cocktail_in_shot1
5 40 pathaction!1_5,3364
Consider method^3_7;3;1,3277 3277 _m4_serve_shot_2
7;3;1 392 pathaction!3_7;3;1,3340
Consider method^3_14;2;1,4910 4910 _m3_get_second_ingredient_2
14;2;1 227 pathaction!3_14;2;1,970
Consider method^2_4;1,4531 4531 m2_get_first_ingredient
4;1 461 pathaction!2_4;1,3297
Consider method^3_8;1;3,340 340 _m2_get_first_ingredient_4
8;1;3 459 pathaction!3_8;1;3,1158
Consider method^2_12;2,1312 1312 m3_get_second_ingredient
12;2 46 pathaction!2_12;2,267
Consider method^3_3;2;2,2921 2921 _m3_get_second_ingredient_3
3;2;2 261 pathaction!3_3;2;2,1183
Consider method^1_2,535 535 m0_do_cocktail_in_shot1
2 290 pathaction!1_2,3374
Consider method^3_13;3;5,999 999 _m4_serve_shot_6
13;3;5 103 pathaction!3_13;3;5,739
Consider method^3_4;1;3,2898 2898 _m2_get_first_ingredient_4
4;1;3 271 pathaction!3_4;1;3,1045
Consider method^1_10,3604 3604 m0_do_cocktail_in_shot1
10 266 pathaction!1_10,3367
Consider method^4_6;3;1;0,3122 3122 m6_do_clean_shot
6;3;1;0 434 pathaction!4_6;3;1;0,3229
Consider method^2_2;3,1400 1400 m4_serve_shot
2;3 335 pathaction!2_2;3,1428
Consider method^3_7;2;2,1316 1316 _m3_get_second_ingredient_3
7;2;2 273 pathaction!3_7;2;2,1184
Consider method^4_9;3;1;0,389 389 m6_do_clean_shot
9;3;1;0 192 pathaction!4_9;3;1;0,3080
Consider method^2_1;1,384 384 m2_get_first_ingredient
1;1 278 pathaction!2_1;1,3293
Consider method^2_12;1,709 709 m2_get_first_ingredient
12;1 42 pathaction!2_12;1,3289
Consider method^3_0;2;1,2048 2048 _m3_get_second_ingredient_2
0;2;1 487 pathaction!3_0;2;1,950
Consider method^2_2;1,898 898 m2_get_first_ingredient
2;1 376 pathaction!2_2;1,3290
Consider method^2_6;1,4588 4588 m2_get_first_ingredient
6;1 216 pathaction!2_6;1,3283
Consider method^1_3,3480 3480 m0_do_cocktail_in_shot1
3 198 pathaction!1_3,3362
Consider method^1_13,1730 1730 m0_do_cocktail_in_shot1
13 492 pathaction!1_13,3373
Consider method^2_8;3,3320 3320 m4_serve_shot
8;3 240 pathaction!2_8;3,1422
Consider method^3_10;3;1,2734 2734 _m4_serve_shot_2
10;3;1 60 pathaction!3_10;3;1,3355
Consider method^3_1;3;1,3388 3388 _m4_serve_shot_2
1;3;1 138 pathaction!3_1;3;1,3360
Consider method^3_12;2;1,3501 3501 _m3_get_second_ingredient_2
12;2;1 409 pathaction!3_12;2;1,910
Consider method^3_6;2;2,4851 4851 _m3_get_second_ingredient_3
6;2;2 327 pathaction!3_6;2;2,1209
Consider method^1_9,338 338 m0_do_cocktail_in_shot1
9 297 pathaction!1_9,3372
Consider method^2_3;2,2528 2528 m3_get_second_ingredient
3;2 209 pathaction!2_3;2,260
Consider method^3_4;3;4,3850 3850 _m4_serve_shot_5
4;3;4 370 pathaction!3_4;3;4,1413
Consider method^3_6;2;1,220 220 _m3_get_second_ingredient_2
6;2;1 339 pathaction!3_6;2;1,986
Consider method^3_2;3;4,4382 4382 _m4_serve_shot_5
2;3;4 248 pathaction!3_2;3;4,1388
Consider method^2_11;0,2891 2891 _m1_do_cocktail_in_shot2_4
11;0 284 pathaction!2_11;0,3957
Consider method^2_14;3,2042 2042 m4_serve_shot
14;3 412 pathaction!2_14;3,1429
Consider method^3_7;1;1,3298 3298 m8_do_fill_shot
7;1;1 480 pathaction!3_7;1;1,598
Consider method^4_7;3;1;0,1210 1210 m6_do_clean_shot
7;3;1;0 394 pathaction!4_7;3;1;0,3210
Consider method^3_12;2;2,3244 3244 _m3_get_second_ingredient_3
12;2;2 396 pathaction!3_12;2;2,1258
Consider method^2_6;2,4410 4410 m3_get_second_ingredient
6;2 106 pathaction!2_6;2,261
Consider method^3_5;1;3,3477 3477 _m2_get_first_ingredient_4
5;1;3 329 pathaction!3_5;1;3,1135
Consider method^2_2;2,1764 1764 m3_get_second_ingredient
2;2 351 pathaction!2_2;2,268
Consider method^4_2;3;1;0,3639 3639 m6_do_clean_shot
2;3;1;0 109 pathaction!4_2;3;1;0,3110
Consider method^3_6;1;1,4913 4913 m8_do_fill_shot
6;1;1 93 pathaction!3_6;1;1,632
Consider method^3_4;2;2,958 958 _m3_get_second_ingredient_3
4;2;2 482 pathaction!3_4;2;2,1212
Consider method^3_6;3;4,293 293 _m4_serve_shot_5
6;3;4 25 pathaction!3_6;3;4,1391
Consider method^2_1;2,1994 1994 m3_get_second_ingredient
1;2 66 pathaction!2_1;2,271
Consider method^2_14;2,3173 3173 m3_get_second_ingredient
14;2 108 pathaction!2_14;2,260
Consider method^3_3;3;5,1104 1104 _m4_serve_shot_6
3;3;5 472 pathaction!3_3;3;5,744
Consider method^2_7;1,4840 4840 m2_get_first_ingredient
7;1 130 pathaction!2_7;1,3278
Consider method^3_1;3;4,1776 1776 _m4_serve_shot_5
1;3;4 330 pathaction!3_1;3;4,1406
Consider method^3_14;2;2,1304 1304 _m3_get_second_ingredient_3
14;2;2 340 pathaction!3_14;2;2,1264
Consider method^3_2;1;2,4136 4136 _m2_get_first_ingredient_3
2;1;2 397 pathaction!3_2;1;2,1930
Consider method^3_9;3;1,4712 4712 _m4_serve_shot_2
9;3;1 439 pathaction!3_9;3;1,3359
Consider method^2_12;3,2601 2601 m4_serve_shot
12;3 306 pathaction!2_12;3,1423
Consider method^3_2;2;2,2261 2261 _m3_get_second_ingredient_3
2;2;2 415 pathaction!3_2;2;2,1228
Consider method^1_8,2621 2621 m0_do_cocktail_in_shot1
8 280 pathaction!1_8,3368
Consider method^3_6;3;5,2662 2662 _m4_serve_shot_6
6;3;5 63 pathaction!3_6;3;5,758
Consider method^3_3;1;3,1526 1526 _m2_get_first_ingredient_4
3;1;3 451 pathaction!3_3;1;3,1133
Consider method^3_2;3;5,1393 1393 _m4_serve_shot_6
2;3;5 238 pathaction!3_2;3;5,735
Consider method^2_8;2,1649 1649 m3_get_second_ingredient
8;2 302 pathaction!2_8;2,274
Consider method^3_2;1;1,4226 4226 m8_do_fill_shot
2;1;1 11 pathaction!3_2;1;1,634
Consider method^4_14;3;1;0,4079 4079 m6_do_clean_shot
14;3;1;0 56 pathaction!4_14;3;1;0,3192
Consider method^3_8;2;1,3283 3283 _m3_get_second_ingredient_2
8;2;1 320 pathaction!3_8;2;1,957
Consider method^2_9;3,1670 1670 m4_serve_shot
9;3 402 pathaction!2_9;3,1426
Consider method^3_3;3;1,1462 1462 _m4_serve_shot_2
3;3;1 292 pathaction!3_3;3;1,3350
Consider method^3_7;1;3,2647 2647 _m2_get_first_ingredient_4
7;1;3 142 pathaction!3_7;1;3,1040
Consider method^3_12;3;1,330 330 _m4_serve_shot_2
12;3;1 312 pathaction!3_12;3;1,3339
Consider method^3_9;2;1,2522 2522 _m3_get_second_ingredient_2
9;2;1 247 pathaction!3_9;2;1,936
Consider method^3_1;3;5,2576 2576 _m4_serve_shot_6
1;3;5 344 pathaction!3_1;3;5,751
Consider method^3_1;1;2,3747 3747 _m2_get_first_ingredient_3
1;1;2 298 pathaction!3_1;1;2,1866
Consider method^3_9;1;2,1954 1954 _m2_get_first_ingredient_3
9;1;2 256 pathaction!3_9;1;2,1927
Consider method^3_5;3;4,139 139 _m4_serve_shot_5
5;3;4 128 pathaction!3_5;3;4,1405
Consider method^3_8;3;1,3715 3715 _m4_serve_shot_2
8;3;1 406 pathaction!3_8;3;1,3347
Consider method^3_6;3;1,2158 2158 _m4_serve_shot_2
6;3;1 454 pathaction!3_6;3;1,3352
Consider method^2_5;1,4519 4519 m2_get_first_ingredient
5;1 120 pathaction!2_5;1,3291
Consider method^3_14;3;4,938 938 _m4_serve_shot_5
14;3;4 27 pathaction!3_14;3;4,1371
Consider method^3_4;3;1,4384 4384 _m4_serve_shot_2
4;3;1 405 pathaction!3_4;3;1,3336
Consider method^3_0;1;2,310 310 _m2_get_first_ingredient_3
0;1;2 215 pathaction!3_0;1;2,1951
Consider method^4_13;3;1;0,3162 3162 m5_do_clean_shot
13;3;1;0 301 pathaction!4_13;3;1;0,3069
Consider method^2_9;2,1901 1901 m3_get_second_ingredient
9;2 199 pathaction!2_9;2,272
Consider method^3_13;3;1,1616 1616 _m4_serve_shot_2
13;3;1 119 pathaction!3_13;3;1,3345
Consider method^3_12;3;4,3183 3183 _m4_serve_shot_5
12;3;4 299 pathaction!3_12;3;4,1400
Consider method^2_6;3,70 70 m4_serve_shot
6;3 146 pathaction!2_6;3,1419
Consider method^2_5;3,378 378 m4_serve_shot
5;3 83 pathaction!2_5;3,1418
Consider method^2_8;1,4379 4379 m2_get_first_ingredient
8;1 291 pathaction!2_8;1,3296
Consider method^3_0;3;5,4912 4912 _m4_serve_shot_6
0;3;5 489 pathaction!3_0;3;5,734
Consider method^4_1;3;1;0,2423 2423 m6_do_clean_shot
1;3;1;0 141 pathaction!4_1;3;1;0,2938
Consider method^1_11,1768 1768 m1_do_cocktail_in_shot2
11 438 pathaction!1_11,3972
Consider method^3_5;3;5,383 383 _m4_serve_shot_6
5;3;5 279 pathaction!3_5;3;5,746
Consider method^2_4;3,4784 4784 m4_serve_shot
4;3 424 pathaction!2_4;3,1424
Consider method^3_9;1;1,798 798 m8_do_fill_shot
9;1;1 73 pathaction!3_9;1;1,655
Consider method^1_1,4434 4434 m0_do_cocktail_in_shot1
1 190 pathaction!1_1,3366
Consider method^3_0;1;1,3337 3337 m8_do_fill_shot
0;1;1 476 pathaction!3_0;1;1,608
Consider method^3_10;3;4,4194 4194 _m4_serve_shot_5
10;3;4 179 pathaction!3_10;3;4,1363
Consider method^2_4;2,3980 3980 m3_get_second_ingredient
4;2 288 pathaction!2_4;2,275


CHECKING primitive solution of length 308 ...
true 383 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 10 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot1;]
true 364 __method_precondition_m8_do_fill_shot_8_precondition[shot1,dispenser2,ingredient2;]
true 416 grasp[right,shot1;]
true 372 fill-shot[shot1,ingredient2,right,left,dispenser2;]
true 272 pour-shot-to-clean-shaker[shot1,ingredient2,shaker1,right,l0,l1;]
true 418 clean-shot[shot1,ingredient2,right,left;]
true 307 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient5,right,shot1;]
true 305 fill-shot[shot1,ingredient5,right,left,dispenser5;]
true 208 pour-shot-to-used-shaker[shot1,ingredient5,shaker1,right,l1,l2;]
true 349 leave[right,shot1;]
true 6 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient5;]
true 15 __method_precondition_m6_do_clean_shot_6_precondition[shot1,left;]
true 400 grasp[left,shot1;]
true 365 clean-shot[shot1,ingredient5,left,right;]
true 282 leave[left,shot1;]
true 252 grasp[right,shaker1;]
true 48 shake[cocktail4,ingredient2,ingredient5,shaker1,right,left;]
true 337 pour-shaker-to-shot[cocktail4,shot1,right,shaker1,l2,l1;]
true 213 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 237 clean-shaker[right,left,shaker1;]
true 236 leave[right,shaker1;]
true 293 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 384 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot2;]
true 287 __method_precondition_m8_do_fill_shot_8_precondition[shot2,dispenser3,ingredient3;]
true 202 grasp[right,shot2;]
true 217 fill-shot[shot2,ingredient3,right,left,dispenser3;]
true 334 pour-shot-to-clean-shaker[shot2,ingredient3,shaker1,right,l0,l1;]
true 165 clean-shot[shot2,ingredient3,right,left;]
true 311 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient5,right,shot2;]
true 167 fill-shot[shot2,ingredient5,right,left,dispenser5;]
true 221 pour-shot-to-used-shaker[shot2,ingredient5,shaker1,right,l1,l2;]
true 277 leave[right,shot2;]
true 204 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient5;]
true 355 __method_precondition_m6_do_clean_shot_6_precondition[shot2,left;]
true 182 grasp[left,shot2;]
true 440 clean-shot[shot2,ingredient5,left,right;]
true 243 leave[left,shot2;]
true 92 grasp[right,shaker1;]
true 124 shake[cocktail3,ingredient3,ingredient5,shaker1,right,left;]
true 47 pour-shaker-to-shot[cocktail3,shot2,right,shaker1,l2,l1;]
true 200 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 149 clean-shaker[right,left,shaker1;]
true 315 leave[right,shaker1;]
true 75 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 135 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot3;]
true 466 __method_precondition_m8_do_fill_shot_8_precondition[shot3,dispenser4,ingredient4;]
true 308 grasp[left,shot3;]
true 175 fill-shot[shot3,ingredient4,left,right,dispenser4;]
true 326 pour-shot-to-clean-shaker[shot3,ingredient4,shaker1,left,l0,l1;]
true 250 clean-shot[shot3,ingredient4,left,right;]
true 425 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient2,left,shot3;]
true 89 fill-shot[shot3,ingredient2,left,right,dispenser2;]
true 462 pour-shot-to-used-shaker[shot3,ingredient2,shaker1,left,l1,l2;]
true 470 leave[left,shot3;]
true 246 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient2;]
true 367 __method_precondition_m6_do_clean_shot_6_precondition[shot3,left;]
true 110 grasp[left,shot3;]
true 31 clean-shot[shot3,ingredient2,left,right;]
true 386 leave[left,shot3;]
true 148 grasp[right,shaker1;]
true 254 shake[cocktail6,ingredient4,ingredient2,shaker1,right,left;]
true 249 pour-shaker-to-shot[cocktail6,shot3,right,shaker1,l2,l1;]
true 257 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 458 clean-shaker[right,left,shaker1;]
true 218 leave[right,shaker1;]
true 465 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 474 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient5,shot4;]
true 420 __method_precondition_m8_do_fill_shot_8_precondition[shot4,dispenser5,ingredient5;]
true 23 grasp[left,shot4;]
true 478 fill-shot[shot4,ingredient5,left,right,dispenser5;]
true 134 pour-shot-to-clean-shaker[shot4,ingredient5,shaker1,left,l0,l1;]
true 21 clean-shot[shot4,ingredient5,left,right;]
true 159 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,left,shot4;]
true 180 fill-shot[shot4,ingredient2,left,right,dispenser2;]
true 164 pour-shot-to-used-shaker[shot4,ingredient2,shaker1,left,l1,l2;]
true 143 leave[left,shot4;]
true 166 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient5,ingredient2;]
true 7 __method_precondition_m6_do_clean_shot_6_precondition[shot4,left;]
true 253 grasp[left,shot4;]
true 352 clean-shot[shot4,ingredient2,left,right;]
true 448 leave[left,shot4;]
true 102 grasp[right,shaker1;]
true 97 shake[cocktail1,ingredient5,ingredient2,shaker1,right,left;]
true 90 pour-shaker-to-shot[cocktail1,shot4,right,shaker1,l2,l1;]
true 269 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 347 clean-shaker[right,left,shaker1;]
true 49 leave[right,shaker1;]
true 473 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 160 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot12;]
true 390 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser3,ingredient3;]
true 112 grasp[left,shot12;]
true 29 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 460 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,left,l0,l1;]
true 270 clean-shot[shot12,ingredient3,left,right;]
true 336 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot12;]
true 2 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 323 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2;]
true 207 leave[left,shot12;]
true 328 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient4;]
true 151 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 162 nop[;]
true 96 grasp[left,shaker1;]
true 358 shake[cocktail8,ingredient3,ingredient4,shaker1,left,right;]
true 233 pour-shaker-to-shot[cocktail8,shot5,left,shaker1,l2,l1;]
true 24 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 116 clean-shaker[left,right,shaker1;]
true 455 leave[left,shaker1;]
true 214 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 45 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot6;]
true 16 __method_precondition_m8_do_fill_shot_8_precondition[shot6,dispenser4,ingredient4;]
true 300 grasp[left,shot6;]
true 229 fill-shot[shot6,ingredient4,left,right,dispenser4;]
true 263 pour-shot-to-clean-shaker[shot6,ingredient4,shaker1,left,l0,l1;]
true 113 clean-shot[shot6,ingredient4,left,right;]
true 76 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient5,left,shot6;]
true 54 fill-shot[shot6,ingredient5,left,right,dispenser5;]
true 230 pour-shot-to-used-shaker[shot6,ingredient5,shaker1,left,l1,l2;]
true 0 leave[left,shot6;]
true 275 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient5;]
true 413 __method_precondition_m6_do_clean_shot_6_precondition[shot6,left;]
true 145 grasp[left,shot6;]
true 87 clean-shot[shot6,ingredient5,left,right;]
true 435 leave[left,shot6;]
true 219 grasp[right,shaker1;]
true 189 shake[cocktail9,ingredient4,ingredient5,shaker1,right,left;]
true 258 pour-shaker-to-shot[cocktail9,shot6,right,shaker1,l2,l1;]
true 99 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 281 clean-shaker[right,left,shaker1;]
true 429 leave[right,shaker1;]
true 34 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 363 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot7;]
true 85 __method_precondition_m8_do_fill_shot_8_precondition[shot7,dispenser5,ingredient5;]
true 53 grasp[left,shot7;]
true 303 fill-shot[shot7,ingredient5,left,right,dispenser5;]
true 322 pour-shot-to-clean-shaker[shot7,ingredient5,shaker1,left,l0,l1;]
true 423 clean-shot[shot7,ingredient5,left,right;]
true 289 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,left,shot7;]
true 264 fill-shot[shot7,ingredient4,left,right,dispenser4;]
true 319 pour-shot-to-used-shaker[shot7,ingredient4,shaker1,left,l1,l2;]
true 41 leave[left,shot7;]
true 32 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient4;]
true 13 __method_precondition_m6_do_clean_shot_6_precondition[shot7,left;]
true 194 grasp[left,shot7;]
true 8 clean-shot[shot7,ingredient4,left,right;]
true 410 leave[left,shot7;]
true 398 grasp[right,shaker1;]
true 74 shake[cocktail7,ingredient5,ingredient4,shaker1,right,left;]
true 81 pour-shaker-to-shot[cocktail7,shot7,right,shaker1,l2,l1;]
true 285 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 316 clean-shaker[right,left,shaker1;]
true 353 leave[right,shaker1;]
true 72 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 157 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot8;]
true 331 __method_precondition_m8_do_fill_shot_8_precondition[shot8,dispenser3,ingredient3;]
true 432 grasp[right,shot8;]
true 12 fill-shot[shot8,ingredient3,right,left,dispenser3;]
true 176 pour-shot-to-clean-shaker[shot8,ingredient3,shaker1,right,l0,l1;]
true 437 clean-shot[shot8,ingredient3,right,left;]
true 317 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient5,right,shot8;]
true 377 fill-shot[shot8,ingredient5,right,left,dispenser5;]
true 61 pour-shot-to-used-shaker[shot8,ingredient5,shaker1,right,l1,l2;]
true 361 leave[right,shot8;]
true 152 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient5;]
true 407 __method_precondition_m6_do_clean_shot_6_precondition[shot8,left;]
true 51 grasp[left,shot8;]
true 22 clean-shot[shot8,ingredient5,left,right;]
true 178 leave[left,shot8;]
true 58 grasp[right,shaker1;]
true 174 shake[cocktail11,ingredient3,ingredient5,shaker1,right,left;]
true 445 pour-shaker-to-shot[cocktail11,shot8,right,shaker1,l2,l1;]
true 426 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 441 clean-shaker[right,left,shaker1;]
true 456 leave[right,shaker1;]
true 19 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 422 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient5,shot9;]
true 484 __method_precondition_m8_do_fill_shot_8_precondition[shot9,dispenser5,ingredient5;]
true 442 grasp[left,shot9;]
true 18 fill-shot[shot9,ingredient5,left,right,dispenser5;]
true 64 pour-shot-to-clean-shaker[shot9,ingredient5,shaker1,left,l0,l1;]
true 354 clean-shot[shot9,ingredient5,left,right;]
true 333 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient2,left,shot9;]
true 428 fill-shot[shot9,ingredient2,left,right,dispenser2;]
true 150 pour-shot-to-used-shaker[shot9,ingredient2,shaker1,left,l1,l2;]
true 388 leave[left,shot9;]
true 107 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient5,ingredient2;]
true 98 __method_precondition_m6_do_clean_shot_6_precondition[shot9,right;]
true 115 grasp[right,shot9;]
true 274 clean-shot[shot9,ingredient2,right,left;]
true 411 leave[right,shot9;]
true 114 grasp[left,shaker1;]
true 486 shake[cocktail2,ingredient5,ingredient2,shaker1,left,right;]
true 20 pour-shaker-to-shot[cocktail2,shot9,left,shaker1,l2,l1;]
true 91 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 332 clean-shaker[left,right,shaker1;]
true 223 leave[left,shaker1;]
true 447 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 137 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot10;]
true 197 __method_precondition_m8_do_fill_shot_8_precondition[shot10,dispenser3,ingredient3;]
true 105 grasp[right,shot10;]
true 368 fill-shot[shot10,ingredient3,right,left,dispenser3;]
true 67 pour-shot-to-clean-shaker[shot10,ingredient3,shaker1,right,l0,l1;]
true 4 clean-shot[shot10,ingredient3,right,left;]
true 9 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,right,shot10;]
true 79 fill-shot[shot10,ingredient1,right,left,dispenser1;]
true 399 pour-shot-to-used-shaker[shot10,ingredient1,shaker1,right,l1,l2;]
true 283 leave[right,shot10;]
true 490 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient1;]
true 117 __method_precondition_m6_do_clean_shot_6_precondition[shot10,right;]
true 144 grasp[right,shot10;]
true 210 clean-shot[shot10,ingredient1,right,left;]
true 417 leave[right,shot10;]
true 154 grasp[left,shaker1;]
true 224 shake[cocktail10,ingredient3,ingredient1,shaker1,left,right;]
true 55 pour-shaker-to-shot[cocktail10,shot10,left,shaker1,l2,l1;]
true 30 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 122 clean-shaker[left,right,shaker1;]
true 475 leave[left,shaker1;]
true 463 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 121 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient5,shot12;]
true 95 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient4,dispenser5;]
true 14 grasp[right,shot12;]
true 401 clean-shot[shot12,ingredient4,right,left;]
true 36 fill-shot[shot12,ingredient5,right,left,dispenser5;]
true 212 pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,right,l0,l1;]
true 147 clean-shot[shot12,ingredient5,right,left;]
true 104 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot12;]
true 57 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 156 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2;]
true 491 leave[right,shot12;]
true 186 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient5,ingredient2;]
true 33 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 464 nop[;]
true 191 grasp[left,shaker1;]
true 389 shake[cocktail5,ingredient5,ingredient2,shaker1,left,right;]
true 158 pour-shaker-to-shot[cocktail5,shot11,left,shaker1,l2,l1;]
true 188 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 357 clean-shaker[left,right,shaker1;]
true 371 leave[left,shaker1;]
true 450 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 404 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient2,dispenser3;]
true 26 grasp[left,shot12;]
true 84 clean-shot[shot12,ingredient2,left,right;]
true 220 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 444 leave[left,shot12;]
true 421 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right;]
true 94 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot16;]
true 133 __method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser3,ingredient3;]
true 446 grasp[right,shot16;]
true 395 fill-shot[shot16,ingredient3,right,left,dispenser3;]
true 488 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1;]
true 5 clean-shot[shot16,ingredient3,right,left;]
true 44 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,right,shot16;]
true 296 fill-shot[shot16,ingredient4,right,left,dispenser4;]
true 321 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2;]
true 172 leave[right,shot16;]
true 342 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient4;]
true 100 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 153 nop[;]
true 325 grasp[right,shaker1;]
true 375 shake[cocktail8,ingredient3,ingredient4,shaker1,right,left;]
true 231 pour-shaker-to-shot[cocktail8,shot13,right,shaker1,l2,l1;]
true 262 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 382 clean-shaker[right,left,shaker1;]
true 244 leave[right,shaker1;]
true 309 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left;]
true 126 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot16;]
true 468 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient4,dispenser3;]
true 379 grasp[left,shot16;]
true 403 clean-shot[shot16,ingredient4,left,right;]
true 228 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 374 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1;]
true 131 clean-shot[shot16,ingredient3,left,right;]
true 127 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient5,left,shot16;]
true 433 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 430 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 259 leave[left,shot16;]
true 493 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient5;]
true 348 __method_precondition_m5_do_clean_shot_5_precondition[shot14;]
true 265 nop[;]
true 1 grasp[right,shaker1;]
true 479 shake[cocktail11,ingredient3,ingredient5,shaker1,right,left;]
true 366 pour-shaker-to-shot[cocktail11,shot14,right,shaker1,l2,l1;]
true 222 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 286 clean-shaker[right,left,shaker1;]
true 408 leave[right,shaker1;]
true 369 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,left;]
true 187 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient5,shot15;]
true 313 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser5,ingredient5;]
true 201 grasp[left,shot15;]
true 239 fill-shot[shot15,ingredient5,left,right,dispenser5;]
true 359 pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,left,l0,l1;]
true 381 clean-shot[shot15,ingredient5,left,right;]
true 341 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,left,shot15;]
true 123 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 82 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 28 leave[left,shot15;]
true 193 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient5,ingredient2;]
true 467 __method_precondition_m6_do_clean_shot_6_precondition[shot15,left;]
true 481 grasp[left,shot15;]
true 457 clean-shot[shot15,ingredient2,left,right;]
true 232 leave[left,shot15;]
true 177 grasp[right,shaker1;]
true 343 shake[cocktail1,ingredient5,ingredient2,shaker1,right,left;]
true 267 pour-shaker-to-shot[cocktail1,shot15,right,shaker1,l2,l1;]
true 65 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 52 clean-shaker[right,left,shaker1;]
true 245 leave[right,shaker1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2584
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 5168
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 7752
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 10336
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 12920
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 15504
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 18088
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 20672
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 23256
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 25840
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 28424
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 31008
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 33592
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 36176
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 38760
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 41344
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 43928
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 46512
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 49096
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 51680
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 54264
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 56848
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 59432
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 62016
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 64600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 67184
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 69768
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 72352
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 74936
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 77520
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 80104
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 82688
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 85272
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 87856
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 90440
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 93024
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 95608
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 98192
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 100776
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 103360
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 105944
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 108528
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 111112
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 113696
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 116280
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 118864
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 121448
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 124032
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 126616
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 129200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 131784
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 134368
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 136952
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 139536
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 142120
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 144704
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 147288
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 149872
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 152456
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 155040
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 157624
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 160208
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 162792
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 165376
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 167960
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 170544
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 173128
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 175712
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 178296
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 180880
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 183464
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 186048
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 188632
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 191216
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 193800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 196384
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 198968
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 201552
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 204136
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 206720
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 209304
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 211888
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 214472
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 217056
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 219640
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 222224
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 224808
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 227392
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 229976
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 232560
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 235144
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 237728
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 240312
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 242896
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 245480
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 248064
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 250648
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 253232
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 255816
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 258400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 260984
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 263568
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 266152
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 268736
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 271320
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 273904
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 276488
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 279072
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 281656
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 284240
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 286824
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 289408
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 291992
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 294576
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 297160
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 299744
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 302328
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 304912
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 307496
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 310080
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 312664
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 315248
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 317832
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 320416
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 323000
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.101 MEMPEAK_KBS 828609.536
