PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/RoverG/domain.hddl instances/RoverG/p04.hddl"


Planner Configuration
=====================
Domain: instances/RoverG/domain.hddl
Problem: instances/RoverG/p04.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p04.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 26
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Compiling negative preconditions ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Compiling split parameters ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Grounded planning graph ... done in 218ms.
	Number of Grounded Actions 201
	Number of Grounded Literals 123
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Two Way TDG ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Grounding ... done.
	number of abstract tasks = 54
	number of tasks = 243
	number of decomposition methods = 156
	number of predicates = 155
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 54
	number of tasks = 243
	number of decomposition methods = 156
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 54ms.
	Number of Grounded Actions 189
	Number of Grounded Literals 45
	number of abstract tasks = 54
	number of tasks = 243
	number of decomposition methods = 156
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 54
	number of tasks = 243
	number of decomposition methods = 156
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 55
	number of tasks = 244
	number of decomposition methods = 157
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 55
	number of tasks = 244
	number of decomposition methods = 157
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 18ms.
	Number of Grounded Actions 189
	Number of Grounded Literals 45
	number of abstract tasks = 55
	number of tasks = 244
	number of decomposition methods = 157
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 55
	number of tasks = 244
	number of decomposition methods = 157
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 55
	number of tasks = 244
	number of decomposition methods = 157
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 55
	number of tasks = 244
	number of decomposition methods = 157
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 55
	number of tasks = 244
	number of decomposition methods = 157
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Tasks 189 - 54
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773461ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854773402
done
initial PDT has 138 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 97 leafs
SHOP LEAFS 55
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 2970
Size 2970 at 0/189
Size 819
Size 819 at 0/189
Size 48
Size 48 at 0/189
Size 45
Size 45 at 0/189
Size 45
Invariant time: 0.087
Number of invariants: 45
Invariant Clauses 4410
NUMBER OF CLAUSES 19786
NUMBER OF STATE CLAUSES 13841
NUMBER OF DECOMPOSITION CLAUSES 5945
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 69.95% 30.05% 0.0% 
NUMBER OF PATHS 97
Starting cryptominisat5.5
Setting starttime of solver to 1604520384981
Command exited with non-zero status 10
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_0;4,27 27 m9_send_soil_data
0;4 38 pathaction!2_0;4,111
Consider method^2_5;1,34 34 m15_do_calibrate
5;1 19 pathaction!2_5;1,63
Consider method^1_5,19 19 m13_get_image_data
5 83 pathaction!1_5,94
Consider method^3_5;1;1,69 69 m0_do_navigate1
5;1;1 112 pathaction!3_5;1;1,65
Consider method^3_4;1;1,77 77 m0_do_navigate1
4;1;1 28 pathaction!3_4;1;1,71
Consider method^2_2;1,5 5 m1_do_navigate1
2;1 127 pathaction!2_2;1,69
Consider method^3_2;1;2,130 130 m2_do_navigate2
2;1;2 45 pathaction!3_2;1;2,177
Consider method^3_2;4;1,132 132 m0_do_navigate1
2;4;1 51 pathaction!3_2;4;1,69
Consider method^2_6;2,46 46 m1_do_navigate1
6;2 29 pathaction!2_6;2,71
Consider method^2_3;4,13 13 m12_send_rock_data
3;4 126 pathaction!2_3;4,139
Consider method^3_1;1;2,51 51 m3_do_navigate2
1;1;2 43 pathaction!3_1;1;2,197
Consider method^1_4,133 133 m13_get_image_data
4 52 pathaction!1_4,92
Consider method^2_4;1,9 9 m15_do_calibrate
4;1 98 pathaction!2_4;1,64
Consider method^2_1;2,149 149 m6_empty_store
1;2 133 pathaction!2_1;2,85
Consider method^3_4;2;2,15 15 m3_do_navigate2
4;2;2 0 pathaction!3_4;2;2,200
Consider method^1_1,29 29 m7_get_soil_data
1 122 pathaction!1_1,148
Consider method^1_0,56 56 m7_get_soil_data
0 63 pathaction!1_0,147
Consider method^3_4;4;1,132 132 m0_do_navigate1
4;4;1 20 pathaction!3_4;4;1,69
Consider method^2_5;4,12 12 m14_send_image_data
5;4 97 pathaction!2_5;4,106
Consider method^2_2;4,42 42 m11_send_rock_data
2;4 110 pathaction!2_2;4,138
Consider method^2_4;2,110 110 m1_do_navigate1
4;2 5 pathaction!2_4;2,69
Consider method^2_3;2,83 83 m6_empty_store
3;2 117 pathaction!2_3;2,84
Consider method^3_5;4;1,69 69 m0_do_navigate1
5;4;1 114 pathaction!3_5;4;1,65
Consider method^3_6;1;1,132 132 m0_do_navigate1
6;1;1 25 pathaction!3_6;1;1,69
Consider method^2_0;2,104 104 m5_empty_store
0;2 68 pathaction!2_0;2,85
Consider method^0_,156 156 __top_1
 74 pathaction!0_,243
Consider method^1_2,59 59 m10_get_rock_data
2 76 pathaction!1_2,241
Consider method^3_3;1;2,144 144 m3_do_navigate2
3;1;2 130 pathaction!3_3;1;2,190
Consider method^3_0;1;2,75 75 m3_do_navigate2
0;1;2 40 pathaction!3_0;1;2,195
Consider method^2_6;1,154 154 m15_do_calibrate
6;1 89 pathaction!2_6;1,64
Consider method^2_1;1,88 88 m1_do_navigate1
1;1 46 pathaction!2_1;1,65
Consider method^1_6,151 151 m13_get_image_data
6 41 pathaction!1_6,93
Consider method^1_3,61 61 m10_get_rock_data
3 121 pathaction!1_3,240
Consider method^2_2;2,24 24 m5_empty_store
2;2 115 pathaction!2_2;2,84
Consider method^3_6;2;2,144 144 m3_do_navigate2
6;2;2 129 pathaction!3_6;2;2,190
Consider method^2_6;4,8 8 m14_send_image_data
6;4 64 pathaction!2_6;4,107
Consider method^2_5;2,69 69 m0_do_navigate1
5;2 128 pathaction!2_5;2,65
Consider method^3_6;4;1,77 77 m0_do_navigate1
6;4;1 54 pathaction!3_6;4;1,71
Consider method^2_0;1,101 101 m1_do_navigate1
0;1 82 pathaction!2_0;1,66
Consider method^2_3;1,46 46 m1_do_navigate1
3;1 80 pathaction!2_3;1,71
Consider method^2_4;4,79 79 m14_send_image_data
4;4 36 pathaction!2_4;4,105
Consider method^2_1;4,111 111 m9_send_soil_data
1;4 4 pathaction!2_1;4,112


CHECKING primitive solution of length 88 ...
true 33 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 53 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0;]
true 50 visit[waypoint0;]
true 101 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint0,waypoint1;]
true 119 navigate[rover1,waypoint0,waypoint1;]
true 79 unvisit[waypoint0;]
true 49 __method_precondition_m5_empty_store_5_precondition[rover1store;]
true 113 nop[;]
true 116 sample_soil[rover1,rover1store,waypoint1;]
true 57 __method_precondition_m9_send_soil_data_9_precondition[general,waypoint3,waypoint1,rover1;]
true 31 communicate_soil_data2[rover1,general,waypoint1,waypoint3;]
true 56 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 132 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint1;]
true 62 visit[waypoint1;]
true 3 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint1,waypoint2;]
true 34 navigate[rover1,waypoint1,waypoint2;]
true 69 unvisit[waypoint1;]
true 48 __method_precondition_m6_empty_store_6_precondition[rover1store;]
true 1 drop[rover1,rover1store;]
true 42 sample_soil[rover1,rover1store,waypoint2;]
true 102 __method_precondition_m9_send_soil_data_9_precondition[general,waypoint3,waypoint2,rover1;]
true 92 communicate_soil_data2[rover1,general,waypoint2,waypoint3;]
true 2 __method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0;]
true 16 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint0;]
true 12 visit[waypoint0;]
true 66 __method_precondition_m2_do_navigate2_2_precondition[rover0,waypoint0;]
true 6 nop[;]
true 94 unvisit[waypoint0;]
true 23 __method_precondition_m5_empty_store_5_precondition[rover0store;]
true 93 nop[;]
true 107 sample_rock[rover0,rover0store,waypoint0;]
true 39 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint3,waypoint0;]
true 47 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0;]
true 118 nop[;]
true 26 communicate_rock_data1[rover0,general,waypoint0,waypoint0,waypoint3;]
true 125 __method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0;]
true 67 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint0;]
true 100 visit[waypoint0;]
true 24 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint0,waypoint1;]
true 8 navigate[rover0,waypoint0,waypoint1;]
true 96 unvisit[waypoint0;]
true 77 __method_precondition_m6_empty_store_6_precondition[rover0store;]
true 21 drop[rover0,rover0store;]
true 65 sample_rock[rover0,rover0store,waypoint1;]
true 88 __method_precondition_m12_send_rock_data_12_precondition[general,waypoint3,waypoint1,rover0;]
true 73 communicate_rock_data2[rover0,general,waypoint1,waypoint3;]
true 17 __method_precondition_m13_get_image_data_13_precondition[waypoint0,rover0,high_res,camera2,objective0;]
true 85 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective1,waypoint1;]
true 106 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 81 nop[;]
true 75 calibrate[rover0,camera2,objective1,waypoint1;]
true 10 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint1;]
true 44 visit[waypoint1;]
true 103 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint1,waypoint0;]
true 9 navigate[rover0,waypoint1,waypoint0;]
true 61 unvisit[waypoint1;]
true 11 take_image[rover0,waypoint0,objective0,camera2,high_res;]
true 99 __method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint0;]
true 123 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0;]
true 105 nop[;]
true 86 communicate_image_data[rover0,general,objective0,high_res,waypoint0,waypoint3;]
true 35 __method_precondition_m13_get_image_data_13_precondition[waypoint2,rover1,high_res,camera0,objective2;]
true 14 __method_precondition_m15_do_calibrate_15_precondition[camera0,objective1,waypoint2;]
true 59 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2;]
true 95 nop[;]
true 71 calibrate[rover1,camera0,objective1,waypoint2;]
true 87 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2;]
true 22 nop[;]
true 78 take_image[rover1,waypoint2,objective2,camera0,high_res;]
true 30 __method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint2;]
true 72 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2;]
true 32 nop[;]
true 27 communicate_image_data[rover1,general,objective2,high_res,waypoint2,waypoint3;]
true 91 __method_precondition_m13_get_image_data_13_precondition[waypoint1,rover0,colour,camera2,objective0;]
true 90 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective1,waypoint0;]
true 55 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0;]
true 58 nop[;]
true 104 calibrate[rover0,camera2,objective1,waypoint0;]
true 84 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint0;]
true 111 visit[waypoint0;]
true 124 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint0,waypoint1;]
true 18 navigate[rover0,waypoint0,waypoint1;]
true 37 unvisit[waypoint0;]
true 7 take_image[rover0,waypoint1,objective0,camera2,colour;]
true 15 __method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint1;]
true 70 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 120 nop[;]
true 60 communicate_image_data[rover0,general,objective0,colour,waypoint1,waypoint3;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 112
TSTG: 6
Method: 1
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 224
TSTG: 6
Method: 2
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 336
TSTG: 6
Method: 3
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 448
TSTG: 6
Method: 4
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 560
TSTG: 6
Method: 5
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 672
TSTG: 6
Method: 6
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 784
TSTG: 6
Method: 7
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 896
TSTG: 6
Method: 8
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 1008
TSTG: 6
Method: 9
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 1120
TSTG: 6
Method: 10
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 1232
TSTG: 6
Method: 11
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 1344
TSTG: 6
Method: 12
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 1456
TSTG: 6
Method: 13
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 1568
TSTG: 6
Method: 14
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 1680
TSTG: 6
Method: 15
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 1792
TSTG: 6
Method: 16
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 1904
TSTG: 6
Method: 17
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 2016
TSTG: 6
Method: 18
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 2128
TSTG: 6
Method: 19
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 2240
TSTG: 6
Method: 20
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 2352
TSTG: 6
Method: 21
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 2464
TSTG: 6
Method: 22
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 2576
TSTG: 6
Method: 23
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 2688
TSTG: 6
Method: 24
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 2800
TSTG: 6
Method: 25
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 2912
TSTG: 6
Method: 26
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 3024
TSTG: 6
Method: 27
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 3136
TSTG: 6
Method: 28
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 3248
TSTG: 6
Method: 29
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 3360
TSTG: 6
Method: 30
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 3472
TSTG: 6
Method: 31
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 3584
TSTG: 6
Method: 32
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 3696
TSTG: 6
Method: 33
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 3808
TSTG: 6
Method: 34
DP max: 5
Taking minimum: 5
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 47
  lower bound = 33

Running SAT search with cost bound = 40
==================================================
  upper bound = 47
  lower bound = 33
LEN 40
ICAPS: 4480
TSTG: 6
Method: 40
Still waiting ... running for 100 will abort at 9223372036854772134
DP max: 7
Taking minimum: 6
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 72
Assignment implications
Generating clauses representing decomposition ... done
At most K: 49ms input: 699 K = 40
Number of actions Formula: 70ms for 56578 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 8820
NUMBER OF CLAUSES 3977699
NUMBER OF STATE CLAUSES 3891421
NUMBER OF DECOMPOSITION CLAUSES 86278
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.83% 2.17% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604520394344
Command exited with non-zero status 10
1.32 0.06

Time command gave the following runtime for the solver: 1380
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_6;1,114 114 m15_do_calibrate
6;1 124 pathaction!2_6;1,62
Consider method^2_0;4,27 27 m9_send_soil_data
0;4 29 pathaction!2_0;4,111
Consider method^2_6;4,109 109 m14_send_image_data
6;4 99 pathaction!2_6;4,108
Consider method^3_6;4;1,69 69 m0_do_navigate1
6;4;1 65 pathaction!3_6;4;1,65
Consider method^1_5,116 116 m13_get_image_data
5 80 pathaction!1_5,94
Consider method^3_5;4;1,77 77 m0_do_navigate1
5;4;1 47 pathaction!3_5;4;1,71
Consider method^2_3;4,13 13 m12_send_rock_data
3;4 122 pathaction!2_3;4,139
Consider method^3_1;1;2,51 51 m3_do_navigate2
1;1;2 35 pathaction!3_1;1;2,197
Consider method^2_5;1,9 9 m15_do_calibrate
5;1 104 pathaction!2_5;1,64
Consider method^2_1;2,149 149 m6_empty_store
1;2 130 pathaction!2_1;2,85
Consider method^2_5;4,124 124 m14_send_image_data
5;4 84 pathaction!2_5;4,110
Consider method^2_5;2,77 77 m0_do_navigate1
5;2 103 pathaction!2_5;2,71
Consider method^1_1,29 29 m7_get_soil_data
1 119 pathaction!1_1,148
Consider method^2_2;4,78 78 m12_send_rock_data
2;4 106 pathaction!2_2;4,138
Consider method^2_4;4,22 22 m14_send_image_data
4;4 5 pathaction!2_4;4,109
Consider method^3_6;1;1,69 69 m0_do_navigate1
6;1;1 43 pathaction!3_6;1;1,65
Consider method^1_0,56 56 m7_get_soil_data
0 53 pathaction!1_0,147
Consider method^3_4;4;1,69 69 m0_do_navigate1
4;4;1 26 pathaction!3_4;4;1,65
Consider method^2_4;1,34 34 m15_do_calibrate
4;1 39 pathaction!2_4;1,63
Consider method^2_3;2,83 83 m6_empty_store
3;2 115 pathaction!2_3;2,84
Consider method^3_4;1;1,69 69 m0_do_navigate1
4;1;1 38 pathaction!3_4;1;1,65
Consider method^2_0;2,104 104 m5_empty_store
0;2 60 pathaction!2_0;2,85
Consider method^0_,156 156 __top_1
 69 pathaction!0_,243
Consider method^1_2,59 59 m10_get_rock_data
2 71 pathaction!1_2,241
Consider method^3_3;1;2,144 144 m3_do_navigate2
3;1;2 126 pathaction!3_3;1;2,190
Consider method^3_0;1;2,75 75 m3_do_navigate2
0;1;2 31 pathaction!3_0;1;2,195
Consider method^2_1;1,88 88 m1_do_navigate1
1;1 36 pathaction!2_1;1,65
Consider method^2_2;1,132 132 m0_do_navigate1
2;1 123 pathaction!2_2;1,69
Consider method^1_3,61 61 m10_get_rock_data
3 118 pathaction!1_3,240
Consider method^2_2;2,24 24 m5_empty_store
2;2 109 pathaction!2_2;2,84
Consider method^2_4;2,69 69 m0_do_navigate1
4;2 91 pathaction!2_4;2,65
Consider method^2_0;1,101 101 m1_do_navigate1
0;1 79 pathaction!2_0;1,66
Consider method^1_4,148 148 m13_get_image_data
4 42 pathaction!1_4,92
Consider method^2_3;1,46 46 m1_do_navigate1
3;1 75 pathaction!2_3;1,71
Consider method^2_6;2,69 69 m0_do_navigate1
6;2 107 pathaction!2_6;2,65
Consider method^3_5;1;1,77 77 m0_do_navigate1
5;1;1 55 pathaction!3_5;1;1,71
Consider method^1_6,150 150 m13_get_image_data
6 32 pathaction!1_6,93
Consider method^2_1;4,111 111 m9_send_soil_data
1;4 6 pathaction!2_1;4,112


CHECKING primitive solution of length 77 ...
true 24 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 44 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0;]
true 41 visit[waypoint0;]
true 97 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint0,waypoint1;]
true 116 navigate[rover1,waypoint0,waypoint1;]
true 74 unvisit[waypoint0;]
true 40 __method_precondition_m5_empty_store_5_precondition[rover1store;]
true 108 nop[;]
true 113 sample_soil[rover1,rover1store,waypoint1;]
true 48 __method_precondition_m9_send_soil_data_9_precondition[general,waypoint3,waypoint1,rover1;]
true 22 communicate_soil_data2[rover1,general,waypoint1,waypoint3;]
true 46 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 128 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint1;]
true 52 visit[waypoint1;]
true 64 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint1,waypoint2;]
true 25 navigate[rover1,waypoint1,waypoint2;]
true 61 unvisit[waypoint1;]
true 37 __method_precondition_m6_empty_store_6_precondition[rover1store;]
true 2 drop[rover1,rover1store;]
true 34 sample_soil[rover1,rover1store,waypoint2;]
true 93 __method_precondition_m9_send_soil_data_9_precondition[general,waypoint3,waypoint2,rover1;]
true 85 communicate_soil_data2[rover1,general,waypoint2,waypoint3;]
true 3 __method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0;]
true 70 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0;]
true 114 nop[;]
true 14 __method_precondition_m5_empty_store_5_precondition[rover0store;]
true 86 nop[;]
true 98 sample_rock[rover0,rover0store,waypoint0;]
true 83 __method_precondition_m12_send_rock_data_12_precondition[general,waypoint3,waypoint0,rover0;]
true 110 communicate_rock_data2[rover0,general,waypoint0,waypoint3;]
true 121 __method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0;]
true 58 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint0;]
true 90 visit[waypoint0;]
true 19 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint0,waypoint1;]
true 7 navigate[rover0,waypoint0,waypoint1;]
true 88 unvisit[waypoint0;]
true 72 __method_precondition_m6_empty_store_6_precondition[rover0store;]
true 11 drop[rover0,rover0store;]
true 56 sample_rock[rover0,rover0store,waypoint1;]
true 82 __method_precondition_m12_send_rock_data_12_precondition[general,waypoint3,waypoint1,rover0;]
true 68 communicate_rock_data2[rover0,general,waypoint1,waypoint3;]
true 30 __method_precondition_m13_get_image_data_13_precondition[waypoint2,rover1,high_res,camera0,objective0;]
true 125 __method_precondition_m15_do_calibrate_15_precondition[camera0,objective1,waypoint2;]
true 63 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2;]
true 76 nop[;]
true 12 calibrate[rover1,camera0,objective1,waypoint2;]
true 54 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2;]
true 21 nop[;]
true 10 take_image[rover1,waypoint2,objective0,camera0,high_res;]
true 51 __method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint2;]
true 112 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2;]
true 96 nop[;]
true 45 communicate_image_data[rover1,general,objective0,high_res,waypoint2,waypoint3;]
true 78 __method_precondition_m13_get_image_data_13_precondition[waypoint1,rover0,high_res,camera2,objective2;]
true 77 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective1,waypoint1;]
true 81 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 87 nop[;]
true 16 calibrate[rover0,camera2,objective1,waypoint1;]
true 20 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 13 nop[;]
true 8 take_image[rover0,waypoint1,objective2,camera2,high_res;]
true 129 __method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint1;]
true 94 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 23 nop[;]
true 127 communicate_image_data[rover0,general,objective2,high_res,waypoint1,waypoint3;]
true 33 __method_precondition_m13_get_image_data_13_precondition[waypoint2,rover1,colour,camera1,objective0;]
true 1 __method_precondition_m15_do_calibrate_15_precondition[camera1,objective1,waypoint2;]
true 27 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2;]
true 49 nop[;]
true 57 calibrate[rover1,camera1,objective1,waypoint2;]
true 131 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2;]
true 62 nop[;]
true 73 take_image[rover1,waypoint2,objective0,camera1,colour;]
true 59 __method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint2;]
true 66 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2;]
true 117 nop[;]
true 89 communicate_image_data[rover1,general,objective0,colour,waypoint2,waypoint3;]
 done.

Running SAT search with cost bound = 36
==================================================
  upper bound = 40
  lower bound = 33
LEN 36
ICAPS: 4032
TSTG: 6
Method: 36
DP max: 6
Taking minimum: 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854761090
done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 72
Assignment implications
Generating clauses representing decomposition ... done
At most K: 23ms input: 699 K = 36
Number of actions Formula: 27ms for 50990 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 8820
NUMBER OF CLAUSES 3972111
NUMBER OF STATE CLAUSES 3891421
NUMBER OF DECOMPOSITION CLAUSES 80690
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.97% 2.0300000000000002% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604520402945
Command exited with non-zero status 20
1.04 0.03

Time command gave the following runtime for the solver: 1070
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 38
==================================================
  upper bound = 40
  lower bound = 36
LEN 38
ICAPS: 4256
TSTG: 6
Method: 38
DP max: 6
Taking minimum: 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854753199
done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 72
Assignment implications
Generating clauses representing decomposition ... done
At most K: 11ms input: 699 K = 38
Number of actions Formula: 13ms for 53784 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 8820
NUMBER OF CLAUSES 3974905
NUMBER OF STATE CLAUSES 3891421
NUMBER OF DECOMPOSITION CLAUSES 83484
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.9% 2.1% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604520410484
Command exited with non-zero status 20
1.04 0.04

Time command gave the following runtime for the solver: 1080
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with cost bound = 39
==================================================
  upper bound = 40
  lower bound = 38
LEN 39
ICAPS: 4368
TSTG: 6
Method: 39
Still waiting ... running for 100 will abort at 9223372036854745642
DP max: 7
Taking minimum: 6
Generating initial PDT ... done
initial PDT has 195 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 195 leafs
SHOP LEAFS 72
Assignment implications
Generating clauses representing decomposition ... done
At most K: 10ms input: 699 K = 39
Number of actions Formula: 28ms for 55181 clauses
Layers: 8 paths 195
Layer 1 g 0 = 0 - 1 / 0 clauses 19306
Layer 1 g 1 = 2 - 3 / 2 clauses 19306
Layer 1 g 2 = 4 - 5 / 4 clauses 19306
Layer 1 g 3 = 6 - 7 / 6 clauses 19306
Layer 1 g 4 = 8 - 9 / 8 clauses 19306
Layer 1 g 5 = 10 - 11 / 10 clauses 19306
Layer 1 g 6 = 12 - 13 / 12 clauses 19306
Layer 1 g 7 = 14 - 15 / 14 clauses 19306
Layer 1 g 8 = 16 - 17 / 16 clauses 19306
Layer 1 g 9 = 18 - 19 / 18 clauses 19306
Layer 1 g 10 = 20 - 21 / 20 clauses 19306
Layer 1 g 11 = 22 - 23 / 22 clauses 19306
Layer 1 g 12 = 24 - 25 / 24 clauses 19306
Layer 1 g 13 = 26 - 27 / 26 clauses 19306
Layer 1 g 14 = 28 - 29 / 28 clauses 19306
Layer 1 g 15 = 30 - 31 / 30 clauses 19306
Layer 1 g 16 = 32 - 33 / 32 clauses 19306
Layer 1 g 17 = 34 - 35 / 34 clauses 19306
Layer 1 g 18 = 36 - 37 / 36 clauses 19306
Layer 1 g 19 = 38 - 39 / 38 clauses 19306
Layer 1 g 20 = 40 - 41 / 40 clauses 19306
Layer 1 g 21 = 42 - 43 / 42 clauses 19306
Layer 1 g 22 = 44 - 45 / 44 clauses 19306
Layer 1 g 23 = 46 - 47 / 46 clauses 19306
Layer 1 g 24 = 48 - 49 / 48 clauses 19306
Layer 1 g 25 = 50 - 51 / 50 clauses 19306
Layer 1 g 26 = 52 - 53 / 52 clauses 19306
Layer 1 g 27 = 54 - 55 / 54 clauses 19306
Layer 1 g 28 = 56 - 57 / 56 clauses 19306
Layer 1 g 29 = 58 - 59 / 58 clauses 19306
Layer 1 g 30 = 60 - 61 / 60 clauses 19306
Layer 1 g 31 = 62 - 63 / 62 clauses 19306
Layer 1 g 32 = 64 - 65 / 64 clauses 19306
Layer 1 g 33 = 66 - 67 / 66 clauses 19306
Layer 1 g 34 = 68 - 69 / 68 clauses 19306
Layer 1 g 35 = 70 - 71 / 70 clauses 19306
Layer 1 g 36 = 72 - 73 / 72 clauses 19306
Layer 1 g 37 = 74 - 75 / 74 clauses 19306
Layer 1 g 38 = 76 - 77 / 76 clauses 19306
Layer 1 g 39 = 78 - 79 / 78 clauses 19306
Layer 1 g 40 = 80 - 81 / 80 clauses 19306
Layer 1 g 41 = 82 - 83 / 82 clauses 19306
Layer 1 g 42 = 84 - 85 / 84 clauses 19306
Layer 1 g 43 = 86 - 87 / 86 clauses 19306
Layer 1 g 44 = 88 - 89 / 88 clauses 19306
Layer 1 g 45 = 90 - 91 / 90 clauses 19306
Layer 1 g 46 = 92 - 93 / 92 clauses 19306
Layer 1 g 47 = 94 - 95 / 94 clauses 19306
Layer 1 g 48 = 96 - 97 / 96 clauses 19306
Layer 1 g 49 = 98 - 99 / 98 clauses 19306
Layer 1 g 50 = 100 - 101 / 100 clauses 19306
Layer 1 g 51 = 102 - 103 / 102 clauses 19306
Layer 1 g 52 = 104 - 105 / 104 clauses 19306
Layer 1 g 53 = 106 - 107 / 106 clauses 19306
Layer 1 g 54 = 108 - 109 / 108 clauses 19306
Layer 1 g 55 = 110 - 111 / 110 clauses 19306
Layer 1 g 56 = 112 - 113 / 112 clauses 19306
Layer 1 g 57 = 114 - 115 / 114 clauses 19306
Layer 1 g 58 = 116 - 117 / 116 clauses 19306
Layer 1 g 59 = 118 - 119 / 118 clauses 19306
Layer 1 g 60 = 120 - 121 / 120 clauses 19306
Layer 1 g 61 = 122 - 123 / 122 clauses 19306
Layer 1 g 62 = 124 - 125 / 124 clauses 19306
Layer 1 g 63 = 126 - 127 / 126 clauses 19306
Layer 1 g 64 = 128 - 129 / 128 clauses 19306
Layer 1 g 65 = 130 - 131 / 130 clauses 19306
Layer 1 g 66 = 132 - 133 / 132 clauses 19306
Layer 1 g 67 = 134 - 135 / 134 clauses 19306
Layer 1 g 68 = 136 - 137 / 136 clauses 19306
Layer 1 g 69 = 138 - 139 / 138 clauses 19306
Layer 1 g 70 = 140 - 141 / 140 clauses 19306
Layer 1 g 71 = 142 - 143 / 142 clauses 19306
Layer 1 g 72 = 144 - 145 / 144 clauses 19306
Layer 1 g 73 = 146 - 147 / 146 clauses 19306
Layer 1 g 74 = 148 - 149 / 148 clauses 19306
Layer 1 g 75 = 150 - 151 / 150 clauses 19306
Layer 1 g 76 = 152 - 153 / 152 clauses 19306
Layer 1 g 77 = 154 - 155 / 154 clauses 19306
Layer 1 g 78 = 156 - 157 / 156 clauses 19306
Layer 1 g 79 = 158 - 159 / 158 clauses 19306
Layer 1 g 80 = 160 - 161 / 160 clauses 19306
Layer 1 g 81 = 162 - 163 / 162 clauses 19306
Layer 1 g 82 = 164 - 165 / 164 clauses 19306
Layer 1 g 83 = 166 - 167 / 166 clauses 19306
Layer 1 g 84 = 168 - 169 / 168 clauses 19306
Layer 1 g 85 = 170 - 171 / 170 clauses 19306
Layer 1 g 86 = 172 - 173 / 172 clauses 19306
Layer 1 g 87 = 174 - 175 / 174 clauses 19306
Layer 1 g 88 = 176 - 177 / 176 clauses 19306
Layer 1 g 89 = 178 - 179 / 178 clauses 19306
Layer 1 g 90 = 180 - 181 / 180 clauses 19306
Layer 1 g 91 = 182 - 183 / 182 clauses 19306
Layer 1 g 92 = 184 - 185 / 184 clauses 19306
Layer 1 g 93 = 186 - 187 / 186 clauses 19306
Layer 1 g 94 = 188 - 189 / 188 clauses 19306
Layer 1 g 95 = 190 - 191 / 190 clauses 19306
Layer 1 g 96 = 192 - 193 / 192 clauses 19306
Layer 2 g 0 = 0 - 3 / 1 clauses 19306
Layer 2 g 1 = 4 - 7 / 5 clauses 19306
Layer 2 g 2 = 8 - 11 / 9 clauses 19306
Layer 2 g 3 = 12 - 15 / 13 clauses 19306
Layer 2 g 4 = 16 - 19 / 17 clauses 19306
Layer 2 g 5 = 20 - 23 / 21 clauses 19306
Layer 2 g 6 = 24 - 27 / 25 clauses 19306
Layer 2 g 7 = 28 - 31 / 29 clauses 19306
Layer 2 g 8 = 32 - 35 / 33 clauses 19306
Layer 2 g 9 = 36 - 39 / 37 clauses 19306
Layer 2 g 10 = 40 - 43 / 41 clauses 19306
Layer 2 g 11 = 44 - 47 / 45 clauses 19306
Layer 2 g 12 = 48 - 51 / 49 clauses 19306
Layer 2 g 13 = 52 - 55 / 53 clauses 19306
Layer 2 g 14 = 56 - 59 / 57 clauses 19306
Layer 2 g 15 = 60 - 63 / 61 clauses 19306
Layer 2 g 16 = 64 - 67 / 65 clauses 19306
Layer 2 g 17 = 68 - 71 / 69 clauses 19306
Layer 2 g 18 = 72 - 75 / 73 clauses 19306
Layer 2 g 19 = 76 - 79 / 77 clauses 19306
Layer 2 g 20 = 80 - 83 / 81 clauses 19306
Layer 2 g 21 = 84 - 87 / 85 clauses 19306
Layer 2 g 22 = 88 - 91 / 89 clauses 19306
Layer 2 g 23 = 92 - 95 / 93 clauses 19306
Layer 2 g 24 = 96 - 99 / 97 clauses 19306
Layer 2 g 25 = 100 - 103 / 101 clauses 19306
Layer 2 g 26 = 104 - 107 / 105 clauses 19306
Layer 2 g 27 = 108 - 111 / 109 clauses 19306
Layer 2 g 28 = 112 - 115 / 113 clauses 19306
Layer 2 g 29 = 116 - 119 / 117 clauses 19306
Layer 2 g 30 = 120 - 123 / 121 clauses 19306
Layer 2 g 31 = 124 - 127 / 125 clauses 19306
Layer 2 g 32 = 128 - 131 / 129 clauses 19306
Layer 2 g 33 = 132 - 135 / 133 clauses 19306
Layer 2 g 34 = 136 - 139 / 137 clauses 19306
Layer 2 g 35 = 140 - 143 / 141 clauses 19306
Layer 2 g 36 = 144 - 147 / 145 clauses 19306
Layer 2 g 37 = 148 - 151 / 149 clauses 19306
Layer 2 g 38 = 152 - 155 / 153 clauses 19306
Layer 2 g 39 = 156 - 159 / 157 clauses 19306
Layer 2 g 40 = 160 - 163 / 161 clauses 19306
Layer 2 g 41 = 164 - 167 / 165 clauses 19306
Layer 2 g 42 = 168 - 171 / 169 clauses 19306
Layer 2 g 43 = 172 - 175 / 173 clauses 19306
Layer 2 g 44 = 176 - 179 / 177 clauses 19306
Layer 2 g 45 = 180 - 183 / 181 clauses 19306
Layer 2 g 46 = 184 - 187 / 185 clauses 19306
Layer 2 g 47 = 188 - 191 / 189 clauses 19306
Layer 2 g 48 = 192 - 194 / 193 clauses 19306
Layer 3 g 0 = 0 - 7 / 3 clauses 19306
Layer 3 g 1 = 8 - 15 / 11 clauses 19306
Layer 3 g 2 = 16 - 23 / 19 clauses 19306
Layer 3 g 3 = 24 - 31 / 27 clauses 19306
Layer 3 g 4 = 32 - 39 / 35 clauses 19306
Layer 3 g 5 = 40 - 47 / 43 clauses 19306
Layer 3 g 6 = 48 - 55 / 51 clauses 19306
Layer 3 g 7 = 56 - 63 / 59 clauses 19306
Layer 3 g 8 = 64 - 71 / 67 clauses 19306
Layer 3 g 9 = 72 - 79 / 75 clauses 19306
Layer 3 g 10 = 80 - 87 / 83 clauses 19306
Layer 3 g 11 = 88 - 95 / 91 clauses 19306
Layer 3 g 12 = 96 - 103 / 99 clauses 19306
Layer 3 g 13 = 104 - 111 / 107 clauses 19306
Layer 3 g 14 = 112 - 119 / 115 clauses 19306
Layer 3 g 15 = 120 - 127 / 123 clauses 19306
Layer 3 g 16 = 128 - 135 / 131 clauses 19306
Layer 3 g 17 = 136 - 143 / 139 clauses 19306
Layer 3 g 18 = 144 - 151 / 147 clauses 19306
Layer 3 g 19 = 152 - 159 / 155 clauses 19306
Layer 3 g 20 = 160 - 167 / 163 clauses 19306
Layer 3 g 21 = 168 - 175 / 171 clauses 19306
Layer 3 g 22 = 176 - 183 / 179 clauses 19306
Layer 3 g 23 = 184 - 191 / 187 clauses 19306
Layer 3 g 24 = 192 - 194 / 195 clauses 19306
Layer 4 g 0 = 0 - 15 / 7 clauses 19306
Layer 4 g 1 = 16 - 31 / 23 clauses 19306
Layer 4 g 2 = 32 - 47 / 39 clauses 19306
Layer 4 g 3 = 48 - 63 / 55 clauses 19306
Layer 4 g 4 = 64 - 79 / 71 clauses 19306
Layer 4 g 5 = 80 - 95 / 87 clauses 19306
Layer 4 g 6 = 96 - 111 / 103 clauses 19306
Layer 4 g 7 = 112 - 127 / 119 clauses 19306
Layer 4 g 8 = 128 - 143 / 135 clauses 19306
Layer 4 g 9 = 144 - 159 / 151 clauses 19306
Layer 4 g 10 = 160 - 175 / 167 clauses 19306
Layer 4 g 11 = 176 - 191 / 183 clauses 19306
Layer 4 g 12 = 192 - 194 / 199 clauses 19306
Layer 5 g 0 = 0 - 31 / 15 clauses 19306
Layer 5 g 1 = 32 - 63 / 47 clauses 19306
Layer 5 g 2 = 64 - 95 / 79 clauses 19306
Layer 5 g 3 = 96 - 127 / 111 clauses 19306
Layer 5 g 4 = 128 - 159 / 143 clauses 19306
Layer 5 g 5 = 160 - 191 / 175 clauses 19306
Layer 5 g 6 = 192 - 194 / 207 clauses 19306
Layer 6 g 0 = 0 - 63 / 31 clauses 19306
Layer 6 g 1 = 64 - 127 / 95 clauses 19306
Layer 6 g 2 = 128 - 191 / 159 clauses 19306
Layer 6 g 3 = 192 - 194 / 223 clauses 19306
Layer 7 g 0 = 0 - 127 / 63 clauses 19306
Layer 7 g 1 = 128 - 194 / 191 clauses 19306
Layer 8 g 0 = 0 - 194 / 127 clauses 19306
Invariant Clauses 8820
NUMBER OF CLAUSES 3976302
NUMBER OF STATE CLAUSES 3891421
NUMBER OF DECOMPOSITION CLAUSES 84881
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.87% 2.13% 0.0% 
NUMBER OF PATHS 195
Starting cryptominisat5.5
Setting starttime of solver to 1604520418436
Command exited with non-zero status 20
1.11 0.02

Time command gave the following runtime for the solver: 1130
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 891861736
planner result = SOLUTION
============ solution ============
number of primitive plan steps = 77
cost of solution               = 40
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 45
number of actions                    = 244
number of abstract actions           = 55
number of primitive actions          = 189
number of methods                    = 157
number of primitive shop actions     = 101
number of primitive non-shop actions = 88
size of largest method               = 7
average method size                  = 3
============ sat ============
plan length                     = 39
number of variables             = 131580
number of clauses               = 3976458
average size of clauses         = 2.9687850343194873
number of assert                = 20
number of horn                  = 3969822
K offset                        = 0
K chosen value                  = 6
state formula                   = 3891421
method children clauses         = 0
number of paths                 = 195
maximum plan length             = 195
number of decomposition clauses = 84881
number of ordering clauses      = 0
number of state clauses         = 3891421
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 38243
============ parsing ============
total                         = 1037
file parser                   = 593
sort expansion                = 167
closed world assumption       = 93
inherit preconditions         = 0
shop methods                  = 26
eliminate identical variables = 73
strip domain of hybridity     = 1
flatten formula               = 84
============ preprocessing ============
total                                      = 1192
compile negative preconditions             = 31
compile unit methods                       = 0
split parameter                            = 12
compile methods with identical tasks       = 15
removing unnecessary predicates            = 90
lifted reachabiltiy analysis               = 85
grounded planning graph analysis           = 453
grounded task decomposition graph analysis = 369
grounding                                  = 111
create artificial top task                 = 17
============ search preparation ============
compute state invariants = 98
============ sat ============
total                                        = 31299
generate formula                             = 23146
generate path decomposition tree             = 314
normalise path decomposition tree            = 133
sog optimisation                             = 84
translate path decomposition tree to clauses = 578
generate state formula                       = 21053
generate state invariant formula             = 76
transform to DIMACS                          = 3183
SAT solver                                   = 4660
SAT solver for K=0004                        = 0
SAT solver for K=0006                        = 1130

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="189";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="55";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="891861736";"40 sat:20:state formula"="3891421";"40 sat:01:number of variables"="131580";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="195";"40 sat:00:plan length"="39";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="157";"01 solution:02:cost of solution"="40";"30 problem:07:number of primitive shop actions"="101";"01 solution:01:number of primitive plan steps"="77";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="244";"30 problem:08:number of primitive non-shop actions"="88";"30 problem:02:number of predicates"="45";"40 sat:03:number of horn"="3969822";"40 sat:15:K chosen value"="6";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="7";"40 sat:03:average size of clauses"="2.9687850343194873";"40 sat:02:number of clauses"="3976458";"40 sat:50:number of state clauses"="3891421";"40 sat:03:number of assert"="20";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="195";"40 sat:50:number of decomposition clauses"="84881";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="593";"01 parsing:08:flatten formula"="84";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="31299";"40 sat:16:generate state formula"="21053";"40 sat:20:transform to DIMACS"="3183";"40 sat:11:generate path decomposition tree"="314";"02 preprocessing:07:compile methods with identical tasks"="15";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="90";"01 parsing:03:closed world assumption"="93";"02 preprocessing:11:lifted reachabiltiy analysis"="85";"01 parsing:02:sort expansion"="167";"40 sat:12:normalise path decomposition tree"="133";"40 sat:40:SAT solver"="4660";"01 parsing:00:total"="1037";"40 sat:10:generate formula"="23146";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="31";"00 total:00:total"="38243";"40 sat:13:sog optimisation"="84";"02 preprocessing:12:grounded planning graph analysis"="453";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="369";"40 sat:41:SAT solver for K=0006"="1130";"02 preprocessing:04:split parameter"="12";"01 parsing:05:shop methods"="26";"10 search preparation:02:compute state invariants"="98";"01 parsing:06:eliminate identical variables"="73";"40 sat:15:translate path decomposition tree to clauses"="578";"40 sat:17:generate state invariant formula"="76";"02 preprocessing:00:total"="1192";"02 preprocessing:99:create artificial top task"="17";"02 preprocessing:84:grounding"="111"
#!verify __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1];__method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0];visit[waypoint0];__method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint0,waypoint1];navigate[rover1,waypoint0,waypoint1];unvisit[waypoint0];__method_precondition_m5_empty_store_5_precondition[rover1store];nop[];sample_soil[rover1,rover1store,waypoint1];__method_precondition_m9_send_soil_data_9_precondition[general,waypoint3,waypoint1,rover1];communicate_soil_data2[rover1,general,waypoint1,waypoint3];__method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1];__method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint1];visit[waypoint1];__method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint1,waypoint2];navigate[rover1,waypoint1,waypoint2];unvisit[waypoint1];__method_precondition_m6_empty_store_6_precondition[rover1store];drop[rover1,rover1store];sample_soil[rover1,rover1store,waypoint2];__method_precondition_m9_send_soil_data_9_precondition[general,waypoint3,waypoint2,rover1];communicate_soil_data2[rover1,general,waypoint2,waypoint3];__method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0];nop[];__method_precondition_m5_empty_store_5_precondition[rover0store];nop[];sample_rock[rover0,rover0store,waypoint0];__method_precondition_m12_send_rock_data_12_precondition[general,waypoint3,waypoint0,rover0];communicate_rock_data2[rover0,general,waypoint0,waypoint3];__method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint0];visit[waypoint0];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint0,waypoint1];navigate[rover0,waypoint0,waypoint1];unvisit[waypoint0];__method_precondition_m6_empty_store_6_precondition[rover0store];drop[rover0,rover0store];sample_rock[rover0,rover0store,waypoint1];__method_precondition_m12_send_rock_data_12_precondition[general,waypoint3,waypoint1,rover0];communicate_rock_data2[rover0,general,waypoint1,waypoint3];__method_precondition_m13_get_image_data_13_precondition[waypoint2,rover1,high_res,camera0,objective0];__method_precondition_m15_do_calibrate_15_precondition[camera0,objective1,waypoint2];__method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2];nop[];calibrate[rover1,camera0,objective1,waypoint2];__method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2];nop[];take_image[rover1,waypoint2,objective0,camera0,high_res];__method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint2];__method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2];nop[];communicate_image_data[rover1,general,objective0,high_res,waypoint2,waypoint3];__method_precondition_m13_get_image_data_13_precondition[waypoint1,rover0,high_res,camera2,objective2];__method_precondition_m15_do_calibrate_15_precondition[camera2,objective1,waypoint1];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1];nop[];calibrate[rover0,camera2,objective1,waypoint1];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1];nop[];take_image[rover0,waypoint1,objective2,camera2,high_res];__method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint1];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1];nop[];communicate_image_data[rover0,general,objective2,high_res,waypoint1,waypoint3];__method_precondition_m13_get_image_data_13_precondition[waypoint2,rover1,colour,camera1,objective0];__method_precondition_m15_do_calibrate_15_precondition[camera1,objective1,waypoint2];__method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2];nop[];calibrate[rover1,camera1,objective1,waypoint2];__method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2];nop[];take_image[rover1,waypoint2,objective0,camera1,colour];__method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint2];__method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint2];nop[];communicate_image_data[rover1,general,objective0,colour,waypoint2,waypoint3]
==>
0 __method_precondition_m7_get_soil_data_7_precondition rover1store rover1 
1 __method_precondition_m1_do_navigate1_1_precondition rover1 waypoint0 
2 visit waypoint0 
3 __method_precondition_m3_do_navigate2_3_precondition rover1 waypoint0 waypoint1 
4 navigate rover1 waypoint0 waypoint1 
5 unvisit waypoint0 
6 __method_precondition_m5_empty_store_5_precondition rover1store 
7 nop  
8 sample_soil rover1 rover1store waypoint1 
9 __method_precondition_m9_send_soil_data_9_precondition general waypoint3 waypoint1 rover1 
10 communicate_soil_data2 rover1 general waypoint1 waypoint3 
11 __method_precondition_m7_get_soil_data_7_precondition rover1store rover1 
12 __method_precondition_m1_do_navigate1_1_precondition rover1 waypoint1 
13 visit waypoint1 
14 __method_precondition_m3_do_navigate2_3_precondition rover1 waypoint1 waypoint2 
15 navigate rover1 waypoint1 waypoint2 
16 unvisit waypoint1 
17 __method_precondition_m6_empty_store_6_precondition rover1store 
18 drop rover1 rover1store 
19 sample_soil rover1 rover1store waypoint2 
20 __method_precondition_m9_send_soil_data_9_precondition general waypoint3 waypoint2 rover1 
21 communicate_soil_data2 rover1 general waypoint2 waypoint3 
22 __method_precondition_m10_get_rock_data_10_precondition rover0store rover0 
23 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint0 
24 nop  
25 __method_precondition_m5_empty_store_5_precondition rover0store 
26 nop  
27 sample_rock rover0 rover0store waypoint0 
28 __method_precondition_m12_send_rock_data_12_precondition general waypoint3 waypoint0 rover0 
29 communicate_rock_data2 rover0 general waypoint0 waypoint3 
30 __method_precondition_m10_get_rock_data_10_precondition rover0store rover0 
31 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint0 
32 visit waypoint0 
33 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint0 waypoint1 
34 navigate rover0 waypoint0 waypoint1 
35 unvisit waypoint0 
36 __method_precondition_m6_empty_store_6_precondition rover0store 
37 drop rover0 rover0store 
38 sample_rock rover0 rover0store waypoint1 
39 __method_precondition_m12_send_rock_data_12_precondition general waypoint3 waypoint1 rover0 
40 communicate_rock_data2 rover0 general waypoint1 waypoint3 
41 __method_precondition_m13_get_image_data_13_precondition waypoint2 rover1 high_res camera0 objective0 
42 __method_precondition_m15_do_calibrate_15_precondition camera0 objective1 waypoint2 
43 __method_precondition_m0_do_navigate1_0_precondition rover1 waypoint2 
44 nop  
45 calibrate rover1 camera0 objective1 waypoint2 
46 __method_precondition_m0_do_navigate1_0_precondition rover1 waypoint2 
47 nop  
48 take_image rover1 waypoint2 objective0 camera0 high_res 
49 __method_precondition_m14_send_image_data_14_precondition general waypoint3 waypoint2 
50 __method_precondition_m0_do_navigate1_0_precondition rover1 waypoint2 
51 nop  
52 communicate_image_data rover1 general objective0 high_res waypoint2 waypoint3 
53 __method_precondition_m13_get_image_data_13_precondition waypoint1 rover0 high_res camera2 objective2 
54 __method_precondition_m15_do_calibrate_15_precondition camera2 objective1 waypoint1 
55 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint1 
56 nop  
57 calibrate rover0 camera2 objective1 waypoint1 
58 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint1 
59 nop  
60 take_image rover0 waypoint1 objective2 camera2 high_res 
61 __method_precondition_m14_send_image_data_14_precondition general waypoint3 waypoint1 
62 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint1 
63 nop  
64 communicate_image_data rover0 general objective2 high_res waypoint1 waypoint3 
65 __method_precondition_m13_get_image_data_13_precondition waypoint2 rover1 colour camera1 objective0 
66 __method_precondition_m15_do_calibrate_15_precondition camera1 objective1 waypoint2 
67 __method_precondition_m0_do_navigate1_0_precondition rover1 waypoint2 
68 nop  
69 calibrate rover1 camera1 objective1 waypoint2 
70 __method_precondition_m0_do_navigate1_0_precondition rover1 waypoint2 
71 nop  
72 take_image rover1 waypoint2 objective0 camera1 colour 
73 __method_precondition_m14_send_image_data_14_precondition general waypoint3 waypoint2 
74 __method_precondition_m0_do_navigate1_0_precondition rover1 waypoint2 
75 nop  
76 communicate_image_data rover1 general objective0 colour waypoint2 waypoint3 
root 94
77 do_navigate1 rover1 waypoint2  -> m1_do_navigate1 12 13 79 16
78 do_navigate1 rover1 waypoint2  -> m0_do_navigate1 43 44
79 do_navigate2 rover1 waypoint1 waypoint2  -> m3_do_navigate2 14 15
80 do_navigate1 rover0 waypoint1  -> m1_do_navigate1 31 32 97 35
81 get_rock_data waypoint1  -> m10_get_rock_data 30 80 102 38 86
82 do_calibrate rover0 camera2  -> m15_do_calibrate 54 93 57
83 empty_store rover1store rover1  -> m6_empty_store 17 18
84 get_image_data objective2 high_res  -> m13_get_image_data 53 82 85 60 98
85 do_navigate1 rover0 waypoint1  -> m0_do_navigate1 58 59
86 send_rock_data rover0 waypoint1  -> m12_send_rock_data 39 40
87 send_image_data rover1 objective0 colour  -> m14_send_image_data 73 95 76
88 do_navigate1 rover1 waypoint1  -> m1_do_navigate1 1 2 89 5
89 do_navigate2 rover1 waypoint0 waypoint1  -> m3_do_navigate2 3 4
90 send_soil_data rover1 waypoint2  -> m9_send_soil_data 20 21
91 do_calibrate rover1 camera1  -> m15_do_calibrate 66 113 69
92 do_navigate1 rover1 waypoint2  -> m0_do_navigate1 46 47
93 do_navigate1 rover0 waypoint1  -> m0_do_navigate1 55 56
94 __artificialTopCompilation__top_1  -> __top_1 111 107 100 81 108 84 99
95 do_navigate1 rover1 waypoint2  -> m0_do_navigate1 74 75
96 send_soil_data rover1 waypoint1  -> m9_send_soil_data 9 10
97 do_navigate2 rover0 waypoint0 waypoint1  -> m3_do_navigate2 33 34
98 send_image_data rover0 objective2 high_res  -> m14_send_image_data 61 104 64
99 get_image_data objective0 colour  -> m13_get_image_data 65 91 103 72 87
100 get_rock_data waypoint0  -> m10_get_rock_data 22 101 109 27 106
101 do_navigate1 rover0 waypoint0  -> m0_do_navigate1 23 24
102 empty_store rover0store rover0  -> m6_empty_store 36 37
103 do_navigate1 rover1 waypoint2  -> m0_do_navigate1 70 71
104 do_navigate1 rover0 waypoint1  -> m0_do_navigate1 62 63
105 empty_store rover1store rover1  -> m5_empty_store 6 7
106 send_rock_data rover0 waypoint0  -> m12_send_rock_data 28 29
107 get_soil_data waypoint2  -> m7_get_soil_data 11 77 83 19 90
108 get_image_data objective0 high_res  -> m13_get_image_data 41 112 92 48 110
109 empty_store rover0store rover0  -> m5_empty_store 25 26
110 send_image_data rover1 objective0 high_res  -> m14_send_image_data 49 114 52
111 get_soil_data waypoint1  -> m7_get_soil_data 0 88 105 8 96
112 do_calibrate rover1 camera0  -> m15_do_calibrate 42 78 45
113 do_navigate1 rover1 waypoint2  -> m0_do_navigate1 67 68
114 do_navigate1 rover1 waypoint2  -> m0_do_navigate1 50 51

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 39.290 MEMPEAK_KBS 1189914.624
