PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/RoverG/domain.hddl instances/RoverG/p08.hddl"


Planner Configuration
=====================
Domain: instances/RoverG/domain.hddl
Problem: instances/RoverG/p08.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p08.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 26
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 33
Compiling negative preconditions ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 33
Compiling split parameters ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 33
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 33
Grounded planning graph ... done in 487ms.
	Number of Grounded Actions 1509
	Number of Grounded Literals 868
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 33
Two Way TDG ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 33
Grounding ... done.
	number of abstract tasks = 541
	number of tasks = 1812
	number of decomposition methods = 1882
	number of predicates = 1444
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 541
	number of tasks = 1812
	number of decomposition methods = 1882
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 144ms.
	Number of Grounded Actions 1271
	Number of Grounded Literals 135
	number of abstract tasks = 541
	number of tasks = 1812
	number of decomposition methods = 1882
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 541
	number of tasks = 1812
	number of decomposition methods = 1882
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 542
	number of tasks = 1813
	number of decomposition methods = 1883
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 542
	number of tasks = 1813
	number of decomposition methods = 1883
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 65ms.
	Number of Grounded Actions 1271
	Number of Grounded Literals 135
	number of abstract tasks = 542
	number of tasks = 1813
	number of decomposition methods = 1883
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 542
	number of tasks = 1813
	number of decomposition methods = 1883
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 542
	number of tasks = 1813
	number of decomposition methods = 1883
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 542
	number of tasks = 1813
	number of decomposition methods = 1883
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 542
	number of tasks = 1813
	number of decomposition methods = 1883
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 930
	number of epsilon methods = 0
	number of primitive tasks = 1271
	number of constants = 0
Tasks 1271 - 163
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854770830ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854770575
done
initial PDT has 210 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 149 leafs
SHOP LEAFS 83
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 27135
Size 26602 at 0/1271
Size 20901 at 500/1271
Size 14092 at 1000/1271
Size 12263
Size 12263 at 0/1271
Size 10323 at 500/1271
Size 3581 at 1000/1271
Size 2724
Size 2724 at 0/1271
Size 2185 at 500/1271
Size 399 at 1000/1271
Size 388
Size 388 at 0/1271
Size 382 at 500/1271
Size 372 at 1000/1271
Size 372
Size 372 at 0/1271
Size 372 at 500/1271
Size 372 at 1000/1271
Size 372
Invariant time: 0.377
Number of invariants: 372
Invariant Clauses 55800
NUMBER OF CLAUSES 141589
NUMBER OF STATE CLAUSES 99043
NUMBER OF DECOMPOSITION CLAUSES 42546
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 69.95% 30.05% 0.0% 
NUMBER OF PATHS 149
Starting cryptominisat5.5
Setting starttime of solver to 1604520968211
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854767835
done
initial PDT has 310 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 235 leafs
SHOP LEAFS 94
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 87792
NUMBER OF CLAUSES 713556
NUMBER OF STATE CLAUSES 160856
NUMBER OF DECOMPOSITION CLAUSES 552700
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 22.54% 77.46000000000001% 0.0% 
NUMBER OF PATHS 235
Starting cryptominisat5.5
Setting starttime of solver to 1604520970883
Command exited with non-zero status 10
0.31 0.01

Time command gave the following runtime for the solver: 320
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_3;4,39 39 m8_send_soil_data
3;4 93 pathaction!2_3;4,27
Consider method^1_8,1373 1373 m13_get_image_data
8 231 pathaction!1_8,823
Consider method^2_9;4,1017 1017 m14_send_image_data
9;4 240 pathaction!2_9;4,1575
Consider method^3_1;1;2,1208 1208 m3_do_navigate2
1;1;2 226 pathaction!3_1;1;2,944
Consider method^4_4;4;1;2,336 336 m3_do_navigate2
4;4;1;2 144 pathaction!4_4;4;1;2,930
Consider method^2_6;2,798 798 m5_empty_store
6;2 89 pathaction!2_6;2,783
Consider method^4_0;4;1;2,433 433 m3_do_navigate2
0;4;1;2 8 pathaction!4_0;4;1;2,998
Consider method^1_6,352 352 m10_get_rock_data
6 289 pathaction!1_6,675
Consider method^4_7;4;1;2,1241 1241 m2_do_navigate2
7;4;1;2 173 pathaction!4_7;4;1;2,1330
Consider method^3_0;1;2,1736 1736 m4_do_navigate2
0;1;2 124 pathaction!3_0;1;2,1062
Consider method^3_1;4;1,708 708 m1_do_navigate1
1;4;1 137 pathaction!3_1;4;1,785
Consider method^2_10;4,1739 1739 m14_send_image_data
10;4 217 pathaction!2_10;4,1576
Consider method^2_4;2,1816 1816 m5_empty_store
4;2 132 pathaction!2_4;2,784
Consider method^2_7;4,423 423 m11_send_rock_data
7;4 14 pathaction!2_7;4,1757
Consider method^4_5;4;1;2,1695 1695 m3_do_navigate2
5;4;1;2 11 pathaction!4_5;4;1;2,1097
Consider method^2_6;4,1793 1793 m11_send_rock_data
6;4 257 pathaction!2_6;4,1750
Consider method^1_7,540 540 m10_get_rock_data
7 268 pathaction!1_7,673
Consider method^2_6;1,370 370 m1_do_navigate1
6;1 92 pathaction!2_6;1,805
Consider method^4_0;1;2;3,672 672 m3_do_navigate2
0;1;2;3 9 pathaction!4_0;1;2;3,1266
Consider method^4_6;1;2;3,468 468 m3_do_navigate2
6;1;2;3 278 pathaction!4_6;1;2;3,1293
Consider method^2_2;1,777 777 m1_do_navigate1
2;1 4 pathaction!2_2;1,817
Consider method^2_3;1,169 169 m1_do_navigate1
3;1 26 pathaction!2_3;1,822
Consider method^2_3;2,1803 1803 m6_empty_store
3;2 166 pathaction!2_3;2,782
Consider method^2_5;2,1866 1866 m6_empty_store
5;2 283 pathaction!2_5;2,784
Consider method^4_6;4;1;2,1679 1679 m3_do_navigate2
6;4;1;2 95 pathaction!4_6;4;1;2,1161
Consider method^3_10;1;1,161 161 m0_do_navigate1
10;1;1 155 pathaction!3_10;1;1,793
Consider method^3_3;1;2,568 568 m4_do_navigate2
3;1;2 274 pathaction!3_3;1;2,1279
Consider method^2_5;1,341 341 m1_do_navigate1
5;1 284 pathaction!2_5;1,796
Consider method^4_4;1;2;3,888 888 m3_do_navigate2
4;1;2;3 221 pathaction!4_4;1;2;3,1274
Consider method^4_9;4;1;2,1109 1109 m2_do_navigate2
9;4;1;2 194 pathaction!4_9;4;1;2,912
Consider method^2_1;2,1252 1252 m5_empty_store
1;2 220 pathaction!2_1;2,782
Consider method^4_2;1;2;3,1284 1284 m3_do_navigate2
2;1;2;3 12 pathaction!4_2;1;2;3,1215
Consider method^1_0,1475 1475 m7_get_soil_data
0 96 pathaction!1_0,1738
Consider method^3_8;1;1,986 986 m0_do_navigate1
8;1;1 251 pathaction!3_8;1;1,817
Consider method^3_8;4;1,328 328 m1_do_navigate1
8;4;1 20 pathaction!3_8;4;1,817
Consider method^1_10,1638 1638 m13_get_image_data
10 175 pathaction!1_10,825
Consider method^2_8;2,359 359 m1_do_navigate1
8;2 7 pathaction!2_8;2,799
Consider method^2_4;1,368 368 m1_do_navigate1
4;1 255 pathaction!2_4;1,794
Consider method^2_1;1,1600 1600 m1_do_navigate1
1;1 100 pathaction!2_1;1,816
Consider method^2_0;4,866 866 m8_send_soil_data
0;4 147 pathaction!2_0;4,22
Consider method^4_8;4;1;2,1284 1284 m3_do_navigate2
8;4;1;2 110 pathaction!4_8;4;1;2,1215
Consider method^2_0;1,1779 1779 m1_do_navigate1
0;1 75 pathaction!2_0;1,798
Consider method^3_2;1;2,1518 1518 m4_do_navigate2
2;1;2 138 pathaction!3_2;1;2,1082
Consider method^3_7;4;1,699 699 m1_do_navigate1
7;4;1 10 pathaction!3_7;4;1,817
Consider method^2_9;2,1406 1406 m1_do_navigate1
9;2 223 pathaction!2_9;2,793
Consider method^2_2;4,388 388 m8_send_soil_data
2;4 234 pathaction!2_2;4,26
Consider method^3_6;4;1,1467 1467 m1_do_navigate1
6;4;1 167 pathaction!3_6;4;1,792
Consider method^3_4;4;1,1223 1223 m1_do_navigate1
4;4;1 275 pathaction!3_4;4;1,809
Consider method^2_7;1,986 986 m0_do_navigate1
7;1 202 pathaction!2_7;1,817
Consider method^3_9;4;1,1407 1407 m1_do_navigate1
9;4;1 23 pathaction!3_9;4;1,793
Consider method^2_7;2,1006 1006 m6_empty_store
7;2 117 pathaction!2_7;2,781
Consider method^1_4,1288 1288 m10_get_rock_data
4 260 pathaction!1_4,676
Consider method^3_9;1;1,986 986 m0_do_navigate1
9;1;1 118 pathaction!3_9;1;1,817
Consider method^2_8;4,684 684 m14_send_image_data
8;4 35 pathaction!2_8;4,1573
Consider method^3_4;1;2,1059 1059 m4_do_navigate2
4;1;2 43 pathaction!3_4;1;2,1315
Consider method^1_9,1697 1697 m13_get_image_data
9 140 pathaction!1_9,824
Consider method^3_5;1;2,1602 1602 m4_do_navigate2
5;1;2 32 pathaction!3_5;1;2,1110
Consider method^3_6;1;2,968 968 m4_do_navigate2
6;1;2 99 pathaction!3_6;1;2,1344
Consider method^3_3;4;1,530 530 m0_do_navigate1
3;4;1 211 pathaction!3_3;4;1,822
Consider method^3_10;2;2,180 180 m3_do_navigate2
10;2;2 135 pathaction!3_10;2;2,1053
Consider method^2_0;2,246 246 m5_empty_store
0;2 74 pathaction!2_0;2,781
Consider method^3_5;4;1,164 164 m1_do_navigate1
5;4;1 121 pathaction!3_5;4;1,795
Consider method^2_8;1,232 232 m15_do_calibrate
8;1 91 pathaction!2_8;1,1737
Consider method^2_9;1,232 232 m15_do_calibrate
9;1 180 pathaction!2_9;1,1737
Consider method^2_10;1,810 810 m15_do_calibrate
10;1 120 pathaction!2_10;1,1737
Consider method^1_5,989 989 m10_get_rock_data
5 238 pathaction!1_5,674
Consider method^2_10;2,960 960 m1_do_navigate1
10;2 201 pathaction!2_10;2,799
Consider method^2_5;4,1026 1026 m11_send_rock_data
5;4 114 pathaction!2_5;4,1746
Consider method^0_,1882 1882 __top_1
 249 pathaction!0_,1812
Consider method^2_1;4,1782 1782 m8_send_soil_data
1;4 57 pathaction!2_1;4,25
Consider method^3_2;4;1,986 986 m0_do_navigate1
2;4;1 31 pathaction!3_2;4;1,817
Consider method^3_0;4;1,1078 1078 m1_do_navigate1
0;4;1 158 pathaction!3_0;4;1,789
Consider method^4_9;2;2;3,1474 1474 m3_do_navigate2
9;2;2;3 22 pathaction!4_9;2;2;3,1118
Consider method^3_10;4;1,774 774 m1_do_navigate1
10;4;1 209 pathaction!3_10;4;1,793
Consider method^2_2;2,1006 1006 m6_empty_store
2;2 116 pathaction!2_2;2,781
Consider method^3_8;2;2,1619 1619 m3_do_navigate2
8;2;2 136 pathaction!3_8;2;2,1125
Consider method^4_3;1;2;3,1787 1787 m3_do_navigate2
3;1;2;3 153 pathaction!4_3;1;2;3,950
Consider method^3_9;2;2,910 910 m4_do_navigate2
9;2;2 133 pathaction!3_9;2;2,1277
Consider method^4_1;4;1;2,1521 1521 m3_do_navigate2
1;4;1;2 193 pathaction!4_1;4;1;2,1100
Consider method^4_5;1;2;3,1880 1880 m3_do_navigate2
5;1;2;3 172 pathaction!4_5;1;2;3,1061
Consider method^2_4;4,1671 1671 m11_send_rock_data
4;4 71 pathaction!2_4;4,1745
Consider method^1_2,1090 1090 m7_get_soil_data
2 54 pathaction!1_2,1739
Consider method^1_1,1454 1454 m7_get_soil_data
1 104 pathaction!1_1,1741
Consider method^4_10;4;1;2,1474 1474 m3_do_navigate2
10;4;1;2 229 pathaction!4_10;4;1;2,1118
Consider method^1_3,1443 1443 m7_get_soil_data
3 78 pathaction!1_3,1740


CHECKING primitive solution of length 201 ...
true 161 __method_precondition_m7_get_soil_data_7_precondition[rover0store,rover0;]
true 68 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint6;]
true 72 visit[waypoint6;]
true 181 __method_precondition_m4_do_navigate2_4_precondition[rover0,waypoint6,waypoint4,waypoint7;]
true 157 navigate[rover0,waypoint6,waypoint7;]
true 271 visit[waypoint7;]
true 190 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint7,waypoint4;]
true 196 navigate[rover0,waypoint7,waypoint4;]
true 204 unvisit[waypoint7;]
true 80 unvisit[waypoint6;]
true 73 __method_precondition_m5_empty_store_5_precondition[rover0store;]
true 237 nop[;]
true 53 sample_soil[rover0,rover0store,waypoint4;]
true 276 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint6,waypoint7;]
true 227 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint4;]
true 69 visit[waypoint4;]
true 189 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint4,waypoint7;]
true 264 navigate[rover0,waypoint4,waypoint7;]
true 262 unvisit[waypoint4;]
true 224 communicate_soil_data1[rover0,general,waypoint4,waypoint7,waypoint6;]
true 288 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 65 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint2;]
true 159 visit[waypoint2;]
true 30 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint9;]
true 188 navigate[rover1,waypoint2,waypoint9;]
true 127 unvisit[waypoint2;]
true 112 __method_precondition_m5_empty_store_5_precondition[rover1store;]
true 37 nop[;]
true 214 sample_soil[rover1,rover1store,waypoint9;]
true 76 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint6,waypoint2;]
true 128 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint9;]
true 109 visit[waypoint9;]
true 107 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint9,waypoint2;]
true 250 navigate[rover1,waypoint9,waypoint2;]
true 170 unvisit[waypoint9;]
true 270 communicate_soil_data1[rover1,general,waypoint9,waypoint2,waypoint6;]
true 102 __method_precondition_m7_get_soil_data_7_precondition[rover0store,rover0;]
true 17 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint7;]
true 256 visit[waypoint7;]
true 290 __method_precondition_m4_do_navigate2_4_precondition[rover0,waypoint7,waypoint1,waypoint6;]
true 139 navigate[rover0,waypoint7,waypoint6;]
true 285 visit[waypoint6;]
true 21 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint6,waypoint1;]
true 16 navigate[rover0,waypoint6,waypoint1;]
true 219 unvisit[waypoint6;]
true 267 unvisit[waypoint7;]
true 292 __method_precondition_m6_empty_store_6_precondition[rover0store;]
true 186 drop[rover0,rover0store;]
true 67 sample_soil[rover0,rover0store,waypoint1;]
true 210 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint6,waypoint1;]
true 248 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 179 nop[;]
true 97 communicate_soil_data1[rover0,general,waypoint1,waypoint1,waypoint6;]
true 199 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 225 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint2;]
true 44 visit[waypoint2;]
true 28 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint2,waypoint7,waypoint4;]
true 252 navigate[rover1,waypoint2,waypoint4;]
true 232 visit[waypoint4;]
true 148 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint4,waypoint7;]
true 286 navigate[rover1,waypoint4,waypoint7;]
true 106 unvisit[waypoint4;]
true 182 unvisit[waypoint2;]
true 103 __method_precondition_m6_empty_store_6_precondition[rover1store;]
true 105 drop[rover1,rover1store;]
true 293 sample_soil[rover1,rover1store,waypoint7;]
true 46 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint6,waypoint7;]
true 47 __method_precondition_m0_do_navigate1_0_precondition[rover1,waypoint7;]
true 197 nop[;]
true 123 communicate_soil_data1[rover1,general,waypoint7,waypoint7,waypoint6;]
true 208 __method_precondition_m10_get_rock_data_10_precondition[rover3store,rover3;]
true 207 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint0;]
true 41 visit[waypoint0;]
true 165 __method_precondition_m4_do_navigate2_4_precondition[rover3,waypoint0,waypoint3,waypoint1;]
true 241 navigate[rover3,waypoint0,waypoint1;]
true 5 visit[waypoint1;]
true 113 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint1,waypoint3;]
true 187 navigate[rover3,waypoint1,waypoint3;]
true 244 unvisit[waypoint1;]
true 258 unvisit[waypoint0;]
true 1 __method_precondition_m5_empty_store_5_precondition[rover3store;]
true 119 nop[;]
true 228 sample_rock[rover3,rover3store,waypoint3;]
true 269 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint6,waypoint1;]
true 266 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint3;]
true 183 visit[waypoint3;]
true 115 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint3,waypoint1;]
true 273 navigate[rover3,waypoint3,waypoint1;]
true 206 unvisit[waypoint3;]
true 236 communicate_rock_data1[rover3,general,waypoint3,waypoint1,waypoint6;]
true 52 __method_precondition_m10_get_rock_data_10_precondition[rover3store,rover3;]
true 51 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint1;]
true 154 visit[waypoint1;]
true 239 __method_precondition_m4_do_navigate2_4_precondition[rover3,waypoint1,waypoint10,waypoint0;]
true 222 navigate[rover3,waypoint1,waypoint0;]
true 145 visit[waypoint0;]
true 191 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint0,waypoint10;]
true 218 navigate[rover3,waypoint0,waypoint10;]
true 243 unvisit[waypoint0;]
true 77 unvisit[waypoint1;]
true 33 __method_precondition_m6_empty_store_6_precondition[rover3store;]
true 233 drop[rover3,rover3store;]
true 40 sample_rock[rover3,rover3store,waypoint10;]
true 203 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint6,waypoint2;]
true 212 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint10;]
true 15 visit[waypoint10;]
true 272 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint10,waypoint2;]
true 150 navigate[rover3,waypoint10,waypoint2;]
true 94 unvisit[waypoint10;]
true 164 communicate_rock_data1[rover3,general,waypoint10,waypoint2,waypoint6;]
true 253 __method_precondition_m10_get_rock_data_10_precondition[rover2store,rover2;]
true 294 __method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint9;]
true 122 visit[waypoint9;]
true 184 __method_precondition_m4_do_navigate2_4_precondition[rover2,waypoint9,waypoint5,waypoint2;]
true 62 navigate[rover2,waypoint9,waypoint2;]
true 29 visit[waypoint2;]
true 279 __method_precondition_m3_do_navigate2_3_precondition[rover2,waypoint2,waypoint5;]
true 90 navigate[rover2,waypoint2,waypoint5;]
true 6 unvisit[waypoint2;]
true 59 unvisit[waypoint9;]
true 146 __method_precondition_m5_empty_store_5_precondition[rover2store;]
true 55 nop[;]
true 84 sample_rock[rover2,rover2store,waypoint5;]
true 151 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint6,waypoint2;]
true 156 __method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint5;]
true 88 visit[waypoint5;]
true 261 __method_precondition_m3_do_navigate2_3_precondition[rover2,waypoint5,waypoint2;]
true 282 navigate[rover2,waypoint5,waypoint2;]
true 58 unvisit[waypoint5;]
true 3 communicate_rock_data1[rover2,general,waypoint5,waypoint2,waypoint6;]
true 185 __method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0;]
true 82 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 200 nop[;]
true 287 __method_precondition_m6_empty_store_6_precondition[rover0store;]
true 18 drop[rover0,rover0store;]
true 205 sample_rock[rover0,rover0store,waypoint1;]
true 242 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint6,waypoint1;]
true 27 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint1;]
true 81 visit[waypoint1;]
true 36 __method_precondition_m2_do_navigate2_2_precondition[rover0,waypoint1;]
true 60 nop[;]
true 216 unvisit[waypoint1;]
true 85 communicate_rock_data1[rover0,general,waypoint1,waypoint1,waypoint6;]
true 142 __method_precondition_m13_get_image_data_13_precondition[high_res,rover0,camera2,waypoint6,objective0;]
true 0 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective2,waypoint1;]
true 34 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 39 nop[;]
true 2 calibrate[rover0,camera2,objective2,waypoint1;]
true 25 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint1;]
true 45 visit[waypoint1;]
true 245 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint1,waypoint6;]
true 86 navigate[rover0,waypoint1,waypoint6;]
true 281 unvisit[waypoint1;]
true 64 take_image[rover0,waypoint6,objective0,camera2,high_res;]
true 63 __method_precondition_m14_send_image_data_14_precondition[general,waypoint6,waypoint1;]
true 160 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint6;]
true 79 visit[waypoint6;]
true 98 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint6,waypoint1;]
true 126 navigate[rover0,waypoint6,waypoint1;]
true 247 unvisit[waypoint6;]
true 42 communicate_image_data[rover0,general,objective0,high_res,waypoint1,waypoint6;]
true 87 __method_precondition_m13_get_image_data_13_precondition[high_res,rover0,camera2,waypoint2,objective4;]
true 174 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective2,waypoint1;]
true 66 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 246 nop[;]
true 70 calibrate[rover0,camera2,objective2,waypoint1;]
true 235 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint1;]
true 192 visit[waypoint1;]
true 265 __method_precondition_m4_do_navigate2_4_precondition[rover0,waypoint1,waypoint2,waypoint6;]
true 49 navigate[rover0,waypoint1,waypoint6;]
true 141 visit[waypoint6;]
true 149 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint6,waypoint2;]
true 134 navigate[rover0,waypoint6,waypoint2;]
true 111 unvisit[waypoint6;]
true 143 unvisit[waypoint1;]
true 171 take_image[rover0,waypoint2,objective4,camera2,high_res;]
true 83 __method_precondition_m14_send_image_data_14_precondition[general,waypoint6,waypoint2;]
true 163 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint2;]
true 178 visit[waypoint2;]
true 291 __method_precondition_m2_do_navigate2_2_precondition[rover0,waypoint2;]
true 48 nop[;]
true 61 unvisit[waypoint2;]
true 50 communicate_image_data[rover0,general,objective4,high_res,waypoint2,waypoint6;]
true 254 __method_precondition_m13_get_image_data_13_precondition[high_res,rover0,camera2,waypoint6,objective2;]
true 24 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective2,waypoint2;]
true 277 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint2;]
true 162 nop[;]
true 230 calibrate[rover0,camera2,objective2,waypoint2;]
true 131 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint2;]
true 168 visit[waypoint2;]
true 108 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint2,waypoint6;]
true 195 navigate[rover0,waypoint2,waypoint6;]
true 56 unvisit[waypoint2;]
true 152 take_image[rover0,waypoint6,objective2,camera2,high_res;]
true 198 __method_precondition_m14_send_image_data_14_precondition[general,waypoint6,waypoint2;]
true 213 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint6;]
true 263 visit[waypoint6;]
true 129 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint6,waypoint2;]
true 19 navigate[rover0,waypoint6,waypoint2;]
true 38 unvisit[waypoint6;]
true 280 communicate_image_data[rover0,general,objective2,high_res,waypoint2,waypoint6;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 1086
TSTG: 2147483647
Method: 1
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 2172
TSTG: 2147483647
Method: 2
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 3258
TSTG: 2147483647
Method: 3
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 4344
TSTG: 2147483647
Method: 4
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 5430
TSTG: 2147483647
Method: 5
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 6516
TSTG: 2147483647
Method: 6
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 7602
TSTG: 2147483647
Method: 7
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 8688
TSTG: 2147483647
Method: 8
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 9774
TSTG: 2147483647
Method: 9
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 10860
TSTG: 2147483647
Method: 10
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 11946
TSTG: 2147483647
Method: 11
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 13032
TSTG: 2147483647
Method: 12
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 14118
TSTG: 2147483647
Method: 13
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 15204
TSTG: 2147483647
Method: 14
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 16290
TSTG: 2147483647
Method: 15
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 17376
TSTG: 2147483647
Method: 16
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 18462
TSTG: 2147483647
Method: 17
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 19548
TSTG: 2147483647
Method: 18
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 20634
TSTG: 2147483647
Method: 19
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 21720
TSTG: 2147483647
Method: 20
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 22806
TSTG: 2147483647
Method: 21
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 23892
TSTG: 2147483647
Method: 22
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 24978
TSTG: 2147483647
Method: 23
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 26064
TSTG: 2147483647
Method: 24
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 27150
TSTG: 2147483647
Method: 25
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 28236
TSTG: 2147483647
Method: 26
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 29322
TSTG: 2147483647
Method: 27
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 30408
TSTG: 2147483647
Method: 28
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 31494
TSTG: 2147483647
Method: 29
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 32580
TSTG: 2147483647
Method: 30
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 33666
TSTG: 2147483647
Method: 31
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 34752
TSTG: 2147483647
Method: 32
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 35838
TSTG: 2147483647
Method: 33
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 36924
TSTG: 2147483647
Method: 34
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 38010
TSTG: 2147483647
Method: 35
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 39096
TSTG: 2147483647
Method: 36
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 40182
TSTG: 2147483647
Method: 37
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 41268
TSTG: 2147483647
Method: 38
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 42354
TSTG: 2147483647
Method: 39
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 43440
TSTG: 2147483647
Method: 40
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 44526
TSTG: 2147483647
Method: 41
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 45612
TSTG: 2147483647
Method: 42
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 46698
TSTG: 2147483647
Method: 43
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 47784
TSTG: 2147483647
Method: 44
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 48870
TSTG: 2147483647
Method: 45
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 49956
TSTG: 2147483647
Method: 46
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 51042
TSTG: 2147483647
Method: 47
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 52128
TSTG: 2147483647
Method: 48
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 53214
TSTG: 2147483647
Method: 49
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 54300
TSTG: 2147483647
Method: 50
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 55386
TSTG: 2147483647
Method: 51
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 56472
TSTG: 2147483647
Method: 52
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 57558
TSTG: 2147483647
Method: 53
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 58644
TSTG: 2147483647
Method: 54
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 59730
TSTG: 2147483647
Method: 55
DP max: 5
Taking minimum: 5
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 117
  lower bound = 54

Running SAT search with cost bound = 85
==================================================
  upper bound = 117
  lower bound = 54
LEN 85
ICAPS: 92310
TSTG: 2147483647
Method: 85
Still waiting ... running for 100 will abort at 9223372036854764044
DP max: 15
Taking minimum: 15
Generating initial PDT ... done
initial PDT has 1310 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 1235 leafs
SHOP LEAFS 344
Assignment implications
Generating clauses representing decomposition ... done
At most K: 3583ms input: 23163 K = 85
Number of actions Formula: 3852ms for 3960787 clauses
Layers: 11 paths 1235
Layer 1 g 0 = 0 - 1 / 0 clauses 764466
Layer 1 g 1 = 2 - 3 / 2 clauses 764466
Layer 1 g 2 = 4 - 5 / 4 clauses 764466
Layer 1 g 3 = 6 - 7 / 6 clauses 764466
Layer 1 g 4 = 8 - 9 / 8 clauses 764466
Layer 1 g 5 = 10 - 11 / 10 clauses 764466
Layer 1 g 6 = 12 - 13 / 12 clauses 764466
Layer 1 g 7 = 14 - 15 / 14 clauses 764466
Layer 1 g 8 = 16 - 17 / 16 clauses 764466
Layer 1 g 9 = 18 - 19 / 18 clauses 764466
Layer 1 g 10 = 20 - 21 / 20 clauses 764466
Layer 1 g 11 = 22 - 23 / 22 clauses 764466
Layer 1 g 12 = 24 - 25 / 24 clauses 764466
Layer 1 g 13 = 26 - 27 / 26 clauses 764466
Layer 1 g 14 = 28 - 29 / 28 clauses 764466
Layer 1 g 15 = 30 - 31 / 30 clauses 764466
Layer 1 g 16 = 32 - 33 / 32 clauses 764466
Layer 1 g 17 = 34 - 35 / 34 clauses 764466
Layer 1 g 18 = 36 - 37 / 36 clauses 764466
Layer 1 g 19 = 38 - 39 / 38 clauses 764466
Layer 1 g 20 = 40 - 41 / 40 clauses 764466
Layer 1 g 21 = 42 - 43 / 42 clauses 764466
Layer 1 g 22 = 44 - 45 / 44 clauses 764466
Layer 1 g 23 = 46 - 47 / 46 clauses 764466
Layer 1 g 24 = 48 - 49 / 48 clauses 764466
Layer 1 g 25 = 50 - 51 / 50 clauses 764466
Layer 1 g 26 = 52 - 53 / 52 clauses 764466
Layer 1 g 27 = 54 - 55 / 54 clauses 764466
Layer 1 g 28 = 56 - 57 / 56 clauses 764466
Layer 1 g 29 = 58 - 59 / 58 clauses 764466
Layer 1 g 30 = 60 - 61 / 60 clauses 764466
Layer 1 g 31 = 62 - 63 / 62 clauses 764466
Layer 1 g 32 = 64 - 65 / 64 clauses 764466
Layer 1 g 33 = 66 - 67 / 66 clauses 764466
Layer 1 g 34 = 68 - 69 / 68 clauses 764466
Layer 1 g 35 = 70 - 71 / 70Still waiting ... running for 76225 will abort at 9223372036854764044
 clauses 764466
Layer 1 g 36 = 72 - 73 / 72 clauses 764466
Layer 1 g 37 = 74 - 75 / 74 clauses 764466
Layer 1 g 38 = 76 - 77 / 76 clauses 764466
Layer 1 g 39 = 78 - 79 / 78 clauses 764466
Layer 1 g 40 = 80 - 81 / 80 clauses 764466
Layer 1 g 41 = 82 - 83 / 82 clauses 764466
Layer 1 g 42 = 84 - 85 / 84 clauses 764466
Layer 1 g 43 = 86 - 87 / 86 clauses 764466
Layer 1 g 44 = 88 - 89 / 88 clauses 764466
Layer 1 g 45 = 90 - 91 / 90 clauses 764466
Layer 1 g 46 = 92 - 93 / 92 clauses 764466
Layer 1 g 47 = 94 - 95 / 94 clauses 764466
Layer 1 g 48 = 96 - 97 / 96 clauses 764466
Layer 1 g 49 = 98 - 99 / 98 clauses 764466
Layer 1 g 50 = 100 - 101 / 100 clauses 764466
Layer 1 g 51 = 102 - 103 / 102 clauses 764466
Layer 1 g 52 = 104 - 105 / 104 clauses 764466
Layer 1 g 53 = 106 - 107 / 106 clauses 764466
Layer 1 g 54 = 108 - 109 / 108 clauses 764466
Layer 1 g 55 = 110 - 111 / 110 clauses 764466
Layer 1 g 56 = 112 - 113 / 112 clauses 764466
Layer 1 g 57 = 114 - 115 / 114 clauses 764466
Layer 1 g 58 = 116 - 117 / 116 clauses 764466
Layer 1 g 59 = 118 - 119 / 118 clauses 764466
Layer 1 g 60 = 120 - 121 / 120 clauses 764466
Layer 1 g 61 = 122 - 123 / 122 clauses 764466
Layer 1 g 62 = 124 - 125 / 124 clauses 764466
Layer 1 g 63 = 126 - 127 / 126 clauses 764466
Layer 1 g 64 = 128 - 129 / 128 clauses 764466
Layer 1 g 65 = 130 - 131 / 130 clauses 764466
Layer 1 g 66 = 132 - 133 / 132 clauses 764466
Layer 1 g 67 = 134 - 135 / 134 clauses 764466
Layer 1 g 68 = 136 - 137 / 136 clauses 764466
Layer 1 g 69 = 138 - 139 / 138 clauses 764466
Layer 1 g 70 = 140 - 141 / 140 clauses 764466
Layer 1 g 71 = 142 - 143 / 142 clauses 764466
Layer 1 g 72 = 144 - 145 / 144 clauses 764466
Layer 1 g 73 = 146 - 147 / 146 clauses 764466
Layer 1 g 74 = 148 - 149 / 148 clauses 764466
Layer 1 g 75 = 150 - 151 / 150 clauses 764466
Layer 1 g 76 = 152 - 153 / 152 clauses 764466
Layer 1 g 77 = 154 - 155 / 154 clauses 764466
Layer 1 g 78 = 156 - 157 / 156 clauses 764466
Layer 1 g 79 = 158 - 159 / 158 clauses 764466
Layer 1 g 80 = 160 - 161 / 160 clauses 764466
Layer 1 g 81 = 162 - 163 / 162 clauses 764466
Layer 1 g 82 = 164 - 165 / 164 clauses 764466
Layer 1 g 83 = 166 - 167 / 166 clauses 764466
Layer 1 g 84 = 168 - 169 / 168 clauses 764466
Layer 1 g 85 = 170 - 171 / 170 clauses 764466
Layer 1 g 86 = 172 - 173 / 172 clauses 764466
Layer 1 g 87 = 174 - 175 / 174 clauses 764466
Layer 1 g 88 = 176 - 177 / 176 clauses 764466
Layer 1 g 89 = 178 - 179 / 178 clauses 764466
Layer 1 g 90 = 180 - 181 / 180 clauses 764466
Layer 1 g 91 = 182 - 183 / 182 clauses 764466
Layer 1 g 92 = 184 - 185 / 184 clauses 764466
Layer 1 g 93 = 186 - 187 / 186 clauses 764466
Layer 1 g 94 = 188 - 189 / 188
RUNWATCH_RESULT MEMOUT RETVAL 63232 TIME_SECS 234.100 MEMPEAK_KBS 8063551.488
