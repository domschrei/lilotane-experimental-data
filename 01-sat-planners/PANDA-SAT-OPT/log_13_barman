PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p13.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p13.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p13.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Grounded planning graph ... done in 643ms.
	Number of Grounded Actions 3190
	Number of Grounded Literals 467
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Grounding ... done.
	number of abstract tasks = 1540
	number of tasks = 4708
	number of decomposition methods = 6005
	number of predicates = 467
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1540
	number of tasks = 4708
	number of decomposition methods = 6005
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 499ms.
	Number of Grounded Actions 3168
	Number of Grounded Literals 437
	number of abstract tasks = 1540
	number of tasks = 4708
	number of decomposition methods = 6005
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1540
	number of tasks = 4708
	number of decomposition methods = 6005
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1541
	number of tasks = 4709
	number of decomposition methods = 6006
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1541
	number of tasks = 4709
	number of decomposition methods = 6006
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 295ms.
	Number of Grounded Actions 3168
	Number of Grounded Literals 437
	number of abstract tasks = 1541
	number of tasks = 4709
	number of decomposition methods = 6006
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1541
	number of tasks = 4709
	number of decomposition methods = 6006
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1541
	number of tasks = 4709
	number of decomposition methods = 6006
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1541
	number of tasks = 4709
	number of decomposition methods = 6006
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1541
	number of tasks = 4709
	number of decomposition methods = 6006
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Tasks 3168 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767254ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854766237
done
initial PDT has 351 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 351 leafs
SHOP LEAFS 92
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 285798
Size 285783 at 0/3168
Size 283879 at 500/3168
Size 283779 at 1000/3168
Size 283689 at 1500/3168
Size 240680 at 2000/3168
Size 240561 at 2500/3168
Size 240153 at 3000/3168
Size 240153
Size 237279 at 0/3168
Size 27341 at 500/3168
Size 27317 at 1000/3168
Size 17437 at 1500/3168
Size 16939 at 2000/3168
Size 16939 at 2500/3168
Size 4889 at 3000/3168
Size 4842
Size 4842 at 0/3168
Size 4842 at 500/3168
Size 4842 at 1000/3168
Size 4769 at 1500/3168
Size 4769 at 2000/3168
Size 4769 at 2500/3168
Size 4719 at 3000/3168
Size 4714
Size 4714 at 0/3168
Size 4654 at 500/3168
Size 4654 at 1000/3168
Size 4494 at 1500/3168
Size 4494 at 2000/3168
Size 4494 at 2500/3168
Size 4394 at 3000/3168
Size 4394
Size 4394 at 0/3168
Size 4394 at 500/3168
Size 4394 at 1000/3168
Size 4394 at 1500/3168
Size 4394 at 2000/3168
Size 4394 at 2500/3168
Size 4394 at 3000/3168
Size 4394
Invariant time: 3.291
Number of invariants: 4394
Invariant Clauses 1546688
NUMBER OF CLAUSES 2343230
NUMBER OF STATE CLAUSES 1972255
NUMBER OF DECOMPOSITION CLAUSES 370975
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.17% 15.83% 0.0% 
NUMBER OF PATHS 351
Starting cryptominisat5.5
Setting starttime of solver to 1604496488821
Command exited with non-zero status 10
1.64 0.08

Time command gave the following runtime for the solver: 1720
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_11;1,3273 3273 m2_get_first_ingredient
11;1 180 pathaction!2_11;1,2934
Consider method^2_1;3,2308 2308 m4_serve_shot
1;3 149 pathaction!2_1;3,2339
Consider method^3_6;1;1,2695 2695 m9_do_fill_shot
6;1;1 75 pathaction!3_6;1;1,4529
Consider method^3_0;1;2,1984 1984 _m2_get_first_ingredient_3
0;1;2 44 pathaction!3_0;1;2,2129
Consider method^3_8;2;2,1491 1491 _m3_get_second_ingredient_3
8;2;2 259 pathaction!3_8;2;2,4321
Consider method^3_15;1;2,3469 3469 _m2_get_first_ingredient_3
15;1;2 390 pathaction!3_15;1;2,2194
Consider method^3_12;1;3,3756 3756 _m2_get_first_ingredient_4
12;1;3 213 pathaction!3_12;1;3,1455
Consider method^2_7;3,5633 5633 m4_serve_shot
7;3 516 pathaction!2_7;3,2341
Consider method^3_7;3;5,865 865 _m4_serve_shot_6
7;3;5 160 pathaction!3_7;3;5,3018
Consider method^1_13,2092 2092 m0_do_cocktail_in_shot1
13 304 pathaction!1_13,2265
Consider method^3_2;3;4,5512 5512 _m4_serve_shot_5
2;3;4 351 pathaction!3_2;3;4,4183
Consider method^2_0;3,4537 4537 m4_serve_shot
0;3 353 pathaction!2_0;3,2352
Consider method^1_11,4327 4327 m0_do_cocktail_in_shot1
11 211 pathaction!1_11,2259
Consider method^3_5;1;3,2591 2591 _m2_get_first_ingredient_4
5;1;3 361 pathaction!3_5;1;3,1473
Consider method^4_12;3;1;0,1448 1448 m5_do_clean_shot
12;3;1;0 340 pathaction!4_12;3;1;0,2497
Consider method^3_11;2;2,3078 3078 _m3_get_second_ingredient_3
11;2;2 359 pathaction!3_11;2;2,4223
Consider method^3_13;1;3,65 65 _m2_get_first_ingredient_4
13;1;3 393 pathaction!3_13;1;3,1588
Consider method^3_7;2;2,4366 4366 _m3_get_second_ingredient_3
7;2;2 479 pathaction!3_7;2;2,4295
Consider method^1_14,5065 5065 m1_do_cocktail_in_shot2
14 50 pathaction!1_14,680
Consider method^3_6;2;1,5350 5350 _m3_get_second_ingredient_2
6;2;1 177 pathaction!3_6;2;1,1365
Consider method^3_2;2;1,5350 5350 _m3_get_second_ingredient_2
2;2;1 484 pathaction!3_2;2;1,1365
Consider method^2_6;2,1902 1902 m3_get_second_ingredient
6;2 381 pathaction!2_6;2,2240
Consider method^1_4,3454 3454 m0_do_cocktail_in_shot1
4 392 pathaction!1_4,2262
Consider method^3_11;1;2,1984 1984 _m2_get_first_ingredient_3
11;1;2 96 pathaction!3_11;1;2,2129
Consider method^3_2;1;2,1411 1411 _m2_get_first_ingredient_3
2;1;2 418 pathaction!3_2;1;2,2090
Consider method^3_6;1;3,65 65 _m2_get_first_ingredient_4
6;1;3 284 pathaction!3_6;1;3,1588
Consider method^2_12;3,1361 1361 m4_serve_shot
12;3 250 pathaction!2_12;3,2344
Consider method^2_4;2,5847 5847 m3_get_second_ingredient
4;2 389 pathaction!2_4;2,2238
Consider method^2_3;3,3784 3784 m4_serve_shot
3;3 147 pathaction!2_3;3,2342
Consider method^2_5;3,5784 5784 m4_serve_shot
5;3 206 pathaction!2_5;3,2347
Consider method^3_4;1;3,1235 1235 _m2_get_first_ingredient_4
4;1;3 220 pathaction!3_4;1;3,1567
Consider method^3_11;1;3,1162 1162 _m2_get_first_ingredient_4
11;1;3 21 pathaction!3_11;1;3,1448
Consider method^3_6;1;2,3015 3015 _m2_get_first_ingredient_3
6;1;2 63 pathaction!3_6;1;2,2087
Consider method^2_12;1,2401 2401 m2_get_first_ingredient
12;1 179 pathaction!2_12;1,2922
Consider method^3_11;2;1,4973 4973 _m3_get_second_ingredient_2
11;2;1 118 pathaction!3_11;2;1,1328
Consider method^1_15,2736 2736 m0_do_cocktail_in_shot1
15 196 pathaction!1_15,2272
Consider method^3_2;1;1,5616 5616 m9_do_fill_shot
2;1;1 411 pathaction!3_2;1;1,4372
Consider method^2_2;2,2256 2256 m3_get_second_ingredient
2;2 25 pathaction!2_2;2,2243
Consider method^2_6;1,2407 2407 m2_get_first_ingredient
6;1 434 pathaction!2_6;1,2923
Consider method^4_15;3;1;0,2469 2469 m6_do_clean_shot
15;3;1;0 97 pathaction!4_15;3;1;0,2574
Consider method^3_5;1;2,5186 5186 _m2_get_first_ingredient_3
5;1;2 309 pathaction!3_5;1;2,2094
Consider method^1_1,2077 2077 m0_do_cocktail_in_shot1
1 401 pathaction!1_1,2258
Consider method^3_4;1;2,3654 3654 _m2_get_first_ingredient_3
4;1;2 94 pathaction!3_4;1;2,2074
Consider method^2_6;3,1825 1825 m4_serve_shot
6;3 406 pathaction!2_6;3,2348
Consider method^1_2,4341 4341 m0_do_cocktail_in_shot1
2 270 pathaction!1_2,2270
Consider method^3_12;1;2,84 84 _m2_get_first_ingredient_3
12;1;2 46 pathaction!3_12;1;2,2182
Consider method^1_9,4579 4579 m0_do_cocktail_in_shot1
9 65 pathaction!1_9,2268
Consider method^3_15;3;1,2649 2649 _m4_serve_shot_2
15;3;1 125 pathaction!3_15;3;1,4554
Consider method^3_4;3;5,170 170 _m4_serve_shot_6
4;3;5 66 pathaction!3_4;3;5,2992
Consider method^3_13;2;2,4063 4063 _m3_get_second_ingredient_3
13;2;2 265 pathaction!3_13;2;2,4197
Consider method^3_6;3;4,2855 2855 _m4_serve_shot_5
6;3;4 80 pathaction!3_6;3;4,4195
Consider method^4_5;3;1;0,3868 3868 m6_do_clean_shot
5;3;1;0 16 pathaction!4_5;3;1;0,2538
Consider method^3_13;3;4,5402 5402 _m4_serve_shot_5
13;3;4 208 pathaction!3_13;3;4,4193
Consider method^3_11;1;1,4890 4890 m7_do_fill_shot
11;1;1 460 pathaction!3_11;1;1,4389
Consider method^2_0;2,3536 3536 m3_get_second_ingredient
0;2 256 pathaction!2_0;2,2236
Consider method^3_7;1;1,2360 2360 m8_do_fill_shot
7;1;1 155 pathaction!3_7;1;1,4418
Consider method^3_1;1;2,5430 5430 _m2_get_first_ingredient_3
1;1;2 308 pathaction!3_1;1;2,2142
Consider method^3_4;2;2,2396 2396 _m3_get_second_ingredient_3
4;2;2 331 pathaction!3_4;2;2,4363
Consider method^2_5;1,5708 5708 m2_get_first_ingredient
5;1 450 pathaction!2_5;1,2936
Consider method^2_11;2,4394 4394 m3_get_second_ingredient
11;2 185 pathaction!2_11;2,2251
Consider method^3_7;1;2,2586 2586 _m2_get_first_ingredient_3
7;1;2 423 pathaction!3_7;1;2,2102
Consider method^2_4;3,5698 5698 m4_serve_shot
4;3 387 pathaction!2_4;3,2343
Consider method^3_9;3;1,4064 4064 _m4_serve_shot_2
9;3;1 192 pathaction!3_9;3;1,4565
Consider method^3_4;3;4,765 765 _m4_serve_shot_5
4;3;4 454 pathaction!3_4;3;4,4168
Consider method^3_11;3;5,644 644 _m4_serve_shot_6
11;3;5 513 pathaction!3_11;3;5,3003
Consider method^3_13;3;5,1106 1106 _m4_serve_shot_6
13;3;5 88 pathaction!3_13;3;5,2982
Consider method^2_15;2,4682 4682 m3_get_second_ingredient
15;2 465 pathaction!2_15;2,2248
Consider method^3_1;3;4,5199 5199 _m4_serve_shot_5
1;3;4 35 pathaction!3_1;3;4,4182
Consider method^3_0;3;4,4475 4475 _m4_serve_shot_5
0;3;4 150 pathaction!3_0;3;4,4148
Consider method^3_1;3;1,1364 1364 _m4_serve_shot_2
1;3;1 354 pathaction!3_1;3;1,4560
Consider method^3_0;2;1,5764 5764 _m3_get_second_ingredient_2
0;2;1 86 pathaction!3_0;2;1,1392
Consider method^3_9;3;5,644 644 _m4_serve_shot_6
9;3;5 508 pathaction!3_9;3;5,3003
Consider method^1_12,528 528 m0_do_cocktail_in_shot1
12 391 pathaction!1_12,2263
Consider method^3_11;3;4,5815 5815 _m4_serve_shot_5
11;3;4 248 pathaction!3_11;3;4,4170
Consider method^2_9;2,4394 4394 m3_get_second_ingredient
9;2 317 pathaction!2_9;2,2251
Consider method^3_5;1;1,2015 2015 m8_do_fill_shot
5;1;1 22 pathaction!3_5;1;1,4414
Consider method^3_8;3;4,1316 1316 _m4_serve_shot_5
8;3;4 70 pathaction!3_8;3;4,4155
Consider method^3_4;3;1,1047 1047 _m4_serve_shot_2
4;3;1 356 pathaction!3_4;3;1,4547
Consider method^3_10;1;1,5663 5663 m9_do_fill_shot
10;1;1 106 pathaction!3_10;1;1,4535
Consider method^3_3;1;1,2210 2210 m8_do_fill_shot
3;1;1 362 pathaction!3_3;1;1,4436
Consider method^3_6;3;1,2524 2524 _m4_serve_shot_2
6;3;1 139 pathaction!3_6;3;1,4557
Consider method^3_1;3;5,4032 4032 _m4_serve_shot_6
1;3;5 286 pathaction!3_1;3;5,3011
Consider method^3_11;3;1,124 124 _m4_serve_shot_2
11;3;1 377 pathaction!3_11;3;1,4558
Consider method^2_7;2,2896 2896 m3_get_second_ingredient
7;2 278 pathaction!2_7;2,2255
Consider method^3_15;3;5,3339 3339 _m4_serve_shot_6
15;3;5 72 pathaction!3_15;3;5,2991
Consider method^3_8;3;5,5790 5790 _m4_serve_shot_6
8;3;5 210 pathaction!3_8;3;5,2993
Consider method^3_7;3;4,364 364 _m4_serve_shot_5
7;3;4 267 pathaction!3_7;3;4,4189
Consider method^2_8;3,5472 5472 m4_serve_shot
8;3 161 pathaction!2_8;3,2345
Consider method^3_7;2;1,102 102 _m3_get_second_ingredient_2
7;2;1 483 pathaction!3_7;2;1,1310
Consider method^3_13;3;1,5826 5826 _m4_serve_shot_2
13;3;1 368 pathaction!3_13;3;1,4553
Consider method^2_10;3,3700 3700 m4_serve_shot
10;3 247 pathaction!2_10;3,2350
Consider method^0_,6005 6005 __top_1
 108 pathaction!0_,4708
Consider method^4_8;3;1;0,2282 2282 m5_do_clean_shot
8;3;1;0 74 pathaction!4_8;3;1;0,2690
Consider method^3_3;3;5,407 407 _m4_serve_shot_6
3;3;5 485 pathaction!3_3;3;5,2997
Consider method^3_9;2;1,4973 4973 _m3_get_second_ingredient_2
9;2;1 61 pathaction!3_9;2;1,1328
Consider method^3_6;3;5,1256 1256 _m4_serve_shot_6
6;3;5 501 pathaction!3_6;3;5,2995
Consider method^3_7;3;1,357 357 _m4_serve_shot_2
7;3;1 56 pathaction!3_7;3;1,4546
Consider method^2_14;0,4783 4783 _m1_do_cocktail_in_shot2_4
14;0 307 pathaction!2_14;0,3795
Consider method^2_13;2,1902 1902 m3_get_second_ingredient
13;2 496 pathaction!2_13;2,2240
Consider method^2_12;2,1362 1362 m3_get_second_ingredient
12;2 141 pathaction!2_12;2,2239
Consider method^4_9;3;1;0,3513 3513 m5_do_clean_shot
9;3;1;0 188 pathaction!4_9;3;1;0,2668
Consider method^4_11;3;1;0,5405 5405 m5_do_clean_shot
11;3;1;0 162 pathaction!4_11;3;1;0,2803
Consider method^3_15;2;2,3680 3680 _m3_get_second_ingredient_3
15;2;2 184 pathaction!3_15;2;2,4292
Consider method^3_8;3;1,4479 4479 _m4_serve_shot_2
8;3;1 29 pathaction!3_8;3;1,4551
Consider method^3_1;1;1,3153 3153 m8_do_fill_shot
1;1;1 38 pathaction!3_1;1;1,4491
Consider method^1_3,3794 3794 m0_do_cocktail_in_shot1
3 154 pathaction!1_3,2261
Consider method^3_10;1;2,888 888 _m2_get_first_ingredient_3
10;1;2 195 pathaction!3_10;1;2,2178
Consider method^3_0;3;1,541 541 _m4_serve_shot_2
0;3;1 281 pathaction!3_0;3;1,4542
Consider method^3_1;2;1,3274 3274 _m3_get_second_ingredient_2
1;2;1 463 pathaction!3_1;2;1,1417
Consider method^3_2;3;5,474 474 _m4_serve_shot_6
2;3;5 60 pathaction!3_2;3;5,2984
Consider method^3_15;1;1,2026 2026 m8_do_fill_shot
15;1;1 27 pathaction!3_15;1;1,4475
Consider method^3_9;2;2,3078 3078 _m3_get_second_ingredient_3
9;2;2 416 pathaction!3_9;2;2,4223
Consider method^3_10;2;1,5207 5207 _m3_get_second_ingredient_2
10;2;1 282 pathaction!3_10;2;1,1281
Consider method^1_5,5335 5335 m0_do_cocktail_in_shot1
5 148 pathaction!1_5,2266
Consider method^2_9;3,1279 1279 m4_serve_shot
9;3 166 pathaction!2_9;3,2349
Consider method^3_0;2;2,954 954 _m3_get_second_ingredient_3
0;2;2 415 pathaction!3_0;2;2,4300
Consider method^2_4;1,2892 2892 m2_get_first_ingredient
4;1 107 pathaction!2_4;1,2921
Consider method^4_4;3;1;0,2424 2424 m6_do_clean_shot
4;3;1;0 443 pathaction!4_4;3;1;0,2526
Consider method^3_8;1;3,1435 1435 _m2_get_first_ingredient_4
8;1;3 117 pathaction!3_8;1;3,1594
Consider method^3_9;3;4,3675 3675 _m4_serve_shot_5
9;3;4 2 pathaction!3_9;3;4,4178
Consider method^3_12;3;1,4988 4988 _m4_serve_shot_2
12;3;1 491 pathaction!3_12;3;1,4540
Consider method^3_15;2;1,1337 1337 _m3_get_second_ingredient_2
15;2;1 294 pathaction!3_15;2;1,1275
Consider method^2_7;1,2526 2526 m2_get_first_ingredient
7;1 203 pathaction!2_7;1,2938
Consider method^4_0;3;1;0,2042 2042 m5_do_clean_shot
0;3;1;0 11 pathaction!4_0;3;1;0,2603
Consider method^3_0;1;1,1353 1353 m8_do_fill_shot
0;1;1 292 pathaction!3_0;1;1,4389
Consider method^2_8;1,776 776 m2_get_first_ingredient
8;1 472 pathaction!2_8;1,2924
Consider method^3_10;3;1,460 460 _m4_serve_shot_2
10;3;1 464 pathaction!3_10;3;1,4562
Consider method^3_15;3;4,2806 2806 _m4_serve_shot_5
15;3;4 388 pathaction!3_15;3;4,4164
Consider method^2_11;3,3569 3569 m4_serve_shot
11;3 254 pathaction!2_11;3,2340
Consider method^3_12;1;1,4089 4089 m9_do_fill_shot
12;1;1 251 pathaction!3_12;1;1,4396
Consider method^2_8;2,3436 3436 m3_get_second_ingredient
8;2 252 pathaction!2_8;2,2241
Consider method^2_10;1,2352 2352 m2_get_first_ingredient
10;1 316 pathaction!2_10;1,2937
Consider method^2_14;1,2663 2663 m9_do_fill_shot
14;1 214 pathaction!2_14;1,4501
Consider method^2_15;1,2556 2556 m2_get_first_ingredient
15;1 128 pathaction!2_15;1,2931
Consider method^2_3;2,766 766 m3_get_second_ingredient
3;2 103 pathaction!2_3;2,2245
Consider method^3_0;1;3,1162 1162 _m2_get_first_ingredient_4
0;1;3 474 pathaction!3_0;1;3,1448
Consider method^3_13;1;2,3015 3015 _m2_get_first_ingredient_3
13;1;2 405 pathaction!3_13;1;2,2087
Consider method^2_2;1,403 403 m2_get_first_ingredient
2;1 499 pathaction!2_2;1,2926
Consider method^4_1;3;1;0,1414 1414 m5_do_clean_shot
1;3;1;0 79 pathaction!4_1;3;1;0,2561
Consider method^3_10;2;2,3449 3449 _m3_get_second_ingredient_3
10;2;2 394 pathaction!3_10;2;2,4313
Consider method^3_9;1;3,1162 1162 _m2_get_first_ingredient_4
9;1;3 32 pathaction!3_9;1;3,1448
Consider method^3_10;1;3,1435 1435 _m2_get_first_ingredient_4
10;1;3 130 pathaction!3_10;1;3,1594
Consider method^3_8;1;2,888 888 _m2_get_first_ingredient_3
8;1;2 156 pathaction!3_8;1;2,2178
Consider method^2_3;1,3500 3500 m2_get_first_ingredient
3;1 62 pathaction!2_3;1,2928
Consider method^4_2;3;1;0,917 917 m5_do_clean_shot
2;3;1;0 334 pathaction!4_2;3;1;0,2638
Consider method^3_8;2;1,5964 5964 _m3_get_second_ingredient_2
8;2;1 3 pathaction!3_8;2;1,1386
Consider method^3_13;2;1,5350 5350 _m3_get_second_ingredient_2
13;2;1 300 pathaction!3_13;2;1,1365
Consider method^2_5;2,1604 1604 m3_get_second_ingredient
5;2 366 pathaction!2_5;2,2253
Consider method^1_0,4960 4960 m0_do_cocktail_in_shot1
0 90 pathaction!1_0,2271
Consider method^3_8;1;1,5140 5140 m9_do_fill_shot
8;1;1 408 pathaction!3_8;1;1,4535
Consider method^3_2;3;1,1562 1562 _m4_serve_shot_2
2;3;1 386 pathaction!3_2;3;1,4559
Consider method^4_3;3;1;0,3202 3202 m6_do_clean_shot
3;3;1;0 458 pathaction!4_3;3;1;0,2575
Consider method^1_8,4126 4126 m0_do_cocktail_in_shot1
8 4 pathaction!1_8,2264
Consider method^3_3;1;3,5194 5194 _m2_get_first_ingredient_4
3;1;3 241 pathaction!3_3;1;3,1495
Consider method^3_15;1;3,424 424 _m2_get_first_ingredient_4
15;1;3 370 pathaction!3_15;1;3,1534
Consider method^4_6;3;1;0,5596 5596 m5_do_clean_shot
6;3;1;0 55 pathaction!4_6;3;1;0,2786
Consider method^3_5;2;1,3952 3952 _m3_get_second_ingredient_2
5;2;1 236 pathaction!3_5;2;1,1305
Consider method^3_4;2;1,1402 1402 _m3_get_second_ingredient_2
4;2;1 52 pathaction!3_4;2;1,1364
Consider method^3_3;3;4,657 657 _m4_serve_shot_5
3;3;4 413 pathaction!3_3;3;4,4185
Consider method^3_9;1;1,1893 1893 m9_do_fill_shot
9;1;1 111 pathaction!3_9;1;1,4389
Consider method^2_10;2,2019 2019 m3_get_second_ingredient
10;2 53 pathaction!2_10;2,2254
Consider method^3_5;3;5,1594 1594 _m4_serve_shot_6
5;3;5 131 pathaction!3_5;3;5,2986
Consider method^3_1;1;3,851 851 _m2_get_first_ingredient_4
1;1;3 505 pathaction!3_1;1;3,1550
Consider method^1_10,4084 4084 m0_do_cocktail_in_shot1
10 269 pathaction!1_10,2269
Consider method^3_5;2;2,1211 1211 _m3_get_second_ingredient_3
5;2;2 445 pathaction!3_5;2;2,4314
Consider method^1_6,612 612 m0_do_cocktail_in_shot1
6 419 pathaction!1_6,2267
Consider method^3_4;1;1,4994 4994 m8_do_fill_shot
4;1;1 151 pathaction!3_4;1;1,4508
Consider method^3_12;2;2,1308 1308 _m3_get_second_ingredient_3
12;2;2 350 pathaction!3_12;2;2,4333
Consider method^3_3;2;1,3929 3929 _m3_get_second_ingredient_2
3;2;1 293 pathaction!3_3;2;1,1269
Consider method^3_12;3;4,2927 2927 _m4_serve_shot_5
12;3;4 302 pathaction!3_12;3;4,4194
Consider method^3_12;2;1,5946 5946 _m3_get_second_ingredient_2
12;2;1 482 pathaction!3_12;2;1,1311
Consider method^3_2;2;2,4063 4063 _m3_get_second_ingredient_3
2;2;2 129 pathaction!3_2;2;2,4197
Consider method^4_10;3;1;0,3109 3109 m5_do_clean_shot
10;3;1;0 296 pathaction!4_10;3;1;0,2768
Consider method^3_2;1;3,5483 5483 _m2_get_first_ingredient_4
2;1;3 34 pathaction!3_2;1;3,1431
Consider method^3_6;2;2,4063 4063 _m3_get_second_ingredient_3
6;2;2 422 pathaction!3_6;2;2,4197
Consider method^3_12;3;5,644 644 _m4_serve_shot_6
12;3;5 268 pathaction!3_12;3;5,3003
Consider method^2_1;1,2936 2936 m2_get_first_ingredient
1;1 420 pathaction!2_1;1,2927
Consider method^2_1;2,5529 5529 m3_get_second_ingredient
1;2 242 pathaction!2_1;2,2244
Consider method^1_7,968 968 m0_do_cocktail_in_shot1
7 200 pathaction!1_7,2260
Consider method^2_0;1,4096 4096 m2_get_first_ingredient
0;1 470 pathaction!2_0;1,2919
Consider method^3_5;3;1,5063 5063 _m4_serve_shot_2
5;3;1 348 pathaction!3_5;3;1,4549
Consider method^2_13;1,2407 2407 m2_get_first_ingredient
13;1 215 pathaction!2_13;1,2923
Consider method^2_9;1,3273 3273 m2_get_first_ingredient
9;1 113 pathaction!2_9;1,2934
Consider method^4_13;3;1;0,5068 5068 m5_do_clean_shot
13;3;1;0 207 pathaction!4_13;3;1;0,2635
Consider method^3_10;3;4,5830 5830 _m4_serve_shot_5
10;3;4 398 pathaction!3_10;3;4,4139
Consider method^3_13;1;1,2695 2695 m9_do_fill_shot
13;1;1 312 pathaction!3_13;1;1,4529
Consider method^2_13;3,396 396 m4_serve_shot
13;3 105 pathaction!2_13;3,2346
Consider method^3_0;3;5,1123 1123 _m4_serve_shot_6
0;3;5 480 pathaction!3_0;3;5,2990
Consider method^3_10;3;5,1770 1770 _m4_serve_shot_6
10;3;5 338 pathaction!3_10;3;5,3020
Consider method^3_3;1;2,4669 4669 _m2_get_first_ingredient_3
3;1;2 492 pathaction!3_3;1;2,2080
Consider method^3_9;1;2,1984 1984 _m2_get_first_ingredient_3
9;1;2 476 pathaction!3_9;1;2,2129
Consider method^3_5;3;4,5112 5112 _m4_serve_shot_5
5;3;4 172 pathaction!3_5;3;4,4180
Consider method^2_2;3,3375 3375 m4_serve_shot
2;3 249 pathaction!2_2;3,2351
Consider method^3_3;3;1,1670 1670 _m4_serve_shot_2
3;3;1 519 pathaction!3_3;3;1,4555
Consider method^3_1;2;2,2314 2314 _m3_get_second_ingredient_3
1;2;2 273 pathaction!3_1;2;2,4268
Consider method^3_7;1;3,5054 5054 _m2_get_first_ingredient_4
7;1;3 201 pathaction!3_7;1;3,1477
Consider method^3_3;2;2,1767 1767 _m3_get_second_ingredient_3
3;2;2 336 pathaction!3_3;2;2,4291
Consider method^2_15;3,1906 1906 m4_serve_shot
15;3 244 pathaction!2_15;3,2353
Consider method^4_7;3;1;0,2688 2688 m6_do_clean_shot
7;3;1;0 232 pathaction!4_7;3;1;0,2746


CHECKING primitive solution of length 323 ...
true 461 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 221 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot15;]
true 497 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4;]
true 403 grasp[right,shot15;]
true 133 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 227 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 93 clean-shot[shot15,ingredient4,right,left;]
true 305 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient1,right,shot15;]
true 266 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 372 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 517 leave[right,shot15;]
true 73 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient1;]
true 8 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 272 nop[;]
true 498 grasp[right,shaker1;]
true 451 shake[cocktail11,ingredient4,ingredient1,shaker1,right,left;]
true 138 pour-shaker-to-shot[cocktail11,shot1,right,shaker1,l2,l1;]
true 477 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 67 clean-shaker[right,left,shaker1;]
true 339 leave[right,shaker1;]
true 136 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 421 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient4,shot17;]
true 6 __method_precondition_m8_do_fill_shot_8_precondition[shot17,dispenser4,ingredient4;]
true 473 grasp[right,shot17;]
true 186 fill-shot[shot17,ingredient4,right,left,dispenser4;]
true 311 pour-shot-to-clean-shaker[shot17,ingredient4,shaker1,right,l0,l1;]
true 43 clean-shot[shot17,ingredient4,right,left;]
true 243 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient3,right,shot17;]
true 31 fill-shot[shot17,ingredient3,right,left,dispenser3;]
true 346 pour-shot-to-used-shaker[shot17,ingredient3,shaker1,right,l1,l2;]
true 471 leave[right,shot17;]
true 181 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient4,ingredient3;]
true 357 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 127 nop[;]
true 276 grasp[left,shaker1;]
true 333 shake[cocktail4,ingredient4,ingredient3,shaker1,left,right;]
true 209 pour-shaker-to-shot[cocktail4,shot2,left,shaker1,l2,l1;]
true 258 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 255 clean-shaker[left,right,shaker1;]
true 204 leave[left,shaker1;]
true 324 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 429 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot17;]
true 430 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient2,ingredient3,dispenser2;]
true 15 grasp[left,shot17;]
true 229 clean-shot[shot17,ingredient3,left,right;]
true 288 fill-shot[shot17,ingredient2,left,right,dispenser2;]
true 383 pour-shot-to-clean-shaker[shot17,ingredient2,shaker1,left,l0,l1;]
true 224 clean-shot[shot17,ingredient2,left,right;]
true 81 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot17;]
true 142 fill-shot[shot17,ingredient4,left,right,dispenser4;]
true 330 pour-shot-to-used-shaker[shot17,ingredient4,shaker1,left,l1,l2;]
true 355 leave[left,shot17;]
true 424 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient4;]
true 335 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 325 nop[;]
true 170 grasp[left,shaker1;]
true 235 shake[cocktail10,ingredient2,ingredient4,shaker1,left,right;]
true 231 pour-shaker-to-shot[cocktail10,shot3,left,shaker1,l2,l1;]
true 385 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 358 clean-shaker[left,right,shaker1;]
true 171 leave[left,shaker1;]
true 297 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 226 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot4;]
true 289 __method_precondition_m8_do_fill_shot_8_precondition[shot4,dispenser1,ingredient1;]
true 283 grasp[right,shot4;]
true 315 fill-shot[shot4,ingredient1,right,left,dispenser1;]
true 20 pour-shot-to-clean-shaker[shot4,ingredient1,shaker1,right,l0,l1;]
true 245 clean-shot[shot4,ingredient1,right,left;]
true 85 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,right,shot4;]
true 157 fill-shot[shot4,ingredient2,right,left,dispenser2;]
true 328 pour-shot-to-used-shaker[shot4,ingredient2,shaker1,right,l1,l2;]
true 475 leave[right,shot4;]
true 120 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient2;]
true 360 __method_precondition_m6_do_clean_shot_6_precondition[shot4,left;]
true 198 grasp[left,shot4;]
true 144 clean-shot[shot4,ingredient2,left,right;]
true 193 leave[left,shot4;]
true 444 grasp[right,shaker1;]
true 26 shake[cocktail9,ingredient1,ingredient2,shaker1,right,left;]
true 319 pour-shaker-to-shot[cocktail9,shot4,right,shaker1,l2,l1;]
true 199 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 426 clean-shaker[right,left,shaker1;]
true 218 leave[right,shaker1;]
true 173 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 503 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot5;]
true 427 __method_precondition_m8_do_fill_shot_8_precondition[shot5,dispenser1,ingredient1;]
true 153 grasp[right,shot5;]
true 384 fill-shot[shot5,ingredient1,right,left,dispenser1;]
true 137 pour-shot-to-clean-shaker[shot5,ingredient1,shaker1,right,l0,l1;]
true 397 clean-shot[shot5,ingredient1,right,left;]
true 84 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient5,right,shot5;]
true 134 fill-shot[shot5,ingredient5,right,left,dispenser5;]
true 126 pour-shot-to-used-shaker[shot5,ingredient5,shaker1,right,l1,l2;]
true 363 leave[right,shot5;]
true 274 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient5;]
true 159 __method_precondition_m6_do_clean_shot_6_precondition[shot5,left;]
true 175 grasp[left,shot5;]
true 277 clean-shot[shot5,ingredient5,left,right;]
true 462 leave[left,shot5;]
true 212 grasp[right,shaker1;]
true 77 shake[cocktail5,ingredient1,ingredient5,shaker1,right,left;]
true 92 pour-shaker-to-shot[cocktail5,shot5,right,shaker1,l2,l1;]
true 280 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 158 clean-shaker[right,left,shaker1;]
true 332 leave[right,shaker1;]
true 446 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 18 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot6;]
true 178 __method_precondition_m8_do_fill_shot_8_precondition[shot6,dispenser1,ingredient1;]
true 253 grasp[right,shot6;]
true 488 fill-shot[shot6,ingredient1,right,left,dispenser1;]
true 223 pour-shot-to-clean-shaker[shot6,ingredient1,shaker1,right,l0,l1;]
true 442 clean-shot[shot6,ingredient1,right,left;]
true 490 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,right,shot6;]
true 145 fill-shot[shot6,ingredient5,right,left,dispenser5;]
true 194 pour-shot-to-used-shaker[shot6,ingredient5,shaker1,right,l1,l2;]
true 110 leave[right,shot6;]
true 122 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient5;]
true 168 __method_precondition_m6_do_clean_shot_6_precondition[shot6,left;]
true 30 grasp[left,shot6;]
true 341 clean-shot[shot6,ingredient5,left,right;]
true 436 leave[left,shot6;]
true 395 grasp[right,shaker1;]
true 518 shake[cocktail6,ingredient1,ingredient5,shaker1,right,left;]
true 449 pour-shaker-to-shot[cocktail6,shot6,right,shaker1,l2,l1;]
true 457 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 437 clean-shaker[right,left,shaker1;]
true 337 leave[right,shaker1;]
true 298 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 506 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot17;]
true 83 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient1,ingredient4,dispenser1;]
true 9 grasp[left,shot17;]
true 183 clean-shot[shot17,ingredient4,left,right;]
true 428 fill-shot[shot17,ingredient1,left,right,dispenser1;]
true 375 pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,left,l0,l1;]
true 100 clean-shot[shot17,ingredient1,left,right;]
true 306 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot17;]
true 407 fill-shot[shot17,ingredient4,left,right,dispenser4;]
true 396 pour-shot-to-used-shaker[shot17,ingredient4,shaker1,left,l1,l2;]
true 320 leave[left,shot17;]
true 409 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4;]
true 514 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 165 nop[;]
true 239 grasp[right,shaker1;]
true 364 shake[cocktail1,ingredient1,ingredient4,shaker1,right,left;]
true 17 pour-shaker-to-shot[cocktail1,shot7,right,shaker1,l2,l1;]
true 345 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 140 clean-shaker[right,left,shaker1;]
true 344 leave[right,shaker1;]
true 5 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 189 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot8;]
true 494 __method_precondition_m8_do_fill_shot_8_precondition[shot8,dispenser3,ingredient3;]
true 216 grasp[left,shot8;]
true 219 fill-shot[shot8,ingredient3,left,right,dispenser3;]
true 399 pour-shot-to-clean-shaker[shot8,ingredient3,shaker1,left,l0,l1;]
true 379 clean-shot[shot8,ingredient3,left,right;]
true 28 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,left,shot8;]
true 447 fill-shot[shot8,ingredient1,left,right,dispenser1;]
true 264 pour-shot-to-used-shaker[shot8,ingredient1,shaker1,left,l1,l2;]
true 509 leave[left,shot8;]
true 373 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient1;]
true 487 __method_precondition_m6_do_clean_shot_6_precondition[shot8,right;]
true 467 grasp[right,shot8;]
true 95 clean-shot[shot8,ingredient1,right,left;]
true 417 leave[right,shot8;]
true 520 grasp[left,shaker1;]
true 378 shake[cocktail8,ingredient3,ingredient1,shaker1,left,right;]
true 453 pour-shaker-to-shot[cocktail8,shot8,left,shaker1,l2,l1;]
true 49 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 164 clean-shaker[left,right,shaker1;]
true 511 leave[left,shaker1;]
true 230 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 263 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot15;]
true 197 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient5,ingredient1,dispenser5;]
true 365 grasp[left,shot15;]
true 176 clean-shot[shot15,ingredient1,left,right;]
true 233 fill-shot[shot15,ingredient5,left,right,dispenser5;]
true 441 pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,left,l0,l1;]
true 414 clean-shot[shot15,ingredient5,left,right;]
true 205 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot15;]
true 380 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 291 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 59 leave[left,shot15;]
true 327 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2;]
true 99 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 119 nop[;]
true 91 grasp[left,shaker1;]
true 114 shake[cocktail7,ingredient5,ingredient2,shaker1,left,right;]
true 109 pour-shaker-to-shot[cocktail7,shot9,left,shaker1,l2,l1;]
true 58 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 14 clean-shaker[left,right,shaker1;]
true 7 leave[left,shaker1;]
true 314 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 39 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot15;]
true 19 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient2,dispenser4;]
true 271 grasp[right,shot15;]
true 287 clean-shot[shot15,ingredient2,right,left;]
true 412 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 261 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 41 clean-shot[shot15,ingredient4,right,left;]
true 187 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,right,shot15;]
true 13 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 169 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 431 leave[right,shot15;]
true 438 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient3;]
true 257 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 440 nop[;]
true 322 grasp[left,shaker1;]
true 301 shake[cocktail3,ingredient4,ingredient3,shaker1,left,right;]
true 515 pour-shaker-to-shot[cocktail3,shot10,left,shaker1,l2,l1;]
true 182 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 290 clean-shaker[left,right,shaker1;]
true 489 leave[left,shaker1;]
true 495 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 500 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient5,shot15;]
true 455 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient5,ingredient3,dispenser5;]
true 42 grasp[left,shot15;]
true 237 clean-shot[shot15,ingredient3,left,right;]
true 71 fill-shot[shot15,ingredient5,left,right,dispenser5;]
true 512 pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,left,l0,l1;]
true 123 clean-shot[shot15,ingredient5,left,right;]
true 374 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient4,left,shot15;]
true 10 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 69 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 174 leave[left,shot15;]
true 404 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient5,ingredient4;]
true 486 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 112 nop[;]
true 217 grasp[right,shaker1;]
true 502 shake[cocktail2,ingredient5,ingredient4,shaker1,right,left;]
true 45 pour-shaker-to-shot[cocktail2,shot11,right,shaker1,l2,l1;]
true 104 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 202 clean-shaker[right,left,shaker1;]
true 143 leave[right,shaker1;]
true 433 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right;]
true 89 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot15;]
true 452 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient4,dispenser4;]
true 299 grasp[right,shot15;]
true 146 refill-shot[shot15,ingredient4,right,left,dispenser4;]
true 0 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 439 clean-shot[shot15,ingredient4,right,left;]
true 468 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,right,shot15;]
true 51 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 135 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 54 leave[right,shot15;]
true 57 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient3;]
true 152 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 352 nop[;]
true 376 grasp[left,shaker1;]
true 410 shake[cocktail3,ingredient4,ingredient3,shaker1,left,right;]
true 246 pour-shaker-to-shot[cocktail3,shot12,left,shaker1,l2,l1;]
true 260 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 510 clean-shaker[left,right,shaker1;]
true 121 leave[left,shaker1;]
true 1 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left;]
true 323 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot15;]
true 36 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient3,dispenser4;]
true 371 grasp[left,shot15;]
true 349 clean-shot[shot15,ingredient3,left,right;]
true 521 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 47 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 98 clean-shot[shot15,ingredient4,left,right;]
true 115 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot15;]
true 23 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 76 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 313 leave[left,shot15;]
true 82 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient3;]
true 240 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 343 nop[;]
true 329 grasp[left,shaker1;]
true 33 shake[cocktail3,ingredient4,ingredient3,shaker1,left,right;]
true 222 pour-shaker-to-shot[cocktail3,shot13,left,shaker1,l2,l1;]
true 481 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 40 clean-shaker[left,right,shaker1;]
true 303 leave[left,shaker1;]
true 321 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left;]
true 37 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot17;]
true 367 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient1,ingredient4,dispenser1;]
true 102 grasp[left,shot17;]
true 507 clean-shot[shot17,ingredient4,left,right;]
true 382 fill-shot[shot17,ingredient1,left,right,dispenser1;]
true 369 pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,left,l0,l1;]
true 238 clean-shot[shot17,ingredient1,left,right;]
true 78 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot17;]
true 342 fill-shot[shot17,ingredient4,left,right,dispenser4;]
true 400 pour-shot-to-used-shaker[shot17,ingredient4,shaker1,left,l1,l2;]
true 285 leave[left,shot17;]
true 466 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4;]
true 116 __method_precondition_m5_do_clean_shot_5_precondition[shot14;]
true 295 nop[;]
true 279 grasp[left,shaker1;]
true 459 shake[cocktail1,ingredient1,ingredient4,shaker1,left,right;]
true 12 pour-shaker-to-shot[cocktail1,shot14,left,shaker1,l2,l1;]
true 191 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 64 clean-shaker[left,right,shaker1;]
true 425 leave[left,shaker1;]
true 225 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2;]
true 432 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient3,dispenser2;]
true 456 grasp[left,shot15;]
true 87 clean-shot[shot15,ingredient3,left,right;]
true 68 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 24 leave[left,shot15;]
true 493 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot16,left;]
true 402 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot16;]
true 478 __method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser1,ingredient1;]
true 163 grasp[left,shot16;]
true 190 fill-shot[shot16,ingredient1,left,right,dispenser1;]
true 310 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,left,l0,l1;]
true 48 clean-shot[shot16,ingredient1,left,right;]
true 132 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,left,shot16;]
true 448 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 124 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 275 leave[left,shot16;]
true 435 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient5;]
true 228 __method_precondition_m6_do_clean_shot_6_precondition[shot16,right;]
true 504 grasp[right,shot16;]
true 326 clean-shot[shot16,ingredient5,right,left;]
true 234 leave[right,shot16;]
true 318 grasp[left,shaker1;]
true 167 shake[cocktail6,ingredient1,ingredient5,shaker1,left,right;]
true 469 pour-shaker-to-shot[cocktail6,shot16,left,shaker1,l2,l1;]
true 347 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 101 clean-shaker[left,right,shaker1;]
true 262 leave[left,shaker1;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 3084
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 6168
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 9252
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 12336
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 15420
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 18504
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 21588
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 24672
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 27756
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 30840
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 33924
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 37008
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 40092
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 43176
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 46260
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 49344
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 52428
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 55512
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 58596
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 61680
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 64764
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 67848
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 70932
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 74016
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 77100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 80184
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 83268
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 86352
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 89436
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 92520
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 95604
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 98688
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 101772
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 104856
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 107940
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 111024
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 114108
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 117192
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 120276
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 123360
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 126444
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 129528
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 132612
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 135696
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 138780
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 141864
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 144948
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 148032
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 151116
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 154200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 157284
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 160368
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 163452
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 166536
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 169620
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 172704
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 175788
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 178872
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 181956
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 185040
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 188124
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 191208
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 194292
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 197376
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 200460
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 203544
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 206628
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 209712
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 212796
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 215880
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 218964
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 222048
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 225132
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 228216
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 231300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 234384
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 237468
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 240552
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 243636
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 246720
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 249804
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 252888
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 255972
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 259056
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 262140
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 265224
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 268308
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 271392
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 274476
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 277560
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 280644
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 283728
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 286812
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 289896
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 292980
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 296064
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 299148
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 302232
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 305316
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 308400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 311484
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 314568
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 317652
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 320736
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 323820
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 326904
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 329988
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 333072
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 336156
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 339240
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 342324
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 345408
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 348492
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 351576
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 354660
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 357744
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 360828
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 363912
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.101 MEMPEAK_KBS 948282.368
