PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p19.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p19.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p19.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounded planning graph ... done in 589ms.
	Number of Grounded Actions 2819
	Number of Grounded Literals 418
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 418
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 420ms.
	Number of Grounded Actions 2797
	Number of Grounded Literals 388
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1322
	number of tasks = 4119
	number of decomposition methods = 5186
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1322
	number of tasks = 4119
	number of decomposition methods = 5186
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 252ms.
	Number of Grounded Actions 2797
	Number of Grounded Literals 388
	number of abstract tasks = 1322
	number of tasks = 4119
	number of decomposition methods = 5186
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1322
	number of tasks = 4119
	number of decomposition methods = 5186
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1322
	number of tasks = 4119
	number of decomposition methods = 5186
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1322
	number of tasks = 4119
	number of decomposition methods = 5186
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1322
	number of tasks = 4119
	number of decomposition methods = 5186
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Tasks 2797 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768007ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767562
done
initial PDT has 288 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 288 leafs
SHOP LEAFS 76
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 225234
Size 225234 at 0/2797
Size 225159 at 500/2797
Size 191372 at 1000/2797
Size 45662 at 1500/2797
Size 29557 at 2000/2797
Size 29557 at 2500/2797
Size 29557
Size 29557 at 0/2797
Size 29557 at 500/2797
Size 21208 at 1000/2797
Size 12590 at 1500/2797
Size 4184 at 2000/2797
Size 4184 at 2500/2797
Size 4146
Size 4146 at 0/2797
Size 4146 at 500/2797
Size 4134 at 1000/2797
Size 4091 at 1500/2797
Size 4002 at 2000/2797
Size 4002 at 2500/2797
Size 3997
Size 3997 at 0/2797
Size 3997 at 500/2797
Size 3949 at 1000/2797
Size 3829 at 1500/2797
Size 3754 at 2000/2797
Size 3754 at 2500/2797
Size 3754
Size 3754 at 0/2797
Size 3754 at 500/2797
Size 3754 at 1000/2797
Size 3754 at 1500/2797
Size 3754 at 2000/2797
Size 3754 at 2500/2797
Size 3754
Invariant time: 2.722
Number of invariants: 3754
Invariant Clauses 1084906
NUMBER OF CLAUSES 1643050
NUMBER OF STATE CLAUSES 1393190
NUMBER OF DECOMPOSITION CLAUSES 249860
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.79% 15.21% 0.0% 
NUMBER OF PATHS 288
Starting cryptominisat5.5
Setting starttime of solver to 1604498285904
Command exited with non-zero status 10
1.02 0.06

Time command gave the following runtime for the solver: 1080
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^4_2;3;1;0,2407 2407 m5_do_clean_shot
2;3;1;0 251 pathaction!4_2;3;1;0,3354
Consider method^2_9;2,851 851 m3_get_second_ingredient
9;2 224 pathaction!2_9;2,4053
Consider method^3_6;1;2,2400 2400 _m2_get_first_ingredient_3
6;1;2 178 pathaction!3_6;1;2,1247
Consider method^3_5;1;3,1912 1912 _m2_get_first_ingredient_4
5;1;3 410 pathaction!3_5;1;3,2751
Consider method^3_1;1;2,1035 1035 _m2_get_first_ingredient_3
1;1;2 373 pathaction!3_1;1;2,1218
Consider method^3_6;1;1,187 187 m8_do_fill_shot
6;1;1 27 pathaction!3_6;1;1,2555
Consider method^2_3;1,333 333 m2_get_first_ingredient
3;1 279 pathaction!2_3;1,3659
Consider method^3_1;1;3,3015 3015 _m2_get_first_ingredient_4
1;1;3 113 pathaction!3_1;1;3,2725
Consider method^3_4;3;4,272 272 _m4_serve_shot_5
4;3;4 390 pathaction!3_4;3;4,129
Consider method^3_6;3;4,3907 3907 _m4_serve_shot_5
6;3;4 239 pathaction!3_6;3;4,157
Consider method^3_5;3;1,759 759 _m4_serve_shot_2
5;3;1 353 pathaction!3_5;3;1,2378
Consider method^4_12;3;1;0,3250 3250 m5_do_clean_shot
12;3;1;0 331 pathaction!4_12;3;1;0,3518
Consider method^3_4;2;1,3960 3960 _m3_get_second_ingredient_2
4;2;1 359 pathaction!3_4;2;1,695
Consider method^3_5;3;5,3822 3822 _m4_serve_shot_6
5;3;5 61 pathaction!3_5;3;5,115
Consider method^1_11,2088 2088 m1_do_cocktail_in_shot2
11 305 pathaction!1_11,1663
Consider method^1_6,479 479 m0_do_cocktail_in_shot1
6 44 pathaction!1_6,167
Consider method^3_9;2;2,3454 3454 _m3_get_second_ingredient_3
9;2;2 123 pathaction!3_9;2;2,2505
Consider method^4_1;3;1;0,4603 4603 m5_do_clean_shot
1;3;1;0 241 pathaction!4_1;3;1;0,3468
Consider method^2_6;1,2688 2688 m2_get_first_ingredient
6;1 282 pathaction!2_6;1,3652
Consider method^1_12,676 676 m0_do_cocktail_in_shot1
12 237 pathaction!1_12,169
Consider method^2_7;1,365 365 m2_get_first_ingredient
7;1 343 pathaction!2_7;1,3651
Consider method^2_2;1,71 71 m2_get_first_ingredient
2;1 267 pathaction!2_2;1,3653
Consider method^3_9;2;1,2709 2709 _m3_get_second_ingredient_2
9;2;1 197 pathaction!3_9;2;1,709
Consider method^3_2;2;2,4800 4800 _m3_get_second_ingredient_3
2;2;2 240 pathaction!3_2;2;2,2454
Consider method^2_10;2,383 383 m3_get_second_ingredient
10;2 120 pathaction!2_10;2,4057
Consider method^3_4;2;2,4246 4246 _m3_get_second_ingredient_3
4;2;2 306 pathaction!3_4;2;2,2529
Consider method^3_10;3;5,2808 2808 _m4_serve_shot_6
10;3;5 311 pathaction!3_10;3;5,107
Consider method^3_3;3;1,3761 3761 _m4_serve_shot_2
3;3;1 229 pathaction!3_3;3;1,2388
Consider method^2_3;2,731 731 m3_get_second_ingredient
3;2 151 pathaction!2_3;2,4069
Consider method^3_2;3;5,2014 2014 _m4_serve_shot_6
2;3;5 121 pathaction!3_2;3;5,105
Consider method^3_5;3;4,3193 3193 _m4_serve_shot_5
5;3;4 394 pathaction!3_5;3;4,132
Consider method^3_1;2;2,4543 4543 _m3_get_second_ingredient_3
1;2;2 88 pathaction!3_1;2;2,2465
Consider method^3_9;3;1,1677 1677 _m4_serve_shot_2
9;3;1 235 pathaction!3_9;3;1,2390
Consider method^3_3;2;2,823 823 _m3_get_second_ingredient_3
3;2;2 93 pathaction!3_3;2;2,2538
Consider method^3_2;3;4,5003 5003 _m4_serve_shot_5
2;3;4 412 pathaction!3_2;3;4,164
Consider method^2_9;1,1723 1723 m2_get_first_ingredient
9;1 183 pathaction!2_9;1,3643
Consider method^3_2;3;1,5139 5139 _m4_serve_shot_2
2;3;1 3 pathaction!3_2;3;1,2392
Consider method^3_9;1;1,989 989 m8_do_fill_shot
9;1;1 192 pathaction!3_9;1;1,2565
Consider method^3_10;2;2,2773 2773 _m3_get_second_ingredient_3
10;2;2 26 pathaction!3_10;2;2,2528
Consider method^3_5;2;2,2411 2411 _m3_get_second_ingredient_3
5;2;2 401 pathaction!3_5;2;2,2393
Consider method^4_6;3;1;0,2017 2017 m6_do_clean_shot
6;3;1;0 330 pathaction!4_6;3;1;0,3485
Consider method^3_9;3;5,982 982 _m4_serve_shot_6
9;3;5 388 pathaction!3_9;3;5,80
Consider method^3_0;1;3,4809 4809 _m2_get_first_ingredient_4
0;1;3 423 pathaction!3_0;1;3,2803
Consider method^2_12;2,2135 2135 m3_get_second_ingredient
12;2 341 pathaction!2_12;2,4073
Consider method^3_0;2;1,5157 5157 _m3_get_second_ingredient_2
0;2;1 337 pathaction!3_0;2;1,710
Consider method^2_6;2,2552 2552 m3_get_second_ingredient
6;2 317 pathaction!2_6;2,4062
Consider method^3_10;3;4,795 795 _m4_serve_shot_5
10;3;4 379 pathaction!3_10;3;4,147
Consider method^2_4;1,5025 5025 m2_get_first_ingredient
4;1 333 pathaction!2_4;1,3650
Consider method^2_13;1,527 527 m7_do_fill_shot
13;1 127 pathaction!2_13;1,2561
Consider method^3_12;1;1,1320 1320 m9_do_fill_shot
12;1;1 143 pathaction!3_12;1;1,2595
Consider method^2_6;3,4312 4312 m4_serve_shot
6;3 94 pathaction!2_6;3,3664
Consider method^1_1,5033 5033 m0_do_cocktail_in_shot1
1 422 pathaction!1_1,173
Consider method^1_9,870 870 m0_do_cocktail_in_shot1
9 181 pathaction!1_9,174
Consider method^2_9;3,3986 3986 m4_serve_shot
9;3 325 pathaction!2_9;3,3671
Consider method^2_4;3,2368 2368 m4_serve_shot
4;3 335 pathaction!2_4;3,3669
Consider method^3_0;1;1,1965 1965 m8_do_fill_shot
0;1;1 129 pathaction!3_0;1;1,2653
Consider method^3_4;3;5,5156 5156 _m4_serve_shot_6
4;3;5 406 pathaction!3_4;3;5,83
Consider method^2_5;3,336 336 m4_serve_shot
5;3 64 pathaction!2_5;3,3672
Consider method^2_10;3,2551 2551 m4_serve_shot
10;3 376 pathaction!2_10;3,3665
Consider method^1_13,4894 4894 m1_do_cocktail_in_shot2
13 125 pathaction!1_13,1664
Consider method^2_8;2,2332 2332 m3_get_second_ingredient
8;2 225 pathaction!2_8;2,4052
Consider method^3_1;2;1,4773 4773 _m3_get_second_ingredient_2
1;2;1 122 pathaction!3_1;2;1,663
Consider method^3_8;1;3,2751 2751 _m2_get_first_ingredient_4
8;1;3 29 pathaction!3_8;1;3,2761
Consider method^3_8;1;2,3769 3769 _m2_get_first_ingredient_3
8;1;2 281 pathaction!3_8;1;2,1149
Consider method^3_2;1;3,5147 5147 _m2_get_first_ingredient_4
2;1;3 103 pathaction!3_2;1;3,2763
Consider method^3_10;3;1,4695 4695 _m4_serve_shot_2
10;3;1 36 pathaction!3_10;3;1,2387
Consider method^3_0;2;2,2491 2491 _m3_get_second_ingredient_3
0;2;2 352 pathaction!3_0;2;2,2418
Consider method^3_5;2;1,4076 4076 _m3_get_second_ingredient_2
5;2;1 84 pathaction!3_5;2;1,772
Consider method^3_8;2;1,3099 3099 _m3_get_second_ingredient_2
8;2;1 211 pathaction!3_8;2;1,665
Consider method^3_8;3;1,1502 1502 _m4_serve_shot_2
8;3;1 148 pathaction!3_8;3;1,2377
Consider method^3_12;3;5,1006 1006 _m4_serve_shot_6
12;3;5 318 pathaction!3_12;3;5,88
Consider method^3_7;3;5,447 447 _m4_serve_shot_6
7;3;5 419 pathaction!3_7;3;5,117
Consider method^3_7;2;2,1886 1886 _m3_get_second_ingredient_3
7;2;2 167 pathaction!3_7;2;2,2430
Consider method^2_13;0,2095 2095 _m1_do_cocktail_in_shot2_4
13;0 355 pathaction!2_13;0,3676
Consider method^2_7;3,3347 3347 m4_serve_shot
7;3 126 pathaction!2_7;3,3667
Consider method^4_7;3;1;0,808 808 m5_do_clean_shot
7;3;1;0 41 pathaction!4_7;3;1;0,3329
Consider method^3_3;1;3,2803 2803 _m2_get_first_ingredient_4
3;1;3 128 pathaction!3_3;1;3,2758
Consider method^3_1;3;4,1805 1805 _m4_serve_shot_5
1;3;4 206 pathaction!3_1;3;4,153
Consider method^3_4;1;2,3 3 _m2_get_first_ingredient_3
4;1;2 226 pathaction!3_4;1;2,1216
Consider method^3_3;1;1,3187 3187 m7_do_fill_shot
3;1;1 135 pathaction!3_3;1;1,2608
Consider method^3_10;1;2,2473 2473 _m2_get_first_ingredient_3
10;1;2 180 pathaction!3_10;1;2,1167
Consider method^4_9;3;1;0,468 468 m6_do_clean_shot
9;3;1;0 315 pathaction!4_9;3;1;0,3396
Consider method^3_7;3;1,3007 3007 _m4_serve_shot_2
7;3;1 194 pathaction!3_7;3;1,2375
Consider method^3_7;1;2,2956 2956 _m2_get_first_ingredient_3
7;1;2 407 pathaction!3_7;1;2,1263
Consider method^3_8;3;4,1450 1450 _m4_serve_shot_5
8;3;4 154 pathaction!3_8;3;4,123
Consider method^2_8;1,386 386 m2_get_first_ingredient
8;1 377 pathaction!2_8;1,3642
Consider method^3_3;2;1,1983 1983 _m3_get_second_ingredient_2
3;2;1 149 pathaction!3_3;2;1,745
Consider method^3_6;3;1,1869 1869 _m4_serve_shot_2
6;3;1 155 pathaction!3_6;3;1,2380
Consider method^3_9;1;2,1332 1332 _m2_get_first_ingredient_3
9;1;2 301 pathaction!3_9;1;2,1201
Consider method^2_1;1,4129 4129 m2_get_first_ingredient
1;1 196 pathaction!2_1;1,3645
Consider method^2_2;2,4216 4216 m3_get_second_ingredient
2;2 264 pathaction!2_2;2,4063
Consider method^2_5;2,2083 2083 m3_get_second_ingredient
5;2 212 pathaction!2_5;2,4059
Consider method^2_2;3,1474 1474 m4_serve_shot
2;3 85 pathaction!2_2;3,3675
Consider method^3_12;3;1,5050 5050 _m4_serve_shot_2
12;3;1 278 pathaction!3_12;3;1,2373
Consider method^1_3,2848 2848 m0_do_cocktail_in_shot1
3 1 pathaction!1_3,176
Consider method^2_7;2,4567 4567 m3_get_second_ingredient
7;2 160 pathaction!2_7;2,4061
Consider method^2_0;2,2865 2865 m3_get_second_ingredient
0;2 266 pathaction!2_0;2,4054
Consider method^3_3;3;4,5002 5002 _m4_serve_shot_5
3;3;4 378 pathaction!3_3;3;4,151
Consider method^3_8;2;2,4100 4100 _m3_get_second_ingredient_3
8;2;2 404 pathaction!3_8;2;2,2449
Consider method^2_4;2,1703 1703 m3_get_second_ingredient
4;2 384 pathaction!2_4;2,4060
Consider method^1_10,822 822 m0_do_cocktail_in_shot1
10 109 pathaction!1_10,168
Consider method^3_1;3;5,2703 2703 _m4_serve_shot_6
1;3;5 334 pathaction!3_1;3;5,100
Consider method^3_0;3;4,3256 3256 _m4_serve_shot_5
0;3;4 146 pathaction!3_0;3;4,149
Consider method^3_10;1;1,4066 4066 m9_do_fill_shot
10;1;1 108 pathaction!3_10;1;1,2599
Consider method^3_9;1;3,3976 3976 _m2_get_first_ingredient_4
9;1;3 386 pathaction!3_9;1;3,2715
Consider method^3_12;1;2,3646 3646 _m2_get_first_ingredient_3
12;1;2 186 pathaction!3_12;1;2,1245
Consider method^3_7;1;3,4432 4432 _m2_get_first_ingredient_4
7;1;3 263 pathaction!3_7;1;3,2743
Consider method^3_1;3;1,2724 2724 _m4_serve_shot_2
1;3;1 10 pathaction!3_1;3;1,2391
Consider method^3_2;1;1,2432 2432 m9_do_fill_shot
2;1;1 366 pathaction!3_2;1;1,2613
Consider method^1_5,4377 4377 m0_do_cocktail_in_shot1
5 182 pathaction!1_5,175
Consider method^4_4;3;1;0,1949 1949 m5_do_clean_shot
4;3;1;0 47 pathaction!4_4;3;1;0,3388
Consider method^2_8;3,117 117 m4_serve_shot
8;3 247 pathaction!2_8;3,3668
Consider method^3_3;1;2,2192 2192 _m2_get_first_ingredient_3
3;1;2 228 pathaction!3_3;1;2,1152
Consider method^1_7,433 433 m0_do_cocktail_in_shot1
7 346 pathaction!1_7,170
Consider method^4_8;3;1;0,3332 3332 m5_do_clean_shot
8;3;1;0 70 pathaction!4_8;3;1;0,3473
Consider method^2_12;1,3286 3286 m2_get_first_ingredient
12;1 389 pathaction!2_12;1,3663
Consider method^3_2;1;2,1432 1432 _m2_get_first_ingredient_3
2;1;2 158 pathaction!3_2;1;2,1172
Consider method^2_5;1,2031 2031 m2_get_first_ingredient
5;1 31 pathaction!2_5;1,3649
Consider method^3_5;1;1,3244 3244 m8_do_fill_shot
5;1;1 133 pathaction!3_5;1;1,2601
Consider method^4_0;3;1;0,3713 3713 m5_do_clean_shot
0;3;1;0 139 pathaction!4_0;3;1;0,3465
Consider method^3_12;1;3,4968 4968 _m2_get_first_ingredient_4
12;1;3 250 pathaction!3_12;1;3,2745
Consider method^3_0;3;1,396 396 _m4_serve_shot_2
0;3;1 30 pathaction!3_0;3;1,2382
Consider method^3_8;1;1,95 95 m9_do_fill_shot
8;1;1 5 pathaction!3_8;1;1,2611
Consider method^1_8,2310 2310 m0_do_cocktail_in_shot1
8 19 pathaction!1_8,171
Consider method^3_4;1;1,2842 2842 m8_do_fill_shot
4;1;1 336 pathaction!3_4;1;1,2668
Consider method^2_3;3,4299 4299 m4_serve_shot
3;3 50 pathaction!2_3;3,3673
Consider method^3_10;2;1,2757 2757 _m3_get_second_ingredient_2
10;2;1 270 pathaction!3_10;2;1,775
Consider method^3_0;3;5,1860 1860 _m4_serve_shot_6
0;3;5 32 pathaction!3_0;3;5,79
Consider method^3_7;1;1,3489 3489 m7_do_fill_shot
7;1;1 338 pathaction!3_7;1;1,2593
Consider method^2_1;3,813 813 m4_serve_shot
1;3 309 pathaction!2_1;3,3670
Consider method^2_12;3,4954 4954 m4_serve_shot
12;3 256 pathaction!2_12;3,3666
Consider method^3_4;3;1,520 520 _m4_serve_shot_2
4;3;1 245 pathaction!3_4;3;1,2376
Consider method^2_11;0,2095 2095 _m1_do_cocktail_in_shot2_4
11;0 375 pathaction!2_11;0,3676
Consider method^3_10;1;3,4281 4281 _m2_get_first_ingredient_4
10;1;3 322 pathaction!3_10;1;3,2749
Consider method^3_6;2;2,2971 2971 _m3_get_second_ingredient_3
6;2;2 150 pathaction!3_6;2;2,2526
Consider method^3_5;1;2,2625 2625 _m2_get_first_ingredient_3
5;1;2 46 pathaction!3_5;1;2,1222
Consider method^2_0;1,1706 1706 m2_get_first_ingredient
0;1 329 pathaction!2_0;1,3644
Consider method^1_4,1614 1614 m0_do_cocktail_in_shot1
4 13 pathaction!1_4,172
Consider method^3_6;1;3,2584 2584 _m2_get_first_ingredient_4
6;1;3 117 pathaction!3_6;1;3,2705
Consider method^2_10;1,4121 4121 m2_get_first_ingredient
10;1 102 pathaction!2_10;1,3647
Consider method^2_11;1,738 738 m9_do_fill_shot
11;1 198 pathaction!2_11;1,2578
Consider method^0_,5185 5185 __top_1
 48 pathaction!0_,4118
Consider method^3_6;3;5,4473 4473 _m4_serve_shot_6
6;3;5 302 pathaction!3_6;3;5,99
Consider method^3_6;2;1,1725 1725 _m3_get_second_ingredient_2
6;2;1 16 pathaction!3_6;2;1,743
Consider method^3_12;3;4,458 458 _m4_serve_shot_5
12;3;4 253 pathaction!3_12;3;4,130
Consider method^3_0;1;2,3058 3058 _m2_get_first_ingredient_3
0;1;2 265 pathaction!3_0;1;2,1274
Consider method^3_4;1;3,376 376 _m2_get_first_ingredient_4
4;1;3 223 pathaction!3_4;1;3,2818
Consider method^4_10;3;1;0,3365 3365 m5_do_clean_shot
10;3;1;0 145 pathaction!4_10;3;1;0,3474
Consider method^4_3;3;1;0,269 269 m5_do_clean_shot
3;3;1;0 396 pathaction!4_3;3;1;0,3303
Consider method^4_5;3;1;0,3819 3819 m6_do_clean_shot
5;3;1;0 272 pathaction!4_5;3;1;0,3557
Consider method^3_2;2;1,576 576 _m3_get_second_ingredient_2
2;2;1 51 pathaction!3_2;2;1,777
Consider method^3_1;1;1,1895 1895 m8_do_fill_shot
1;1;1 393 pathaction!3_1;1;1,2575
Consider method^3_8;3;5,1006 1006 _m4_serve_shot_6
8;3;5 273 pathaction!3_8;3;5,88
Consider method^3_12;2;1,4500 4500 _m3_get_second_ingredient_2
12;2;1 275 pathaction!3_12;2;1,669
Consider method^3_7;2;1,1302 1302 _m3_get_second_ingredient_2
7;2;1 382 pathaction!3_7;2;1,779
Consider method^1_0,2243 2243 m0_do_cocktail_in_shot1
0 217 pathaction!1_0,177
Consider method^2_1;2,733 733 m3_get_second_ingredient
1;2 7 pathaction!2_1;2,4055
Consider method^3_3;3;5,2939 2939 _m4_serve_shot_6
3;3;5 112 pathaction!3_3;3;5,89
Consider method^1_2,3464 3464 m0_do_cocktail_in_shot1
2 345 pathaction!1_2,178
Consider method^3_7;3;4,3425 3425 _m4_serve_shot_5
7;3;4 39 pathaction!3_7;3;4,138
Consider method^3_9;3;4,2963 2963 _m4_serve_shot_5
9;3;4 387 pathaction!3_9;3;4,161
Consider method^3_12;2;2,3032 3032 _m3_get_second_ingredient_3
12;2;2 294 pathaction!3_12;2;2,2494
Consider method^2_0;3,1116 1116 m4_serve_shot
0;3 351 pathaction!2_0;3,3674


CHECKING primitive solution of length 261 ...
true 403 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 297 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot12;]
true 400 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser3,ingredient3;]
true 12 grasp[right,shot12;]
true 92 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 14 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1;]
true 55 clean-shot[shot12,ingredient3,right,left;]
true 350 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot12;]
true 260 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 78 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2;]
true 165 leave[right,shot12;]
true 374 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient2;]
true 52 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 116 nop[;]
true 380 grasp[left,shaker1;]
true 300 shake[cocktail5,ingredient3,ingredient2,shaker1,left,right;]
true 15 pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1;]
true 77 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 332 clean-shaker[left,right,shaker1;]
true 328 leave[left,shaker1;]
true 166 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 190 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot14;]
true 21 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser3,ingredient3;]
true 290 grasp[left,shot14;]
true 71 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 67 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1;]
true 169 clean-shot[shot14,ingredient3,left,right;]
true 140 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot14;]
true 234 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 75 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,left,l1,l2;]
true 292 leave[left,shot14;]
true 96 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient4;]
true 312 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 153 nop[;]
true 398 grasp[right,shaker1;]
true 107 shake[cocktail3,ingredient3,ingredient4,shaker1,right,left;]
true 106 pour-shaker-to-shot[cocktail3,shot2,right,shaker1,l2,l1;]
true 177 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 97 clean-shaker[right,left,shaker1;]
true 175 leave[right,shaker1;]
true 173 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 132 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient5,shot14;]
true 361 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient4,dispenser5;]
true 316 grasp[right,shot14;]
true 364 clean-shot[shot14,ingredient4,right,left;]
true 383 fill-shot[shot14,ingredient5,right,left,dispenser5;]
true 66 pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1;]
true 347 clean-shot[shot14,ingredient5,right,left;]
true 413 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,right,shot14;]
true 168 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 298 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2;]
true 246 leave[right,shot14;]
true 405 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient5,ingredient4;]
true 147 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 369 nop[;]
true 219 grasp[right,shaker1;]
true 0 shake[cocktail8,ingredient5,ingredient4,shaker1,right,left;]
true 417 pour-shaker-to-shot[cocktail8,shot3,right,shaker1,l2,l1;]
true 326 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 144 clean-shaker[right,left,shaker1;]
true 131 leave[right,shaker1;]
true 79 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 319 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot12;]
true 137 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient2,dispenser2;]
true 156 grasp[right,shot12;]
true 38 refill-shot[shot12,ingredient2,right,left,dispenser2;]
true 418 pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,right,l0,l1;]
true 287 clean-shot[shot12,ingredient2,right,left;]
true 310 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,right,shot12;]
true 209 fill-shot[shot12,ingredient5,right,left,dispenser5;]
true 252 pour-shot-to-used-shaker[shot12,ingredient5,shaker1,right,l1,l2;]
true 214 leave[right,shot12;]
true 308 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient5;]
true 221 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 193 nop[;]
true 232 grasp[left,shaker1;]
true 4 shake[cocktail6,ingredient2,ingredient5,shaker1,left,right;]
true 76 pour-shaker-to-shot[cocktail6,shot4,left,shaker1,l2,l1;]
true 269 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 73 clean-shaker[left,right,shaker1;]
true 65 leave[left,shaker1;]
true 159 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 118 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot15;]
true 344 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser1,ingredient1;]
true 284 grasp[right,shot15;]
true 25 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 327 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1;]
true 227 clean-shot[shot15,ingredient1,right,left;]
true 218 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot15;]
true 99 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 324 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,right,l1,l2;]
true 20 leave[right,shot15;]
true 354 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2;]
true 130 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 385 nop[;]
true 101 grasp[right,shaker1;]
true 134 shake[cocktail4,ingredient1,ingredient2,shaker1,right,left;]
true 421 pour-shaker-to-shot[cocktail4,shot5,right,shaker1,l2,l1;]
true 286 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 244 clean-shaker[right,left,shaker1;]
true 83 leave[right,shaker1;]
true 54 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 62 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot6;]
true 195 __method_precondition_m8_do_fill_shot_8_precondition[shot6,dispenser5,ingredient5;]
true 349 grasp[left,shot6;]
true 416 fill-shot[shot6,ingredient5,left,right,dispenser5;]
true 11 pour-shot-to-clean-shaker[shot6,ingredient5,shaker1,left,l0,l1;]
true 200 clean-shot[shot6,ingredient5,left,right;]
true 371 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot6;]
true 17 fill-shot[shot6,ingredient3,left,right,dispenser3;]
true 368 pour-shot-to-used-shaker[shot6,ingredient3,shaker1,left,l1,l2;]
true 53 leave[left,shot6;]
true 34 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient3;]
true 124 __method_precondition_m6_do_clean_shot_6_precondition[shot6,left;]
true 2 grasp[left,shot6;]
true 8 clean-shot[shot6,ingredient3,left,right;]
true 170 leave[left,shot6;]
true 49 grasp[right,shaker1;]
true 163 shake[cocktail10,ingredient5,ingredient3,shaker1,right,left;]
true 259 pour-shaker-to-shot[cocktail10,shot6,right,shaker1,l2,l1;]
true 255 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 142 clean-shaker[right,left,shaker1;]
true 162 leave[right,shaker1;]
true 138 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 136 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot7;]
true 348 __method_precondition_m8_do_fill_shot_8_precondition[shot7,dispenser4,ingredient4;]
true 295 grasp[right,shot7;]
true 243 fill-shot[shot7,ingredient4,right,left,dispenser4;]
true 59 pour-shot-to-clean-shaker[shot7,ingredient4,shaker1,right,l0,l1;]
true 80 clean-shot[shot7,ingredient4,right,left;]
true 111 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot7;]
true 91 fill-shot[shot7,ingredient3,right,left,dispenser3;]
true 271 pour-shot-to-used-shaker[shot7,ingredient3,shaker1,right,l1,l2;]
true 95 leave[right,shot7;]
true 205 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 415 __method_precondition_m6_do_clean_shot_6_precondition[shot7,right;]
true 238 grasp[right,shot7;]
true 40 clean-shot[shot7,ingredient3,right,left;]
true 296 leave[right,shot7;]
true 90 grasp[left,shaker1;]
true 323 shake[cocktail2,ingredient4,ingredient3,shaker1,left,right;]
true 254 pour-shaker-to-shot[cocktail2,shot7,left,shaker1,l2,l1;]
true 9 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 277 clean-shaker[left,right,shaker1;]
true 231 leave[left,shaker1;]
true 395 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 82 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot15;]
true 199 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient2,dispenser2;]
true 289 grasp[right,shot15;]
true 365 refill-shot[shot15,ingredient2,right,left,dispenser2;]
true 274 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 293 clean-shot[shot15,ingredient2,right,left;]
true 23 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient5,right,shot15;]
true 164 fill-shot[shot15,ingredient5,right,left,dispenser5;]
true 188 pour-shot-to-used-shaker[shot15,ingredient5,shaker1,right,l1,l2;]
true 372 leave[right,shot15;]
true 114 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient5;]
true 174 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 74 nop[;]
true 141 grasp[left,shaker1;]
true 307 shake[cocktail9,ingredient2,ingredient5,shaker1,left,right;]
true 100 pour-shaker-to-shot[cocktail9,shot8,left,shaker1,l2,l1;]
true 152 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 201 clean-shaker[left,right,shaker1;]
true 207 leave[left,shaker1;]
true 72 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 357 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot15;]
true 22 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient5,dispenser3;]
true 43 grasp[right,shot15;]
true 258 clean-shot[shot15,ingredient5,right,left;]
true 414 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 397 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1;]
true 362 clean-shot[shot15,ingredient3,right,left;]
true 161 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,right,shot15;]
true 104 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 257 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 342 leave[right,shot15;]
true 213 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4;]
true 56 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 171 nop[;]
true 291 grasp[right,shaker1;]
true 204 shake[cocktail11,ingredient3,ingredient4,shaker1,right,left;]
true 283 pour-shaker-to-shot[cocktail11,shot9,right,shaker1,l2,l1;]
true 367 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 420 clean-shaker[right,left,shaker1;]
true 356 leave[right,shaker1;]
true 409 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 87 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot10;]
true 313 __method_precondition_m8_do_fill_shot_8_precondition[shot10,dispenser2,ingredient2;]
true 230 grasp[right,shot10;]
true 45 fill-shot[shot10,ingredient2,right,left,dispenser2;]
true 58 pour-shot-to-clean-shaker[shot10,ingredient2,shaker1,right,l0,l1;]
true 220 clean-shot[shot10,ingredient2,right,left;]
true 233 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient3,right,shot10;]
true 86 fill-shot[shot10,ingredient3,right,left,dispenser3;]
true 285 pour-shot-to-used-shaker[shot10,ingredient3,shaker1,right,l1,l2;]
true 24 leave[right,shot10;]
true 314 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient3;]
true 105 __method_precondition_m6_do_clean_shot_6_precondition[shot10,right;]
true 321 grasp[right,shot10;]
true 391 clean-shot[shot10,ingredient3,right,left;]
true 288 leave[right,shot10;]
true 185 grasp[left,shaker1;]
true 339 shake[cocktail1,ingredient2,ingredient3,shaker1,left,right;]
true 411 pour-shaker-to-shot[cocktail1,shot10,left,shaker1,l2,l1;]
true 187 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 37 clean-shaker[left,right,shaker1;]
true 299 leave[left,shaker1;]
true 179 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 358 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot12;]
true 42 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient2,ingredient5,dispenser2;]
true 33 grasp[left,shot12;]
true 119 clean-shot[shot12,ingredient5,left,right;]
true 202 fill-shot[shot12,ingredient2,left,right,dispenser2;]
true 399 pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,left,l0,l1;]
true 57 clean-shot[shot12,ingredient2,left,right;]
true 262 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,left,shot12;]
true 189 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 268 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2;]
true 184 leave[left,shot12;]
true 381 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient1;]
true 208 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 18 nop[;]
true 392 grasp[right,shaker1;]
true 280 shake[cocktail7,ingredient2,ingredient1,shaker1,right,left;]
true 360 pour-shaker-to-shot[cocktail7,shot11,right,shaker1,l2,l1;]
true 68 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 89 clean-shaker[right,left,shaker1;]
true 176 leave[right,shaker1;]
true 63 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 261 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient1,dispenser4;]
true 216 grasp[left,shot12;]
true 215 clean-shot[shot12,ingredient1,left,right;]
true 370 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 35 leave[left,shot12;]
true 304 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left;]
true 276 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot15;]
true 242 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient4,dispenser3;]
true 203 grasp[left,shot15;]
true 98 clean-shot[shot15,ingredient4,left,right;]
true 320 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 303 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 402 clean-shot[shot15,ingredient3,left,right;]
true 60 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,left,shot15;]
true 222 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 408 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 115 leave[left,shot15;]
true 6 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4;]
true 110 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 81 nop[;]
true 191 grasp[right,shaker1;]
true 157 shake[cocktail11,ingredient3,ingredient4,shaker1,right,left;]
true 248 pour-shaker-to-shot[cocktail11,shot13,right,shaker1,l2,l1;]
true 172 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 249 clean-shaker[right,left,shaker1;]
true 340 leave[right,shaker1;]
true 28 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 236 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient4,dispenser4;]
true 363 grasp[left,shot14;]
true 69 refill-shot[shot14,ingredient4,left,right,dispenser4;]
true 210 leave[left,shot14;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2646
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 5292
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 7938
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 10584
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 13230
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 15876
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 18522
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 21168
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 23814
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 26460
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 29106
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 31752
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 34398
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 37044
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 39690
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 42336
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 44982
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 47628
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 50274
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 52920
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 55566
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 58212
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 60858
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 63504
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 66150
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 68796
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 71442
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 74088
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 76734
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 79380
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 82026
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 84672
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 87318
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 89964
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 92610
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 95256
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 97902
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 100548
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 103194
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 105840
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 108486
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 111132
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 113778
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 116424
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 119070
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 121716
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 124362
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 127008
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 129654
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 132300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 134946
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 137592
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 140238
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 142884
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 145530
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 148176
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 150822
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 153468
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 156114
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 158760
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 161406
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 164052
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 166698
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 169344
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 171990
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 174636
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 177282
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 179928
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 182574
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 185220
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 187866
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 190512
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 193158
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 195804
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 198450
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 201096
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 203742
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 206388
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 209034
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 211680
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 214326
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 216972
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 219618
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 222264
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 224910
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 227556
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 230202
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 232848
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 235494
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 238140
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 240786
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 243432
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 246078
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 248724
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 251370
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 254016
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 256662
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 259308
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 261954
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 264600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 267246
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 269892
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 272538
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 275184
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 277830
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 280476
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 283122
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 285768
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 288414
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 291060
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 293706
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 296352
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 298998
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 301644
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 304290
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 306936
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 309582
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 312228
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 314874
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 317520
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 320166
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 322812
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 325458
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.101 MEMPEAK_KBS 1253552.128
