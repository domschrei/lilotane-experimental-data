PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p02.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p02.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p02.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounded planning graph ... done in 586ms.
	Number of Grounded Actions 2811
	Number of Grounded Literals 417
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 1133
	number of tasks = 3637
	number of decomposition methods = 4430
	number of predicates = 417
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1133
	number of tasks = 3637
	number of decomposition methods = 4430
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 380ms.
	Number of Grounded Actions 2504
	Number of Grounded Literals 387
	number of abstract tasks = 1133
	number of tasks = 3637
	number of decomposition methods = 4430
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1133
	number of tasks = 3637
	number of decomposition methods = 4430
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1134
	number of tasks = 3638
	number of decomposition methods = 4431
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1134
	number of tasks = 3638
	number of decomposition methods = 4431
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 205ms.
	Number of Grounded Actions 2504
	Number of Grounded Literals 387
	number of abstract tasks = 1134
	number of tasks = 3638
	number of decomposition methods = 4431
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1134
	number of tasks = 3638
	number of decomposition methods = 4431
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1134
	number of tasks = 3638
	number of decomposition methods = 4431
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1134
	number of tasks = 3638
	number of decomposition methods = 4431
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1134
	number of tasks = 3638
	number of decomposition methods = 4431
	number of predicates = 387
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 983
	number of epsilon methods = 0
	number of primitive tasks = 2504
	number of constants = 0
Tasks 2504 - 13
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768460ms

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767993
done
initial PDT has 271 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 271 leafs
SHOP LEAFS 72
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 224073
Size 224073 at 0/2504
Size 223859 at 500/2504
Size 190338 at 1000/2504
Size 30856 at 1500/2504
Size 28840 at 2000/2504
Size 28840 at 2500/2504
Size 28840
Size 28840 at 0/2504
Size 28573 at 500/2504
Size 21080 at 1000/2504
Size 14931 at 1500/2504
Size 8903 at 2000/2504
Size 8880 at 2500/2504
Size 8880
Size 8880 at 0/2504
Size 8313 at 500/2504
Size 7893 at 1000/2504
Size 5918 at 1500/2504
Size 3984 at 2000/2504
Size 3967 at 2500/2504
Size 3967
Size 3967 at 0/2504
Size 3967 at 500/2504
Size 3939 at 1000/2504
Size 3869 at 1500/2504
Size 3798 at 2000/2504
Size 3798 at 2500/2504
Size 3798
Size 3798 at 0/2504
Size 3798 at 500/2504
Size 3786 at 1000/2504
Size 3758 at 1500/2504
Size 3758 at 2000/2504
Size 3758 at 2500/2504
Size 3758
Size 3758 at 0/2504
Size 3754 at 500/2504
Size 3754 at 1000/2504
Size 3742 at 1500/2504
Size 3736 at 2000/2504
Size 3736 at 2500/2504
Size 3736
Size 3736 at 0/2504
Size 3736 at 500/2504
Size 3736 at 1000/2504
Size 3736 at 1500/2504
Size 3736 at 2000/2504
Size 3736 at 2500/2504
Size 3736
Invariant time: 2.402
Number of invariants: 3736
Invariant Clauses 1016192
NUMBER OF CLAUSES 1533650
NUMBER OF STATE CLAUSES 1304029
NUMBER OF DECOMPOSITION CLAUSES 229621
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 85.03% 14.97% 0.0% 
NUMBER OF PATHS 271
Starting cryptominisat5.5
Setting starttime of solver to 1604493182084
Command exited with non-zero status 10
1.07 0.03

Time command gave the following runtime for the solver: 1100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_6;3,3725 3725 m4_serve_shot
6;3 292 pathaction!2_6;3,3258
Consider method^2_4;3,1463 1463 m4_serve_shot
4;3 376 pathaction!2_4;3,3267
Consider method^3_6;2;1,1916 1916 _m3_get_second_ingredient_2
6;2;1 196 pathaction!3_6;2;1,587
Consider method^2_7;1,2773 2773 m2_get_first_ingredient
7;1 169 pathaction!2_7;1,3237
Consider method^2_5;1,1950 1950 m2_get_first_ingredient
5;1 261 pathaction!2_5;1,3248
Consider method^3_3;1;1,3464 3464 m8_do_fill_shot
3;1;1 150 pathaction!3_3;1;1,2342
Consider method^3_6;3;1,3917 3917 _m4_serve_shot_2
6;3;1 59 pathaction!3_6;3;1,2103
Consider method^3_8;3;5,1332 1332 _m4_serve_shot_6
8;3;5 249 pathaction!3_8;3;5,103
Consider method^2_0;2,2710 2710 m3_get_second_ingredient
0;2 204 pathaction!2_0;2,3579
Consider method^3_9;2;2,2107 2107 _m3_get_second_ingredient_3
9;2;2 130 pathaction!3_9;2;2,2139
Consider method^2_10;1,12 12 m2_get_first_ingredient
10;1 101 pathaction!2_10;1,3251
Consider method^1_12,3712 3712 m1_do_cocktail_in_shot2
12 375 pathaction!1_12,1389
Consider method^1_5,2267 2267 m0_do_cocktail_in_shot1
5 154 pathaction!1_5,153
Consider method^2_3;2,4013 4013 m3_get_second_ingredient
3;2 40 pathaction!2_3;2,3584
Consider method^2_3;1,4186 4186 m2_get_first_ingredient
3;1 391 pathaction!2_3;1,3249
Consider method^3_4;2;2,1787 1787 _m3_get_second_ingredient_3
4;2;2 244 pathaction!3_4;2;2,2186
Consider method^3_5;1;1,467 467 m8_do_fill_shot
5;1;1 282 pathaction!3_5;1;1,2322
Consider method^3_10;1;1,526 526 m8_do_fill_shot
10;1;1 109 pathaction!3_10;1;1,2345
Consider method^1_10,215 215 m0_do_cocktail_in_shot1
10 370 pathaction!1_10,151
Consider method^2_2;3,2314 2314 m4_serve_shot
2;3 192 pathaction!2_2;3,3266
Consider method^3_4;1;3,1965 1965 _m2_get_first_ingredient_4
4;1;3 223 pathaction!3_4;1;3,2363
Consider method^2_4;2,2582 2582 m3_get_second_ingredient
4;2 228 pathaction!2_4;2,3578
Consider method^3_6;3;5,1594 1594 _m4_serve_shot_6
6;3;5 333 pathaction!3_6;3;5,64
Consider method^3_2;1;3,905 905 _m2_get_first_ingredient_4
2;1;3 14 pathaction!3_2;1;3,2375
Consider method^3_8;1;3,150 150 _m2_get_first_ingredient_4
8;1;3 366 pathaction!3_8;1;3,2362
Consider method^3_10;3;4,1095 1095 _m4_serve_shot_5
10;3;4 335 pathaction!3_10;3;4,124
Consider method^2_7;3,2923 2923 m4_serve_shot
7;3 4 pathaction!2_7;3,3268
Consider method^3_10;1;2,3260 3260 _m2_get_first_ingredient_3
10;1;2 320 pathaction!3_10;1;2,1032
Consider method^3_10;3;5,2300 2300 _m4_serve_shot_6
10;3;5 54 pathaction!3_10;3;5,85
Consider method^1_13,757 757 m1_do_cocktail_in_shot2
13 304 pathaction!1_13,1391
Consider method^3_5;3;5,1195 1195 _m4_serve_shot_6
5;3;5 301 pathaction!3_5;3;5,69
Consider method^2_6;2,2412 2412 m3_get_second_ingredient
6;2 297 pathaction!2_6;2,3585
Consider method^4_9;3;1;0,3026 3026 m5_do_clean_shot
9;3;1;0 22 pathaction!4_9;3;1;0,2907
Consider method^3_10;3;1,3438 3438 _m4_serve_shot_2
10;3;1 388 pathaction!3_10;3;1,2110
Consider method^3_1;1;1,3728 3728 m9_do_fill_shot
1;1;1 117 pathaction!3_1;1;1,2240
Consider method^4_0;3;1;0,1412 1412 m5_do_clean_shot
0;3;1;0 211 pathaction!4_0;3;1;0,3087
Consider method^3_7;3;5,970 970 _m4_serve_shot_6
7;3;5 315 pathaction!3_7;3;5,78
Consider method^3_10;2;2,177 177 _m3_get_second_ingredient_3
10;2;2 395 pathaction!3_10;2;2,2188
Consider method^3_1;3;5,4274 4274 _m4_serve_shot_6
1;3;5 317 pathaction!3_1;3;5,76
Consider method^1_6,3393 3393 m0_do_cocktail_in_shot1
6 322 pathaction!1_6,148
Consider method^1_11,2181 2181 m1_do_cocktail_in_shot2
11 114 pathaction!1_11,1390
Consider method^3_1;3;1,3637 3637 _m4_serve_shot_2
1;3;1 193 pathaction!3_1;3;1,2108
Consider method^3_0;1;3,3353 3353 _m2_get_first_ingredient_4
0;1;3 70 pathaction!3_0;1;3,2405
Consider method^2_9;3,2051 2051 m4_serve_shot
9;3 360 pathaction!2_9;3,3265
Consider method^3_3;1;2,171 171 _m2_get_first_ingredient_3
3;1;2 0 pathaction!3_3;1;2,1066
Consider method^1_8,250 250 m0_do_cocktail_in_shot1
8 126 pathaction!1_8,150
Consider method^0_,4430 4430 __top_1
 207 pathaction!0_,3637
Consider method^3_4;1;2,1100 1100 _m2_get_first_ingredient_3
4;1;2 83 pathaction!3_4;1;2,1018
Consider method^2_8;2,4153 4153 m3_get_second_ingredient
8;2 221 pathaction!2_8;2,3581
Consider method^3_7;1;3,3665 3665 _m2_get_first_ingredient_4
7;1;3 334 pathaction!3_7;1;3,2457
Consider method^4_3;3;1;0,3048 3048 m5_do_clean_shot
3;3;1;0 10 pathaction!4_3;3;1;0,3016
Consider method^3_7;2;1,1696 1696 _m3_get_second_ingredient_2
7;2;1 300 pathaction!3_7;2;1,647
Consider method^3_1;1;3,1998 1998 _m2_get_first_ingredient_4
1;1;3 28 pathaction!3_1;1;3,2360
Consider method^3_8;1;1,3557 3557 m9_do_fill_shot
8;1;1 95 pathaction!3_8;1;1,2242
Consider method^2_5;3,946 946 m4_serve_shot
5;3 250 pathaction!2_5;3,3263
Consider method^3_3;1;3,981 981 _m2_get_first_ingredient_4
3;1;3 128 pathaction!3_3;1;3,2462
Consider method^3_8;2;1,3153 3153 _m3_get_second_ingredient_2
8;2;1 266 pathaction!3_8;2;1,635
Consider method^3_6;3;4,571 571 _m4_serve_shot_5
6;3;4 364 pathaction!3_6;3;4,131
Consider method^3_0;1;1,1033 1033 m8_do_fill_shot
0;1;1 234 pathaction!3_0;1;1,2285
Consider method^3_4;2;1,187 187 _m3_get_second_ingredient_2
4;2;1 67 pathaction!3_4;2;1,611
Consider method^3_0;1;2,394 394 _m2_get_first_ingredient_3
0;1;2 281 pathaction!3_0;1;2,971
Consider method^2_3;3,1635 1635 m4_serve_shot
3;3 219 pathaction!2_3;3,3259
Consider method^3_2;2;1,3362 3362 _m3_get_second_ingredient_2
2;2;1 349 pathaction!3_2;2;1,601
Consider method^3_6;1;3,3119 3119 _m2_get_first_ingredient_4
6;1;3 386 pathaction!3_6;1;3,2452
Consider method^4_6;3;1;0,4158 4158 m5_do_clean_shot
6;3;1;0 7 pathaction!4_6;3;1;0,2893
Consider method^2_1;3,98 98 m4_serve_shot
1;3 257 pathaction!2_1;3,3262
Consider method^3_5;1;2,3668 3668 _m2_get_first_ingredient_3
5;1;2 116 pathaction!3_5;1;2,1077
Consider method^3_1;1;2,624 624 _m2_get_first_ingredient_3
1;1;2 181 pathaction!3_1;1;2,1065
Consider method^4_4;3;1;0,3856 3856 m5_do_clean_shot
4;3;1;0 29 pathaction!4_4;3;1;0,3066
Consider method^3_5;3;4,3770 3770 _m4_serve_shot_5
5;3;4 151 pathaction!3_5;3;4,137
Consider method^1_1,2504 2504 m0_do_cocktail_in_shot1
1 37 pathaction!1_1,152
Consider method^2_9;1,2075 2075 m2_get_first_ingredient
9;1 394 pathaction!2_9;1,3247
Consider method^2_11;0,3549 3549 _m1_do_cocktail_in_shot2_4
11;0 166 pathaction!2_11;0,3270
Consider method^2_0;3,3698 3698 m4_serve_shot
0;3 15 pathaction!2_0;3,3264
Consider method^3_2;1;1,3660 3660 m8_do_fill_shot
2;1;1 213 pathaction!3_2;1;1,2255
Consider method^3_3;2;2,2164 2164 _m3_get_second_ingredient_3
3;2;2 125 pathaction!3_3;2;2,2152
Consider method^3_0;2;2,237 237 _m3_get_second_ingredient_3
0;2;2 105 pathaction!3_0;2;2,2206
Consider method^3_2;3;5,3424 3424 _m4_serve_shot_6
2;3;5 306 pathaction!3_2;3;5,70
Consider method^3_9;3;1,512 512 _m4_serve_shot_2
9;3;1 147 pathaction!3_9;3;1,2113
Consider method^3_9;3;4,3851 3851 _m4_serve_shot_5
9;3;4 111 pathaction!3_9;3;4,122
Consider method^3_10;2;1,3911 3911 _m3_get_second_ingredient_2
10;2;1 324 pathaction!3_10;2;1,634
Consider method^4_2;3;1;0,1353 1353 m5_do_clean_shot
2;3;1;0 33 pathaction!4_2;3;1;0,3085
Consider method^4_10;3;1;0,3529 3529 m6_do_clean_shot
10;3;1;0 136 pathaction!4_10;3;1;0,2985
Consider method^4_5;3;1;0,1392 1392 m5_do_clean_shot
5;3;1;0 319 pathaction!4_5;3;1;0,2991
Consider method^3_7;2;2,734 734 _m3_get_second_ingredient_3
7;2;2 48 pathaction!3_7;2;2,2231
Consider method^2_7;2,3690 3690 m3_get_second_ingredient
7;2 135 pathaction!2_7;2,3572
Consider method^3_7;1;2,559 559 _m2_get_first_ingredient_3
7;1;2 236 pathaction!3_7;1;2,1047
Consider method^1_4,3470 3470 m0_do_cocktail_in_shot1
4 115 pathaction!1_4,157
Consider method^1_3,4427 4427 m0_do_cocktail_in_shot1
3 20 pathaction!1_3,149
Consider method^4_7;3;1;0,3318 3318 m5_do_clean_shot
7;3;1;0 355 pathaction!4_7;3;1;0,2972
Consider method^3_1;2;1,4128 4128 _m3_get_second_ingredient_2
1;2;1 373 pathaction!3_1;2;1,610
Consider method^3_3;3;5,342 342 _m4_serve_shot_6
3;3;5 340 pathaction!3_3;3;5,80
Consider method^3_3;2;1,1912 1912 _m3_get_second_ingredient_2
3;2;1 397 pathaction!3_3;2;1,606
Consider method^2_4;1,3303 3303 m2_get_first_ingredient
4;1 342 pathaction!2_4;1,3243
Consider method^3_4;3;5,3259 3259 _m4_serve_shot_6
4;3;5 137 pathaction!3_4;3;5,100
Consider method^3_6;1;1,855 855 m9_do_fill_shot
6;1;1 119 pathaction!3_6;1;1,2332
Consider method^1_9,2571 2571 m0_do_cocktail_in_shot1
9 264 pathaction!1_9,155
Consider method^2_9;2,863 863 m3_get_second_ingredient
9;2 351 pathaction!2_9;2,3582
Consider method^2_8;3,856 856 m4_serve_shot
8;3 106 pathaction!2_8;3,3260
Consider method^3_9;1;2,559 559 _m2_get_first_ingredient_3
9;1;2 205 pathaction!3_9;1;2,1047
Consider method^3_8;1;2,2789 2789 _m2_get_first_ingredient_3
8;1;2 85 pathaction!3_8;1;2,1049
Consider method^3_9;1;1,1253 1253 m9_do_fill_shot
9;1;1 50 pathaction!3_9;1;1,2337
Consider method^2_12;0,2605 2605 _m1_do_cocktail_in_shot2_4
12;0 96 pathaction!2_12;0,3269
Consider method^3_8;2;2,1506 1506 _m3_get_second_ingredient_3
8;2;2 225 pathaction!3_8;2;2,2165
Consider method^3_9;3;5,684 684 _m4_serve_shot_6
9;3;5 27 pathaction!3_9;3;5,101
Consider method^2_5;2,1712 1712 m3_get_second_ingredient
5;2 163 pathaction!2_5;2,3583
Consider method^3_7;1;1,2037 2037 m9_do_fill_shot
7;1;1 313 pathaction!3_7;1;1,2337
Consider method^2_6;1,2534 2534 m2_get_first_ingredient
6;1 302 pathaction!2_6;1,3250
Consider method^3_0;3;1,1241 1241 _m4_serve_shot_2
0;3;1 58 pathaction!3_0;3;1,2105
Consider method^1_0,1831 1831 m0_do_cocktail_in_shot1
0 276 pathaction!1_0,154
Consider method^3_4;3;4,2029 2029 _m4_serve_shot_5
4;3;4 78 pathaction!3_4;3;4,135
Consider method^2_8;1,3735 3735 m2_get_first_ingredient
8;1 273 pathaction!2_8;1,3246
Consider method^1_7,4002 4002 m0_do_cocktail_in_shot1
7 331 pathaction!1_7,158
Consider method^3_2;3;1,3357 3357 _m4_serve_shot_2
2;3;1 227 pathaction!3_2;3;1,2107
Consider method^3_2;3;4,3721 3721 _m4_serve_shot_5
2;3;4 338 pathaction!3_2;3;4,146
Consider method^3_7;3;4,3105 3105 _m4_serve_shot_5
7;3;4 153 pathaction!3_7;3;4,116
Consider method^2_2;1,4173 4173 m2_get_first_ingredient
2;1 271 pathaction!2_2;1,3236
Consider method^3_0;2;1,4128 4128 _m3_get_second_ingredient_2
0;2;1 121 pathaction!3_0;2;1,610
Consider method^3_5;3;1,3744 3744 _m4_serve_shot_2
5;3;1 354 pathaction!3_5;3;1,2101
Consider method^3_9;1;3,3665 3665 _m2_get_first_ingredient_4
9;1;3 368 pathaction!3_9;1;3,2457
Consider method^2_10;2,2456 2456 m3_get_second_ingredient
10;2 337 pathaction!2_10;2,3586
Consider method^4_8;3;1;0,2837 2837 m5_do_clean_shot
8;3;1;0 53 pathaction!4_8;3;1;0,3076
Consider method^3_5;2;1,2593 2593 _m3_get_second_ingredient_2
5;2;1 144 pathaction!3_5;2;1,588
Consider method^2_1;1,1208 1208 m2_get_first_ingredient
1;1 295 pathaction!2_1;1,3256
Consider method^3_5;2;2,450 450 _m3_get_second_ingredient_3
5;2;2 240 pathaction!3_5;2;2,2191
Consider method^3_1;3;4,4322 4322 _m4_serve_shot_5
1;3;4 353 pathaction!3_1;3;4,110
Consider method^3_2;1;2,1505 1505 _m2_get_first_ingredient_3
2;1;2 362 pathaction!3_2;1;2,1004
Consider method^2_12;1,3465 3465 m9_do_fill_shot
12;1 108 pathaction!2_12;1,2243
Consider method^3_3;3;4,519 519 _m4_serve_shot_5
3;3;4 389 pathaction!3_3;3;4,139
Consider method^3_1;2;2,237 237 _m3_get_second_ingredient_3
1;2;2 259 pathaction!3_1;2;2,2206
Consider method^3_0;3;4,2563 2563 _m4_serve_shot_5
0;3;4 268 pathaction!3_0;3;4,119
Consider method^3_0;3;5,3027 3027 _m4_serve_shot_6
0;3;5 314 pathaction!3_0;3;5,94
Consider method^2_1;2,3378 3378 m3_get_second_ingredient
1;2 194 pathaction!2_1;2,3591
Consider method^3_2;2;2,3617 3617 _m3_get_second_ingredient_3
2;2;2 377 pathaction!3_2;2;2,2222
Consider method^3_10;1;3,1988 1988 _m2_get_first_ingredient_4
10;1;3 344 pathaction!3_10;1;3,2465
Consider method^2_2;2,3216 3216 m3_get_second_ingredient
2;2 251 pathaction!2_2;2,3571
Consider method^2_13;1,3678 3678 m9_do_fill_shot
13;1 34 pathaction!2_13;1,2262
Consider method^2_11;1,2715 2715 m7_do_fill_shot
11;1 39 pathaction!2_11;1,2290
Consider method^2_0;1,3129 3129 m2_get_first_ingredient
0;1 164 pathaction!2_0;1,3244
Consider method^3_4;3;1,2195 2195 _m4_serve_shot_2
4;3;1 222 pathaction!3_4;3;1,2099
Consider method^3_3;3;1,1257 1257 _m4_serve_shot_2
3;3;1 21 pathaction!3_3;3;1,2104
Consider method^3_8;3;4,2409 2409 _m4_serve_shot_5
8;3;4 356 pathaction!3_8;3;4,105
Consider method^3_9;2;1,4406 4406 _m3_get_second_ingredient_2
9;2;1 74 pathaction!3_9;2;1,615
Consider method^3_6;2;2,764 764 _m3_get_second_ingredient_3
6;2;2 361 pathaction!3_6;2;2,2216
Consider method^1_2,2651 2651 m0_do_cocktail_in_shot1
2 235 pathaction!1_2,156
Consider method^2_10;3,1561 1561 m4_serve_shot
10;3 199 pathaction!2_10;3,3261
Consider method^3_6;1;2,316 316 _m2_get_first_ingredient_3
6;1;2 348 pathaction!3_6;1;2,1022
Consider method^2_13;0,2605 2605 _m1_do_cocktail_in_shot2_4
13;0 172 pathaction!2_13;0,3269
Consider method^3_4;1;1,3465 3465 m9_do_fill_shot
4;1;1 77 pathaction!3_4;1;1,2243
Consider method^3_7;3;1,2448 2448 _m4_serve_shot_2
7;3;1 134 pathaction!3_7;3;1,2097
Consider method^3_5;1;3,3266 3266 _m2_get_first_ingredient_4
5;1;3 288 pathaction!3_5;1;3,2442
Consider method^3_8;3;1,1289 1289 _m4_serve_shot_2
8;3;1 345 pathaction!3_8;3;1,2100
Consider method^4_1;3;1;0,2091 2091 m5_do_clean_shot
1;3;1;0 19 pathaction!4_1;3;1;0,3019


CHECKING primitive solution of length 245 ...
true 384 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 229 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot13;]
true 80 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3;]
true 262 grasp[right,shot13;]
true 42 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 62 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1;]
true 73 clean-shot[shot13,ingredient3,right,left;]
true 159 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient5,right,shot13;]
true 94 fill-shot[shot13,ingredient5,right,left,dispenser5;]
true 149 pour-shot-to-used-shaker[shot13,ingredient5,shaker1,right,l1,l2;]
true 26 leave[right,shot13;]
true 254 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient5;]
true 189 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 347 nop[;]
true 82 grasp[left,shaker1;]
true 242 shake[cocktail4,ingredient3,ingredient5,shaker1,left,right;]
true 357 pour-shaker-to-shot[cocktail4,shot1,left,shaker1,l2,l1;]
true 100 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 84 clean-shaker[left,right,shaker1;]
true 104 leave[left,shaker1;]
true 372 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 41 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot13;]
true 187 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient5,dispenser2;]
true 392 grasp[right,shot13;]
true 379 clean-shot[shot13,ingredient5,right,left;]
true 180 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 365 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,right,l0,l1;]
true 290 clean-shot[shot13,ingredient2,right,left;]
true 263 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient5,right,shot13;]
true 173 fill-shot[shot13,ingredient5,right,left,dispenser5;]
true 65 pour-shot-to-used-shaker[shot13,ingredient5,shaker1,right,l1,l2;]
true 47 leave[right,shot13;]
true 156 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient5;]
true 210 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 30 nop[;]
true 318 grasp[left,shaker1;]
true 255 shake[cocktail7,ingredient2,ingredient5,shaker1,left,right;]
true 275 pour-shaker-to-shot[cocktail7,shot2,left,shaker1,l2,l1;]
true 72 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 168 clean-shaker[left,right,shaker1;]
true 51 leave[left,shaker1;]
true 46 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 253 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot15;]
true 38 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4;]
true 61 grasp[right,shot15;]
true 93 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 1 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 158 clean-shot[shot15,ingredient4,right,left;]
true 167 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,right,shot15;]
true 279 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 216 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,right,l1,l2;]
true 381 leave[right,shot15;]
true 11 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2;]
true 277 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 131 nop[;]
true 278 grasp[left,shaker1;]
true 267 shake[cocktail11,ingredient4,ingredient2,shaker1,left,right;]
true 63 pour-shaker-to-shot[cocktail11,shot3,left,shaker1,l2,l1;]
true 161 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 312 clean-shaker[left,right,shaker1;]
true 3 leave[left,shaker1;]
true 387 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 248 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot12;]
true 220 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser1,ingredient1;]
true 367 grasp[left,shot12;]
true 138 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 237 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1;]
true 316 clean-shot[shot12,ingredient1,left,right;]
true 359 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,left,shot12;]
true 265 fill-shot[shot12,ingredient2,left,right,dispenser2;]
true 270 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,left,l1,l2;]
true 90 leave[left,shot12;]
true 371 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient2;]
true 239 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 260 nop[;]
true 325 grasp[right,shaker1;]
true 157 shake[cocktail9,ingredient1,ingredient2,shaker1,right,left;]
true 212 pour-shaker-to-shot[cocktail9,shot4,right,shaker1,l2,l1;]
true 52 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 369 clean-shaker[right,left,shaker1;]
true 56 leave[right,shaker1;]
true 274 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 25 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot13;]
true 13 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient5,dispenser3;]
true 321 grasp[left,shot13;]
true 129 clean-shot[shot13,ingredient5,left,right;]
true 177 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 206 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 329 clean-shot[shot13,ingredient3,left,right;]
true 226 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,left,shot13;]
true 5 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 49 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 294 leave[left,shot13;]
true 363 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient1;]
true 155 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 208 nop[;]
true 195 grasp[right,shaker1;]
true 68 shake[cocktail10,ingredient3,ingredient1,shaker1,right,left;]
true 358 pour-shaker-to-shot[cocktail10,shot5,right,shaker1,l2,l1;]
true 76 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 174 clean-shaker[right,left,shaker1;]
true 296 leave[right,shaker1;]
true 142 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 291 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot14;]
true 9 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser2,ingredient2;]
true 352 grasp[left,shot14;]
true 139 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 24 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 303 clean-shot[shot14,ingredient2,left,right;]
true 350 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,left,shot14;]
true 380 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 110 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2;]
true 124 leave[left,shot14;]
true 232 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3;]
true 184 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 160 nop[;]
true 286 grasp[right,shaker1;]
true 256 shake[cocktail6,ingredient2,ingredient3,shaker1,right,left;]
true 6 pour-shaker-to-shot[cocktail6,shot6,right,shaker1,l2,l1;]
true 396 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 133 clean-shaker[right,left,shaker1;]
true 390 leave[right,shaker1;]
true 107 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 43 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot13;]
true 57 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient1,dispenser2;]
true 245 grasp[left,shot13;]
true 44 clean-shot[shot13,ingredient1,left,right;]
true 141 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 179 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 203 clean-shot[shot13,ingredient2,left,right;]
true 323 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient5,left,shot13;]
true 178 fill-shot[shot13,ingredient5,left,right,dispenser5;]
true 60 pour-shot-to-used-shaker[shot13,ingredient5,shaker1,left,l1,l2;]
true 127 leave[left,shot13;]
true 2 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient5;]
true 374 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 89 nop[;]
true 307 grasp[left,shaker1;]
true 246 shake[cocktail5,ingredient2,ingredient5,shaker1,left,right;]
true 165 pour-shaker-to-shot[cocktail5,shot7,left,shaker1,l2,l1;]
true 272 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 91 clean-shaker[left,right,shaker1;]
true 215 leave[left,shaker1;]
true 122 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 383 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot12;]
true 269 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient2,dispenser1;]
true 81 grasp[right,shot12;]
true 97 clean-shot[shot12,ingredient2,right,left;]
true 202 fill-shot[shot12,ingredient1,right,left,dispenser1;]
true 190 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,right,l0,l1;]
true 201 clean-shot[shot12,ingredient1,right,left;]
true 79 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient5,right,shot12;]
true 214 fill-shot[shot12,ingredient5,right,left,dispenser5;]
true 118 pour-shot-to-used-shaker[shot12,ingredient5,shaker1,right,l1,l2;]
true 152 leave[right,shot12;]
true 293 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient5;]
true 87 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 170 nop[;]
true 69 grasp[right,shaker1;]
true 327 shake[cocktail1,ingredient1,ingredient5,shaker1,right,left;]
true 287 pour-shaker-to-shot[cocktail1,shot8,right,shaker1,l2,l1;]
true 280 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 209 clean-shaker[right,left,shaker1;]
true 198 leave[right,shaker1;]
true 238 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 148 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot14;]
true 243 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient3,dispenser2;]
true 284 grasp[right,shot14;]
true 140 clean-shot[shot14,ingredient3,right,left;]
true 143 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 71 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,right,l0,l1;]
true 285 clean-shot[shot14,ingredient2,right,left;]
true 146 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,right,shot14;]
true 171 fill-shot[shot14,ingredient1,right,left,dispenser1;]
true 16 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,right,l1,l2;]
true 341 leave[right,shot14;]
true 343 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient1;]
true 98 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 339 nop[;]
true 145 grasp[right,shaker1;]
true 120 shake[cocktail2,ingredient2,ingredient1,shaker1,right,left;]
true 88 pour-shaker-to-shot[cocktail2,shot9,right,shaker1,l2,l1;]
true 289 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 346 clean-shaker[right,left,shaker1;]
true 99 leave[right,shaker1;]
true 218 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 298 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient1,shot12;]
true 182 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient5,dispenser1;]
true 336 grasp[right,shot12;]
true 191 clean-shot[shot12,ingredient5,right,left;]
true 200 fill-shot[shot12,ingredient1,right,left,dispenser1;]
true 332 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,right,l0,l1;]
true 258 clean-shot[shot12,ingredient1,right,left;]
true 309 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,right,shot12;]
true 66 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 31 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2;]
true 188 leave[right,shot12;]
true 64 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient1,ingredient2;]
true 330 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 132 nop[;]
true 393 grasp[left,shaker1;]
true 18 shake[cocktail8,ingredient1,ingredient2,shaker1,left,right;]
true 382 pour-shaker-to-shot[cocktail8,shot10,left,shaker1,l2,l1;]
true 231 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 311 clean-shaker[left,right,shaker1;]
true 252 leave[left,shaker1;]
true 176 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 326 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot11;]
true 12 __method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser4,ingredient4;]
true 283 grasp[right,shot11;]
true 183 fill-shot[shot11,ingredient4,right,left,dispenser4;]
true 385 pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,right,l0,l1;]
true 113 clean-shot[shot11,ingredient4,right,left;]
true 102 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,right,shot11;]
true 86 fill-shot[shot11,ingredient1,right,left,dispenser1;]
true 185 pour-shot-to-used-shaker[shot11,ingredient1,shaker1,right,l1,l2;]
true 55 leave[right,shot11;]
true 310 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient1;]
true 230 __method_precondition_m6_do_clean_shot_6_precondition[shot11,left;]
true 17 grasp[left,shot11;]
true 75 clean-shot[shot11,ingredient1,left,right;]
true 112 leave[left,shot11;]
true 378 grasp[right,shaker1;]
true 175 shake[cocktail3,ingredient4,ingredient1,shaker1,right,left;]
true 32 pour-shaker-to-shot[cocktail3,shot11,right,shaker1,l2,l1;]
true 45 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 247 clean-shaker[right,left,shaker1;]
true 36 leave[right,shaker1;]
true 23 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2;]
true 103 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient2,dispenser2;]
true 328 grasp[right,shot12;]
true 35 refill-shot[shot12,ingredient2,right,left,dispenser2;]
true 8 leave[right,shot12;]
true 197 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 241 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient5,dispenser3;]
true 162 grasp[left,shot13;]
true 123 clean-shot[shot13,ingredient5,left,right;]
true 186 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 224 leave[left,shot13;]
true 305 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 92 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient1,dispenser3;]
true 299 grasp[right,shot14;]
true 217 clean-shot[shot14,ingredient1,right,left;]
true 233 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 308 leave[right,shot14;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 2270
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 4540
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 6810
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 9080
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 11350
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 13620
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 15890
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 18160
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 20430
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 22700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 24970
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 27240
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 29510
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 31780
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 34050
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 36320
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 38590
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 40860
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 43130
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 45400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 47670
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 49940
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 52210
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 54480
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 56750
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 59020
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 61290
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 63560
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 65830
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 68100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 70370
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 72640
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 74910
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 77180
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 79450
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 81720
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 83990
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 86260
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 88530
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 90800
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 93070
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 95340
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 97610
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 99880
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 102150
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 104420
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 106690
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 108960
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 111230
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 113500
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 115770
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 118040
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 120310
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 122580
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 124850
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 127120
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 129390
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 131660
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 133930
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 136200
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 61
ICAPS: 138470
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 62
ICAPS: 140740
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 63
ICAPS: 143010
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 64
ICAPS: 145280
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 65
ICAPS: 147550
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 66
ICAPS: 149820
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 67
ICAPS: 152090
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 68
ICAPS: 154360
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 69
ICAPS: 156630
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 70
ICAPS: 158900
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 71
ICAPS: 161170
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 72
ICAPS: 163440
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 73
ICAPS: 165710
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 74
ICAPS: 167980
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 75
ICAPS: 170250
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 76
ICAPS: 172520
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 77
ICAPS: 174790
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 78
ICAPS: 177060
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 79
ICAPS: 179330
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 80
ICAPS: 181600
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 81
ICAPS: 183870
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 82
ICAPS: 186140
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 83
ICAPS: 188410
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 84
ICAPS: 190680
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 85
ICAPS: 192950
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 86
ICAPS: 195220
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 87
ICAPS: 197490
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 88
ICAPS: 199760
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 89
ICAPS: 202030
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 90
ICAPS: 204300
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 91
ICAPS: 206570
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 92
ICAPS: 208840
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 93
ICAPS: 211110
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 94
ICAPS: 213380
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 95
ICAPS: 215650
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 96
ICAPS: 217920
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 97
ICAPS: 220190
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 98
ICAPS: 222460
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 99
ICAPS: 224730
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 100
ICAPS: 227000
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 101
ICAPS: 229270
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 102
ICAPS: 231540
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 103
ICAPS: 233810
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 104
ICAPS: 236080
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 105
ICAPS: 238350
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 106
ICAPS: 240620
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 107
ICAPS: 242890
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 108
ICAPS: 245160
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 109
ICAPS: 247430
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 110
ICAPS: 249700
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 111
ICAPS: 251970
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 112
ICAPS: 254240
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 113
ICAPS: 256510
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 114
ICAPS: 258780
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 115
ICAPS: 261050
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 116
ICAPS: 263320
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 117
ICAPS: 265590
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 118
ICAPS: 267860
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 119
ICAPS: 270130
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 120
ICAPS: 272400
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 121
ICAPS: 274670
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 122
ICAPS: 276940
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 123
ICAPS: 279210
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 124
ICAPS: 281480
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 125
ICAPS: 283750
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 126
ICAPS: 286020
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 127
ICAPS: 288290
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 128
ICAPS: 290560
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 129
ICAPS: 292830
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 130
ICAPS: 295100
TSTG: 5
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 131
ICAPS: 297370
TSTG: 5
Method: 2147483647

RUNWATCH_RESULT TIMEOUT RETVAL 130 TIME_SECS 300.064 MEMPEAK_KBS 726308.864
