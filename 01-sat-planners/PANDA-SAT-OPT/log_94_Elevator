PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/Elevator/domain.hddl instances/Elevator/p14.hddl"


Planner Configuration
=====================
Domain: instances/Elevator/domain.hddl
Problem: instances/Elevator/p14.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p14.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Grounded planning graph ... done in 402ms.
	Number of Grounded Actions 1709
	Number of Grounded Literals 490
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 86
	number of tasks = 1552
	number of decomposition methods = 924
	number of predicates = 490
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 924
	number of epsilon methods = 0
	number of primitive tasks = 1466
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 86
	number of tasks = 1552
	number of decomposition methods = 924
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 924
	number of epsilon methods = 0
	number of primitive tasks = 1466
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 124ms.
	Number of Grounded Actions 1050
	Number of Grounded Literals 76
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 661
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 661
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 41ms.
	Number of Grounded Actions 1050
	Number of Grounded Literals 76
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 661
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 661
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 63
	number of tasks = 1113
	number of decomposition methods = 662
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 63
	number of tasks = 1113
	number of decomposition methods = 662
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Tasks 1050 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772050ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854771980
done
initial PDT has 20 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 14 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 8550
Size 8545 at 0/1050
Size 8338 at 500/1050
Size 6314 at 1000/1050
Size 6314
Size 6276 at 0/1050
Size 5398 at 500/1050
Size 3022 at 1000/1050
Size 3022
Size 2856 at 0/1050
Size 628 at 500/1050
Size 430 at 1000/1050
Size 430
Size 430 at 0/1050
Size 330 at 500/1050
Size 302 at 1000/1050
Size 302
Size 302 at 0/1050
Size 302 at 500/1050
Size 302 at 1000/1050
Size 302
Invariant time: 0.29
Number of invariants: 302
Invariant Clauses 4530
NUMBER OF CLAUSES 26843
NUMBER OF STATE CLAUSES 8569
NUMBER OF DECOMPOSITION CLAUSES 18274
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.92% 68.08% 0.0% 
NUMBER OF PATHS 14
Starting cryptominisat5.5
Setting starttime of solver to 1604512248315
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 34 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 20
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 103 will abort at 9223372036854770831
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 8154
NUMBER OF CLAUSES 59965
NUMBER OF STATE CLAUSES 16431
NUMBER OF DECOMPOSITION CLAUSES 43534
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 27.400000000000002% 72.60000000000001% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat5.5
Setting starttime of solver to 1604512248934
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 52 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 42 leafs
SHOP LEAFS 30
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770261
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 12986
NUMBER OF CLAUSES 88971
NUMBER OF STATE CLAUSES 25843
NUMBER OF DECOMPOSITION CLAUSES 63128
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.05% 70.95% 0.0% 
NUMBER OF PATHS 42
Starting cryptominisat5.5
Setting starttime of solver to 1604512249583
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 74 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 62 leafs
SHOP LEAFS 42
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854769628
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 19026
NUMBER OF CLAUSES 122852
NUMBER OF STATE CLAUSES 37354
NUMBER OF DECOMPOSITION CLAUSES 85498
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 30.41% 69.59% 0.0% 
NUMBER OF PATHS 62
Starting cryptominisat5.5
Setting starttime of solver to 1604512250261
Command exited with non-zero status 20
0.02 0.01

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 100 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 86 leafs
SHOP LEAFS 56
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768890
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 26274
NUMBER OF CLAUSES 161608
NUMBER OF STATE CLAUSES 50964
NUMBER OF DECOMPOSITION CLAUSES 110644
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.54% 68.46000000000001% 0.0% 
NUMBER OF PATHS 86
Starting cryptominisat5.5
Setting starttime of solver to 1604512251050
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 130 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 114 leafs
SHOP LEAFS 72
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768124
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 34730
NUMBER OF CLAUSES 205239
NUMBER OF STATE CLAUSES 66673
NUMBER OF DECOMPOSITION CLAUSES 138566
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 32.49% 67.51% 0.0% 
NUMBER OF PATHS 114
Starting cryptominisat5.5
Setting starttime of solver to 1604512251839
Command exited with non-zero status 20
0.07 0.00

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... done
initial PDT has 164 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854767377
done
PDT has 146 leafs
SHOP LEAFS 90
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 44394
NUMBER OF CLAUSES 253745
NUMBER OF STATE CLAUSES 84481
NUMBER OF DECOMPOSITION CLAUSES 169264
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 33.29% 66.71000000000001% 0.0% 
NUMBER OF PATHS 146
Starting cryptominisat5.5
Setting starttime of solver to 1604512252814
Command exited with non-zero status 20
0.11 0.00

Time command gave the following runtime for the solver: 110
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... done
initial PDT has 202 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 123 will abort at 9223372036854766307
done
PDT has 182 leafs
SHOP LEAFS 110
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 55266
NUMBER OF CLAUSES 307126
NUMBER OF STATE CLAUSES 104388
NUMBER OF DECOMPOSITION CLAUSES 202738
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 33.99% 66.01% 0.0% 
NUMBER OF PATHS 182
Starting cryptominisat5.5
Setting starttime of solver to 1604512253862
Command exited with non-zero status 20
0.20 0.01

Time command gave the following runtime for the solver: 210
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 12
Generating initial PDT ... done
initial PDT has 244 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 222 leafs
SHOP LEAFS 132
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854765241
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 67346
NUMBER OF CLAUSES 365382
NUMBER OF STATE CLAUSES 126394
NUMBER OF DECOMPOSITION CLAUSES 238988
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 34.59% 65.41% 0.0% 
NUMBER OF PATHS 222
Starting cryptominisat5.5
Setting starttime of solver to 1604512254964
Command exited with non-zero status 20
32.28 0.04

Time command gave the following runtime for the solver: 32320
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 13
Generating initial PDT ... done
initial PDT has 290 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 103 will abort at 9223372036854732028
done
PDT has 266 leafs
SHOP LEAFS 156
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 80634
NUMBER OF CLAUSES 428513
NUMBER OF STATE CLAUSES 150499
NUMBER OF DECOMPOSITION CLAUSES 278014
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 35.12% 64.88% 0.0% 
NUMBER OF PATHS 266
Starting cryptominisat5.5
Setting starttime of solver to 1604512288404
Command exited with non-zero status 20
58.40 0.04

Time command gave the following runtime for the solver: 58440
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 14
Generating initial PDT ... done
initial PDT has 340 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854672400
done
PDT has 314 leafs
SHOP LEAFS 182
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 95130
NUMBER OF CLAUSES 496519
NUMBER OF STATE CLAUSES 176703
NUMBER OF DECOMPOSITION CLAUSES 319816
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 35.59% 64.41% 0.0% 
NUMBER OF PATHS 314
Starting cryptominisat5.5
Setting starttime of solver to 1604512348158
Command exited with non-zero status 10
4.46 0.01

Time command gave the following runtime for the solver: 4470
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^8_0;2;3;3;3;3;3;3,128 128 m5_do_take_all
0;2;3;3;3;3;3;3 27 pathaction!8_0;2;3;3;3;3;3;3,49
Consider method^11_0;3;1;3;3;3;3;3;2;2;2,471 471 m2_do_check_floor
0;3;1;3;3;3;3;3;2;2;2 170 pathaction!11_0;3;1;3;3;3;3;3;2;2;2,717
Consider method^12_0;3;1;3;3;3;3;3;3;3;3;2,130 130 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;2 284 pathaction!12_0;3;1;3;3;3;3;3;3;3;3;2,713
Consider method^10_0;2;3;3;3;3;3;3;3;2,18 18 m3_do_check_floor
0;2;3;3;3;3;3;3;3;2 165 pathaction!10_0;2;3;3;3;3;3;3;3;2,714
Consider method^10_0;3;1;3;3;3;3;3;3;3,255 255 m10_do_throw_all
0;3;1;3;3;3;3;3;3;3 39 pathaction!10_0;3;1;3;3;3;3;3;3;3,14
Consider method^7_0;2;3;3;3;3;3,334 334 m6_do_take_all
0;2;3;3;3;3;3 142 pathaction!7_0;2;3;3;3;3;3,39
Consider method^5_0;2;3;3;2,139 139 m2_do_check_floor
0;2;3;3;2 193 pathaction!5_0;2;3;3;2,723
Consider method^6_0;3;1;3;3;2,627 627 m3_do_check_floor
0;3;1;3;3;2 268 pathaction!6_0;3;1;3;3;2,716
Consider method^13_0;2;3;3;3;3;3;3;3;3;3;3;2,554 554 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;3;3;2 290 pathaction!13_0;2;3;3;3;3;3;3;3;3;3;3;2,716
Consider method^3_0;2;3,59 59 m5_do_take_all
0;2;3 211 pathaction!3_0;2;3,48
Consider method^10_0;2;3;3;3;3;3;3;3;3,133 133 m6_do_take_all
0;2;3;3;3;3;3;3;3;3 178 pathaction!10_0;2;3;3;3;3;3;3;3;3,41
Consider method^9_0;2;3;3;3;3;3;3;2,380 380 m3_do_check_floor
0;2;3;3;3;3;3;3;2 126 pathaction!9_0;2;3;3;3;3;3;3;2,718
Consider method^8_0;3;1;3;3;3;2;2,44 44 m1_do_check_floor
0;3;1;3;3;3;2;2 254 pathaction!8_0;3;1;3;3;3;2;2,709
Consider method^4_0;2;3;3,527 527 m6_do_take_all
0;2;3;3 166 pathaction!4_0;2;3;3,53
Consider method^11_0;3;1;3;3;3;3;3;3;3;2,613 613 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;2 300 pathaction!11_0;3;1;3;3;3;3;3;3;3;2,719
Consider method^9_0;2;3;3;3;3;3;3;3,401 401 m5_do_take_all
0;2;3;3;3;3;3;3;3 190 pathaction!9_0;2;3;3;3;3;3;3;3,45
Consider method^7_0;3;1;3;3;3;2,105 105 m2_do_check_floor
0;3;1;3;3;3;2 200 pathaction!7_0;3;1;3;3;3;2,709
Consider method^9_0;3;1;3;3;3;3;3;3,237 237 m9_do_throw_all
0;3;1;3;3;3;3;3;3 109 pathaction!9_0;3;1;3;3;3;3;3;3,24
Consider method^6_0;2;3;3;3;2,160 160 m3_do_check_floor
0;2;3;3;3;2 223 pathaction!6_0;2;3;3;3;2,711
Consider method^9_0;2;3;3;3;3;2;2;2,196 196 m1_do_check_floor
0;2;3;3;3;3;2;2;2 266 pathaction!9_0;2;3;3;3;3;2;2;2,712
Consider method^9_0;3;1;3;3;3;3;2;2,190 190 m1_do_check_floor
0;3;1;3;3;3;3;2;2 226 pathaction!9_0;3;1;3;3;3;3;2;2,715
Consider method^4_0;3;1;3,3 3 m9_do_throw_all
0;3;1;3 112 pathaction!4_0;3;1;3,17
Consider method^10_0;3;1;3;3;3;3;3;2;2,212 212 m2_do_check_floor
0;3;1;3;3;3;3;3;2;2 128 pathaction!10_0;3;1;3;3;3;3;3;2;2,717
Consider method^11_0;2;3;3;3;3;3;3;3;2;2,267 267 m3_do_check_floor
0;2;3;3;3;3;3;3;3;2;2 78 pathaction!11_0;2;3;3;3;3;3;3;3;2;2,714
Consider method^5_0;3;1;3;3,498 498 m10_do_throw_all
0;3;1;3;3 295 pathaction!5_0;3;1;3;3,31
Consider method^9_0;2;3;3;3;3;3;2;2,0 0 m3_do_check_floor
0;2;3;3;3;3;3;2;2 52 pathaction!9_0;2;3;3;3;3;3;2;2,722
Consider method^7_0;2;3;3;3;2;2,559 559 m1_do_check_floor
0;2;3;3;3;2;2 80 pathaction!7_0;2;3;3;3;2;2,711
Consider method^4_0;3;1;2,454 454 m2_do_check_floor
0;3;1;2 45 pathaction!4_0;3;1;2,710
Consider method^13_0;2;3;3;3;3;3;3;3;3;3;3;3,283 283 m4_do_take_all
0;2;3;3;3;3;3;3;3;3;3;3;3 69 pathaction!13_0;2;3;3;3;3;3;3;3;3;3;3;3,43
Consider method^11_0;2;3;3;3;3;3;3;3;3;2,341 341 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;2 72 pathaction!11_0;2;3;3;3;3;3;3;3;3;2,708
Consider method^2_0;2,361 361 m5_do_take_all
0;2 288 pathaction!2_0;2,52
Consider method^5_0;3;1;3;2,194 194 m2_do_check_floor
0;3;1;3;2 161 pathaction!5_0;3;1;3;2,724
Consider method^7_0;2;3;3;3;3;2,420 420 m3_do_check_floor
0;2;3;3;3;3;2 252 pathaction!7_0;2;3;3;3;3;2,712
Consider method^11_0;3;1;3;3;3;3;3;3;3;3,464 464 m10_do_throw_all
0;3;1;3;3;3;3;3;3;3;3 63 pathaction!11_0;3;1;3;3;3;3;3;3;3;3,26
Consider method^12_0;2;3;3;3;3;3;3;3;2;2;2,550 550 m1_do_check_floor
0;2;3;3;3;3;3;3;3;2;2;2 169 pathaction!12_0;2;3;3;3;3;3;3;3;2;2;2,714
Consider method^7_0;2;3;3;2;2;2,306 306 m2_do_check_floor
0;2;3;3;2;2;2 278 pathaction!7_0;2;3;3;2;2;2,723
Consider method^11_0;2;3;3;3;3;3;3;3;3;3,231 231 m5_do_take_all
0;2;3;3;3;3;3;3;3;3;3 127 pathaction!11_0;2;3;3;3;3;3;3;3;3;3,35
Consider method^12_0;2;3;3;3;3;3;3;3;3;3;3,228 228 m6_do_take_all
0;2;3;3;3;3;3;3;3;3;3;3 76 pathaction!12_0;2;3;3;3;3;3;3;3;3;3;3,47
Consider method^5_0;3;1;2;2,150 150 m3_do_check_floor
0;3;1;2;2 79 pathaction!5_0;3;1;2;2,710
Consider method^6_0;3;1;2;2;2,156 156 m1_do_check_floor
0;3;1;2;2;2 210 pathaction!6_0;3;1;2;2;2,710
Consider method^2_0;3,252 252 m7_do_start_throw_all
0;3 51 pathaction!2_0;3,686
Consider method^13_0;2;3;3;3;3;3;3;3;3;3;2;2,72 72 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;3;2;2 46 pathaction!13_0;2;3;3;3;3;3;3;3;3;3;2;2,720
Consider method^8_0;3;1;3;3;3;3;2,350 350 m2_do_check_floor
0;3;1;3;3;3;3;2 17 pathaction!8_0;3;1;3;3;3;3;2,715
Consider method^12_0;3;1;3;3;3;3;3;2;2;2;2,634 634 m1_do_check_floor
0;3;1;3;3;3;3;3;2;2;2;2 164 pathaction!12_0;3;1;3;3;3;3;3;2;2;2;2,717
Consider method^6_0;2;3;3;3;3,92 92 m5_do_take_all
0;2;3;3;3;3 179 pathaction!6_0;2;3;3;3;3,38
Consider method^5_0;2;3;2;2,602 602 m1_do_check_floor
0;2;3;2;2 94 pathaction!5_0;2;3;2;2,726
Consider method^2_0;1,567 567 m1_do_check_floor
0;1 49 pathaction!2_0;1,725
Consider method^8_0;2;3;3;3;3;2;2,377 377 m3_do_check_floor
0;2;3;3;3;3;2;2 25 pathaction!8_0;2;3;3;3;3;2;2,712
Consider method^6_0;2;3;3;2;2,207 207 m3_do_check_floor
0;2;3;3;2;2 271 pathaction!6_0;2;3;3;2;2,723
Consider method^7_0;3;1;3;3;2;2,566 566 m2_do_check_floor
0;3;1;3;3;2;2 259 pathaction!7_0;3;1;3;3;2;2,716
Consider method^10_0;2;3;3;3;3;3;2;2;2,393 393 m1_do_check_floor
0;2;3;3;3;3;3;2;2;2 48 pathaction!10_0;2;3;3;3;3;3;2;2;2,722
Consider method^13_0;3;1;3;3;3;3;3;3;3;3;2;2,500 500 m1_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;2;2 55 pathaction!13_0;3;1;3;3;3;3;3;3;3;3;2;2,713
Consider method^3_0;3;1,573 573 m9_do_throw_all
0;3;1 84 pathaction!3_0;3;1,23
Consider method^10_0;2;3;3;3;3;3;3;2;2,213 213 m1_do_check_floor
0;2;3;3;3;3;3;3;2;2 59 pathaction!10_0;2;3;3;3;3;3;3;2;2,718
Consider method^7_0;3;1;3;3;3;3,69 69 m9_do_throw_all
0;3;1;3;3;3;3 1 pathaction!7_0;3;1;3;3;3;3,16
Consider method^6_0;3;1;3;3;3,422 422 m9_do_throw_all
0;3;1;3;3;3 111 pathaction!6_0;3;1;3;3;3,23
Consider method^12_0;2;3;3;3;3;3;3;3;3;3;2,555 555 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;3;2 286 pathaction!12_0;2;3;3;3;3;3;3;3;3;3;2,720
Consider method^8_0;2;3;3;3;3;3;2,657 657 m2_do_check_floor
0;2;3;3;3;3;3;2 207 pathaction!8_0;2;3;3;3;3;3;2,722
Consider method^6_0;3;1;3;2;2,563 563 m1_do_check_floor
0;3;1;3;2;2 192 pathaction!6_0;3;1;3;2;2,724
Consider method^12_0;2;3;3;3;3;3;3;3;3;2;2,337 337 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;2;2 251 pathaction!12_0;2;3;3;3;3;3;3;3;3;2;2,708
Consider method^11_0;3;1;3;3;3;3;3;3;2;2,257 257 m1_do_check_floor
0;3;1;3;3;3;3;3;3;2;2 3 pathaction!11_0;3;1;3;3;3;3;3;3;2;2,707
Consider method^3_0;2;2,289 289 m3_do_check_floor
0;2;2 246 pathaction!3_0;2;2,721
Consider method^9_0;3;1;3;3;3;3;3;2,9 9 m2_do_check_floor
0;3;1;3;3;3;3;3;2 116 pathaction!9_0;3;1;3;3;3;3;3;2,717
Consider method^12_0;3;1;3;3;3;3;3;3;3;3;3,340 340 m8_do_throw_all
0;3;1;3;3;3;3;3;3;3;3;3 26 pathaction!12_0;3;1;3;3;3;3;3;3;3;3;3,20
Consider method^4_0;2;2;2,290 290 m1_do_check_floor
0;2;2;2 81 pathaction!4_0;2;2;2,721
Consider method^8_0;2;3;3;2;2;2;2,111 111 m1_do_check_floor
0;2;3;3;2;2;2;2 260 pathaction!8_0;2;3;3;2;2;2;2,723
Consider method^8_0;3;1;3;3;3;3;3,427 427 m10_do_throw_all
0;3;1;3;3;3;3;3 31 pathaction!8_0;3;1;3;3;3;3;3,22
Consider method^12_0;3;1;3;3;3;3;3;3;3;2;2,603 603 m1_do_check_floor
0;3;1;3;3;3;3;3;3;3;2;2 154 pathaction!12_0;3;1;3;3;3;3;3;3;3;2;2,719
Consider method^10_0;3;1;3;3;3;3;3;3;2,369 369 m2_do_check_floor
0;3;1;3;3;3;3;3;3;2 249 pathaction!10_0;3;1;3;3;3;3;3;3;2,707
Consider method^4_0;2;3;2,656 656 m3_do_check_floor
0;2;3;2 198 pathaction!4_0;2;3;2,726
Consider method^0_,661 661 __top_3
 120 pathaction!0_,1112
Consider method^5_0;2;3;3;3,396 396 m5_do_take_all
0;2;3;3;3 60 pathaction!5_0;2;3;3;3,50
Consider method^1_0,480 480 m0_do_problem
0 156 pathaction!1_0,685
Consider method^8_0;3;1;3;3;2;2;2,554 554 m1_do_check_floor
0;3;1;3;3;2;2;2 208 pathaction!8_0;3;1;3;3;2;2;2,716


CHECKING primitive solution of length 144 ...
true 220 __method_precondition_m0_do_problem_0_precondition[f0;]
true 275 __method_precondition_m1_do_check_floor_1_precondition[f0;]
true 130 nop[;]
true 194 __method_precondition_m5_do_take_all_5_precondition[f0,f3,p13;]
true 212 up[f0,f3;]
true 152 __method_precondition_m3_do_check_floor_3_precondition[f3,p13;]
true 8 board[f3,p13;]
true 83 __method_precondition_m1_do_check_floor_1_precondition[f3;]
true 47 nop[;]
true 299 __method_precondition_m5_do_take_all_5_precondition[f3,f14,p12;]
true 224 up[f3,f14;]
true 37 __method_precondition_m3_do_check_floor_3_precondition[f14,p12;]
true 36 board[f14,p12;]
true 107 __method_precondition_m1_do_check_floor_1_precondition[f14;]
true 54 nop[;]
true 77 __method_precondition_m6_do_take_all_6_precondition[f14,f9,p4;]
true 50 down[f14,f9;]
true 7 __method_precondition_m2_do_check_floor_2_precondition[f9,p13;]
true 186 depart[f9,p13;]
true 272 __method_precondition_m3_do_check_floor_3_precondition[f9,p4;]
true 93 board[f9,p4;]
true 301 __method_precondition_m2_do_check_floor_2_precondition[f9,p12;]
true 214 depart[f9,p12;]
true 38 __method_precondition_m1_do_check_floor_1_precondition[f9;]
true 6 nop[;]
true 41 __method_precondition_m5_do_take_all_5_precondition[f9,f12,p8;]
true 196 up[f9,f12;]
true 258 __method_precondition_m3_do_check_floor_3_precondition[f12,p8;]
true 243 board[f12,p8;]
true 143 __method_precondition_m1_do_check_floor_1_precondition[f12;]
true 197 nop[;]
true 33 __method_precondition_m5_do_take_all_5_precondition[f12,f16,p2;]
true 67 up[f12,f16;]
true 264 __method_precondition_m3_do_check_floor_3_precondition[f16,p11;]
true 217 board[f16,p11;]
true 230 __method_precondition_m3_do_check_floor_3_precondition[f16,p2;]
true 73 board[f16,p2;]
true 150 __method_precondition_m1_do_check_floor_1_precondition[f16;]
true 279 nop[;]
true 131 __method_precondition_m6_do_take_all_6_precondition[f16,f7,p1;]
true 146 down[f16,f7;]
true 225 __method_precondition_m2_do_check_floor_2_precondition[f7,p2;]
true 102 depart[f7,p2;]
true 181 __method_precondition_m3_do_check_floor_3_precondition[f7,p1;]
true 74 board[f7,p1;]
true 9 __method_precondition_m1_do_check_floor_1_precondition[f7;]
true 206 nop[;]
true 204 __method_precondition_m5_do_take_all_5_precondition[f7,f13,p3;]
true 183 up[f7,f13;]
true 222 __method_precondition_m3_do_check_floor_3_precondition[f13,p3;]
true 253 board[f13,p3;]
true 85 __method_precondition_m1_do_check_floor_1_precondition[f13;]
true 16 nop[;]
true 135 __method_precondition_m5_do_take_all_5_precondition[f13,f22,p7;]
true 125 up[f13,f22;]
true 242 __method_precondition_m3_do_check_floor_3_precondition[f22,p9;]
true 5 board[f22,p9;]
true 187 __method_precondition_m3_do_check_floor_3_precondition[f22,p7;]
true 215 board[f22,p7;]
true 65 __method_precondition_m1_do_check_floor_1_precondition[f22;]
true 195 nop[;]
true 160 __method_precondition_m6_do_take_all_6_precondition[f22,f8,p0;]
true 250 down[f22,f8;]
true 129 __method_precondition_m3_do_check_floor_3_precondition[f8,p0;]
true 174 board[f8,p0;]
true 11 __method_precondition_m1_do_check_floor_1_precondition[f8;]
true 203 nop[;]
true 151 __method_precondition_m5_do_take_all_5_precondition[f8,f20,p5;]
true 244 up[f8,f20;]
true 269 __method_precondition_m3_do_check_floor_3_precondition[f20,p5;]
true 291 board[f20,p5;]
true 29 __method_precondition_m1_do_check_floor_1_precondition[f20;]
true 277 nop[;]
true 56 __method_precondition_m6_do_take_all_6_precondition[f20,f1,p6;]
true 302 down[f20,f1;]
true 123 __method_precondition_m1_do_check_floor_1_precondition[f1;]
true 205 nop[;]
true 148 __method_precondition_m4_do_take_all_4_precondition[f1;]
true 273 nop[;]
true 136 __method_precondition_m7_do_start_throw_all_7_precondition[f1;]
true 298 __method_precondition_m9_do_throw_all_9_precondition[f1,f2,p3;]
true 237 up[f1,f2;]
true 10 __method_precondition_m2_do_check_floor_2_precondition[f2,p3;]
true 262 depart[f2,p3;]
true 282 __method_precondition_m3_do_check_floor_3_precondition[f2,p10;]
true 255 board[f2,p10;]
true 238 __method_precondition_m1_do_check_floor_1_precondition[f2;]
true 176 nop[;]
true 162 __method_precondition_m9_do_throw_all_9_precondition[f2,f21,p7;]
true 19 up[f2,f21;]
true 34 __method_precondition_m2_do_check_floor_2_precondition[f21,p7;]
true 137 depart[f21,p7;]
true 140 __method_precondition_m1_do_check_floor_1_precondition[f21;]
true 14 nop[;]
true 100 __method_precondition_m10_do_throw_all_10_precondition[f21,f1,p0;]
true 265 down[f21,f1;]
true 103 __method_precondition_m3_do_check_floor_3_precondition[f1,p6;]
true 159 board[f1,p6;]
true 18 __method_precondition_m2_do_check_floor_2_precondition[f1,p0;]
true 96 depart[f1,p0;]
true 245 __method_precondition_m1_do_check_floor_1_precondition[f1;]
true 144 nop[;]
true 68 __method_precondition_m9_do_throw_all_9_precondition[f1,f23,p11;]
true 12 up[f1,f23;]
true 40 __method_precondition_m2_do_check_floor_2_precondition[f23,p11;]
true 270 depart[f23,p11;]
true 64 __method_precondition_m1_do_check_floor_1_precondition[f23;]
true 248 nop[;]
true 61 __method_precondition_m9_do_throw_all_9_precondition[f23,f24,p1;]
true 158 up[f23,f24;]
true 155 __method_precondition_m2_do_check_floor_2_precondition[f24,p1;]
true 21 depart[f24,p1;]
true 287 __method_precondition_m1_do_check_floor_1_precondition[f24;]
true 263 nop[;]
true 227 __method_precondition_m10_do_throw_all_10_precondition[f24,f19,p4;]
true 114 down[f24,f19;]
true 292 __method_precondition_m2_do_check_floor_2_precondition[f19,p6;]
true 168 depart[f19,p6;]
true 293 __method_precondition_m2_do_check_floor_2_precondition[f19,p4;]
true 15 depart[f19,p4;]
true 53 __method_precondition_m2_do_check_floor_2_precondition[f19,p9;]
true 106 depart[f19,p9;]
true 281 __method_precondition_m1_do_check_floor_1_precondition[f19;]
true 188 nop[;]
true 43 __method_precondition_m9_do_throw_all_9_precondition[f19,f26,p8;]
true 30 up[f19,f26;]
true 22 __method_precondition_m2_do_check_floor_2_precondition[f26,p8;]
true 92 depart[f26,p8;]
true 134 __method_precondition_m1_do_check_floor_1_precondition[f26;]
true 256 nop[;]
true 267 __method_precondition_m10_do_throw_all_10_precondition[f26,f17,p10;]
true 285 down[f26,f17;]
true 20 __method_precondition_m2_do_check_floor_2_precondition[f17,p10;]
true 233 depart[f17,p10;]
true 218 __method_precondition_m1_do_check_floor_1_precondition[f17;]
true 32 nop[;]
true 232 __method_precondition_m10_do_throw_all_10_precondition[f17,f4,p5;]
true 184 down[f17,f4;]
true 42 __method_precondition_m2_do_check_floor_2_precondition[f4,p5;]
true 75 depart[f4,p5;]
true 163 __method_precondition_m1_do_check_floor_1_precondition[f4;]
true 283 nop[;]
true 247 __method_precondition_m8_do_throw_all_8_precondition[f4;]
true 239 nop[;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 128
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 256
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 384
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 4
ICAPS: 512
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 5
ICAPS: 640
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 6
ICAPS: 768
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 7
ICAPS: 896
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
LEN 8
ICAPS: 1024
TSTG: 2147483647
Method: 2147483647
DP max: 9
Taking minimum: 9
LEN 9
ICAPS: 1152
TSTG: 2147483647
Method: 2147483647
DP max: 10
Taking minimum: 10
LEN 10
ICAPS: 1280
TSTG: 2147483647
Method: 2147483647
DP max: 11
Taking minimum: 11
LEN 11
ICAPS: 1408
TSTG: 2147483647
Method: 2147483647
DP max: 12
Taking minimum: 12
LEN 12
ICAPS: 1536
TSTG: 2147483647
Method: 2147483647
DP max: 13
Taking minimum: 13
LEN 13
ICAPS: 1664
TSTG: 2147483647
Method: 2147483647
DP max: 14
Taking minimum: 14
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 71
  lower bound = 12

Running SAT search with cost bound = 41
==================================================
  upper bound = 71
  lower bound = 12
LEN 41
ICAPS: 5248
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 100 will abort at 9223372036854665619
DP max: 42
Taking minimum: 42
Generating initial PDT ... done
initial PDT has 3364 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 3282 leafs
SHOP LEAFS 1722
Assignment implications
Generating clauses representing decomposition ... done
At most K: 2796ms input: 37428 K = 41
Number of actions Formula: 3492ms for 3106482 clauses
Layers: 12 paths 3282
Layer 1 g 0 = 0 - 1 / 0 clauses 5390686
Layer 1 g 1 = 2 - 3 / 2 clauses 5390686
Layer 1 g 2 = 4 - 5 / 4 clauses 5390686
Layer 1 g 3 = 6 - 7 / 6 clauses 5390686
Layer 1 g 4 = 8 - 9 / 8 clauses 5390686
Layer 1 g 5 = 10 - 11 / 10Still waiting ... running for 90505 will abort at 9223372036854665619
 clauses 5390686
Layer 1 g 6 = 12 - 13 / 12 clauses 5390686
Layer 1 g 7 = 14 - 15 / 14
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 218.792 MEMPEAK_KBS 8006454.272
