PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/RoverG/domain.hddl instances/RoverG/p06.hddl"


Planner Configuration
=====================
Domain: instances/RoverG/domain.hddl
Problem: instances/RoverG/p06.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p06.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 26
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Compiling negative preconditions ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Compiling split parameters ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Grounded planning graph ... done in 299ms.
	Number of Grounded Actions 711
	Number of Grounded Literals 433
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Two Way TDG ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Grounding ... done.
	number of abstract tasks = 263
	number of tasks = 907
	number of decomposition methods = 855
	number of predicates = 690
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 263
	number of tasks = 907
	number of decomposition methods = 855
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 83ms.
	Number of Grounded Actions 644
	Number of Grounded Literals 82
	number of abstract tasks = 263
	number of tasks = 907
	number of decomposition methods = 855
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 263
	number of tasks = 907
	number of decomposition methods = 855
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 31ms.
	Number of Grounded Actions 644
	Number of Grounded Literals 82
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Tasks 644 - 119
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772113ms

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854772015
done
initial PDT has 120 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 84 leafs
SHOP LEAFS 48
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 9963
Size 9962 at 0/644
Size 3555 at 500/644
Size 3555
Size 3555 at 0/644
Size 460 at 500/644
Size 460
Size 460 at 0/644
Size 166 at 500/644
Size 166
Size 166 at 0/644
Size 166 at 500/644
Size 166
Invariant time: 0.169
Number of invariants: 166
Invariant Clauses 14110
NUMBER OF CLAUSES 43450
NUMBER OF STATE CLAUSES 29140
NUMBER OF DECOMPOSITION CLAUSES 14310
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 67.07000000000001% 32.93% 0.0% 
NUMBER OF PATHS 84
Starting cryptominisat5.5
Setting starttime of solver to 1604520591026
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854770650
done
initial PDT has 180 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 135 leafs
SHOP LEAFS 54
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 22576
NUMBER OF CLAUSES 135414
NUMBER OF STATE CLAUSES 48074
NUMBER OF DECOMPOSITION CLAUSES 87340
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 35.5% 64.5% 0.0% 
NUMBER OF PATHS 135
Starting cryptominisat5.5
Setting starttime of solver to 1604520592137
Command exited with non-zero status 10
0.06 0.00

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_1;4,81 81 m12_send_rock_data
1;4 34 pathaction!2_1;4,148
Consider method^4_3;1;1;2,346 346 m3_do_navigate2
3;1;1;2 19 pathaction!4_3;1;1;2,744
Consider method^3_2;4;1,356 356 m1_do_navigate1
2;4;1 145 pathaction!3_2;4;1,117
Consider method^3_5;2;2,673 673 m3_do_navigate2
5;2;2 22 pathaction!3_5;2;2,805
Consider method^2_0;1,841 841 m1_do_navigate1
0;1 121 pathaction!2_0;1,119
Consider method^4_0;4;1;2,15 15 m2_do_navigate2
0;4;1;2 117 pathaction!4_0;4;1;2,725
Consider method^4_5;1;1;2,346 346 m3_do_navigate2
5;1;1;2 94 pathaction!4_5;1;1;2,744
Consider method^3_2;1;2,172 172 m4_do_navigate2
2;1;2 129 pathaction!3_2;1;2,722
Consider method^3_3;4;1,601 601 m1_do_navigate1
3;4;1 53 pathaction!3_3;4;1,115
Consider method^2_5;4,198 198 m14_send_image_data
5;4 157 pathaction!2_5;4,138
Consider method^3_4;4;1,631 631 m1_do_navigate1
4;4;1 30 pathaction!3_4;4;1,130
Consider method^2_0;4,675 675 m8_send_soil_data
0;4 56 pathaction!2_0;4,170
Consider method^2_4;4,92 92 m14_send_image_data
4;4 69 pathaction!2_4;4,139
Consider method^4_4;1;1;2,303 303 m3_do_navigate2
4;1;1;2 130 pathaction!4_4;1;1;2,885
Consider method^3_4;2;2,192 192 m2_do_navigate2
4;2;2 132 pathaction!3_4;2;2,822
Consider method^1_4,217 217 m13_get_image_data
4 67 pathaction!1_4,40
Consider method^4_3;4;1;2,673 673 m3_do_navigate2
3;4;1;2 119 pathaction!4_3;4;1;2,805
Consider method^4_2;1;2;3,774 774 m3_do_navigate2
2;1;2;3 33 pathaction!4_2;1;2;3,733
Consider method^4_4;4;1;2,151 151 m3_do_navigate2
4;4;1;2 82 pathaction!4_4;4;1;2,737
Consider method^1_3,210 210 m13_get_image_data
3 52 pathaction!1_3,39
Consider method^1_5,523 523 m13_get_image_data
5 65 pathaction!1_5,38
Consider method^3_0;4;1,219 219 m1_do_navigate1
0;4;1 16 pathaction!3_0;4;1,119
Consider method^3_3;1;1,290 290 m1_do_navigate1
3;1;1 126 pathaction!3_3;1;1,110
Consider method^2_5;2,601 601 m1_do_navigate1
5;2 36 pathaction!2_5;2,115
Consider method^2_3;2,80 80 m0_do_navigate1
3;2 127 pathaction!2_3;2,110
Consider method^2_4;1,773 773 m15_do_calibrate
4;1 80 pathaction!2_4;1,399
Consider method^3_1;1;2,102 102 m4_do_navigate2
1;1;2 87 pathaction!3_1;1;2,855
Consider method^3_0;1;2,380 380 m4_do_navigate2
0;1;2 163 pathaction!3_0;1;2,851
Consider method^2_2;2,833 833 m5_empty_store
2;2 108 pathaction!2_2;2,135
Consider method^4_2;4;1;2,19 19 m3_do_navigate2
2;4;1;2 85 pathaction!4_2;4;1;2,746
Consider method^2_2;4,633 633 m11_send_rock_data
2;4 151 pathaction!2_2;4,149
Consider method^2_4;2,575 575 m1_do_navigate1
4;2 115 pathaction!2_4;2,127
Consider method^2_2;1,260 260 m1_do_navigate1
2;1 128 pathaction!2_2;1,113
Consider method^4_5;4;1;2,393 393 m3_do_navigate2
5;4;1;2 49 pathaction!4_5;4;1;2,801
Consider method^2_1;2,828 828 m6_empty_store
1;2 112 pathaction!2_1;2,133
Consider method^2_1;1,150 150 m1_do_navigate1
1;1 158 pathaction!2_1;1,123
Consider method^1_0,232 232 m7_get_soil_data
0 1 pathaction!1_0,97
Consider method^1_1,776 776 m10_get_rock_data
1 100 pathaction!1_1,344
Consider method^0_,855 855 __top_1
 137 pathaction!0_,907
Consider method^2_3;1,141 141 m15_do_calibrate
3;1 89 pathaction!2_3;1,401
Consider method^4_1;1;2;3,821 821 m3_do_navigate2
1;1;2;3 0 pathaction!4_1;1;2;3,785
Consider method^3_5;1;1,290 290 m1_do_navigate1
5;1;1 40 pathaction!3_5;1;1,110
Consider method^4_0;1;2;3,653 653 m3_do_navigate2
0;1;2;3 64 pathaction!4_0;1;2;3,852
Consider method^2_3;4,120 120 m14_send_image_data
3;4 73 pathaction!2_3;4,140
Consider method^2_0;2,582 582 m5_empty_store
0;2 71 pathaction!2_0;2,133
Consider method^3_5;4;1,216 216 m1_do_navigate1
5;4;1 10 pathaction!3_5;4;1,129
Consider method^2_5;1,141 141 m15_do_calibrate
5;1 76 pathaction!2_5;1,401
Consider method^1_2,387 387 m10_get_rock_data
2 142 pathaction!1_2,343
Consider method^3_4;1;1,231 231 m1_do_navigate1
4;1;1 161 pathaction!3_4;1;1,127


CHECKING primitive solution of length 115 ...
true 99 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 44 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint4;]
true 47 visit[waypoint4;]
true 98 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint4,waypoint0,waypoint2;]
true 18 navigate[rover1,waypoint4,waypoint2;]
true 45 visit[waypoint2;]
true 81 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint0;]
true 75 navigate[rover1,waypoint2,waypoint0;]
true 93 unvisit[waypoint2;]
true 50 unvisit[waypoint4;]
true 164 __method_precondition_m5_empty_store_5_precondition[rover1store;]
true 114 nop[;]
true 138 sample_soil[rover1,rover1store,waypoint0;]
true 165 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint2,waypoint0;]
true 11 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0;]
true 7 visit[waypoint0;]
true 110 __method_precondition_m2_do_navigate2_2_precondition[rover1,waypoint0;]
true 37 nop[;]
true 159 unvisit[waypoint0;]
true 92 communicate_soil_data1[rover1,general,waypoint0,waypoint0,waypoint2;]
true 12 __method_precondition_m10_get_rock_data_10_precondition[rover1store,rover1;]
true 77 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0;]
true 122 visit[waypoint0;]
true 8 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint0,waypoint3,waypoint2;]
true 42 navigate[rover1,waypoint0,waypoint2;]
true 83 visit[waypoint2;]
true 46 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint3;]
true 88 navigate[rover1,waypoint2,waypoint3;]
true 90 unvisit[waypoint2;]
true 32 unvisit[waypoint0;]
true 120 __method_precondition_m6_empty_store_6_precondition[rover1store;]
true 162 drop[rover1,rover1store;]
true 38 sample_rock[rover1,rover1store,waypoint3;]
true 14 __method_precondition_m12_send_rock_data_12_precondition[general,waypoint2,waypoint3,rover1;]
true 139 communicate_rock_data2[rover1,general,waypoint3,waypoint2;]
true 41 __method_precondition_m10_get_rock_data_10_precondition[rover3store,rover3;]
true 113 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint7;]
true 74 visit[waypoint7;]
true 59 __method_precondition_m4_do_navigate2_4_precondition[rover3,waypoint7,waypoint6,waypoint0;]
true 28 navigate[rover3,waypoint7,waypoint0;]
true 141 visit[waypoint0;]
true 95 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint0,waypoint6;]
true 167 navigate[rover3,waypoint0,waypoint6;]
true 72 unvisit[waypoint0;]
true 131 unvisit[waypoint7;]
true 21 __method_precondition_m5_empty_store_5_precondition[rover3store;]
true 111 nop[;]
true 116 sample_rock[rover3,rover3store,waypoint6;]
true 146 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint2,waypoint0;]
true 135 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint6;]
true 26 visit[waypoint6;]
true 125 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint6,waypoint0;]
true 62 navigate[rover3,waypoint6,waypoint0;]
true 20 unvisit[waypoint6;]
true 6 communicate_rock_data1[rover3,general,waypoint6,waypoint0,waypoint2;]
true 101 __method_precondition_m13_get_image_data_13_precondition[objective2,rover0,low_res,waypoint2,camera2;]
true 144 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective0,waypoint2;]
true 58 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint4;]
true 43 visit[waypoint4;]
true 152 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint4,waypoint2;]
true 55 navigate[rover0,waypoint4,waypoint2;]
true 66 unvisit[waypoint4;]
true 91 calibrate[rover0,camera2,objective0,waypoint2;]
true 9 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint2;]
true 54 nop[;]
true 48 take_image[rover0,waypoint2,objective2,camera2,low_res;]
true 104 __method_precondition_m14_send_image_data_14_precondition[general,waypoint2,waypoint4;]
true 123 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint2;]
true 25 visit[waypoint2;]
true 149 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint2,waypoint4;]
true 118 navigate[rover0,waypoint2,waypoint4;]
true 143 unvisit[waypoint2;]
true 140 communicate_image_data[rover0,general,objective2,low_res,waypoint4,waypoint2;]
true 148 __method_precondition_m13_get_image_data_13_precondition[objective1,rover2,high_res,waypoint1,camera1;]
true 107 __method_precondition_m15_do_calibrate_15_precondition[camera1,objective1,waypoint1;]
true 13 __method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint7;]
true 24 visit[waypoint7;]
true 133 __method_precondition_m3_do_navigate2_3_precondition[rover2,waypoint7,waypoint1;]
true 39 navigate[rover2,waypoint7,waypoint1;]
true 78 unvisit[waypoint7;]
true 35 calibrate[rover2,camera1,objective1,waypoint1;]
true 61 __method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint1;]
true 5 visit[waypoint1;]
true 166 __method_precondition_m2_do_navigate2_2_precondition[rover2,waypoint1;]
true 86 nop[;]
true 70 unvisit[waypoint1;]
true 155 take_image[rover2,waypoint1,objective1,camera1,high_res;]
true 27 __method_precondition_m14_send_image_data_14_precondition[general,waypoint2,waypoint7;]
true 79 __method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint1;]
true 109 visit[waypoint1;]
true 153 __method_precondition_m3_do_navigate2_3_precondition[rover2,waypoint1,waypoint7;]
true 134 navigate[rover2,waypoint1,waypoint7;]
true 3 unvisit[waypoint1;]
true 29 communicate_image_data[rover2,general,objective1,high_res,waypoint7,waypoint2;]
true 106 __method_precondition_m13_get_image_data_13_precondition[objective3,rover0,low_res,waypoint4,camera2;]
true 4 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective0,waypoint2;]
true 124 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint4;]
true 154 visit[waypoint4;]
true 97 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint4,waypoint2;]
true 103 navigate[rover0,waypoint4,waypoint2;]
true 17 unvisit[waypoint4;]
true 2 calibrate[rover0,camera2,objective0,waypoint2;]
true 150 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint2;]
true 51 visit[waypoint2;]
true 57 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint2,waypoint4;]
true 156 navigate[rover0,waypoint2,waypoint4;]
true 15 unvisit[waypoint2;]
true 23 take_image[rover0,waypoint4,objective3,camera2,low_res;]
true 147 __method_precondition_m14_send_image_data_14_precondition[general,waypoint2,waypoint5;]
true 160 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint4;]
true 84 visit[waypoint4;]
true 31 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint4,waypoint5;]
true 63 navigate[rover0,waypoint4,waypoint5;]
true 60 unvisit[waypoint4;]
true 136 communicate_image_data[rover0,general,objective3,low_res,waypoint5,waypoint2;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 530
TSTG: 2147483647
Method: 1
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 1060
TSTG: 2147483647
Method: 2
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 1590
TSTG: 2147483647
Method: 3
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 2120
TSTG: 2147483647
Method: 4
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 2650
TSTG: 2147483647
Method: 5
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 3180
TSTG: 2147483647
Method: 6
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 3710
TSTG: 2147483647
Method: 7
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 4240
TSTG: 2147483647
Method: 8
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 4770
TSTG: 2147483647
Method: 9
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 5300
TSTG: 2147483647
Method: 10
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 5830
TSTG: 2147483647
Method: 11
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 6360
TSTG: 2147483647
Method: 12
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 6890
TSTG: 2147483647
Method: 13
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 7420
TSTG: 2147483647
Method: 14
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 7950
TSTG: 2147483647
Method: 15
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 8480
TSTG: 2147483647
Method: 16
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 9010
TSTG: 2147483647
Method: 17
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 9540
TSTG: 2147483647
Method: 18
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 10070
TSTG: 2147483647
Method: 19
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 10600
TSTG: 2147483647
Method: 20
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 11130
TSTG: 2147483647
Method: 21
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 11660
TSTG: 2147483647
Method: 22
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 12190
TSTG: 2147483647
Method: 23
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 12720
TSTG: 2147483647
Method: 24
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 13250
TSTG: 2147483647
Method: 25
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 13780
TSTG: 2147483647
Method: 26
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 14310
TSTG: 2147483647
Method: 27
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 14840
TSTG: 2147483647
Method: 28
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 15370
TSTG: 2147483647
Method: 29
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 15900
TSTG: 2147483647
Method: 30
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 16430
TSTG: 2147483647
Method: 31
DP max: 5
Taking minimum: 5
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 67
  lower bound = 30

Running SAT search with cost bound = 48
==================================================
  upper bound = 67
  lower bound = 30
LEN 48
ICAPS: 25440
TSTG: 2147483647
Method: 48
Still waiting ... running for 100 will abort at 9223372036854769066
DP max: 11
Taking minimum: 11
Generating initial PDT ... done
initial PDT has 540 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 495 leafs
SHOP LEAFS 144
Assignment implications
Generating clauses representing decomposition ... done
At most K: 341ms input: 4112 K = 48
Number of actions Formula: 371ms for 398815 clauses
Layers: 9 paths 495
Layer 1 g 0 = 0 - 1 / 0 clauses 123256
Layer 1 g 1 = 2 - 3 / 2 clauses 123256
Layer 1 g 2 = 4 - 5 / 4 clauses 123256
Layer 1 g 3 = 6 - 7 / 6 clauses 123256
Layer 1 g 4 = 8 - 9 / 8 clauses 123256
Layer 1 g 5 = 10 - 11 / 10 clauses 123256
Layer 1 g 6 = 12 - 13 / 12 clauses 123256
Layer 1 g 7 = 14 - 15 / 14 clauses 123256
Layer 1 g 8 = 16 - 17 / 16 clauses 123256
Layer 1 g 9 = 18 - 19 / 18 clauses 123256
Layer 1 g 10 = 20 - 21 / 20 clauses 123256
Layer 1 g 11 = 22 - 23 / 22 clauses 123256
Layer 1 g 12 = 24 - 25 / 24 clauses 123256
Layer 1 g 13 = 26 - 27 / 26 clauses 123256
Layer 1 g 14 = 28 - 29 / 28 clauses 123256
Layer 1 g 15 = 30 - 31 / 30 clauses 123256
Layer 1 g 16 = 32 - 33 / 32 clauses 123256
Layer 1 g 17 = 34 - 35 / 34 clauses 123256
Layer 1 g 18 = 36 - 37 / 36 clauses 123256
Layer 1 g 19 = 38 - 39 / 38 clauses 123256
Layer 1 g 20 = 40 - 41 / 40 clauses 123256
Layer 1 g 21 = 42 - 43 / 42 clauses 123256
Layer 1 g 22 = 44 - 45 / 44 clauses 123256
Layer 1 g 23 = 46 - 47 / 46 clauses 123256
Layer 1 g 24 = 48 - 49 / 48 clauses 123256
Layer 1 g 25 = 50 - 51 / 50 clauses 123256
Layer 1 g 26 = 52 - 53 / 52 clauses 123256
Layer 1 g 27 = 54 - 55 / 54 clauses 123256
Layer 1 g 28 = 56 - 57 / 56 clauses 123256
Layer 1 g 29 = 58 - 59 / 58 clauses 123256
Layer 1 g 30 = 60 - 61 / 60 clauses 123256
Layer 1 g 31 = 62 - 63 / 62 clauses 123256
Layer 1 g 32 = 64 - 65 / 64 clauses 123256
Layer 1 g 33 = 66 - 67 / 66 clauses 123256
Layer 1 g 34 = 68 - 69 / 68 clauses 123256
Layer 1 g 35 = 70 - 71 / 70 clauses 123256
Layer 1 g 36 = 72 - 73 / 72 clauses 123256
Layer 1 g 37 = 74 - 75 / 74 clauses 123256
Layer 1 g 38 = 76 - 77 / 76 clauses 123256
Layer 1 g 39 = 78 - 79 / 78 clauses 123256
Layer 1 g 40 = 80 - 81 / 80 clauses 123256
Layer 1 g 41 = 82 - 83 / 82 clauses 123256
Layer 1 g 42 = 84 - 85 / 84 clauses 123256
Layer 1 g 43 = 86 - 87 / 86 clauses 123256
Layer 1 g 44 = 88 - 89 / 88 clauses 123256
Layer 1 g 45 = 90 - 91 / 90 clauses 123256
Layer 1 g 46 = 92 - 93 / 92 clauses 123256
Layer 1 g 47 = 94 - 95 / 94 clauses 123256
Layer 1 g 48 = 96 - 97 / 96 clauses 123256
Layer 1 g 49 = 98 - 99 / 98 clauses 123256
Layer 1 g 50 = 100 - 101 / 100 clauses 123256
Layer 1 g 51 = 102 - 103 / 102 clauses 123256
Layer 1 g 52 = 104 - 105 / 104 clauses 123256
Layer 1 g 53 = 106 - 107 / 106 clauses 123256
Layer 1 g 54 = 108 - 109 / 108 clauses 123256
Layer 1 g 55 = 110 - 111 / 110 clauses 123256
Layer 1 g 56 = 112 - 113 / 112 clauses 123256
Layer 1 g 57 = 114 - 115 / 114 clauses 123256
Layer 1 g 58 = 116 - 117 / 116 clauses 123256
Layer 1 g 59 = 118 - 119 / 118 clauses 123256
Layer 1 g 60 = 120 - 121 / 120 clauses 123256
Layer 1 g 61 = 122 - 123 / 122 clauses 123256
Layer 1 g 62 = 124 - 125 / 124 clauses 123256
Layer 1 g 63 = 126 - 127 / 126 clauses 123256
Layer 1 g 64 = 128 - 129 / 128 clauses 123256
Layer 1 g 65 = 130 - 131 / 130 clauses 123256
Layer 1 g 66 = 132 - 133 / 132 clauses 123256
Layer 1 g 67 = 134 - 135 / 134 clauses 123256
Layer 1 g 68 = 136 - 137 / 136 clauses 123256
Layer 1 g 69 = 138 - 139 / 138 clauses 123256
Layer 1 g 70 = 140 - 141 / 140 clauses 123256
Layer 1 g 71 = 142 - 143 / 142 clauses 123256
Layer 1 g 72 = 144 - 145 / 144 clauses 123256
Layer 1 g 73 = 146 - 147 / 146 clauses 123256
Layer 1 g 74 = 148 - 149 / 148 clauses 123256
Layer 1 g 75 = 150 - 151 / 150 clauses 123256
Layer 1 g 76 = 152 - 153 / 152 clauses 123256
Layer 1 g 77 = 154 - 155 / 154 clauses 123256
Layer 1 g 78 = 156 - 157 / 156 clauses 123256
Layer 1 g 79 = 158 - 159 / 158 clauses 123256
Layer 1 g 80 = 160 - 161 / 160 clauses 123256
Layer 1 g 81 = 162 - 163 / 162 clauses 123256
Layer 1 g 82 = 164 - 165 / 164 clauses 123256
Layer 1 g 83 = 166 - 167 / 166 clauses 123256
Layer 1 g 84 = 168 - 169 / 168 clauses 123256
Layer 1 g 85 = 170 - 171 / 170 clauses 123256
Layer 1 g 86 = 172 - 173 / 172 clauses 123256
Layer 1 g 87 = 174 - 175 / 174 clauses 123256
Layer 1 g 88 = 176 - 177 / 176 clauses 123256
Layer 1 g 89 = 178 - 179 / 178 clauses 123256
Layer 1 g 90 = 180 - 181 / 180 clauses 123256
Layer 1 g 91 = 182 - 183 / 182 clauses 123256
Layer 1 g 92 = 184 - 185 / 184 clauses 123256
Layer 1 g 93 = 186 - 187 / 186 clauses 123256
Layer 1 g 94 = 188 - 189 / 188 clauses 123256
Layer 1 g 95 = 190 - 191 / 190 clauses 123256
Layer 1 g 96 = 192 - 193 / 192 clauses 123256
Layer 1 g 97 = 194 - 195 / 194 clauses 123256
Layer 1 g 98 = 196 - 197 / 196 clauses 123256
Layer 1 g 99 = 198 - 199 / 198 clauses 123256
Layer 1 g 100 = 200 - 201 / 200 clauses 123256
Layer 1 g 101 = 202 - 203 / 202 clauses 123256
Layer 1 g 102 = 204 - 205 / 204 clauses 123256
Layer 1 g 103 = 206 - 207 / 206 clauses 123256
Layer 1 g 104 = 208 - 209 / 208 clauses 123256
Layer 1 g 105 = 210 - 211 / 210 clauses 123256
Layer 1 g 106 = 212 - 213 / 212 clauses 123256
Layer 1 g 107 = 214 - 215 / 214 clauses 123256
Layer 1 g 108 = 216 - 217 / 216 clauses 123256
Layer 1 g 109 = 218 - 219 / 218 clauses 123256
Layer 1 g 110 = 220 - 221 / 220 clauses 123256
Layer 1 g 111 = 222 - 223 / 222 clauses 123256
Layer 1 g 112 = 224 - 225 / 224 clauses 123256
Layer 1 g 113 = 226 - 227 / 226 clauses 123256
Layer 1 g 114 = 228 - 229 / 228 clauses 123256
Layer 1 g 115 = 230 - 231 / 230 clauses 123256
Layer 1 g 116 = 232 - 233 / 232 clauses 123256
Layer 1 g 117 = 234 - 235 / 234 clauses 123256
Layer 1 g 118 = 236 - 237 / 236 clauses 123256
Layer 1 g 119 = 238 - 239 / 238 clauses 123256
Layer 1 g 120 = 240 - 241 / 240 clauses 123256
Layer 1 g 121 = 242 - 243 / 242 clauses 123256
Layer 1 g 122 = 244 - 245 / 244 clauses 123256
Layer 1 g 123 = 246 - 247 / 246 clauses 123256
Layer 1 g 124 = 248 - 249 / 248 clauses 123256
Layer 1 g 125 = 250 - 251 / 250 clauses 123256
Layer 1 g 126 = 252 - 253 / 252 clauses 123256
Layer 1 g 127 = 254 - 255 / 254 clauses 123256
Layer 1 g 128 = 256 - 257 / 256 clauses 123256
Layer 1 g 129 = 258 - 259 / 258 clauses 123256
Layer 1 g 130 = 260 - 261 / 260 clauses 123256
Layer 1 g 131 = 262 - 263 / 262 clauses 123256
Layer 1 g 132 = 264 - 265 / 264 clauses 123256
Layer 1 g 133 = 266 - 267 / 266 clauses 123256
Layer 1 g 134 = 268 - 269 / 268 clauses 123256
Layer 1 g 135 = 270 - 271 / 270 clauses 123256
Layer 1 g 136 = 272 - 273 / 272 clauses 123256
Layer 1 g 137 = 274 - 275 / 274 clauses 123256
Layer 1 g 138 = 276 - 277 / 276 clauses 123256
Layer 1 g 139 = 278 - 279 / 278 clauses 123256
Layer 1 g 140 = 280 - 281 / 280 clauses 123256
Layer 1 g 141 = 282 - 283 / 282 clauses 123256
Layer 1 g 142 = 284 - 285 / 284 clauses 123256
Layer 1 g 143 = 286 - 287 / 286 clauses 123256
Layer 1 g 144 = 288 - 289 / 288 clauses 123256
Layer 1 g 145 = 290 - 291 / 290 clauses 123256
Layer 1 g 146 = 292 - 293 / 292 clauses 123256
Layer 1 g 147 = 294 - 295 / 294 clauses 123256
Layer 1 g 148 = 296 - 297 / 296 clauses 123256
Layer 1 g 149 = 298 - 299 / 298 clauses 123256
Layer 1 g 150 = 300 - 301 / 300 clauses 123256
Layer 1 g 151 = 302 - 303 / 302 clauses 123256
Layer 1 g 152 = 304 - 305 / 304 clauses 123256
Layer 1 g 153 = 306 - 307 / 306 clauses 123256
Layer 1 g 154 = 308 - 309 / 308 clauses 123256
Layer 1 g 155 = 310 - 311 / 310 clauses 123256
Layer 1 g 156 = 312 - 313 / 312 clauses 123256
Layer 1 g 157 = 314 - 315 / 314 clauses 123256
Layer 1 g 158 = 316 - 317 / 316 clauses 123256
Layer 1 g 159 = 318 - 319 / 318 clauses 123256
Layer 1 g 160 = 320 - 321 / 320 clauses 123256
Layer 1 g 161 = 322 - 323 / 322 clauses 123256
Layer 1 g 162 = 324 - 325 / 324 clauses 123256
Layer 1 g 163 = 326 - 327 / 326 clauses 123256
Layer 1 g 164 = 328 - 329 / 328 clauses 123256
Layer 1 g 165 = 330 - 331 / 330 clauses 123256
Layer 1 g 166 = 332 - 333 / 332 clauses 123256
Layer 1 g 167 = 334 - 335 / 334 clauses 123256
Layer 1 g 168 = 336 - 337 / 336 clauses 123256
Layer 1 g 169 = 338 - 339 / 338 clauses 123256
Layer 1 g 170 = 340 - 341 / 340 clauses 123256
Layer 1 g 171 = 342 - 343 / 342 clauses 123256
Layer 1 g 172 = 344 - 345 / 344 clauses 123256
Layer 1 g 173 = 346 - 347 / 346 clauses 123256
Layer 1 g 174 = 348 - 349 / 348 clauses 123256
Layer 1 g 175 = 350 - 351 / 350 clauses 123256
Layer 1 g 176 = 352 - 353 / 352 clauses 123256
Layer 1 g 177 = 354 - 355 / 354 clauses 123256
Layer 1 g 178 = 356 - 357 / 356 clauses 123256
Layer 1 g 179 = 358 - 359 / 358 clauses 123256
Layer 1 g 180 = 360 - 361 / 360 clauses 123256
Layer 1 g 181 = 362 - 363 / 362 clauses 123256
Layer 1 g 182 = 364 - 365 / 364 clauses 123256
Layer 1 g 183 = 366 - 367 / 366 clauses 123256
Layer 1 g 184 = 368 - 369 / 368 clauses 123256
Layer 1 g 185 = 370 - 371 / 370 clauses 123256
Layer 1 g 186 = 372 - 373 / 372 clauses 123256
Layer 1 g 187 = 374 - 375 / 374 clauses 123256
Layer 1 g 188 = 376 - 377 / 376 clauses 123256
Layer 1 g 189 = 378 - 379 / 378 clauses 123256
Layer 1 g 190 = 380 - 381 / 380 clauses 123256
Layer 1 g 191 = 382 - 383 / 382 clauses 123256
Layer 1 g 192 = 384 - 385 / 384 clauses 123256
Layer 1 g 193 = 386 - 387 / 386 clauses 123256
Layer 1 g 194 = 388 - 389 / 388 clauses 123256
Layer 1 g 195 = 390 - 391 / 390 clauses 123256
Layer 1 g 196 = 392 - 393 / 392 clauses 123256
Layer 1 g 197 = 394 - 395 / 394 clauses 123256
Layer 1 g 198 = 396 - 397 / 396 clauses 123256
Layer 1 g 199 = 398 - 399 / 398 clauses 123256
Layer 1 g 200 = 400 - 401 / 400 clauses 123256
Layer 1 g 201 = 402 - 403 / 402 clauses 123256
Layer 1 g 202 = 404 - 405 / 404 clauses 123256
Layer 1 g 203 = 406 - 407 / 406 clauses 123256
Layer 1 g 204 = 408 - 409 / 408 clauses 123256
Layer 1 g 205 = 410 - 411 / 410 clauses 123256
Layer 1 g 206 = 412 - 413 / 412 clauses 123256
Layer 1 g 207 = 414 - 415 / 414 clauses 123256
Layer 1 g 208 = 416 - 417 / 416 clauses 123256
Layer 1 g 209 = 418 - 419 / 418 clauses 123256
Layer 1 g 210 = 420 - 421 / 420 clauses 123256
Layer 1 g 211 = 422 - 423 / 422 clauses 123256
Layer 1 g 212 = 424 - 425 / 424 clauses 123256
Layer 1 g 213 = 426 - 427 / 426 clauses 123256
Layer 1 g 214 = 428 - 429 / 428 clauses 123256
Layer 1 g 215 = 430 - 431 / 430 clauses 123256
Layer 1 g 216 = 432 - 433 / 432 clauses 123256
Layer 1 g 217 = 434 - 435 / 434 clauses 123256
Layer 1 g 218 = 436 - 437 / 436 clauses 123256
Layer 1 g 219 = 438 - 439 / 438 clauses 123256
Layer 1 g 220 = 440 - 441 / 440 clauses 123256
Layer 1 g 221 = 442 - 443 / 442 clauses 123256
Layer 1 g 222 = 444 - 445 / 444 clauses 123256
Layer 1 g 223 = 446 - 447 / 446 clauses 123256
Layer 1 g 224 = 448 - 449 / 448 clauses 123256
Layer 1 g 225 = 450 - 451 / 450 clauses 123256
Layer 1 g 226 = 452 - 453 / 452 clauses 123256
Layer 1 g 227 = 454 - 455 / 454 clauses 123256
Layer 1 g 228 = 456 - 457 / 456 clauses 123256
Layer 1 g 229 = 458 - 459 / 458 clauses 123256
Layer 1 g 230 = 460 - 461 / 460 clauses 123256
Layer 1 g 231 = 462 - 463 / 462 clauses 123256
Layer 1 g 232 = 464 - 465 / 464 clauses 123256
Layer 1 g 233 = 466 - 467 / 466 clauses 123256
Layer 1 g 234 = 468 - 469 / 468 clauses 123256
Layer 1 g 235 = 470 - 471 / 470 clauses 123256
Layer 1 g 236 = 472 - 473 / 472 clauses 123256
Layer 1 g 237 = 474 - 475 / 474 clauses 123256
Layer 1 g 238 = 476 - 477 / 476 clauses 123256
Layer 1 g 239 = 478 - 479 / 478 clauses 123256
Layer 1 g 240 = 480 - 481 / 480 clauses 123256
Layer 1 g 241 = 482 - 483 / 482 clauses 123256
Layer 1 g 242 = 484 - 485 / 484 clauses 123256
Layer 1 g 243 = 486 - 487 / 486 clauses 123256
Layer 1 g 244 = 488 - 489 / 488 clauses 123256
Layer 1 g 245 = 490 - 491 / 490 clauses 123256
Layer 1 g 246 = 492 - 493 / 492 clauses 123256
Layer 2 g 0 = 0 - 3 / 1 clauses 123256
Layer 2 g 1 = 4 - 7 / 5 clauses 123256
Layer 2 g 2 = 8 - 11 / 9 clauses 123256
Layer 2 g 3 = 12 - 15 / 13 clauses 123256
Layer 2 g 4 = 16 - 19 / 17 clauses 123256
Layer 2 g 5 = 20 - 23 / 21 clauses 123256
Layer 2 g 6 = 24 - 27 / 25Still waiting ... running for 67644 will abort at 9223372036854769066
 clauses 123256
Layer 2 g 7 = 28 - 31 / 29 clauses 123256
Layer 2 g 8 = 32 - 35 / 33 clauses 123256
Layer 2 g 9 = 36 - 39 / 37 clauses 123256
Layer 2 g 10 = 40 - 43 / 41 clauses 123256
Layer 2 g 11 = 44 - 47 / 45 clauses 123256
Layer 2 g 12 = 48 - 51 / 49 clauses 123256
Layer 2 g 13 = 52 - 55 / 53 clauses 123256
Layer 2 g 14 = 56 - 59 / 57 clauses 123256
Layer 2 g 15 = 60 - 63 / 61 clauses 123256
Layer 2 g 16 = 64 - 67 / 65 clauses 123256
Layer 2 g 17 = 68 - 71 / 69 clauses 123256
Layer 2 g 18 = 72 - 75 / 73 clauses 123256
Layer 2 g 19 = 76 - 79 / 77 clauses 123256
Layer 2 g 20 = 80 - 83 / 81 clauses 123256
Layer 2 g 21 = 84 - 87 / 85 clauses 123256
Layer 2 g 22 = 88 - 91 / 89 clauses 123256
Layer 2 g 23 = 92 - 95 / 93 clauses 123256
Layer 2 g 24 = 96 - 99 / 97 clauses 123256
Layer 2 g 25 = 100 - 103 / 101 clauses 123256
Layer 2 g 26 = 104 - 107 / 105 clauses 123256
Layer 2 g 27 = 108 - 111 / 109 clauses 123256
Layer 2 g 28 = 112 - 115 / 113 clauses 123256
Layer 2 g 29 = 116 - 119 / 117 clauses 123256
Layer 2 g 30 = 120 - 123 / 121 clauses 123256
Layer 2 g 31 = 124 - 127 / 125 clauses 123256
Layer 2 g 32 = 128 - 131 / 129 clauses 123256
Layer 2 g 33 = 132 - 135 / 133 clauses 123256
Layer 2 g 34 = 136 - 139 / 137 clauses 123256
Layer 2 g 35 = 140 - 143 / 141 clauses 123256
Layer 2 g 36 = 144 - 147 / 145 clauses 123256
Layer 2 g 37 = 148 - 151 / 149 clauses 123256
Layer 2 g 38 = 152 - 155 / 153 clauses 123256
Layer 2 g 39 = 156 - 159 / 157 clauses 123256
Layer 2 g 40 = 160 - 163 / 161 clauses 123256
Layer 2 g 41 = 164 - 167 / 165 clauses 123256
Layer 2 g 42 = 168 - 171 / 169 clauses 123256
Layer 2 g 43 = 172 - 175 / 173 clauses 123256
Layer 2 g 44 = 176 - 179 / 177 clauses 123256
Layer 2 g 45 = 180 - 183 / 181 clauses 123256
Layer 2 g 46 = 184 - 187 / 185 clauses 123256
Layer 2 g 47 = 188 - 191 / 189 clauses 123256
Layer 2 g 48 = 192 - 195 / 193 clauses 123256
Layer 2 g 49 = 196 - 199 / 197 clauses 123256
Layer 2 g 50 = 200 - 203 / 201 clauses 123256
Layer 2 g 51 = 204 - 207 / 205 clauses 123256
Layer 2 g 52 = 208 - 211 / 209 clauses 123256
Layer 2 g 53 = 212 - 215 / 213 clauses 123256
Layer 2 g 54 = 216 - 219 / 217 clauses 123256
Layer 2 g 55 = 220 - 223 / 221 clauses 123256
Layer 2 g 56 = 224 - 227 / 225 clauses 123256
Layer 2 g 57 = 228 - 231 / 229 clauses 123256
Layer 2 g 58 = 232 - 235 / 233 clauses 123256
Layer 2 g 59 = 236 - 239 / 237 clauses 123256
Layer 2 g 60 = 240 - 243 / 241 clauses 123256
Layer 2 g 61 = 244 - 247 / 245 clauses 123256
Layer 2 g 62 = 248 - 251 / 249 clauses 123256
Layer 2 g 63 = 252 - 255 / 253 clauses 123256
Layer 2 g 64 = 256 - 259 / 257 clauses 123256
Layer 2 g 65 = 260 - 263 / 261 clauses 123256
Layer 2 g 66 = 264 - 267 / 265 clauses 123256
Layer 2 g 67 = 268 - 271 / 269 clauses 123256
Layer 2 g 68 = 272 - 275 / 273 clauses 123256
Layer 2 g 69 = 276 - 279 / 277 clauses 123256
Layer 2 g 70 = 280 - 283 / 281 clauses 123256
Layer 2 g 71 = 284 - 287 / 285 clauses 123256
Layer 2 g 72 = 288 - 291 / 289 clauses 123256
Layer 2 g 73 = 292 - 295 / 293 clauses 123256
Layer 2 g 74 = 296 - 299 / 297 clauses 123256
Layer 2 g 75 = 300 - 303 / 301 clauses 123256
Layer 2 g 76 = 304 - 307 / 305 clauses 123256
Layer 2 g 77 = 308 - 311 / 309 clauses 123256
Layer 2 g 78 = 312 - 315 / 313 clauses 123256
Layer 2 g 79 = 316 - 319 / 317 clauses 123256
Layer 2 g 80 = 320 - 323 / 321 clauses 123256
Layer 2 g 81 = 324 - 327 / 325 clauses 123256
Layer 2 g 82 = 328 - 331 / 329 clauses 123256
Layer 2 g 83 = 332 - 335 / 333 clauses 123256
Layer 2 g 84 = 336 - 339 / 337 clauses 123256
Layer 2 g 85 = 340 - 343 / 341 clauses 123256
Layer 2 g 86 = 344 - 347 / 345 clauses 123256
Layer 2 g 87 = 348 - 351 / 349 clauses 123256
Layer 2 g 88 = 352 - 355 / 353 clauses 123256
Layer 2 g 89 = 356 - 359 / 357 clauses 123256
Layer 2 g 90 = 360 - 363 / 361 clauses 123256
Layer 2 g 91 = 364 - 367 / 365 clauses 123256
Layer 2 g 92 = 368 - 371 / 369 clauses 123256
Layer 2 g 93 = 372 - 375 / 373 clauses 123256
Layer 2 g 94 = 376 - 379 / 377 clauses 123256
Layer 2 g 95 = 380 - 383 / 381 clauses 123256
Layer 2 g 96 = 384 - 387 / 385 clauses 123256
Layer 2 g 97 = 388 - 391 / 389 clauses 123256
Layer 2 g 98 = 392 - 395 / 393 clauses 123256
Layer 2 g 99 = 396 - 399 / 397 clauses 123256
Layer 2 g 100 = 400 - 403 / 401 clauses 123256
Layer 2 g 101 = 404 - 407 / 405 clauses 123256
Layer 2 g 102 = 408 - 411 / 409 clauses 123256
Layer 2 g 103 = 412 - 415 / 413 clauses 123256
Layer 2 g 104 = 416 - 419 / 417 clauses 123256
Layer 2 g 105 = 420 - 423 / 421 clauses 123256
Layer 2 g 106 = 424 - 427 / 425 clauses 123256
Layer 2 g 107 = 428 - 431 / 429 clauses 123256
Layer 2 g 108 = 432 - 435 / 433 clauses 123256
Layer 2 g 109 = 436 - 439 / 437 clauses 123256
Layer 2 g 110 = 440 - 443 / 441 clauses 123256
Layer 2 g 111 = 444 - 447 / 445 clauses 123256
Layer 2 g 112 = 448 - 451 / 449 clauses 123256
Layer 2 g 113 = 452 - 455 / 453 clauses 123256
Layer 2 g 114 = 456 - 459 / 457 clauses 123256
Layer 2 g 115 = 460 - 463 / 461 clauses 123256
Layer 2 g 116 = 464 - 467 / 465 clauses 123256
Layer 2 g 117 = 468 - 471 / 469 clauses 123256
Layer 2 g 118 = 472 - 475 / 473 clauses 123256
Layer 2 g 119 = 476 - 479 / 477 clauses 123256
Layer 2 g 120 = 480 - 483 / 481 clauses 123256
Layer 2 g 121 = 484 - 487 / 485 clauses 123256
Layer 2 g 122 = 488 - 491 / 489 clauses 123256
Layer 2 g 123 = 492 - 494 / 493 clauses 123256
Layer 3 g 0 = 0 - 7 / 3 clauses 123256
Layer 3 g 1 = 8 - 15 / 11 clauses 123256
Layer 3 g 2 = 16 - 23 / 19 clauses 123256
Layer 3 g 3 = 24 - 31 / 27 clauses 123256
Layer 3 g 4 = 32 - 39 / 35 clauses 123256
Layer 3 g 5 = 40 - 47 / 43 clauses 123256
Layer 3 g 6 = 48 - 55 / 51 clauses 123256
Layer 3 g 7 = 56 - 63 / 59 clauses 123256
Layer 3 g 8 = 64 - 71 / 67 clauses 123256
Layer 3 g 9 = 72 - 79 / 75 clauses 123256
Layer 3 g 10 = 80 - 87 / 83 clauses 123256
Layer 3 g 11 = 88 - 95 / 91 clauses 123256
Layer 3 g 12 = 96 - 103 / 99 clauses 123256
Layer 3 g 13 = 104 - 111 / 107 clauses 123256
Layer 3 g 14 = 112 - 119 / 115 clauses 123256
Layer 3 g 15 = 120 - 127 / 123 clauses 123256
Layer 3 g 16 = 128 - 135 / 131 clauses 123256
Layer 3 g 17 = 136 - 143 / 139 clauses 123256
Layer 3 g 18 = 144 - 151 / 147 clauses 123256
Layer 3 g 19 = 152 - 159 / 155 clauses 123256
Layer 3 g 20 = 160 - 167 / 163 clauses 123256
Layer 3 g 21 = 168 - 175 / 171 clauses 123256
Layer 3 g 22 = 176 - 183 / 179 clauses 123256
Layer 3 g 23 = 184 - 191 / 187 clauses 123256
Layer 3 g 24 = 192 - 199 / 195 clauses 123256
Layer 3 g 25 = 200 - 207 / 203 clauses 123256
Layer 3 g 26 = 208 - 215 / 211 clauses 123256
Layer 3 g 27 = 216 - 223 / 219 clauses 123256
Layer 3 g 28 = 224 - 231 / 227 clauses 123256
Layer 3 g 29 = 232 - 239 / 235 clauses 123256
Layer 3 g 30 = 240 - 247 / 243 clauses 123256
Layer 3 g 31 = 248 - 255 / 251 clauses 123256
Layer 3 g 32 = 256 - 263 / 259 clauses 123256
Layer 3 g 33 = 264 - 271 / 267 clauses 123256
Layer 3 g 34 = 272 - 279 / 275 clauses 123256
Layer 3 g 35 = 280 - 287 / 283 clauses 123256
Layer 3 g 36 = 288 - 295 / 291 clauses 123256
Layer 3 g 37 = 296 - 303 / 299 clauses 123256
Layer 3 g 38 = 304 - 311 / 307 clauses 123256
Layer 3 g 39 = 312 - 319 / 315 clauses 123256
Layer 3 g 40 = 320 - 327 / 323 clauses 123256
Layer 3 g 41 = 328 - 335 / 331 clauses 123256
Layer 3 g 42 = 336 - 343 / 339 clauses 123256
Layer 3 g 43 = 344 - 351 / 347 clauses 123256
Layer 3 g 44 = 352 - 359 / 355 clauses 123256
Layer 3 g 45 = 360 - 367 / 363 clauses 123256
Layer 3 g 46 = 368 - 375 / 371 clauses 123256
Layer 3 g 47 = 376 - 383 / 379 clauses 123256
Layer 3 g 48 = 384 - 391 / 387 clauses 123256
Layer 3 g 49 = 392 - 399 / 395 clauses 123256
Layer 3 g 50 = 400 - 407 / 403 clauses 123256
Layer 3 g 51 = 408 - 415 / 411 clauses 123256
Layer 3 g 52 = 416 - 423 / 419 clauses 123256
Layer 3 g 53 = 424 - 431 / 427 clauses 123256
Layer 3 g 54 = 432 - 439 / 435 clauses 123256
Layer 3 g 55 = 440 - 447 / 443 clauses 123256
Layer 3 g 56 = 448 - 455 / 451 clauses 123256
Layer 3 g 57 = 456 - 463 / 459 clauses 123256
Layer 3 g 58 = 464 - 471 / 467 clauses 123256
Layer 3 g 59 = 472 - 479 / 475 clauses 123256
Layer 3 g 60 = 480 - 487 / 483 clauses 123256
Layer 3 g 61 = 488 - 494 / 491 clauses 123256
Layer 4 g 0 = 0 - 15 / 7 clauses 123256
Layer 4 g 1 = 16 - 31 / 23 clauses 123256
Layer 4 g 2 = 32 - 47 / 39 clauses 123256
Layer 4 g 3 = 48 - 63 / 55 clauses 123256
Layer 4 g 4 = 64 - 79 / 71 clauses 123256
Layer 4 g 5 = 80 - 95 / 87 clauses 123256
Layer 4 g 6 = 96 - 111 / 103 clauses 123256
Layer 4 g 7 = 112 - 127 / 119 clauses 123256
Layer 4 g 8 = 128 - 143 / 135 clauses 123256
Layer 4 g 9 = 144 - 159 / 151 clauses 123256
Layer 4 g 10 = 160 - 175 / 167 clauses 123256
Layer 4 g 11 = 176 - 191 / 183 clauses 123256
Layer 4 g 12 = 192 - 207 / 199 clauses 123256
Layer 4 g 13 = 208 - 223 / 215 clauses 123256
Layer 4 g 14 = 224 - 239 / 231 clauses 123256
Layer 4 g 15 = 240 - 255 / 247 clauses 123256
Layer 4 g 16 = 256 - 271 / 263 clauses 123256
Layer 4 g 17 = 272 - 287 / 279 clauses 123256
Layer 4 g 18 = 288 - 303 / 295 clauses 123256
Layer 4 g 19 = 304 - 319 / 311 clauses 123256
Layer 4 g 20 = 320 - 335 / 327 clauses 123256
Layer 4 g 21 = 336 - 351 / 343 clauses 123256
Layer 4 g 22 = 352 - 367 / 359 clauses 123256
Layer 4 g 23 = 368 - 383 / 375 clauses 123256
Layer 4 g 24 = 384 - 399 / 391 clauses 123256
Layer 4 g 25 = 400 - 415 / 407 clauses 123256
Layer 4 g 26 = 416 - 431 / 423 clauses 123256
Layer 4 g 27 = 432 - 447 / 439 clauses 123256
Layer 4 g 28 = 448 - 463 / 455 clauses 123256
Layer 4 g 29 = 464 - 479 / 471 clauses 123256
Layer 4 g 30 = 480 - 494 / 487 clauses 123256
Layer 5 g 0 = 0 - 31 / 15 clauses 123256
Layer 5 g 1 = 32 - 63 / 47 clauses 123256
Layer 5 g 2 = 64 - 95 / 79 clauses 123256
Layer 5 g 3 = 96 - 127 / 111 clauses 123256
Layer 5 g 4 = 128 - 159 / 143 clauses 123256
Layer 5 g 5 = 160 - 191 / 175 clauses 123256
Layer 5 g 6 = 192 - 223 / 207 clauses 123256
Layer 5 g 7 = 224 - 255 / 239 clauses 123256
Layer 5 g 8 = 256 - 287 / 271 clauses 123256
Layer 5 g 9 = 288 - 319 / 303 clauses 123256
Layer 5 g 10 = 320 - 351 / 335 clauses 123256
Layer 5 g 11 = 352 - 383 / 367 clauses 123256
Layer 5 g 12 = 384 - 415 / 399 clauses 123256
Layer 5 g 13 = 416 - 447 / 431 clauses 123256
Layer 5 g 14 = 448 - 479 / 463 clauses 123256
Layer 5 g 15 = 480 - 494 / 495 clauses 123256
Layer 6 g 0 = 0 - 63 / 31 clauses 123256
Layer 6 g 1 = 64 - 127 / 95 clauses 123256
Layer 6 g 2 = 128 - 191 / 159 clauses 123256
Layer 6 g 3 = 192 - 255 / 223 clauses 123256
Layer 6 g 4 = 256 - 319 / 287 clauses 123256
Layer 6 g 5 = 320 - 383 / 351 clauses 123256
Layer 6 g 6 = 384 - 447 / 415 clauses 123256
Layer 6 g 7 = 448 - 494 / 479 clauses 123256
Layer 7 g 0 = 0 - 127 / 63 clauses 123256
Layer 7 g 1 = 128 - 255 / 191 clauses 123256
Layer 7 g 2 = 256 - 383 / 319 clauses 123256
Layer 7 g 3 = 384 - 494 / 447 clauses 123256
Layer 8 g 0 = 0 - 255 / 127 clauses 123256
Layer 8 g 1 = 256 - 494 / 383 clauses 123256
Layer 9 g 0 = 0 - 494 / 255 clauses 123256
Invariant Clauses 82336
NUMBER OF CLAUSES 62384478
NUMBER OF STATE CLAUSES 61448277
NUMBER OF DECOMPOSITION CLAUSES 936201
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.5% 1.5% 0.0% 

RUNWATCH_RESULT MEMOUT RETVAL 63232 TIME_SECS 149.349 MEMPEAK_KBS 8011760.64
