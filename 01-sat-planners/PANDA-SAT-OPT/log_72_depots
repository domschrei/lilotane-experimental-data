PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p12.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p12.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p12.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 35
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 35
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 35
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 35
Grounded planning graph ... done in 426ms.
	Number of Grounded Actions 805
	Number of Grounded Literals 268
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 35
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 35
Grounding ... done.
	number of abstract tasks = 221
	number of tasks = 707
	number of decomposition methods = 550
	number of predicates = 280
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 221
	number of tasks = 707
	number of decomposition methods = 550
	number of predicates = 215
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 68ms.
	Number of Grounded Actions 486
	Number of Grounded Literals 215
	number of abstract tasks = 221
	number of tasks = 707
	number of decomposition methods = 550
	number of predicates = 215
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 221
	number of tasks = 707
	number of decomposition methods = 550
	number of predicates = 215
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 222
	number of tasks = 708
	number of decomposition methods = 551
	number of predicates = 215
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 222
	number of tasks = 708
	number of decomposition methods = 551
	number of predicates = 215
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 35ms.
	Number of Grounded Actions 486
	Number of Grounded Literals 215
	number of abstract tasks = 222
	number of tasks = 708
	number of decomposition methods = 551
	number of predicates = 215
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 222
	number of tasks = 708
	number of decomposition methods = 551
	number of predicates = 215
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 222
	number of tasks = 708
	number of decomposition methods = 551
	number of predicates = 215
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 222
	number of tasks = 708
	number of decomposition methods = 551
	number of predicates = 215
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 222
	number of tasks = 708
	number of decomposition methods = 551
	number of predicates = 215
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 267
	number of epsilon methods = 0
	number of primitive tasks = 486
	number of constants = 0
Tasks 486 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772401ms

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 33 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 101 will abort at 9223372036854772321
done
PDT has 22 leafs
SHOP LEAFS 22
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 69015
Size 69015 at 0/486
Size 47177
Size 47177 at 0/486
Size 38571
Size 38571 at 0/486
Size 25181
Size 25181 at 0/486
Size 16660
Size 16660 at 0/486
Size 11782
Size 11782 at 0/486
Size 6868
Size 6868 at 0/486
Size 5081
Size 5081 at 0/486
Size 3763
Size 3763 at 0/486
Size 3626
Size 3626 at 0/486
Size 3591
Size 3591 at 0/486
Size 3569
Size 3569 at 0/486
Size 3561
Size 3561 at 0/486
Size 3560
Size 3560 at 0/486
Size 3560
Invariant time: 0.925
Number of invariants: 3560
Invariant Clauses 81880
NUMBER OF CLAUSES 91748
NUMBER OF STATE CLAUSES 91566
NUMBER OF DECOMPOSITION CLAUSES 182
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.8% 0.2% 0.0% 
NUMBER OF PATHS 22
Starting cryptominisat5.5
Setting starttime of solver to 1604508910342
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770239
done
initial PDT has 161 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 88 leafs
SHOP LEAFS 55
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 316840
NUMBER OF CLAUSES 362853
NUMBER OF STATE CLAUSES 356882
NUMBER OF DECOMPOSITION CLAUSES 5971
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.35000000000001% 1.6500000000000001% 0.0% 
NUMBER OF PATHS 88
Starting cryptominisat5.5
Setting starttime of solver to 1604508911629
Command exited with non-zero status 20
0.08 0.00

Time command gave the following runtime for the solver: 80
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 332 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 103 will abort at 9223372036854769058
done
PDT has 210 leafs
SHOP LEAFS 115
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 751160
NUMBER OF CLAUSES 868201
NUMBER OF STATE CLAUSES 847558
NUMBER OF DECOMPOSITION CLAUSES 20643
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.62% 2.38% 0.0% 
NUMBER OF PATHS 210
Starting cryptominisat5.5
Setting starttime of solver to 1604508913224
Command exited with non-zero status 20
0.19 0.01

Time command gave the following runtime for the solver: 200
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854767227
done
initial PDT has 530 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 460 leafs
SHOP LEAFS 248
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1641160
NUMBER OF CLAUSES 1896013
NUMBER OF STATE CLAUSES 1851741
NUMBER OF DECOMPOSITION CLAUSES 44272
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.66% 2.34% 0.0% 
NUMBER OF PATHS 460
Starting cryptominisat5.5
Setting starttime of solver to 1604508916089
Command exited with non-zero status 20
0.42 0.02

Time command gave the following runtime for the solver: 440
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 701 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854764038
done
PDT has 635 leafs
SHOP LEAFS 318
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2264160
NUMBER OF CLAUSES 2611658
NUMBER OF STATE CLAUSES 2554547
NUMBER OF DECOMPOSITION CLAUSES 57111
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.81% 2.19% 0.0% 
NUMBER OF PATHS 635
Starting cryptominisat5.5
Setting starttime of solver to 1604508920249
Command exited with non-zero status 20
0.56 0.05

Time command gave the following runtime for the solver: 610
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 864 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 101 will abort at 9223372036854759642
done
PDT has 800 leafs
SHOP LEAFS 384
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 2851560
NUMBER OF CLAUSES 3283885
NUMBER OF STATE CLAUSES 3216549
NUMBER OF DECOMPOSITION CLAUSES 67336
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.95% 2.05% 0.0% 
NUMBER OF PATHS 800
Starting cryptominisat5.5
Setting starttime of solver to 1604508925344
Command exited with non-zero status 20
0.86 0.06

Time command gave the following runtime for the solver: 920
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 1024 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854754198
done
PDT has 960 leafs
SHOP LEAFS 448
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 3421160
NUMBER OF CLAUSES 3934638
NUMBER OF STATE CLAUSES 3858245
NUMBER OF DECOMPOSITION CLAUSES 76393
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.06% 1.94% 0.0% 
NUMBER OF PATHS 960
Starting cryptominisat5.5
Setting starttime of solver to 1604508932179
Command exited with non-zero status 10
1.27 0.12

Time command gave the following runtime for the solver: 1390
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_10;2,212 212 m4_do_clear
10;2 202 pathaction!2_10;2,59
Consider method^2_4;2,417 417 _m3_do_put_on_2
4;2 255 pathaction!2_4;2,218
Consider method^6_0;2;4;2;1;3,495 495 m6_do_get_truck
0;2;4;2;1;3 176 pathaction!6_0;2;4;2;1;3,288
Consider method^3_4;4;1,393 393 m4_do_clear
4;4;1 260 pathaction!3_4;4;1,63
Consider method^2_0;2,485 485 _m3_do_put_on_2
0;2 25 pathaction!2_0;2,193
Consider method^3_1;4;1,367 367 m5_do_clear
1;4;1 184 pathaction!3_1;4;1,38
Consider method^3_4;2;4,398 398 m10_do_load_truck
4;2;4 31 pathaction!3_4;2;4,116
Consider method^2_0;4,373 373 m11_do_unload_truck
0;4 34 pathaction!2_0;4,649
Consider method^6_5;2;4;2;1;1,152 152 m5_do_clear
5;2;4;2;1;1 271 pathaction!6_5;2;4;2;1;1,40
Consider method^2_4;4,508 508 m11_do_unload_truck
4;4 152 pathaction!2_4;4,644
Consider method^3_6;2;4,92 92 m10_do_load_truck
6;2;4 168 pathaction!3_6;2;4,91
Consider method^1_1,84 84 m3_do_put_on
1 27 pathaction!1_1,373
Consider method^3_5;2;4,432 432 m10_do_load_truck
5;2;4 220 pathaction!3_5;2;4,110
Consider method^4_5;2;4;1,59 59 m7_do_get_truck
5;2;4;1 17 pathaction!4_5;2;4;1,290
Consider method^5_0;2;4;2;1,467 467 m5_do_clear
0;2;4;2;1 216 pathaction!5_0;2;4;2;1,53
Consider method^1_2,74 74 m2_do_put_on
2 215 pathaction!1_2,379
Consider method^2_8;2,46 46 m4_do_clear
8;2 97 pathaction!2_8;2,48
Consider method^3_3;2;4,481 481 m10_do_load_truck
3;2;4 14 pathaction!3_3;2;4,104
Consider method^1_5,281 281 m3_do_put_on
5 2 pathaction!1_5,371
Consider method^2_1;4,185 185 m11_do_unload_truck
1;4 259 pathaction!2_1;4,674
Consider method^3_6;4;1,388 388 m5_do_clear
6;4;1 139 pathaction!3_6;4;1,47
Consider method^4_6;2;4;1,59 59 m7_do_get_truck
6;2;4;1 203 pathaction!4_6;2;4;1,290
Consider method^2_3;4,406 406 m11_do_unload_truck
3;4 207 pathaction!2_3;4,670
Consider method^2_6;4,169 169 m11_do_unload_truck
6;4 205 pathaction!2_6;4,661
Consider method^4_3;2;4;2,191 191 m4_do_clear
3;2;4;2 136 pathaction!4_3;2;4;2,60
Consider method^2_1;2,104 104 _m3_do_put_on_2
1;2 208 pathaction!2_1;2,202
Consider method^1_10,128 128 m2_do_put_on
10 18 pathaction!1_10,378
Consider method^2_7;2,107 107 _m3_do_put_on_2
7;2 30 pathaction!2_7;2,203
Consider method^2_9;1,73 73 m7_do_get_truck
9;1 117 pathaction!2_9;1,282
Consider method^5_0;2;4;2;3,495 495 m6_do_get_truck
0;2;4;2;3 228 pathaction!5_0;2;4;2;3,288
Consider method^2_5;4,402 402 m11_do_unload_truck
5;4 157 pathaction!2_5;4,655
Consider method^7_5;2;4;2;1;1;1,271 271 m4_do_clear
5;2;4;2;1;1;1 112 pathaction!7_5;2;4;2;1;1;1,64
Consider method^2_8;1,453 453 m7_do_get_truck
8;1 130 pathaction!2_8;1,289
Consider method^7_5;2;4;2;1;1;3,134 134 m7_do_get_truck
5;2;4;2;1;1;3 133 pathaction!7_5;2;4;2;1;1;3,282
Consider method^4_6;4;1;1,411 411 m4_do_clear
6;4;1;1 253 pathaction!4_6;4;1;1,41
Consider method^5_7;2;4;2;1,387 387 m4_do_clear
7;2;4;2;1 119 pathaction!5_7;2;4;2;1,65
Consider method^4_1;4;1;3,142 142 m6_do_get_truck
1;4;1;3 98 pathaction!4_1;4;1;3,291
Consider method^2_5;2,376 376 _m3_do_put_on_2
5;2 198 pathaction!2_5;2,228
Consider method^0_,550 550 __top_1
 16 pathaction!0_,707
Consider method^4_1;2;4;1,214 214 m7_do_get_truck
1;2;4;1 225 pathaction!4_1;2;4;1,290
Consider method^4_3;2;4;1,468 468 m7_do_get_truck
3;2;4;1 251 pathaction!4_3;2;4;1,289
Consider method^4_4;2;4;2,39 39 m4_do_clear
4;2;4;2 149 pathaction!4_4;2;4;2,34
Consider method^3_7;4;1,357 357 m4_do_clear
7;4;1 95 pathaction!3_7;4;1,42
Consider method^1_7,156 156 m3_do_put_on
7 1 pathaction!1_7,377
Consider method^1_3,382 382 m3_do_put_on
3 185 pathaction!1_3,375
Consider method^4_1;2;4;2,139 139 m4_do_clear
1;2;4;2 23 pathaction!4_1;2;4;2,66
Consider method^3_3;4;1,449 449 m4_do_clear
3;4;1 241 pathaction!3_3;4;1,53
Consider method^4_0;2;4;1,504 504 m7_do_get_truck
0;2;4;1 9 pathaction!4_0;2;4;1,288
Consider method^6_5;2;4;2;1;3,132 132 m6_do_get_truck
5;2;4;2;1;3 232 pathaction!6_5;2;4;2;1;3,282
Consider method^3_0;2;4,541 541 m10_do_load_truck
0;2;4 100 pathaction!3_0;2;4,89
Consider method^1_9,108 108 m2_do_put_on
9 144 pathaction!1_9,370
Consider method^5_5;2;4;2;3,132 132 m6_do_get_truck
5;2;4;2;3 156 pathaction!5_5;2;4;2;3,282
Consider method^2_2;1,233 233 m7_do_get_truck
2;1 3 pathaction!2_2;1,288
Consider method^2_7;4,71 71 m11_do_unload_truck
7;4 167 pathaction!2_7;4,641
Consider method^1_0,302 302 m3_do_put_on
0 194 pathaction!1_0,380
Consider method^2_2;2,489 489 m4_do_clear
2;2 49 pathaction!2_2;2,56
Consider method^4_7;2;4;2,265 265 m5_do_clear
7;2;4;2 37 pathaction!4_7;2;4;2,54
Consider method^4_7;2;4;1,170 170 m7_do_get_truck
7;2;4;1 137 pathaction!4_7;2;4;1,287
Consider method^1_8,61 61 m2_do_put_on
8 270 pathaction!1_8,372
Consider method^4_4;2;4;1,214 214 m7_do_get_truck
4;2;4;1 265 pathaction!4_4;2;4;1,290
Consider method^4_0;2;4;2,209 209 m5_do_clear
0;2;4;2 129 pathaction!4_0;2;4;2,49
Consider method^4_5;2;4;2,362 362 m5_do_clear
5;2;4;2 165 pathaction!4_5;2;4;2,45
Consider method^1_4,328 328 m3_do_put_on
4 206 pathaction!1_4,376
Consider method^1_6,438 438 m3_do_put_on
6 59 pathaction!1_6,374
Consider method^2_9;2,60 60 m4_do_clear
9;2 5 pathaction!2_9;2,46
Consider method^3_0;4;1,390 390 m4_do_clear
0;4;1 21 pathaction!3_0;4;1,57
Consider method^3_5;4;1,30 30 m4_do_clear
5;4;1 268 pathaction!3_5;4;1,51
Consider method^3_7;2;4,45 45 m10_do_load_truck
7;2;4 124 pathaction!3_7;2;4,125
Consider method^4_1;4;1;1,350 350 m4_do_clear
1;4;1;1 189 pathaction!4_1;4;1;1,37
Consider method^2_3;2,194 194 _m3_do_put_on_2
3;2 142 pathaction!2_3;2,186
Consider method^5_7;2;4;2;3,112 112 m7_do_get_truck
7;2;4;2;3 118 pathaction!5_7;2;4;2;3,286
Consider method^3_1;2;4,227 227 m10_do_load_truck
1;2;4 55 pathaction!3_1;2;4,123
Consider method^2_10;1,182 182 m7_do_get_truck
10;1 8 pathaction!2_10;1,290
Consider method^5_5;2;4;2;1,543 543 m5_do_clear
5;2;4;2;1 181 pathaction!5_5;2;4;2;1,52
Consider method^6_0;2;4;2;1;1,337 337 m4_do_clear
0;2;4;2;1;1 11 pathaction!6_0;2;4;2;1;1,58
Consider method^2_6;2,415 415 _m3_do_put_on_2
6;2 115 pathaction!2_6;2,196
Consider method^4_6;4;1;3,451 451 m6_do_get_truck
6;4;1;3 128 pathaction!4_6;4;1;3,283
Consider method^4_6;2;4;2,241 241 m4_do_clear
6;2;4;2 127 pathaction!4_6;2;4;2,43


CHECKING primitive solution of length 159 ...
true 82 __method_precondition_m10_do_load_truck_10_precondition[crate5,depot1,crate1,hoist1;]
true 85 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot1;]
true 77 Drive[truck0,distributor1,depot1;]
true 62 __method_precondition_m5_do_clear_5_precondition[crate5,crate10,depot1,hoist1;]
true 107 __method_precondition_m5_do_clear_5_precondition[crate10,crate12,depot1,hoist1;]
true 84 __method_precondition_m4_do_clear_4_precondition[crate12,depot1;]
true 101 nop[;]
true 56 Lift[hoist1,crate12,crate10,depot1;]
true 86 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot1;]
true 162 nop[;]
true 96 Load[hoist1,crate12,truck0,depot1;]
true 158 Lift[hoist1,crate10,crate5,depot1;]
true 263 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot1;]
true 187 nop[;]
true 209 Load[hoist1,crate10,truck0,depot1;]
true 219 Lift[hoist1,crate5,crate1,depot1;]
true 269 Load[hoist1,crate5,truck0,depot1;]
true 169 Drive[truck0,depot1,depot0;]
true 264 __method_precondition_m11_do_unload_truck_11_precondition[pallet0,truck0,crate5,hoist0,depot0;]
true 274 __method_precondition_m4_do_clear_4_precondition[pallet0,depot0;]
true 178 nop[;]
true 67 Unload[hoist0,crate5,truck0,depot0;]
true 134 Drop[hoist0,crate5,pallet0,depot0;]
true 33 __method_precondition_m10_do_load_truck_10_precondition[crate13,distributor2,crate9,hoist5;]
true 108 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor2;]
true 231 Drive[truck1,depot1,distributor2;]
true 72 __method_precondition_m4_do_clear_4_precondition[crate13,distributor2;]
true 60 nop[;]
true 266 Lift[hoist5,crate13,crate9,distributor2;]
true 153 Load[hoist5,crate13,truck1,distributor2;]
true 229 Drive[truck1,distributor2,depot1;]
true 197 __method_precondition_m11_do_unload_truck_11_precondition[pallet1,truck1,crate13,hoist1,depot1;]
true 180 __method_precondition_m5_do_clear_5_precondition[pallet1,crate1,depot1,hoist1;]
true 192 __method_precondition_m4_do_clear_4_precondition[crate1,depot1;]
true 275 nop[;]
true 83 Lift[hoist1,crate1,pallet1,depot1;]
true 257 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot1;]
true 199 nop[;]
true 183 Load[hoist1,crate1,truck1,depot1;]
true 247 Unload[hoist1,crate13,truck1,depot1;]
true 76 Drop[hoist1,crate13,pallet1,depot1;]
true 195 __method_precondition_m2_do_put_on_2_precondition[crate10,truck0;]
true 4 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot1;]
true 193 Drive[truck0,depot0,depot1;]
true 63 __method_precondition_m4_do_clear_4_precondition[crate13,depot1;]
true 94 nop[;]
true 191 Unload[hoist1,crate10,truck0,depot1;]
true 244 Drop[hoist1,crate10,crate13,depot1;]
true 111 __method_precondition_m10_do_load_truck_10_precondition[crate14,distributor1,crate11,hoist4;]
true 123 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 174 Drive[truck0,depot1,distributor1;]
true 68 __method_precondition_m4_do_clear_4_precondition[crate14,distributor1;]
true 214 nop[;]
true 267 Lift[hoist4,crate14,crate11,distributor1;]
true 230 Load[hoist4,crate14,truck0,distributor1;]
true 233 Drive[truck0,distributor1,depot1;]
true 151 __method_precondition_m11_do_unload_truck_11_precondition[crate10,truck0,crate14,hoist1,depot1;]
true 104 __method_precondition_m4_do_clear_4_precondition[crate10,depot1;]
true 19 nop[;]
true 44 Unload[hoist1,crate14,truck0,depot1;]
true 166 Drop[hoist1,crate14,crate10,depot1;]
true 12 __method_precondition_m10_do_load_truck_10_precondition[crate9,distributor2,crate8,hoist5;]
true 240 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor2;]
true 88 Drive[truck1,depot1,distributor2;]
true 121 __method_precondition_m4_do_clear_4_precondition[crate9,distributor2;]
true 54 nop[;]
true 0 Lift[hoist5,crate9,crate8,distributor2;]
true 223 Load[hoist5,crate9,truck1,distributor2;]
true 182 Drive[truck1,distributor2,depot2;]
true 155 __method_precondition_m11_do_unload_truck_11_precondition[pallet2,truck1,crate9,hoist2,depot2;]
true 106 __method_precondition_m4_do_clear_4_precondition[pallet2,depot2;]
true 120 nop[;]
true 110 Unload[hoist2,crate9,truck1,depot2;]
true 236 Drop[hoist2,crate9,pallet2,depot2;]
true 40 __method_precondition_m10_do_load_truck_10_precondition[crate3,distributor2,crate0,hoist5;]
true 61 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor2;]
true 262 Drive[truck1,depot2,distributor2;]
true 239 __method_precondition_m5_do_clear_5_precondition[crate3,crate6,distributor2,hoist5;]
true 145 __method_precondition_m5_do_clear_5_precondition[crate6,crate7,distributor2,hoist5;]
true 172 __method_precondition_m5_do_clear_5_precondition[crate7,crate8,distributor2,hoist5;]
true 160 __method_precondition_m4_do_clear_4_precondition[crate8,distributor2;]
true 132 nop[;]
true 45 Lift[hoist5,crate8,crate7,distributor2;]
true 64 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor2;]
true 147 Drive[truck0,depot1,distributor2;]
true 7 Load[hoist5,crate8,truck0,distributor2;]
true 20 Lift[hoist5,crate7,crate6,distributor2;]
true 35 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor2;]
true 200 nop[;]
true 69 Load[hoist5,crate7,truck0,distributor2;]
true 143 Lift[hoist5,crate6,crate3,distributor2;]
true 41 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor2;]
true 273 nop[;]
true 89 Load[hoist5,crate6,truck0,distributor2;]
true 261 Lift[hoist5,crate3,crate0,distributor2;]
true 243 Load[hoist5,crate3,truck1,distributor2;]
true 254 Drive[truck1,distributor2,depot2;]
true 78 __method_precondition_m11_do_unload_truck_11_precondition[crate9,truck1,crate3,hoist2,depot2;]
true 109 __method_precondition_m4_do_clear_4_precondition[crate9,depot2;]
true 213 nop[;]
true 164 Unload[hoist2,crate3,truck1,depot2;]
true 249 Drop[hoist2,crate3,crate9,depot2;]
true 170 __method_precondition_m10_do_load_truck_10_precondition[crate0,distributor2,pallet5,hoist5;]
true 22 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor2;]
true 81 Drive[truck1,depot2,distributor2;]
true 105 __method_precondition_m4_do_clear_4_precondition[crate0,distributor2;]
true 175 nop[;]
true 93 Lift[hoist5,crate0,pallet5,distributor2;]
true 42 Load[hoist5,crate0,truck1,distributor2;]
true 171 Drive[truck1,distributor2,distributor1;]
true 204 __method_precondition_m11_do_unload_truck_11_precondition[pallet4,truck1,crate0,hoist4,distributor1;]
true 217 __method_precondition_m5_do_clear_5_precondition[pallet4,crate11,distributor1,hoist4;]
true 154 __method_precondition_m4_do_clear_4_precondition[crate11,distributor1;]
true 103 nop[;]
true 50 Lift[hoist4,crate11,pallet4,distributor1;]
true 135 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 53 nop[;]
true 80 Load[hoist4,crate11,truck1,distributor1;]
true 188 Unload[hoist4,crate0,truck1,distributor1;]
true 70 Drop[hoist4,crate0,pallet4,distributor1;]
true 150 __method_precondition_m10_do_load_truck_10_precondition[crate2,distributor0,pallet3,hoist3;]
true 71 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 211 Drive[truck1,distributor1,distributor0;]
true 196 __method_precondition_m5_do_clear_5_precondition[crate2,crate4,distributor0,hoist3;]
true 238 __method_precondition_m4_do_clear_4_precondition[crate4,distributor0;]
true 126 nop[;]
true 38 Lift[hoist3,crate4,crate2,distributor0;]
true 131 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor0;]
true 201 Drive[truck0,distributor2,distributor0;]
true 15 Load[hoist3,crate4,truck0,distributor0;]
true 222 Lift[hoist3,crate2,pallet3,distributor0;]
true 234 Load[hoist3,crate2,truck1,distributor0;]
true 43 Drive[truck1,distributor0,distributor1;]
true 125 __method_precondition_m11_do_unload_truck_11_precondition[crate0,truck1,crate2,hoist4,distributor1;]
true 122 __method_precondition_m4_do_clear_4_precondition[crate0,distributor1;]
true 252 nop[;]
true 51 Unload[hoist4,crate2,truck1,distributor1;]
true 237 Drop[hoist4,crate2,crate0,distributor1;]
true 272 __method_precondition_m2_do_put_on_2_precondition[crate6,truck0;]
true 92 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 161 Drive[truck0,distributor0,distributor1;]
true 46 __method_precondition_m4_do_clear_4_precondition[crate2,distributor1;]
true 91 nop[;]
true 226 Unload[hoist4,crate6,truck0,distributor1;]
true 116 Drop[hoist4,crate6,crate2,distributor1;]
true 90 __method_precondition_m2_do_put_on_2_precondition[crate12,truck0;]
true 221 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor2;]
true 57 Drive[truck0,distributor1,distributor2;]
true 138 __method_precondition_m4_do_clear_4_precondition[pallet5,distributor2;]
true 250 nop[;]
true 210 Unload[hoist5,crate12,truck0,distributor2;]
true 73 Drop[hoist5,crate12,pallet5,distributor2;]
true 186 __method_precondition_m2_do_put_on_2_precondition[crate1,truck1;]
true 159 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor2;]
true 224 Drive[truck1,distributor1,distributor2;]
true 246 __method_precondition_m4_do_clear_4_precondition[crate12,distributor2;]
true 66 nop[;]
true 248 Unload[hoist5,crate1,truck1,distributor2;]
true 26 Drop[hoist5,crate1,crate12,distributor2;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 446
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 892
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 1338
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 1784
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 2230
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 2676
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 3122
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 3568
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 4014
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 4460
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 4906
TSTG: 2147483647
Method: 2147483647
DP max: 3
Taking minimum: 3
LEN 12
ICAPS: 5352
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 5798
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 6244
TSTG: 2147483647
Method: 2147483647
DP max: 4
Taking minimum: 4
LEN 15
ICAPS: 6690
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 16
ICAPS: 7136
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 7582
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 18
ICAPS: 8028
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 19
ICAPS: 8474
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
LEN 20
ICAPS: 8920
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 21
ICAPS: 9366
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 22
ICAPS: 9812
TSTG: 2147483647
Method: 2147483647
DP max: 6
Taking minimum: 6
LEN 23
ICAPS: 10258
TSTG: 2147483647
Method: 2147483647
DP max: 7
Taking minimum: 7
LEN 24
ICAPS: 10704
TSTG: 2147483647
Method: 2147483647
DP max: 8
Taking minimum: 8
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 96
  lower bound = 23

Running SAT search with cost bound = 59
==================================================
  upper bound = 96
  lower bound = 23
LEN 59
ICAPS: 26314
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 101 will abort at 9223372036854745059
DP max: 19
Taking minimum: 19
Generating initial PDT ... done
initial PDT has 2784 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 2720 leafs
SHOP LEAFS 1152
Assignment implications
Generating clauses representing decomposition ... done
At most K: 774ms input: 11030 K = 59
Number of actions Formula: 849ms for 1312510 clauses
Layers: 12 paths 2720
Layer 1 g 0 = 0 - 1 / 0 clauses 3703281
Layer 1 g 1 = 2 - 3 / 2 clauses 3703281
Layer 1 g 2 = 4 - 5 / 4 clauses 3703281
Layer 1 g 3 = 6 - 7 / 6 clauses 3703281
Layer 1 g 4 = 8 - 9 / 8 clauses 3703281
Layer 1 g 5 = 10 - 11 / 10 clauses 3703281
Layer 1 g 6 = 12 - 13 / 12 clauses 3703281
Layer 1 g 7 = 14 - 15 / 14 clauses 3703281
Layer 1 g 8 = 16 - 17 / 16 clauses 3703281
Layer 1 g 9 = 18 - 19 / 18 clauses 3703281
Layer 1 g 10 = 20 - 21 / 20Still waiting ... running for 83007 will abort at 9223372036854745059
 clauses 3703281
Layer 1 g 11 = 22 - 23 / 22 clauses 3703281
Layer 1 g 12 = 24 - 25 / 24 clauses 3703281
Layer 1 g 13 = 26 - 27 / 26 clauses 3703281
Layer 1 g 14 = 28 - 29 / 28 clauses 3703281
Layer 1 g 15 = 30 - 31 / 30 clauses 3703281
Layer 1 g 16 = 32 - 33 / 32 clauses 3703281
Layer 1 g 17 = 34 - 35 / 34
RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 161.852 MEMPEAK_KBS 8034148.352
