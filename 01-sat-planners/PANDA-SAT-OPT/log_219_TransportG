PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication-optimise(bin)(cms55) -programPath cryptominisat55=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile27.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile27.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : false
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	optimise         : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile27.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Grounded planning graph ... done in 347ms.
	Number of Grounded Actions 770
	Number of Grounded Literals 246
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Grounding ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 246
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 129ms.
	Number of Grounded Actions 770
	Number of Grounded Literals 195
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 65ms.
	Number of Grounded Actions 770
	Number of Grounded Literals 195
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 466
	number of tasks = 1236
	number of decomposition methods = 1316
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 466
	number of tasks = 1236
	number of decomposition methods = 1316
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Tasks 770 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772290ms

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854772159
done
initial PDT has 60 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 60 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 56745
Size 56745 at 0/770
Size 51729 at 500/770
Size 37013
Size 37013 at 0/770
Size 18567 at 500/770
Size 10029
Size 10029 at 0/770
Size 1181 at 500/770
Size 857
Size 857 at 0/770
Size 855 at 500/770
Size 855
Size 855 at 0/770
Size 855 at 500/770
Size 855
Invariant time: 0.659
Number of invariants: 855
Invariant Clauses 52155
NUMBER OF CLAUSES 91111
NUMBER OF STATE CLAUSES 79360
NUMBER OF DECOMPOSITION CLAUSES 11751
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 87.10000000000001% 12.9% 0.0% 
NUMBER OF PATHS 60
Starting cryptominisat5.5
Setting starttime of solver to 1604531745365
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770092
done
initial PDT has 90 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 90 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 77805
NUMBER OF CLAUSES 196191
NUMBER OF STATE CLAUSES 125005
NUMBER OF DECOMPOSITION CLAUSES 71186
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 63.72% 36.28% 0.0% 
NUMBER OF PATHS 90
Starting cryptominisat5.5
Setting starttime of solver to 1604531746546
Command exited with non-zero status 20
0.05 0.01

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854768937
done
initial PDT has 145 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 145 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 124830
NUMBER OF CLAUSES 547231
NUMBER OF STATE CLAUSES 214225
NUMBER OF DECOMPOSITION CLAUSES 333006
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 39.15% 60.85% 0.0% 
NUMBER OF PATHS 145
Starting cryptominisat5.5
Setting starttime of solver to 1604531748661
Command exited with non-zero status 10
0.31 0.00

Time command gave the following runtime for the solver: 310
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_2;0,511 511 m-drive-to-via
2;0 241 pathaction!2_2;0,695
Consider method^4_6;0;0;0,1269 1269 m-drive-to
6;0;0;0 141 pathaction!4_6;0;0;0,717
Consider method^4_1;2;0;0,690 690 m-drive-to
1;2;0;0 64 pathaction!4_1;2;0;0,748
Consider method^2_10;2,673 673 m-drive-to-via
10;2 110 pathaction!2_10;2,717
Consider method^3_4;2;0,575 575 m-drive-to-via
4;2;0 0 pathaction!3_4;2;0,715
Consider method^2_9;1,939 939 m-load
9;1 192 pathaction!2_9;1,80
Consider method^3_2;0;0,513 513 m-drive-to-via
2;0;0 128 pathaction!3_2;0;0,730
Consider method^1_0,863 863 m-deliver
0 53 pathaction!1_0,157
Consider method^4_13;0;0;0,99 99 m-drive-to
13;0;0;0 19 pathaction!4_13;0;0;0,751
Consider method^2_12;3,334 334 m-unload
12;3 17 pathaction!2_12;3,1075
Consider method^2_2;2,398 398 m-drive-to-via
2;2 145 pathaction!2_2;2,749
Consider method^2_7;3,41 41 m-unload
7;3 222 pathaction!2_7;3,1045
Consider method^1_9,1054 1054 m-deliver
9 71 pathaction!1_9,160
Consider method^2_12;2,827 827 m-drive-to-via
12;2 138 pathaction!2_12;2,760
Consider method^4_14;2;0;0,1158 1158 m-drive-to
14;2;0;0 129 pathaction!4_14;2;0;0,707
Consider method^4_2;0;0;0,1009 1009 m-drive-to
2;0;0;0 62 pathaction!4_2;0;0;0,727
Consider method^1_6,1186 1186 m-deliver
6 149 pathaction!1_6,155
Consider method^4_4;2;0;0,439 439 m-drive-to
4;2;0;0 168 pathaction!4_4;2;0;0,716
Consider method^2_10;3,1148 1148 m-unload
10;3 69 pathaction!2_10;3,1051
Consider method^3_12;0;0,1260 1260 m-drive-to-via
12;0;0 89 pathaction!3_12;0;0,717
Consider method^2_5;1,902 902 m-load
5;1 124 pathaction!2_5;1,49
Consider method^2_5;2,267 267 m-drive-to-via
5;2 22 pathaction!2_5;2,690
Consider method^2_8;3,738 738 m-unload
8;3 4 pathaction!2_8;3,1072
Consider method^0_,1315 1315 __top_1
 107 pathaction!0_,1085
Consider method^2_2;3,1114 1114 m-unload
2;3 131 pathaction!2_2;3,1054
Consider method^2_0;0,277 277 m-drive-to-via
0;0 163 pathaction!2_0;0,729
Consider method^4_4;0;0;0,792 792 m-drive-to
4;0;0;0 209 pathaction!4_4;0;0;0,715
Consider method^2_14;3,580 580 m-unload
14;3 91 pathaction!2_14;3,1062
Consider method^3_11;2;0,1128 1128 m-drive-to-via
11;2;0 43 pathaction!3_11;2;0,696
Consider method^3_13;2;0,1120 1120 m-drive-to-via
13;2;0 123 pathaction!3_13;2;0,740
Consider method^4_12;0;0;0,1138 1138 m-drive-to
12;0;0;0 114 pathaction!4_12;0;0;0,723
Consider method^2_4;0,199 199 m-drive-to-via
4;0 230 pathaction!2_4;0,731
Consider method^1_5,244 244 m-deliver
5 223 pathaction!1_5,159
Consider method^2_7;1,660 660 m-load
7;1 76 pathaction!2_7;1,5
Consider method^2_6;0,1028 1028 m-drive-to-via
6;0 204 pathaction!2_6;0,754
Consider method^4_8;2;0;0,693 693 m-drive-to
8;2;0;0 77 pathaction!4_8;2;0;0,706
Consider method^3_2;2;0,160 160 m-drive-to
2;2;0 184 pathaction!3_2;2;0,754
Consider method^2_3;3,466 466 m-unload
3;3 216 pathaction!2_3;3,1035
Consider method^3_9;0;0,856 856 m-drive-to-via
9;0;0 154 pathaction!3_9;0;0,730
Consider method^4_9;0;0;0,234 234 m-drive-to
9;0;0;0 82 pathaction!4_9;0;0;0,695
Consider method^1_14,648 648 m-deliver
14 212 pathaction!1_14,158
Consider method^4_0;0;0;0,399 399 m-drive-to
0;0;0;0 24 pathaction!4_0;0;0;0,751
Consider method^2_10;0,790 790 m-drive-to-via
10;0 174 pathaction!2_10;0,700
Consider method^2_3;0,308 308 m-drive-to-via
3;0 11 pathaction!2_3;0,706
Consider method^4_0;2;0;0,1216 1216 m-drive-to
0;2;0;0 21 pathaction!4_0;2;0;0,705
Consider method^2_12;1,441 441 m-load
12;1 167 pathaction!2_12;1,13
Consider method^2_0;1,1056 1056 m-load
0;1 27 pathaction!2_0;1,81
Consider method^2_8;1,444 444 m-load
8;1 121 pathaction!2_8;1,58
Consider method^2_0;2,941 941 m-drive-to-via
0;2 186 pathaction!2_0;2,690
Consider method^2_8;0,694 694 m-drive-to
8;0 75 pathaction!2_8;0,711
Consider method^2_11;0,923 923 m-drive-to-via
11;0 72 pathaction!2_11;0,764
Consider method^2_4;3,115 115 m-unload
4;3 156 pathaction!2_4;3,1025
Consider method^2_14;0,1005 1005 m-drive-to
14;0 182 pathaction!2_14;0,699
Consider method^2_14;2,302 302 m-drive-to-via
14;2 1 pathaction!2_14;2,711
Consider method^3_6;0;0,421 421 m-drive-to-via
6;0;0 40 pathaction!3_6;0;0,749
Consider method^2_6;3,1228 1228 m-unload
6;3 81 pathaction!2_6;3,1055
Consider method^2_11;3,721 721 m-unload
11;3 32 pathaction!2_11;3,1039
Consider method^2_0;3,64 64 m-unload
0;3 108 pathaction!2_0;3,1082
Consider method^1_8,741 741 m-deliver
8 86 pathaction!1_8,150
Consider method^4_13;2;0;0,1216 1216 m-drive-to
13;2;0;0 112 pathaction!4_13;2;0;0,705
Consider method^2_11;2,1176 1176 m-drive-to-via
11;2 52 pathaction!2_11;2,725
Consider method^2_4;1,89 89 m-load
4;1 164 pathaction!2_4;1,141
Consider method^2_1;2,187 187 m-drive-to-via
1;2 172 pathaction!2_1;2,719
Consider method^1_10,65 65 m-deliver
10 162 pathaction!1_10,162
Consider method^4_3;0;0;0,985 985 m-drive-to
3;0;0;0 15 pathaction!4_3;0;0;0,691
Consider method^2_13;1,488 488 m-load
13;1 96 pathaction!2_13;1,40
Consider method^3_3;0;0,1290 1290 m-drive-to-via
3;0;0 18 pathaction!3_3;0;0,763
Consider method^3_6;2;0,205 205 m-drive-to-via
6;2;0 191 pathaction!3_6;2;0,695
Consider method^2_9;3,684 684 m-unload
9;3 218 pathaction!2_9;3,1065
Consider method^1_1,1297 1297 m-deliver
1 205 pathaction!1_1,151
Consider method^3_1;2;0,512 512 m-drive-to-via
1;2;0 79 pathaction!3_1;2;0,740
Consider method^4_11;0;0;0,173 173 m-drive-to
11;0;0;0 66 pathaction!4_11;0;0;0,696
Consider method^3_12;2;0,785 785 m-drive-to
12;2;0 247 pathaction!3_12;2;0,730
Consider method^3_14;2;0,841 841 m-drive-to-via
14;2;0 109 pathaction!3_14;2;0,706
Consider method^4_10;0;0;0,95 95 m-drive-to
10;0;0;0 51 pathaction!4_10;0;0;0,744
Consider method^1_3,28 28 m-deliver
3 135 pathaction!1_3,156
Consider method^1_2,703 703 m-deliver
2 153 pathaction!1_2,164
Consider method^3_1;0;0,626 626 m-drive-to-via
1;0;0 116 pathaction!3_1;0;0,705
Consider method^4_1;0;0;0,99 99 m-drive-to
1;0;0;0 3 pathaction!4_1;0;0;0,751
Consider method^2_12;0,421 421 m-drive-to-via
12;0 254 pathaction!2_12;0,749
Consider method^3_4;0;0,297 297 m-drive-to-via
4;0;0 171 pathaction!3_4;0;0,716
Consider method^1_13,1151 1151 m-deliver
13 190 pathaction!1_13,154
Consider method^2_13;2,187 187 m-drive-to-via
13;2 221 pathaction!2_13;2,719
Consider method^3_10;0;0,1293 1293 m-drive-to-via
10;0;0 201 pathaction!3_10;0;0,749
Consider method^2_5;3,1273 1273 m-unload
5;3 42 pathaction!2_5;3,1064
Consider method^1_11,1049 1049 m-deliver
11 234 pathaction!1_11,163
Consider method^2_3;1,797 797 m-load
3;1 158 pathaction!2_3;1,135
Consider method^2_7;0,1060 1060 m-i-am-there
7;0 187 pathaction!2_7;0,737
Consider method^4_5;2;0;0,1298 1298 m-drive-to
5;2;0;0 188 pathaction!4_5;2;0;0,740
Consider method^4_10;2;0;0,453 453 m-drive-to
10;2;0;0 7 pathaction!4_10;2;0;0,754
Consider method^2_2;1,960 960 m-load
2;1 240 pathaction!2_2;1,106
Consider method^2_1;1,611 611 m-load
1;1 178 pathaction!2_1;1,89
Consider method^2_3;2,1048 1048 m-drive-to-via
3;2 34 pathaction!2_3;2,737
Consider method^3_11;0;0,1045 1045 m-drive-to-via
11;0;0 120 pathaction!3_11;0;0,722
Consider method^1_12,515 515 m-deliver
12 256 pathaction!1_12,161
Consider method^4_6;2;0;0,132 132 m-drive-to
6;2;0;0 47 pathaction!4_6;2;0;0,695
Consider method^3_13;0;0,626 626 m-drive-to-via
13;0;0 229 pathaction!3_13;0;0,705
Consider method^2_7;2,595 595 m-drive-to-via
7;2 115 pathaction!2_7;2,706
Consider method^2_4;2,1291 1291 m-drive-to-via
4;2 166 pathaction!2_4;2,703
Consider method^2_13;3,108 108 m-unload
13;3 130 pathaction!2_13;3,1070
Consider method^2_6;2,395 395 m-drive-to-via
6;2 180 pathaction!2_6;2,709
Consider method^2_1;3,1220 1220 m-unload
1;3 134 pathaction!2_1;3,1050
Consider method^3_9;2;0,472 472 m-drive-to
9;2;0 170 pathaction!3_9;2;0,744
Consider method^3_0;2;0,188 188 m-drive-to-via
0;2;0 2 pathaction!3_0;2;0,751
Consider method^2_11;1,740 740 m-load
11;1 117 pathaction!2_11;1,144
Consider method^2_10;1,209 209 m-load
10;1 195 pathaction!2_10;1,77
Consider method^1_7,385 385 m-deliver
7 65 pathaction!1_7,152
Consider method^2_1;0,1120 1120 m-drive-to-via
1;0 6 pathaction!2_1;0,740
Consider method^3_5;0;0,1298 1298 m-drive-to
5;0;0 133 pathaction!3_5;0;0,740
Consider method^2_6;1,354 354 m-load
6;1 194 pathaction!2_6;1,122
Consider method^3_10;2;0,398 398 m-drive-to-via
10;2;0 118 pathaction!3_10;2;0,749
Consider method^2_14;1,571 571 m-load
14;1 126 pathaction!2_14;1,9
Consider method^4_11;2;0;0,125 125 m-drive-to
11;2;0;0 203 pathaction!4_11;2;0;0,722
Consider method^3_8;2;0,165 165 m-drive-to-via
8;2;0 139 pathaction!3_8;2;0,720
Consider method^3_0;0;0,626 626 m-drive-to-via
0;0;0 8 pathaction!3_0;0;0,705
Consider method^2_8;2,553 553 m-drive-to-via
8;2 173 pathaction!2_8;2,734
Consider method^2_9;2,335 335 m-drive-to-via
9;2 57 pathaction!2_9;2,755
Consider method^2_9;0,1233 1233 m-drive-to-via
9;0 211 pathaction!2_9;0,762
Consider method^3_3;2;0,1059 1059 m-drive-to
3;2;0 242 pathaction!3_3;2;0,702
Consider method^1_4,118 118 m-deliver
4 125 pathaction!1_4,153
Consider method^3_7;2;0,914 914 m-drive-to
7;2;0 199 pathaction!3_7;2;0,702
Consider method^2_5;0,187 187 m-drive-to-via
5;0 206 pathaction!2_5;0,719
Consider method^3_5;2;0,1024 1024 m-drive-to-via
5;2;0 20 pathaction!3_5;2;0,753
Consider method^2_13;0,277 277 m-drive-to-via
13;0 255 pathaction!2_13;0,729


CHECKING primitive solution of length 108 ...
true 127 drive[truck-2,city-loc-7,city-loc-4;]
true 101 drive[truck-2,city-loc-4,city-loc-8;]
true 88 drive[truck-2,city-loc-8,city-loc-5;]
true 39 pick-up[truck-2,city-loc-5,package-0,capacity-1,capacity-2;]
true 183 drive[truck-2,city-loc-5,city-loc-8;]
true 151 drive[truck-2,city-loc-8,city-loc-4;]
true 137 drive[truck-2,city-loc-4,city-loc-9;]
true 14 drop[truck-2,city-loc-9,package-0,capacity-1,capacity-2;]
true 58 drive[truck-2,city-loc-9,city-loc-4;]
true 189 drive[truck-2,city-loc-4,city-loc-8;]
true 228 drive[truck-2,city-loc-8,city-loc-2;]
true 246 pick-up[truck-2,city-loc-2,package-1,capacity-1,capacity-2;]
true 104 drive[truck-2,city-loc-2,city-loc-10;]
true 83 drive[truck-2,city-loc-10,city-loc-2;]
true 252 drive[truck-2,city-loc-2,city-loc-0;]
true 233 drop[truck-2,city-loc-0,package-1,capacity-1,capacity-2;]
true 144 drive[truck-3,city-loc-3,city-loc-10;]
true 23 drive[truck-3,city-loc-10,city-loc-2;]
true 157 drive[truck-3,city-loc-2,city-loc-11;]
true 179 pick-up[truck-3,city-loc-11,package-2,capacity-1,capacity-2;]
true 227 drive[truck-3,city-loc-11,city-loc-13;]
true 165 drive[truck-3,city-loc-13,city-loc-8;]
true 239 drop[truck-3,city-loc-8,package-2,capacity-1,capacity-2;]
true 44 drive[truck-0,city-loc-12,city-loc-10;]
true 136 drive[truck-0,city-loc-10,city-loc-3;]
true 60 drive[truck-0,city-loc-3,city-loc-8;]
true 148 pick-up[truck-0,city-loc-8,package-3,capacity-1,capacity-2;]
true 37 drive[truck-0,city-loc-8,city-loc-2;]
true 25 drive[truck-0,city-loc-2,city-loc-6;]
true 122 drop[truck-0,city-loc-6,package-3,capacity-1,capacity-2;]
true 224 drive[truck-1,city-loc-3,city-loc-8;]
true 140 drive[truck-1,city-loc-8,city-loc-4;]
true 50 drive[truck-1,city-loc-4,city-loc-7;]
true 5 pick-up[truck-1,city-loc-7,package-4,capacity-1,capacity-2;]
true 132 drive[truck-1,city-loc-7,city-loc-4;]
true 106 drive[truck-1,city-loc-4,city-loc-8;]
true 99 drive[truck-1,city-loc-8,city-loc-13;]
true 26 drop[truck-1,city-loc-13,package-4,capacity-1,capacity-2;]
true 56 drive[truck-2,city-loc-0,city-loc-2;]
true 226 drive[truck-2,city-loc-2,city-loc-0;]
true 177 pick-up[truck-2,city-loc-0,package-5,capacity-1,capacity-2;]
true 232 drive[truck-2,city-loc-0,city-loc-2;]
true 181 drive[truck-2,city-loc-2,city-loc-11;]
true 207 drive[truck-2,city-loc-11,city-loc-9;]
true 48 drop[truck-2,city-loc-9,package-5,capacity-1,capacity-2;]
true 243 drive[truck-3,city-loc-8,city-loc-4;]
true 251 drive[truck-3,city-loc-4,city-loc-8;]
true 93 drive[truck-3,city-loc-8,city-loc-13;]
true 202 pick-up[truck-3,city-loc-13,package-6,capacity-1,capacity-2;]
true 29 drive[truck-3,city-loc-13,city-loc-11;]
true 200 drive[truck-3,city-loc-11,city-loc-11;]
true 253 drive[truck-3,city-loc-11,city-loc-1;]
true 245 drop[truck-3,city-loc-1,package-6,capacity-1,capacity-2;]
true 97 noop[truck-0,city-loc-6;]
true 236 pick-up[truck-0,city-loc-6,package-7,capacity-1,capacity-2;]
true 94 drive[truck-0,city-loc-6,city-loc-2;]
true 102 drive[truck-0,city-loc-2,city-loc-8;]
true 105 drop[truck-0,city-loc-8,package-7,capacity-1,capacity-2;]
true 159 drive[truck-0,city-loc-8,city-loc-5;]
true 16 pick-up[truck-0,city-loc-5,package-8,capacity-1,capacity-2;]
true 161 drive[truck-0,city-loc-5,city-loc-8;]
true 55 drive[truck-0,city-loc-8,city-loc-13;]
true 85 drive[truck-0,city-loc-13,city-loc-11;]
true 84 drop[truck-0,city-loc-11,package-8,capacity-1,capacity-2;]
true 68 drive[truck-3,city-loc-1,city-loc-11;]
true 160 drive[truck-3,city-loc-11,city-loc-2;]
true 63 drive[truck-3,city-loc-2,city-loc-0;]
true 210 pick-up[truck-3,city-loc-0,package-9,capacity-1,capacity-2;]
true 103 drive[truck-3,city-loc-0,city-loc-14;]
true 119 drive[truck-3,city-loc-14,city-loc-12;]
true 100 drop[truck-3,city-loc-12,package-9,capacity-1,capacity-2;]
true 113 drive[truck-3,city-loc-12,city-loc-14;]
true 185 drive[truck-3,city-loc-14,city-loc-8;]
true 54 drive[truck-3,city-loc-8,city-loc-3;]
true 67 pick-up[truck-3,city-loc-3,package-10,capacity-1,capacity-2;]
true 248 drive[truck-3,city-loc-3,city-loc-13;]
true 10 drive[truck-3,city-loc-13,city-loc-8;]
true 9 drive[truck-3,city-loc-8,city-loc-4;]
true 208 drop[truck-3,city-loc-4,package-10,capacity-1,capacity-2;]
true 225 drive[truck-1,city-loc-13,city-loc-11;]
true 78 drive[truck-1,city-loc-11,city-loc-2;]
true 198 drive[truck-1,city-loc-2,city-loc-6;]
true 35 pick-up[truck-1,city-loc-6,package-11,capacity-1,capacity-2;]
true 74 drive[truck-1,city-loc-6,city-loc-2;]
true 215 drive[truck-1,city-loc-2,city-loc-11;]
true 61 drive[truck-1,city-loc-11,city-loc-1;]
true 98 drop[truck-1,city-loc-1,package-11,capacity-1,capacity-2;]
true 217 drive[truck-3,city-loc-4,city-loc-7;]
true 213 drive[truck-3,city-loc-7,city-loc-4;]
true 73 drive[truck-3,city-loc-4,city-loc-8;]
true 49 pick-up[truck-3,city-loc-8,package-12,capacity-1,capacity-2;]
true 28 drive[truck-3,city-loc-8,city-loc-2;]
true 30 drive[truck-3,city-loc-2,city-loc-6;]
true 237 drop[truck-3,city-loc-6,package-12,capacity-1,capacity-2;]
true 175 drive[truck-2,city-loc-9,city-loc-4;]
true 249 drive[truck-2,city-loc-4,city-loc-8;]
true 235 drive[truck-2,city-loc-8,city-loc-5;]
true 87 pick-up[truck-2,city-loc-5,package-13,capacity-1,capacity-2;]
true 231 drive[truck-2,city-loc-5,city-loc-8;]
true 12 drive[truck-2,city-loc-8,city-loc-2;]
true 143 drive[truck-2,city-loc-2,city-loc-0;]
true 152 drop[truck-2,city-loc-0,package-13,capacity-1,capacity-2;]
true 169 drive[truck-0,city-loc-11,city-loc-9;]
true 146 pick-up[truck-0,city-loc-9,package-14,capacity-1,capacity-2;]
true 90 drive[truck-0,city-loc-9,city-loc-4;]
true 150 drive[truck-0,city-loc-4,city-loc-8;]
true 45 drive[truck-0,city-loc-8,city-loc-5;]
true 33 drop[truck-0,city-loc-5,package-14,capacity-1,capacity-2;]
 done.
Computing the upper bound
Computing the lower bound
LEN 1
ICAPS: 934
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 2
ICAPS: 1868
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 3
ICAPS: 2802
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 4
ICAPS: 3736
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 5
ICAPS: 4670
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 6
ICAPS: 5604
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 7
ICAPS: 6538
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 8
ICAPS: 7472
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 9
ICAPS: 8406
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 10
ICAPS: 9340
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 11
ICAPS: 10274
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 12
ICAPS: 11208
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 13
ICAPS: 12142
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 14
ICAPS: 13076
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 15
ICAPS: 14010
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 16
ICAPS: 14944
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 17
ICAPS: 15878
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 18
ICAPS: 16812
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 19
ICAPS: 17746
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 20
ICAPS: 18680
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 21
ICAPS: 19614
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 22
ICAPS: 20548
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 23
ICAPS: 21482
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 24
ICAPS: 22416
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 25
ICAPS: 23350
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 26
ICAPS: 24284
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 27
ICAPS: 25218
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 28
ICAPS: 26152
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 29
ICAPS: 27086
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 30
ICAPS: 28020
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 31
ICAPS: 28954
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 32
ICAPS: 29888
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 33
ICAPS: 30822
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 34
ICAPS: 31756
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 35
ICAPS: 32690
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 36
ICAPS: 33624
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 37
ICAPS: 34558
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 38
ICAPS: 35492
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 39
ICAPS: 36426
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 40
ICAPS: 37360
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 41
ICAPS: 38294
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 42
ICAPS: 39228
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 43
ICAPS: 40162
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 44
ICAPS: 41096
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 45
ICAPS: 42030
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 46
ICAPS: 42964
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 47
ICAPS: 43898
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 48
ICAPS: 44832
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 49
ICAPS: 45766
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 50
ICAPS: 46700
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 51
ICAPS: 47634
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 52
ICAPS: 48568
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 53
ICAPS: 49502
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 54
ICAPS: 50436
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 55
ICAPS: 51370
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 56
ICAPS: 52304
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 57
ICAPS: 53238
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 58
ICAPS: 54172
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 59
ICAPS: 55106
TSTG: 2147483647
Method: 2147483647
DP max: 0
Taking minimum: 0
LEN 60
ICAPS: 56040
TSTG: 2147483647
Method: 2147483647
DP max: 5
Taking minimum: 5
Starting cost optimisation, using binary search = true
=====================================================================
  upper bound = 108
  lower bound = 59

Running SAT search with cost bound = 83
==================================================
  upper bound = 108
  lower bound = 59
LEN 83
ICAPS: 77522
TSTG: 2147483647
Method: 2147483647
Still waiting ... running for 101 will abort at 9223372036854765523
DP max: 28
Taking minimum: 28
Generating initial PDT ... done
initial PDT has 1410 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 1410 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Still waiting ... running for 83990 will abort at 9223372036854765523

RUNWATCH_RESULT MEMOUT RETVAL 130 TIME_SECS 272.292 MEMPEAK_KBS 8009131.008
