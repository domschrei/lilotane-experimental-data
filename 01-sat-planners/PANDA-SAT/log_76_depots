PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p16.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p16.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p16.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Grounded planning graph ... done in 356ms.
	Number of Grounded Actions 819
	Number of Grounded Literals 183
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Grounding ... done.
	number of abstract tasks = 161
	number of tasks = 635
	number of decomposition methods = 537
	number of predicates = 202
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 161
	number of tasks = 635
	number of decomposition methods = 537
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 64ms.
	Number of Grounded Actions 474
	Number of Grounded Literals 145
	number of abstract tasks = 161
	number of tasks = 635
	number of decomposition methods = 537
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 161
	number of tasks = 635
	number of decomposition methods = 537
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 102
	number of tasks = 576
	number of decomposition methods = 478
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 102
	number of tasks = 576
	number of decomposition methods = 478
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 102
	number of tasks = 576
	number of decomposition methods = 478
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 32ms.
	Number of Grounded Actions 474
	Number of Grounded Literals 145
	number of abstract tasks = 102
	number of tasks = 576
	number of decomposition methods = 478
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 102
	number of tasks = 576
	number of decomposition methods = 478
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 78
	number of tasks = 552
	number of decomposition methods = 454
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 78
	number of tasks = 552
	number of decomposition methods = 454
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 78
	number of tasks = 552
	number of decomposition methods = 454
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 14ms.
	Number of Grounded Actions 474
	Number of Grounded Literals 145
	number of abstract tasks = 78
	number of tasks = 552
	number of decomposition methods = 454
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 78
	number of tasks = 552
	number of decomposition methods = 454
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 74
	number of tasks = 548
	number of decomposition methods = 450
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 74
	number of tasks = 548
	number of decomposition methods = 450
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 74
	number of tasks = 548
	number of decomposition methods = 450
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 47ms.
	Number of Grounded Actions 474
	Number of Grounded Literals 145
	number of abstract tasks = 74
	number of tasks = 548
	number of decomposition methods = 450
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 74
	number of tasks = 548
	number of decomposition methods = 450
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 74
	number of tasks = 548
	number of decomposition methods = 450
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 74
	number of tasks = 548
	number of decomposition methods = 450
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 74
	number of tasks = 548
	number of decomposition methods = 450
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 74
	number of tasks = 548
	number of decomposition methods = 450
	number of predicates = 145
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 229
	number of epsilon methods = 0
	number of primitive tasks = 474
	number of constants = 0
Tasks 474 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771895ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 37 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 102 will abort at 9223372036854771835
done
PDT has 10 leafs
SHOP LEAFS 10
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 31320
Size 31320 at 0/474
Size 14753
Size 14753 at 0/474
Size 5845
Size 5845 at 0/474
Size 2116
Size 2116 at 0/474
Size 1397
Size 1397 at 0/474
Size 1353
Size 1353 at 0/474
Size 1345
Size 1345 at 0/474
Size 1343
Size 1343 at 0/474
Size 1343
Invariant time: 0.34
Number of invariants: 1343
Invariant Clauses 14773
NUMBER OF CLAUSES 17909
NUMBER OF STATE CLAUSES 17823
NUMBER OF DECOMPOSITION CLAUSES 86
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.52% 0.48% 0.0% 
NUMBER OF PATHS 10
Starting cryptominisat5.5
Setting starttime of solver to 1604479193848
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 113 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 63 leafs
SHOP LEAFS 36
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854770766
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 85952
NUMBER OF CLAUSES 112839
NUMBER OF STATE CLAUSES 106197
NUMBER OF DECOMPOSITION CLAUSES 6642
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 94.11% 5.89% 0.0% 
NUMBER OF PATHS 63
Starting cryptominisat5.5
Setting starttime of solver to 1604479194649
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 165 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 143 leafs
SHOP LEAFS 78
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770010
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 193392
NUMBER OF CLAUSES 261307
NUMBER OF STATE CLAUSES 240206
NUMBER OF DECOMPOSITION CLAUSES 21101
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 91.92% 8.08% 0.0% 
NUMBER OF PATHS 143
Starting cryptominisat5.5
Setting starttime of solver to 1604479195584
Command exited with non-zero status 20
0.05 0.01

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 180 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 174 leafs
SHOP LEAFS 91
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854769048
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 235025
NUMBER OF CLAUSES 316401
NUMBER OF STATE CLAUSES 292036
NUMBER OF DECOMPOSITION CLAUSES 24365
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 92.3% 7.7% 0.0% 
NUMBER OF PATHS 174
Starting cryptominisat5.5
Setting starttime of solver to 1604479196473
Command exited with non-zero status 10
0.10 0.01

Time command gave the following runtime for the solver: 110
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_3;8,167 167 m4_do_clear
3;8 62 pathaction!2_3;8,2
Consider method^2_2;4,446 446 m5_do_clear
2;4 53 pathaction!2_2;4,1
Consider method^2_3;7,14 14 m7_do_get_truck
3;7 50 pathaction!2_3;7,466
Consider method^3_0;4;1,114 114 m6_do_get_truck
0;4;1 96 pathaction!3_0;4;1,468
Consider method^1_3,383 383 m2_do_put_on
3 30 pathaction!1_3,277
Consider method^3_0;7;3,327 327 m6_do_get_truck
0;7;3 0 pathaction!3_0;7;3,469
Consider method^0_,449 449 __top_1
 106 pathaction!0_,547
Consider method^3_0;7;1,443 443 <m5_do_clear;do_clear[crate5,depot0];m4_do_clear;1;0,-1,-2,2,3,4>
0;7;1 22 pathaction!3_0;7;1,7
Consider method^2_4;5,74 74 m11_do_unload_truck
4;5 18 pathaction!2_4;5,545
Consider method^2_2;3,419 419 m7_do_get_truck
2;3 90 pathaction!2_2;3,468
Consider method^1_1,5 5 <<<<m3_do_put_on;do_unload_truck[crate4,crate3,depot0,truck3];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate4,distributor0,truck3];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate4,pallet2,distributor0,truck3];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate4,distributor0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9>
1 34 pathaction!1_1,278
Consider method^3_2;4;2,295 295 m4_do_clear
2;4;2 52 pathaction!3_2;4;2,0
Consider method^4_0;7;1;4,300 300 m7_do_get_truck
0;7;1;4 21 pathaction!4_0;7;1;4,456
Consider method^2_0;4,437 437 m10_do_load_truck
0;4 63 pathaction!2_0;4,355
Consider method^3_2;4;4,216 216 m7_do_get_truck
2;4;4 36 pathaction!3_2;4;4,460
Consider method^1_2,237 237 m2_do_put_on
2 55 pathaction!1_2,276
Consider method^3_4;3;1,392 392 m6_do_get_truck
4;3;1 110 pathaction!3_4;3;1,464
Consider method^3_0;4;2,92 92 m4_do_clear
0;4;2 89 pathaction!3_0;4;2,4
Consider method^1_4,153 153 <m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate0,depot1,truck0];_m3_do_put_on_2;0;-1,1,2>
4 69 pathaction!1_4,274
Consider method^2_1;1,428 428 m7_do_get_truck
1;1 25 pathaction!2_1;1,466
Consider method^2_4;3,106 106 <m10_do_load_truck;do_clear[crate0,depot1];m4_do_clear;2;0,1,-1,-2,3,4>
4;3 10 pathaction!2_4;3,357
Consider method^3_4;5;1,267 267 m4_do_clear
4;5;1 46 pathaction!3_4;5;1,5
Consider method^1_0,124 124 <<m3_do_put_on;do_unload_truck[crate3,pallet0,depot0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate3,depot1,truck1];_m3_do_put_on_2;0;-1,1,2,3,4,5>
0 26 pathaction!1_0,275
Consider method^2_1;8,192 192 m4_do_clear
1;8 104 pathaction!2_1;8,3
Consider method^2_0;7,4 4 m5_do_clear
0;7 17 pathaction!2_0;7,6


CHECKING primitive solution of length 68 ...
true 32 __method_precondition_m10_do_load_truck_10_precondition[crate3,depot1,crate1,hoist6;]
true 16 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot1;]
true 79 nop[;]
true 85 __method_precondition_m4_do_clear_4_precondition[crate3,depot1;]
true 72 nop[;]
true 78 Lift[hoist6,crate3,crate1,depot1;]
true 80 Load[hoist6,crate3,truck1,depot1;]
true 98 Drive[truck1,depot1,depot0;]
true 108 __method_precondition_m11_do_unload_truck_11_precondition[depot0,crate3,pallet0,truck1,hoist0;]
true 14 __method_precondition_m5_do_clear_5_precondition[pallet0,crate2,depot0,hoist0;]
true 100 __method_precondition_m5_do_clear_5_precondition[crate2,crate5,depot0,hoist0;]
true 92 __method_precondition_m4_do_clear_4_precondition[crate5,depot0;]
true 93 nop[;]
true 51 Lift[hoist0,crate5,crate2,depot0;]
true 67 __method_precondition_m7_do_get_truck_7_precondition[truck3,depot0;]
true 75 Drive[truck3,distributor1,depot0;]
true 107 Load[hoist0,crate5,truck3,depot0;]
true 56 Lift[hoist0,crate2,pallet0,depot0;]
true 28 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 40 nop[;]
true 59 Load[hoist0,crate2,truck1,depot0;]
true 39 Unload[hoist0,crate3,truck1,depot0;]
true 66 Drop[hoist0,crate3,pallet0,depot0;]
true 84 __method_precondition_m10_do_load_truck_10_precondition[crate4,distributor0,pallet2,hoist2;]
true 5 __method_precondition_m7_do_get_truck_7_precondition[truck3,distributor0;]
true 64 Drive[truck3,depot0,distributor0;]
true 33 __method_precondition_m4_do_clear_4_precondition[crate4,distributor0;]
true 2 nop[;]
true 82 Lift[hoist2,crate4,pallet2,distributor0;]
true 12 Load[hoist2,crate4,truck3,distributor0;]
true 48 Drive[truck3,distributor0,depot0;]
true 11 __method_precondition_m11_do_unload_truck_11_precondition[depot0,crate4,crate3,truck3,hoist0;]
true 8 __method_precondition_m4_do_clear_4_precondition[crate3,depot0;]
true 86 nop[;]
true 95 Unload[hoist0,crate4,truck3,depot0;]
true 31 Drop[hoist0,crate4,crate3,depot0;]
true 45 __method_precondition_m2_do_put_on_2_precondition[crate2,truck1;]
true 37 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot1;]
true 65 Drive[truck1,depot0,depot1;]
true 29 __method_precondition_m5_do_clear_5_precondition[pallet1,crate1,depot1,hoist5;]
true 35 __method_precondition_m4_do_clear_4_precondition[crate1,depot1;]
true 87 nop[;]
true 73 Lift[hoist5,crate1,pallet1,depot1;]
true 43 __method_precondition_m7_do_get_truck_7_precondition[truck3,depot1;]
true 54 Drive[truck3,depot0,depot1;]
true 24 Load[hoist5,crate1,truck3,depot1;]
true 81 Unload[hoist6,crate2,truck1,depot1;]
true 99 Drop[hoist6,crate2,pallet1,depot1;]
true 9 __method_precondition_m2_do_put_on_2_precondition[crate5,truck3;]
true 44 __method_precondition_m7_do_get_truck_7_precondition[truck3,distributor0;]
true 83 Drive[truck3,depot1,distributor0;]
true 41 __method_precondition_m4_do_clear_4_precondition[pallet2,distributor0;]
true 13 nop[;]
true 91 Unload[hoist2,crate5,truck3,distributor0;]
true 15 Drop[hoist2,crate5,pallet2,distributor0;]
true 103 __method_precondition_m10_do_load_truck_10_precondition[crate0,depot1,pallet4,hoist6;]
true 3 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot1;]
true 27 nop[;]
true 19 __method_precondition_m4_do_clear_4_precondition[crate0,depot1;]
true 1 nop[;]
true 49 Lift[hoist6,crate0,pallet4,depot1;]
true 57 Load[hoist6,crate0,truck0,depot1;]
true 58 Drive[truck0,depot1,distributor1;]
true 77 __method_precondition_m11_do_unload_truck_11_precondition[distributor1,crate0,pallet3,truck0,hoist4;]
true 61 __method_precondition_m4_do_clear_4_precondition[pallet3,distributor1;]
true 97 nop[;]
true 105 Unload[hoist4,crate0,truck0,distributor1;]
true 101 Drop[hoist4,crate0,pallet3,distributor1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 229766240
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 145
number of actions                    = 548
number of abstract actions           = 74
number of primitive actions          = 474
number of methods                    = 450
number of primitive shop actions     = 229
number of primitive non-shop actions = 245
size of largest method               = 11
average method size                  = 4
============ sat ============
plan length                     = -1
number of variables             = 61536
number of clauses               = 316401
average size of clauses         = 2.0801925404786963
number of assert                = 48
number of horn                  = 292981
K offset                        = 0
K chosen value                  = 5
state formula                   = 292036
method children clauses         = 0
number of paths                 = 174
maximum plan length             = 174
number of decomposition clauses = 24365
number of ordering clauses      = 0
number of state clauses         = 292036
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 8194
============ parsing ============
total                         = 1017
file parser                   = 559
sort expansion                = 197
closed world assumption       = 130
inherit preconditions         = 0
shop methods                  = 28
eliminate identical variables = 30
strip domain of hybridity     = 1
flatten formula               = 71
============ preprocessing ============
total                                      = 2751
compile negative preconditions             = 35
compile unit methods                       = 0
split parameter                            = 54
expand choiceless abstract tasks           = 468
compile methods with identical tasks       = 21
removing unnecessary predicates            = 242
lifted reachabiltiy analysis               = 80
grounded planning graph analysis           = 756
grounded task decomposition graph analysis = 846
grounding                                  = 224
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 486
============ sat ============
total                                        = 3163
generate formula                             = 2308
generate path decomposition tree             = 250
normalise path decomposition tree            = 34
sog optimisation                             = 86
translate path decomposition tree to clauses = 331
generate state formula                       = 2164
generate state invariant formula             = 378
transform to DIMACS                          = 336
SAT solver                                   = 200
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 30
SAT solver for K=0004                        = 60
SAT solver for K=0005                        = 110

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="474";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="74";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="229766240";"40 sat:20:state formula"="292036";"40 sat:01:number of variables"="61536";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="174";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="450";"30 problem:07:number of primitive shop actions"="229";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="548";"30 problem:08:number of primitive non-shop actions"="245";"30 problem:02:number of predicates"="145";"40 sat:03:number of horn"="292981";"40 sat:15:K chosen value"="5";"30 problem:10:average method size"="4";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="11";"40 sat:03:average size of clauses"="2.0801925404786963";"40 sat:02:number of clauses"="316401";"40 sat:50:number of state clauses"="292036";"40 sat:03:number of assert"="48";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="174";"40 sat:50:number of decomposition clauses"="24365";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="559";"01 parsing:08:flatten formula"="71";"40 sat:41:SAT solver for K=0004"="60";"40 sat:00:total"="3163";"40 sat:16:generate state formula"="2164";"40 sat:20:transform to DIMACS"="336";"40 sat:11:generate path decomposition tree"="250";"02 preprocessing:07:compile methods with identical tasks"="21";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="242";"01 parsing:03:closed world assumption"="130";"02 preprocessing:11:lifted reachabiltiy analysis"="80";"01 parsing:02:sort expansion"="197";"40 sat:12:normalise path decomposition tree"="34";"40 sat:40:SAT solver"="200";"01 parsing:00:total"="1017";"40 sat:10:generate formula"="2308";"40 sat:41:SAT solver for K=0005"="110";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="35";"00 total:00:total"="8194";"40 sat:13:sog optimisation"="86";"02 preprocessing:12:grounded planning graph analysis"="756";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="846";"02 preprocessing:04:split parameter"="54";"01 parsing:05:shop methods"="28";"10 search preparation:02:compute state invariants"="486";"01 parsing:06:eliminate identical variables"="30";"40 sat:15:translate path decomposition tree to clauses"="331";"02 preprocessing:05:expand choiceless abstract tasks"="468";"40 sat:41:SAT solver for K=0003"="30";"40 sat:17:generate state invariant formula"="378";"02 preprocessing:00:total"="2751";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="224"
#!verify __method_precondition_m10_do_load_truck_10_precondition[crate3,depot1,crate1,hoist6];__method_precondition_m6_do_get_truck_6_precondition[truck1,depot1];nop[];__method_precondition_m4_do_clear_4_precondition[crate3,depot1];nop[];Lift[hoist6,crate3,crate1,depot1];Load[hoist6,crate3,truck1,depot1];Drive[truck1,depot1,depot0];__method_precondition_m11_do_unload_truck_11_precondition[depot0,crate3,pallet0,truck1,hoist0];__method_precondition_m5_do_clear_5_precondition[pallet0,crate2,depot0,hoist0];__method_precondition_m5_do_clear_5_precondition[crate2,crate5,depot0,hoist0];__method_precondition_m4_do_clear_4_precondition[crate5,depot0];nop[];Lift[hoist0,crate5,crate2,depot0];__method_precondition_m7_do_get_truck_7_precondition[truck3,depot0];Drive[truck3,distributor1,depot0];Load[hoist0,crate5,truck3,depot0];Lift[hoist0,crate2,pallet0,depot0];__method_precondition_m6_do_get_truck_6_precondition[truck1,depot0];nop[];Load[hoist0,crate2,truck1,depot0];Unload[hoist0,crate3,truck1,depot0];Drop[hoist0,crate3,pallet0,depot0];__method_precondition_m10_do_load_truck_10_precondition[crate4,distributor0,pallet2,hoist2];__method_precondition_m7_do_get_truck_7_precondition[truck3,distributor0];Drive[truck3,depot0,distributor0];__method_precondition_m4_do_clear_4_precondition[crate4,distributor0];nop[];Lift[hoist2,crate4,pallet2,distributor0];Load[hoist2,crate4,truck3,distributor0];Drive[truck3,distributor0,depot0];__method_precondition_m11_do_unload_truck_11_precondition[depot0,crate4,crate3,truck3,hoist0];__method_precondition_m4_do_clear_4_precondition[crate3,depot0];nop[];Unload[hoist0,crate4,truck3,depot0];Drop[hoist0,crate4,crate3,depot0];__method_precondition_m2_do_put_on_2_precondition[crate2,truck1];__method_precondition_m7_do_get_truck_7_precondition[truck1,depot1];Drive[truck1,depot0,depot1];__method_precondition_m5_do_clear_5_precondition[pallet1,crate1,depot1,hoist5];__method_precondition_m4_do_clear_4_precondition[crate1,depot1];nop[];Lift[hoist5,crate1,pallet1,depot1];__method_precondition_m7_do_get_truck_7_precondition[truck3,depot1];Drive[truck3,depot0,depot1];Load[hoist5,crate1,truck3,depot1];Unload[hoist6,crate2,truck1,depot1];Drop[hoist6,crate2,pallet1,depot1];__method_precondition_m2_do_put_on_2_precondition[crate5,truck3];__method_precondition_m7_do_get_truck_7_precondition[truck3,distributor0];Drive[truck3,depot1,distributor0];__method_precondition_m4_do_clear_4_precondition[pallet2,distributor0];nop[];Unload[hoist2,crate5,truck3,distributor0];Drop[hoist2,crate5,pallet2,distributor0];__method_precondition_m10_do_load_truck_10_precondition[crate0,depot1,pallet4,hoist6];__method_precondition_m6_do_get_truck_6_precondition[truck0,depot1];nop[];__method_precondition_m4_do_clear_4_precondition[crate0,depot1];nop[];Lift[hoist6,crate0,pallet4,depot1];Load[hoist6,crate0,truck0,depot1];Drive[truck0,depot1,distributor1];__method_precondition_m11_do_unload_truck_11_precondition[distributor1,crate0,pallet3,truck0,hoist4];__method_precondition_m4_do_clear_4_precondition[pallet3,distributor1];nop[];Unload[hoist4,crate0,truck0,distributor1];Drop[hoist4,crate0,pallet3,distributor1]
==>
0 __method_precondition_m10_do_load_truck_10_precondition crate3 depot1 crate1 hoist6 
1 __method_precondition_m6_do_get_truck_6_precondition truck1 depot1 
2 nop  
3 __method_precondition_m4_do_clear_4_precondition crate3 depot1 
4 nop  
5 Lift hoist6 crate3 crate1 depot1 
6 Load hoist6 crate3 truck1 depot1 
7 Drive truck1 depot1 depot0 
8 __method_precondition_m11_do_unload_truck_11_precondition depot0 crate3 pallet0 truck1 hoist0 
9 __method_precondition_m5_do_clear_5_precondition pallet0 crate2 depot0 hoist0 
10 __method_precondition_m5_do_clear_5_precondition crate2 crate5 depot0 hoist0 
11 __method_precondition_m4_do_clear_4_precondition crate5 depot0 
12 nop  
13 Lift hoist0 crate5 crate2 depot0 
14 __method_precondition_m7_do_get_truck_7_precondition truck3 depot0 
15 Drive truck3 distributor1 depot0 
16 Load hoist0 crate5 truck3 depot0 
17 Lift hoist0 crate2 pallet0 depot0 
18 __method_precondition_m6_do_get_truck_6_precondition truck1 depot0 
19 nop  
20 Load hoist0 crate2 truck1 depot0 
21 Unload hoist0 crate3 truck1 depot0 
22 Drop hoist0 crate3 pallet0 depot0 
23 __method_precondition_m10_do_load_truck_10_precondition crate4 distributor0 pallet2 hoist2 
24 __method_precondition_m7_do_get_truck_7_precondition truck3 distributor0 
25 Drive truck3 depot0 distributor0 
26 __method_precondition_m4_do_clear_4_precondition crate4 distributor0 
27 nop  
28 Lift hoist2 crate4 pallet2 distributor0 
29 Load hoist2 crate4 truck3 distributor0 
30 Drive truck3 distributor0 depot0 
31 __method_precondition_m11_do_unload_truck_11_precondition depot0 crate4 crate3 truck3 hoist0 
32 __method_precondition_m4_do_clear_4_precondition crate3 depot0 
33 nop  
34 Unload hoist0 crate4 truck3 depot0 
35 Drop hoist0 crate4 crate3 depot0 
36 __method_precondition_m2_do_put_on_2_precondition crate2 truck1 
37 __method_precondition_m7_do_get_truck_7_precondition truck1 depot1 
38 Drive truck1 depot0 depot1 
39 __method_precondition_m5_do_clear_5_precondition pallet1 crate1 depot1 hoist5 
40 __method_precondition_m4_do_clear_4_precondition crate1 depot1 
41 nop  
42 Lift hoist5 crate1 pallet1 depot1 
43 __method_precondition_m7_do_get_truck_7_precondition truck3 depot1 
44 Drive truck3 depot0 depot1 
45 Load hoist5 crate1 truck3 depot1 
46 Unload hoist6 crate2 truck1 depot1 
47 Drop hoist6 crate2 pallet1 depot1 
48 __method_precondition_m2_do_put_on_2_precondition crate5 truck3 
49 __method_precondition_m7_do_get_truck_7_precondition truck3 distributor0 
50 Drive truck3 depot1 distributor0 
51 __method_precondition_m4_do_clear_4_precondition pallet2 distributor0 
52 nop  
53 Unload hoist2 crate5 truck3 distributor0 
54 Drop hoist2 crate5 pallet2 distributor0 
55 __method_precondition_m10_do_load_truck_10_precondition crate0 depot1 pallet4 hoist6 
56 __method_precondition_m6_do_get_truck_6_precondition truck0 depot1 
57 nop  
58 __method_precondition_m4_do_clear_4_precondition crate0 depot1 
59 nop  
60 Lift hoist6 crate0 pallet4 depot1 
61 Load hoist6 crate0 truck0 depot1 
62 Drive truck0 depot1 distributor1 
63 __method_precondition_m11_do_unload_truck_11_precondition distributor1 crate0 pallet3 truck0 hoist4 
64 __method_precondition_m4_do_clear_4_precondition pallet3 distributor1 
65 nop  
66 Unload hoist4 crate0 truck0 distributor1 
67 Drop hoist4 crate0 pallet3 distributor1 
root 75
68 do_load_truck crate0 pallet4 depot1 truck0  -> <m10_do_load_truck;do_clear[crate0,depot1];m4_do_clear;2;0,1,-1,-2,3,4> 55 72 58 59 60 61
69 do_put_on crate5 pallet2  -> m2_do_put_on 48 77 78 53 54
70 do_get_truck truck3 distributor0  -> m7_do_get_truck 24 25
71 do_put_on crate0 pallet3  -> <m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate0,depot1,truck0];_m3_do_put_on_2;0;-1,1,2> 68 62 79
72 do_get_truck truck0 depot1  -> m6_do_get_truck 56 57
73 do_get_truck truck3 depot1  -> m7_do_get_truck 43 44
74 do_put_on crate3 pallet0  -> <<m3_do_put_on;do_unload_truck[crate3,pallet0,depot0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate3,depot1,truck1];_m3_do_put_on_2;0;-1,1,2,3,4,5> 87 7 8 80 21 22
75 __choicelessATCompilation__top_1  -> __top_1 74 83 92 69 71
76 do_get_truck truck3 depot0  -> m7_do_get_truck 14 15
77 do_get_truck truck3 distributor0  -> m7_do_get_truck 49 50
78 do_clear pallet2 distributor0  -> m4_do_clear 51 52
79 do_unload_truck crate0 pallet3 distributor1 truck0  -> m11_do_unload_truck 63 84 66 67
80 do_clear pallet0 depot0  -> m5_do_clear 9 88 17 91 20
81 do_get_truck truck1 depot1  -> m7_do_get_truck 37 38
82 do_clear crate3 depot1  -> m4_do_clear 3 4
83 do_put_on crate4 crate3  -> <<<<m3_do_put_on;do_unload_truck[crate4,crate3,depot0,truck3];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate4,distributor0,truck3];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate4,pallet2,distributor0,truck3];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate4,distributor0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9> 23 70 26 27 28 29 30 31 85 34 35
84 do_clear pallet3 distributor1  -> m4_do_clear 64 65
85 do_clear crate3 depot0  -> m4_do_clear 32 33
86 do_clear pallet1 depot1  -> m5_do_clear 39 90 42 73 45
87 do_load_truck crate3 crate1 depot1 truck1  -> m10_do_load_truck 0 89 82 5 6
88 do_clear crate2 depot0  -> <m5_do_clear;do_clear[crate5,depot0];m4_do_clear;1;0,-1,-2,2,3,4> 10 11 12 13 76 16
89 do_get_truck truck1 depot1  -> m6_do_get_truck 1 2
90 do_clear crate1 depot1  -> m4_do_clear 40 41
91 do_get_truck truck1 depot0  -> m6_do_get_truck 18 19
92 do_put_on crate2 pallet1  -> m2_do_put_on 36 81 86 46 47

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 9.138 MEMPEAK_KBS 372063.232
