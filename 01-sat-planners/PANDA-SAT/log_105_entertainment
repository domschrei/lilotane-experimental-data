PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/entertainment/domain.hddl instances/entertainment/p05-tv-dvd-gc-box.hddl"


Planner Configuration
=====================
Domain: instances/entertainment/domain.hddl
Problem: instances/entertainment/p05-tv-dvd-gc-box.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p05-tv-dvd-gc-box.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 9
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 26
Compiling negative preconditions ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 18
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 26
Compiling split parameters ... done.
	number of abstract tasks = 14
	number of tasks = 29
	number of decomposition methods = 30
	number of predicates = 18
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 15
	number of constants = 26
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 26
Grounded planning graph ... done in 209ms.
	Number of Grounded Actions 301
	Number of Grounded Literals 201
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 26
Two Way TDG ... done.
	number of abstract tasks = 9
	number of tasks = 18
	number of decomposition methods = 19
	number of predicates = 11
	number of sorts = 3
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 6
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 26
Grounding ... done.
	number of abstract tasks = 174
	number of tasks = 293
	number of decomposition methods = 379
	number of predicates = 235
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 119
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 174
	number of tasks = 293
	number of decomposition methods = 379
	number of predicates = 61
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 119
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 36ms.
	Number of Grounded Actions 91
	Number of Grounded Literals 39
	number of abstract tasks = 103
	number of tasks = 194
	number of decomposition methods = 169
	number of predicates = 61
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 103
	number of tasks = 194
	number of decomposition methods = 169
	number of predicates = 61
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 66
	number of tasks = 157
	number of decomposition methods = 132
	number of predicates = 61
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 66
	number of tasks = 157
	number of decomposition methods = 132
	number of predicates = 61
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 66
	number of tasks = 157
	number of decomposition methods = 132
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 8ms.
	Number of Grounded Actions 91
	Number of Grounded Literals 39
	number of abstract tasks = 66
	number of tasks = 157
	number of decomposition methods = 132
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 66
	number of tasks = 157
	number of decomposition methods = 132
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 48
	number of tasks = 139
	number of decomposition methods = 114
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 48
	number of tasks = 139
	number of decomposition methods = 114
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 48
	number of tasks = 139
	number of decomposition methods = 114
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 4ms.
	Number of Grounded Actions 91
	Number of Grounded Literals 39
	number of abstract tasks = 48
	number of tasks = 139
	number of decomposition methods = 114
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 48
	number of tasks = 139
	number of decomposition methods = 114
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 42
	number of tasks = 133
	number of decomposition methods = 108
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 42
	number of tasks = 133
	number of decomposition methods = 108
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 42
	number of tasks = 133
	number of decomposition methods = 108
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 5ms.
	Number of Grounded Actions 91
	Number of Grounded Literals 39
	number of abstract tasks = 42
	number of tasks = 133
	number of decomposition methods = 108
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 42
	number of tasks = 133
	number of decomposition methods = 108
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 42
	number of tasks = 133
	number of decomposition methods = 108
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 42
	number of tasks = 133
	number of decomposition methods = 108
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 42
	number of tasks = 133
	number of decomposition methods = 108
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 42
	number of tasks = 133
	number of decomposition methods = 108
	number of predicates = 39
	number of sorts = 0
	number of tasks in largest method = 3
	number of primitive SHOP tasks = 73
	number of epsilon methods = 0
	number of primitive tasks = 91
	number of constants = 0
Tasks 91 - 42
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772621ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854772576
done
initial PDT has 24 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 24 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 2223
Size 2223 at 0/91
Size 106
Size 106 at 0/91
Size 106
Invariant time: 0.033
Number of invariants: 106
Invariant Clauses 2650
NUMBER OF CLAUSES 8252
NUMBER OF STATE CLAUSES 5021
NUMBER OF DECOMPOSITION CLAUSES 3231
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 60.85% 39.15% 0.0% 
NUMBER OF PATHS 24
Starting cryptominisat5.5
Setting starttime of solver to 1604481146178
Command exited with non-zero status 10
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_2,28 28 m-connect-split-1
2 27 pathaction!1_2,117
Consider method^2_2;1,64 64 <m-connect-rec-v;v_connect[game-console-1,scart-cable-2];m-connect-direct-v;0;-1,1>
2;1 5 pathaction!2_2;1,35
Consider method^3_2;2;0,100 100 m-dconnect-a-empty
2;2;0 18 pathaction!3_2;2;0,95
Consider method^0_,107 107 __top_1
 3 pathaction!0_,132
Consider method^1_1,39 39 <<m-connect-split-2;a_connect[dvd-1,scart-cable-1];m-connect-direct-a;1;0,-1,2>;v_connect[dvd-1,scart-cable-1];m-connect-direct-v;0;-1,1,2>
1 9 pathaction!1_1,115
Consider method^2_1;0,10 10 <<m-dconnect-v;plug[dvd-1,dvd-1-scart-1,scart-cable-1,scart-cable-1-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-1,scart-cable-1-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
1;0 11 pathaction!2_1;0,86
Consider method^3_1;2;1,18 18 <<m-dconnect-av;plug[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
1;2;1 29 pathaction!3_1;2;1,111
Consider method^2_1;2,104 104 m-connect-direct-av
1;2 8 pathaction!2_1;2,116
Consider method^3_2;2;1,46 46 m-dconnect-a-empty
2;2;1 26 pathaction!3_2;2;1,104
Consider method^2_2;2,3 3 <m-connect-rec-a;a_connect[game-console-1,scart-cable-2];m-connect-direct-a;0;-1,1>
2;2 22 pathaction!2_2;2,47
Consider method^2_0;1,50 50 <<<m-dconnect-a;plug[cinch-cable-1,cinch-cable-1-cinch-2,active-speaker-1,active-speaker-1-cinch-2];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[cinch-cable-1,cinch-cable-1-cinch-2,active-speaker-1,active-speaker-1-cinch-2];_M-plug|CONSEQUENT|ANTECEDENT;1;0,-1>;plug|CONSEQUENT|ANTECEDENT[cinch-cable-1,cinch-cable-1-cinch-2,active-speaker-1,active-speaker-1-cinch-2];_M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1;1;0,-1>
0;1 15 pathaction!2_0;1,101
Consider method^2_1;1,16 16 m-dconnect-a-empty
1;1 21 pathaction!2_1;1,96
Consider method^3_2;1;0,88 88 <<m-dconnect-v;plug[game-console-1,game-console-1-scart-1,scart-cable-2,scart-cable-2-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-2,scart-cable-2-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
2;1;0 7 pathaction!3_2;1;0,85
Consider method^1_0,17 17 <m-connect-rec-a;a_connect[tv1-1,cinch-cable-1];m-connect-direct-a;0;-1,1>
0 30 pathaction!1_0,46
Consider method^2_0;0,79 79 <<<m-dconnect-a;plug[tv1-1,tv1-1-cinch-3,cinch-cable-1,cinch-cable-1-cinch-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[tv1-1,tv1-1-cinch-3,cinch-cable-1,cinch-cable-1-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT;1;0,-1>;plug|CONSEQUENT|ANTECEDENT[tv1-1,tv1-1-cinch-3,cinch-cable-1,cinch-cable-1-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0;1;0,-1>
0;0 20 pathaction!2_0;0,100
Consider method^3_2;1;1,43 43 <<m-dconnect-v;plug[scart-cable-2,scart-cable-2-scart-2,tv1-1,tv1-1-scart-2];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,tv1-1,tv1-1-scart-2];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1>
2;1;1 24 pathaction!3_2;1;1,91


CHECKING primitive solution of length 15 ...
true 2 __method_precondition_m-dconnect-a_9_precondition[tv1-1-cinch-3,cinch-cable-1-cinch-1;]
true 19 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[tv1-1,tv1-1-cinch-3,cinch-cable-1,cinch-cable-1-cinch-1;]
true 28 __method_precondition_m-dconnect-a_9_precondition[cinch-cable-1-cinch-2,active-speaker-1-cinch-2;]
true 12 plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[cinch-cable-1,cinch-cable-1-cinch-2,active-speaker-1,active-speaker-1-cinch-2;]
true 17 __method_precondition_m-dconnect-v_10_precondition[dvd-1-scart-1,scart-cable-1-scart-1;]
true 23 plug|CONSEQUENT|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-1,scart-cable-1-scart-1;]
true 25 __method_precondition_m-dconnect-a-empty_12_precondition[dvd-1,scart-cable-1;]
true 16 __method_precondition_m-dconnect-av_8_precondition[scart-cable-1-scart-2,tv1-1-scart-1;]
true 6 plug|CONSEQUENT|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1;]
true 0 __method_precondition_m-dconnect-v_10_precondition[game-console-1-scart-1,scart-cable-2-scart-1;]
true 1 plug|CONSEQUENT|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-2,scart-cable-2-scart-1;]
true 10 __method_precondition_m-dconnect-v_10_precondition[scart-cable-2-scart-2,tv1-1-scart-2;]
true 14 plug|CONSEQUENT|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,tv1-1,tv1-1-scart-2;]
true 13 __method_precondition_m-dconnect-a-empty_12_precondition[game-console-1,scart-cable-2;]
true 4 __method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-2,tv1-1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 157302712
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 39
number of actions                    = 133
number of abstract actions           = 42
number of primitive actions          = 91
number of methods                    = 108
number of primitive shop actions     = 73
number of primitive non-shop actions = 18
size of largest method               = 3
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 3561
number of clauses               = 8252
average size of clauses         = 2.34476490547746
number of assert                = 18
number of horn                  = 7309
K offset                        = 0
K chosen value                  = 4
state formula                   = 5021
method children clauses         = 0
number of paths                 = 24
maximum plan length             = 24
number of decomposition clauses = 3231
number of ordering clauses      = 0
number of state clauses         = 5021
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 3992
============ parsing ============
total                         = 1073
file parser                   = 573
sort expansion                = 162
closed world assumption       = 112
inherit preconditions         = 0
shop methods                  = 14
eliminate identical variables = 50
strip domain of hybridity     = 12
flatten formula               = 149
============ preprocessing ============
total                                      = 2051
compile negative preconditions             = 56
compile unit methods                       = 0
split parameter                            = 37
expand choiceless abstract tasks           = 215
compile methods with identical tasks       = 2
removing unnecessary predicates            = 130
lifted reachabiltiy analysis               = 63
grounded planning graph analysis           = 566
grounded task decomposition graph analysis = 833
grounding                                  = 125
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 56
============ sat ============
total                                        = 435
generate formula                             = 342
generate path decomposition tree             = 66
normalise path decomposition tree            = 25
sog optimisation                             = 29
translate path decomposition tree to clauses = 130
generate state formula                       = 340
generate state invariant formula             = 17
transform to DIMACS                          = 25
SAT solver                                   = 0
SAT solver for K=0004                        = 0

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="91";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="42";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="157302712";"40 sat:20:state formula"="5021";"40 sat:01:number of variables"="3561";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="24";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="108";"30 problem:07:number of primitive shop actions"="73";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="133";"30 problem:08:number of primitive non-shop actions"="18";"30 problem:02:number of predicates"="39";"40 sat:03:number of horn"="7309";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="3";"40 sat:03:average size of clauses"="2.34476490547746";"40 sat:02:number of clauses"="8252";"40 sat:50:number of state clauses"="5021";"40 sat:03:number of assert"="18";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="24";"40 sat:50:number of decomposition clauses"="3231";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="573";"01 parsing:08:flatten formula"="149";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="435";"40 sat:16:generate state formula"="340";"40 sat:20:transform to DIMACS"="25";"40 sat:11:generate path decomposition tree"="66";"02 preprocessing:07:compile methods with identical tasks"="2";"01 parsing:07:strip domain of hybridity"="12";"02 preprocessing:08:removing unnecessary predicates"="130";"01 parsing:03:closed world assumption"="112";"02 preprocessing:11:lifted reachabiltiy analysis"="63";"01 parsing:02:sort expansion"="162";"40 sat:12:normalise path decomposition tree"="25";"40 sat:40:SAT solver"="0";"01 parsing:00:total"="1073";"40 sat:10:generate formula"="342";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="56";"00 total:00:total"="3992";"40 sat:13:sog optimisation"="29";"02 preprocessing:12:grounded planning graph analysis"="566";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="833";"02 preprocessing:04:split parameter"="37";"01 parsing:05:shop methods"="14";"10 search preparation:02:compute state invariants"="56";"01 parsing:06:eliminate identical variables"="50";"40 sat:15:translate path decomposition tree to clauses"="130";"02 preprocessing:05:expand choiceless abstract tasks"="215";"40 sat:17:generate state invariant formula"="17";"02 preprocessing:00:total"="2051";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="125"
#!verify __method_precondition_m-dconnect-a_9_precondition[tv1-1-cinch-3,cinch-cable-1-cinch-1];plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0[tv1-1,tv1-1-cinch-3,cinch-cable-1,cinch-cable-1-cinch-1];__method_precondition_m-dconnect-a_9_precondition[cinch-cable-1-cinch-2,active-speaker-1-cinch-2];plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1[cinch-cable-1,cinch-cable-1-cinch-2,active-speaker-1,active-speaker-1-cinch-2];__method_precondition_m-dconnect-v_10_precondition[dvd-1-scart-1,scart-cable-1-scart-1];plug|CONSEQUENT|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-1,scart-cable-1-scart-1];__method_precondition_m-dconnect-a-empty_12_precondition[dvd-1,scart-cable-1];__method_precondition_m-dconnect-av_8_precondition[scart-cable-1-scart-2,tv1-1-scart-1];plug|CONSEQUENT|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];__method_precondition_m-dconnect-v_10_precondition[game-console-1-scart-1,scart-cable-2-scart-1];plug|CONSEQUENT|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-2,scart-cable-2-scart-1];__method_precondition_m-dconnect-v_10_precondition[scart-cable-2-scart-2,tv1-1-scart-2];plug|CONSEQUENT|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,tv1-1,tv1-1-scart-2];__method_precondition_m-dconnect-a-empty_12_precondition[game-console-1,scart-cable-2];__method_precondition_m-dconnect-a-empty_12_precondition[scart-cable-2,tv1-1]
==>
0 __method_precondition_m-dconnect-a_9_precondition tv1-1-cinch-3 cinch-cable-1-cinch-1 
1 plug|DISJUNCT-0 tv1-1 tv1-1-cinch-3 cinch-cable-1 cinch-cable-1-cinch-1 
2 __method_precondition_m-dconnect-a_9_precondition cinch-cable-1-cinch-2 active-speaker-1-cinch-2 
3 plug|DISJUNCT-1 cinch-cable-1 cinch-cable-1-cinch-2 active-speaker-1 active-speaker-1-cinch-2 
4 __method_precondition_m-dconnect-v_10_precondition dvd-1-scart-1 scart-cable-1-scart-1 
5 plug dvd-1 dvd-1-scart-1 scart-cable-1 scart-cable-1-scart-1 
6 __method_precondition_m-dconnect-a-empty_12_precondition dvd-1 scart-cable-1 
7 __method_precondition_m-dconnect-av_8_precondition scart-cable-1-scart-2 tv1-1-scart-1 
8 plug scart-cable-1 scart-cable-1-scart-2 tv1-1 tv1-1-scart-1 
9 __method_precondition_m-dconnect-v_10_precondition game-console-1-scart-1 scart-cable-2-scart-1 
10 plug game-console-1 game-console-1-scart-1 scart-cable-2 scart-cable-2-scart-1 
11 __method_precondition_m-dconnect-v_10_precondition scart-cable-2-scart-2 tv1-1-scart-2 
12 plug scart-cable-2 scart-cable-2-scart-2 tv1-1 tv1-1-scart-2 
13 __method_precondition_m-dconnect-a-empty_12_precondition game-console-1 scart-cable-2 
14 __method_precondition_m-dconnect-a-empty_12_precondition scart-cable-2 tv1-1 
root 22
15 direct_a_connect cinch-cable-1 active-speaker-1  -> <<<m-dconnect-a;plug[cinch-cable-1,cinch-cable-1-cinch-2,active-speaker-1,active-speaker-1-cinch-2];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[cinch-cable-1,cinch-cable-1-cinch-2,active-speaker-1,active-speaker-1-cinch-2];_M-plug|CONSEQUENT|ANTECEDENT;1;0,-1>;plug|CONSEQUENT|ANTECEDENT[cinch-cable-1,cinch-cable-1-cinch-2,active-speaker-1,active-speaker-1-cinch-2];_M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-1;1;0,-1> 2 3
16 direct_a_connect tv1-1 cinch-cable-1  -> <<<m-dconnect-a;plug[tv1-1,tv1-1-cinch-3,cinch-cable-1,cinch-cable-1-cinch-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[tv1-1,tv1-1-cinch-3,cinch-cable-1,cinch-cable-1-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT;1;0,-1>;plug|CONSEQUENT|ANTECEDENT[tv1-1,tv1-1-cinch-3,cinch-cable-1,cinch-cable-1-cinch-1];_M-plug|CONSEQUENT|ANTECEDENT|DISJUNCT-0;1;0,-1> 0 1
17 direct_v_connect scart-cable-2 tv1-1  -> <<m-dconnect-v;plug[scart-cable-2,scart-cable-2-scart-2,tv1-1,tv1-1-scart-2];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-2,scart-cable-2-scart-2,tv1-1,tv1-1-scart-2];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 11 12
18 direct_a_connect dvd-1 scart-cable-1  -> m-dconnect-a-empty 6
19 direct_av_connect scart-cable-1 tv1-1  -> <<m-dconnect-av;plug[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[scart-cable-1,scart-cable-1-scart-2,tv1-1,tv1-1-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 7 8
20 direct_v_connect game-console-1 scart-cable-2  -> <<m-dconnect-v;plug[game-console-1,game-console-1-scart-1,scart-cable-2,scart-cable-2-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[game-console-1,game-console-1-scart-1,scart-cable-2,scart-cable-2-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 9 10
21 v_connect game-console-1 tv1-1  -> <m-connect-rec-v;v_connect[game-console-1,scart-cable-2];m-connect-direct-v;0;-1,1> 20 17
22 __choicelessATCompilation__top_1  -> __top_1 23 25 29
23 a_connect tv1-1 active-speaker-1  -> <m-connect-rec-a;a_connect[tv1-1,cinch-cable-1];m-connect-direct-a;0;-1,1> 16 15
24 av_connect scart-cable-1 tv1-1  -> m-connect-direct-av 19
25 av_connect dvd-1 tv1-1  -> <<m-connect-split-2;a_connect[dvd-1,scart-cable-1];m-connect-direct-a;1;0,-1,2>;v_connect[dvd-1,scart-cable-1];m-connect-direct-v;0;-1,1,2> 26 18 24
26 direct_v_connect dvd-1 scart-cable-1  -> <<m-dconnect-v;plug[dvd-1,dvd-1-scart-1,scart-cable-1,scart-cable-1-scart-1];_M-plug|CONSEQUENT;1;0,-1>;plug|CONSEQUENT[dvd-1,dvd-1-scart-1,scart-cable-1,scart-cable-1-scart-1];_M-plug|CONSEQUENT|CONSEQUENT;1;0,-1> 4 5
27 direct_a_connect game-console-1 scart-cable-2  -> m-dconnect-a-empty 13
28 a_connect game-console-1 tv1-1  -> <m-connect-rec-a;a_connect[game-console-1,scart-cable-2];m-connect-direct-a;0;-1,1> 27 30
29 av_connect game-console-1 tv1-1  -> m-connect-split-1 21 28
30 direct_a_connect scart-cable-2 tv1-1  -> m-dconnect-a-empty 14

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 4.819 MEMPEAK_KBS 271125.504
