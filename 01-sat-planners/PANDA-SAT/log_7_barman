PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p07.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p07.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p07.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Grounded planning graph ... done in 600ms.
	Number of Grounded Actions 3009
	Number of Grounded Literals 443
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Grounding ... done.
	number of abstract tasks = 1354
	number of tasks = 4101
	number of decomposition methods = 5067
	number of predicates = 443
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1354
	number of tasks = 4101
	number of decomposition methods = 5067
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 438ms.
	Number of Grounded Actions 2747
	Number of Grounded Literals 413
	number of abstract tasks = 1354
	number of tasks = 4101
	number of decomposition methods = 5067
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1354
	number of tasks = 4101
	number of decomposition methods = 5067
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 946
	number of tasks = 3693
	number of decomposition methods = 4659
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 946
	number of tasks = 3693
	number of decomposition methods = 4659
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 946
	number of tasks = 3693
	number of decomposition methods = 4659
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 235ms.
	Number of Grounded Actions 2747
	Number of Grounded Literals 413
	number of abstract tasks = 946
	number of tasks = 3693
	number of decomposition methods = 4659
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 946
	number of tasks = 3693
	number of decomposition methods = 4379
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 946
	number of tasks = 3693
	number of decomposition methods = 4379
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 946
	number of tasks = 3693
	number of decomposition methods = 4379
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 946
	number of tasks = 3693
	number of decomposition methods = 4379
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 946
	number of tasks = 3693
	number of decomposition methods = 4379
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2747
	number of constants = 0
Tasks 2747 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767359ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854766855
done
initial PDT has 300 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 300 leafs
SHOP LEAFS 100
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 255234
Size 255190 at 0/2747
Size 253946 at 500/2747
Size 56999 at 1000/2747
Size 34333 at 1500/2747
Size 34333 at 2000/2747
Size 29563 at 2500/2747
Size 29563
Size 25811 at 0/2747
Size 22990 at 500/2747
Size 21924 at 1000/2747
Size 9654 at 1500/2747
Size 9654 at 2000/2747
Size 9053 at 2500/2747
Size 9053
Size 9053 at 0/2747
Size 9053 at 500/2747
Size 9024 at 1000/2747
Size 4421 at 1500/2747
Size 4421 at 2000/2747
Size 4403 at 2500/2747
Size 4403
Size 4387 at 0/2747
Size 4367 at 500/2747
Size 4347 at 1000/2747
Size 4178 at 1500/2747
Size 4178 at 2000/2747
Size 4158 at 2500/2747
Size 4158
Size 4154 at 0/2747
Size 4143 at 500/2747
Size 4143 at 1000/2747
Size 4108 at 1500/2747
Size 4108 at 2000/2747
Size 4103 at 2500/2747
Size 4103
Size 4103 at 0/2747
Size 4103 at 500/2747
Size 4103 at 1000/2747
Size 4079 at 1500/2747
Size 4079 at 2000/2747
Size 4079 at 2500/2747
Size 4079
Size 4079 at 0/2747
Size 4079 at 500/2747
Size 4079 at 1000/2747
Size 4079 at 1500/2747
Size 4079 at 2000/2747
Size 4079 at 2500/2747
Size 4079
Invariant time: 1.992
Number of invariants: 4079
Invariant Clauses 1227779
NUMBER OF CLAUSES 1881225
NUMBER OF STATE CLAUSES 1577684
NUMBER OF DECOMPOSITION CLAUSES 303541
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.86% 16.14% 0.0% 
NUMBER OF PATHS 300
Starting cryptominisat5.5
Setting starttime of solver to 1604475239701
Command exited with non-zero status 10
1.17 0.04

Time command gave the following runtime for the solver: 1210
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_14;1;3,251 251 _m2_get_first_ingredient_4
14;1;3 259 pathaction!3_14;1;3,1082
Consider method^3_1;1;2,1876 1876 _m2_get_first_ingredient_3
1;1;2 143 pathaction!3_1;1;2,1854
Consider method^3_9;2;2,2395 2395 _m3_get_second_ingredient_3
9;2;2 224 pathaction!3_9;2;2,1299
Consider method^1_6,1108 1108 m0_do_cocktail_in_shot1
6 299 pathaction!1_6,3028
Consider method^2_5;1,2212 2212 m2_get_first_ingredient
5;1 390 pathaction!2_5;1,2947
Consider method^3_11;1;3,2848 2848 _m2_get_first_ingredient_4
11;1;3 93 pathaction!3_11;1;3,1134
Consider method^1_5,3020 3020 m0_do_cocktail_in_shot1
5 249 pathaction!1_5,3019
Consider method^3_7;2;1,3912 3912 _m3_get_second_ingredient_2
7;2;1 425 pathaction!3_7;2;1,938
Consider method^3_9;1;2,236 236 _m2_get_first_ingredient_3
9;1;2 415 pathaction!3_9;1;2,1857
Consider method^2_4;3,1961 1961 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
4;3 400 pathaction!2_4;3,1391
Consider method^3_2;1;2,3227 3227 _m2_get_first_ingredient_3
2;1;2 228 pathaction!3_2;1;2,1851
Consider method^2_6;2,385 385 m3_get_second_ingredient
6;2 167 pathaction!2_6;2,260
Consider method^3_11;1;2,3038 3038 _m2_get_first_ingredient_3
11;1;2 79 pathaction!3_11;1;2,1805
Consider method^2_1;2,3067 3067 m3_get_second_ingredient
1;2 295 pathaction!2_1;2,273
Consider method^3_9;1;1,445 445 m9_do_fill_shot
9;1;1 221 pathaction!3_9;1;1,708
Consider method^3_5;2;1,563 563 _m3_get_second_ingredient_2
5;2;1 288 pathaction!3_5;2;1,930
Consider method^3_10;2;1,2560 2560 _m3_get_second_ingredient_2
10;2;1 0 pathaction!3_10;2;1,849
Consider method^3_3;2;1,4032 4032 _m3_get_second_ingredient_2
3;2;1 20 pathaction!3_3;2;1,843
Consider method^3_8;2;1,3171 3171 _m3_get_second_ingredient_2
8;2;1 175 pathaction!3_8;2;1,953
Consider method^2_0;3,142 142 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
0;3 81 pathaction!2_0;3,1393
Consider method^3_7;1;1,3201 3201 m7_do_fill_shot
7;1;1 30 pathaction!3_7;1;1,642
Consider method^2_14;2,2055 2055 m3_get_second_ingredient
14;2 98 pathaction!2_14;2,272
Consider method^1_3,3002 3002 m0_do_cocktail_in_shot1
3 45 pathaction!1_3,3021
Consider method^2_12;1,145 145 m2_get_first_ingredient
12;1 42 pathaction!2_12;1,2948
Consider method^3_14;3;1,380 380 <_m4_serve_shot_2;do_clean_shot[shot15,cocktail7,left];m5_do_clean_shot;0;-1,-2>
14;3;1 99 pathaction!3_14;3;1,2991
Consider method^3_14;1;2,1107 1107 _m2_get_first_ingredient_3
14;1;2 388 pathaction!3_14;1;2,1879
Consider method^3_0;1;3,2802 2802 _m2_get_first_ingredient_4
0;1;3 246 pathaction!3_0;1;3,1032
Consider method^3_6;1;2,2585 2585 _m2_get_first_ingredient_3
6;1;2 197 pathaction!3_6;1;2,1893
Consider method^3_12;3;1,1706 1706 <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,left];m5_do_clean_shot;0;-1,-2>
12;3;1 178 pathaction!3_12;3;1,2996
Consider method^3_11;2;1,771 771 _m3_get_second_ingredient_2
11;2;1 137 pathaction!3_11;2;1,830
Consider method^2_0;2,1287 1287 m3_get_second_ingredient
0;2 206 pathaction!2_0;2,256
Consider method^1_14,1629 1629 m0_do_cocktail_in_shot1
14 109 pathaction!1_14,3030
Consider method^2_7;2,2878 2878 m3_get_second_ingredient
7;2 209 pathaction!2_7;2,259
Consider method^2_14;1,2858 2858 m2_get_first_ingredient
14;1 47 pathaction!2_14;1,2950
Consider method^3_0;1;2,1011 1011 _m2_get_first_ingredient_3
0;1;2 312 pathaction!3_0;1;2,1845
Consider method^3_5;3;1,650 650 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 242 pathaction!3_5;3;1,3014
Consider method^2_13;1,3722 3722 m9_do_fill_shot
13;1 376 pathaction!2_13;1,656
Consider method^3_1;3;1,494 494 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2>
1;3;1 164 pathaction!3_1;3;1,3010
Consider method^2_2;1,1366 1366 m2_get_first_ingredient
2;1 358 pathaction!2_2;1,2939
Consider method^2_5;3,4040 4040 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
5;3 315 pathaction!2_5;3,1381
Consider method^3_6;3;1,2399 2399 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 204 pathaction!3_6;3;1,3004
Consider method^2_9;1,145 145 m2_get_first_ingredient
9;1 218 pathaction!2_9;1,2948
Consider method^3_5;2;2,1422 1422 _m3_get_second_ingredient_3
5;2;2 194 pathaction!3_5;2;2,1276
Consider method^3_3;2;2,3835 3835 _m3_get_second_ingredient_3
3;2;2 258 pathaction!3_3;2;2,1233
Consider method^2_3;1,718 718 m2_get_first_ingredient
3;1 348 pathaction!2_3;1,2953
Consider method^3_6;2;2,2746 2746 _m3_get_second_ingredient_3
6;2;2 435 pathaction!3_6;2;2,1243
Consider method^2_7;1,2504 2504 m2_get_first_ingredient
7;1 65 pathaction!2_7;1,2937
Consider method^2_9;3,1404 1404 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
9;3 412 pathaction!2_9;3,1386
Consider method^3_6;1;3,355 355 _m2_get_first_ingredient_4
6;1;3 53 pathaction!3_6;1;3,1113
Consider method^3_8;1;3,4132 4132 _m2_get_first_ingredient_4
8;1;3 126 pathaction!3_8;1;3,1138
Consider method^3_1;2;1,3141 3141 _m3_get_second_ingredient_2
1;2;1 176 pathaction!3_1;2;1,876
Consider method^2_8;1,1447 1447 m2_get_first_ingredient
8;1 116 pathaction!2_8;1,2952
Consider method^3_4;3;1,3921 3921 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2>
4;3;1 97 pathaction!3_4;3;1,2999
Consider method^2_14;3,1672 1672 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot15,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
14;3 37 pathaction!2_14;3,1392
Consider method^1_12,1620 1620 m0_do_cocktail_in_shot1
12 313 pathaction!1_12,3027
Consider method^3_10;1;1,1573 1573 m9_do_fill_shot
10;1;1 122 pathaction!3_10;1;1,701
Consider method^3_8;1;2,236 236 _m2_get_first_ingredient_3
8;1;2 40 pathaction!3_8;1;2,1857
Consider method^2_10;2,226 226 m3_get_second_ingredient
10;2 181 pathaction!2_10;2,262
Consider method^3_2;1;3,652 652 _m2_get_first_ingredient_4
2;1;3 225 pathaction!3_2;1;3,1131
Consider method^2_11;1,3535 3535 m2_get_first_ingredient
11;1 307 pathaction!2_11;1,2949
Consider method^3_12;1;3,4132 4132 _m2_get_first_ingredient_4
12;1;3 406 pathaction!3_12;1;3,1138
Consider method^3_1;1;3,1042 1042 _m2_get_first_ingredient_4
1;1;3 337 pathaction!3_1;1;3,1065
Consider method^2_2;3,2541 2541 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
2;3 253 pathaction!2_2;3,1385
Consider method^2_6;1,1511 1511 m2_get_first_ingredient
6;1 361 pathaction!2_6;1,2938
Consider method^3_11;2;2,2680 2680 _m3_get_second_ingredient_3
11;2;2 250 pathaction!3_11;2;2,1213
Consider method^2_10;3,3953 3953 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
10;3 29 pathaction!2_10;3,1382
Consider method^3_0;3;1,2207 2207 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2>
0;3;1 282 pathaction!3_0;3;1,2994
Consider method^3_10;1;3,652 652 _m2_get_first_ingredient_4
10;1;3 296 pathaction!3_10;1;3,1131
Consider method^1_10,415 415 m0_do_cocktail_in_shot1
10 396 pathaction!1_10,3020
Consider method^1_1,1391 1391 m0_do_cocktail_in_shot1
1 317 pathaction!1_1,3026
Consider method^3_1;2;2,2909 2909 _m3_get_second_ingredient_3
1;2;2 63 pathaction!3_1;2;2,1266
Consider method^2_8;2,2553 2553 m3_get_second_ingredient
8;2 255 pathaction!2_8;2,274
Consider method^3_0;1;1,4313 4313 m8_do_fill_shot
0;1;1 172 pathaction!3_0;1;1,602
Consider method^1_2,4325 4325 m0_do_cocktail_in_shot1
2 333 pathaction!1_2,3023
Consider method^2_11;3,3548 3548 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
11;3 171 pathaction!2_11;3,1380
Consider method^2_3;2,4168 4168 m3_get_second_ingredient
3;2 72 pathaction!2_3;2,275
Consider method^2_4;1,3490 3490 m2_get_first_ingredient
4;1 153 pathaction!2_4;1,2941
Consider method^3_7;3;1,988 988 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 363 pathaction!3_7;3;1,2997
Consider method^3_4;2;2,2344 2344 _m3_get_second_ingredient_3
4;2;2 227 pathaction!3_4;2;2,1269
Consider method^3_8;3;1,3693 3693 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 243 pathaction!3_8;3;1,3000
Consider method^3_4;1;3,4215 4215 _m2_get_first_ingredient_4
4;1;3 261 pathaction!3_4;1;3,1060
Consider method^3_0;2;2,3591 3591 _m3_get_second_ingredient_3
0;2;2 280 pathaction!3_0;2;2,1164
Consider method^3_2;3;1,770 770 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2>
2;3;1 429 pathaction!3_2;3;1,3009
Consider method^3_12;2;1,2560 2560 _m3_get_second_ingredient_2
12;2;1 316 pathaction!3_12;2;1,849
Consider method^3_11;1;1,3256 3256 m9_do_fill_shot
11;1;1 208 pathaction!3_11;1;1,704
Consider method^3_14;2;2,3591 3591 _m3_get_second_ingredient_3
14;2;2 266 pathaction!3_14;2;2,1164
Consider method^3_2;2;1,1175 1175 _m3_get_second_ingredient_2
2;2;1 403 pathaction!3_2;2;1,962
Consider method^3_7;1;3,4307 4307 _m2_get_first_ingredient_4
7;1;3 240 pathaction!3_7;1;3,1072
Consider method^2_1;1,1227 1227 m2_get_first_ingredient
1;1 308 pathaction!2_1;1,2951
Consider method^2_11;2,1211 1211 m3_get_second_ingredient
11;2 131 pathaction!2_11;2,271
Consider method^3_8;1;1,3444 3444 m9_do_fill_shot
8;1;1 132 pathaction!3_8;1;1,708
Consider method^3_8;2;2,4245 4245 _m3_get_second_ingredient_3
8;2;2 405 pathaction!3_8;2;2,1221
Consider method^0_,4378 4378 __top_1
 190 pathaction!0_,3692
Consider method^2_1;3,1178 1178 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
1;3 229 pathaction!2_1;3,1388
Consider method^2_3;3,3561 3561 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
3;3 26 pathaction!2_3;3,1383
Consider method^3_2;1;1,1573 1573 m9_do_fill_shot
2;1;1 123 pathaction!3_2;1;1,701
Consider method^2_4;2,3886 3886 m3_get_second_ingredient
4;2 273 pathaction!2_4;2,263
Consider method^2_9;2,2403 2403 m3_get_second_ingredient
9;2 335 pathaction!2_9;2,270
Consider method^3_6;2;1,1050 1050 _m3_get_second_ingredient_2
6;2;1 424 pathaction!3_6;2;1,846
Consider method^1_4,3946 3946 m0_do_cocktail_in_shot1
4 124 pathaction!1_4,3029
Consider method^3_5;1;3,751 751 _m2_get_first_ingredient_4
5;1;3 287 pathaction!3_5;1;3,1044
Consider method^3_4;1;2,1427 1427 _m2_get_first_ingredient_3
4;1;2 3 pathaction!3_4;1;2,1822
Consider method^3_11;3;1,1437 1437 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2>
11;3;1 111 pathaction!3_11;3;1,3008
Consider method^3_3;1;2,925 925 _m2_get_first_ingredient_3
3;1;2 350 pathaction!3_3;1;2,1878
Consider method^3_9;3;1,1065 1065 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2>
9;3;1 368 pathaction!3_9;3;1,2995
Consider method^3_3;1;3,2562 2562 _m2_get_first_ingredient_4
3;1;3 39 pathaction!3_3;1;3,1052
Consider method^2_5;2,2563 2563 m3_get_second_ingredient
5;2 142 pathaction!2_5;2,269
Consider method^3_12;1;2,236 236 _m2_get_first_ingredient_3
12;1;2 398 pathaction!3_12;1;2,1857
Consider method^2_6;3,2834 2834 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
6;3 75 pathaction!2_6;3,1390
Consider method^3_5;1;1,580 580 m9_do_fill_shot
5;1;1 205 pathaction!3_5;1;1,614
Consider method^3_4;1;1,3026 3026 m9_do_fill_shot
4;1;1 107 pathaction!3_4;1;1,630
Consider method^3_5;1;2,3305 3305 _m2_get_first_ingredient_3
5;1;2 157 pathaction!3_5;1;2,1869
Consider method^3_9;1;3,4132 4132 _m2_get_first_ingredient_4
9;1;3 125 pathaction!3_9;1;3,1138
Consider method^1_8,2347 2347 m0_do_cocktail_in_shot1
8 73 pathaction!1_8,3022
Consider method^2_12;2,2403 2403 m3_get_second_ingredient
12;2 257 pathaction!2_12;2,270
Consider method^2_2;2,3223 3223 m3_get_second_ingredient
2;2 21 pathaction!2_2;2,261
Consider method^3_7;2;2,1529 1529 _m3_get_second_ingredient_3
7;2;2 85 pathaction!3_7;2;2,1315
Consider method^1_7,1702 1702 m0_do_cocktail_in_shot1
7 269 pathaction!1_7,3025
Consider method^3_3;3;1,560 560 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2>
3;3;1 156 pathaction!3_3;3;1,3005
Consider method^3_2;2;2,621 621 _m3_get_second_ingredient_3
2;2;2 377 pathaction!3_2;2;2,1227
Consider method^3_1;1;1,2458 2458 m9_do_fill_shot
1;1;1 359 pathaction!3_1;1;1,635
Consider method^3_4;2;1,4348 4348 _m3_get_second_ingredient_2
4;2;1 2 pathaction!3_4;2;1,886
Consider method^2_12;3,49 49 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot13,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
12;3 421 pathaction!2_12;3,1389
Consider method^2_10;1,2371 2371 m2_get_first_ingredient
10;1 291 pathaction!2_10;1,2940
Consider method^3_14;2;1,4118 4118 _m3_get_second_ingredient_2
14;2;1 323 pathaction!3_14;2;1,957
Consider method^2_0;1,3060 3060 m2_get_first_ingredient
0;1 306 pathaction!2_0;1,2934
Consider method^3_0;2;1,4118 4118 _m3_get_second_ingredient_2
0;2;1 154 pathaction!3_0;2;1,957
Consider method^1_0,124 124 m0_do_cocktail_in_shot1
0 404 pathaction!1_0,3031
Consider method^1_9,4076 4076 m0_do_cocktail_in_shot1
9 195 pathaction!1_9,3024
Consider method^1_13,2819 2819 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient5];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
13 192 pathaction!1_13,3691
Consider method^3_3;1;1,3777 3777 m8_do_fill_shot
3;1;1 102 pathaction!3_3;1;1,622
Consider method^3_14;1;1,443 443 m9_do_fill_shot
14;1;1 393 pathaction!3_14;1;1,652
Consider method^3_10;3;1,812 812 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 397 pathaction!3_10;3;1,3012
Consider method^3_7;1;2,1568 1568 _m2_get_first_ingredient_3
7;1;2 301 pathaction!3_7;1;2,1888
Consider method^3_9;2;1,2560 2560 _m3_get_second_ingredient_2
9;2;1 436 pathaction!3_9;2;1,849
Consider method^3_6;1;1,2205 2205 m7_do_fill_shot
6;1;1 314 pathaction!3_6;1;1,683
Consider method^3_12;1;1,3353 3353 m7_do_fill_shot
12;1;1 320 pathaction!3_12;1;1,708
Consider method^2_7;3,1027 1027 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
7;3 141 pathaction!2_7;3,1387
Consider method^3_12;2;2,2395 2395 _m3_get_second_ingredient_3
12;2;2 319 pathaction!3_12;2;2,1299
Consider method^3_10;1;2,3227 3227 _m2_get_first_ingredient_3
10;1;2 112 pathaction!3_10;1;2,1851
Consider method^3_10;2;2,2395 2395 _m3_get_second_ingredient_3
10;2;2 151 pathaction!3_10;2;2,1299
Consider method^1_11,1257 1257 m0_do_cocktail_in_shot1
11 217 pathaction!1_11,3018
Consider method^2_8;3,3212 3212 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
8;3 32 pathaction!2_8;3,1384


CHECKING primitive solution of length 295 ...
true 31 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 127 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient2,shot16;]
true 318 __method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser2,ingredient2;]
true 392 grasp[right,shot16;]
true 87 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 309 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1;]
true 27 clean-shot[shot16,ingredient2,right,left;]
true 188 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient1,right,shot16;]
true 281 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 185 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2;]
true 25 leave[right,shot16;]
true 133 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient2,ingredient1;]
true 382 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 12 nop[;]
true 286 grasp[right,shaker1;]
true 36 shake[cocktail11,ingredient2,ingredient1,shaker1,right,left;]
true 347 pour-shaker-to-shot[cocktail11,shot1,right,shaker1,l2,l1;]
true 49 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 88 clean-shaker[right,left,shaker1;]
true 138 leave[right,shaker1;]
true 114 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 83 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient3,shot16;]
true 61 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient1,dispenser3;]
true 101 grasp[right,shot16;]
true 230 clean-shot[shot16,ingredient1,right,left;]
true 196 fill-shot[shot16,ingredient3,right,left,dispenser3;]
true 365 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1;]
true 357 clean-shot[shot16,ingredient3,right,left;]
true 302 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,right,shot16;]
true 354 fill-shot[shot16,ingredient4,right,left,dispenser4;]
true 237 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2;]
true 50 leave[right,shot16;]
true 310 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient3,ingredient4;]
true 7 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 432 nop[;]
true 410 grasp[left,shaker1;]
true 214 shake[cocktail6,ingredient3,ingredient4,shaker1,left,right;]
true 169 pour-shaker-to-shot[cocktail6,shot2,left,shaker1,l2,l1;]
true 24 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 325 clean-shaker[left,right,shaker1;]
true 252 leave[left,shaker1;]
true 22 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 216 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient3,shot16;]
true 213 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient4,dispenser3;]
true 407 grasp[left,shot16;]
true 90 clean-shot[shot16,ingredient4,left,right;]
true 434 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 150 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1;]
true 419 clean-shot[shot16,ingredient3,left,right;]
true 239 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot16;]
true 68 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 328 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2;]
true 384 leave[left,shot16;]
true 33 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient3,ingredient2;]
true 199 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 203 nop[;]
true 395 grasp[left,shaker1;]
true 324 shake[cocktail7,ingredient3,ingredient2,shaker1,left,right;]
true 134 pour-shaker-to-shot[cocktail7,shot3,left,shaker1,l2,l1;]
true 289 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 420 clean-shaker[left,right,shaker1;]
true 371 leave[left,shaker1;]
true 414 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 355 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot14;]
true 383 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser3,ingredient3;]
true 375 grasp[left,shot14;]
true 418 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 389 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1;]
true 92 clean-shot[shot14,ingredient3,left,right;]
true 128 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot14;]
true 222 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 351 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,left,l1,l2;]
true 381 leave[left,shot14;]
true 152 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient4;]
true 1 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 16 nop[;]
true 86 grasp[right,shaker1;]
true 96 shake[cocktail8,ingredient3,ingredient4,shaker1,right,left;]
true 180 pour-shaker-to-shot[cocktail8,shot4,right,shaker1,l2,l1;]
true 251 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 265 clean-shaker[right,left,shaker1;]
true 356 leave[right,shaker1;]
true 51 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 110 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot14;]
true 135 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient4,dispenser5;]
true 71 grasp[left,shot14;]
true 233 clean-shot[shot14,ingredient4,left,right;]
true 284 fill-shot[shot14,ingredient5,left,right,dispenser5;]
true 305 pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,left,l0,l1;]
true 374 clean-shot[shot14,ingredient5,left,right;]
true 427 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,left,shot14;]
true 234 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 76 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2;]
true 423 leave[left,shot14;]
true 235 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient1;]
true 345 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 145 nop[;]
true 334 grasp[right,shaker1;]
true 5 shake[cocktail10,ingredient5,ingredient1,shaker1,right,left;]
true 115 pour-shaker-to-shot[cocktail10,shot5,right,shaker1,l2,l1;]
true 346 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 219 clean-shaker[right,left,shaker1;]
true 82 leave[right,shaker1;]
true 391 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 341 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient5,shot16;]
true 275 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient2,dispenser5;]
true 437 grasp[left,shot16;]
true 170 clean-shot[shot16,ingredient2,left,right;]
true 146 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 46 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1;]
true 330 clean-shot[shot16,ingredient5,left,right;]
true 106 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,left,shot16;]
true 191 fill-shot[shot16,ingredient1,left,right,dispenser1;]
true 430 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,left,l1,l2;]
true 14 leave[left,shot16;]
true 311 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient5,ingredient1;]
true 159 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 6 nop[;]
true 340 grasp[left,shaker1;]
true 267 shake[cocktail9,ingredient5,ingredient1,shaker1,left,right;]
true 4 pour-shaker-to-shot[cocktail9,shot6,left,shaker1,l2,l1;]
true 210 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 108 clean-shaker[left,right,shaker1;]
true 54 leave[left,shaker1;]
true 173 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 56 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot16;]
true 342 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient1,dispenser1;]
true 117 grasp[left,shot16;]
true 366 refill-shot[shot16,ingredient1,left,right,dispenser1;]
true 300 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,left,l0,l1;]
true 378 clean-shot[shot16,ingredient1,left,right;]
true 104 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient5,left,shot16;]
true 373 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 360 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 41 leave[left,shot16;]
true 64 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient5;]
true 349 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 402 nop[;]
true 113 grasp[left,shaker1;]
true 207 shake[cocktail1,ingredient1,ingredient5,shaker1,left,right;]
true 177 pour-shaker-to-shot[cocktail1,shot7,left,shaker1,l2,l1;]
true 162 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 236 clean-shaker[left,right,shaker1;]
true 364 leave[left,shaker1;]
true 174 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 193 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot14;]
true 130 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient1,dispenser1;]
true 119 grasp[left,shot14;]
true 66 refill-shot[shot14,ingredient1,left,right,dispenser1;]
true 263 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,left,l0,l1;]
true 370 clean-shot[shot14,ingredient1,left,right;]
true 277 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient2,left,shot14;]
true 11 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 160 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,left,l1,l2;]
true 270 leave[left,shot14;]
true 394 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient2;]
true 58 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 336 nop[;]
true 8 grasp[right,shaker1;]
true 276 shake[cocktail3,ingredient1,ingredient2,shaker1,right,left;]
true 168 pour-shaker-to-shot[cocktail3,shot8,right,shaker1,l2,l1;]
true 95 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 248 clean-shaker[right,left,shaker1;]
true 426 leave[right,shaker1;]
true 77 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 186 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot16;]
true 118 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient5,dispenser2;]
true 298 grasp[left,shot16;]
true 136 clean-shot[shot16,ingredient5,left,right;]
true 43 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 9 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1;]
true 94 clean-shot[shot16,ingredient2,left,right;]
true 105 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot16;]
true 155 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 80 pour-shot-to-used-shaker[shot16,ingredient3,shaker1,left,l1,l2;]
true 274 leave[left,shot16;]
true 353 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient3;]
true 120 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 140 nop[;]
true 223 grasp[right,shaker1;]
true 163 shake[cocktail2,ingredient2,ingredient3,shaker1,right,left;]
true 91 pour-shaker-to-shot[cocktail2,shot9,right,shaker1,l2,l1;]
true 344 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 121 clean-shaker[right,left,shaker1;]
true 10 leave[right,shaker1;]
true 256 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 161 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot16;]
true 19 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient3,dispenser2;]
true 201 grasp[left,shot16;]
true 416 clean-shot[shot16,ingredient3,left,right;]
true 232 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 35 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1;]
true 372 clean-shot[shot16,ingredient2,left,right;]
true 67 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient4,left,shot16;]
true 247 fill-shot[shot16,ingredient4,left,right,dispenser4;]
true 62 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2;]
true 220 leave[left,shot16;]
true 165 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient4;]
true 198 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 272 nop[;]
true 331 grasp[right,shaker1;]
true 184 shake[cocktail5,ingredient2,ingredient4,shaker1,right,left;]
true 264 pour-shaker-to-shot[cocktail5,shot10,right,shaker1,l2,l1;]
true 200 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 166 clean-shaker[right,left,shaker1;]
true 409 leave[right,shaker1;]
true 293 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 148 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot16;]
true 321 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient4,dispenser3;]
true 23 grasp[left,shot16;]
true 428 clean-shot[shot16,ingredient4,left,right;]
true 211 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 100 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1;]
true 158 clean-shot[shot16,ingredient3,left,right;]
true 285 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,left,shot16;]
true 78 fill-shot[shot16,ingredient4,left,right,dispenser4;]
true 379 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2;]
true 52 leave[left,shot16;]
true 367 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient4;]
true 260 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 215 nop[;]
true 103 grasp[right,shaker1;]
true 329 shake[cocktail4,ingredient3,ingredient4,shaker1,right,left;]
true 144 pour-shaker-to-shot[cocktail4,shot11,right,shaker1,l2,l1;]
true 332 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 245 clean-shaker[right,left,shaker1;]
true 129 leave[right,shaker1;]
true 231 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right;]
true 380 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot16;]
true 408 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient4,dispenser1;]
true 69 grasp[right,shot16;]
true 84 clean-shot[shot16,ingredient4,right,left;]
true 278 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 292 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1;]
true 55 clean-shot[shot16,ingredient1,right,left;]
true 48 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient2,right,shot16;]
true 139 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 303 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,right,l1,l2;]
true 297 leave[right,shot16;]
true 411 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient2;]
true 268 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 28 nop[;]
true 182 grasp[left,shaker1;]
true 433 shake[cocktail3,ingredient1,ingredient2,shaker1,left,right;]
true 212 pour-shaker-to-shot[cocktail3,shot12,left,shaker1,l2,l1;]
true 283 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 413 clean-shaker[left,right,shaker1;]
true 262 leave[left,shaker1;]
true 187 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left;]
true 386 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot16;]
true 15 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient2,dispenser2;]
true 422 grasp[left,shot16;]
true 387 refill-shot[shot16,ingredient2,left,right,dispenser2;]
true 271 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1;]
true 290 clean-shot[shot16,ingredient2,left,right;]
true 352 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient4,left,shot16;]
true 179 fill-shot[shot16,ingredient4,left,right,dispenser4;]
true 44 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2;]
true 326 leave[left,shot16;]
true 369 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient4;]
true 294 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 304 nop[;]
true 343 grasp[right,shaker1;]
true 13 shake[cocktail5,ingredient2,ingredient4,shaker1,right,left;]
true 431 pour-shaker-to-shot[cocktail5,shot13,right,shaker1,l2,l1;]
true 59 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 338 clean-shaker[right,left,shaker1;]
true 244 leave[right,shaker1;]
true 362 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser5,ingredient5;]
true 147 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient2,dispenser5;]
true 74 grasp[right,shot14;]
true 89 clean-shot[shot14,ingredient2,right,left;]
true 254 fill-shot[shot14,ingredient5,right,left,dispenser5;]
true 18 leave[right,shot14;]
true 17 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,right;]
true 279 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot16;]
true 202 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient4,dispenser5;]
true 339 grasp[right,shot16;]
true 327 clean-shot[shot16,ingredient4,right,left;]
true 38 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 322 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1;]
true 149 clean-shot[shot16,ingredient5,right,left;]
true 189 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,right,shot16;]
true 241 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 238 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2;]
true 57 leave[right,shot16;]
true 417 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient1;]
true 399 __method_precondition_m5_do_clean_shot_5_precondition[shot15;]
true 70 nop[;]
true 401 grasp[right,shaker1;]
true 183 shake[cocktail10,ingredient5,ingredient1,shaker1,right,left;]
true 226 pour-shaker-to-shot[cocktail10,shot15,right,shaker1,l2,l1;]
true 34 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 60 clean-shaker[right,left,shaker1;]
true 385 leave[right,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 581588376
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 413
number of actions                    = 3693
number of abstract actions           = 946
number of primitive actions          = 2747
number of methods                    = 4379
number of primitive shop actions     = 1058
number of primitive non-shop actions = 1689
size of largest method               = 15
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 335641
number of clauses               = 1881225
average size of clauses         = 2.400435354622653
number of assert                = 182
number of horn                  = 1647477
K offset                        = 0
K chosen value                  = 4
state formula                   = 1577684
method children clauses         = 0
number of paths                 = 300
maximum plan length             = 300
number of decomposition clauses = 303541
number of ordering clauses      = 0
number of state clauses         = 1577684
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 19536
============ parsing ============
total                         = 1120
file parser                   = 613
sort expansion                = 237
closed world assumption       = 134
inherit preconditions         = 0
shop methods                  = 29
eliminate identical variables = 54
strip domain of hybridity     = 1
flatten formula               = 49
============ preprocessing ============
total                                      = 6724
compile negative preconditions             = 46
compile unit methods                       = 0
split parameter                            = 55
expand choiceless abstract tasks           = 605
compile methods with identical tasks       = 43
removing unnecessary predicates            = 1142
lifted reachabiltiy analysis               = 70
grounded planning graph analysis           = 1848
grounded task decomposition graph analysis = 2139
grounding                                  = 698
create artificial top task                 = 8
============ search preparation ============
compute state invariants = 2377
============ sat ============
total                                        = 8636
generate formula                             = 6125
generate path decomposition tree             = 463
normalise path decomposition tree            = 107
sog optimisation                             = 58
translate path decomposition tree to clauses = 963
generate state formula                       = 6011
generate state invariant formula             = 747
transform to DIMACS                          = 971
SAT solver                                   = 1210
SAT solver for K=0004                        = 1210

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2747";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="946";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="581588376";"40 sat:20:state formula"="1577684";"40 sat:01:number of variables"="335641";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="300";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="4379";"30 problem:07:number of primitive shop actions"="1058";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3693";"30 problem:08:number of primitive non-shop actions"="1689";"30 problem:02:number of predicates"="413";"40 sat:03:number of horn"="1647477";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="15";"40 sat:03:average size of clauses"="2.400435354622653";"40 sat:02:number of clauses"="1881225";"40 sat:50:number of state clauses"="1577684";"40 sat:03:number of assert"="182";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="300";"40 sat:50:number of decomposition clauses"="303541";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="613";"01 parsing:08:flatten formula"="49";"40 sat:41:SAT solver for K=0004"="1210";"40 sat:00:total"="8636";"40 sat:16:generate state formula"="6011";"40 sat:20:transform to DIMACS"="971";"40 sat:11:generate path decomposition tree"="463";"02 preprocessing:07:compile methods with identical tasks"="43";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="1142";"01 parsing:03:closed world assumption"="134";"02 preprocessing:11:lifted reachabiltiy analysis"="70";"01 parsing:02:sort expansion"="237";"40 sat:12:normalise path decomposition tree"="107";"40 sat:40:SAT solver"="1210";"01 parsing:00:total"="1120";"40 sat:10:generate formula"="6125";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="46";"00 total:00:total"="19536";"40 sat:13:sog optimisation"="58";"02 preprocessing:12:grounded planning graph analysis"="1848";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="2139";"02 preprocessing:04:split parameter"="55";"01 parsing:05:shop methods"="29";"10 search preparation:02:compute state invariants"="2377";"01 parsing:06:eliminate identical variables"="54";"40 sat:15:translate path decomposition tree to clauses"="963";"02 preprocessing:05:expand choiceless abstract tasks"="605";"40 sat:17:generate state invariant formula"="747";"02 preprocessing:00:total"="6724";"02 preprocessing:99:create artificial top task"="8";"02 preprocessing:84:grounding"="698"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient2,shot16];__method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser2,ingredient2];grasp[right,shot16];fill-shot[shot16,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1];clean-shot[shot16,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient1,right,shot16];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[right,shaker1];shake[cocktail11,ingredient2,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot1,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient3,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient1,dispenser3];grasp[right,shot16];clean-shot[shot16,ingredient1,right,left];fill-shot[shot16,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1];clean-shot[shot16,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,right,shot16];fill-shot[shot16,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[left,shaker1];shake[cocktail6,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot2,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient3,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient4,dispenser3];grasp[left,shot16];clean-shot[shot16,ingredient4,left,right];fill-shot[shot16,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1];clean-shot[shot16,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot16];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[left,shaker1];shake[cocktail7,ingredient3,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot3,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot14];__method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser3,ingredient3];grasp[left,shot14];fill-shot[shot14,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1];clean-shot[shot14,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot14];fill-shot[shot14,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot14,ingredient4,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[right,shaker1];shake[cocktail8,ingredient3,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot4,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient4,dispenser5];grasp[left,shot14];clean-shot[shot14,ingredient4,left,right];fill-shot[shot14,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,left,l0,l1];clean-shot[shot14,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,left,shot14];fill-shot[shot14,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[right,shaker1];shake[cocktail10,ingredient5,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot5,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient5,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient2,dispenser5];grasp[left,shot16];clean-shot[shot16,ingredient2,left,right];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1];clean-shot[shot16,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,left,shot16];fill-shot[shot16,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot16,ingredient1,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient5,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail9,ingredient5,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail9,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail9,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient1,dispenser1];grasp[left,shot16];refill-shot[shot16,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,left,l0,l1];clean-shot[shot16,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient5,left,shot16];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail1,ingredient1,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient1,dispenser1];grasp[left,shot14];refill-shot[shot14,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,left,l0,l1];clean-shot[shot14,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient2,left,shot14];fill-shot[shot14,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot14,ingredient2,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail3,ingredient1,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail3,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail3,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient5,dispenser2];grasp[left,shot16];clean-shot[shot16,ingredient5,left,right];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1];clean-shot[shot16,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot16];fill-shot[shot16,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot16,ingredient3,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail2,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient3,dispenser2];grasp[left,shot16];clean-shot[shot16,ingredient3,left,right];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1];clean-shot[shot16,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient4,left,shot16];fill-shot[shot16,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[right,shaker1];shake[cocktail5,ingredient2,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot10,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient4,dispenser3];grasp[left,shot16];clean-shot[shot16,ingredient4,left,right];fill-shot[shot16,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1];clean-shot[shot16,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,left,shot16];fill-shot[shot16,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail4,ingredient3,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient4,dispenser1];grasp[right,shot16];clean-shot[shot16,ingredient4,right,left];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,right,l0,l1];clean-shot[shot16,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient2,right,shot16];fill-shot[shot16,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[left,shaker1];shake[cocktail3,ingredient1,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot12,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient2,dispenser2];grasp[left,shot16];refill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1];clean-shot[shot16,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient4,left,shot16];fill-shot[shot16,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot13];nop[];grasp[right,shaker1];shake[cocktail5,ingredient2,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot13,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser5,ingredient5];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient2,dispenser5];grasp[right,shot14];clean-shot[shot14,ingredient2,right,left];fill-shot[shot14,ingredient5,right,left,dispenser5];leave[right,shot14];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient4,dispenser5];grasp[right,shot16];clean-shot[shot16,ingredient4,right,left];fill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1];clean-shot[shot16,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,right,shot16];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot15];nop[];grasp[right,shaker1];shake[cocktail10,ingredient5,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot15,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 right 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient2 shot16 
2 __method_precondition_m8_do_fill_shot_8_precondition shot16 dispenser2 ingredient2 
3 grasp right shot16 
4 fill-shot shot16 ingredient2 right left dispenser2 
5 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 right l0 l1 
6 clean-shot shot16 ingredient2 right left 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient1 right shot16 
8 fill-shot shot16 ingredient1 right left dispenser1 
9 pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 
10 leave right shot16 
11 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient2 ingredient1 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp right shaker1 
15 shake cocktail11 ingredient2 ingredient1 shaker1 right left 
16 pour-shaker-to-shot cocktail11 shot1 right shaker1 l2 l1 
17 empty-shaker right shaker1 cocktail11 l1 l0 
18 clean-shaker right left shaker1 
19 leave right shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient3 shot16 
22 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient3 ingredient1 dispenser3 
23 grasp right shot16 
24 clean-shot shot16 ingredient1 right left 
25 fill-shot shot16 ingredient3 right left dispenser3 
26 pour-shot-to-clean-shaker shot16 ingredient3 shaker1 right l0 l1 
27 clean-shot shot16 ingredient3 right left 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient4 right shot16 
29 fill-shot shot16 ingredient4 right left dispenser4 
30 pour-shot-to-used-shaker shot16 ingredient4 shaker1 right l1 l2 
31 leave right shot16 
32 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient3 ingredient4 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp left shaker1 
36 shake cocktail6 ingredient3 ingredient4 shaker1 left right 
37 pour-shaker-to-shot cocktail6 shot2 left shaker1 l2 l1 
38 empty-shaker left shaker1 cocktail6 l1 l0 
39 clean-shaker left right shaker1 
40 leave left shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient3 shot16 
43 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient3 ingredient4 dispenser3 
44 grasp left shot16 
45 clean-shot shot16 ingredient4 left right 
46 fill-shot shot16 ingredient3 left right dispenser3 
47 pour-shot-to-clean-shaker shot16 ingredient3 shaker1 left l0 l1 
48 clean-shot shot16 ingredient3 left right 
49 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient2 left shot16 
50 fill-shot shot16 ingredient2 left right dispenser2 
51 pour-shot-to-used-shaker shot16 ingredient2 shaker1 left l1 l2 
52 leave left shot16 
53 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient3 ingredient2 
54 __method_precondition_m5_do_clean_shot_5_precondition shot3 
55 nop  
56 grasp left shaker1 
57 shake cocktail7 ingredient3 ingredient2 shaker1 left right 
58 pour-shaker-to-shot cocktail7 shot3 left shaker1 l2 l1 
59 empty-shaker left shaker1 cocktail7 l1 l0 
60 clean-shaker left right shaker1 
61 leave left shaker1 
62 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
63 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot14 
64 __method_precondition_m8_do_fill_shot_8_precondition shot14 dispenser3 ingredient3 
65 grasp left shot14 
66 fill-shot shot14 ingredient3 left right dispenser3 
67 pour-shot-to-clean-shaker shot14 ingredient3 shaker1 left l0 l1 
68 clean-shot shot14 ingredient3 left right 
69 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient4 left shot14 
70 fill-shot shot14 ingredient4 left right dispenser4 
71 pour-shot-to-used-shaker shot14 ingredient4 shaker1 left l1 l2 
72 leave left shot14 
73 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient4 
74 __method_precondition_m5_do_clean_shot_5_precondition shot4 
75 nop  
76 grasp right shaker1 
77 shake cocktail8 ingredient3 ingredient4 shaker1 right left 
78 pour-shaker-to-shot cocktail8 shot4 right shaker1 l2 l1 
79 empty-shaker right shaker1 cocktail8 l1 l0 
80 clean-shaker right left shaker1 
81 leave right shaker1 
82 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
83 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient5 shot14 
84 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient5 ingredient4 dispenser5 
85 grasp left shot14 
86 clean-shot shot14 ingredient4 left right 
87 fill-shot shot14 ingredient5 left right dispenser5 
88 pour-shot-to-clean-shaker shot14 ingredient5 shaker1 left l0 l1 
89 clean-shot shot14 ingredient5 left right 
90 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient1 left shot14 
91 fill-shot shot14 ingredient1 left right dispenser1 
92 pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 
93 leave left shot14 
94 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient5 ingredient1 
95 __method_precondition_m5_do_clean_shot_5_precondition shot5 
96 nop  
97 grasp right shaker1 
98 shake cocktail10 ingredient5 ingredient1 shaker1 right left 
99 pour-shaker-to-shot cocktail10 shot5 right shaker1 l2 l1 
100 empty-shaker right shaker1 cocktail10 l1 l0 
101 clean-shaker right left shaker1 
102 leave right shaker1 
103 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
104 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient5 shot16 
105 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient5 ingredient2 dispenser5 
106 grasp left shot16 
107 clean-shot shot16 ingredient2 left right 
108 fill-shot shot16 ingredient5 left right dispenser5 
109 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 left l0 l1 
110 clean-shot shot16 ingredient5 left right 
111 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient1 left shot16 
112 fill-shot shot16 ingredient1 left right dispenser1 
113 pour-shot-to-used-shaker shot16 ingredient1 shaker1 left l1 l2 
114 leave left shot16 
115 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient5 ingredient1 
116 __method_precondition_m5_do_clean_shot_5_precondition shot6 
117 nop  
118 grasp left shaker1 
119 shake cocktail9 ingredient5 ingredient1 shaker1 left right 
120 pour-shaker-to-shot cocktail9 shot6 left shaker1 l2 l1 
121 empty-shaker left shaker1 cocktail9 l1 l0 
122 clean-shaker left right shaker1 
123 leave left shaker1 
124 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
125 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient1 shot16 
126 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient1 dispenser1 
127 grasp left shot16 
128 refill-shot shot16 ingredient1 left right dispenser1 
129 pour-shot-to-clean-shaker shot16 ingredient1 shaker1 left l0 l1 
130 clean-shot shot16 ingredient1 left right 
131 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient5 left shot16 
132 fill-shot shot16 ingredient5 left right dispenser5 
133 pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 
134 leave left shot16 
135 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient1 ingredient5 
136 __method_precondition_m5_do_clean_shot_5_precondition shot7 
137 nop  
138 grasp left shaker1 
139 shake cocktail1 ingredient1 ingredient5 shaker1 left right 
140 pour-shaker-to-shot cocktail1 shot7 left shaker1 l2 l1 
141 empty-shaker left shaker1 cocktail1 l1 l0 
142 clean-shaker left right shaker1 
143 leave left shaker1 
144 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 left 
145 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient1 shot14 
146 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient1 dispenser1 
147 grasp left shot14 
148 refill-shot shot14 ingredient1 left right dispenser1 
149 pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 
150 clean-shot shot14 ingredient1 left right 
151 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient2 left shot14 
152 fill-shot shot14 ingredient2 left right dispenser2 
153 pour-shot-to-used-shaker shot14 ingredient2 shaker1 left l1 l2 
154 leave left shot14 
155 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient1 ingredient2 
156 __method_precondition_m5_do_clean_shot_5_precondition shot8 
157 nop  
158 grasp right shaker1 
159 shake cocktail3 ingredient1 ingredient2 shaker1 right left 
160 pour-shaker-to-shot cocktail3 shot8 right shaker1 l2 l1 
161 empty-shaker right shaker1 cocktail3 l1 l0 
162 clean-shaker right left shaker1 
163 leave right shaker1 
164 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 left 
165 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient2 shot16 
166 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient2 ingredient5 dispenser2 
167 grasp left shot16 
168 clean-shot shot16 ingredient5 left right 
169 fill-shot shot16 ingredient2 left right dispenser2 
170 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 
171 clean-shot shot16 ingredient2 left right 
172 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 left shot16 
173 fill-shot shot16 ingredient3 left right dispenser3 
174 pour-shot-to-used-shaker shot16 ingredient3 shaker1 left l1 l2 
175 leave left shot16 
176 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient2 ingredient3 
177 __method_precondition_m5_do_clean_shot_5_precondition shot9 
178 nop  
179 grasp right shaker1 
180 shake cocktail2 ingredient2 ingredient3 shaker1 right left 
181 pour-shaker-to-shot cocktail2 shot9 right shaker1 l2 l1 
182 empty-shaker right shaker1 cocktail2 l1 l0 
183 clean-shaker right left shaker1 
184 leave right shaker1 
185 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
186 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient2 shot16 
187 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient2 ingredient3 dispenser2 
188 grasp left shot16 
189 clean-shot shot16 ingredient3 left right 
190 fill-shot shot16 ingredient2 left right dispenser2 
191 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 
192 clean-shot shot16 ingredient2 left right 
193 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient4 left shot16 
194 fill-shot shot16 ingredient4 left right dispenser4 
195 pour-shot-to-used-shaker shot16 ingredient4 shaker1 left l1 l2 
196 leave left shot16 
197 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient2 ingredient4 
198 __method_precondition_m5_do_clean_shot_5_precondition shot10 
199 nop  
200 grasp right shaker1 
201 shake cocktail5 ingredient2 ingredient4 shaker1 right left 
202 pour-shaker-to-shot cocktail5 shot10 right shaker1 l2 l1 
203 empty-shaker right shaker1 cocktail5 l1 l0 
204 clean-shaker right left shaker1 
205 leave right shaker1 
206 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
207 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient3 shot16 
208 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient3 ingredient4 dispenser3 
209 grasp left shot16 
210 clean-shot shot16 ingredient4 left right 
211 fill-shot shot16 ingredient3 left right dispenser3 
212 pour-shot-to-clean-shaker shot16 ingredient3 shaker1 left l0 l1 
213 clean-shot shot16 ingredient3 left right 
214 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient4 left shot16 
215 fill-shot shot16 ingredient4 left right dispenser4 
216 pour-shot-to-used-shaker shot16 ingredient4 shaker1 left l1 l2 
217 leave left shot16 
218 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient3 ingredient4 
219 __method_precondition_m5_do_clean_shot_5_precondition shot11 
220 nop  
221 grasp right shaker1 
222 shake cocktail4 ingredient3 ingredient4 shaker1 right left 
223 pour-shaker-to-shot cocktail4 shot11 right shaker1 l2 l1 
224 empty-shaker right shaker1 cocktail4 l1 l0 
225 clean-shaker right left shaker1 
226 leave right shaker1 
227 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 right 
228 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient1 shot16 
229 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient1 ingredient4 dispenser1 
230 grasp right shot16 
231 clean-shot shot16 ingredient4 right left 
232 fill-shot shot16 ingredient1 right left dispenser1 
233 pour-shot-to-clean-shaker shot16 ingredient1 shaker1 right l0 l1 
234 clean-shot shot16 ingredient1 right left 
235 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient2 right shot16 
236 fill-shot shot16 ingredient2 right left dispenser2 
237 pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 
238 leave right shot16 
239 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient1 ingredient2 
240 __method_precondition_m5_do_clean_shot_5_precondition shot12 
241 nop  
242 grasp left shaker1 
243 shake cocktail3 ingredient1 ingredient2 shaker1 left right 
244 pour-shaker-to-shot cocktail3 shot12 left shaker1 l2 l1 
245 empty-shaker left shaker1 cocktail3 l1 l0 
246 clean-shaker left right shaker1 
247 leave left shaker1 
248 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot13 left 
249 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient2 shot16 
250 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient2 dispenser2 
251 grasp left shot16 
252 refill-shot shot16 ingredient2 left right dispenser2 
253 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 
254 clean-shot shot16 ingredient2 left right 
255 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient4 left shot16 
256 fill-shot shot16 ingredient4 left right dispenser4 
257 pour-shot-to-used-shaker shot16 ingredient4 shaker1 left l1 l2 
258 leave left shot16 
259 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient2 ingredient4 
260 __method_precondition_m5_do_clean_shot_5_precondition shot13 
261 nop  
262 grasp right shaker1 
263 shake cocktail5 ingredient2 ingredient4 shaker1 right left 
264 pour-shaker-to-shot cocktail5 shot13 right shaker1 l2 l1 
265 empty-shaker right shaker1 cocktail5 l1 l0 
266 clean-shaker right left shaker1 
267 leave right shaker1 
268 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser5 ingredient5 
269 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient5 ingredient2 dispenser5 
270 grasp right shot14 
271 clean-shot shot14 ingredient2 right left 
272 fill-shot shot14 ingredient5 right left dispenser5 
273 leave right shot14 
274 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot15 right 
275 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient5 shot16 
276 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient5 ingredient4 dispenser5 
277 grasp right shot16 
278 clean-shot shot16 ingredient4 right left 
279 fill-shot shot16 ingredient5 right left dispenser5 
280 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 
281 clean-shot shot16 ingredient5 right left 
282 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient1 right shot16 
283 fill-shot shot16 ingredient1 right left dispenser1 
284 pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 
285 leave right shot16 
286 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient5 ingredient1 
287 __method_precondition_m5_do_clean_shot_5_precondition shot15 
288 nop  
289 grasp right shaker1 
290 shake cocktail10 ingredient5 ingredient1 shaker1 right left 
291 pour-shaker-to-shot cocktail10 shot15 right shaker1 l2 l1 
292 empty-shaker right shaker1 cocktail10 l1 l0 
293 clean-shaker right left shaker1 
294 leave right shaker1 
root 298
295 serve_shot shot7 cocktail1  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 135 373 138 139 140 141 142 143
296 do_fill_shot shot16 ingredient2 left  -> m9_do_fill_shot 166 167 168 169
297 serve_shot shot9 cocktail2  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 176 378 179 180 181 182 183 184
298 __choicelessATCompilation__top_1  -> __top_1 435 302 426 397 329 304 410 353 327 372 361 309 307 392 411
299 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient1 left  -> _m3_get_second_ingredient_2 91
300 do_fill_shot shot14 ingredient3 left  -> m8_do_fill_shot 64 65 66
301 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 47
302 do_cocktail_in_shot1 shot2 cocktail6  -> m0_do_cocktail_in_shot1 20 346 393 409
303 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 151 368 428 154
304 do_cocktail_in_shot1 shot6 cocktail9  -> m0_do_cocktail_in_shot1 103 348 358 318
305 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 219 220
306 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient4 left  -> _m3_get_second_ingredient_2 256
307 do_cocktail_in_shot1 shot13 cocktail5  -> m0_do_cocktail_in_shot1 248 384 416 413
308 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient1 left  -> _m2_get_first_ingredient_4 130
309 do_cocktail_in_shot1 shot12 cocktail3  -> m0_do_cocktail_in_shot1 227 418 415 326
310 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 280
311 do_fill_shot shot16 ingredient2 left  -> m7_do_fill_shot 250 251 252
312 get_second_ingredient cocktail10 right  -> m3_get_second_ingredient 282 400 328 285
313 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient3 left  -> _m2_get_first_ingredient_4 48
314 serve_shot shot11 cocktail4  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 218 305 221 222 223 224 225 226
315 do_fill_shot shot16 ingredient2 left  -> m9_do_fill_shot 187 188 189 190
316 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient1 left  -> _m3_get_second_ingredient_2 112
317 do_clean_shot_m4_serve_shot_sip_2 shot15 left  -> <_m4_serve_shot_2;do_clean_shot[shot15,cocktail7,left];m5_do_clean_shot;0;-1,-2> 287 288
318 serve_shot shot6 cocktail9  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 115 419 118 119 120 121 122 123
319 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 191
320 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient1 right  -> _m3_get_second_ingredient_2 8
321 do_fill_shot shot14 ingredient1 left  -> m7_do_fill_shot 146 147 148
322 do_fill_shot shot16 ingredient3 left  -> m9_do_fill_shot 43 44 45 46
323 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 216
324 get_first_ingredient cocktail11 right  -> m2_get_first_ingredient 1 350 422 355
325 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 26
326 serve_shot shot12 cocktail3  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 239 380 242 243 244 245 246 247
327 do_cocktail_in_shot1 shot9 cocktail2  -> m0_do_cocktail_in_shot1 164 421 385 297
328 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 284
329 do_cocktail_in_shot1 shot5 cocktail10  -> m0_do_cocktail_in_shot1 82 330 367 403
330 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 83 339 429 349
331 do_fill_shot shot16 ingredient1 right  -> m9_do_fill_shot 229 230 231 232
332 do_fill_shot shot16 ingredient5 right  -> m9_do_fill_shot 276 277 278 279
333 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 92
334 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 174
335 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 left  -> _m3_get_second_ingredient_2 132
336 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 257
337 do_clean_shot_m4_serve_shot_sip_2 shot3 right  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2> 54 55
338 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 9
339 do_fill_shot shot14 ingredient5 left  -> m9_do_fill_shot 84 85 86 87
340 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 71
341 serve_shot shot1 cocktail11  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 11 425 14 15 16 17 18 19
342 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 69 351 340 72
343 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 49 376 402 52
344 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 131 335 389 134
345 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 237
346 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 21 363 325 423
347 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 195
348 get_first_ingredient cocktail9 left  -> m2_get_first_ingredient 104 379 377 408
349 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient5 left  -> _m2_get_first_ingredient_4 89
350 do_fill_shot shot16 ingredient2 right  -> m8_do_fill_shot 2 3 4
351 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient4 left  -> _m3_get_second_ingredient_2 70
352 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 left  -> _m2_get_first_ingredient_4 192
353 do_cocktail_in_shot1 shot8 cocktail3  -> m0_do_cocktail_in_shot1 144 383 303 407
354 get_first_ingredient cocktail10 right  -> m2_get_first_ingredient 275 332 310 406
355 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 right  -> _m2_get_first_ingredient_4 6
356 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 left  -> _m2_get_first_ingredient_4 254
357 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient4 left  -> _m3_get_second_ingredient_2 194
358 get_second_ingredient cocktail9 left  -> m3_get_second_ingredient 111 316 364 114
359 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 129
360 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 212
361 do_cocktail_in_shot1 shot11 cocktail4  -> m0_do_cocktail_in_shot1 206 433 405 314
362 do_clean_shot_m4_serve_shot_sip_2 shot2 right  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2> 33 34
363 do_fill_shot shot16 ingredient3 right  -> m9_do_fill_shot 22 23 24 25
364 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 113
365 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 67
366 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 233
367 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 90 299 333 93
368 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient2 left  -> _m3_get_second_ingredient_2 152
369 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 63 300 365 370
370 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient3 left  -> _m2_get_first_ingredient_4 68
371 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 186 315 319 352
372 do_cocktail_in_shot1 shot10 cocktail5  -> m0_do_cocktail_in_shot1 185 371 434 432
373 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 136 137
374 do_fill_shot shot16 ingredient1 left  -> m7_do_fill_shot 126 127 128
375 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 125 374 359 308
376 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 left  -> _m3_get_second_ingredient_2 50
377 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 109
378 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 177 178
379 do_fill_shot shot16 ingredient5 left  -> m9_do_fill_shot 105 106 107 108
380 do_clean_shot_m4_serve_shot_sip_2 shot12 right  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2> 240 241
381 serve_shot shot15 cocktail10  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot15,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 286 317 289 290 291 292 293 294
382 do_fill_shot shot14 ingredient5 right  -> m9_do_fill_shot 269 270 271 272
383 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 145 321 420 424
384 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 249 311 386 356
385 get_second_ingredient cocktail2 left  -> m3_get_second_ingredient 172 398 334 175
386 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 253
387 do_clean_shot_m4_serve_shot_sip_2 shot5 left  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2> 95 96
388 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 156 157
389 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 133
390 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 right  -> _m3_get_second_ingredient_2 236
391 do_clean_shot_m4_serve_shot_sip_2 shot10 left  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2> 198 199
392 do_cocktail_in_shot2 shot14 ingredient5  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient5];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 268 382 273
393 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 28 437 399 31
394 do_clean_shot_m4_serve_shot_sip_2 shot4 left  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2> 74 75
395 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 left  -> _m2_get_first_ingredient_4 171
396 do_fill_shot shot16 ingredient3 left  -> m9_do_fill_shot 208 209 210 211
397 do_cocktail_in_shot1 shot4 cocktail8  -> m0_do_cocktail_in_shot1 62 369 342 414
398 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient3 left  -> _m3_get_second_ingredient_2 173
399 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 30
400 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient1 right  -> _m3_get_second_ingredient_2 283
401 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 170
402 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 51
403 serve_shot shot5 cocktail10  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 94 387 97 98 99 100 101 102
404 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient3 left  -> _m2_get_first_ingredient_4 213
405 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 214 417 323 217
406 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 right  -> _m2_get_first_ingredient_4 281
407 serve_shot shot8 cocktail3  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 155 388 158 159 160 161 162 163
408 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 left  -> _m2_get_first_ingredient_4 110
409 serve_shot shot2 cocktail6  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 32 362 35 36 37 38 39 40
410 do_cocktail_in_shot1 shot7 cocktail1  -> m0_do_cocktail_in_shot1 124 375 344 295
411 do_cocktail_in_shot1 shot15 cocktail10  -> m0_do_cocktail_in_shot1 274 354 312 381
412 serve_shot shot3 cocktail7  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 53 337 56 57 58 59 60 61
413 serve_shot shot13 cocktail5  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot13,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 259 427 262 263 264 265 266 267
414 serve_shot shot4 cocktail8  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 73 394 76 77 78 79 80 81
415 get_second_ingredient cocktail3 right  -> m3_get_second_ingredient 235 390 345 238
416 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 255 306 336 258
417 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient4 left  -> _m3_get_second_ingredient_2 215
418 get_first_ingredient cocktail3 right  -> m2_get_first_ingredient 228 331 366 436
419 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 116 117
420 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 149
421 get_first_ingredient cocktail2 left  -> m2_get_first_ingredient 165 296 401 395
422 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 5
423 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient3 right  -> _m2_get_first_ingredient_4 27
424 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient1 left  -> _m2_get_first_ingredient_4 150
425 do_clean_shot_m4_serve_shot_sip_2 shot1 left  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2> 12 13
426 do_cocktail_in_shot1 shot3 cocktail7  -> m0_do_cocktail_in_shot1 41 430 343 412
427 do_clean_shot_m4_serve_shot_sip_2 shot13 left  -> <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,left];m5_do_clean_shot;0;-1,-2> 260 261
428 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 153
429 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 88
430 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 42 322 301 313
431 get_second_ingredient cocktail11 right  -> m3_get_second_ingredient 7 320 338 10
432 serve_shot shot10 cocktail5  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 197 391 200 201 202 203 204 205
433 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 207 396 360 404
434 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 193 357 347 196
435 do_cocktail_in_shot1 shot1 cocktail11  -> m0_do_cocktail_in_shot1 0 324 431 341
436 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient1 right  -> _m2_get_first_ingredient_4 234
437 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient4 right  -> _m3_get_second_ingredient_2 29

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 21.611 MEMPEAK_KBS 855886.848
