PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile24.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile24.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile24.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Grounded planning graph ... done in 254ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 107
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 31
Grounding ... done.
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 56ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 88
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 119
	number of tasks = 349
	number of decomposition methods = 327
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 113
	number of tasks = 343
	number of decomposition methods = 321
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 113
	number of tasks = 343
	number of decomposition methods = 321
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 113
	number of tasks = 343
	number of decomposition methods = 321
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 31ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 88
	number of abstract tasks = 113
	number of tasks = 343
	number of decomposition methods = 321
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 113
	number of tasks = 343
	number of decomposition methods = 321
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 11ms.
	Number of Grounded Actions 230
	Number of Grounded Literals 88
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 112
	number of tasks = 342
	number of decomposition methods = 320
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 168
	number of tasks = 398
	number of decomposition methods = 376
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 168
	number of tasks = 398
	number of decomposition methods = 376
	number of predicates = 88
	number of sorts = 0
	number of tasks in largest method = 35
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 230
	number of constants = 0
Tasks 230 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772563ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854772467
done
initial PDT has 56 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 56 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 11484
Size 11481 at 0/230
Size 5044
Size 4929 at 0/230
Size 2128
Size 2125 at 0/230
Size 454
Size 452 at 0/230
Size 224
Size 224 at 0/230
Size 205
Size 205 at 0/230
Size 204
Size 204 at 0/230
Size 204
Invariant time: 0.186
Number of invariants: 204
Invariant Clauses 11628
NUMBER OF CLAUSES 25568
NUMBER OF STATE CLAUSES 22559
NUMBER OF DECOMPOSITION CLAUSES 3009
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 88.23% 11.77% 0.0% 
NUMBER OF PATHS 56
Starting cryptominisat5.5
Setting starttime of solver to 1604489499421
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 70 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 70 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771265
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 14484
NUMBER OF CLAUSES 38748
NUMBER OF STATE CLAUSES 28932
NUMBER OF DECOMPOSITION CLAUSES 9816
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 74.67% 25.330000000000002% 0.0% 
NUMBER OF PATHS 70
Starting cryptominisat5.5
Setting starttime of solver to 1604489500147
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 98 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 98 leafs
SHOP LEAFS 14
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854770595
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 20196
NUMBER OF CLAUSES 64978
NUMBER OF STATE CLAUSES 41087
NUMBER OF DECOMPOSITION CLAUSES 23891
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 63.230000000000004% 36.77% 0.0% 
NUMBER OF PATHS 98
Starting cryptominisat5.5
Setting starttime of solver to 1604489500906
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 126 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 126 leafs
SHOP LEAFS 14
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854769960
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 25908
NUMBER OF CLAUSES 96698
NUMBER OF STATE CLAUSES 53692
NUMBER OF DECOMPOSITION CLAUSES 43006
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 55.53% 44.47% 0.0% 
NUMBER OF PATHS 126
Starting cryptominisat5.5
Setting starttime of solver to 1604489501547
Command exited with non-zero status 10
0.04 0.01

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_33,251 251 m-deliver
33 45 pathaction!1_33,88
Consider method^1_30,372 372 __UNIQUE-replacement_53
30 9 pathaction!1_30,395
Consider method^4_22;0;0;0,171 171 m-drive-to-via
22;0;0;0 146 pathaction!4_22;0;0;0,173
Consider method^2_34;3,93 93 m-unload
34;3 0 pathaction!2_34;3,80
Consider method^4_32;0;0;0,357 357 m-drive-to
32;0;0;0 119 pathaction!4_32;0;0;0,187
Consider method^5_23;2;0;0;0,301 301 m-drive-to
23;2;0;0;0 50 pathaction!5_23;2;0;0;0,178
Consider method^2_34;0,179 179 m-drive-to-via
34;0 13 pathaction!2_34;0,172
Consider method^4_32;2;0;0,238 238 m-drive-to-via
32;2;0;0 182 pathaction!4_32;2;0;0,187
Consider method^2_0;0,103 103 m-drive-to-via
0;0 5 pathaction!2_0;0,187
Consider method^1_24,367 367 __UNIQUE-replacement_48
24 120 pathaction!1_24,390
Consider method^3_23;0;0,82 82 m-drive-to-via
23;0;0 35 pathaction!3_23;0;0,178
Consider method^1_34,249 249 m-deliver
34 2 pathaction!1_34,90
Consider method^2_0;2,33 33 m-drive-to-via
0;2 68 pathaction!2_0;2,184
Consider method^2_34;2,180 180 m-drive-to-via
34;2 123 pathaction!2_34;2,177
Consider method^3_33;0;0,252 252 m-drive-to-via
33;0;0 85 pathaction!3_33;0;0,190
Consider method^1_28,371 371 __UNIQUE-replacement_52
28 51 pathaction!1_28,394
Consider method^3_34;2;0,349 349 m-drive-to
34;2;0 74 pathaction!3_34;2;0,188
Consider method^2_0;3,174 174 m-unload
0;3 77 pathaction!2_0;3,60
Consider method^1_21,326 326 m-unload
21 129 pathaction!1_21,65
Consider method^1_18,363 363 __UNIQUE-replacement_44
18 138 pathaction!1_18,386
Consider method^1_9,247 247 m-unload
9 152 pathaction!1_9,63
Consider method^2_23;0,211 211 m-drive-to-via
23;0 184 pathaction!2_23;0,192
Consider method^2_23;1,254 254 m-load
23;1 10 pathaction!2_23;1,302
Consider method^4_0;2;0;0,316 316 m-i-am-there
0;2;0;0 12 pathaction!4_0;2;0;0,187
Consider method^1_6,373 373 __UNIQUE-replacement_54
6 93 pathaction!1_6,396
Consider method^5_33;2;0;0;0,352 352 m-drive-to
33;2;0;0;0 21 pathaction!5_33;2;0;0;0,190
Consider method^1_10,361 361 __UNIQUE-replacement_42
10 56 pathaction!1_10,384
Consider method^1_22,161 161 m-deliver
22 44 pathaction!1_22,87
Consider method^5_22;0;0;0;0,55 55 m-drive-to
22;0;0;0;0 88 pathaction!5_22;0;0;0;0,190
Consider method^5_32;2;0;0;0,352 352 m-drive-to
32;2;0;0;0 52 pathaction!5_32;2;0;0;0,190
Consider method^1_19,165 165 m-load
19 90 pathaction!1_19,305
Consider method^3_33;2;0,75 75 m-drive-to-via
33;2;0 164 pathaction!3_33;2;0,190
Consider method^4_33;2;0;0,171 171 m-drive-to-via
33;2;0;0 86 pathaction!4_33;2;0;0,173
Consider method^1_27,308 308 m-unload
27 147 pathaction!1_27,68
Consider method^2_1;1,344 344 m-load
1;1 1 pathaction!2_1;1,303
Consider method^4_33;0;0;0,103 103 m-drive-to-via
33;0;0;0 8 pathaction!4_33;0;0;0,187
Consider method^2_33;0,168 168 m-drive-to-via
33;0 115 pathaction!2_33;0,168
Consider method^5_34;0;0;0;0,232 232 m-drive-to
34;0;0;0;0 36 pathaction!5_34;0;0;0;0,175
Consider method^2_34;1,138 138 m-load
34;1 109 pathaction!2_34;1,339
Consider method^1_8,374 374 __UNIQUE-replacement_55
8 155 pathaction!1_8,397
Consider method^1_26,368 368 __UNIQUE-replacement_49
26 54 pathaction!1_26,391
Consider method^1_2,369 369 __UNIQUE-replacement_50
2 189 pathaction!1_2,392
Consider method^2_32;0,168 168 m-drive-to-via
32;0 166 pathaction!2_32;0,168
Consider method^2_23;3,79 79 m-unload
23;3 79 pathaction!2_23;3,79
Consider method^3_23;2;0,181 181 m-drive-to-via
23;2;0 159 pathaction!3_23;2;0,178
Consider method^2_32;1,145 145 m-load
32;1 103 pathaction!2_32;1,314
Consider method^3_1;2;0,12 12 m-drive-to
1;2;0 27 pathaction!3_1;2;0,193
Consider method^3_22;0;0,75 75 m-drive-to-via
22;0;0 11 pathaction!3_22;0;0,190
Consider method^1_14,365 365 __UNIQUE-replacement_46
14 63 pathaction!1_14,388
Consider method^3_32;2;0,73 73 m-drive-to-via
32;2;0 104 pathaction!3_32;2;0,179
Consider method^2_22;3,194 194 m-unload
22;3 132 pathaction!2_22;3,81
Consider method^4_22;2;0;0,328 328 m-drive-to
22;2;0;0 28 pathaction!4_22;2;0;0,190
Consider method^2_32;2,212 212 m-drive-to-via
32;2 141 pathaction!2_32;2,191
Consider method^2_22;2,73 73 m-drive-to-via
22;2 87 pathaction!2_22;2,179
Consider method^2_1;3,275 275 m-unload
1;3 133 pathaction!2_1;3,64
Consider method^1_1,97 97 m-deliver
1 46 pathaction!1_1,89
Consider method^1_5,267 267 m-unload
5 23 pathaction!1_5,74
Consider method^1_4,370 370 __UNIQUE-replacement_51
4 163 pathaction!1_4,393
Consider method^5_23;0;0;0;0,309 309 m-drive-to
23;0;0;0;0 145 pathaction!5_23;0;0;0;0,193
Consider method^2_1;0,234 234 m-drive-to
1;0 156 pathaction!2_1;0,183
Consider method^5_33;0;0;0;0,83 83 m-drive-to
33;0;0;0;0 101 pathaction!5_33;0;0;0;0,179
Consider method^2_32;3,115 115 m-unload
32;3 151 pathaction!2_32;3,57
Consider method^1_17,64 64 m-unload
17 81 pathaction!1_17,71
Consider method^2_23;2,124 124 m-drive-to-via
23;2 193 pathaction!2_23;2,189
Consider method^1_11,137 137 m-load
11 143 pathaction!1_11,338
Consider method^1_16,366 366 __UNIQUE-replacement_47
16 32 pathaction!1_16,389
Consider method^1_0,205 205 m-deliver
0 195 pathaction!1_0,86
Consider method^3_0;0;0,84 84 m-drive-to-via
0;0;0 80 pathaction!3_0;0;0,179
Consider method^2_33;1,150 150 m-load
33;1 186 pathaction!2_33;1,334
Consider method^4_23;2;0;0,124 124 m-drive-to-via
23;2;0;0 134 pathaction!4_23;2;0;0,189
Consider method^1_15,183 183 m-load
15 25 pathaction!1_15,317
Consider method^1_3,27 27 m-load
3 137 pathaction!1_3,325
Consider method^2_1;2,80 80 m-drive-to-via
1;2 65 pathaction!2_1;2,169
Consider method^4_34;0;0;0,317 317 m-drive-to-via
34;0;0;0 183 pathaction!4_34;0;0;0,171
Consider method^3_32;0;0,252 252 m-drive-to-via
32;0;0 194 pathaction!3_32;0;0,190
Consider method^2_33;3,201 201 m-unload
33;3 128 pathaction!2_33;3,76
Consider method^1_32,269 269 m-deliver
32 177 pathaction!1_32,84
Consider method^1_29,94 94 m-load
29 192 pathaction!1_29,310
Consider method^2_33;2,238 238 m-drive-to-via
33;2 116 pathaction!2_33;2,187
Consider method^1_20,364 364 __UNIQUE-replacement_45
20 49 pathaction!1_20,387
Consider method^1_23,210 210 m-deliver
23 158 pathaction!1_23,85
Consider method^3_22;2;0,238 238 m-drive-to-via
22;2;0 126 pathaction!3_22;2;0,187
Consider method^3_0;2;0,252 252 m-drive-to-via
0;2;0 75 pathaction!3_0;2;0,190
Consider method^1_7,135 135 m-load
7 94 pathaction!1_7,301
Consider method^1_31,231 231 m-unload
31 121 pathaction!1_31,67
Consider method^2_0;1,229 229 m-load
0;1 162 pathaction!2_0;1,318
Consider method^1_13,259 259 m-unload
13 127 pathaction!1_13,82
Consider method^4_0;0;0;0,190 190 m-drive-to
0;0;0;0 168 pathaction!4_0;0;0;0,191
Consider method^3_34;0;0,253 253 m-drive-to-via
34;0;0 130 pathaction!3_34;0;0,188
Consider method^2_22;1,246 246 m-load
22;1 72 pathaction!2_22;1,320
Consider method^1_25,176 176 m-load
25 114 pathaction!1_25,311
Consider method^0_,375 375 <<<<<<<<<<<<<<<<<<<<<__top_1;deliver[package-4,city-loc-3];m-deliver;4;0,1,2,3,-1,-2,-3,-4,5,6,7,8,9,10,11,12,13>;deliver[package-6,city-loc-3];m-deliver;9;0,1,2,3,4,5,6,7,8,-1,-2,-3,-4,10,11,12,13,14,15,16>;deliver[package-5,city-loc-3];m-deliver;8;0,1,2,3,4,5,6,7,-1,-2,-3,-4,9,10,11,12,13,14,15,16,17,18,19>;deliver[package-9,city-loc-3];m-deliver;18;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,-1,-2,-3,-4,19,20,21,22>;deliver[package-2,city-loc-3];m-deliver;2;0,1,-1,-2,-3,-4,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25>;deliver[package-10,city-loc-3];m-deliver;25;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,-1,-2,-3,-4,26,27,28>;deliver[package-3,city-loc-3];m-deliver;6;0,1,2,3,4,5,-1,-2,-3,-4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31>;get-to[truck-1,city-loc-3];m-i-am-there;10;0,1,2,3,4,5,6,7,8,9,-1,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;12;0,1,2,3,4,5,6,7,8,9,10,11,-1,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;18;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,-1,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;20;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,-1,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;14;0,1,2,3,4,5,6,7,8,9,10,11,12,13,-1,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;16;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,-1,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;24;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,-1,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;26;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;2;0,1,-1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;4;0,1,2,3,-1,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;28;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,-1,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;30;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,-1,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;6;0,1,2,3,4,5,-1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;8;0,1,2,3,4,5,6,7,-1,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>
 105 pathaction!0_,341
Consider method^2_22;0,171 171 m-drive-to-via
22;0 31 pathaction!2_22;0,173
Consider method^1_12,362 362 __UNIQUE-replacement_43
12 73 pathaction!1_12,385
Consider method^4_23;0;0;0,359 359 m-drive-to-via
23;0;0;0 60 pathaction!4_23;0;0;0,183


CHECKING primitive solution of length 87 ...
true 39 drive[truck-2,city-loc-9,city-loc-7;]
true 40 drive[truck-2,city-loc-7,city-loc-0;]
true 188 drive[truck-2,city-loc-0,city-loc-2;]
true 6 pick-up[truck-2,city-loc-2,package-0,capacity-1,capacity-2;]
true 55 noop[truck-2,city-loc-2;]
true 29 drive[truck-2,city-loc-2,city-loc-4;]
true 97 drive[truck-2,city-loc-4,city-loc-1;]
true 64 drop[truck-2,city-loc-1,package-0,capacity-1,capacity-2;]
true 16 drive[truck-3,city-loc-4,city-loc-2;]
true 157 pick-up[truck-3,city-loc-2,package-1,capacity-1,capacity-2;]
true 22 drive[truck-3,city-loc-2,city-loc-0;]
true 58 drive[truck-3,city-loc-0,city-loc-5;]
true 7 drop[truck-3,city-loc-5,package-1,capacity-1,capacity-2;]
true 153 noop[truck-1,city-loc-3;]
true 59 pick-up[truck-1,city-loc-3,package-2,capacity-1,capacity-2;]
true 173 noop[truck-1,city-loc-3;]
true 124 drop[truck-1,city-loc-3,package-2,capacity-1,capacity-2;]
true 95 noop[truck-1,city-loc-3;]
true 70 pick-up[truck-1,city-loc-3,package-3,capacity-1,capacity-2;]
true 169 noop[truck-1,city-loc-3;]
true 176 drop[truck-1,city-loc-3,package-3,capacity-1,capacity-2;]
true 62 noop[truck-1,city-loc-3;]
true 26 pick-up[truck-1,city-loc-3,package-4,capacity-1,capacity-2;]
true 190 noop[truck-1,city-loc-3;]
true 167 drop[truck-1,city-loc-3,package-4,capacity-1,capacity-2;]
true 43 noop[truck-1,city-loc-3;]
true 179 pick-up[truck-1,city-loc-3,package-5,capacity-1,capacity-2;]
true 66 noop[truck-1,city-loc-3;]
true 98 drop[truck-1,city-loc-3,package-5,capacity-1,capacity-2;]
true 118 noop[truck-1,city-loc-3;]
true 96 pick-up[truck-1,city-loc-3,package-6,capacity-1,capacity-2;]
true 18 noop[truck-1,city-loc-3;]
true 113 drop[truck-1,city-loc-3,package-6,capacity-1,capacity-2;]
true 89 drive[truck-2,city-loc-1,city-loc-4;]
true 154 drive[truck-2,city-loc-4,city-loc-8;]
true 125 drive[truck-2,city-loc-8,city-loc-4;]
true 57 drive[truck-2,city-loc-4,city-loc-8;]
true 30 pick-up[truck-2,city-loc-8,package-7,capacity-1,capacity-2;]
true 91 drive[truck-2,city-loc-8,city-loc-4;]
true 180 drive[truck-2,city-loc-4,city-loc-2;]
true 48 drive[truck-2,city-loc-2,city-loc-0;]
true 112 drop[truck-2,city-loc-0,package-7,capacity-1,capacity-2;]
true 61 drive[truck-3,city-loc-5,city-loc-0;]
true 15 drive[truck-3,city-loc-0,city-loc-2;]
true 107 drive[truck-3,city-loc-2,city-loc-4;]
true 82 drive[truck-3,city-loc-4,city-loc-6;]
true 102 pick-up[truck-3,city-loc-6,package-8,capacity-1,capacity-2;]
true 174 drive[truck-3,city-loc-6,city-loc-4;]
true 41 drive[truck-3,city-loc-4,city-loc-8;]
true 171 drive[truck-3,city-loc-8,city-loc-4;]
true 148 drive[truck-3,city-loc-4,city-loc-8;]
true 140 drop[truck-3,city-loc-8,package-8,capacity-1,capacity-2;]
true 71 noop[truck-1,city-loc-3;]
true 144 pick-up[truck-1,city-loc-3,package-9,capacity-1,capacity-2;]
true 122 noop[truck-1,city-loc-3;]
true 139 drop[truck-1,city-loc-3,package-9,capacity-1,capacity-2;]
true 135 noop[truck-1,city-loc-3;]
true 20 pick-up[truck-1,city-loc-3,package-10,capacity-1,capacity-2;]
true 110 noop[truck-1,city-loc-3;]
true 191 drop[truck-1,city-loc-3,package-10,capacity-1,capacity-2;]
true 76 drive[truck-2,city-loc-0,city-loc-2;]
true 100 drive[truck-2,city-loc-2,city-loc-4;]
true 185 drive[truck-2,city-loc-4,city-loc-6;]
true 99 pick-up[truck-2,city-loc-6,package-11,capacity-1,capacity-2;]
true 170 drive[truck-2,city-loc-6,city-loc-4;]
true 172 drive[truck-2,city-loc-4,city-loc-2;]
true 181 drive[truck-2,city-loc-2,city-loc-0;]
true 161 drive[truck-2,city-loc-0,city-loc-7;]
true 78 drop[truck-2,city-loc-7,package-11,capacity-1,capacity-2;]
true 136 drive[truck-2,city-loc-7,city-loc-0;]
true 14 drive[truck-2,city-loc-0,city-loc-2;]
true 38 drive[truck-2,city-loc-2,city-loc-4;]
true 92 drive[truck-2,city-loc-4,city-loc-6;]
true 84 pick-up[truck-2,city-loc-6,package-12,capacity-1,capacity-2;]
true 187 drive[truck-2,city-loc-6,city-loc-4;]
true 83 drive[truck-2,city-loc-4,city-loc-8;]
true 24 drive[truck-2,city-loc-8,city-loc-4;]
true 47 drive[truck-2,city-loc-4,city-loc-2;]
true 108 drop[truck-2,city-loc-2,package-12,capacity-1,capacity-2;]
true 178 drive[truck-0,city-loc-8,city-loc-4;]
true 165 drive[truck-0,city-loc-4,city-loc-2;]
true 42 drive[truck-0,city-loc-2,city-loc-0;]
true 117 drive[truck-0,city-loc-0,city-loc-7;]
true 3 pick-up[truck-0,city-loc-7,package-13,capacity-1,capacity-2;]
true 149 drive[truck-0,city-loc-7,city-loc-0;]
true 150 drive[truck-0,city-loc-0,city-loc-5;]
true 67 drop[truck-0,city-loc-5,package-13,capacity-1,capacity-2;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 182709608
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 88
number of actions                    = 398
number of abstract actions           = 168
number of primitive actions          = 230
number of methods                    = 376
number of primitive shop actions     = 0
number of primitive non-shop actions = 230
size of largest method               = 35
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 42411
number of clauses               = 96698
average size of clauses         = 2.500796293615173
number of assert                = 22
number of horn                  = 87574
K offset                        = 0
K chosen value                  = 6
state formula                   = 53692
method children clauses         = 0
number of paths                 = 126
maximum plan length             = 126
number of decomposition clauses = 43006
number of ordering clauses      = 0
number of state clauses         = 53692
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 7140
============ parsing ============
total                         = 939
file parser                   = 540
sort expansion                = 158
closed world assumption       = 114
inherit preconditions         = 0
shop methods                  = 1
eliminate identical variables = 57
strip domain of hybridity     = 16
flatten formula               = 53
============ preprocessing ============
total                                      = 1906
compile negative preconditions             = 48
compile unit methods                       = 0
split parameter                            = 43
expand choiceless abstract tasks           = 360
compile methods with identical tasks       = 80
removing unnecessary predicates            = 127
lifted reachabiltiy analysis               = 54
grounded planning graph analysis           = 575
grounded task decomposition graph analysis = 475
grounding                                  = 130
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 278
============ sat ============
total                                        = 2549
generate formula                             = 1820
generate path decomposition tree             = 294
normalise path decomposition tree            = 125
sog optimisation                             = 81
translate path decomposition tree to clauses = 466
generate state formula                       = 1802
generate state invariant formula             = 95
transform to DIMACS                          = 203
SAT solver                                   = 100
SAT solver for K=0003                        = 0
SAT solver for K=0004                        = 10
SAT solver for K=0005                        = 40
SAT solver for K=0006                        = 50

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="230";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="168";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="182709608";"40 sat:20:state formula"="53692";"40 sat:01:number of variables"="42411";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="126";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="376";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="398";"30 problem:08:number of primitive non-shop actions"="230";"30 problem:02:number of predicates"="88";"40 sat:03:number of horn"="87574";"40 sat:15:K chosen value"="6";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="35";"40 sat:03:average size of clauses"="2.500796293615173";"40 sat:02:number of clauses"="96698";"40 sat:50:number of state clauses"="53692";"40 sat:03:number of assert"="22";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="126";"40 sat:50:number of decomposition clauses"="43006";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="540";"01 parsing:08:flatten formula"="53";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="2549";"40 sat:16:generate state formula"="1802";"40 sat:20:transform to DIMACS"="203";"40 sat:11:generate path decomposition tree"="294";"02 preprocessing:07:compile methods with identical tasks"="80";"01 parsing:07:strip domain of hybridity"="16";"02 preprocessing:08:removing unnecessary predicates"="127";"01 parsing:03:closed world assumption"="114";"02 preprocessing:11:lifted reachabiltiy analysis"="54";"01 parsing:02:sort expansion"="158";"40 sat:12:normalise path decomposition tree"="125";"40 sat:40:SAT solver"="100";"01 parsing:00:total"="939";"40 sat:10:generate formula"="1820";"40 sat:41:SAT solver for K=0005"="40";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="48";"00 total:00:total"="7140";"40 sat:13:sog optimisation"="81";"02 preprocessing:12:grounded planning graph analysis"="575";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="475";"40 sat:41:SAT solver for K=0006"="50";"02 preprocessing:04:split parameter"="43";"01 parsing:05:shop methods"="1";"10 search preparation:02:compute state invariants"="278";"01 parsing:06:eliminate identical variables"="57";"40 sat:15:translate path decomposition tree to clauses"="466";"02 preprocessing:05:expand choiceless abstract tasks"="360";"40 sat:41:SAT solver for K=0003"="0";"40 sat:17:generate state invariant formula"="95";"02 preprocessing:00:total"="1906";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="130"
#!verify drive[truck-2,city-loc-9,city-loc-7];drive[truck-2,city-loc-7,city-loc-0];drive[truck-2,city-loc-0,city-loc-2];pick-up[truck-2,city-loc-2,package-0,capacity-1,capacity-2];noop[truck-2,city-loc-2];drive[truck-2,city-loc-2,city-loc-4];drive[truck-2,city-loc-4,city-loc-1];drop[truck-2,city-loc-1,package-0,capacity-1,capacity-2];drive[truck-3,city-loc-4,city-loc-2];pick-up[truck-3,city-loc-2,package-1,capacity-1,capacity-2];drive[truck-3,city-loc-2,city-loc-0];drive[truck-3,city-loc-0,city-loc-5];drop[truck-3,city-loc-5,package-1,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-2,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-2,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-3,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-3,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-4,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-4,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-5,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-5,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-6,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-6,capacity-1,capacity-2];drive[truck-2,city-loc-1,city-loc-4];drive[truck-2,city-loc-4,city-loc-8];drive[truck-2,city-loc-8,city-loc-4];drive[truck-2,city-loc-4,city-loc-8];pick-up[truck-2,city-loc-8,package-7,capacity-1,capacity-2];drive[truck-2,city-loc-8,city-loc-4];drive[truck-2,city-loc-4,city-loc-2];drive[truck-2,city-loc-2,city-loc-0];drop[truck-2,city-loc-0,package-7,capacity-1,capacity-2];drive[truck-3,city-loc-5,city-loc-0];drive[truck-3,city-loc-0,city-loc-2];drive[truck-3,city-loc-2,city-loc-4];drive[truck-3,city-loc-4,city-loc-6];pick-up[truck-3,city-loc-6,package-8,capacity-1,capacity-2];drive[truck-3,city-loc-6,city-loc-4];drive[truck-3,city-loc-4,city-loc-8];drive[truck-3,city-loc-8,city-loc-4];drive[truck-3,city-loc-4,city-loc-8];drop[truck-3,city-loc-8,package-8,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-9,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-9,capacity-1,capacity-2];noop[truck-1,city-loc-3];pick-up[truck-1,city-loc-3,package-10,capacity-1,capacity-2];noop[truck-1,city-loc-3];drop[truck-1,city-loc-3,package-10,capacity-1,capacity-2];drive[truck-2,city-loc-0,city-loc-2];drive[truck-2,city-loc-2,city-loc-4];drive[truck-2,city-loc-4,city-loc-6];pick-up[truck-2,city-loc-6,package-11,capacity-1,capacity-2];drive[truck-2,city-loc-6,city-loc-4];drive[truck-2,city-loc-4,city-loc-2];drive[truck-2,city-loc-2,city-loc-0];drive[truck-2,city-loc-0,city-loc-7];drop[truck-2,city-loc-7,package-11,capacity-1,capacity-2];drive[truck-2,city-loc-7,city-loc-0];drive[truck-2,city-loc-0,city-loc-2];drive[truck-2,city-loc-2,city-loc-4];drive[truck-2,city-loc-4,city-loc-6];pick-up[truck-2,city-loc-6,package-12,capacity-1,capacity-2];drive[truck-2,city-loc-6,city-loc-4];drive[truck-2,city-loc-4,city-loc-8];drive[truck-2,city-loc-8,city-loc-4];drive[truck-2,city-loc-4,city-loc-2];drop[truck-2,city-loc-2,package-12,capacity-1,capacity-2];drive[truck-0,city-loc-8,city-loc-4];drive[truck-0,city-loc-4,city-loc-2];drive[truck-0,city-loc-2,city-loc-0];drive[truck-0,city-loc-0,city-loc-7];pick-up[truck-0,city-loc-7,package-13,capacity-1,capacity-2];drive[truck-0,city-loc-7,city-loc-0];drive[truck-0,city-loc-0,city-loc-5];drop[truck-0,city-loc-5,package-13,capacity-1,capacity-2]
==>
0 drive truck-2 city-loc-9 city-loc-7 
1 drive truck-2 city-loc-7 city-loc-0 
2 drive truck-2 city-loc-0 city-loc-2 
3 pick-up truck-2 city-loc-2 package-0 capacity-1 capacity-2 
4 noop truck-2 city-loc-2 
5 drive truck-2 city-loc-2 city-loc-4 
6 drive truck-2 city-loc-4 city-loc-1 
7 drop truck-2 city-loc-1 package-0 capacity-1 capacity-2 
8 drive truck-3 city-loc-4 city-loc-2 
9 pick-up truck-3 city-loc-2 package-1 capacity-1 capacity-2 
10 drive truck-3 city-loc-2 city-loc-0 
11 drive truck-3 city-loc-0 city-loc-5 
12 drop truck-3 city-loc-5 package-1 capacity-1 capacity-2 
13 noop truck-1 city-loc-3 
14 pick-up truck-1 city-loc-3 package-2 capacity-1 capacity-2 
15 noop truck-1 city-loc-3 
16 drop truck-1 city-loc-3 package-2 capacity-1 capacity-2 
17 noop truck-1 city-loc-3 
18 pick-up truck-1 city-loc-3 package-3 capacity-1 capacity-2 
19 noop truck-1 city-loc-3 
20 drop truck-1 city-loc-3 package-3 capacity-1 capacity-2 
21 noop truck-1 city-loc-3 
22 pick-up truck-1 city-loc-3 package-4 capacity-1 capacity-2 
23 noop truck-1 city-loc-3 
24 drop truck-1 city-loc-3 package-4 capacity-1 capacity-2 
25 noop truck-1 city-loc-3 
26 pick-up truck-1 city-loc-3 package-5 capacity-1 capacity-2 
27 noop truck-1 city-loc-3 
28 drop truck-1 city-loc-3 package-5 capacity-1 capacity-2 
29 noop truck-1 city-loc-3 
30 pick-up truck-1 city-loc-3 package-6 capacity-1 capacity-2 
31 noop truck-1 city-loc-3 
32 drop truck-1 city-loc-3 package-6 capacity-1 capacity-2 
33 drive truck-2 city-loc-1 city-loc-4 
34 drive truck-2 city-loc-4 city-loc-8 
35 drive truck-2 city-loc-8 city-loc-4 
36 drive truck-2 city-loc-4 city-loc-8 
37 pick-up truck-2 city-loc-8 package-7 capacity-1 capacity-2 
38 drive truck-2 city-loc-8 city-loc-4 
39 drive truck-2 city-loc-4 city-loc-2 
40 drive truck-2 city-loc-2 city-loc-0 
41 drop truck-2 city-loc-0 package-7 capacity-1 capacity-2 
42 drive truck-3 city-loc-5 city-loc-0 
43 drive truck-3 city-loc-0 city-loc-2 
44 drive truck-3 city-loc-2 city-loc-4 
45 drive truck-3 city-loc-4 city-loc-6 
46 pick-up truck-3 city-loc-6 package-8 capacity-1 capacity-2 
47 drive truck-3 city-loc-6 city-loc-4 
48 drive truck-3 city-loc-4 city-loc-8 
49 drive truck-3 city-loc-8 city-loc-4 
50 drive truck-3 city-loc-4 city-loc-8 
51 drop truck-3 city-loc-8 package-8 capacity-1 capacity-2 
52 noop truck-1 city-loc-3 
53 pick-up truck-1 city-loc-3 package-9 capacity-1 capacity-2 
54 noop truck-1 city-loc-3 
55 drop truck-1 city-loc-3 package-9 capacity-1 capacity-2 
56 noop truck-1 city-loc-3 
57 pick-up truck-1 city-loc-3 package-10 capacity-1 capacity-2 
58 noop truck-1 city-loc-3 
59 drop truck-1 city-loc-3 package-10 capacity-1 capacity-2 
60 drive truck-2 city-loc-0 city-loc-2 
61 drive truck-2 city-loc-2 city-loc-4 
62 drive truck-2 city-loc-4 city-loc-6 
63 pick-up truck-2 city-loc-6 package-11 capacity-1 capacity-2 
64 drive truck-2 city-loc-6 city-loc-4 
65 drive truck-2 city-loc-4 city-loc-2 
66 drive truck-2 city-loc-2 city-loc-0 
67 drive truck-2 city-loc-0 city-loc-7 
68 drop truck-2 city-loc-7 package-11 capacity-1 capacity-2 
69 drive truck-2 city-loc-7 city-loc-0 
70 drive truck-2 city-loc-0 city-loc-2 
71 drive truck-2 city-loc-2 city-loc-4 
72 drive truck-2 city-loc-4 city-loc-6 
73 pick-up truck-2 city-loc-6 package-12 capacity-1 capacity-2 
74 drive truck-2 city-loc-6 city-loc-4 
75 drive truck-2 city-loc-4 city-loc-8 
76 drive truck-2 city-loc-8 city-loc-4 
77 drive truck-2 city-loc-4 city-loc-2 
78 drop truck-2 city-loc-2 package-12 capacity-1 capacity-2 
79 drive truck-0 city-loc-8 city-loc-4 
80 drive truck-0 city-loc-4 city-loc-2 
81 drive truck-0 city-loc-2 city-loc-0 
82 drive truck-0 city-loc-0 city-loc-7 
83 pick-up truck-0 city-loc-7 package-13 capacity-1 capacity-2 
84 drive truck-0 city-loc-7 city-loc-0 
85 drive truck-0 city-loc-0 city-loc-5 
86 drop truck-0 city-loc-5 package-13 capacity-1 capacity-2 
root 99
87 get-to truck-3 city-loc-2  -> m-drive-to-via 153 43
88 get-to truck-0 city-loc-7  -> m-drive-to-via 158 82
89 get-to truck-2 city-loc-4  -> m-drive-to 74
90 get-to truck-2 city-loc-0  -> m-drive-to 69
91 get-to truck-2 city-loc-4  -> m-drive-to-via 98 61
92 get-to truck-2 city-loc-4  -> m-drive-to-via 132 71
93 get-to truck-3 city-loc-8  -> m-drive-to-via 129 50
94 unload truck-0 city-loc-5 package-13  -> m-unload 86
95 deliver package-11 city-loc-7  -> m-deliver 134 180 167 152
96 unload truck-3 city-loc-5 package-1  -> m-unload 12
97 noop truck-1 city-loc-3  -> __UNIQUE-replacement_49 54
98 get-to truck-2 city-loc-2  -> m-drive-to 60
99 __choicelessATCompilation__top_1  -> <<<<<<<<<<<<<<<<<<<<<__top_1;deliver[package-4,city-loc-3];m-deliver;4;0,1,2,3,-1,-2,-3,-4,5,6,7,8,9,10,11,12,13>;deliver[package-6,city-loc-3];m-deliver;9;0,1,2,3,4,5,6,7,8,-1,-2,-3,-4,10,11,12,13,14,15,16>;deliver[package-5,city-loc-3];m-deliver;8;0,1,2,3,4,5,6,7,-1,-2,-3,-4,9,10,11,12,13,14,15,16,17,18,19>;deliver[package-9,city-loc-3];m-deliver;18;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,-1,-2,-3,-4,19,20,21,22>;deliver[package-2,city-loc-3];m-deliver;2;0,1,-1,-2,-3,-4,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25>;deliver[package-10,city-loc-3];m-deliver;25;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,-1,-2,-3,-4,26,27,28>;deliver[package-3,city-loc-3];m-deliver;6;0,1,2,3,4,5,-1,-2,-3,-4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31>;get-to[truck-1,city-loc-3];m-i-am-there;10;0,1,2,3,4,5,6,7,8,9,-1,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;12;0,1,2,3,4,5,6,7,8,9,10,11,-1,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;18;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,-1,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;20;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,-1,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;14;0,1,2,3,4,5,6,7,8,9,10,11,12,13,-1,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;16;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,-1,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;24;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,-1,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;26;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;2;0,1,-1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;4;0,1,2,3,-1,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;28;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,-1,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;30;0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,-1,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;6;0,1,2,3,4,5,-1,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34>;get-to[truck-1,city-loc-3];m-i-am-there;8;0,1,2,3,4,5,6,7,-1,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34> 156 124 101 138 120 163 148 112 143 113 141 149 162 127 116 147 105 137 161 165 170 110 168 151 123 157 97 126 178 107 114 173 95 177 131
100 get-to truck-2 city-loc-2  -> m-drive-to-via 164 2
101 noop truck-1 city-loc-3  -> __UNIQUE-replacement_50 13
102 get-to truck-2 city-loc-4  -> m-drive-to 64
103 get-to truck-2 city-loc-8  -> m-drive-to-via 171 34
104 get-to truck-2 city-loc-2  -> m-drive-to-via 102 65
105 noop truck-1 city-loc-3  -> __UNIQUE-replacement_47 27
106 get-to truck-3 city-loc-2  -> m-drive-to 8
107 load truck-1 city-loc-3 package-10  -> m-load 57
108 get-to truck-2 city-loc-6  -> m-drive-to-via 92 72
109 unload truck-3 city-loc-8 package-8  -> m-unload 51
110 unload truck-1 city-loc-3 package-6  -> m-unload 32
111 get-to truck-3 city-loc-4  -> m-drive-to 47
112 load truck-1 city-loc-3 package-3  -> m-load 18
113 unload truck-1 city-loc-3 package-3  -> m-unload 20
114 noop truck-1 city-loc-3  -> __UNIQUE-replacement_53 58
115 get-to truck-3 city-loc-0  -> m-drive-to 10
116 noop truck-1 city-loc-3  -> __UNIQUE-replacement_46 25
117 load truck-3 city-loc-2 package-1  -> m-load 9
118 get-to truck-2 city-loc-8  -> m-drive-to-via 89 75
119 get-to truck-2 city-loc-7  -> m-drive-to 0
120 noop truck-1 city-loc-3  -> __UNIQUE-replacement_51 15
121 get-to truck-2 city-loc-4  -> m-drive-to-via 103 35
122 unload truck-2 city-loc-1 package-0  -> m-unload 7
123 noop truck-1 city-loc-3  -> __UNIQUE-replacement_48 52
124 deliver package-1 city-loc-5  -> m-deliver 106 117 133 96
125 get-to truck-2 city-loc-4  -> m-drive-to-via 175 5
126 unload truck-1 city-loc-3 package-9  -> m-unload 55
127 unload truck-1 city-loc-3 package-4  -> m-unload 24
128 unload truck-2 city-loc-2 package-12  -> m-unload 78
129 get-to truck-3 city-loc-4  -> m-drive-to-via 176 49
130 get-to truck-2 city-loc-2  -> m-drive-to-via 166 39
131 deliver package-13 city-loc-5  -> m-deliver 88 169 136 94
132 get-to truck-2 city-loc-2  -> m-drive-to-via 90 70
133 get-to truck-3 city-loc-5  -> m-drive-to-via 115 11
134 get-to truck-2 city-loc-6  -> m-drive-to-via 91 62
135 load truck-2 city-loc-2 package-0  -> m-load 3
136 get-to truck-0 city-loc-5  -> m-drive-to-via 154 85
137 unload truck-1 city-loc-3 package-5  -> m-unload 28
138 load truck-1 city-loc-3 package-2  -> m-load 14
139 get-to truck-2 city-loc-2  -> m-drive-to-via 144 77
140 get-to truck-0 city-loc-2  -> m-drive-to-via 150 80
141 noop truck-1 city-loc-3  -> __UNIQUE-replacement_42 21
142 get-to truck-3 city-loc-6  -> m-drive-to-via 155 45
143 noop truck-1 city-loc-3  -> __UNIQUE-replacement_55 19
144 get-to truck-2 city-loc-4  -> m-drive-to-via 118 76
145 load truck-3 city-loc-6 package-8  -> m-load 46
146 unload truck-2 city-loc-0 package-7  -> m-unload 41
147 load truck-1 city-loc-3 package-5  -> m-load 26
148 noop truck-1 city-loc-3  -> __UNIQUE-replacement_54 17
149 load truck-1 city-loc-3 package-4  -> m-load 22
150 get-to truck-0 city-loc-4  -> m-drive-to 79
151 deliver package-8 city-loc-8  -> m-deliver 142 145 93 109
152 unload truck-2 city-loc-7 package-11  -> m-unload 68
153 get-to truck-3 city-loc-0  -> m-drive-to 42
154 get-to truck-0 city-loc-0  -> m-drive-to 84
155 get-to truck-3 city-loc-4  -> m-drive-to-via 87 44
156 deliver package-0 city-loc-1  -> m-deliver 100 135 160 122
157 load truck-1 city-loc-3 package-9  -> m-load 53
158 get-to truck-0 city-loc-0  -> m-drive-to-via 140 81
159 get-to truck-2 city-loc-0  -> m-drive-to-via 104 66
160 get-to truck-2 city-loc-1  -> m-drive-to-via 125 6
161 noop truck-1 city-loc-3  -> __UNIQUE-replacement_44 29
162 noop truck-1 city-loc-3  -> __UNIQUE-replacement_43 23
163 unload truck-1 city-loc-3 package-2  -> m-unload 16
164 get-to truck-2 city-loc-0  -> m-drive-to-via 119 1
165 load truck-1 city-loc-3 package-6  -> m-load 30
166 get-to truck-2 city-loc-4  -> m-drive-to 38
167 get-to truck-2 city-loc-7  -> m-drive-to-via 159 67
168 deliver package-7 city-loc-0  -> m-deliver 179 174 181 146
169 load truck-0 city-loc-7 package-13  -> m-load 83
170 noop truck-1 city-loc-3  -> __UNIQUE-replacement_45 31
171 get-to truck-2 city-loc-4  -> m-drive-to 33
172 load truck-2 city-loc-6 package-12  -> m-load 73
173 unload truck-1 city-loc-3 package-10  -> m-unload 59
174 load truck-2 city-loc-8 package-7  -> m-load 37
175 get-to truck-2 city-loc-2  -> m-i-am-there 4
176 get-to truck-3 city-loc-8  -> m-drive-to-via 111 48
177 deliver package-12 city-loc-2  -> m-deliver 108 172 139 128
178 noop truck-1 city-loc-3  -> __UNIQUE-replacement_52 56
179 get-to truck-2 city-loc-8  -> m-drive-to-via 121 36
180 load truck-2 city-loc-6 package-11  -> m-load 63
181 get-to truck-2 city-loc-0  -> m-drive-to-via 130 40

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 8.158 MEMPEAK_KBS 530169.856
