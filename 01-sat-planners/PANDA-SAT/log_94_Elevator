PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/Elevator/domain.hddl instances/Elevator/p14.hddl"


Planner Configuration
=====================
Domain: instances/Elevator/domain.hddl
Problem: instances/Elevator/p14.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p14.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Grounded planning graph ... done in 404ms.
	Number of Grounded Actions 1709
	Number of Grounded Literals 490
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 86
	number of tasks = 1552
	number of decomposition methods = 924
	number of predicates = 490
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 924
	number of epsilon methods = 0
	number of primitive tasks = 1466
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 86
	number of tasks = 1552
	number of decomposition methods = 924
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 924
	number of epsilon methods = 0
	number of primitive tasks = 1466
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 160ms.
	Number of Grounded Actions 1050
	Number of Grounded Literals 76
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 84
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 65ms.
	Number of Grounded Actions 1050
	Number of Grounded Literals 76
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 62
	number of tasks = 1112
	number of decomposition methods = 660
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 660
	number of epsilon methods = 0
	number of primitive tasks = 1050
	number of constants = 0
Tasks 1050 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771864ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854771792
done
initial PDT has 21 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 15 leafs
SHOP LEAFS 13
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 8550
Size 8545 at 0/1050
Size 8338 at 500/1050
Size 6314 at 1000/1050
Size 6314
Size 6276 at 0/1050
Size 5398 at 500/1050
Size 3022 at 1000/1050
Size 3022
Size 2856 at 0/1050
Size 628 at 500/1050
Size 430 at 1000/1050
Size 430
Size 430 at 0/1050
Size 330 at 500/1050
Size 302 at 1000/1050
Size 302
Size 302 at 0/1050
Size 302 at 500/1050
Size 302 at 1000/1050
Size 302
Invariant time: 0.276
Number of invariants: 302
Invariant Clauses 4832
NUMBER OF CLAUSES 27357
NUMBER OF STATE CLAUSES 9023
NUMBER OF DECOMPOSITION CLAUSES 18334
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 32.980000000000004% 67.02% 0.0% 
NUMBER OF PATHS 15
Starting cryptominisat5.5
Setting starttime of solver to 1604479464723
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 35 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 27 leafs
SHOP LEAFS 21
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 101 will abort at 9223372036854770608
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 8456
NUMBER OF CLAUSES 60479
NUMBER OF STATE CLAUSES 16885
NUMBER OF DECOMPOSITION CLAUSES 43594
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 27.92% 72.08% 0.0% 
NUMBER OF PATHS 27
Starting cryptominisat5.5
Setting starttime of solver to 1604479465316
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 53 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 43 leafs
SHOP LEAFS 31
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770033
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 13288
NUMBER OF CLAUSES 89485
NUMBER OF STATE CLAUSES 26297
NUMBER OF DECOMPOSITION CLAUSES 63188
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.39% 70.61% 0.0% 
NUMBER OF PATHS 43
Starting cryptominisat5.5
Setting starttime of solver to 1604479465965
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 75 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 63 leafs
SHOP LEAFS 43
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854769371
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 19328
NUMBER OF CLAUSES 123366
NUMBER OF STATE CLAUSES 37808
NUMBER OF DECOMPOSITION CLAUSES 85558
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 30.650000000000002% 69.35000000000001% 0.0% 
NUMBER OF PATHS 63
Starting cryptominisat5.5
Setting starttime of solver to 1604479466719
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 101 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 87 leafs
SHOP LEAFS 57
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768728
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 26576
NUMBER OF CLAUSES 162122
NUMBER OF STATE CLAUSES 51418
NUMBER OF DECOMPOSITION CLAUSES 110704
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.720000000000002% 68.28% 0.0% 
NUMBER OF PATHS 87
Starting cryptominisat5.5
Setting starttime of solver to 1604479467404
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 131 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 115 leafs
SHOP LEAFS 73
Assignment implications
Still waiting ... running for 101 will abort at 9223372036854767969
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 35032
NUMBER OF CLAUSES 205753
NUMBER OF STATE CLAUSES 67127
NUMBER OF DECOMPOSITION CLAUSES 138626
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 32.63% 67.37% 0.0% 
NUMBER OF PATHS 115
Starting cryptominisat5.5
Setting starttime of solver to 1604479468202
Command exited with non-zero status 20
0.07 0.00

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... done
initial PDT has 165 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854767060
done
PDT has 147 leafs
SHOP LEAFS 91
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 44696
NUMBER OF CLAUSES 254259
NUMBER OF STATE CLAUSES 84935
NUMBER OF DECOMPOSITION CLAUSES 169324
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 33.4% 66.6% 0.0% 
NUMBER OF PATHS 147
Starting cryptominisat5.5
Setting starttime of solver to 1604479469335
Command exited with non-zero status 20
0.13 0.00

Time command gave the following runtime for the solver: 130
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... done
initial PDT has 203 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854766011
done
PDT has 183 leafs
SHOP LEAFS 111
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 55568
NUMBER OF CLAUSES 307640
NUMBER OF STATE CLAUSES 104842
NUMBER OF DECOMPOSITION CLAUSES 202798
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 34.08% 65.92% 0.0% 
NUMBER OF PATHS 183
Starting cryptominisat5.5
Setting starttime of solver to 1604479470326
Command exited with non-zero status 20
0.28 0.02

Time command gave the following runtime for the solver: 300
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 12
Generating initial PDT ... done
initial PDT has 245 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 223 leafs
SHOP LEAFS 133
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854764840
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 67648
NUMBER OF CLAUSES 365896
NUMBER OF STATE CLAUSES 126848
NUMBER OF DECOMPOSITION CLAUSES 239048
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 34.67% 65.33% 0.0% 
NUMBER OF PATHS 223
Starting cryptominisat5.5
Setting starttime of solver to 1604479471547
Command exited with non-zero status 20
27.87 0.04

Time command gave the following runtime for the solver: 27910
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 13
Generating initial PDT ... done
initial PDT has 291 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 267 leafs
SHOP LEAFS 157
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854736005
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 80936
NUMBER OF CLAUSES 429027
NUMBER OF STATE CLAUSES 150953
NUMBER OF DECOMPOSITION CLAUSES 278074
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 35.18% 64.82000000000001% 0.0% 
NUMBER OF PATHS 267
Starting cryptominisat5.5
Setting starttime of solver to 1604479500586
Command exited with non-zero status 20
43.68 0.06

Time command gave the following runtime for the solver: 43740
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 14
Generating initial PDT ... done
initial PDT has 341 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 105 will abort at 9223372036854691126
done
PDT has 315 leafs
SHOP LEAFS 183
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 95432
NUMBER OF CLAUSES 497033
NUMBER OF STATE CLAUSES 177157
NUMBER OF DECOMPOSITION CLAUSES 319876
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 35.64% 64.36% 0.0% 
NUMBER OF PATHS 315
Starting cryptominisat5.5
Setting starttime of solver to 1604479545478
Command exited with non-zero status 10
8.64 0.03

Time command gave the following runtime for the solver: 8670
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_0,467 467 <m0_do_problem;do_check_floor[f0];m1_do_check_floor;1;0,-1,-2,2,3>
0 157 pathaction!1_0,685
Consider method^8_0;3;3;3;3;3;3;3,527 527 m6_do_take_all
0;3;3;3;3;3;3;3 293 pathaction!8_0;3;3;3;3;3;3;3,53
Consider method^6_0;4;1;3;3;2,626 626 m3_do_check_floor
0;4;1;3;3;2 258 pathaction!6_0;4;1;3;3;2,716
Consider method^6_0;3;3;3;3;3,51 51 m6_do_take_all
0;3;3;3;3;3 65 pathaction!6_0;3;3;3;3;3,45
Consider method^8_0;4;1;3;3;2;2;2,554 554 m1_do_check_floor
0;4;1;3;3;2;2;2 9 pathaction!8_0;4;1;3;3;2;2;2,716
Consider method^5_0;3;3;2;2,559 559 m1_do_check_floor
0;3;3;2;2 216 pathaction!5_0;3;3;2;2,711
Consider method^10_0;4;1;3;3;3;3;2;2;2,393 393 m1_do_check_floor
0;4;1;3;3;3;3;2;2;2 56 pathaction!10_0;4;1;3;3;3;3;2;2;2,722
Consider method^5_0;4;1;3;2,105 105 m2_do_check_floor
0;4;1;3;2 185 pathaction!5_0;4;1;3;2,709
Consider method^9_0;3;3;3;3;3;3;2;2,601 601 m1_do_check_floor
0;3;3;3;3;3;3;2;2 226 pathaction!9_0;3;3;3;3;3;3;2;2,725
Consider method^10_0;4;1;3;3;3;3;3;3;3,244 244 m9_do_throw_all
0;4;1;3;3;3;3;3;3;3 182 pathaction!10_0;4;1;3;3;3;3;3;3;3,24
Consider method^13_0;3;3;3;3;3;3;3;3;3;3;3;3,220 220 m4_do_take_all
0;3;3;3;3;3;3;3;3;3;3;3;3 147 pathaction!13_0;3;3;3;3;3;3;3;3;3;3;3;3,49
Consider method^12_0;3;3;3;3;3;3;3;3;3;2;2,377 377 m3_do_check_floor
0;3;3;3;3;3;3;3;3;3;2;2 98 pathaction!12_0;3;3;3;3;3;3;3;3;3;2;2,712
Consider method^10_0;3;3;3;3;3;3;3;2;2,306 306 m2_do_check_floor
0;3;3;3;3;3;3;3;2;2 153 pathaction!10_0;3;3;3;3;3;3;3;2;2,723
Consider method^9_0;3;3;3;3;3;3;3;3,215 215 m6_do_take_all
0;3;3;3;3;3;3;3;3 167 pathaction!9_0;3;3;3;3;3;3;3;3,50
Consider method^8_0;3;3;3;3;3;3;2,655 655 m3_do_check_floor
0;3;3;3;3;3;3;2 180 pathaction!8_0;3;3;3;3;3;3;2,725
Consider method^5_0;4;1;3;3,438 438 m10_do_throw_all
0;4;1;3;3 274 pathaction!5_0;4;1;3;3,16
Consider method^7_0;3;3;3;3;2;2,213 213 m1_do_check_floor
0;3;3;3;3;2;2 106 pathaction!7_0;3;3;3;3;2;2,718
Consider method^13_0;3;3;3;3;3;3;3;3;3;2;2;2,196 196 m1_do_check_floor
0;3;3;3;3;3;3;3;3;3;2;2;2 27 pathaction!13_0;3;3;3;3;3;3;3;3;3;2;2;2,712
Consider method^6_0;3;3;3;3;2,380 380 m3_do_check_floor
0;3;3;3;3;2 48 pathaction!6_0;3;3;3;3;2,718
Consider method^3_0;3;3,235 235 m6_do_take_all
0;3;3 275 pathaction!3_0;3;3,41
Consider method^12_0;4;1;3;3;3;3;3;3;3;2;2,190 190 m1_do_check_floor
0;4;1;3;3;3;3;3;3;3;2;2 184 pathaction!12_0;4;1;3;3;3;3;3;3;3;2;2,715
Consider method^6_0;3;3;3;2;2,72 72 m1_do_check_floor
0;3;3;3;2;2 86 pathaction!6_0;3;3;3;2;2,720
Consider method^8_0;3;3;3;3;3;2;2,290 290 m1_do_check_floor
0;3;3;3;3;3;2;2 287 pathaction!8_0;3;3;3;3;3;2;2,721
Consider method^4_0;4;1;2,130 130 m2_do_check_floor
0;4;1;2 166 pathaction!4_0;4;1;2,713
Consider method^6_0;4;1;3;2;2,44 44 m1_do_check_floor
0;4;1;3;2;2 37 pathaction!6_0;4;1;3;2;2,709
Consider method^5_0;3;2;2;2,550 550 m1_do_check_floor
0;3;2;2;2 292 pathaction!5_0;3;2;2;2,714
Consider method^4_0;4;1;3,76 76 m9_do_throw_all
0;4;1;3 136 pathaction!4_0;4;1;3,20
Consider method^12_0;4;1;3;3;3;3;3;3;3;3;3,192 192 m8_do_throw_all
0;4;1;3;3;3;3;3;3;3;3;3 161 pathaction!12_0;4;1;3;3;3;3;3;3;3;3;3,26
Consider method^12_0;3;3;3;3;3;3;3;3;3;3;2,341 341 m3_do_check_floor
0;3;3;3;3;3;3;3;3;3;3;2 168 pathaction!12_0;3;3;3;3;3;3;3;3;3;3;2,708
Consider method^11_0;4;1;3;3;3;3;3;3;2;2,9 9 m2_do_check_floor
0;4;1;3;3;3;3;3;3;2;2 194 pathaction!11_0;4;1;3;3;3;3;3;3;2;2,717
Consider method^3_0;4;1,408 408 m10_do_throw_all
0;4;1 39 pathaction!3_0;4;1,29
Consider method^4_0;3;2;2,267 267 m3_do_check_floor
0;3;2;2 22 pathaction!4_0;3;2;2,714
Consider method^4_0;3;3;3,309 309 m5_do_take_all
0;3;3;3 113 pathaction!4_0;3;3;3,38
Consider method^12_0;4;1;3;3;3;3;3;3;3;3;2,612 612 m2_do_check_floor
0;4;1;3;3;3;3;3;3;3;3;2 4 pathaction!12_0;4;1;3;3;3;3;3;3;3;3;2,719
Consider method^10_0;4;1;3;3;3;3;3;2;2,563 563 m1_do_check_floor
0;4;1;3;3;3;3;3;2;2 36 pathaction!10_0;4;1;3;3;3;3;3;2;2,724
Consider method^6_0;4;1;3;3;3,75 75 m9_do_throw_all
0;4;1;3;3;3 290 pathaction!6_0;4;1;3;3;3,23
Consider method^12_0;3;3;3;3;3;3;3;3;3;3;3,479 479 m6_do_take_all
0;3;3;3;3;3;3;3;3;3;3;3 241 pathaction!12_0;3;3;3;3;3;3;3;3;3;3;3,35
Consider method^8_0;4;1;3;3;3;3;3,318 318 m9_do_throw_all
0;4;1;3;3;3;3;3 237 pathaction!8_0;4;1;3;3;3;3;3,29
Consider method^8_0;4;1;3;3;3;3;2,656 656 m2_do_check_floor
0;4;1;3;3;3;3;2 190 pathaction!8_0;4;1;3;3;3;3;2,722
Consider method^12_0;3;3;3;3;3;3;3;3;2;2;2,156 156 m1_do_check_floor
0;3;3;3;3;3;3;3;3;2;2;2 201 pathaction!12_0;3;3;3;3;3;3;3;3;2;2;2,710
Consider method^2_0;4,483 483 m7_do_start_throw_all
0;4 15 pathaction!2_0;4,686
Consider method^7_0;4;1;3;3;2;2,566 566 m2_do_check_floor
0;4;1;3;3;2;2 100 pathaction!7_0;4;1;3;3;2;2,716
Consider method^5_0;3;3;3;2,555 555 m3_do_check_floor
0;3;3;3;2 102 pathaction!5_0;3;3;3;2,720
Consider method^12_0;3;3;3;3;3;3;3;2;2;2;2,111 111 m1_do_check_floor
0;3;3;3;3;3;3;3;2;2;2;2 70 pathaction!12_0;3;3;3;3;3;3;3;2;2;2;2,723
Consider method^11_0;3;3;3;3;3;3;3;2;2;2,139 139 m2_do_check_floor
0;3;3;3;3;3;3;3;2;2;2 203 pathaction!11_0;3;3;3;3;3;3;3;2;2;2,723
Consider method^8_0;4;1;3;3;3;2;2,257 257 m1_do_check_floor
0;4;1;3;3;3;2;2 265 pathaction!8_0;4;1;3;3;3;2;2,707
Consider method^7_0;3;3;3;3;3;2,289 289 m3_do_check_floor
0;3;3;3;3;3;2 248 pathaction!7_0;3;3;3;3;3;2,721
Consider method^9_0;4;1;3;3;3;3;3;3,141 141 m10_do_throw_all
0;4;1;3;3;3;3;3;3 143 pathaction!9_0;4;1;3;3;3;3;3;3,31
Consider method^11_0;4;1;3;3;3;3;3;3;3;3,281 281 m10_do_throw_all
0;4;1;3;3;3;3;3;3;3;3 33 pathaction!11_0;4;1;3;3;3;3;3;3;3;3,22
Consider method^12_0;4;1;3;3;3;3;3;3;2;2;2,212 212 m2_do_check_floor
0;4;1;3;3;3;3;3;3;2;2;2 82 pathaction!12_0;4;1;3;3;3;3;3;3;2;2;2,717
Consider method^7_0;3;3;3;3;3;3,59 59 m5_do_take_all
0;3;3;3;3;3;3 270 pathaction!7_0;3;3;3;3;3;3,48
Consider method^10_0;4;1;3;3;3;3;3;3;2,472 472 m2_do_check_floor
0;4;1;3;3;3;3;3;3;2 192 pathaction!10_0;4;1;3;3;3;3;3;3;2,717
Consider method^10_0;3;3;3;3;3;3;3;3;3,360 360 m5_do_take_all
0;3;3;3;3;3;3;3;3;3 40 pathaction!10_0;3;3;3;3;3;3;3;3;3,37
Consider method^11_0;3;3;3;3;3;3;3;3;3;3,103 103 m6_do_take_all
0;3;3;3;3;3;3;3;3;3;3 32 pathaction!11_0;3;3;3;3;3;3;3;3;3;3,39
Consider method^13_0;3;3;3;3;3;3;3;3;3;3;2;2,337 337 m1_do_check_floor
0;3;3;3;3;3;3;3;3;3;3;2;2 175 pathaction!13_0;3;3;3;3;3;3;3;3;3;3;2;2,708
Consider method^10_0;3;3;3;3;3;3;3;3;2,454 454 m2_do_check_floor
0;3;3;3;3;3;3;3;3;2 189 pathaction!10_0;3;3;3;3;3;3;3;3;2,710
Consider method^11_0;4;1;3;3;3;3;3;3;3;2,350 350 m2_do_check_floor
0;4;1;3;3;3;3;3;3;3;2 250 pathaction!11_0;4;1;3;3;3;3;3;3;3;2,715
Consider method^4_0;3;3;2,160 160 m3_do_check_floor
0;3;3;2 85 pathaction!4_0;3;3;2,711
Consider method^13_0;4;1;3;3;3;3;3;3;3;3;2;2,602 602 m1_do_check_floor
0;4;1;3;3;3;3;3;3;3;3;2;2 24 pathaction!13_0;4;1;3;3;3;3;3;3;3;3;2;2,719
Consider method^9_0;3;3;3;3;3;3;3;2,207 207 m3_do_check_floor
0;3;3;3;3;3;3;3;2 107 pathaction!9_0;3;3;3;3;3;3;3;2,723
Consider method^7_0;4;1;3;3;3;3,442 442 m10_do_throw_all
0;4;1;3;3;3;3 57 pathaction!7_0;4;1;3;3;3;3,14
Consider method^9_0;4;1;3;3;3;3;2;2,0 0 m3_do_check_floor
0;4;1;3;3;3;3;2;2 103 pathaction!9_0;4;1;3;3;3;3;2;2,722
Consider method^11_0;3;3;3;3;3;3;3;3;2;2,150 150 m3_do_check_floor
0;3;3;3;3;3;3;3;3;2;2 83 pathaction!11_0;3;3;3;3;3;3;3;3;2;2,710
Consider method^3_0;3;2,18 18 m3_do_check_floor
0;3;2 80 pathaction!3_0;3;2,714
Consider method^5_0;4;1;2;2,500 500 m1_do_check_floor
0;4;1;2;2 206 pathaction!5_0;4;1;2;2,713
Consider method^13_0;3;3;3;3;3;3;3;3;3;3;3;2,393 393 m1_do_check_floor
0;3;3;3;3;3;3;3;3;3;3;3;2 178 pathaction!13_0;3;3;3;3;3;3;3;3;3;3;3;2,722
Consider method^9_0;4;1;3;3;3;3;3;2,194 194 m2_do_check_floor
0;4;1;3;3;3;3;3;2 228 pathaction!9_0;4;1;3;3;3;3;3;2,724
Consider method^7_0;4;1;3;3;3;2,369 369 m2_do_check_floor
0;4;1;3;3;3;2 114 pathaction!7_0;4;1;3;3;3;2,707
Consider method^5_0;3;3;3;3,264 264 m6_do_take_all
0;3;3;3;3 99 pathaction!5_0;3;3;3;3,47
Consider method^0_,659 659 __top_1
 50 pathaction!0_,1111
Consider method^11_0;3;3;3;3;3;3;3;3;3;2,420 420 m3_do_check_floor
0;3;3;3;3;3;3;3;3;3;2 30 pathaction!11_0;3;3;3;3;3;3;3;3;3;2,712
Consider method^13_0;4;1;3;3;3;3;3;3;2;2;2;2,633 633 m1_do_check_floor
0;4;1;3;3;3;3;3;3;2;2;2;2 21 pathaction!13_0;4;1;3;3;3;3;3;3;2;2;2;2,717
Consider method^2_0;3,648 648 m5_do_take_all
0;3 25 pathaction!2_0;3,52


CHECKING primitive solution of length 144 ...
true 219 __method_precondition_m0_do_problem_0_precondition[f0;]
true 150 __method_precondition_m1_do_check_floor_1_precondition[f0;]
true 108 nop[;]
true 141 __method_precondition_m5_do_take_all_5_precondition[f0,f22,p7;]
true 123 up[f0,f22;]
true 269 __method_precondition_m3_do_check_floor_3_precondition[f22,p9;]
true 191 board[f22,p9;]
true 284 __method_precondition_m3_do_check_floor_3_precondition[f22,p7;]
true 120 board[f22,p7;]
true 217 __method_precondition_m1_do_check_floor_1_precondition[f22;]
true 247 nop[;]
true 7 __method_precondition_m6_do_take_all_6_precondition[f22,f12,p8;]
true 64 down[f22,f12;]
true 66 __method_precondition_m3_do_check_floor_3_precondition[f12,p8;]
true 101 board[f12,p8;]
true 144 __method_precondition_m1_do_check_floor_1_precondition[f12;]
true 177 nop[;]
true 232 __method_precondition_m5_do_take_all_5_precondition[f12,f20,p5;]
true 235 up[f12,f20;]
true 152 __method_precondition_m3_do_check_floor_3_precondition[f20,p5;]
true 118 board[f20,p5;]
true 187 __method_precondition_m1_do_check_floor_1_precondition[f20;]
true 133 nop[;]
true 264 __method_precondition_m6_do_take_all_6_precondition[f20,f13,p3;]
true 8 down[f20,f13;]
true 89 __method_precondition_m3_do_check_floor_3_precondition[f13,p3;]
true 90 board[f13,p3;]
true 200 __method_precondition_m1_do_check_floor_1_precondition[f13;]
true 209 nop[;]
true 249 __method_precondition_m6_do_take_all_6_precondition[f13,f3,p13;]
true 126 down[f13,f3;]
true 279 __method_precondition_m3_do_check_floor_3_precondition[f3,p13;]
true 121 board[f3,p13;]
true 124 __method_precondition_m1_do_check_floor_1_precondition[f3;]
true 151 nop[;]
true 195 __method_precondition_m5_do_take_all_5_precondition[f3,f14,p12;]
true 198 up[f3,f14;]
true 3 __method_precondition_m3_do_check_floor_3_precondition[f14,p12;]
true 246 board[f14,p12;]
true 160 __method_precondition_m1_do_check_floor_1_precondition[f14;]
true 81 nop[;]
true 31 __method_precondition_m6_do_take_all_6_precondition[f14,f9,p4;]
true 128 down[f14,f9;]
true 208 __method_precondition_m3_do_check_floor_3_precondition[f9,p4;]
true 234 board[f9,p4;]
true 74 __method_precondition_m2_do_check_floor_2_precondition[f9,p12;]
true 224 depart[f9,p12;]
true 212 __method_precondition_m2_do_check_floor_2_precondition[f9,p13;]
true 63 depart[f9,p13;]
true 47 __method_precondition_m1_do_check_floor_1_precondition[f9;]
true 149 nop[;]
true 272 __method_precondition_m6_do_take_all_6_precondition[f9,f2,p10;]
true 255 down[f9,f2;]
true 227 __method_precondition_m2_do_check_floor_2_precondition[f2,p3;]
true 134 depart[f2,p3;]
true 68 __method_precondition_m3_do_check_floor_3_precondition[f2,p10;]
true 54 board[f2,p10;]
true 297 __method_precondition_m1_do_check_floor_1_precondition[f2;]
true 215 nop[;]
true 280 __method_precondition_m5_do_take_all_5_precondition[f2,f16,p2;]
true 131 up[f2,f16;]
true 138 __method_precondition_m3_do_check_floor_3_precondition[f16,p11;]
true 154 board[f16,p11;]
true 96 __method_precondition_m3_do_check_floor_3_precondition[f16,p2;]
true 125 board[f16,p2;]
true 115 __method_precondition_m1_do_check_floor_1_precondition[f16;]
true 71 nop[;]
true 233 __method_precondition_m6_do_take_all_6_precondition[f16,f8,p0;]
true 170 down[f16,f8;]
true 173 __method_precondition_m3_do_check_floor_3_precondition[f8,p0;]
true 210 board[f8,p0;]
true 72 __method_precondition_m1_do_check_floor_1_precondition[f8;]
true 286 nop[;]
true 51 __method_precondition_m6_do_take_all_6_precondition[f8,f7,p1;]
true 174 down[f8,f7;]
true 45 __method_precondition_m1_do_check_floor_1_precondition[f7;]
true 257 nop[;]
true 239 __method_precondition_m4_do_take_all_4_precondition[f7;]
true 288 nop[;]
true 294 __method_precondition_m7_do_start_throw_all_7_precondition[f7;]
true 205 __method_precondition_m10_do_throw_all_10_precondition[f7,f4,p5;]
true 1 down[f7,f4;]
true 254 __method_precondition_m2_do_check_floor_2_precondition[f4,p5;]
true 13 depart[f4,p5;]
true 240 __method_precondition_m1_do_check_floor_1_precondition[f4;]
true 202 nop[;]
true 73 __method_precondition_m9_do_throw_all_9_precondition[f4,f23,p11;]
true 183 up[f4,f23;]
true 218 __method_precondition_m2_do_check_floor_2_precondition[f23,p11;]
true 188 depart[f23,p11;]
true 242 __method_precondition_m1_do_check_floor_1_precondition[f23;]
true 179 nop[;]
true 12 __method_precondition_m10_do_throw_all_10_precondition[f23,f1,p0;]
true 165 down[f23,f1;]
true 266 __method_precondition_m3_do_check_floor_3_precondition[f1,p6;]
true 214 board[f1,p6;]
true 116 __method_precondition_m2_do_check_floor_2_precondition[f1,p0;]
true 253 depart[f1,p0;]
true 42 __method_precondition_m1_do_check_floor_1_precondition[f1;]
true 299 nop[;]
true 273 __method_precondition_m9_do_throw_all_9_precondition[f1,f26,p8;]
true 112 up[f1,f26;]
true 69 __method_precondition_m2_do_check_floor_2_precondition[f26,p8;]
true 251 depart[f26,p8;]
true 5 __method_precondition_m1_do_check_floor_1_precondition[f26;]
true 285 nop[;]
true 52 __method_precondition_m10_do_throw_all_10_precondition[f26,f7,p2;]
true 95 down[f26,f7;]
true 28 __method_precondition_m2_do_check_floor_2_precondition[f7,p2;]
true 146 depart[f7,p2;]
true 263 __method_precondition_m3_do_check_floor_3_precondition[f7,p1;]
true 148 board[f7,p1;]
true 244 __method_precondition_m1_do_check_floor_1_precondition[f7;]
true 97 nop[;]
true 225 __method_precondition_m9_do_throw_all_9_precondition[f7,f21,p7;]
true 262 up[f7,f21;]
true 19 __method_precondition_m2_do_check_floor_2_precondition[f21,p7;]
true 283 depart[f21,p7;]
true 76 __method_precondition_m1_do_check_floor_1_precondition[f21;]
true 35 nop[;]
true 17 __method_precondition_m10_do_throw_all_10_precondition[f21,f19,p4;]
true 271 down[f21,f19;]
true 229 __method_precondition_m2_do_check_floor_2_precondition[f19,p9;]
true 92 depart[f19,p9;]
true 43 __method_precondition_m2_do_check_floor_2_precondition[f19,p6;]
true 49 depart[f19,p6;]
true 145 __method_precondition_m2_do_check_floor_2_precondition[f19,p4;]
true 122 depart[f19,p4;]
true 104 __method_precondition_m1_do_check_floor_1_precondition[f19;]
true 171 nop[;]
true 213 __method_precondition_m9_do_throw_all_9_precondition[f19,f24,p1;]
true 223 up[f19,f24;]
true 298 __method_precondition_m2_do_check_floor_2_precondition[f24,p1;]
true 301 depart[f24,p1;]
true 159 __method_precondition_m1_do_check_floor_1_precondition[f24;]
true 197 nop[;]
true 300 __method_precondition_m10_do_throw_all_10_precondition[f24,f17,p10;]
true 94 down[f24,f17;]
true 2 __method_precondition_m2_do_check_floor_2_precondition[f17,p10;]
true 181 depart[f17,p10;]
true 164 __method_precondition_m1_do_check_floor_1_precondition[f17;]
true 267 nop[;]
true 61 __method_precondition_m8_do_throw_all_8_precondition[f17;]
true 75 nop[;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 433576288
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 76
number of actions                    = 1112
number of abstract actions           = 62
number of primitive actions          = 1050
number of methods                    = 660
number of primitive shop actions     = 660
number of primitive non-shop actions = 390
size of largest method               = 5
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 123166
number of clauses               = 497033
average size of clauses         = 2.9192427866962554
number of assert                = 44
number of horn                  = 456322
K offset                        = 0
K chosen value                  = 14
state formula                   = 177157
method children clauses         = 0
number of paths                 = 315
maximum plan length             = 315
number of decomposition clauses = 319876
number of ordering clauses      = 0
number of state clauses         = 177157
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 95393
============ parsing ============
total                         = 1078
file parser                   = 590
sort expansion                = 187
closed world assumption       = 150
inherit preconditions         = 0
shop methods                  = 13
eliminate identical variables = 57
strip domain of hybridity     = 15
flatten formula               = 66
============ preprocessing ============
total                                      = 2656
compile negative preconditions             = 47
compile unit methods                       = 0
split parameter                            = 39
expand choiceless abstract tasks           = 59
compile methods with identical tasks       = 6
removing unnecessary predicates            = 494
lifted reachabiltiy analysis               = 58
grounded planning graph analysis           = 827
grounded task decomposition graph analysis = 806
grounding                                  = 298
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 329
============ sat ============
total                                        = 88976
generate formula                             = 6517
generate path decomposition tree             = 751
normalise path decomposition tree            = 298
sog optimisation                             = 151
translate path decomposition tree to clauses = 2551
generate state formula                       = 6310
generate state invariant formula             = 406
transform to DIMACS                          = 1015
SAT solver                                   = 80930
SAT solver for K=0004                        = 0
SAT solver for K=0005                        = 10
SAT solver for K=0006                        = 20
SAT solver for K=0007                        = 30
SAT solver for K=0008                        = 50
SAT solver for K=0009                        = 70
SAT solver for K=0010                        = 130
SAT solver for K=0011                        = 300
SAT solver for K=0012                        = 27910
SAT solver for K=0013                        = 43740
SAT solver for K=0014                        = 8670

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="1050";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="62";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="433576288";"40 sat:20:state formula"="177157";"40 sat:01:number of variables"="123166";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="315";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="660";"30 problem:07:number of primitive shop actions"="660";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="1112";"30 problem:08:number of primitive non-shop actions"="390";"30 problem:02:number of predicates"="76";"40 sat:03:number of horn"="456322";"40 sat:15:K chosen value"="14";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="5";"40 sat:03:average size of clauses"="2.9192427866962554";"40 sat:02:number of clauses"="497033";"40 sat:50:number of state clauses"="177157";"40 sat:03:number of assert"="44";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="315";"40 sat:50:number of decomposition clauses"="319876";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="590";"01 parsing:08:flatten formula"="66";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="88976";"40 sat:16:generate state formula"="6310";"40 sat:20:transform to DIMACS"="1015";"40 sat:11:generate path decomposition tree"="751";"02 preprocessing:07:compile methods with identical tasks"="6";"01 parsing:07:strip domain of hybridity"="15";"40 sat:41:SAT solver for K=0008"="50";"02 preprocessing:08:removing unnecessary predicates"="494";"01 parsing:03:closed world assumption"="150";"02 preprocessing:11:lifted reachabiltiy analysis"="58";"01 parsing:02:sort expansion"="187";"40 sat:12:normalise path decomposition tree"="298";"40 sat:41:SAT solver for K=0012"="27910";"40 sat:40:SAT solver"="80930";"01 parsing:00:total"="1078";"40 sat:10:generate formula"="6517";"40 sat:41:SAT solver for K=0005"="10";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0009"="70";"02 preprocessing:01:compile negative preconditions"="47";"40 sat:41:SAT solver for K=0013"="43740";"00 total:00:total"="95393";"40 sat:41:SAT solver for K=0011"="300";"40 sat:13:sog optimisation"="151";"02 preprocessing:12:grounded planning graph analysis"="827";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="806";"40 sat:41:SAT solver for K=0006"="20";"02 preprocessing:04:split parameter"="39";"01 parsing:05:shop methods"="13";"10 search preparation:02:compute state invariants"="329";"01 parsing:06:eliminate identical variables"="57";"40 sat:15:translate path decomposition tree to clauses"="2551";"02 preprocessing:05:expand choiceless abstract tasks"="59";"40 sat:41:SAT solver for K=0014"="8670";"40 sat:17:generate state invariant formula"="406";"40 sat:41:SAT solver for K=0010"="130";"02 preprocessing:00:total"="2656";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="298";"40 sat:41:SAT solver for K=0007"="30"
#!verify __method_precondition_m0_do_problem_0_precondition[f0];__method_precondition_m1_do_check_floor_1_precondition[f0];nop[];__method_precondition_m5_do_take_all_5_precondition[f0,f22,p7];up[f0,f22];__method_precondition_m3_do_check_floor_3_precondition[f22,p9];board[f22,p9];__method_precondition_m3_do_check_floor_3_precondition[f22,p7];board[f22,p7];__method_precondition_m1_do_check_floor_1_precondition[f22];nop[];__method_precondition_m6_do_take_all_6_precondition[f22,f12,p8];down[f22,f12];__method_precondition_m3_do_check_floor_3_precondition[f12,p8];board[f12,p8];__method_precondition_m1_do_check_floor_1_precondition[f12];nop[];__method_precondition_m5_do_take_all_5_precondition[f12,f20,p5];up[f12,f20];__method_precondition_m3_do_check_floor_3_precondition[f20,p5];board[f20,p5];__method_precondition_m1_do_check_floor_1_precondition[f20];nop[];__method_precondition_m6_do_take_all_6_precondition[f20,f13,p3];down[f20,f13];__method_precondition_m3_do_check_floor_3_precondition[f13,p3];board[f13,p3];__method_precondition_m1_do_check_floor_1_precondition[f13];nop[];__method_precondition_m6_do_take_all_6_precondition[f13,f3,p13];down[f13,f3];__method_precondition_m3_do_check_floor_3_precondition[f3,p13];board[f3,p13];__method_precondition_m1_do_check_floor_1_precondition[f3];nop[];__method_precondition_m5_do_take_all_5_precondition[f3,f14,p12];up[f3,f14];__method_precondition_m3_do_check_floor_3_precondition[f14,p12];board[f14,p12];__method_precondition_m1_do_check_floor_1_precondition[f14];nop[];__method_precondition_m6_do_take_all_6_precondition[f14,f9,p4];down[f14,f9];__method_precondition_m3_do_check_floor_3_precondition[f9,p4];board[f9,p4];__method_precondition_m2_do_check_floor_2_precondition[f9,p12];depart[f9,p12];__method_precondition_m2_do_check_floor_2_precondition[f9,p13];depart[f9,p13];__method_precondition_m1_do_check_floor_1_precondition[f9];nop[];__method_precondition_m6_do_take_all_6_precondition[f9,f2,p10];down[f9,f2];__method_precondition_m2_do_check_floor_2_precondition[f2,p3];depart[f2,p3];__method_precondition_m3_do_check_floor_3_precondition[f2,p10];board[f2,p10];__method_precondition_m1_do_check_floor_1_precondition[f2];nop[];__method_precondition_m5_do_take_all_5_precondition[f2,f16,p2];up[f2,f16];__method_precondition_m3_do_check_floor_3_precondition[f16,p11];board[f16,p11];__method_precondition_m3_do_check_floor_3_precondition[f16,p2];board[f16,p2];__method_precondition_m1_do_check_floor_1_precondition[f16];nop[];__method_precondition_m6_do_take_all_6_precondition[f16,f8,p0];down[f16,f8];__method_precondition_m3_do_check_floor_3_precondition[f8,p0];board[f8,p0];__method_precondition_m1_do_check_floor_1_precondition[f8];nop[];__method_precondition_m6_do_take_all_6_precondition[f8,f7,p1];down[f8,f7];__method_precondition_m1_do_check_floor_1_precondition[f7];nop[];__method_precondition_m4_do_take_all_4_precondition[f7];nop[];__method_precondition_m7_do_start_throw_all_7_precondition[f7];__method_precondition_m10_do_throw_all_10_precondition[f7,f4,p5];down[f7,f4];__method_precondition_m2_do_check_floor_2_precondition[f4,p5];depart[f4,p5];__method_precondition_m1_do_check_floor_1_precondition[f4];nop[];__method_precondition_m9_do_throw_all_9_precondition[f4,f23,p11];up[f4,f23];__method_precondition_m2_do_check_floor_2_precondition[f23,p11];depart[f23,p11];__method_precondition_m1_do_check_floor_1_precondition[f23];nop[];__method_precondition_m10_do_throw_all_10_precondition[f23,f1,p0];down[f23,f1];__method_precondition_m3_do_check_floor_3_precondition[f1,p6];board[f1,p6];__method_precondition_m2_do_check_floor_2_precondition[f1,p0];depart[f1,p0];__method_precondition_m1_do_check_floor_1_precondition[f1];nop[];__method_precondition_m9_do_throw_all_9_precondition[f1,f26,p8];up[f1,f26];__method_precondition_m2_do_check_floor_2_precondition[f26,p8];depart[f26,p8];__method_precondition_m1_do_check_floor_1_precondition[f26];nop[];__method_precondition_m10_do_throw_all_10_precondition[f26,f7,p2];down[f26,f7];__method_precondition_m2_do_check_floor_2_precondition[f7,p2];depart[f7,p2];__method_precondition_m3_do_check_floor_3_precondition[f7,p1];board[f7,p1];__method_precondition_m1_do_check_floor_1_precondition[f7];nop[];__method_precondition_m9_do_throw_all_9_precondition[f7,f21,p7];up[f7,f21];__method_precondition_m2_do_check_floor_2_precondition[f21,p7];depart[f21,p7];__method_precondition_m1_do_check_floor_1_precondition[f21];nop[];__method_precondition_m10_do_throw_all_10_precondition[f21,f19,p4];down[f21,f19];__method_precondition_m2_do_check_floor_2_precondition[f19,p9];depart[f19,p9];__method_precondition_m2_do_check_floor_2_precondition[f19,p6];depart[f19,p6];__method_precondition_m2_do_check_floor_2_precondition[f19,p4];depart[f19,p4];__method_precondition_m1_do_check_floor_1_precondition[f19];nop[];__method_precondition_m9_do_throw_all_9_precondition[f19,f24,p1];up[f19,f24];__method_precondition_m2_do_check_floor_2_precondition[f24,p1];depart[f24,p1];__method_precondition_m1_do_check_floor_1_precondition[f24];nop[];__method_precondition_m10_do_throw_all_10_precondition[f24,f17,p10];down[f24,f17];__method_precondition_m2_do_check_floor_2_precondition[f17,p10];depart[f17,p10];__method_precondition_m1_do_check_floor_1_precondition[f17];nop[];__method_precondition_m8_do_throw_all_8_precondition[f17];nop[]
==>
0 __method_precondition_m0_do_problem_0_precondition f0 
1 __method_precondition_m1_do_check_floor_1_precondition f0 
2 nop  
3 __method_precondition_m5_do_take_all_5_precondition f0 f22 p7 
4 up f0 f22 
5 __method_precondition_m3_do_check_floor_3_precondition f22 p9 
6 board f22 p9 
7 __method_precondition_m3_do_check_floor_3_precondition f22 p7 
8 board f22 p7 
9 __method_precondition_m1_do_check_floor_1_precondition f22 
10 nop  
11 __method_precondition_m6_do_take_all_6_precondition f22 f12 p8 
12 down f22 f12 
13 __method_precondition_m3_do_check_floor_3_precondition f12 p8 
14 board f12 p8 
15 __method_precondition_m1_do_check_floor_1_precondition f12 
16 nop  
17 __method_precondition_m5_do_take_all_5_precondition f12 f20 p5 
18 up f12 f20 
19 __method_precondition_m3_do_check_floor_3_precondition f20 p5 
20 board f20 p5 
21 __method_precondition_m1_do_check_floor_1_precondition f20 
22 nop  
23 __method_precondition_m6_do_take_all_6_precondition f20 f13 p3 
24 down f20 f13 
25 __method_precondition_m3_do_check_floor_3_precondition f13 p3 
26 board f13 p3 
27 __method_precondition_m1_do_check_floor_1_precondition f13 
28 nop  
29 __method_precondition_m6_do_take_all_6_precondition f13 f3 p13 
30 down f13 f3 
31 __method_precondition_m3_do_check_floor_3_precondition f3 p13 
32 board f3 p13 
33 __method_precondition_m1_do_check_floor_1_precondition f3 
34 nop  
35 __method_precondition_m5_do_take_all_5_precondition f3 f14 p12 
36 up f3 f14 
37 __method_precondition_m3_do_check_floor_3_precondition f14 p12 
38 board f14 p12 
39 __method_precondition_m1_do_check_floor_1_precondition f14 
40 nop  
41 __method_precondition_m6_do_take_all_6_precondition f14 f9 p4 
42 down f14 f9 
43 __method_precondition_m3_do_check_floor_3_precondition f9 p4 
44 board f9 p4 
45 __method_precondition_m2_do_check_floor_2_precondition f9 p12 
46 depart f9 p12 
47 __method_precondition_m2_do_check_floor_2_precondition f9 p13 
48 depart f9 p13 
49 __method_precondition_m1_do_check_floor_1_precondition f9 
50 nop  
51 __method_precondition_m6_do_take_all_6_precondition f9 f2 p10 
52 down f9 f2 
53 __method_precondition_m2_do_check_floor_2_precondition f2 p3 
54 depart f2 p3 
55 __method_precondition_m3_do_check_floor_3_precondition f2 p10 
56 board f2 p10 
57 __method_precondition_m1_do_check_floor_1_precondition f2 
58 nop  
59 __method_precondition_m5_do_take_all_5_precondition f2 f16 p2 
60 up f2 f16 
61 __method_precondition_m3_do_check_floor_3_precondition f16 p11 
62 board f16 p11 
63 __method_precondition_m3_do_check_floor_3_precondition f16 p2 
64 board f16 p2 
65 __method_precondition_m1_do_check_floor_1_precondition f16 
66 nop  
67 __method_precondition_m6_do_take_all_6_precondition f16 f8 p0 
68 down f16 f8 
69 __method_precondition_m3_do_check_floor_3_precondition f8 p0 
70 board f8 p0 
71 __method_precondition_m1_do_check_floor_1_precondition f8 
72 nop  
73 __method_precondition_m6_do_take_all_6_precondition f8 f7 p1 
74 down f8 f7 
75 __method_precondition_m1_do_check_floor_1_precondition f7 
76 nop  
77 __method_precondition_m4_do_take_all_4_precondition f7 
78 nop  
79 __method_precondition_m7_do_start_throw_all_7_precondition f7 
80 __method_precondition_m10_do_throw_all_10_precondition f7 f4 p5 
81 down f7 f4 
82 __method_precondition_m2_do_check_floor_2_precondition f4 p5 
83 depart f4 p5 
84 __method_precondition_m1_do_check_floor_1_precondition f4 
85 nop  
86 __method_precondition_m9_do_throw_all_9_precondition f4 f23 p11 
87 up f4 f23 
88 __method_precondition_m2_do_check_floor_2_precondition f23 p11 
89 depart f23 p11 
90 __method_precondition_m1_do_check_floor_1_precondition f23 
91 nop  
92 __method_precondition_m10_do_throw_all_10_precondition f23 f1 p0 
93 down f23 f1 
94 __method_precondition_m3_do_check_floor_3_precondition f1 p6 
95 board f1 p6 
96 __method_precondition_m2_do_check_floor_2_precondition f1 p0 
97 depart f1 p0 
98 __method_precondition_m1_do_check_floor_1_precondition f1 
99 nop  
100 __method_precondition_m9_do_throw_all_9_precondition f1 f26 p8 
101 up f1 f26 
102 __method_precondition_m2_do_check_floor_2_precondition f26 p8 
103 depart f26 p8 
104 __method_precondition_m1_do_check_floor_1_precondition f26 
105 nop  
106 __method_precondition_m10_do_throw_all_10_precondition f26 f7 p2 
107 down f26 f7 
108 __method_precondition_m2_do_check_floor_2_precondition f7 p2 
109 depart f7 p2 
110 __method_precondition_m3_do_check_floor_3_precondition f7 p1 
111 board f7 p1 
112 __method_precondition_m1_do_check_floor_1_precondition f7 
113 nop  
114 __method_precondition_m9_do_throw_all_9_precondition f7 f21 p7 
115 up f7 f21 
116 __method_precondition_m2_do_check_floor_2_precondition f21 p7 
117 depart f21 p7 
118 __method_precondition_m1_do_check_floor_1_precondition f21 
119 nop  
120 __method_precondition_m10_do_throw_all_10_precondition f21 f19 p4 
121 down f21 f19 
122 __method_precondition_m2_do_check_floor_2_precondition f19 p9 
123 depart f19 p9 
124 __method_precondition_m2_do_check_floor_2_precondition f19 p6 
125 depart f19 p6 
126 __method_precondition_m2_do_check_floor_2_precondition f19 p4 
127 depart f19 p4 
128 __method_precondition_m1_do_check_floor_1_precondition f19 
129 nop  
130 __method_precondition_m9_do_throw_all_9_precondition f19 f24 p1 
131 up f19 f24 
132 __method_precondition_m2_do_check_floor_2_precondition f24 p1 
133 depart f24 p1 
134 __method_precondition_m1_do_check_floor_1_precondition f24 
135 nop  
136 __method_precondition_m10_do_throw_all_10_precondition f24 f17 p10 
137 down f24 f17 
138 __method_precondition_m2_do_check_floor_2_precondition f17 p10 
139 depart f17 p10 
140 __method_precondition_m1_do_check_floor_1_precondition f17 
141 nop  
142 __method_precondition_m8_do_throw_all_8_precondition f17 
143 nop  
root 157
144 do_check_floor f22  -> m3_do_check_floor 7 8 207
145 do_throw_all f19  -> m9_do_throw_all 130 131 174 186
146 do_throw_all f21  -> m10_do_throw_all 120 121 181 145
147 do_check_floor f1  -> m3_do_check_floor 94 95 172
148 do_check_floor f19  -> m1_do_check_floor 128 129
149 do_throw_all f4  -> m9_do_throw_all 86 87 194 192
150 do_check_floor f9  -> m2_do_check_floor 47 48 183
151 do_check_floor f19  -> m2_do_check_floor 124 125 166
152 do_check_floor f9  -> m3_do_check_floor 43 44 185
153 do_check_floor f17  -> m2_do_check_floor 138 139 177
154 do_take_all f0  -> m5_do_take_all 3 4 196 171
155 do_take_all f13  -> m6_do_take_all 29 30 206 156
156 do_take_all f3  -> m5_do_take_all 35 36 199 178
157 __choicelessATCompilation__top_1  -> __top_1 195
158 do_throw_all f26  -> m10_do_throw_all 106 107 165 180
159 do_take_all f16  -> m6_do_take_all 67 68 184 204
160 do_check_floor f21  -> m2_do_check_floor 116 117 202
161 do_check_floor f8  -> m1_do_check_floor 71 72
162 do_take_all f9  -> m6_do_take_all 51 52 175 179
163 do_take_all f7  -> m4_do_take_all 77 78
164 do_check_floor f13  -> m3_do_check_floor 25 26 176
165 do_check_floor f7  -> m2_do_check_floor 108 109 168
166 do_check_floor f19  -> m2_do_check_floor 126 127 148
167 do_check_floor f20  -> m3_do_check_floor 19 20 214
168 do_check_floor f7  -> m3_do_check_floor 110 111 197
169 do_take_all f12  -> m5_do_take_all 17 18 167 201
170 do_check_floor f12  -> m3_do_check_floor 13 14 187
171 do_take_all f22  -> m6_do_take_all 11 12 170 169
172 do_check_floor f1  -> m2_do_check_floor 96 97 200
173 do_throw_all f7  -> m10_do_throw_all 80 81 208 149
174 do_check_floor f24  -> m2_do_check_floor 132 133 213
175 do_check_floor f2  -> m2_do_check_floor 53 54 193
176 do_check_floor f13  -> m1_do_check_floor 27 28
177 do_check_floor f17  -> m1_do_check_floor 140 141
178 do_take_all f14  -> m6_do_take_all 41 42 152 162
179 do_take_all f2  -> m5_do_take_all 59 60 210 159
180 do_throw_all f7  -> m9_do_throw_all 114 115 160 146
181 do_check_floor f19  -> m2_do_check_floor 122 123 151
182 do_check_floor f4  -> m1_do_check_floor 84 85
183 do_check_floor f9  -> m1_do_check_floor 49 50
184 do_check_floor f8  -> m3_do_check_floor 69 70 161
185 do_check_floor f9  -> m2_do_check_floor 45 46 150
186 do_throw_all f24  -> m10_do_throw_all 136 137 153 205
187 do_check_floor f12  -> m1_do_check_floor 15 16
188 do_check_floor f26  -> m2_do_check_floor 102 103 211
189 do_check_floor f14  -> m1_do_check_floor 39 40
190 do_check_floor f7  -> m1_do_check_floor 75 76
191 do_check_floor f3  -> m1_do_check_floor 33 34
192 do_throw_all f23  -> m10_do_throw_all 92 93 147 215
193 do_check_floor f2  -> m3_do_check_floor 55 56 216
194 do_check_floor f23  -> m2_do_check_floor 88 89 198
195 do_problem   -> <m0_do_problem;do_check_floor[f0];m1_do_check_floor;1;0,-1,-2,2,3> 0 1 2 154 209
196 do_check_floor f22  -> m3_do_check_floor 5 6 144
197 do_check_floor f7  -> m1_do_check_floor 112 113
198 do_check_floor f23  -> m1_do_check_floor 90 91
199 do_check_floor f14  -> m3_do_check_floor 37 38 189
200 do_check_floor f1  -> m1_do_check_floor 98 99
201 do_take_all f20  -> m6_do_take_all 23 24 164 155
202 do_check_floor f21  -> m1_do_check_floor 118 119
203 do_check_floor f16  -> m1_do_check_floor 65 66
204 do_take_all f8  -> m6_do_take_all 73 74 190 163
205 do_throw_all f17  -> m8_do_throw_all 142 143
206 do_check_floor f3  -> m3_do_check_floor 31 32 191
207 do_check_floor f22  -> m1_do_check_floor 9 10
208 do_check_floor f4  -> m2_do_check_floor 82 83 182
209 do_start_throw_all   -> m7_do_start_throw_all 79 173
210 do_check_floor f16  -> m3_do_check_floor 61 62 212
211 do_check_floor f26  -> m1_do_check_floor 104 105
212 do_check_floor f16  -> m3_do_check_floor 63 64 203
213 do_check_floor f24  -> m1_do_check_floor 134 135
214 do_check_floor f20  -> m1_do_check_floor 21 22
215 do_throw_all f1  -> m9_do_throw_all 100 101 188 158
216 do_check_floor f2  -> m1_do_check_floor 57 58

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 96.536 MEMPEAK_KBS 633563.136
