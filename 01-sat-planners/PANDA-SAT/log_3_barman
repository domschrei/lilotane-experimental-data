PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p03.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p03.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p03.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 43
Grounded planning graph ... done in 592ms.
	Number of Grounded Actions 3017
	Number of Grounded Literals 444
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 43
Two Way TDG ... done.
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 43
Grounding ... done.
	number of abstract tasks = 1424
	number of tasks = 4355
	number of decomposition methods = 5610
	number of predicates = 444
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1424
	number of tasks = 4355
	number of decomposition methods = 5610
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 457ms.
	Number of Grounded Actions 2931
	Number of Grounded Literals 414
	number of abstract tasks = 1424
	number of tasks = 4355
	number of decomposition methods = 5610
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1424
	number of tasks = 4355
	number of decomposition methods = 5610
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 991
	number of tasks = 3922
	number of decomposition methods = 5177
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 991
	number of tasks = 3922
	number of decomposition methods = 5177
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 991
	number of tasks = 3922
	number of decomposition methods = 5177
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 255ms.
	Number of Grounded Actions 2931
	Number of Grounded Literals 414
	number of abstract tasks = 991
	number of tasks = 3922
	number of decomposition methods = 5177
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 991
	number of tasks = 3922
	number of decomposition methods = 4877
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 991
	number of tasks = 3922
	number of decomposition methods = 4877
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 991
	number of tasks = 3922
	number of decomposition methods = 4877
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 991
	number of tasks = 3922
	number of decomposition methods = 4877
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 991
	number of tasks = 3922
	number of decomposition methods = 4877
	number of predicates = 414
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1174
	number of epsilon methods = 0
	number of primitive tasks = 2931
	number of constants = 0
Tasks 2931 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854766726ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854766244
done
initial PDT has 315 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 315 leafs
SHOP LEAFS 105
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 256473
Size 256429 at 0/2931
Size 254969 at 500/2931
Size 212505 at 1000/2931
Size 35413 at 1500/2931
Size 34525 at 2000/2931
Size 29143 at 2500/2931
Size 29143
Size 25435 at 0/2931
Size 21910 at 500/2931
Size 20409 at 1000/2931
Size 13265 at 1500/2931
Size 4621 at 2000/2931
Size 4608 at 2500/2931
Size 4608
Size 4608 at 0/2931
Size 4608 at 500/2931
Size 4561 at 1000/2931
Size 4518 at 1500/2931
Size 4453 at 2000/2931
Size 4453 at 2500/2931
Size 4423
Size 4403 at 0/2931
Size 4363 at 500/2931
Size 4358 at 1000/2931
Size 4208 at 1500/2931
Size 4107 at 2000/2931
Size 4107 at 2500/2931
Size 4097
Size 4097 at 0/2931
Size 4097 at 500/2931
Size 4097 at 1000/2931
Size 4097 at 1500/2931
Size 4097 at 2000/2931
Size 4097 at 2500/2931
Size 4097
Invariant time: 2.633
Number of invariants: 4097
Invariant Clauses 1294652
NUMBER OF CLAUSES 1989242
NUMBER OF STATE CLAUSES 1664546
NUMBER OF DECOMPOSITION CLAUSES 324696
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.68% 16.32% 0.0% 
NUMBER OF PATHS 315
Starting cryptominisat5.5
Setting starttime of solver to 1604475160104
Command exited with non-zero status 10
1.11 0.04

Time command gave the following runtime for the solver: 1150
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_7;2,4489 4489 m3_get_second_ingredient
7;2 168 pathaction!2_7;2,327
Consider method^1_1,4294 4294 m0_do_cocktail_in_shot1
1 247 pathaction!1_1,3316
Consider method^3_14;3;1,414 414 <_m4_serve_shot_2;do_clean_shot[shot15,cocktail7,left];m5_do_clean_shot;0;-1,-2>
14;3;1 68 pathaction!3_14;3;1,3282
Consider method^2_2;2,4332 4332 m3_get_second_ingredient
2;2 65 pathaction!2_2;2,331
Consider method^3_0;3;1,2121 2121 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 95 pathaction!3_0;3;1,3299
Consider method^3_10;2;2,698 698 _m3_get_second_ingredient_3
10;2;2 444 pathaction!3_10;2;2,1404
Consider method^3_8;2;1,1330 1330 _m3_get_second_ingredient_2
8;2;1 208 pathaction!3_8;2;1,1126
Consider method^3_1;2;1,4599 4599 _m3_get_second_ingredient_2
1;2;1 81 pathaction!3_1;2;1,1122
Consider method^3_12;1;3,271 271 _m2_get_first_ingredient_4
12;1;3 116 pathaction!3_12;1;3,1260
Consider method^2_11;2,1846 1846 m3_get_second_ingredient
11;2 417 pathaction!2_11;2,337
Consider method^3_12;2;1,863 863 _m3_get_second_ingredient_2
12;2;1 78 pathaction!3_12;2;1,1019
Consider method^3_1;1;1,2535 2535 m7_do_fill_shot
1;1;1 101 pathaction!3_1;1;1,814
Consider method^3_6;3;1,2268 2268 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2>
6;3;1 109 pathaction!3_6;3;1,3300
Consider method^3_14;2;1,2829 2829 _m3_get_second_ingredient_2
14;2;1 424 pathaction!3_14;2;1,1037
Consider method^2_11;3,847 847 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
11;3 303 pathaction!2_11;3,1559
Consider method^3_9;1;3,837 837 _m2_get_first_ingredient_4
9;1;3 443 pathaction!3_9;1;3,1210
Consider method^3_7;1;2,258 258 _m2_get_first_ingredient_3
7;1;2 10 pathaction!3_7;1;2,2047
Consider method^3_5;1;3,3094 3094 _m2_get_first_ingredient_4
5;1;3 102 pathaction!3_5;1;3,1194
Consider method^3_3;3;1,632 632 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2>
3;3;1 328 pathaction!3_3;3;1,3298
Consider method^2_8;1,3341 3341 m2_get_first_ingredient
8;1 216 pathaction!2_8;1,3231
Consider method^3_8;3;1,4500 4500 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2>
8;3;1 352 pathaction!3_8;3;1,3295
Consider method^2_6;3,925 925 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
6;3 335 pathaction!2_6;3,1557
Consider method^2_11;1,482 482 m2_get_first_ingredient
11;1 428 pathaction!2_11;1,3242
Consider method^3_14;2;2,2644 2644 _m3_get_second_ingredient_3
14;2;2 264 pathaction!3_14;2;2,1462
Consider method^2_12;3,4531 4531 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot13,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
12;3 324 pathaction!2_12;3,1568
Consider method^3_13;1;2,3715 3715 _m2_get_first_ingredient_3
13;1;2 407 pathaction!3_13;1;2,2119
Consider method^2_14;2,4033 4033 m3_get_second_ingredient
14;2 57 pathaction!2_14;2,324
Consider method^3_3;2;2,2644 2644 _m3_get_second_ingredient_3
3;2;2 35 pathaction!3_3;2;2,1462
Consider method^1_5,2749 2749 m0_do_cocktail_in_shot1
5 76 pathaction!1_5,3317
Consider method^3_8;1;2,3658 3658 _m2_get_first_ingredient_3
8;1;2 318 pathaction!3_8;1;2,2063
Consider method^1_7,1953 1953 m0_do_cocktail_in_shot1
7 49 pathaction!1_7,3320
Consider method^3_9;2;1,635 635 _m3_get_second_ingredient_2
9;2;1 200 pathaction!3_9;2;1,1100
Consider method^3_12;2;2,2957 2957 _m3_get_second_ingredient_3
12;2;2 305 pathaction!3_12;2;2,1393
Consider method^3_9;1;1,651 651 m9_do_fill_shot
9;1;1 438 pathaction!3_9;1;1,764
Consider method^3_8;1;1,912 912 m7_do_fill_shot
8;1;1 71 pathaction!3_8;1;1,764
Consider method^3_10;1;2,3658 3658 _m2_get_first_ingredient_3
10;1;2 25 pathaction!3_10;1;2,2063
Consider method^3_2;1;1,479 479 m9_do_fill_shot
2;1;1 330 pathaction!3_2;1;1,748
Consider method^1_13,276 276 m0_do_cocktail_in_shot1
13 80 pathaction!1_13,3315
Consider method^3_13;2;1,1175 1175 _m3_get_second_ingredient_2
13;2;1 268 pathaction!3_13;2;1,1034
Consider method^2_10;3,1566 1566 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
10;3 458 pathaction!2_10;3,1563
Consider method^3_8;1;3,837 837 _m2_get_first_ingredient_4
8;1;3 250 pathaction!3_8;1;3,1210
Consider method^3_3;1;2,2857 2857 _m2_get_first_ingredient_3
3;1;2 387 pathaction!3_3;1;2,2096
Consider method^3_6;2;1,1330 1330 _m3_get_second_ingredient_2
6;2;1 73 pathaction!3_6;2;1,1126
Consider method^2_5;2,511 511 m3_get_second_ingredient
5;2 146 pathaction!2_5;2,335
Consider method^3_2;2;2,3983 3983 _m3_get_second_ingredient_3
2;2;2 454 pathaction!3_2;2;2,1353
Consider method^2_1;1,3462 3462 m2_get_first_ingredient
1;1 122 pathaction!2_1;1,3227
Consider method^2_8;2,3784 3784 m3_get_second_ingredient
8;2 40 pathaction!2_8;2,326
Consider method^3_1;1;3,271 271 _m2_get_first_ingredient_4
1;1;3 322 pathaction!3_1;1;3,1260
Consider method^3_9;3;1,1196 1196 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2>
9;3;1 51 pathaction!3_9;3;1,3286
Consider method^1_10,4841 4841 m0_do_cocktail_in_shot1
10 278 pathaction!1_10,3318
Consider method^3_8;2;2,698 698 _m3_get_second_ingredient_3
8;2;2 142 pathaction!3_8;2;2,1404
Consider method^1_0,4438 4438 m0_do_cocktail_in_shot1
0 223 pathaction!1_0,3313
Consider method^1_6,2880 2880 m0_do_cocktail_in_shot1
6 349 pathaction!1_6,3312
Consider method^2_2;3,4533 4533 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
2;3 273 pathaction!2_2;3,1569
Consider method^3_4;1;1,1776 1776 m7_do_fill_shot
4;1;1 189 pathaction!3_4;1;1,767
Consider method^3_0;1;2,3715 3715 _m2_get_first_ingredient_3
0;1;2 395 pathaction!3_0;1;2,2119
Consider method^3_1;1;2,1239 1239 _m2_get_first_ingredient_3
1;1;2 294 pathaction!3_1;1;2,2074
Consider method^1_14,329 329 m0_do_cocktail_in_shot1
14 15 pathaction!1_14,3322
Consider method^3_13;3;1,3748 3748 <_m4_serve_shot_2;do_clean_shot[shot14,cocktail8,right];m5_do_clean_shot;0;-1,-2>
13;3;1 193 pathaction!3_13;3;1,3297
Consider method^2_9;1,1509 1509 m2_get_first_ingredient
9;1 341 pathaction!2_9;1,3237
Consider method^3_7;2;1,1175 1175 _m3_get_second_ingredient_2
7;2;1 329 pathaction!3_7;2;1,1034
Consider method^2_0;1,4140 4140 m2_get_first_ingredient
0;1 243 pathaction!2_0;1,3230
Consider method^3_14;1;2,2857 2857 _m2_get_first_ingredient_3
14;1;2 338 pathaction!3_14;1;2,2096
Consider method^3_7;2;2,3030 3030 _m3_get_second_ingredient_3
7;2;2 313 pathaction!3_7;2;2,1418
Consider method^3_6;2;2,698 698 _m3_get_second_ingredient_3
6;2;2 1 pathaction!3_6;2;2,1404
Consider method^3_7;1;1,3712 3712 m7_do_fill_shot
7;1;1 312 pathaction!3_7;1;1,880
Consider method^1_9,2513 2513 m0_do_cocktail_in_shot1
9 88 pathaction!1_9,3319
Consider method^0_,4876 4876 __top_1
 219 pathaction!0_,3921
Consider method^3_2;1;2,1133 1133 _m2_get_first_ingredient_3
2;1;2 217 pathaction!3_2;1;2,2033
Consider method^2_7;1,4041 4041 m2_get_first_ingredient
7;1 143 pathaction!2_7;1,3232
Consider method^2_5;3,3768 3768 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
5;3 156 pathaction!2_5;3,1562
Consider method^2_9;3,2606 2606 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
9;3 246 pathaction!2_9;3,1564
Consider method^3_4;2;1,635 635 _m3_get_second_ingredient_2
4;2;1 123 pathaction!3_4;2;1,1100
Consider method^3_6;1;3,729 729 _m2_get_first_ingredient_4
6;1;3 167 pathaction!3_6;1;3,1317
Consider method^3_3;2;1,2829 2829 _m3_get_second_ingredient_2
3;2;1 300 pathaction!3_3;2;1,1037
Consider method^1_2,4482 4482 m0_do_cocktail_in_shot1
2 415 pathaction!1_2,3324
Consider method^2_6;2,1071 1071 m3_get_second_ingredient
6;2 416 pathaction!2_6;2,341
Consider method^3_4;2;2,1608 1608 _m3_get_second_ingredient_3
4;2;2 331 pathaction!3_4;2;2,1446
Consider method^3_14;1;3,382 382 _m2_get_first_ingredient_4
14;1;3 52 pathaction!3_14;1;3,1294
Consider method^3_14;1;1,4833 4833 m9_do_fill_shot
14;1;1 265 pathaction!3_14;1;1,848
Consider method^2_12;1,291 291 m2_get_first_ingredient
12;1 173 pathaction!2_12;1,3233
Consider method^3_5;1;2,1133 1133 _m2_get_first_ingredient_3
5;1;2 291 pathaction!3_5;1;2,2033
Consider method^3_0;1;1,3557 3557 m8_do_fill_shot
0;1;1 391 pathaction!3_0;1;1,767
Consider method^2_8;3,2752 2752 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
8;3 389 pathaction!2_8;3,1566
Consider method^2_10;2,1584 1584 m3_get_second_ingredient
10;2 127 pathaction!2_10;2,338
Consider method^3_1;2;2,3983 3983 _m3_get_second_ingredient_3
1;2;2 174 pathaction!3_1;2;2,1353
Consider method^3_12;1;2,1239 1239 _m2_get_first_ingredient_3
12;1;2 378 pathaction!3_12;1;2,2074
Consider method^3_3;1;1,2440 2440 m7_do_fill_shot
3;1;1 457 pathaction!3_3;1;1,848
Consider method^3_2;1;3,3094 3094 _m2_get_first_ingredient_4
2;1;3 285 pathaction!3_2;1;3,1194
Consider method^3_1;3;1,4454 4454 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 240 pathaction!3_1;3;1,3309
Consider method^2_0;2,306 306 m3_get_second_ingredient
0;2 214 pathaction!2_0;2,325
Consider method^3_4;1;3,2995 2995 _m2_get_first_ingredient_4
4;1;3 138 pathaction!3_4;1;3,1213
Consider method^2_1;2,4397 4397 m3_get_second_ingredient
1;2 426 pathaction!2_1;2,322
Consider method^3_11;2;2,3983 3983 _m3_get_second_ingredient_3
11;2;2 215 pathaction!3_11;2;2,1353
Consider method^2_3;3,1977 1977 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
3;3 155 pathaction!2_3;3,1556
Consider method^3_11;1;2,1239 1239 _m2_get_first_ingredient_3
11;1;2 255 pathaction!3_11;1;2,2074
Consider method^3_2;2;1,4599 4599 _m3_get_second_ingredient_2
2;2;1 202 pathaction!3_2;2;1,1122
Consider method^3_5;2;1,1502 1502 _m3_get_second_ingredient_2
5;2;1 90 pathaction!3_5;2;1,1073
Consider method^2_4;1,3868 3868 m2_get_first_ingredient
4;1 192 pathaction!2_4;1,3238
Consider method^2_13;2,306 306 m3_get_second_ingredient
13;2 379 pathaction!2_13;2,325
Consider method^1_12,2491 2491 m0_do_cocktail_in_shot1
12 459 pathaction!1_12,3323
Consider method^2_2;1,4115 4115 m2_get_first_ingredient
2;1 297 pathaction!2_2;1,3236
Consider method^3_10;2;1,1330 1330 _m3_get_second_ingredient_2
10;2;1 53 pathaction!3_10;2;1,1126
Consider method^3_7;3;1,3889 3889 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2>
7;3;1 104 pathaction!3_7;3;1,3289
Consider method^1_11,3938 3938 m0_do_cocktail_in_shot1
11 175 pathaction!1_11,3314
Consider method^3_13;1;3,2995 2995 _m2_get_first_ingredient_4
13;1;3 421 pathaction!3_13;1;3,1213
Consider method^3_10;1;1,1914 1914 m9_do_fill_shot
10;1;1 184 pathaction!3_10;1;1,764
Consider method^3_7;1;3,4612 4612 _m2_get_first_ingredient_4
7;1;3 425 pathaction!3_7;1;3,1326
Consider method^3_6;1;1,3388 3388 m9_do_fill_shot
6;1;1 92 pathaction!3_6;1;1,871
Consider method^3_10;3;1,901 901 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 320 pathaction!3_10;3;1,3305
Consider method^3_12;3;1,933 933 <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,right];m5_do_clean_shot;0;-1,-2>
12;3;1 451 pathaction!3_12;3;1,3283
Consider method^2_10;1,2297 2297 m2_get_first_ingredient
10;1 275 pathaction!2_10;1,3243
Consider method^3_11;1;3,271 271 _m2_get_first_ingredient_4
11;1;3 96 pathaction!3_11;1;3,1260
Consider method^3_12;1;1,2287 2287 m9_do_fill_shot
12;1;1 409 pathaction!3_12;1;1,814
Consider method^3_11;1;1,2005 2005 m9_do_fill_shot
11;1;1 276 pathaction!3_11;1;1,814
Consider method^2_12;2,4250 4250 m3_get_second_ingredient
12;2 357 pathaction!2_12;2,328
Consider method^3_2;3;1,2767 2767 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 85 pathaction!3_2;3;1,3310
Consider method^2_14;1,1708 1708 m2_get_first_ingredient
14;1 242 pathaction!2_14;1,3229
Consider method^2_13;3,2732 2732 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot14,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
13;3 400 pathaction!2_13;3,1560
Consider method^1_4,3706 3706 m0_do_cocktail_in_shot1
4 190 pathaction!1_4,3325
Consider method^3_9;1;2,3658 3658 _m2_get_first_ingredient_3
9;1;2 55 pathaction!3_9;1;2,2063
Consider method^3_0;2;1,1175 1175 _m3_get_second_ingredient_2
0;2;1 280 pathaction!3_0;2;1,1034
Consider method^2_13;1,4140 4140 m2_get_first_ingredient
13;1 244 pathaction!2_13;1,3230
Consider method^2_14;3,4849 4849 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot15,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
14;3 28 pathaction!2_14;3,1567
Consider method^3_4;1;2,3715 3715 _m2_get_first_ingredient_3
4;1;2 325 pathaction!3_4;1;2,2119
Consider method^2_7;3,1098 1098 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
7;3 410 pathaction!2_7;3,1565
Consider method^3_0;2;2,3030 3030 _m3_get_second_ingredient_3
0;2;2 89 pathaction!3_0;2;2,1418
Consider method^3_6;1;2,3578 3578 _m2_get_first_ingredient_3
6;1;2 62 pathaction!3_6;1;2,2041
Consider method^2_4;2,2831 2831 m3_get_second_ingredient
4;2 160 pathaction!2_4;2,333
Consider method^1_3,3448 3448 m0_do_cocktail_in_shot1
3 188 pathaction!1_3,3311
Consider method^3_11;2;1,4599 4599 _m3_get_second_ingredient_2
11;2;1 261 pathaction!3_11;2;1,1122
Consider method^2_5;1,1097 1097 m2_get_first_ingredient
5;1 366 pathaction!2_5;1,3240
Consider method^2_6;1,2820 2820 m2_get_first_ingredient
6;1 170 pathaction!2_6;1,3246
Consider method^3_10;1;3,837 837 _m2_get_first_ingredient_4
10;1;3 251 pathaction!3_10;1;3,1210
Consider method^3_11;3;1,1624 1624 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2>
11;3;1 393 pathaction!3_11;3;1,3301
Consider method^2_9;2,3413 3413 m3_get_second_ingredient
9;2 161 pathaction!2_9;2,332
Consider method^2_4;3,2483 2483 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
4;3 456 pathaction!2_4;3,1570
Consider method^3_0;1;3,2995 2995 _m2_get_first_ingredient_4
0;1;3 19 pathaction!3_0;1;3,1213
Consider method^3_5;2;2,4810 4810 _m3_get_second_ingredient_3
5;2;2 307 pathaction!3_5;2;2,1427
Consider method^3_5;1;1,479 479 m9_do_fill_shot
5;1;1 153 pathaction!3_5;1;1,748
Consider method^3_3;1;3,382 382 _m2_get_first_ingredient_4
3;1;3 151 pathaction!3_3;1;3,1294
Consider method^3_4;3;1,4380 4380 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2>
4;3;1 445 pathaction!3_4;3;1,3290
Consider method^3_13;2;2,3030 3030 _m3_get_second_ingredient_3
13;2;2 390 pathaction!3_13;2;2,1418
Consider method^3_9;2;2,1608 1608 _m3_get_second_ingredient_3
9;2;2 333 pathaction!3_9;2;2,1446
Consider method^2_3;1,1708 1708 m2_get_first_ingredient
3;1 323 pathaction!2_3;1,3229
Consider method^2_1;3,2853 2853 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
1;3 450 pathaction!2_1;3,1561
Consider method^3_5;3;1,727 727 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 252 pathaction!3_5;3;1,3307
Consider method^2_0;3,1246 1246 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
0;3 39 pathaction!2_0;3,1558
Consider method^2_3;2,4033 4033 m3_get_second_ingredient
3;2 67 pathaction!2_3;2,324
Consider method^3_13;1;1,4570 4570 m9_do_fill_shot
13;1;1 86 pathaction!3_13;1;1,767
Consider method^1_8,3367 3367 m0_do_cocktail_in_shot1
8 254 pathaction!1_8,3321


CHECKING primitive solution of length 309 ...
true 197 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 162 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot16;]
true 418 __method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser4,ingredient4;]
true 178 grasp[left,shot16;]
true 93 fill-shot[shot16,ingredient4,left,right,dispenser4;]
true 13 pour-shot-to-clean-shaker[shot16,ingredient4,shaker1,left,l0,l1;]
true 82 clean-shot[shot16,ingredient4,left,right;]
true 401 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient5,left,shot16;]
true 152 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 310 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 36 leave[left,shot16;]
true 422 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient5;]
true 432 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 420 nop[;]
true 30 grasp[left,shaker1;]
true 452 shake[cocktail7,ingredient4,ingredient5,shaker1,left,right;]
true 315 pour-shaker-to-shot[cocktail7,shot1,left,shaker1,l2,l1;]
true 203 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 205 clean-shaker[left,right,shaker1;]
true 405 leave[left,shaker1;]
true 412 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 436 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient5,shot16;]
true 372 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient5,dispenser5;]
true 346 grasp[right,shot16;]
true 282 refill-shot[shot16,ingredient5,right,left,dispenser5;]
true 183 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1;]
true 321 clean-shot[shot16,ingredient5,right,left;]
true 45 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,right,shot16;]
true 311 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 369 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2;]
true 124 leave[right,shot16;]
true 14 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient5,ingredient1;]
true 446 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 196 nop[;]
true 186 grasp[right,shaker1;]
true 380 shake[cocktail5,ingredient5,ingredient1,shaker1,right,left;]
true 429 pour-shaker-to-shot[cocktail5,shot2,right,shaker1,l2,l1;]
true 199 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 211 clean-shaker[right,left,shaker1;]
true 281 leave[right,shaker1;]
true 362 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 141 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot16;]
true 8 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient1,dispenser2;]
true 59 grasp[right,shot16;]
true 367 clean-shot[shot16,ingredient1,right,left;]
true 222 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 437 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1;]
true 38 clean-shot[shot16,ingredient2,right,left;]
true 63 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,right,shot16;]
true 302 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 18 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2;]
true 16 leave[right,shot16;]
true 98 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient1;]
true 113 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 131 nop[;]
true 274 grasp[right,shaker1;]
true 343 shake[cocktail8,ingredient2,ingredient1,shaker1,right,left;]
true 150 pour-shaker-to-shot[cocktail8,shot3,right,shaker1,l2,l1;]
true 245 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 166 clean-shaker[right,left,shaker1;]
true 110 leave[right,shaker1;]
true 292 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 54 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot16;]
true 319 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient1,dispenser1;]
true 84 grasp[left,shot16;]
true 129 refill-shot[shot16,ingredient1,left,right,dispenser1;]
true 194 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,left,l0,l1;]
true 176 clean-shot[shot16,ingredient1,left,right;]
true 191 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot16;]
true 133 fill-shot[shot16,ingredient4,left,right,dispenser4;]
true 258 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2;]
true 12 leave[left,shot16;]
true 440 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4;]
true 414 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 279 nop[;]
true 204 grasp[right,shaker1;]
true 61 shake[cocktail1,ingredient1,ingredient4,shaker1,right,left;]
true 266 pour-shaker-to-shot[cocktail1,shot4,right,shaker1,l2,l1;]
true 17 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 207 clean-shaker[right,left,shaker1;]
true 411 leave[right,shaker1;]
true 119 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 375 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot16;]
true 181 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient4,dispenser4;]
true 231 grasp[left,shot16;]
true 120 refill-shot[shot16,ingredient4,left,right,dispenser4;]
true 106 pour-shot-to-clean-shaker[shot16,ingredient4,shaker1,left,l0,l1;]
true 316 clean-shot[shot16,ingredient4,left,right;]
true 31 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,left,shot16;]
true 105 fill-shot[shot16,ingredient1,left,right,dispenser1;]
true 9 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,left,l1,l2;]
true 301 leave[left,shot16;]
true 296 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient1;]
true 239 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 187 nop[;]
true 221 grasp[right,shaker1;]
true 402 shake[cocktail9,ingredient4,ingredient1,shaker1,right,left;]
true 97 pour-shaker-to-shot[cocktail9,shot5,right,shaker1,l2,l1;]
true 455 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 355 clean-shaker[right,left,shaker1;]
true 398 leave[right,shaker1;]
true 241 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 135 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot16;]
true 226 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient1,dispenser2;]
true 24 grasp[right,shot16;]
true 406 clean-shot[shot16,ingredient1,right,left;]
true 229 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 139 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1;]
true 128 clean-shot[shot16,ingredient2,right,left;]
true 361 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient5,right,shot16;]
true 447 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 3 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2;]
true 270 leave[right,shot16;]
true 171 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient5;]
true 94 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 115 nop[;]
true 103 grasp[left,shaker1;]
true 430 shake[cocktail3,ingredient2,ingredient5,shaker1,left,right;]
true 371 pour-shaker-to-shot[cocktail3,shot6,left,shaker1,l2,l1;]
true 236 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 427 clean-shaker[left,right,shaker1;]
true 342 leave[left,shaker1;]
true 238 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 289 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot16;]
true 69 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient5,dispenser3;]
true 348 grasp[left,shot16;]
true 356 clean-shot[shot16,ingredient5,left,right;]
true 308 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 232 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1;]
true 345 clean-shot[shot16,ingredient3,left,right;]
true 284 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot16;]
true 2 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 399 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2;]
true 359 leave[left,shot16;]
true 431 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient2;]
true 260 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 262 nop[;]
true 272 grasp[right,shaker1;]
true 44 shake[cocktail11,ingredient3,ingredient2,shaker1,right,left;]
true 392 pour-shaker-to-shot[cocktail11,shot7,right,shaker1,l2,l1;]
true 134 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 91 clean-shaker[right,left,shaker1;]
true 225 leave[right,shaker1;]
true 118 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 271 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot16;]
true 7 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient2,dispenser2;]
true 317 grasp[left,shot16;]
true 220 refill-shot[shot16,ingredient2,left,right,dispenser2;]
true 149 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1;]
true 373 clean-shot[shot16,ingredient2,left,right;]
true 370 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient5,left,shot16;]
true 269 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 434 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 83 leave[left,shot16;]
true 206 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient5;]
true 384 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 0 nop[;]
true 433 grasp[left,shaker1;]
true 290 shake[cocktail10,ingredient2,ingredient5,shaker1,left,right;]
true 60 pour-shaker-to-shot[cocktail10,shot8,left,shaker1,l2,l1;]
true 336 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 259 clean-shaker[left,right,shaker1;]
true 309 leave[left,shaker1;]
true 293 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 108 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient5,shot16;]
true 99 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient5,dispenser5;]
true 228 grasp[left,shot16;]
true 22 refill-shot[shot16,ingredient5,left,right,dispenser5;]
true 224 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1;]
true 435 clean-shot[shot16,ingredient5,left,right;]
true 112 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot16;]
true 288 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 267 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2;]
true 368 leave[left,shot16;]
true 169 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient5,ingredient2;]
true 298 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 182 nop[;]
true 74 grasp[left,shaker1;]
true 234 shake[cocktail4,ingredient5,ingredient2,shaker1,left,right;]
true 165 pour-shaker-to-shot[cocktail4,shot9,left,shaker1,l2,l1;]
true 114 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 347 clean-shaker[left,right,shaker1;]
true 233 leave[left,shaker1;]
true 177 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 403 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient5,shot16;]
true 56 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient2,dispenser5;]
true 66 grasp[left,shot16;]
true 41 clean-shot[shot16,ingredient2,left,right;]
true 404 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 340 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1;]
true 314 clean-shot[shot16,ingredient5,left,right;]
true 20 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot16;]
true 439 fill-shot[shot16,ingredient1,left,right,dispenser1;]
true 75 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,left,l1,l2;]
true 413 leave[left,shot16;]
true 354 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient5,ingredient1;]
true 237 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 6 nop[;]
true 100 grasp[right,shaker1;]
true 351 shake[cocktail6,ingredient5,ingredient1,shaker1,right,left;]
true 358 pour-shaker-to-shot[cocktail6,shot10,right,shaker1,l2,l1;]
true 157 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 213 clean-shaker[right,left,shaker1;]
true 201 leave[right,shaker1;]
true 257 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 33 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient5,shot16;]
true 111 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient1,dispenser5;]
true 364 grasp[left,shot16;]
true 397 clean-shot[shot16,ingredient1,left,right;]
true 159 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 148 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1;]
true 386 clean-shot[shot16,ingredient5,left,right;]
true 326 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient2,left,shot16;]
true 164 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 442 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2;]
true 130 leave[left,shot16;]
true 163 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient5,ingredient2;]
true 195 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 350 nop[;]
true 385 grasp[right,shaker1;]
true 263 shake[cocktail2,ingredient5,ingredient2,shaker1,right,left;]
true 248 pour-shaker-to-shot[cocktail2,shot11,right,shaker1,l2,l1;]
true 210 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 334 clean-shaker[right,left,shaker1;]
true 209 leave[right,shaker1;]
true 382 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right;]
true 147 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient5,shot16;]
true 212 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient2,dispenser5;]
true 286 grasp[right,shot16;]
true 50 clean-shot[shot16,ingredient2,right,left;]
true 27 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 158 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1;]
true 394 clean-shot[shot16,ingredient5,right,left;]
true 137 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,right,shot16;]
true 77 fill-shot[shot16,ingredient1,right,left,dispenser1;]
true 383 pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2;]
true 185 leave[right,shot16;]
true 381 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient5,ingredient1;]
true 253 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 277 nop[;]
true 47 grasp[left,shaker1;]
true 306 shake[cocktail6,ingredient5,ingredient1,shaker1,left,right;]
true 327 pour-shaker-to-shot[cocktail6,shot12,left,shaker1,l2,l1;]
true 299 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 43 clean-shaker[left,right,shaker1;]
true 441 leave[left,shaker1;]
true 72 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right;]
true 145 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient5,shot16;]
true 11 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient1,dispenser5;]
true 249 grasp[right,shot16;]
true 144 clean-shot[shot16,ingredient1,right,left;]
true 136 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 408 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1;]
true 449 clean-shot[shot16,ingredient5,right,left;]
true 70 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot16;]
true 5 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 448 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,right,l1,l2;]
true 132 leave[right,shot16;]
true 154 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient5,ingredient2;]
true 32 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 388 nop[;]
true 48 grasp[left,shaker1;]
true 4 shake[cocktail4,ingredient5,ingredient2,shaker1,left,right;]
true 46 pour-shaker-to-shot[cocktail4,shot13,left,shaker1,l2,l1;]
true 79 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 42 clean-shaker[left,right,shaker1;]
true 34 leave[left,shaker1;]
true 344 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left;]
true 121 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot16;]
true 23 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient4,ingredient2,dispenser4;]
true 179 grasp[left,shot16;]
true 332 clean-shot[shot16,ingredient2,left,right;]
true 64 fill-shot[shot16,ingredient4,left,right,dispenser4;]
true 29 pour-shot-to-clean-shaker[shot16,ingredient4,shaker1,left,l0,l1;]
true 117 clean-shot[shot16,ingredient4,left,right;]
true 287 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient5,left,shot16;]
true 126 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 172 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 218 leave[left,shot16;]
true 180 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient5;]
true 360 __method_precondition_m5_do_clean_shot_5_precondition[shot14;]
true 376 nop[;]
true 227 grasp[left,shaker1;]
true 304 shake[cocktail7,ingredient4,ingredient5,shaker1,left,right;]
true 140 pour-shaker-to-shot[cocktail7,shot14,left,shaker1,l2,l1;]
true 363 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 374 clean-shaker[left,right,shaker1;]
true 37 leave[left,shaker1;]
true 295 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,left;]
true 353 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot16;]
true 58 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient5,dispenser1;]
true 337 grasp[left,shot16;]
true 283 clean-shot[shot16,ingredient5,left,right;]
true 339 fill-shot[shot16,ingredient1,left,right,dispenser1;]
true 235 pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,left,l0,l1;]
true 377 clean-shot[shot16,ingredient1,left,right;]
true 365 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot16;]
true 230 fill-shot[shot16,ingredient4,left,right,dispenser4;]
true 87 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2;]
true 125 leave[left,shot16;]
true 453 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4;]
true 107 __method_precondition_m5_do_clean_shot_5_precondition[shot15;]
true 198 nop[;]
true 419 grasp[right,shaker1;]
true 21 shake[cocktail1,ingredient1,ingredient4,shaker1,right,left;]
true 26 pour-shaker-to-shot[cocktail1,shot15,right,shaker1,l2,l1;]
true 396 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 423 clean-shaker[right,left,shaker1;]
true 256 leave[right,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 628497616
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 414
number of actions                    = 3922
number of abstract actions           = 991
number of primitive actions          = 2931
number of methods                    = 4877
number of primitive shop actions     = 1174
number of primitive non-shop actions = 1757
size of largest method               = 15
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 354613
number of clauses               = 1989242
average size of clauses         = 2.405631893957598
number of assert                = 182
number of horn                  = 1743094
K offset                        = 0
K chosen value                  = 4
state formula                   = 1664546
method children clauses         = 0
number of paths                 = 315
maximum plan length             = 315
number of decomposition clauses = 324696
number of ordering clauses      = 0
number of state clauses         = 1664546
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 21473
============ parsing ============
total                         = 1137
file parser                   = 618
sort expansion                = 246
closed world assumption       = 137
inherit preconditions         = 0
shop methods                  = 30
eliminate identical variables = 43
strip domain of hybridity     = 1
flatten formula               = 61
============ preprocessing ============
total                                      = 7270
compile negative preconditions             = 52
compile unit methods                       = 0
split parameter                            = 61
expand choiceless abstract tasks           = 634
compile methods with identical tasks       = 32
removing unnecessary predicates            = 1397
lifted reachabiltiy analysis               = 57
grounded planning graph analysis           = 1893
grounded task decomposition graph analysis = 2305
grounding                                  = 767
create artificial top task                 = 19
============ search preparation ============
compute state invariants = 3025
============ sat ============
total                                        = 9932
generate formula                             = 7316
generate path decomposition tree             = 492
normalise path decomposition tree            = 112
sog optimisation                             = 79
translate path decomposition tree to clauses = 968
generate state formula                       = 7087
generate state invariant formula             = 847
transform to DIMACS                          = 1077
SAT solver                                   = 1150
SAT solver for K=0004                        = 1150

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2931";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="991";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="628497616";"40 sat:20:state formula"="1664546";"40 sat:01:number of variables"="354613";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="315";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="4877";"30 problem:07:number of primitive shop actions"="1174";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3922";"30 problem:08:number of primitive non-shop actions"="1757";"30 problem:02:number of predicates"="414";"40 sat:03:number of horn"="1743094";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="15";"40 sat:03:average size of clauses"="2.405631893957598";"40 sat:02:number of clauses"="1989242";"40 sat:50:number of state clauses"="1664546";"40 sat:03:number of assert"="182";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="315";"40 sat:50:number of decomposition clauses"="324696";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="618";"01 parsing:08:flatten formula"="61";"40 sat:41:SAT solver for K=0004"="1150";"40 sat:00:total"="9932";"40 sat:16:generate state formula"="7087";"40 sat:20:transform to DIMACS"="1077";"40 sat:11:generate path decomposition tree"="492";"02 preprocessing:07:compile methods with identical tasks"="32";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="1397";"01 parsing:03:closed world assumption"="137";"02 preprocessing:11:lifted reachabiltiy analysis"="57";"01 parsing:02:sort expansion"="246";"40 sat:12:normalise path decomposition tree"="112";"40 sat:40:SAT solver"="1150";"01 parsing:00:total"="1137";"40 sat:10:generate formula"="7316";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="52";"00 total:00:total"="21473";"40 sat:13:sog optimisation"="79";"02 preprocessing:12:grounded planning graph analysis"="1893";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="2305";"02 preprocessing:04:split parameter"="61";"01 parsing:05:shop methods"="30";"10 search preparation:02:compute state invariants"="3025";"01 parsing:06:eliminate identical variables"="43";"40 sat:15:translate path decomposition tree to clauses"="968";"02 preprocessing:05:expand choiceless abstract tasks"="634";"40 sat:17:generate state invariant formula"="847";"02 preprocessing:00:total"="7270";"02 preprocessing:99:create artificial top task"="19";"02 preprocessing:84:grounding"="767"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot16];__method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser4,ingredient4];grasp[left,shot16];fill-shot[shot16,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot16,ingredient4,shaker1,left,l0,l1];clean-shot[shot16,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient5,left,shot16];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail7,ingredient4,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient5,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient5,dispenser5];grasp[right,shot16];refill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1];clean-shot[shot16,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,right,shot16];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient5,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail5,ingredient5,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient1,dispenser2];grasp[right,shot16];clean-shot[shot16,ingredient1,right,left];fill-shot[shot16,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1];clean-shot[shot16,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,right,shot16];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail8,ingredient2,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient1,dispenser1];grasp[left,shot16];refill-shot[shot16,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,left,l0,l1];clean-shot[shot16,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot16];fill-shot[shot16,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[right,shaker1];shake[cocktail1,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail1,shot4,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail1,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient4,dispenser4];grasp[left,shot16];refill-shot[shot16,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot16,ingredient4,shaker1,left,l0,l1];clean-shot[shot16,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,left,shot16];fill-shot[shot16,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot16,ingredient1,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[right,shaker1];shake[cocktail9,ingredient4,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot5,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient2,ingredient1,dispenser2];grasp[right,shot16];clean-shot[shot16,ingredient1,right,left];fill-shot[shot16,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,right,l0,l1];clean-shot[shot16,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient5,right,shot16];fill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail3,ingredient2,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient5,dispenser3];grasp[left,shot16];clean-shot[shot16,ingredient5,left,right];fill-shot[shot16,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1];clean-shot[shot16,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot16];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[right,shaker1];shake[cocktail11,ingredient3,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot7,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient2,dispenser2];grasp[left,shot16];refill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1];clean-shot[shot16,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient5,left,shot16];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[left,shaker1];shake[cocktail10,ingredient2,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot8,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient5,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient5,dispenser5];grasp[left,shot16];refill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1];clean-shot[shot16,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot16];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[left,shaker1];shake[cocktail4,ingredient5,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail4,shot9,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail4,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient5,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient2,dispenser5];grasp[left,shot16];clean-shot[shot16,ingredient2,left,right];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1];clean-shot[shot16,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot16];fill-shot[shot16,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot16,ingredient1,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient5,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[right,shaker1];shake[cocktail6,ingredient5,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot10,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient5,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient1,dispenser5];grasp[left,shot16];clean-shot[shot16,ingredient1,left,right];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,left,l0,l1];clean-shot[shot16,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient2,left,shot16];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail2,ingredient5,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient5,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient2,dispenser5];grasp[right,shot16];clean-shot[shot16,ingredient2,right,left];fill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1];clean-shot[shot16,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,right,shot16];fill-shot[shot16,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot16,ingredient1,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient5,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[left,shaker1];shake[cocktail6,ingredient5,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot12,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient5,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient5,ingredient1,dispenser5];grasp[right,shot16];clean-shot[shot16,ingredient1,right,left];fill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1];clean-shot[shot16,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot16];fill-shot[shot16,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot13];nop[];grasp[left,shaker1];shake[cocktail4,ingredient5,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail4,shot13,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail4,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient4,ingredient2,dispenser4];grasp[left,shot16];clean-shot[shot16,ingredient2,left,right];fill-shot[shot16,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot16,ingredient4,shaker1,left,l0,l1];clean-shot[shot16,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient5,left,shot16];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot14];nop[];grasp[left,shaker1];shake[cocktail7,ingredient4,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot14,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient1,ingredient5,dispenser1];grasp[left,shot16];clean-shot[shot16,ingredient5,left,right];fill-shot[shot16,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot16,ingredient1,shaker1,left,l0,l1];clean-shot[shot16,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot16];fill-shot[shot16,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot16,ingredient4,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot15];nop[];grasp[right,shaker1];shake[cocktail1,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail1,shot15,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail1,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient4 shot16 
2 __method_precondition_m8_do_fill_shot_8_precondition shot16 dispenser4 ingredient4 
3 grasp left shot16 
4 fill-shot shot16 ingredient4 left right dispenser4 
5 pour-shot-to-clean-shaker shot16 ingredient4 shaker1 left l0 l1 
6 clean-shot shot16 ingredient4 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient5 left shot16 
8 fill-shot shot16 ingredient5 left right dispenser5 
9 pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 
10 leave left shot16 
11 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient4 ingredient5 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail7 ingredient4 ingredient5 shaker1 left right 
16 pour-shaker-to-shot cocktail7 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail7 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient5 shot16 
22 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient5 dispenser5 
23 grasp right shot16 
24 refill-shot shot16 ingredient5 right left dispenser5 
25 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 
26 clean-shot shot16 ingredient5 right left 
27 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient1 right shot16 
28 fill-shot shot16 ingredient1 right left dispenser1 
29 pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 
30 leave right shot16 
31 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient5 ingredient1 
32 __method_precondition_m5_do_clean_shot_5_precondition shot2 
33 nop  
34 grasp right shaker1 
35 shake cocktail5 ingredient5 ingredient1 shaker1 right left 
36 pour-shaker-to-shot cocktail5 shot2 right shaker1 l2 l1 
37 empty-shaker right shaker1 cocktail5 l1 l0 
38 clean-shaker right left shaker1 
39 leave right shaker1 
40 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 right 
41 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient2 shot16 
42 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient2 ingredient1 dispenser2 
43 grasp right shot16 
44 clean-shot shot16 ingredient1 right left 
45 fill-shot shot16 ingredient2 right left dispenser2 
46 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 right l0 l1 
47 clean-shot shot16 ingredient2 right left 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient1 right shot16 
49 fill-shot shot16 ingredient1 right left dispenser1 
50 pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 
51 leave right shot16 
52 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient2 ingredient1 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp right shaker1 
56 shake cocktail8 ingredient2 ingredient1 shaker1 right left 
57 pour-shaker-to-shot cocktail8 shot3 right shaker1 l2 l1 
58 empty-shaker right shaker1 cocktail8 l1 l0 
59 clean-shaker right left shaker1 
60 leave right shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient1 shot16 
63 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient1 dispenser1 
64 grasp left shot16 
65 refill-shot shot16 ingredient1 left right dispenser1 
66 pour-shot-to-clean-shaker shot16 ingredient1 shaker1 left l0 l1 
67 clean-shot shot16 ingredient1 left right 
68 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient4 left shot16 
69 fill-shot shot16 ingredient4 left right dispenser4 
70 pour-shot-to-used-shaker shot16 ingredient4 shaker1 left l1 l2 
71 leave left shot16 
72 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient1 ingredient4 
73 __method_precondition_m5_do_clean_shot_5_precondition shot4 
74 nop  
75 grasp right shaker1 
76 shake cocktail1 ingredient1 ingredient4 shaker1 right left 
77 pour-shaker-to-shot cocktail1 shot4 right shaker1 l2 l1 
78 empty-shaker right shaker1 cocktail1 l1 l0 
79 clean-shaker right left shaker1 
80 leave right shaker1 
81 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
82 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient4 shot16 
83 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient4 dispenser4 
84 grasp left shot16 
85 refill-shot shot16 ingredient4 left right dispenser4 
86 pour-shot-to-clean-shaker shot16 ingredient4 shaker1 left l0 l1 
87 clean-shot shot16 ingredient4 left right 
88 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient1 left shot16 
89 fill-shot shot16 ingredient1 left right dispenser1 
90 pour-shot-to-used-shaker shot16 ingredient1 shaker1 left l1 l2 
91 leave left shot16 
92 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient4 ingredient1 
93 __method_precondition_m5_do_clean_shot_5_precondition shot5 
94 nop  
95 grasp right shaker1 
96 shake cocktail9 ingredient4 ingredient1 shaker1 right left 
97 pour-shaker-to-shot cocktail9 shot5 right shaker1 l2 l1 
98 empty-shaker right shaker1 cocktail9 l1 l0 
99 clean-shaker right left shaker1 
100 leave right shaker1 
101 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 right 
102 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient2 shot16 
103 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient2 ingredient1 dispenser2 
104 grasp right shot16 
105 clean-shot shot16 ingredient1 right left 
106 fill-shot shot16 ingredient2 right left dispenser2 
107 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 right l0 l1 
108 clean-shot shot16 ingredient2 right left 
109 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient5 right shot16 
110 fill-shot shot16 ingredient5 right left dispenser5 
111 pour-shot-to-used-shaker shot16 ingredient5 shaker1 right l1 l2 
112 leave right shot16 
113 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient2 ingredient5 
114 __method_precondition_m5_do_clean_shot_5_precondition shot6 
115 nop  
116 grasp left shaker1 
117 shake cocktail3 ingredient2 ingredient5 shaker1 left right 
118 pour-shaker-to-shot cocktail3 shot6 left shaker1 l2 l1 
119 empty-shaker left shaker1 cocktail3 l1 l0 
120 clean-shaker left right shaker1 
121 leave left shaker1 
122 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
123 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient3 shot16 
124 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient3 ingredient5 dispenser3 
125 grasp left shot16 
126 clean-shot shot16 ingredient5 left right 
127 fill-shot shot16 ingredient3 left right dispenser3 
128 pour-shot-to-clean-shaker shot16 ingredient3 shaker1 left l0 l1 
129 clean-shot shot16 ingredient3 left right 
130 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient2 left shot16 
131 fill-shot shot16 ingredient2 left right dispenser2 
132 pour-shot-to-used-shaker shot16 ingredient2 shaker1 left l1 l2 
133 leave left shot16 
134 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient3 ingredient2 
135 __method_precondition_m5_do_clean_shot_5_precondition shot7 
136 nop  
137 grasp right shaker1 
138 shake cocktail11 ingredient3 ingredient2 shaker1 right left 
139 pour-shaker-to-shot cocktail11 shot7 right shaker1 l2 l1 
140 empty-shaker right shaker1 cocktail11 l1 l0 
141 clean-shaker right left shaker1 
142 leave right shaker1 
143 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 left 
144 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient2 shot16 
145 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient2 dispenser2 
146 grasp left shot16 
147 refill-shot shot16 ingredient2 left right dispenser2 
148 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 
149 clean-shot shot16 ingredient2 left right 
150 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient5 left shot16 
151 fill-shot shot16 ingredient5 left right dispenser5 
152 pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 
153 leave left shot16 
154 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient2 ingredient5 
155 __method_precondition_m5_do_clean_shot_5_precondition shot8 
156 nop  
157 grasp left shaker1 
158 shake cocktail10 ingredient2 ingredient5 shaker1 left right 
159 pour-shaker-to-shot cocktail10 shot8 left shaker1 l2 l1 
160 empty-shaker left shaker1 cocktail10 l1 l0 
161 clean-shaker left right shaker1 
162 leave left shaker1 
163 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 left 
164 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient5 shot16 
165 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient5 dispenser5 
166 grasp left shot16 
167 refill-shot shot16 ingredient5 left right dispenser5 
168 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 left l0 l1 
169 clean-shot shot16 ingredient5 left right 
170 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 left shot16 
171 fill-shot shot16 ingredient2 left right dispenser2 
172 pour-shot-to-used-shaker shot16 ingredient2 shaker1 left l1 l2 
173 leave left shot16 
174 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient5 ingredient2 
175 __method_precondition_m5_do_clean_shot_5_precondition shot9 
176 nop  
177 grasp left shaker1 
178 shake cocktail4 ingredient5 ingredient2 shaker1 left right 
179 pour-shaker-to-shot cocktail4 shot9 left shaker1 l2 l1 
180 empty-shaker left shaker1 cocktail4 l1 l0 
181 clean-shaker left right shaker1 
182 leave left shaker1 
183 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
184 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient5 shot16 
185 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient5 ingredient2 dispenser5 
186 grasp left shot16 
187 clean-shot shot16 ingredient2 left right 
188 fill-shot shot16 ingredient5 left right dispenser5 
189 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 left l0 l1 
190 clean-shot shot16 ingredient5 left right 
191 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient1 left shot16 
192 fill-shot shot16 ingredient1 left right dispenser1 
193 pour-shot-to-used-shaker shot16 ingredient1 shaker1 left l1 l2 
194 leave left shot16 
195 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient5 ingredient1 
196 __method_precondition_m5_do_clean_shot_5_precondition shot10 
197 nop  
198 grasp right shaker1 
199 shake cocktail6 ingredient5 ingredient1 shaker1 right left 
200 pour-shaker-to-shot cocktail6 shot10 right shaker1 l2 l1 
201 empty-shaker right shaker1 cocktail6 l1 l0 
202 clean-shaker right left shaker1 
203 leave right shaker1 
204 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
205 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient5 shot16 
206 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient5 ingredient1 dispenser5 
207 grasp left shot16 
208 clean-shot shot16 ingredient1 left right 
209 fill-shot shot16 ingredient5 left right dispenser5 
210 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 left l0 l1 
211 clean-shot shot16 ingredient5 left right 
212 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient2 left shot16 
213 fill-shot shot16 ingredient2 left right dispenser2 
214 pour-shot-to-used-shaker shot16 ingredient2 shaker1 left l1 l2 
215 leave left shot16 
216 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient5 ingredient2 
217 __method_precondition_m5_do_clean_shot_5_precondition shot11 
218 nop  
219 grasp right shaker1 
220 shake cocktail2 ingredient5 ingredient2 shaker1 right left 
221 pour-shaker-to-shot cocktail2 shot11 right shaker1 l2 l1 
222 empty-shaker right shaker1 cocktail2 l1 l0 
223 clean-shaker right left shaker1 
224 leave right shaker1 
225 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 right 
226 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient5 shot16 
227 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient5 ingredient2 dispenser5 
228 grasp right shot16 
229 clean-shot shot16 ingredient2 right left 
230 fill-shot shot16 ingredient5 right left dispenser5 
231 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 
232 clean-shot shot16 ingredient5 right left 
233 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient1 right shot16 
234 fill-shot shot16 ingredient1 right left dispenser1 
235 pour-shot-to-used-shaker shot16 ingredient1 shaker1 right l1 l2 
236 leave right shot16 
237 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient5 ingredient1 
238 __method_precondition_m5_do_clean_shot_5_precondition shot12 
239 nop  
240 grasp left shaker1 
241 shake cocktail6 ingredient5 ingredient1 shaker1 left right 
242 pour-shaker-to-shot cocktail6 shot12 left shaker1 l2 l1 
243 empty-shaker left shaker1 cocktail6 l1 l0 
244 clean-shaker left right shaker1 
245 leave left shaker1 
246 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot13 right 
247 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient5 shot16 
248 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient5 ingredient1 dispenser5 
249 grasp right shot16 
250 clean-shot shot16 ingredient1 right left 
251 fill-shot shot16 ingredient5 right left dispenser5 
252 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 
253 clean-shot shot16 ingredient5 right left 
254 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 right shot16 
255 fill-shot shot16 ingredient2 right left dispenser2 
256 pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 
257 leave right shot16 
258 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient5 ingredient2 
259 __method_precondition_m5_do_clean_shot_5_precondition shot13 
260 nop  
261 grasp left shaker1 
262 shake cocktail4 ingredient5 ingredient2 shaker1 left right 
263 pour-shaker-to-shot cocktail4 shot13 left shaker1 l2 l1 
264 empty-shaker left shaker1 cocktail4 l1 l0 
265 clean-shaker left right shaker1 
266 leave left shaker1 
267 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot14 left 
268 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient4 shot16 
269 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient4 ingredient2 dispenser4 
270 grasp left shot16 
271 clean-shot shot16 ingredient2 left right 
272 fill-shot shot16 ingredient4 left right dispenser4 
273 pour-shot-to-clean-shaker shot16 ingredient4 shaker1 left l0 l1 
274 clean-shot shot16 ingredient4 left right 
275 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient5 left shot16 
276 fill-shot shot16 ingredient5 left right dispenser5 
277 pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 
278 leave left shot16 
279 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient4 ingredient5 
280 __method_precondition_m5_do_clean_shot_5_precondition shot14 
281 nop  
282 grasp left shaker1 
283 shake cocktail7 ingredient4 ingredient5 shaker1 left right 
284 pour-shaker-to-shot cocktail7 shot14 left shaker1 l2 l1 
285 empty-shaker left shaker1 cocktail7 l1 l0 
286 clean-shaker left right shaker1 
287 leave left shaker1 
288 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot15 left 
289 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient1 shot16 
290 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient1 ingredient5 dispenser1 
291 grasp left shot16 
292 clean-shot shot16 ingredient5 left right 
293 fill-shot shot16 ingredient1 left right dispenser1 
294 pour-shot-to-clean-shaker shot16 ingredient1 shaker1 left l0 l1 
295 clean-shot shot16 ingredient1 left right 
296 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient4 left shot16 
297 fill-shot shot16 ingredient4 left right dispenser4 
298 pour-shot-to-used-shaker shot16 ingredient4 shaker1 left l1 l2 
299 leave left shot16 
300 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient1 ingredient4 
301 __method_precondition_m5_do_clean_shot_5_precondition shot15 
302 nop  
303 grasp right shaker1 
304 shake cocktail1 ingredient1 ingredient4 shaker1 right left 
305 pour-shaker-to-shot cocktail1 shot15 right shaker1 l2 l1 
306 empty-shaker right shaker1 cocktail1 l1 l0 
307 clean-shaker right left shaker1 
308 leave right shaker1 
root 414
309 do_fill_shot shot16 ingredient5 right  -> m7_do_fill_shot 22 23 24
310 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 150 422 331 153
311 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 46
312 get_first_ingredient cocktail3 right  -> m2_get_first_ingredient 102 438 456 409
313 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 29
314 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 5
315 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 226 377 338 384
316 do_cocktail_in_shot1 shot7 cocktail11  -> m0_do_cocktail_in_shot1 122 410 376 457
317 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 252
318 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient1 right  -> _m3_get_second_ingredient_2 234
319 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 114 115
320 serve_shot shot15 cocktail1  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot15,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 300 359 303 304 305 306 307 308
321 do_clean_shot_m4_serve_shot_sip_2 shot14 right  -> <_m4_serve_shot_2;do_clean_shot[shot14,cocktail8,right];m5_do_clean_shot;0;-1,-2> 280 281
322 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 left  -> _m2_get_first_ingredient_4 211
323 do_fill_shot shot16 ingredient4 left  -> m9_do_fill_shot 269 270 271 272
324 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 right  -> _m3_get_second_ingredient_2 110
325 do_fill_shot shot16 ingredient1 left  -> m7_do_fill_shot 63 64 65
326 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 268 323 459 363
327 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 172
328 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 210
329 do_fill_shot shot16 ingredient1 left  -> m9_do_fill_shot 290 291 292 293
330 do_clean_shot_m4_serve_shot_sip_2 shot9 right  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2> 175 176
331 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 152
332 do_fill_shot shot16 ingredient2 left  -> m7_do_fill_shot 145 146 147
333 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 left  -> _m3_get_second_ingredient_2 171
334 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient4 left  -> _m2_get_first_ingredient_4 6
335 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 68 353 362 71
336 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 184 366 407 402
337 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient4 left  -> _m3_get_second_ingredient_2 297
338 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 231
339 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 256
340 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
341 serve_shot shot11 cocktail2  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 216 435 219 220 221 222 223 224
342 get_second_ingredient cocktail4 right  -> m3_get_second_ingredient 254 431 339 257
343 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient4 left  -> _m2_get_first_ingredient_4 87
344 do_cocktail_in_shot1 shot9 cocktail4  -> m0_do_cocktail_in_shot1 163 397 433 432
345 do_fill_shot shot16 ingredient4 left  -> m8_do_fill_shot 2 3 4
346 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 right  -> _m2_get_first_ingredient_4 26
347 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 289 329 450 441
348 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 25
349 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 90
350 do_clean_shot_m4_serve_shot_sip_2 shot5 left  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2> 93 94
351 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 53 54
352 do_clean_shot_m4_serve_shot_sip_2 shot4 left  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2> 73 74
353 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient4 left  -> _m3_get_second_ingredient_2 69
354 serve_shot shot10 cocktail6  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 195 393 198 199 200 201 202 203
355 do_clean_shot_m4_serve_shot_sip_2 shot12 right  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2> 238 239
356 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 111
357 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 62 325 398 444
358 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 left  -> _m3_get_second_ingredient_2 213
359 do_clean_shot_m4_serve_shot_sip_2 shot15 left  -> <_m4_serve_shot_2;do_clean_shot[shot15,cocktail7,left];m5_do_clean_shot;0;-1,-2> 301 302
360 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 1 345 314 334
361 get_first_ingredient cocktail8 right  -> m2_get_first_ingredient 41 369 311 425
362 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 70
363 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient4 left  -> _m2_get_first_ingredient_4 274
364 serve_shot shot3 cocktail8  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 52 351 55 56 57 58 59 60
365 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 193
366 do_fill_shot shot16 ingredient5 left  -> m9_do_fill_shot 185 186 187 188
367 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient1 right  -> _m3_get_second_ingredient_2 49
368 serve_shot shot1 cocktail7  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 11 340 14 15 16 17 18 19
369 do_fill_shot shot16 ingredient2 right  -> m9_do_fill_shot 42 43 44 45
370 get_second_ingredient cocktail8 right  -> m3_get_second_ingredient 48 367 429 51
371 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 277
372 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 168
373 do_cocktail_in_shot1 shot5 cocktail9  -> m0_do_cocktail_in_shot1 81 386 396 442
374 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 9
375 serve_shot shot6 cocktail3  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 113 319 116 117 118 119 120 121
376 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 130 446 443 133
377 do_fill_shot shot16 ingredient5 right  -> m9_do_fill_shot 227 228 229 230
378 do_cocktail_in_shot1 shot1 cocktail7  -> m0_do_cocktail_in_shot1 0 360 440 368
379 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 86
380 do_cocktail_in_shot1 shot2 cocktail5  -> m0_do_cocktail_in_shot1 20 445 401 405
381 do_cocktail_in_shot1 shot4 cocktail1  -> m0_do_cocktail_in_shot1 61 357 335 389
382 do_fill_shot shot16 ingredient3 left  -> m9_do_fill_shot 124 125 126 127
383 do_cocktail_in_shot1 shot3 cocktail8  -> m0_do_cocktail_in_shot1 40 361 370 364
384 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 right  -> _m2_get_first_ingredient_4 232
385 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient3 left  -> _m2_get_first_ingredient_4 129
386 get_first_ingredient cocktail9 left  -> m2_get_first_ingredient 82 453 379 343
387 get_first_ingredient cocktail2 left  -> m2_get_first_ingredient 205 427 328 322
388 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 275 416 371 278
389 serve_shot shot4 cocktail1  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 72 352 75 76 77 78 79 80
390 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 298
391 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 128
392 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 233 318 411 236
393 do_clean_shot_m4_serve_shot_sip_2 shot10 left  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2> 196 197
394 do_cocktail_in_shot1 shot6 cocktail3  -> m0_do_cocktail_in_shot1 101 312 413 375
395 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient1 left  -> _m3_get_second_ingredient_2 192
396 get_second_ingredient cocktail9 left  -> m3_get_second_ingredient 88 420 349 91
397 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 164 403 372 455
398 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 66
399 do_cocktail_in_shot1 shot8 cocktail10  -> m0_do_cocktail_in_shot1 143 447 310 423
400 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 191 395 365 194
401 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 27 418 313 30
402 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 left  -> _m2_get_first_ingredient_4 190
403 do_fill_shot shot16 ingredient5 left  -> m7_do_fill_shot 165 166 167
404 do_cocktail_in_shot1 shot10 cocktail6  -> m0_do_cocktail_in_shot1 183 336 400 354
405 serve_shot shot2 cocktail5  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 31 417 34 35 36 37 38 39
406 do_fill_shot shot16 ingredient5 right  -> m9_do_fill_shot 248 249 250 251
407 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 189
408 do_cocktail_in_shot1 shot14 cocktail7  -> m0_do_cocktail_in_shot1 267 326 388 437
409 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 right  -> _m2_get_first_ingredient_4 108
410 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 123 382 391 385
411 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 235
412 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 right  -> _m2_get_first_ingredient_4 253
413 get_second_ingredient cocktail3 right  -> m3_get_second_ingredient 109 324 356 112
414 __choicelessATCompilation__top_1  -> __top_1 378 380 383 381 373 394 316 399 344 404 428 434 439 408 430
415 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 left  -> _m3_get_second_ingredient_2 8
416 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 left  -> _m3_get_second_ingredient_2 276
417 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 32 33
418 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient1 right  -> _m3_get_second_ingredient_2 28
419 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 148
420 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient1 left  -> _m3_get_second_ingredient_2 89
421 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 left  -> _m2_get_first_ingredient_4 149
422 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 left  -> _m3_get_second_ingredient_2 151
423 serve_shot shot8 cocktail10  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 154 454 157 158 159 160 161 162
424 do_clean_shot_m4_serve_shot_sip_2 shot13 right  -> <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,right];m5_do_clean_shot;0;-1,-2> 259 260
425 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 right  -> _m2_get_first_ingredient_4 47
426 serve_shot shot13 cocktail4  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot13,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 258 424 261 262 263 264 265 266
427 do_fill_shot shot16 ingredient5 left  -> m9_do_fill_shot 206 207 208 209
428 do_cocktail_in_shot1 shot11 cocktail2  -> m0_do_cocktail_in_shot1 204 387 449 341
429 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 50
430 do_cocktail_in_shot1 shot15 cocktail1  -> m0_do_cocktail_in_shot1 288 347 448 320
431 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 right  -> _m3_get_second_ingredient_2 255
432 serve_shot shot9 cocktail4  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 174 330 177 178 179 180 181 182
433 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 170 333 327 173
434 do_cocktail_in_shot1 shot12 cocktail6  -> m0_do_cocktail_in_shot1 225 315 392 436
435 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 217 218
436 serve_shot shot12 cocktail6  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 237 355 240 241 242 243 244 245
437 serve_shot shot14 cocktail7  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot14,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 279 321 282 283 284 285 286 287
438 do_fill_shot shot16 ingredient2 right  -> m9_do_fill_shot 103 104 105 106
439 do_cocktail_in_shot1 shot13 cocktail4  -> m0_do_cocktail_in_shot1 246 458 342 426
440 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 7 415 374 10
441 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient1 left  -> _m2_get_first_ingredient_4 295
442 serve_shot shot5 cocktail9  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 92 350 95 96 97 98 99 100
443 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 132
444 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient1 left  -> _m2_get_first_ingredient_4 67
445 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 21 309 348 346
446 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 left  -> _m3_get_second_ingredient_2 131
447 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 144 332 419 421
448 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 296 337 390 299
449 get_second_ingredient cocktail2 left  -> m3_get_second_ingredient 212 358 451 215
450 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 294
451 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 214
452 do_clean_shot_m4_serve_shot_sip_2 shot7 left  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2> 135 136
453 do_fill_shot shot16 ingredient4 left  -> m7_do_fill_shot 83 84 85
454 do_clean_shot_m4_serve_shot_sip_2 shot8 right  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2> 155 156
455 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 left  -> _m2_get_first_ingredient_4 169
456 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 107
457 serve_shot shot7 cocktail11  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 134 452 137 138 139 140 141 142
458 get_first_ingredient cocktail4 right  -> m2_get_first_ingredient 247 406 317 412
459 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 273

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 23.600 MEMPEAK_KBS 934801.408
