PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/HikingG/domain.hddl instances/HikingG/p01.hddl"


Planner Configuration
=====================
Domain: instances/HikingG/domain.hddl
Problem: instances/HikingG/p01.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p01.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 19
Compiling negative preconditions ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 19
Compiling split parameters ... done.
	number of abstract tasks = 8
	number of tasks = 28
	number of decomposition methods = 15
	number of predicates = 16
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 12
	number of epsilon methods = 0
	number of primitive tasks = 20
	number of constants = 19
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 19
Grounded planning graph ... done in 689ms.
	Number of Grounded Actions 2988
	Number of Grounded Literals 59
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 19
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 25
	number of decomposition methods = 14
	number of predicates = 8
	number of sorts = 6
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 18
	number of constants = 19
Grounding ... done.
	number of abstract tasks = 34
	number of tasks = 1666
	number of decomposition methods = 1455
	number of predicates = 59
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 34
	number of tasks = 1666
	number of decomposition methods = 1455
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 265ms.
	Number of Grounded Actions 1632
	Number of Grounded Literals 54
	number of abstract tasks = 34
	number of tasks = 1666
	number of decomposition methods = 1455
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 34
	number of tasks = 1666
	number of decomposition methods = 1455
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 23
	number of tasks = 1655
	number of decomposition methods = 1444
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 23
	number of tasks = 1655
	number of decomposition methods = 1444
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 23
	number of tasks = 1655
	number of decomposition methods = 1444
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 187ms.
	Number of Grounded Actions 1632
	Number of Grounded Literals 54
	number of abstract tasks = 23
	number of tasks = 1655
	number of decomposition methods = 1444
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 23
	number of tasks = 1655
	number of decomposition methods = 1444
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 23
	number of tasks = 1655
	number of decomposition methods = 1444
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 23
	number of tasks = 1655
	number of decomposition methods = 1444
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 599
	number of tasks = 2231
	number of decomposition methods = 2020
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 599
	number of tasks = 2231
	number of decomposition methods = 2020
	number of predicates = 54
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 917
	number of epsilon methods = 0
	number of primitive tasks = 1632
	number of constants = 0
Tasks 1632 - 2
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854770292ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854770094
done
initial PDT has 11 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 8 leafs
SHOP LEAFS 6
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 4293
Size 4293 at 0/1632
Size 4101 at 500/1632
Size 3401 at 1000/1632
Size 1443 at 1500/1632
Size 1443
Size 1443 at 0/1632
Size 891 at 500/1632
Size 891 at 1000/1632
Size 891 at 1500/1632
Size 891
Size 891 at 0/1632
Size 102 at 500/1632
Size 63 at 1000/1632
Size 60 at 1500/1632
Size 60
Size 60 at 0/1632
Size 60 at 500/1632
Size 60 at 1000/1632
Size 60 at 1500/1632
Size 60
Invariant time: 0.314
Number of invariants: 60
Invariant Clauses 540
NUMBER OF CLAUSES 127043
NUMBER OF STATE CLAUSES 8325
NUMBER OF DECOMPOSITION CLAUSES 118718
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 6.55% 93.45% 0.0% 
NUMBER OF PATHS 8
Starting cryptominisat5.5
Setting starttime of solver to 1604481309347
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854768475
done
initial PDT has 27 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 10 leafs
SHOP LEAFS 7
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 660
NUMBER OF CLAUSES 133703
NUMBER OF STATE CLAUSES 9741
NUMBER OF DECOMPOSITION CLAUSES 123962
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 7.29% 92.71000000000001% 0.0% 
NUMBER OF PATHS 10
Starting cryptominisat5.5
Setting starttime of solver to 1604481310295
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 51 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854767724
done
PDT has 32 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 1980
NUMBER OF CLAUSES 162469
NUMBER OF STATE CLAUSES 17661
NUMBER OF DECOMPOSITION CLAUSES 144808
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 10.870000000000001% 89.13% 0.0% 
NUMBER OF PATHS 32
Starting cryptominisat5.5
Setting starttime of solver to 1604481311114
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 79 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854766972
done
PDT has 56 leafs
SHOP LEAFS 19
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 3420
NUMBER OF CLAUSES 203642
NUMBER OF STATE CLAUSES 25971
NUMBER OF DECOMPOSITION CLAUSES 177671
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 12.75% 87.25% 0.0% 
NUMBER OF PATHS 56
Starting cryptominisat5.5
Setting starttime of solver to 1604481312009
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854766011
done
initial PDT has 111 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 84 leafs
SHOP LEAFS 28
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 5100
NUMBER OF CLAUSES 246132
NUMBER OF STATE CLAUSES 35163
NUMBER OF DECOMPOSITION CLAUSES 210969
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 14.290000000000001% 85.71000000000001% 0.0% 
NUMBER OF PATHS 84
Starting cryptominisat5.5
Setting starttime of solver to 1604481312995
Command exited with non-zero status 20
0.07 0.00

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 147 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854765048
done
PDT has 116 leafs
SHOP LEAFS 39
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 7020
NUMBER OF CLAUSES 289910
NUMBER OF STATE CLAUSES 45237
NUMBER OF DECOMPOSITION CLAUSES 244673
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 15.6% 84.4% 0.0% 
NUMBER OF PATHS 116
Starting cryptominisat5.5
Setting starttime of solver to 1604481314208
Command exited with non-zero status 10
0.11 0.00

Time command gave the following runtime for the solver: 110
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_0;3,422 422 <m0_trip_to1;trip_to2[couple1,place0,place2];m2_trip_to2;1;0,-1,-2,-3>
0;3 16 pathaction!2_0;3,342
Consider method^5_0;3;2;5;2,1265 1265 m5_walk_everyone
0;3;2;5;2 19 pathaction!5_0;3;2;5;2,319
Consider method^6_0;3;3;5;2;2,1129 1129 m5_walk_everyone
0;3;3;5;2;2 3 pathaction!6_0;3;3;5;2;2,314
Consider method^7_0;3;3;5;2;2;2,1364 1364 m4_walk_everyone
0;3;3;5;2;2;2 70 pathaction!7_0;3;3;5;2;2;2,314
Consider method^3_0;3;2,1152 1152 m3_trip_to2
0;3;2 25 pathaction!3_0;3;2,437
Consider method^4_0;3;2;5,1422 1422 m5_walk_everyone
0;3;2;5 45 pathaction!4_0;3;2;5,319
Consider method^1_0,884 884 <m14_everyone_go_hiking;prepare_trip[place0];m6_prepare_trip;1;0,-1,-2,2>
0 40 pathaction!1_0,1590
Consider method^0_,2019 2019 __top_1
 61 pathaction!0_,1654
Consider method^4_0;3;3;9,30 30 __UNIQUE-replacement_3
0;3;3;9 50 pathaction!4_0;3;3;9,1658
Consider method^2_0;2,1250 1250 m11_bring_cars
0;2 48 pathaction!2_0;2,340
Consider method^3_0;3;3,31 31 m3_trip_to2
0;3;3 5 pathaction!3_0;3;3,442
Consider method^7_0;3;2;5;2;2;2,1976 1976 m4_walk_everyone
0;3;2;5;2;2;2 37 pathaction!7_0;3;2;5;2;2;2,319
Consider method^5_0;3;3;5;2,90 90 m5_walk_everyone
0;3;3;5;2 59 pathaction!5_0;3;3;5;2,314
Consider method^6_0;3;2;5;2;2,583 583 m5_walk_everyone
0;3;2;5;2;2 35 pathaction!6_0;3;2;5;2;2,319
Consider method^4_0;3;3;2,29 29 __UNIQUE-replacement_2
0;3;3;2 20 pathaction!4_0;3;3;2,1657
Consider method^4_0;3;3;5,1251 1251 m5_walk_everyone
0;3;3;5 12 pathaction!4_0;3;3;5,314
Consider method^4_0;3;2;9,1151 1151 __UNIQUE-replacement_335
0;3;2;9 24 pathaction!4_0;3;2;9,1990
Consider method^2_0;1,1603 1603 m9_bring_tent
0;1 13 pathaction!2_0;1,382
Consider method^4_0;3;2;2,1150 1150 __UNIQUE-replacement_334
0;3;2;2 41 pathaction!4_0;3;2;2,1989


CHECKING primitive solution of length 39 ...
true 42 __method_precondition_m14_everyone_go_hiking_14_precondition[couple1,guy1,girl1,place0;]
true 15 __method_precondition_m9_bring_tent_9_precondition[tent1,place0;]
true 66 nop[;]
true 23 __method_precondition_m11_bring_cars_11_precondition[car1,place0,car2;]
true 17 nop[;]
true 54 __method_precondition_m0_trip_to1_0_precondition[couple1,guy1,girl1,place0;]
true 52 __method_precondition_m2_trip_to2_2_precondition[place0,place1;]
true 65 __method_precondition_m3_trip_to2_3_precondition[place1,place0,car3,couple1,car2,tent2,guy1,girl1;]
true 22 drive_tent[guy1,place0,place1,car3,tent2;]
true 56 drive[girl1,place0,place1,car2;]
true 2 put_up[guy1,place1,tent2;]
true 32 drive_passenger[girl1,place1,place0,car2,guy1;]
true 27 __method_precondition_m5_walk_everyone_5_precondition[girl1,couple1,place1,place0,guy1;]
true 58 walk_together[tent2,place1,guy1,place0,girl1,couple1;]
true 55 __method_precondition_m5_walk_everyone_5_precondition[girl2,couple2,place1,place0,guy2;]
true 31 walk_together[tent2,place1,guy2,place0,girl2,couple2;]
true 38 __method_precondition_m5_walk_everyone_5_precondition[girl0,couple0,place1,place0,guy0;]
true 67 walk_together[tent2,place1,guy0,place0,girl0,couple0;]
true 29 nop[;]
true 62 put_down[girl1,place1,tent2;]
true 34 drive_passenger[guy1,place1,place0,car3,girl1;]
true 10 drive[guy1,place0,place1,car3;]
true 63 drive[girl1,place0,place1,car2;]
true 33 __method_precondition_m3_trip_to2_3_precondition[place2,place1,car3,couple1,car2,tent2,guy1,girl1;]
true 39 drive_tent[guy1,place1,place2,car3,tent2;]
true 68 drive[girl1,place1,place2,car2;]
true 36 put_up[guy1,place2,tent2;]
true 6 drive_passenger[girl1,place2,place1,car2,guy1;]
true 64 __method_precondition_m5_walk_everyone_5_precondition[girl2,couple2,place2,place1,guy2;]
true 1 walk_together[tent2,place2,guy2,place1,girl2,couple2;]
true 49 __method_precondition_m5_walk_everyone_5_precondition[girl0,couple0,place2,place1,guy0;]
true 18 walk_together[tent2,place2,guy0,place1,girl0,couple0;]
true 43 __method_precondition_m5_walk_everyone_5_precondition[girl1,couple1,place2,place1,guy1;]
true 26 walk_together[tent2,place2,guy1,place1,girl1,couple1;]
true 11 nop[;]
true 30 put_down[girl1,place2,tent2;]
true 44 drive_passenger[guy1,place2,place1,car3,girl1;]
true 7 drive[guy1,place1,place2,car3;]
true 51 drive[girl1,place1,place2,car2;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 275561544
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 54
number of actions                    = 2231
number of abstract actions           = 599
number of primitive actions          = 1632
number of methods                    = 2020
number of primitive shop actions     = 917
number of primitive non-shop actions = 715
size of largest method               = 10
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 55612
number of clauses               = 289910
average size of clauses         = 3.550902004070229
number of assert                = 23
number of horn                  = 275492
K offset                        = 0
K chosen value                  = 8
state formula                   = 45237
method children clauses         = 0
number of paths                 = 116
maximum plan length             = 116
number of decomposition clauses = 244673
number of ordering clauses      = 0
number of state clauses         = 45237
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 12458
============ parsing ============
total                         = 1055
file parser                   = 588
sort expansion                = 191
closed world assumption       = 81
inherit preconditions         = 0
shop methods                  = 15
eliminate identical variables = 71
strip domain of hybridity     = 3
flatten formula               = 104
============ preprocessing ============
total                                      = 3716
compile negative preconditions             = 42
compile unit methods                       = 0
split parameter                            = 30
expand choiceless abstract tasks           = 116
compile methods with identical tasks       = 166
removing unnecessary predicates            = 618
lifted reachabiltiy analysis               = 68
grounded planning graph analysis           = 1351
grounded task decomposition graph analysis = 1023
grounding                                  = 286
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 327
============ sat ============
total                                        = 5490
generate formula                             = 4125
generate path decomposition tree             = 568
normalise path decomposition tree            = 200
sog optimisation                             = 181
translate path decomposition tree to clauses = 1823
generate state formula                       = 3961
generate state invariant formula             = 53
transform to DIMACS                          = 686
SAT solver                                   = 300
SAT solver for K=0003                        = 20
SAT solver for K=0004                        = 20
SAT solver for K=0005                        = 30
SAT solver for K=0006                        = 50
SAT solver for K=0007                        = 70
SAT solver for K=0008                        = 110

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="1632";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="599";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="275561544";"40 sat:20:state formula"="45237";"40 sat:01:number of variables"="55612";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="116";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="2020";"30 problem:07:number of primitive shop actions"="917";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="2231";"30 problem:08:number of primitive non-shop actions"="715";"30 problem:02:number of predicates"="54";"40 sat:03:number of horn"="275492";"40 sat:15:K chosen value"="8";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="10";"40 sat:03:average size of clauses"="3.550902004070229";"40 sat:02:number of clauses"="289910";"40 sat:50:number of state clauses"="45237";"40 sat:03:number of assert"="23";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="116";"40 sat:50:number of decomposition clauses"="244673";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="588";"01 parsing:08:flatten formula"="104";"40 sat:41:SAT solver for K=0004"="20";"40 sat:00:total"="5490";"40 sat:16:generate state formula"="3961";"40 sat:20:transform to DIMACS"="686";"40 sat:11:generate path decomposition tree"="568";"02 preprocessing:07:compile methods with identical tasks"="166";"01 parsing:07:strip domain of hybridity"="3";"40 sat:41:SAT solver for K=0008"="110";"02 preprocessing:08:removing unnecessary predicates"="618";"01 parsing:03:closed world assumption"="81";"02 preprocessing:11:lifted reachabiltiy analysis"="68";"01 parsing:02:sort expansion"="191";"40 sat:12:normalise path decomposition tree"="200";"40 sat:40:SAT solver"="300";"01 parsing:00:total"="1055";"40 sat:10:generate formula"="4125";"40 sat:41:SAT solver for K=0005"="30";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="42";"00 total:00:total"="12458";"40 sat:13:sog optimisation"="181";"02 preprocessing:12:grounded planning graph analysis"="1351";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1023";"40 sat:41:SAT solver for K=0006"="50";"02 preprocessing:04:split parameter"="30";"01 parsing:05:shop methods"="15";"10 search preparation:02:compute state invariants"="327";"01 parsing:06:eliminate identical variables"="71";"40 sat:15:translate path decomposition tree to clauses"="1823";"02 preprocessing:05:expand choiceless abstract tasks"="116";"40 sat:41:SAT solver for K=0003"="20";"40 sat:17:generate state invariant formula"="53";"02 preprocessing:00:total"="3716";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="286";"40 sat:41:SAT solver for K=0007"="70"
#!verify __method_precondition_m14_everyone_go_hiking_14_precondition[couple1,guy1,girl1,place0];__method_precondition_m9_bring_tent_9_precondition[tent1,place0];nop[];__method_precondition_m11_bring_cars_11_precondition[car1,place0,car2];nop[];__method_precondition_m0_trip_to1_0_precondition[couple1,guy1,girl1,place0];__method_precondition_m2_trip_to2_2_precondition[place0,place1];__method_precondition_m3_trip_to2_3_precondition[place1,place0,car3,couple1,car2,tent2,guy1,girl1];drive_tent[guy1,place0,place1,car3,tent2];drive[girl1,place0,place1,car2];put_up[guy1,place1,tent2];drive_passenger[girl1,place1,place0,car2,guy1];__method_precondition_m5_walk_everyone_5_precondition[girl1,couple1,place1,place0,guy1];walk_together[tent2,place1,guy1,place0,girl1,couple1];__method_precondition_m5_walk_everyone_5_precondition[girl2,couple2,place1,place0,guy2];walk_together[tent2,place1,guy2,place0,girl2,couple2];__method_precondition_m5_walk_everyone_5_precondition[girl0,couple0,place1,place0,guy0];walk_together[tent2,place1,guy0,place0,girl0,couple0];nop[];put_down[girl1,place1,tent2];drive_passenger[guy1,place1,place0,car3,girl1];drive[guy1,place0,place1,car3];drive[girl1,place0,place1,car2];__method_precondition_m3_trip_to2_3_precondition[place2,place1,car3,couple1,car2,tent2,guy1,girl1];drive_tent[guy1,place1,place2,car3,tent2];drive[girl1,place1,place2,car2];put_up[guy1,place2,tent2];drive_passenger[girl1,place2,place1,car2,guy1];__method_precondition_m5_walk_everyone_5_precondition[girl2,couple2,place2,place1,guy2];walk_together[tent2,place2,guy2,place1,girl2,couple2];__method_precondition_m5_walk_everyone_5_precondition[girl0,couple0,place2,place1,guy0];walk_together[tent2,place2,guy0,place1,girl0,couple0];__method_precondition_m5_walk_everyone_5_precondition[girl1,couple1,place2,place1,guy1];walk_together[tent2,place2,guy1,place1,girl1,couple1];nop[];put_down[girl1,place2,tent2];drive_passenger[guy1,place2,place1,car3,girl1];drive[guy1,place1,place2,car3];drive[girl1,place1,place2,car2]
==>
0 __method_precondition_m14_everyone_go_hiking_14_precondition couple1 guy1 girl1 place0 
1 __method_precondition_m9_bring_tent_9_precondition tent1 place0 
2 nop  
3 __method_precondition_m11_bring_cars_11_precondition car1 place0 car2 
4 nop  
5 __method_precondition_m0_trip_to1_0_precondition couple1 guy1 girl1 place0 
6 __method_precondition_m2_trip_to2_2_precondition place0 place1 
7 __method_precondition_m3_trip_to2_3_precondition place1 place0 car3 couple1 car2 tent2 guy1 girl1 
8 drive_tent guy1 place0 place1 car3 tent2 
9 drive girl1 place0 place1 car2 
10 put_up guy1 place1 tent2 
11 drive_passenger girl1 place1 place0 car2 guy1 
12 __method_precondition_m5_walk_everyone_5_precondition girl1 couple1 place1 place0 guy1 
13 walk_together tent2 place1 guy1 place0 girl1 couple1 
14 __method_precondition_m5_walk_everyone_5_precondition girl2 couple2 place1 place0 guy2 
15 walk_together tent2 place1 guy2 place0 girl2 couple2 
16 __method_precondition_m5_walk_everyone_5_precondition girl0 couple0 place1 place0 guy0 
17 walk_together tent2 place1 guy0 place0 girl0 couple0 
18 nop  
19 put_down girl1 place1 tent2 
20 drive_passenger guy1 place1 place0 car3 girl1 
21 drive guy1 place0 place1 car3 
22 drive girl1 place0 place1 car2 
23 __method_precondition_m3_trip_to2_3_precondition place2 place1 car3 couple1 car2 tent2 guy1 girl1 
24 drive_tent guy1 place1 place2 car3 tent2 
25 drive girl1 place1 place2 car2 
26 put_up guy1 place2 tent2 
27 drive_passenger girl1 place2 place1 car2 guy1 
28 __method_precondition_m5_walk_everyone_5_precondition girl2 couple2 place2 place1 guy2 
29 walk_together tent2 place2 guy2 place1 girl2 couple2 
30 __method_precondition_m5_walk_everyone_5_precondition girl0 couple0 place2 place1 guy0 
31 walk_together tent2 place2 guy0 place1 girl0 couple0 
32 __method_precondition_m5_walk_everyone_5_precondition girl1 couple1 place2 place1 guy1 
33 walk_together tent2 place2 guy1 place1 girl1 couple1 
34 nop  
35 put_down girl1 place2 tent2 
36 drive_passenger guy1 place2 place1 car3 girl1 
37 drive guy1 place1 place2 car3 
38 drive girl1 place1 place2 car2 
root 51
39 bring_tent place0  -> m9_bring_tent 1 2
40 drive girl1 place0 place1 car2  -> __UNIQUE-replacement_335 22
41 trip_to2 couple1 place1 place2  -> m3_trip_to2 23 24 45 26 27 56 35 36 37 44
42 walk_everyone tent2 place1 place0  -> m5_walk_everyone 12 13 54
43 everyone_go_hiking place2  -> <m14_everyone_go_hiking;prepare_trip[place0];m6_prepare_trip;1;0,-1,-2,2> 0 39 57 50
44 drive girl1 place1 place2 car2  -> __UNIQUE-replacement_3 38
45 drive girl1 place1 place2 car2  -> __UNIQUE-replacement_2 25
46 walk_everyone tent2 place2 place1  -> m5_walk_everyone 32 33 53
47 walk_everyone tent2 place1 place0  -> m4_walk_everyone 18
48 trip_to2 couple1 place0 place1  -> m3_trip_to2 7 8 52 10 11 42 19 20 21 40
49 walk_everyone tent2 place1 place0  -> m5_walk_everyone 16 17 47
50 trip_to1 couple1 place2  -> <m0_trip_to1;trip_to2[couple1,place0,place2];m2_trip_to2;1;0,-1,-2,-3> 5 6 48 41
51 __choicelessATCompilation__top_1  -> __top_1 43
52 drive girl1 place0 place1 car2  -> __UNIQUE-replacement_334 9
53 walk_everyone tent2 place2 place1  -> m4_walk_everyone 34
54 walk_everyone tent2 place1 place0  -> m5_walk_everyone 14 15 49
55 walk_everyone tent2 place2 place1  -> m5_walk_everyone 30 31 46
56 walk_everyone tent2 place2 place1  -> m5_walk_everyone 28 29 55
57 bring_cars place0  -> m11_bring_cars 3 4

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 13.308 MEMPEAK_KBS 435693.568
