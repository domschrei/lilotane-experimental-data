PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/Elevator/domain.hddl instances/Elevator/p16.hddl"


Planner Configuration
=====================
Domain: instances/Elevator/domain.hddl
Problem: instances/Elevator/p16.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p16.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 48
Compiling negative preconditions ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 48
Compiling split parameters ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 48
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 48
Grounded planning graph ... done in 396ms.
	Number of Grounded Actions 2209
	Number of Grounded Literals 624
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 48
Two Way TDG ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 48
Grounding ... done.
	number of abstract tasks = 98
	number of tasks = 2028
	number of decomposition methods = 1184
	number of predicates = 624
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 1184
	number of epsilon methods = 0
	number of primitive tasks = 1930
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 98
	number of tasks = 2028
	number of decomposition methods = 1184
	number of predicates = 96
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 1184
	number of epsilon methods = 0
	number of primitive tasks = 1930
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 149ms.
	Number of Grounded Actions 1390
	Number of Grounded Literals 87
	number of abstract tasks = 71
	number of tasks = 1461
	number of decomposition methods = 851
	number of predicates = 96
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 71
	number of tasks = 1461
	number of decomposition methods = 851
	number of predicates = 96
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 71
	number of tasks = 1461
	number of decomposition methods = 851
	number of predicates = 96
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 71
	number of tasks = 1461
	number of decomposition methods = 852
	number of predicates = 96
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 71
	number of tasks = 1461
	number of decomposition methods = 852
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 74ms.
	Number of Grounded Actions 1390
	Number of Grounded Literals 87
	number of abstract tasks = 71
	number of tasks = 1461
	number of decomposition methods = 852
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 71
	number of tasks = 1461
	number of decomposition methods = 851
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 71
	number of tasks = 1461
	number of decomposition methods = 851
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 71
	number of tasks = 1461
	number of decomposition methods = 852
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 72
	number of tasks = 1462
	number of decomposition methods = 853
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 72
	number of tasks = 1462
	number of decomposition methods = 853
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 851
	number of epsilon methods = 0
	number of primitive tasks = 1390
	number of constants = 0
Tasks 1390 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771674ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854771535
done
initial PDT has 20 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 14 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 11223
Size 11223 at 0/1390
Size 11068 at 500/1390
Size 10494 at 1000/1390
Size 8355
Size 8355 at 0/1390
Size 7353 at 500/1390
Size 3957 at 1000/1390
Size 3833
Size 3833 at 0/1390
Size 761 at 500/1390
Size 679 at 1000/1390
Size 477
Size 477 at 0/1390
Size 345 at 500/1390
Size 317 at 1000/1390
Size 317
Size 317 at 0/1390
Size 317 at 500/1390
Size 317 at 1000/1390
Size 317
Invariant time: 0.349
Number of invariants: 317
Invariant Clauses 4755
NUMBER OF CLAUSES 35532
NUMBER OF STATE CLAUSES 9664
NUMBER OF DECOMPOSITION CLAUSES 25868
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 27.2% 72.8% 0.0% 
NUMBER OF PATHS 14
Starting cryptominisat5.5
Setting starttime of solver to 1604479640332
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 34 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 20
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770251
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 8559
NUMBER OF CLAUSES 79963
NUMBER OF STATE CLAUSES 18663
NUMBER OF DECOMPOSITION CLAUSES 61300
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 23.34% 76.66% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat5.5
Setting starttime of solver to 1604479640975
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 52 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 42 leafs
SHOP LEAFS 30
Assignment implications
Still waiting ... running for 116 will abort at 9223372036854769572
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 13631
NUMBER OF CLAUSES 116261
NUMBER OF STATE CLAUSES 29178
NUMBER OF DECOMPOSITION CLAUSES 87083
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 25.1% 74.9% 0.0% 
NUMBER OF PATHS 42
Starting cryptominisat5.5
Setting starttime of solver to 1604479641755
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 74 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 62 leafs
SHOP LEAFS 42
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768921
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 19971
NUMBER OF CLAUSES 158026
NUMBER OF STATE CLAUSES 41957
NUMBER OF DECOMPOSITION CLAUSES 116069
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 26.55% 73.45% 0.0% 
NUMBER OF PATHS 62
Starting cryptominisat5.5
Setting starttime of solver to 1604479642474
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 100 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 86 leafs
SHOP LEAFS 56
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768161
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 27579
NUMBER OF CLAUSES 205258
NUMBER OF STATE CLAUSES 57000
NUMBER OF DECOMPOSITION CLAUSES 148258
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 27.77% 72.23% 0.0% 
NUMBER OF PATHS 86
Starting cryptominisat5.5
Setting starttime of solver to 1604479643244
Command exited with non-zero status 20
0.06 0.00

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 130 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854767429
done
PDT has 114 leafs
SHOP LEAFS 72
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 36455
NUMBER OF CLAUSES 257957
NUMBER OF STATE CLAUSES 74307
NUMBER OF DECOMPOSITION CLAUSES 183650
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 28.810000000000002% 71.19% 0.0% 
NUMBER OF PATHS 114
Starting cryptominisat5.5
Setting starttime of solver to 1604479644171
Command exited with non-zero status 20
0.08 0.00

Time command gave the following runtime for the solver: 80
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... done
initial PDT has 164 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 146 leafs
SHOP LEAFS 90
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854766308
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 46599
NUMBER OF CLAUSES 316123
NUMBER OF STATE CLAUSES 93878
NUMBER OF DECOMPOSITION CLAUSES 222245
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.7% 70.3% 0.0% 
NUMBER OF PATHS 146
Starting cryptominisat5.5
Setting starttime of solver to 1604479645173
Command exited with non-zero status 20
0.17 0.00

Time command gave the following runtime for the solver: 170
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... done
initial PDT has 202 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 182 leafs
SHOP LEAFS 110
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854765369
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 58011
NUMBER OF CLAUSES 379756
NUMBER OF STATE CLAUSES 115713
NUMBER OF DECOMPOSITION CLAUSES 264043
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 30.47% 69.53% 0.0% 
NUMBER OF PATHS 182
Starting cryptominisat5.5
Setting starttime of solver to 1604479646228
Command exited with non-zero status 20
0.28 0.00

Time command gave the following runtime for the solver: 280
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 12
Generating initial PDT ... done
initial PDT has 244 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854764218
done
PDT has 222 leafs
SHOP LEAFS 132
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 70691
NUMBER OF CLAUSES 448856
NUMBER OF STATE CLAUSES 139812
NUMBER OF DECOMPOSITION CLAUSES 309044
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.150000000000002% 68.85000000000001% 0.0% 
NUMBER OF PATHS 222
Starting cryptominisat5.5
Setting starttime of solver to 1604479647540
Command exited with non-zero status 20
5.71 0.00

Time command gave the following runtime for the solver: 5710
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 13
Generating initial PDT ... done
initial PDT has 290 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 104 will abort at 9223372036854757314
done
PDT has 266 leafs
SHOP LEAFS 156
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 84639
NUMBER OF CLAUSES 523423
NUMBER OF STATE CLAUSES 166175
NUMBER OF DECOMPOSITION CLAUSES 357248
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.75% 68.25% 0.0% 
NUMBER OF PATHS 266
Starting cryptominisat5.5
Setting starttime of solver to 1604479654622
Command exited with non-zero status 20
56.96 0.09

Time command gave the following runtime for the solver: 57050
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 14
Generating initial PDT ... done
initial PDT has 340 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854698945
done
PDT has 314 leafs
SHOP LEAFS 182
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 99855
NUMBER OF CLAUSES 603457
NUMBER OF STATE CLAUSES 194802
NUMBER OF DECOMPOSITION CLAUSES 408655
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 32.28% 67.72% 0.0% 
NUMBER OF PATHS 314
Starting cryptominisat5.5
Setting starttime of solver to 1604479713218
Still waiting ... running for 60401 will abort at 9223372036854698945
Command exited with non-zero status 20
64.00 0.09

Time command gave the following runtime for the solver: 64090
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 15
Generating initial PDT ... done
initial PDT has 394 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854633199
done
PDT has 366 leafs
SHOP LEAFS 210
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 116339
NUMBER OF CLAUSES 688958
NUMBER OF STATE CLAUSES 225693
NUMBER OF DECOMPOSITION CLAUSES 463265
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 32.76% 67.24% 0.0% 
NUMBER OF PATHS 366
Starting cryptominisat5.5
Setting starttime of solver to 1604479778949
Still waiting ... running for 60202 will abort at 9223372036854633199
Still waiting ... running for 120242 will abort at 9223372036854633199
Command exited with non-zero status 20
129.42 0.08

Time command gave the following runtime for the solver: 129499
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 16
Generating initial PDT ... done
initial PDT has 452 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854502116
done
PDT has 422 leafs
SHOP LEAFS 240
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 134091
NUMBER OF CLAUSES 779926
NUMBER OF STATE CLAUSES 258848
NUMBER OF DECOMPOSITION CLAUSES 521078
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 33.19% 66.81% 0.0% 
NUMBER OF PATHS 422
Starting cryptominisat5.5
Setting starttime of solver to 1604479910159
Command exited with non-zero status 10
12.95 0.06

Time command gave the following runtime for the solver: 13010
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^10_0;3;1;3;3;3;3;3;2;2,379 379 m1_do_check_floor
0;3;1;3;3;3;3;3;2;2 178 pathaction!10_0;3;1;3;3;3;3;3;2;2,1017
Consider method^3_0;3;1,594 594 m10_do_throw_all
0;3;1 228 pathaction!3_0;3;1,240
Consider method^2_0;2,734 734 m5_do_take_all
0;2 345 pathaction!2_0;2,318
Consider method^9_0;2;3;3;3;3;3;3;3,843 843 m5_do_take_all
0;2;3;3;3;3;3;3;3 60 pathaction!9_0;2;3;3;3;3;3;3;3,309
Consider method^9_0;3;1;3;3;3;3;3;3,596 596 m9_do_throw_all
0;3;1;3;3;3;3;3;3 263 pathaction!9_0;3;1;3;3;3;3;3;3,250
Consider method^14_0;2;3;3;3;3;3;3;3;3;3;3;2;2,648 648 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;3;3;2;2 5 pathaction!14_0;2;3;3;3;3;3;3;3;3;3;3;2;2,1016
Consider method^0_,852 852 __top_3
 333 pathaction!0_,1461
Consider method^15_0;3;1;3;3;3;3;3;3;3;3;3;3;2;2,717 717 m1_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;3;3;2;2 249 pathaction!15_0;3;1;3;3;3;3;3;3;3;3;3;3;2;2,1020
Consider method^6_0;3;1;3;3;3,214 214 m9_do_throw_all
0;3;1;3;3;3 47 pathaction!6_0;3;1;3;3;3,256
Consider method^7_0;3;1;3;3;2;2,733 733 m1_do_check_floor
0;3;1;3;3;2;2 8 pathaction!7_0;3;1;3;3;2;2,1023
Consider method^15_0;3;1;3;3;3;3;3;3;3;3;2;2;2;2,786 786 m1_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;2;2;2;2 168 pathaction!15_0;3;1;3;3;3;3;3;3;3;3;2;2;2;2,1024
Consider method^11_0;3;1;3;3;3;3;3;3;3;3,271 271 m10_do_throw_all
0;3;1;3;3;3;3;3;3;3;3 262 pathaction!11_0;3;1;3;3;3;3;3;3;3;3,239
Consider method^8_0;2;3;3;3;3;3;3,351 351 m5_do_take_all
0;2;3;3;3;3;3;3 89 pathaction!8_0;2;3;3;3;3;3;3,316
Consider method^13_0;2;3;3;3;3;3;3;3;3;3;2;2,491 491 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;3;2;2 278 pathaction!13_0;2;3;3;3;3;3;3;3;3;3;2;2,1019
Consider method^14_0;3;1;3;3;3;3;3;3;3;3;2;2;2,205 205 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;2;2;2 347 pathaction!14_0;3;1;3;3;3;3;3;3;3;3;2;2;2,1024
Consider method^11_0;3;1;3;3;3;3;3;3;3;2,393 393 m3_do_check_floor
0;3;1;3;3;3;3;3;3;3;2 316 pathaction!11_0;3;1;3;3;3;3;3;3;3;2,1006
Consider method^11_0;3;1;3;3;3;3;3;3;2;2,50 50 m1_do_check_floor
0;3;1;3;3;3;3;3;3;2;2 36 pathaction!11_0;3;1;3;3;3;3;3;3;2;2,1004
Consider method^4_0;2;3;3,768 768 m5_do_take_all
0;2;3;3 254 pathaction!4_0;2;3;3,300
Consider method^11_0;2;3;3;3;3;3;3;3;2;2,465 465 m1_do_check_floor
0;2;3;3;3;3;3;3;3;2;2 232 pathaction!11_0;2;3;3;3;3;3;3;3;2;2,1018
Consider method^9_0;3;1;3;3;3;2;2;2,250 250 m1_do_check_floor
0;3;1;3;3;3;2;2;2 33 pathaction!9_0;3;1;3;3;3;2;2;2,1008
Consider method^10_0;2;3;3;3;3;3;3;3;3,545 545 m6_do_take_all
0;2;3;3;3;3;3;3;3;3 137 pathaction!10_0;2;3;3;3;3;3;3;3;3,313
Consider method^11_0;2;3;3;3;3;3;3;2;2;2,2 2 m1_do_check_floor
0;2;3;3;3;3;3;3;2;2;2 292 pathaction!11_0;2;3;3;3;3;3;3;2;2;2,1014
Consider method^4_0;2;3;2,513 513 m3_do_check_floor
0;2;3;2 368 pathaction!4_0;2;3;2,1005
Consider method^5_0;3;1;2;2,626 626 m1_do_check_floor
0;3;1;2;2 139 pathaction!5_0;3;1;2;2,1022
Consider method^10_0;2;3;3;3;3;3;3;3;2,132 132 m3_do_check_floor
0;2;3;3;3;3;3;3;3;2 97 pathaction!10_0;2;3;3;3;3;3;3;3;2,1018
Consider method^14_0;3;1;3;3;3;3;3;3;3;3;3;3;3,448 448 m8_do_throw_all
0;3;1;3;3;3;3;3;3;3;3;3;3;3 268 pathaction!14_0;3;1;3;3;3;3;3;3;3;3;3;3;3,253
Consider method^12_0;3;1;3;3;3;3;3;3;3;2;2,344 344 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;2;2 114 pathaction!12_0;3;1;3;3;3;3;3;3;3;2;2,1006
Consider method^13_0;3;1;3;3;3;3;3;3;3;2;2;2,514 514 m1_do_check_floor
0;3;1;3;3;3;3;3;3;3;2;2;2 17 pathaction!13_0;3;1;3;3;3;3;3;3;3;2;2;2,1006
Consider method^10_0;2;3;3;3;3;3;2;2;2,143 143 m1_do_check_floor
0;2;3;3;3;3;3;2;2;2 326 pathaction!10_0;2;3;3;3;3;3;2;2;2,1021
Consider method^12_0;3;1;3;3;3;3;3;3;3;3;3,483 483 m9_do_throw_all
0;3;1;3;3;3;3;3;3;3;3;3 192 pathaction!12_0;3;1;3;3;3;3;3;3;3;3;3,257
Consider method^7_0;2;3;3;3;3;2,114 114 m3_do_check_floor
0;2;3;3;3;3;2 353 pathaction!7_0;2;3;3;3;3;2,1012
Consider method^7_0;3;1;3;2;2;2,642 642 m1_do_check_floor
0;3;1;3;2;2;2 76 pathaction!7_0;3;1;3;2;2;2,1025
Consider method^5_0;2;3;3;3,362 362 m5_do_take_all
0;2;3;3;3 279 pathaction!5_0;2;3;3;3,304
Consider method^5_0;2;3;2;2,200 200 m1_do_check_floor
0;2;3;2;2 255 pathaction!5_0;2;3;2;2,1005
Consider method^4_0;3;1;2,177 177 m2_do_check_floor
0;3;1;2 88 pathaction!4_0;3;1;2,1022
Consider method^8_0;2;3;3;3;3;3;2,54 54 m3_do_check_floor
0;2;3;3;3;3;3;2 359 pathaction!8_0;2;3;3;3;3;3;2,1021
Consider method^6_0;2;3;3;3;3,487 487 m6_do_take_all
0;2;3;3;3;3 31 pathaction!6_0;2;3;3;3;3,310
Consider method^13_0;2;3;3;3;3;3;3;3;3;3;3;3,609 609 m5_do_take_all
0;2;3;3;3;3;3;3;3;3;3;3;3 231 pathaction!13_0;2;3;3;3;3;3;3;3;3;3;3;3,311
Consider method^9_0;3;1;3;3;3;3;3;2,215 215 m2_do_check_floor
0;3;1;3;3;3;3;3;2 221 pathaction!9_0;3;1;3;3;3;3;3;2,1017
Consider method^3_0;2;3,374 374 m6_do_take_all
0;2;3 70 pathaction!3_0;2;3,306
Consider method^6_0;3;1;3;2;2,760 760 m2_do_check_floor
0;3;1;3;2;2 39 pathaction!6_0;3;1;3;2;2,1025
Consider method^11_0;2;3;3;3;3;3;3;3;3;3,477 477 m6_do_take_all
0;2;3;3;3;3;3;3;3;3;3 109 pathaction!11_0;2;3;3;3;3;3;3;3;3;3,305
Consider method^10_0;3;1;3;3;3;3;3;3;3,39 39 m9_do_throw_all
0;3;1;3;3;3;3;3;3;3 184 pathaction!10_0;3;1;3;3;3;3;3;3;3,237
Consider method^4_0;3;1;3,582 582 m9_do_throw_all
0;3;1;3 75 pathaction!4_0;3;1;3,255
Consider method^15_0;3;1;3;3;3;3;3;3;3;3;3;2;2;2,821 821 m1_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;3;2;2;2 227 pathaction!15_0;3;1;3;3;3;3;3;3;3;3;3;2;2;2,1013
Consider method^5_0;3;1;3;2,241 241 m2_do_check_floor
0;3;1;3;2 167 pathaction!5_0;3;1;3;2,1025
Consider method^8_0;3;1;3;3;3;3;2,803 803 m2_do_check_floor
0;3;1;3;3;3;3;2 372 pathaction!8_0;3;1;3;3;3;3;2,1003
Consider method^14_0;2;3;3;3;3;3;3;3;3;3;3;3;2,684 684 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;3;3;3;2 355 pathaction!14_0;2;3;3;3;3;3;3;3;3;3;3;3;2,1007
Consider method^6_0;2;3;3;3;2,48 48 m3_do_check_floor
0;2;3;3;3;2 208 pathaction!6_0;2;3;3;3;2,1015
Consider method^13_0;2;3;3;3;3;3;3;3;3;3;3;2,336 336 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;3;3;2 366 pathaction!13_0;2;3;3;3;3;3;3;3;3;3;3;2,1016
Consider method^12_0;2;3;3;3;3;3;3;3;3;3;3,761 761 m5_do_take_all
0;2;3;3;3;3;3;3;3;3;3;3 77 pathaction!12_0;2;3;3;3;3;3;3;3;3;3;3,314
Consider method^11_0;2;3;3;3;3;3;3;3;3;2,439 439 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;2 160 pathaction!11_0;2;3;3;3;3;3;3;3;3;2,1010
Consider method^14_0;3;1;3;3;3;3;3;3;3;3;3;2;2,171 171 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;3;2;2 328 pathaction!14_0;3;1;3;3;3;3;3;3;3;3;3;2;2,1013
Consider method^7_0;3;1;3;3;3;3,777 777 m10_do_throw_all
0;3;1;3;3;3;3 112 pathaction!7_0;3;1;3;3;3;3,241
Consider method^8_0;2;3;3;3;3;2;2,712 712 m1_do_check_floor
0;2;3;3;3;3;2;2 58 pathaction!8_0;2;3;3;3;3;2;2,1012
Consider method^1_0,375 375 m0_do_problem
0 288 pathaction!1_0,492
Consider method^12_0;3;1;3;3;3;3;3;3;3;3;2,569 569 m3_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;2 127 pathaction!12_0;3;1;3;3;3;3;3;3;3;3;2,1024
Consider method^5_0;2;3;3;2,388 388 m3_do_check_floor
0;2;3;3;2 193 pathaction!5_0;2;3;3;2,1009
Consider method^7_0;3;1;3;3;3;2,554 554 m2_do_check_floor
0;3;1;3;3;3;2 273 pathaction!7_0;3;1;3;3;3;2,1008
Consider method^10_0;3;1;3;3;3;3;3;3;2,552 552 m2_do_check_floor
0;3;1;3;3;3;3;3;3;2 86 pathaction!10_0;3;1;3;3;3;3;3;3;2,1004
Consider method^8_0;3;1;3;3;3;2;2,386 386 m2_do_check_floor
0;3;1;3;3;3;2;2 48 pathaction!8_0;3;1;3;3;3;2;2,1008
Consider method^7_0;2;3;3;3;2;2,765 765 m1_do_check_floor
0;2;3;3;3;2;2 119 pathaction!7_0;2;3;3;3;2;2,1015
Consider method^3_0;2;2,657 657 m3_do_check_floor
0;2;2 189 pathaction!3_0;2;2,1011
Consider method^2_0;3,72 72 m7_do_start_throw_all
0;3 275 pathaction!2_0;3,762
Consider method^7_0;2;3;3;3;3;3,109 109 m5_do_take_all
0;2;3;3;3;3;3 175 pathaction!7_0;2;3;3;3;3;3,307
Consider method^2_0;1,733 733 m1_do_check_floor
0;1 166 pathaction!2_0;1,1023
Consider method^13_0;3;1;3;3;3;3;3;3;3;3;3;2,618 618 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;3;2 303 pathaction!13_0;3;1;3;3;3;3;3;3;3;3;3;2,1013
Consider method^8_0;3;1;3;3;3;3;3,464 464 m10_do_throw_all
0;3;1;3;3;3;3;3 118 pathaction!8_0;3;1;3;3;3;3;3,236
Consider method^14_0;2;3;3;3;3;3;3;3;3;3;3;3;3,313 313 m4_do_take_all
0;2;3;3;3;3;3;3;3;3;3;3;3;3 204 pathaction!14_0;2;3;3;3;3;3;3;3;3;3;3;3;3,302
Consider method^14_0;3;1;3;3;3;3;3;3;3;3;3;3;2,243 243 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;3;3;2 132 pathaction!14_0;3;1;3;3;3;3;3;3;3;3;3;3;2,1020
Consider method^12_0;2;3;3;3;3;3;3;3;3;2;2,834 834 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;2;2 121 pathaction!12_0;2;3;3;3;3;3;3;3;3;2;2,1010
Consider method^9_0;2;3;3;3;3;3;2;2,535 535 m3_do_check_floor
0;2;3;3;3;3;3;2;2 286 pathaction!9_0;2;3;3;3;3;3;2;2,1021
Consider method^6_0;2;3;3;2;2,617 617 m1_do_check_floor
0;2;3;3;2;2 4 pathaction!6_0;2;3;3;2;2,1009
Consider method^13_0;3;1;3;3;3;3;3;3;3;3;3;3,66 66 m10_do_throw_all
0;3;1;3;3;3;3;3;3;3;3;3;3 42 pathaction!13_0;3;1;3;3;3;3;3;3;3;3;3;3,246
Consider method^9_0;2;3;3;3;3;3;3;2,146 146 m2_do_check_floor
0;2;3;3;3;3;3;3;2 307 pathaction!9_0;2;3;3;3;3;3;3;2,1014
Consider method^13_0;2;3;3;3;3;3;3;3;3;2;2;2,705 705 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;2;2;2 95 pathaction!13_0;2;3;3;3;3;3;3;3;3;2;2;2,1010
Consider method^5_0;3;1;3;3,285 285 m10_do_throw_all
0;3;1;3;3 169 pathaction!5_0;3;1;3;3,258
Consider method^10_0;2;3;3;3;3;3;3;2;2,238 238 m3_do_check_floor
0;2;3;3;3;3;3;3;2;2 191 pathaction!10_0;2;3;3;3;3;3;3;2;2,1014
Consider method^4_0;2;2;2,245 245 m1_do_check_floor
0;2;2;2 201 pathaction!4_0;2;2;2,1011
Consider method^15_0;2;3;3;3;3;3;3;3;3;3;3;3;2;2,517 517 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;3;3;3;2;2 145 pathaction!15_0;2;3;3;3;3;3;3;3;3;3;3;3;2;2,1007
Consider method^9_0;3;1;3;3;3;3;2;2,427 427 m1_do_check_floor
0;3;1;3;3;3;3;2;2 194 pathaction!9_0;3;1;3;3;3;3;2;2,1003
Consider method^13_0;3;1;3;3;3;3;3;3;3;3;2;2,587 587 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;3;2;2 79 pathaction!13_0;3;1;3;3;3;3;3;3;3;3;2;2,1024
Consider method^12_0;2;3;3;3;3;3;3;3;3;3;2,612 612 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;3;2 116 pathaction!12_0;2;3;3;3;3;3;3;3;3;3;2,1019
Consider method^6_0;3;1;3;3;2,825 825 m2_do_check_floor
0;3;1;3;3;2 305 pathaction!6_0;3;1;3;3;2,1023


CHECKING primitive solution of length 164 ...
true 83 __method_precondition_m0_do_problem_0_precondition[f0;]
true 176 __method_precondition_m1_do_check_floor_1_precondition[f0;]
true 190 nop[;]
true 280 __method_precondition_m5_do_take_all_5_precondition[f0,f24,p11;]
true 258 up[f0,f24;]
true 142 __method_precondition_m3_do_check_floor_3_precondition[f24,p11;]
true 330 board[f24,p11;]
true 235 __method_precondition_m1_do_check_floor_1_precondition[f24;]
true 240 nop[;]
true 253 __method_precondition_m6_do_take_all_6_precondition[f24,f2,p7;]
true 306 down[f24,f2;]
true 324 __method_precondition_m3_do_check_floor_3_precondition[f2,p7;]
true 269 board[f2,p7;]
true 375 __method_precondition_m1_do_check_floor_1_precondition[f2;]
true 21 nop[;]
true 185 __method_precondition_m5_do_take_all_5_precondition[f2,f4,p1;]
true 25 up[f2,f4;]
true 343 __method_precondition_m3_do_check_floor_3_precondition[f4,p1;]
true 96 board[f4,p1;]
true 98 __method_precondition_m1_do_check_floor_1_precondition[f4;]
true 186 nop[;]
true 135 __method_precondition_m5_do_take_all_5_precondition[f4,f11,p0;]
true 19 up[f4,f11;]
true 294 __method_precondition_m3_do_check_floor_3_precondition[f11,p0;]
true 161 board[f11,p0;]
true 126 __method_precondition_m1_do_check_floor_1_precondition[f11;]
true 165 nop[;]
true 302 __method_precondition_m6_do_take_all_6_precondition[f11,f1,p12;]
true 314 down[f11,f1;]
true 217 __method_precondition_m3_do_check_floor_3_precondition[f1,p12;]
true 122 board[f1,p12;]
true 140 __method_precondition_m1_do_check_floor_1_precondition[f1;]
true 2 nop[;]
true 226 __method_precondition_m5_do_take_all_5_precondition[f1,f9,p10;]
true 336 up[f1,f9;]
true 179 __method_precondition_m3_do_check_floor_3_precondition[f9,p10;]
true 207 board[f9,p10;]
true 26 __method_precondition_m3_do_check_floor_3_precondition[f9,p8;]
true 308 board[f9,p8;]
true 158 __method_precondition_m1_do_check_floor_1_precondition[f9;]
true 344 nop[;]
true 300 __method_precondition_m5_do_take_all_5_precondition[f9,f10,p5;]
true 51 up[f9,f10;]
true 301 __method_precondition_m2_do_check_floor_2_precondition[f10,p1;]
true 156 depart[f10,p1;]
true 87 __method_precondition_m3_do_check_floor_3_precondition[f10,p5;]
true 28 board[f10,p5;]
true 244 __method_precondition_m1_do_check_floor_1_precondition[f10;]
true 371 nop[;]
true 68 __method_precondition_m5_do_take_all_5_precondition[f10,f25,p2;]
true 18 up[f10,f25;]
true 61 __method_precondition_m3_do_check_floor_3_precondition[f25,p2;]
true 172 board[f25,p2;]
true 171 __method_precondition_m1_do_check_floor_1_precondition[f25;]
true 354 nop[;]
true 233 __method_precondition_m6_do_take_all_6_precondition[f25,f22,p3;]
true 351 down[f25,f22;]
true 329 __method_precondition_m3_do_check_floor_3_precondition[f22,p3;]
true 224 board[f22,p3;]
true 237 __method_precondition_m3_do_check_floor_3_precondition[f22,p13;]
true 222 board[f22,p13;]
true 318 __method_precondition_m1_do_check_floor_1_precondition[f22;]
true 35 nop[;]
true 331 __method_precondition_m6_do_take_all_6_precondition[f22,f7,p14;]
true 195 down[f22,f7;]
true 0 __method_precondition_m3_do_check_floor_3_precondition[f7,p14;]
true 38 board[f7,p14;]
true 183 __method_precondition_m1_do_check_floor_1_precondition[f7;]
true 32 nop[;]
true 218 __method_precondition_m5_do_take_all_5_precondition[f7,f15,p4;]
true 272 up[f7,f15;]
true 236 __method_precondition_m3_do_check_floor_3_precondition[f15,p4;]
true 212 board[f15,p4;]
true 146 __method_precondition_m1_do_check_floor_1_precondition[f15;]
true 1 nop[;]
true 152 __method_precondition_m5_do_take_all_5_precondition[f15,f28,p9;]
true 102 up[f15,f28;]
true 20 __method_precondition_m3_do_check_floor_3_precondition[f28,p9;]
true 123 board[f28,p9;]
true 198 __method_precondition_m1_do_check_floor_1_precondition[f28;]
true 196 nop[;]
true 250 __method_precondition_m4_do_take_all_4_precondition[f28;]
true 241 nop[;]
true 290 __method_precondition_m7_do_start_throw_all_7_precondition[f28;]
true 100 __method_precondition_m10_do_throw_all_10_precondition[f28,f27,p5;]
true 147 down[f28,f27;]
true 261 __method_precondition_m2_do_check_floor_2_precondition[f27,p5;]
true 187 depart[f27,p5;]
true 202 __method_precondition_m1_do_check_floor_1_precondition[f27;]
true 216 nop[;]
true 234 __method_precondition_m9_do_throw_all_9_precondition[f27,f30,p13;]
true 219 up[f27,f30;]
true 131 __method_precondition_m2_do_check_floor_2_precondition[f30,p13;]
true 144 depart[f30,p13;]
true 12 __method_precondition_m2_do_check_floor_2_precondition[f30,p7;]
true 214 depart[f30,p7;]
true 101 __method_precondition_m1_do_check_floor_1_precondition[f30;]
true 348 nop[;]
true 338 __method_precondition_m10_do_throw_all_10_precondition[f30,f0,p10;]
true 243 down[f30,f0;]
true 215 __method_precondition_m2_do_check_floor_2_precondition[f0,p10;]
true 67 depart[f0,p10;]
true 339 __method_precondition_m1_do_check_floor_1_precondition[f0;]
true 130 nop[;]
true 113 __method_precondition_m9_do_throw_all_9_precondition[f0,f16,p0;]
true 93 up[f0,f16;]
true 73 __method_precondition_m2_do_check_floor_2_precondition[f16,p0;]
true 323 depart[f16,p0;]
true 342 __method_precondition_m2_do_check_floor_2_precondition[f16,p11;]
true 22 depart[f16,p11;]
true 297 __method_precondition_m1_do_check_floor_1_precondition[f16;]
true 65 nop[;]
true 349 __method_precondition_m10_do_throw_all_10_precondition[f16,f8,p9;]
true 62 down[f16,f8;]
true 71 __method_precondition_m2_do_check_floor_2_precondition[f8,p9;]
true 107 depart[f8,p9;]
true 55 __method_precondition_m1_do_check_floor_1_precondition[f8;]
true 246 nop[;]
true 9 __method_precondition_m10_do_throw_all_10_precondition[f8,f3,p14;]
true 296 down[f8,f3;]
true 117 __method_precondition_m2_do_check_floor_2_precondition[f3,p14;]
true 24 depart[f3,p14;]
true 230 __method_precondition_m1_do_check_floor_1_precondition[f3;]
true 357 nop[;]
true 110 __method_precondition_m9_do_throw_all_9_precondition[f3,f23,p4;]
true 136 up[f3,f23;]
true 332 __method_precondition_m2_do_check_floor_2_precondition[f23,p4;]
true 277 depart[f23,p4;]
true 15 __method_precondition_m1_do_check_floor_1_precondition[f23;]
true 37 nop[;]
true 16 __method_precondition_m9_do_throw_all_9_precondition[f23,f31,p8;]
true 13 up[f23,f31;]
true 364 __method_precondition_m3_do_check_floor_3_precondition[f31,p6;]
true 238 board[f31,p6;]
true 43 __method_precondition_m2_do_check_floor_2_precondition[f31,p8;]
true 180 depart[f31,p8;]
true 41 __method_precondition_m1_do_check_floor_1_precondition[f31;]
true 80 nop[;]
true 154 __method_precondition_m10_do_throw_all_10_precondition[f31,f14,p2;]
true 309 down[f31,f14;]
true 376 __method_precondition_m3_do_check_floor_3_precondition[f14,p15;]
true 149 board[f14,p15;]
true 7 __method_precondition_m2_do_check_floor_2_precondition[f14,p2;]
true 103 depart[f14,p2;]
true 164 __method_precondition_m2_do_check_floor_2_precondition[f14,p3;]
true 223 depart[f14,p3;]
true 133 __method_precondition_m1_do_check_floor_1_precondition[f14;]
true 120 nop[;]
true 211 __method_precondition_m9_do_throw_all_9_precondition[f14,f19,p12;]
true 210 up[f14,f19;]
true 362 __method_precondition_m2_do_check_floor_2_precondition[f19,p15;]
true 299 depart[f19,p15;]
true 352 __method_precondition_m2_do_check_floor_2_precondition[f19,p12;]
true 153 depart[f19,p12;]
true 57 __method_precondition_m1_do_check_floor_1_precondition[f19;]
true 363 nop[;]
true 182 __method_precondition_m10_do_throw_all_10_precondition[f19,f18,p6;]
true 225 down[f19,f18;]
true 220 __method_precondition_m2_do_check_floor_2_precondition[f18,p6;]
true 163 depart[f18,p6;]
true 317 __method_precondition_m1_do_check_floor_1_precondition[f18;]
true 247 nop[;]
true 257 __method_precondition_m8_do_throw_all_8_precondition[f18;]
true 374 nop[;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 515704712
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 87
number of actions                    = 1462
number of abstract actions           = 72
number of primitive actions          = 1390
number of methods                    = 853
number of primitive shop actions     = 851
number of primitive non-shop actions = 539
size of largest method               = 4
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 187687
number of clauses               = 779926
average size of clauses         = 3.00911112079864
number of assert                = 50
number of horn                  = 718093
K offset                        = 0
K chosen value                  = 16
state formula                   = 258848
method children clauses         = 0
number of paths                 = 422
maximum plan length             = 422
number of decomposition clauses = 521078
number of ordering clauses      = 0
number of state clauses         = 258848
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 289545
============ parsing ============
total                         = 1110
file parser                   = 604
sort expansion                = 192
closed world assumption       = 182
inherit preconditions         = 0
shop methods                  = 41
eliminate identical variables = 48
strip domain of hybridity     = 2
flatten formula               = 40
============ preprocessing ============
total                                      = 2792
compile negative preconditions             = 43
compile unit methods                       = 0
split parameter                            = 39
expand choiceless abstract tasks           = 0
compile methods with identical tasks       = 7
removing unnecessary predicates            = 546
lifted reachabiltiy analysis               = 53
grounded planning graph analysis           = 826
grounded task decomposition graph analysis = 889
grounding                                  = 373
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 426
============ sat ============
total                                        = 282020
generate formula                             = 9630
generate path decomposition tree             = 996
normalise path decomposition tree            = 394
sog optimisation                             = 348
translate path decomposition tree to clauses = 3779
generate state formula                       = 8993
generate state invariant formula             = 456
transform to DIMACS                          = 1667
SAT solver                                   = 270039
SAT solver for K=0004                        = 10
SAT solver for K=0005                        = 20
SAT solver for K=0006                        = 20
SAT solver for K=0007                        = 40
SAT solver for K=0008                        = 60
SAT solver for K=0009                        = 80
SAT solver for K=0010                        = 170
SAT solver for K=0011                        = 280
SAT solver for K=0012                        = 5710
SAT solver for K=0013                        = 57050
SAT solver for K=0014                        = 64090
SAT solver for K=0015                        = 129499
SAT solver for K=0016                        = 13010

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="1390";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="72";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="515704712";"40 sat:20:state formula"="258848";"40 sat:01:number of variables"="187687";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="422";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="853";"30 problem:07:number of primitive shop actions"="851";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="1462";"30 problem:08:number of primitive non-shop actions"="539";"30 problem:02:number of predicates"="87";"40 sat:03:number of horn"="718093";"40 sat:15:K chosen value"="16";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="4";"40 sat:03:average size of clauses"="3.00911112079864";"40 sat:02:number of clauses"="779926";"40 sat:50:number of state clauses"="258848";"40 sat:03:number of assert"="50";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="422";"40 sat:50:number of decomposition clauses"="521078";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="604";"01 parsing:08:flatten formula"="40";"40 sat:41:SAT solver for K=0015"="129499";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="282020";"40 sat:16:generate state formula"="8993";"40 sat:20:transform to DIMACS"="1667";"40 sat:11:generate path decomposition tree"="996";"02 preprocessing:07:compile methods with identical tasks"="7";"01 parsing:07:strip domain of hybridity"="2";"40 sat:41:SAT solver for K=0008"="60";"02 preprocessing:08:removing unnecessary predicates"="546";"01 parsing:03:closed world assumption"="182";"02 preprocessing:11:lifted reachabiltiy analysis"="53";"01 parsing:02:sort expansion"="192";"40 sat:12:normalise path decomposition tree"="394";"40 sat:41:SAT solver for K=0012"="5710";"40 sat:40:SAT solver"="270039";"01 parsing:00:total"="1110";"40 sat:41:SAT solver for K=0016"="13010";"40 sat:10:generate formula"="9630";"40 sat:41:SAT solver for K=0005"="20";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0009"="80";"02 preprocessing:01:compile negative preconditions"="43";"40 sat:41:SAT solver for K=0013"="57050";"00 total:00:total"="289545";"40 sat:41:SAT solver for K=0011"="280";"40 sat:13:sog optimisation"="348";"02 preprocessing:12:grounded planning graph analysis"="826";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="889";"40 sat:41:SAT solver for K=0006"="20";"02 preprocessing:04:split parameter"="39";"01 parsing:05:shop methods"="41";"10 search preparation:02:compute state invariants"="426";"01 parsing:06:eliminate identical variables"="48";"40 sat:15:translate path decomposition tree to clauses"="3779";"02 preprocessing:05:expand choiceless abstract tasks"="0";"40 sat:41:SAT solver for K=0014"="64090";"40 sat:17:generate state invariant formula"="456";"40 sat:41:SAT solver for K=0010"="170";"02 preprocessing:00:total"="2792";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="373";"40 sat:41:SAT solver for K=0007"="40"
#!verify __method_precondition_m0_do_problem_0_precondition[f0];__method_precondition_m1_do_check_floor_1_precondition[f0];nop[];__method_precondition_m5_do_take_all_5_precondition[f0,f24,p11];up[f0,f24];__method_precondition_m3_do_check_floor_3_precondition[f24,p11];board[f24,p11];__method_precondition_m1_do_check_floor_1_precondition[f24];nop[];__method_precondition_m6_do_take_all_6_precondition[f24,f2,p7];down[f24,f2];__method_precondition_m3_do_check_floor_3_precondition[f2,p7];board[f2,p7];__method_precondition_m1_do_check_floor_1_precondition[f2];nop[];__method_precondition_m5_do_take_all_5_precondition[f2,f4,p1];up[f2,f4];__method_precondition_m3_do_check_floor_3_precondition[f4,p1];board[f4,p1];__method_precondition_m1_do_check_floor_1_precondition[f4];nop[];__method_precondition_m5_do_take_all_5_precondition[f4,f11,p0];up[f4,f11];__method_precondition_m3_do_check_floor_3_precondition[f11,p0];board[f11,p0];__method_precondition_m1_do_check_floor_1_precondition[f11];nop[];__method_precondition_m6_do_take_all_6_precondition[f11,f1,p12];down[f11,f1];__method_precondition_m3_do_check_floor_3_precondition[f1,p12];board[f1,p12];__method_precondition_m1_do_check_floor_1_precondition[f1];nop[];__method_precondition_m5_do_take_all_5_precondition[f1,f9,p10];up[f1,f9];__method_precondition_m3_do_check_floor_3_precondition[f9,p10];board[f9,p10];__method_precondition_m3_do_check_floor_3_precondition[f9,p8];board[f9,p8];__method_precondition_m1_do_check_floor_1_precondition[f9];nop[];__method_precondition_m5_do_take_all_5_precondition[f9,f10,p5];up[f9,f10];__method_precondition_m2_do_check_floor_2_precondition[f10,p1];depart[f10,p1];__method_precondition_m3_do_check_floor_3_precondition[f10,p5];board[f10,p5];__method_precondition_m1_do_check_floor_1_precondition[f10];nop[];__method_precondition_m5_do_take_all_5_precondition[f10,f25,p2];up[f10,f25];__method_precondition_m3_do_check_floor_3_precondition[f25,p2];board[f25,p2];__method_precondition_m1_do_check_floor_1_precondition[f25];nop[];__method_precondition_m6_do_take_all_6_precondition[f25,f22,p3];down[f25,f22];__method_precondition_m3_do_check_floor_3_precondition[f22,p3];board[f22,p3];__method_precondition_m3_do_check_floor_3_precondition[f22,p13];board[f22,p13];__method_precondition_m1_do_check_floor_1_precondition[f22];nop[];__method_precondition_m6_do_take_all_6_precondition[f22,f7,p14];down[f22,f7];__method_precondition_m3_do_check_floor_3_precondition[f7,p14];board[f7,p14];__method_precondition_m1_do_check_floor_1_precondition[f7];nop[];__method_precondition_m5_do_take_all_5_precondition[f7,f15,p4];up[f7,f15];__method_precondition_m3_do_check_floor_3_precondition[f15,p4];board[f15,p4];__method_precondition_m1_do_check_floor_1_precondition[f15];nop[];__method_precondition_m5_do_take_all_5_precondition[f15,f28,p9];up[f15,f28];__method_precondition_m3_do_check_floor_3_precondition[f28,p9];board[f28,p9];__method_precondition_m1_do_check_floor_1_precondition[f28];nop[];__method_precondition_m4_do_take_all_4_precondition[f28];nop[];__method_precondition_m7_do_start_throw_all_7_precondition[f28];__method_precondition_m10_do_throw_all_10_precondition[f28,f27,p5];down[f28,f27];__method_precondition_m2_do_check_floor_2_precondition[f27,p5];depart[f27,p5];__method_precondition_m1_do_check_floor_1_precondition[f27];nop[];__method_precondition_m9_do_throw_all_9_precondition[f27,f30,p13];up[f27,f30];__method_precondition_m2_do_check_floor_2_precondition[f30,p13];depart[f30,p13];__method_precondition_m2_do_check_floor_2_precondition[f30,p7];depart[f30,p7];__method_precondition_m1_do_check_floor_1_precondition[f30];nop[];__method_precondition_m10_do_throw_all_10_precondition[f30,f0,p10];down[f30,f0];__method_precondition_m2_do_check_floor_2_precondition[f0,p10];depart[f0,p10];__method_precondition_m1_do_check_floor_1_precondition[f0];nop[];__method_precondition_m9_do_throw_all_9_precondition[f0,f16,p0];up[f0,f16];__method_precondition_m2_do_check_floor_2_precondition[f16,p0];depart[f16,p0];__method_precondition_m2_do_check_floor_2_precondition[f16,p11];depart[f16,p11];__method_precondition_m1_do_check_floor_1_precondition[f16];nop[];__method_precondition_m10_do_throw_all_10_precondition[f16,f8,p9];down[f16,f8];__method_precondition_m2_do_check_floor_2_precondition[f8,p9];depart[f8,p9];__method_precondition_m1_do_check_floor_1_precondition[f8];nop[];__method_precondition_m10_do_throw_all_10_precondition[f8,f3,p14];down[f8,f3];__method_precondition_m2_do_check_floor_2_precondition[f3,p14];depart[f3,p14];__method_precondition_m1_do_check_floor_1_precondition[f3];nop[];__method_precondition_m9_do_throw_all_9_precondition[f3,f23,p4];up[f3,f23];__method_precondition_m2_do_check_floor_2_precondition[f23,p4];depart[f23,p4];__method_precondition_m1_do_check_floor_1_precondition[f23];nop[];__method_precondition_m9_do_throw_all_9_precondition[f23,f31,p8];up[f23,f31];__method_precondition_m3_do_check_floor_3_precondition[f31,p6];board[f31,p6];__method_precondition_m2_do_check_floor_2_precondition[f31,p8];depart[f31,p8];__method_precondition_m1_do_check_floor_1_precondition[f31];nop[];__method_precondition_m10_do_throw_all_10_precondition[f31,f14,p2];down[f31,f14];__method_precondition_m3_do_check_floor_3_precondition[f14,p15];board[f14,p15];__method_precondition_m2_do_check_floor_2_precondition[f14,p2];depart[f14,p2];__method_precondition_m2_do_check_floor_2_precondition[f14,p3];depart[f14,p3];__method_precondition_m1_do_check_floor_1_precondition[f14];nop[];__method_precondition_m9_do_throw_all_9_precondition[f14,f19,p12];up[f14,f19];__method_precondition_m2_do_check_floor_2_precondition[f19,p15];depart[f19,p15];__method_precondition_m2_do_check_floor_2_precondition[f19,p12];depart[f19,p12];__method_precondition_m1_do_check_floor_1_precondition[f19];nop[];__method_precondition_m10_do_throw_all_10_precondition[f19,f18,p6];down[f19,f18];__method_precondition_m2_do_check_floor_2_precondition[f18,p6];depart[f18,p6];__method_precondition_m1_do_check_floor_1_precondition[f18];nop[];__method_precondition_m8_do_throw_all_8_precondition[f18];nop[]
==>
0 __method_precondition_m0_do_problem_0_precondition f0 
1 __method_precondition_m1_do_check_floor_1_precondition f0 
2 nop  
3 __method_precondition_m5_do_take_all_5_precondition f0 f24 p11 
4 up f0 f24 
5 __method_precondition_m3_do_check_floor_3_precondition f24 p11 
6 board f24 p11 
7 __method_precondition_m1_do_check_floor_1_precondition f24 
8 nop  
9 __method_precondition_m6_do_take_all_6_precondition f24 f2 p7 
10 down f24 f2 
11 __method_precondition_m3_do_check_floor_3_precondition f2 p7 
12 board f2 p7 
13 __method_precondition_m1_do_check_floor_1_precondition f2 
14 nop  
15 __method_precondition_m5_do_take_all_5_precondition f2 f4 p1 
16 up f2 f4 
17 __method_precondition_m3_do_check_floor_3_precondition f4 p1 
18 board f4 p1 
19 __method_precondition_m1_do_check_floor_1_precondition f4 
20 nop  
21 __method_precondition_m5_do_take_all_5_precondition f4 f11 p0 
22 up f4 f11 
23 __method_precondition_m3_do_check_floor_3_precondition f11 p0 
24 board f11 p0 
25 __method_precondition_m1_do_check_floor_1_precondition f11 
26 nop  
27 __method_precondition_m6_do_take_all_6_precondition f11 f1 p12 
28 down f11 f1 
29 __method_precondition_m3_do_check_floor_3_precondition f1 p12 
30 board f1 p12 
31 __method_precondition_m1_do_check_floor_1_precondition f1 
32 nop  
33 __method_precondition_m5_do_take_all_5_precondition f1 f9 p10 
34 up f1 f9 
35 __method_precondition_m3_do_check_floor_3_precondition f9 p10 
36 board f9 p10 
37 __method_precondition_m3_do_check_floor_3_precondition f9 p8 
38 board f9 p8 
39 __method_precondition_m1_do_check_floor_1_precondition f9 
40 nop  
41 __method_precondition_m5_do_take_all_5_precondition f9 f10 p5 
42 up f9 f10 
43 __method_precondition_m2_do_check_floor_2_precondition f10 p1 
44 depart f10 p1 
45 __method_precondition_m3_do_check_floor_3_precondition f10 p5 
46 board f10 p5 
47 __method_precondition_m1_do_check_floor_1_precondition f10 
48 nop  
49 __method_precondition_m5_do_take_all_5_precondition f10 f25 p2 
50 up f10 f25 
51 __method_precondition_m3_do_check_floor_3_precondition f25 p2 
52 board f25 p2 
53 __method_precondition_m1_do_check_floor_1_precondition f25 
54 nop  
55 __method_precondition_m6_do_take_all_6_precondition f25 f22 p3 
56 down f25 f22 
57 __method_precondition_m3_do_check_floor_3_precondition f22 p3 
58 board f22 p3 
59 __method_precondition_m3_do_check_floor_3_precondition f22 p13 
60 board f22 p13 
61 __method_precondition_m1_do_check_floor_1_precondition f22 
62 nop  
63 __method_precondition_m6_do_take_all_6_precondition f22 f7 p14 
64 down f22 f7 
65 __method_precondition_m3_do_check_floor_3_precondition f7 p14 
66 board f7 p14 
67 __method_precondition_m1_do_check_floor_1_precondition f7 
68 nop  
69 __method_precondition_m5_do_take_all_5_precondition f7 f15 p4 
70 up f7 f15 
71 __method_precondition_m3_do_check_floor_3_precondition f15 p4 
72 board f15 p4 
73 __method_precondition_m1_do_check_floor_1_precondition f15 
74 nop  
75 __method_precondition_m5_do_take_all_5_precondition f15 f28 p9 
76 up f15 f28 
77 __method_precondition_m3_do_check_floor_3_precondition f28 p9 
78 board f28 p9 
79 __method_precondition_m1_do_check_floor_1_precondition f28 
80 nop  
81 __method_precondition_m4_do_take_all_4_precondition f28 
82 nop  
83 __method_precondition_m7_do_start_throw_all_7_precondition f28 
84 __method_precondition_m10_do_throw_all_10_precondition f28 f27 p5 
85 down f28 f27 
86 __method_precondition_m2_do_check_floor_2_precondition f27 p5 
87 depart f27 p5 
88 __method_precondition_m1_do_check_floor_1_precondition f27 
89 nop  
90 __method_precondition_m9_do_throw_all_9_precondition f27 f30 p13 
91 up f27 f30 
92 __method_precondition_m2_do_check_floor_2_precondition f30 p13 
93 depart f30 p13 
94 __method_precondition_m2_do_check_floor_2_precondition f30 p7 
95 depart f30 p7 
96 __method_precondition_m1_do_check_floor_1_precondition f30 
97 nop  
98 __method_precondition_m10_do_throw_all_10_precondition f30 f0 p10 
99 down f30 f0 
100 __method_precondition_m2_do_check_floor_2_precondition f0 p10 
101 depart f0 p10 
102 __method_precondition_m1_do_check_floor_1_precondition f0 
103 nop  
104 __method_precondition_m9_do_throw_all_9_precondition f0 f16 p0 
105 up f0 f16 
106 __method_precondition_m2_do_check_floor_2_precondition f16 p0 
107 depart f16 p0 
108 __method_precondition_m2_do_check_floor_2_precondition f16 p11 
109 depart f16 p11 
110 __method_precondition_m1_do_check_floor_1_precondition f16 
111 nop  
112 __method_precondition_m10_do_throw_all_10_precondition f16 f8 p9 
113 down f16 f8 
114 __method_precondition_m2_do_check_floor_2_precondition f8 p9 
115 depart f8 p9 
116 __method_precondition_m1_do_check_floor_1_precondition f8 
117 nop  
118 __method_precondition_m10_do_throw_all_10_precondition f8 f3 p14 
119 down f8 f3 
120 __method_precondition_m2_do_check_floor_2_precondition f3 p14 
121 depart f3 p14 
122 __method_precondition_m1_do_check_floor_1_precondition f3 
123 nop  
124 __method_precondition_m9_do_throw_all_9_precondition f3 f23 p4 
125 up f3 f23 
126 __method_precondition_m2_do_check_floor_2_precondition f23 p4 
127 depart f23 p4 
128 __method_precondition_m1_do_check_floor_1_precondition f23 
129 nop  
130 __method_precondition_m9_do_throw_all_9_precondition f23 f31 p8 
131 up f23 f31 
132 __method_precondition_m3_do_check_floor_3_precondition f31 p6 
133 board f31 p6 
134 __method_precondition_m2_do_check_floor_2_precondition f31 p8 
135 depart f31 p8 
136 __method_precondition_m1_do_check_floor_1_precondition f31 
137 nop  
138 __method_precondition_m10_do_throw_all_10_precondition f31 f14 p2 
139 down f31 f14 
140 __method_precondition_m3_do_check_floor_3_precondition f14 p15 
141 board f14 p15 
142 __method_precondition_m2_do_check_floor_2_precondition f14 p2 
143 depart f14 p2 
144 __method_precondition_m2_do_check_floor_2_precondition f14 p3 
145 depart f14 p3 
146 __method_precondition_m1_do_check_floor_1_precondition f14 
147 nop  
148 __method_precondition_m9_do_throw_all_9_precondition f14 f19 p12 
149 up f14 f19 
150 __method_precondition_m2_do_check_floor_2_precondition f19 p15 
151 depart f19 p15 
152 __method_precondition_m2_do_check_floor_2_precondition f19 p12 
153 depart f19 p12 
154 __method_precondition_m1_do_check_floor_1_precondition f19 
155 nop  
156 __method_precondition_m10_do_throw_all_10_precondition f19 f18 p6 
157 down f19 f18 
158 __method_precondition_m2_do_check_floor_2_precondition f18 p6 
159 depart f18 p6 
160 __method_precondition_m1_do_check_floor_1_precondition f18 
161 nop  
162 __method_precondition_m8_do_throw_all_8_precondition f18 
163 nop  
root 179
164 do_take_all f10  -> m5_do_take_all 49 50 207 236
165 do_check_floor f24  -> m3_do_check_floor 5 6 234
166 do_check_floor f0  -> m2_do_check_floor 100 101 229
167 do_throw_all f30  -> m10_do_throw_all 98 99 166 174
168 do_take_all f11  -> m6_do_take_all 27 28 243 190
169 do_check_floor f22  -> m3_do_check_floor 59 60 228
170 do_check_floor f19  -> m1_do_check_floor 154 155
171 do_check_floor f30  -> m2_do_check_floor 92 93 221
172 do_check_floor f23  -> m2_do_check_floor 126 127 175
173 do_check_floor f9  -> m1_do_check_floor 39 40
174 do_throw_all f0  -> m9_do_throw_all 104 105 233 245
175 do_check_floor f23  -> m1_do_check_floor 128 129
176 do_throw_all f31  -> m10_do_throw_all 138 139 242 216
177 do_check_floor f11  -> m3_do_check_floor 23 24 224
178 do_check_floor f9  -> m3_do_check_floor 35 36 211
179 __MakeMethodSubTasksUniqueCompilation__top_3  -> __top_3 210
180 do_check_floor f8  -> m1_do_check_floor 116 117
181 do_start_throw_all   -> m7_do_start_throw_all 83 187
182 do_check_floor f16  -> m2_do_check_floor 108 109 184
183 do_check_floor f31  -> m1_do_check_floor 136 137
184 do_check_floor f16  -> m1_do_check_floor 110 111
185 do_check_floor f4  -> m1_do_check_floor 19 20
186 do_check_floor f31  -> m3_do_check_floor 132 133 193
187 do_throw_all f28  -> m10_do_throw_all 84 85 212 215
188 do_check_floor f19  -> m2_do_check_floor 150 151 223
189 do_check_floor f0  -> m1_do_check_floor 1 2
190 do_take_all f1  -> m5_do_take_all 33 34 178 197
191 do_throw_all f3  -> m9_do_throw_all 124 125 172 208
192 do_check_floor f28  -> m1_do_check_floor 79 80
193 do_check_floor f31  -> m2_do_check_floor 134 135 183
194 do_throw_all f18  -> m8_do_throw_all 162 163
195 do_check_floor f28  -> m3_do_check_floor 77 78 192
196 do_check_floor f22  -> m3_do_check_floor 57 58 169
197 do_take_all f9  -> m5_do_take_all 41 42 235 164
198 do_check_floor f30  -> m1_do_check_floor 96 97
199 do_throw_all f8  -> m10_do_throw_all 118 119 225 191
200 do_check_floor f10  -> m3_do_check_floor 45 46 201
201 do_check_floor f10  -> m1_do_check_floor 47 48
202 do_throw_all f19  -> m10_do_throw_all 156 157 231 194
203 do_take_all f24  -> m6_do_take_all 9 10 209 213
204 do_check_floor f27  -> m1_do_check_floor 88 89
205 do_check_floor f7  -> m1_do_check_floor 67 68
206 do_take_all f28  -> m4_do_take_all 81 82
207 do_check_floor f25  -> m3_do_check_floor 51 52 247
208 do_throw_all f23  -> m9_do_throw_all 130 131 186 176
209 do_check_floor f2  -> m3_do_check_floor 11 12 238
210 do_problem   -> m0_do_problem 0 189 219 181
211 do_check_floor f9  -> m3_do_check_floor 37 38 173
212 do_check_floor f27  -> m2_do_check_floor 86 87 204
213 do_take_all f2  -> m5_do_take_all 15 16 239 241
214 do_take_all f22  -> m6_do_take_all 63 64 232 227
215 do_throw_all f27  -> m9_do_throw_all 90 91 171 167
216 do_throw_all f14  -> m9_do_throw_all 148 149 188 202
217 do_check_floor f8  -> m2_do_check_floor 114 115 180
218 do_check_floor f15  -> m1_do_check_floor 73 74
219 do_take_all f0  -> m5_do_take_all 3 4 165 203
220 do_check_floor f14  -> m2_do_check_floor 142 143 246
221 do_check_floor f30  -> m2_do_check_floor 94 95 198
222 do_check_floor f3  -> m1_do_check_floor 122 123
223 do_check_floor f19  -> m2_do_check_floor 152 153 170
224 do_check_floor f11  -> m1_do_check_floor 25 26
225 do_check_floor f3  -> m2_do_check_floor 120 121 222
226 do_take_all f15  -> m5_do_take_all 75 76 195 206
227 do_take_all f7  -> m5_do_take_all 69 70 230 226
228 do_check_floor f22  -> m1_do_check_floor 61 62
229 do_check_floor f0  -> m1_do_check_floor 102 103
230 do_check_floor f15  -> m3_do_check_floor 71 72 218
231 do_check_floor f18  -> m2_do_check_floor 158 159 244
232 do_check_floor f7  -> m3_do_check_floor 65 66 205
233 do_check_floor f16  -> m2_do_check_floor 106 107 182
234 do_check_floor f24  -> m1_do_check_floor 7 8
235 do_check_floor f10  -> m2_do_check_floor 43 44 200
236 do_take_all f25  -> m6_do_take_all 55 56 196 214
237 do_check_floor f1  -> m1_do_check_floor 31 32
238 do_check_floor f2  -> m1_do_check_floor 13 14
239 do_check_floor f4  -> m3_do_check_floor 17 18 185
240 do_check_floor f14  -> m1_do_check_floor 146 147
241 do_take_all f4  -> m5_do_take_all 21 22 177 168
242 do_check_floor f14  -> m3_do_check_floor 140 141 220
243 do_check_floor f1  -> m3_do_check_floor 29 30 237
244 do_check_floor f18  -> m1_do_check_floor 160 161
245 do_throw_all f16  -> m10_do_throw_all 112 113 217 199
246 do_check_floor f14  -> m2_do_check_floor 144 145 240
247 do_check_floor f25  -> m1_do_check_floor 53 54

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 290.737 MEMPEAK_KBS 836578.304
