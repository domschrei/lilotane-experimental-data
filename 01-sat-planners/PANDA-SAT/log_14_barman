PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p14.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p14.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p14.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 39
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 39
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 39
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 39
Grounded planning graph ... done in 550ms.
	Number of Grounded Actions 2213
	Number of Grounded Literals 351
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 39
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 39
Grounding ... done.
	number of abstract tasks = 1050
	number of tasks = 3185
	number of decomposition methods = 3871
	number of predicates = 351
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1050
	number of tasks = 3185
	number of decomposition methods = 3871
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 352ms.
	Number of Grounded Actions 2135
	Number of Grounded Literals 322
	number of abstract tasks = 1050
	number of tasks = 3185
	number of decomposition methods = 3871
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1050
	number of tasks = 3185
	number of decomposition methods = 3871
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2829
	number of decomposition methods = 3515
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 694
	number of tasks = 2829
	number of decomposition methods = 3515
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 694
	number of tasks = 2829
	number of decomposition methods = 3515
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 161ms.
	Number of Grounded Actions 2135
	Number of Grounded Literals 322
	number of abstract tasks = 694
	number of tasks = 2829
	number of decomposition methods = 3515
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 694
	number of tasks = 2829
	number of decomposition methods = 3275
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2829
	number of decomposition methods = 3275
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 694
	number of tasks = 2829
	number of decomposition methods = 3275
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2829
	number of decomposition methods = 3275
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 694
	number of tasks = 2829
	number of decomposition methods = 3275
	number of predicates = 322
	number of sorts = 0
	number of tasks in largest method = 13
	number of primitive SHOP tasks = 870
	number of epsilon methods = 0
	number of primitive tasks = 2135
	number of constants = 0
Tasks 2135 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768618ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854768256
done
initial PDT has 258 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 258 leafs
SHOP LEAFS 86
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 155043
Size 155043 at 0/2135
Size 154296 at 500/2135
Size 153958 at 1000/2135
Size 153902 at 1500/2135
Size 27165 at 2000/2135
Size 24939
Size 24900 at 0/2135
Size 17155 at 500/2135
Size 17147 at 1000/2135
Size 17147 at 1500/2135
Size 16965 at 2000/2135
Size 16773
Size 16773 at 0/2135
Size 9826 at 500/2135
Size 9814 at 1000/2135
Size 9814 at 1500/2135
Size 9814 at 2000/2135
Size 3080
Size 3080 at 0/2135
Size 3072 at 500/2135
Size 3036 at 1000/2135
Size 3036 at 1500/2135
Size 3036 at 2000/2135
Size 3036
Size 3036 at 0/2135
Size 2964 at 500/2135
Size 2964 at 1000/2135
Size 2964 at 1500/2135
Size 2964 at 2000/2135
Size 2964
Size 2964 at 0/2135
Size 2844 at 500/2135
Size 2844 at 1000/2135
Size 2844 at 1500/2135
Size 2844 at 2000/2135
Size 2779
Size 2779 at 0/2135
Size 2779 at 500/2135
Size 2779 at 1000/2135
Size 2779 at 1500/2135
Size 2779 at 2000/2135
Size 2779
Invariant time: 2.631
Number of invariants: 2779
Invariant Clauses 719761
NUMBER OF CLAUSES 1142601
NUMBER OF STATE CLAUSES 956916
NUMBER OF DECOMPOSITION CLAUSES 185685
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.75% 16.25% 0.0% 
NUMBER OF PATHS 258
Starting cryptominisat5.5
Setting starttime of solver to 1604475389533
Command exited with non-zero status 10
0.63 0.02

Time command gave the following runtime for the solver: 650
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_1;1;1,2468 2468 m9_do_fill_shot
1;1;1 64 pathaction!3_1;1;1,339
Consider method^3_4;2;1,1530 1530 _m3_get_second_ingredient_2
4;2;1 174 pathaction!3_4;2;1,1993
Consider method^1_2,2238 2238 m0_do_cocktail_in_shot1
2 194 pathaction!1_2,2114
Consider method^3_2;1;2,2068 2068 _m2_get_first_ingredient_3
2;1;2 341 pathaction!3_2;1;2,2675
Consider method^3_2;1;1,424 424 m8_do_fill_shot
2;1;1 346 pathaction!3_2;1;1,246
Consider method^3_6;1;1,2781 2781 m9_do_fill_shot
6;1;1 292 pathaction!3_6;1;1,306
Consider method^3_9;2;2,1140 1140 _m3_get_second_ingredient_3
9;2;2 133 pathaction!3_9;2;2,682
Consider method^2_9;3,502 502 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
9;3 130 pathaction!2_9;3,645
Consider method^3_5;1;1,1072 1072 m7_do_fill_shot
5;1;1 39 pathaction!3_5;1;1,323
Consider method^3_7;2;2,3114 3114 _m3_get_second_ingredient_3
7;2;2 86 pathaction!3_7;2;2,730
Consider method^1_6,1239 1239 m0_do_cocktail_in_shot1
6 300 pathaction!1_6,2105
Consider method^2_2;2,2159 2159 m3_get_second_ingredient
2;2 359 pathaction!2_2;2,996
Consider method^3_9;3;1,820 820 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2>
9;3;1 291 pathaction!3_9;3;1,759
Consider method^3_2;2;1,398 398 _m3_get_second_ingredient_2
2;2;1 226 pathaction!3_2;2;1,2064
Consider method^3_6;3;1,1500 1500 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2>
6;3;1 281 pathaction!3_6;3;1,770
Consider method^3_1;2;1,1530 1530 _m3_get_second_ingredient_2
1;2;1 220 pathaction!3_1;2;1,1993
Consider method^2_11;1,1072 1072 m7_do_fill_shot
11;1 143 pathaction!2_11;1,323
Consider method^3_0;1;3,767 767 _m2_get_first_ingredient_4
0;1;3 13 pathaction!3_0;1;3,975
Consider method^1_12,2824 2824 m0_do_cocktail_in_shot1
12 342 pathaction!1_12,2109
Consider method^3_6;2;1,1208 1208 _m3_get_second_ingredient_2
6;2;1 222 pathaction!3_6;2;1,2004
Consider method^2_12;2,752 752 m3_get_second_ingredient
12;2 259 pathaction!2_12;2,1008
Consider method^3_8;1;3,1084 1084 _m2_get_first_ingredient_4
8;1;3 55 pathaction!3_8;1;3,905
Consider method^3_1;2;2,619 619 _m3_get_second_ingredient_3
1;2;2 270 pathaction!3_1;2;2,655
Consider method^3_6;1;2,1096 1096 _m2_get_first_ingredient_3
6;1;2 157 pathaction!3_6;1;2,2636
Consider method^3_1;3;1,386 386 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2>
1;3;1 139 pathaction!3_1;3;1,772
Consider method^2_3;3,2055 2055 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
3;3 89 pathaction!2_3;3,639
Consider method^2_0;2,1871 1871 m3_get_second_ingredient
0;2 19 pathaction!2_0;2,1007
Consider method^3_6;2;2,2960 2960 _m3_get_second_ingredient_3
6;2;2 321 pathaction!3_6;2;2,694
Consider method^1_11,103 103 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
11 307 pathaction!1_11,2341
Consider method^2_7;3,2776 2776 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
7;3 261 pathaction!2_7;3,644
Consider method^2_9;1,2626 2626 m2_get_first_ingredient
9;1 37 pathaction!2_9;1,2712
Consider method^1_10,2496 2496 m0_do_cocktail_in_shot1
10 77 pathaction!1_10,2110
Consider method^3_10;1;1,1034 1034 m9_do_fill_shot
10;1;1 294 pathaction!3_10;1;1,321
Consider method^3_5;2;1,2837 2837 _m3_get_second_ingredient_2
5;2;1 369 pathaction!3_5;2;1,2059
Consider method^1_3,895 895 m0_do_cocktail_in_shot1
3 40 pathaction!1_3,2107
Consider method^3_12;1;1,597 597 m7_do_fill_shot
12;1;1 211 pathaction!3_12;1;1,306
Consider method^3_5;1;3,3046 3046 _m2_get_first_ingredient_4
5;1;3 208 pathaction!3_5;1;3,959
Consider method^3_5;3;1,1834 1834 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail3,left];m5_do_clean_shot;0;-1,-2>
5;3;1 258 pathaction!3_5;3;1,765
Consider method^2_12;1,1089 1089 m2_get_first_ingredient
12;1 192 pathaction!2_12;1,2722
Consider method^2_7;1,844 844 m2_get_first_ingredient
7;1 148 pathaction!2_7;1,2718
Consider method^2_4;3,2195 2195 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
4;3 311 pathaction!2_4;3,643
Consider method^3_4;1;3,767 767 _m2_get_first_ingredient_4
4;1;3 20 pathaction!3_4;1;3,975
Consider method^2_1;1,11 11 m2_get_first_ingredient
1;1 97 pathaction!2_1;1,2715
Consider method^2_9;2,705 705 m3_get_second_ingredient
9;2 334 pathaction!2_9;2,998
Consider method^3_8;1;1,636 636 m9_do_fill_shot
8;1;1 313 pathaction!3_8;1;1,269
Consider method^2_8;2,1792 1792 m3_get_second_ingredient
8;2 180 pathaction!2_8;2,1009
Consider method^2_3;1,2075 2075 m2_get_first_ingredient
3;1 141 pathaction!2_3;1,2705
Consider method^3_0;2;1,1277 1277 _m3_get_second_ingredient_2
0;2;1 116 pathaction!3_0;2;1,2009
Consider method^3_3;1;3,1084 1084 _m2_get_first_ingredient_4
3;1;3 308 pathaction!3_3;1;3,905
Consider method^3_9;1;1,1585 1585 m7_do_fill_shot
9;1;1 209 pathaction!3_9;1;1,264
Consider method^3_12;3;1,627 627 <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,right];m5_do_clean_shot;0;-1,-2>
12;3;1 301 pathaction!3_12;3;1,756
Consider method^1_1,2561 2561 m0_do_cocktail_in_shot1
1 144 pathaction!1_1,2115
Consider method^3_2;3;1,1869 1869 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 215 pathaction!3_2;3;1,779
Consider method^3_9;2;1,2331 2331 _m3_get_second_ingredient_2
9;2;1 2 pathaction!3_9;2;1,2040
Consider method^3_8;2;1,1530 1530 _m3_get_second_ingredient_2
8;2;1 299 pathaction!3_8;2;1,1993
Consider method^2_0;3,2105 2105 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
0;3 80 pathaction!2_0;3,636
Consider method^3_0;2;2,646 646 _m3_get_second_ingredient_3
0;2;2 7 pathaction!3_0;2;2,679
Consider method^1_0,1087 1087 m0_do_cocktail_in_shot1
0 237 pathaction!1_0,2104
Consider method^3_3;2;2,1771 1771 _m3_get_second_ingredient_3
3;2;2 76 pathaction!3_3;2;2,726
Consider method^1_5,3093 3093 m0_do_cocktail_in_shot1
5 217 pathaction!1_5,2108
Consider method^2_12;3,3041 3041 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot13,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
12;3 129 pathaction!2_12;3,641
Consider method^3_12;1;3,1721 1721 _m2_get_first_ingredient_4
12;1;3 298 pathaction!3_12;1;3,942
Consider method^0_,3274 3274 __top_1
 304 pathaction!0_,2828
Consider method^3_3;1;1,636 636 m9_do_fill_shot
3;1;1 288 pathaction!3_3;1;1,269
Consider method^2_1;3,1971 1971 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
1;3 136 pathaction!2_1;3,647
Consider method^3_3;1;2,1656 1656 _m2_get_first_ingredient_3
3;1;2 190 pathaction!3_3;1;2,2633
Consider method^3_10;2;1,3249 3249 _m3_get_second_ingredient_2
10;2;1 62 pathaction!3_10;2;1,2022
Consider method^3_10;1;2,2714 2714 _m2_get_first_ingredient_3
10;1;2 357 pathaction!3_10;1;2,2701
Consider method^3_4;1;2,139 139 _m2_get_first_ingredient_3
4;1;2 256 pathaction!3_4;1;2,2691
Consider method^2_2;1,347 347 m2_get_first_ingredient
2;1 104 pathaction!2_2;1,2710
Consider method^2_10;2,1406 1406 m3_get_second_ingredient
10;2 328 pathaction!2_10;2,992
Consider method^3_9;1;3,3234 3234 _m2_get_first_ingredient_4
9;1;3 50 pathaction!3_9;1;3,900
Consider method^2_5;1,898 898 m2_get_first_ingredient
5;1 54 pathaction!2_5;1,2704
Consider method^3_4;2;2,619 619 _m3_get_second_ingredient_3
4;2;2 338 pathaction!3_4;2;2,655
Consider method^2_10;3,1433 1433 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot11,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
10;3 114 pathaction!2_10;3,642
Consider method^2_5;3,1948 1948 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot6,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
5;3 210 pathaction!2_5;3,640
Consider method^3_8;2;2,619 619 _m3_get_second_ingredient_3
8;2;2 277 pathaction!3_8;2;2,655
Consider method^2_4;1,2024 2024 m2_get_first_ingredient
4;1 162 pathaction!2_4;1,2707
Consider method^3_7;1;3,2712 2712 _m2_get_first_ingredient_4
7;1;3 82 pathaction!3_7;1;3,971
Consider method^3_3;3;1,927 927 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2>
3;3;1 185 pathaction!3_3;3;1,775
Consider method^3_1;1;3,767 767 _m2_get_first_ingredient_4
1;1;3 132 pathaction!3_1;1;3,975
Consider method^3_5;2;2,1260 1260 _m3_get_second_ingredient_3
5;2;2 156 pathaction!3_5;2;2,713
Consider method^3_5;1;2,1928 1928 _m2_get_first_ingredient_3
5;1;2 284 pathaction!3_5;1;2,2699
Consider method^2_8;3,2087 2087 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
8;3 6 pathaction!2_8;3,638
Consider method^2_7;2,1 1 m3_get_second_ingredient
7;2 57 pathaction!2_7;2,1004
Consider method^3_4;1;1,3005 3005 m7_do_fill_shot
4;1;1 93 pathaction!3_4;1;1,339
Consider method^2_6;2,293 293 m3_get_second_ingredient
6;2 169 pathaction!2_6;2,1005
Consider method^2_6;1,1187 1187 m2_get_first_ingredient
6;1 214 pathaction!2_6;1,2719
Consider method^3_9;1;2,2893 2893 _m2_get_first_ingredient_3
9;1;2 188 pathaction!3_9;1;2,2653
Consider method^3_7;2;1,1876 1876 _m3_get_second_ingredient_2
7;2;1 121 pathaction!3_7;2;1,2050
Consider method^3_12;2;1,1208 1208 _m3_get_second_ingredient_2
12;2;1 42 pathaction!3_12;2;1,2004
Consider method^3_3;2;1,1754 1754 _m3_get_second_ingredient_2
3;2;1 239 pathaction!3_3;2;1,2063
Consider method^2_1;2,2510 2510 m3_get_second_ingredient
1;2 96 pathaction!2_1;2,1001
Consider method^3_10;1;3,2404 2404 _m2_get_first_ingredient_4
10;1;3 140 pathaction!3_10;1;3,957
Consider method^2_10;1,2458 2458 m2_get_first_ingredient
10;1 106 pathaction!2_10;1,2706
Consider method^3_7;1;2,436 436 _m2_get_first_ingredient_3
7;1;2 90 pathaction!3_7;1;2,2673
Consider method^3_4;3;1,158 158 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 195 pathaction!3_4;3;1,757
Consider method^3_6;1;3,1721 1721 _m2_get_first_ingredient_4
6;1;3 173 pathaction!3_6;1;3,942
Consider method^1_8,2146 2146 m0_do_cocktail_in_shot1
8 372 pathaction!1_8,2106
Consider method^2_5;2,165 165 m3_get_second_ingredient
5;2 111 pathaction!2_5;2,990
Consider method^3_7;3;1,2642 2642 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2>
7;3;1 227 pathaction!3_7;3;1,762
Consider method^1_4,2050 2050 m0_do_cocktail_in_shot1
4 166 pathaction!1_4,2111
Consider method^3_10;3;1,612 612 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail2,right];m5_do_clean_shot;0;-1,-2>
10;3;1 46 pathaction!3_10;3;1,773
Consider method^1_9,2929 2929 m0_do_cocktail_in_shot1
9 21 pathaction!1_9,2113
Consider method^3_2;1;3,122 122 _m2_get_first_ingredient_4
2;1;3 310 pathaction!3_2;1;3,882
Consider method^3_8;1;2,1656 1656 _m2_get_first_ingredient_3
8;1;2 181 pathaction!3_8;1;2,2633
Consider method^3_12;1;2,1096 1096 _m2_get_first_ingredient_3
12;1;2 264 pathaction!3_12;1;2,2636
Consider method^3_7;1;1,992 992 m7_do_fill_shot
7;1;1 4 pathaction!3_7;1;1,335
Consider method^3_0;3;1,1412 1412 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 172 pathaction!3_0;3;1,769
Consider method^2_3;2,1007 1007 m3_get_second_ingredient
3;2 68 pathaction!2_3;2,991
Consider method^3_10;2;2,1747 1747 _m3_get_second_ingredient_3
10;2;2 199 pathaction!3_10;2;2,706
Consider method^2_6;3,3137 3137 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
6;3 160 pathaction!2_6;3,637
Consider method^3_0;1;2,139 139 _m2_get_first_ingredient_3
0;1;2 27 pathaction!3_0;1;2,2691
Consider method^2_4;2,1348 1348 m3_get_second_ingredient
4;2 98 pathaction!2_4;2,993
Consider method^3_2;2;2,3035 3035 _m3_get_second_ingredient_3
2;2;2 200 pathaction!3_2;2;2,683
Consider method^3_12;2;2,2960 2960 _m3_get_second_ingredient_3
12;2;2 145 pathaction!3_12;2;2,694
Consider method^2_8;1,2313 2313 m2_get_first_ingredient
8;1 367 pathaction!2_8;1,2723
Consider method^3_0;1;1,519 519 m8_do_fill_shot
0;1;1 159 pathaction!3_0;1;1,339
Consider method^3_8;3;1,2778 2778 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 269 pathaction!3_8;3;1,764
Consider method^2_0;1,1522 1522 m2_get_first_ingredient
0;1 182 pathaction!2_0;1,2721
Consider method^1_7,297 297 m0_do_cocktail_in_shot1
7 233 pathaction!1_7,2112
Consider method^2_2;3,781 781 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
2;3 31 pathaction!2_2;3,646
Consider method^3_1;1;2,139 139 _m2_get_first_ingredient_3
1;1;2 168 pathaction!3_1;1;2,2691


CHECKING primitive solution of length 250 ...
true 316 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 198 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient1,shot12;]
true 163 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser1,ingredient1;]
true 110 grasp[left,shot12;]
true 295 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 282 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1;]
true 366 clean-shot[shot12,ingredient1,left,right;]
true 254 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot12;]
true 271 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 66 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2;]
true 253 leave[left,shot12;]
true 204 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient1,ingredient4;]
true 44 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 371 nop[;]
true 312 grasp[left,shaker1;]
true 34 shake[cocktail8,ingredient1,ingredient4,shaker1,left,right;]
true 52 pour-shaker-to-shot[cocktail8,shot1,left,shaker1,l2,l1;]
true 120 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 229 clean-shaker[left,right,shaker1;]
true 296 leave[left,shaker1;]
true 113 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 266 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot12;]
true 203 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient4,dispenser1;]
true 56 grasp[left,shot12;]
true 60 clean-shot[shot12,ingredient4,left,right;]
true 206 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 336 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1;]
true 320 clean-shot[shot12,ingredient1,left,right;]
true 265 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot12;]
true 29 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 30 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,left,l1,l2;]
true 232 leave[left,shot12;]
true 186 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient3;]
true 218 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 26 nop[;]
true 319 grasp[left,shaker1;]
true 32 shake[cocktail9,ingredient1,ingredient3,shaker1,left,right;]
true 263 pour-shaker-to-shot[cocktail9,shot2,left,shaker1,l2,l1;]
true 246 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 24 clean-shaker[left,right,shaker1;]
true 117 leave[left,shaker1;]
true 283 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 322 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot14;]
true 348 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser2,ingredient2;]
true 10 grasp[right,shot14;]
true 171 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 349 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,right,l0,l1;]
true 124 clean-shot[shot14,ingredient2,right,left;]
true 105 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,right,shot14;]
true 234 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 63 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2;]
true 183 leave[right,shot14;]
true 191 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient4;]
true 99 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 306 nop[;]
true 165 grasp[right,shaker1;]
true 340 shake[cocktail4,ingredient2,ingredient4,shaker1,right,left;]
true 339 pour-shaker-to-shot[cocktail4,shot3,right,shaker1,l2,l1;]
true 179 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 364 clean-shaker[right,left,shaker1;]
true 231 leave[right,shaker1;]
true 0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 69 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot12;]
true 329 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient3,dispenser4;]
true 268 grasp[left,shot12;]
true 337 clean-shot[shot12,ingredient3,left,right;]
true 243 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 11 pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,left,l0,l1;]
true 202 clean-shot[shot12,ingredient4,left,right;]
true 287 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,left,shot12;]
true 280 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 81 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2;]
true 72 leave[left,shot12;]
true 112 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient1;]
true 344 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 302 nop[;]
true 79 grasp[left,shaker1;]
true 326 shake[cocktail3,ingredient4,ingredient1,shaker1,left,right;]
true 248 pour-shaker-to-shot[cocktail3,shot4,left,shaker1,l2,l1;]
true 125 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 354 clean-shaker[left,right,shaker1;]
true 315 leave[left,shaker1;]
true 176 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 92 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot12;]
true 184 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient1,dispenser1;]
true 345 grasp[left,shot12;]
true 134 refill-shot[shot12,ingredient1,left,right,dispenser1;]
true 109 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1;]
true 146 clean-shot[shot12,ingredient1,left,right;]
true 102 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,left,shot12;]
true 347 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 88 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,left,l1,l2;]
true 126 leave[left,shot12;]
true 1 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient3;]
true 22 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 353 nop[;]
true 332 grasp[left,shaker1;]
true 318 shake[cocktail7,ingredient1,ingredient3,shaker1,left,right;]
true 119 pour-shaker-to-shot[cocktail7,shot5,left,shaker1,l2,l1;]
true 67 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 178 clean-shaker[left,right,shaker1;]
true 164 leave[left,shaker1;]
true 230 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 273 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot12;]
true 47 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient3,dispenser3;]
true 155 grasp[right,shot12;]
true 53 refill-shot[shot12,ingredient3,right,left,dispenser3;]
true 350 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1;]
true 240 clean-shot[shot12,ingredient3,right,left;]
true 154 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,right,shot12;]
true 197 fill-shot[shot12,ingredient1,right,left,dispenser1;]
true 201 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,right,l1,l2;]
true 335 leave[right,shot12;]
true 252 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient1;]
true 360 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 285 nop[;]
true 138 grasp[right,shaker1;]
true 351 shake[cocktail5,ingredient3,ingredient1,shaker1,right,left;]
true 358 pour-shaker-to-shot[cocktail5,shot6,right,shaker1,l2,l1;]
true 236 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 103 clean-shaker[right,left,shaker1;]
true 325 leave[right,shaker1;]
true 309 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 213 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot14;]
true 123 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient1,ingredient4,dispenser1;]
true 303 grasp[right,shot14;]
true 355 clean-shot[shot14,ingredient4,right,left;]
true 152 fill-shot[shot14,ingredient1,right,left,dispenser1;]
true 317 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,right,l0,l1;]
true 286 clean-shot[shot14,ingredient1,right,left;]
true 59 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,right,shot14;]
true 235 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 38 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,right,l1,l2;]
true 16 leave[right,shot14;]
true 18 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient3;]
true 12 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 193 nop[;]
true 221 grasp[right,shaker1;]
true 189 shake[cocktail6,ingredient1,ingredient3,shaker1,right,left;]
true 65 pour-shaker-to-shot[cocktail6,shot7,right,shaker1,l2,l1;]
true 84 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 36 clean-shaker[right,left,shaker1;]
true 73 leave[right,shaker1;]
true 205 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 8 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot12;]
true 48 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient1,dispenser1;]
true 238 grasp[right,shot12;]
true 45 refill-shot[shot12,ingredient1,right,left,dispenser1;]
true 51 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,right,l0,l1;]
true 158 clean-shot[shot12,ingredient1,right,left;]
true 118 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,right,shot12;]
true 170 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 244 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,right,l1,l2;]
true 131 leave[right,shot12;]
true 228 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient3;]
true 370 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 247 nop[;]
true 41 grasp[left,shaker1;]
true 142 shake[cocktail10,ingredient1,ingredient3,shaker1,left,right;]
true 61 pour-shaker-to-shot[cocktail10,shot8,left,shaker1,l2,l1;]
true 225 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 324 clean-shaker[left,right,shaker1;]
true 274 leave[left,shaker1;]
true 343 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 260 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot12;]
true 279 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient3,dispenser4;]
true 245 grasp[left,shot12;]
true 177 clean-shot[shot12,ingredient3,left,right;]
true 91 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 314 pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,left,l0,l1;]
true 333 clean-shot[shot12,ingredient4,left,right;]
true 278 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient3,left,shot12;]
true 207 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 149 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,left,l1,l2;]
true 272 leave[left,shot12;]
true 23 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient3;]
true 257 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 276 nop[;]
true 14 grasp[right,shaker1;]
true 196 shake[cocktail11,ingredient4,ingredient3,shaker1,right,left;]
true 356 pour-shaker-to-shot[cocktail11,shot9,right,shaker1,l2,l1;]
true 241 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 100 clean-shaker[right,left,shaker1;]
true 293 leave[right,shaker1;]
true 95 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 361 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot14;]
true 224 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient3,dispenser3;]
true 250 grasp[right,shot14;]
true 368 refill-shot[shot14,ingredient3,right,left,dispenser3;]
true 153 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1;]
true 58 clean-shot[shot14,ingredient3,right,left;]
true 85 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,right,shot14;]
true 74 fill-shot[shot14,ingredient1,right,left,dispenser1;]
true 290 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,right,l1,l2;]
true 83 leave[right,shot14;]
true 70 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient1;]
true 150 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 161 nop[;]
true 275 grasp[right,shaker1;]
true 219 shake[cocktail2,ingredient3,ingredient1,shaker1,right,left;]
true 323 pour-shaker-to-shot[cocktail2,shot10,right,shaker1,l2,l1;]
true 167 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 115 clean-shaker[right,left,shaker1;]
true 87 leave[right,shaker1;]
true 147 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 9 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot14;]
true 362 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient1,dispenser2;]
true 35 grasp[left,shot14;]
true 33 clean-shot[shot14,ingredient1,left,right;]
true 94 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 267 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 327 clean-shot[shot14,ingredient2,left,right;]
true 255 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,left,shot14;]
true 249 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 242 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2;]
true 122 leave[left,shot14;]
true 28 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient1;]
true 49 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 187 nop[;]
true 107 grasp[left,shaker1;]
true 127 shake[cocktail1,ingredient2,ingredient1,shaker1,left,right;]
true 363 pour-shaker-to-shot[cocktail1,shot11,left,shaker1,l2,l1;]
true 101 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 175 clean-shaker[left,right,shaker1;]
true 305 leave[left,shaker1;]
true 128 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 3 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient3,dispenser3;]
true 75 grasp[right,shot12;]
true 331 refill-shot[shot12,ingredient3,right,left,dispenser3;]
true 15 leave[right,shot12;]
true 17 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right;]
true 330 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot14;]
true 78 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient1,dispenser1;]
true 25 grasp[right,shot14;]
true 71 refill-shot[shot14,ingredient1,right,left,dispenser1;]
true 108 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,right,l0,l1;]
true 251 clean-shot[shot14,ingredient1,right,left;]
true 43 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,right,shot14;]
true 137 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 212 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,right,l1,l2;]
true 135 leave[right,shot14;]
true 151 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient3;]
true 5 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 365 nop[;]
true 297 grasp[left,shaker1;]
true 289 shake[cocktail7,ingredient1,ingredient3,shaker1,left,right;]
true 352 pour-shaker-to-shot[cocktail7,shot13,left,shaker1,l2,l1;]
true 223 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 262 clean-shaker[left,right,shaker1;]
true 216 leave[left,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 426928032
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 322
number of actions                    = 2829
number of abstract actions           = 694
number of primitive actions          = 2135
number of methods                    = 3275
number of primitive shop actions     = 870
number of primitive non-shop actions = 1265
size of largest method               = 13
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 227878
number of clauses               = 1142601
average size of clauses         = 2.3977110119805602
number of assert                = 146
number of horn                  = 997374
K offset                        = 0
K chosen value                  = 4
state formula                   = 956916
method children clauses         = 0
number of paths                 = 258
maximum plan length             = 258
number of decomposition clauses = 185685
number of ordering clauses      = 0
number of state clauses         = 956916
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 16663
============ parsing ============
total                         = 1127
file parser                   = 618
sort expansion                = 219
closed world assumption       = 135
inherit preconditions         = 0
shop methods                  = 13
eliminate identical variables = 63
strip domain of hybridity     = 2
flatten formula               = 76
============ preprocessing ============
total                                      = 5548
compile negative preconditions             = 40
compile unit methods                       = 0
split parameter                            = 58
expand choiceless abstract tasks           = 553
compile methods with identical tasks       = 14
removing unnecessary predicates            = 893
lifted reachabiltiy analysis               = 82
grounded planning graph analysis           = 1541
grounded task decomposition graph analysis = 1791
grounding                                  = 544
create artificial top task                 = 6
============ search preparation ============
compute state invariants = 2856
============ sat ============
total                                        = 7290
generate formula                             = 5926
generate path decomposition tree             = 353
normalise path decomposition tree            = 85
sog optimisation                             = 89
translate path decomposition tree to clauses = 712
generate state formula                       = 5782
generate state invariant formula             = 631
transform to DIMACS                          = 452
SAT solver                                   = 650
SAT solver for K=0004                        = 650

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2135";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="694";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="426928032";"40 sat:20:state formula"="956916";"40 sat:01:number of variables"="227878";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="258";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="3275";"30 problem:07:number of primitive shop actions"="870";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="2829";"30 problem:08:number of primitive non-shop actions"="1265";"30 problem:02:number of predicates"="322";"40 sat:03:number of horn"="997374";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="13";"40 sat:03:average size of clauses"="2.3977110119805602";"40 sat:02:number of clauses"="1142601";"40 sat:50:number of state clauses"="956916";"40 sat:03:number of assert"="146";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="258";"40 sat:50:number of decomposition clauses"="185685";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="618";"01 parsing:08:flatten formula"="76";"40 sat:41:SAT solver for K=0004"="650";"40 sat:00:total"="7290";"40 sat:16:generate state formula"="5782";"40 sat:20:transform to DIMACS"="452";"40 sat:11:generate path decomposition tree"="353";"02 preprocessing:07:compile methods with identical tasks"="14";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="893";"01 parsing:03:closed world assumption"="135";"02 preprocessing:11:lifted reachabiltiy analysis"="82";"01 parsing:02:sort expansion"="219";"40 sat:12:normalise path decomposition tree"="85";"40 sat:40:SAT solver"="650";"01 parsing:00:total"="1127";"40 sat:10:generate formula"="5926";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="40";"00 total:00:total"="16663";"40 sat:13:sog optimisation"="89";"02 preprocessing:12:grounded planning graph analysis"="1541";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1791";"02 preprocessing:04:split parameter"="58";"01 parsing:05:shop methods"="13";"10 search preparation:02:compute state invariants"="2856";"01 parsing:06:eliminate identical variables"="63";"40 sat:15:translate path decomposition tree to clauses"="712";"02 preprocessing:05:expand choiceless abstract tasks"="553";"40 sat:17:generate state invariant formula"="631";"02 preprocessing:00:total"="5548";"02 preprocessing:99:create artificial top task"="6";"02 preprocessing:84:grounding"="544"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient1,shot12];__method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser1,ingredient1];grasp[left,shot12];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1];clean-shot[shot12,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot12];fill-shot[shot12,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail8,ingredient1,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail8,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail8,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient4,dispenser1];grasp[left,shot12];clean-shot[shot12,ingredient4,left,right];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1];clean-shot[shot12,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot12];fill-shot[shot12,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot12,ingredient3,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[left,shaker1];shake[cocktail9,ingredient1,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail9,shot2,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail9,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot14];__method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser2,ingredient2];grasp[right,shot14];fill-shot[shot14,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,right,l0,l1];clean-shot[shot14,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,right,shot14];fill-shot[shot14,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail4,ingredient2,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient3,dispenser4];grasp[left,shot12];clean-shot[shot12,ingredient3,left,right];fill-shot[shot12,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,left,l0,l1];clean-shot[shot12,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,left,shot12];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail3,ingredient4,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot12];__method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient1,dispenser1];grasp[left,shot12];refill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1];clean-shot[shot12,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,left,shot12];fill-shot[shot12,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot12,ingredient3,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail7,ingredient1,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot12];__method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient3,dispenser3];grasp[right,shot12];refill-shot[shot12,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1];clean-shot[shot12,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,right,shot12];fill-shot[shot12,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot12,ingredient1,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[right,shaker1];shake[cocktail5,ingredient3,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot6,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient1,ingredient4,dispenser1];grasp[right,shot14];clean-shot[shot14,ingredient4,right,left];fill-shot[shot14,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,right,l0,l1];clean-shot[shot14,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,right,shot14];fill-shot[shot14,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot14,ingredient3,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[right,shaker1];shake[cocktail6,ingredient1,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot7,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot12];__method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient1,dispenser1];grasp[right,shot12];refill-shot[shot12,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,right,l0,l1];clean-shot[shot12,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,right,shot12];fill-shot[shot12,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot12,ingredient3,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[left,shaker1];shake[cocktail10,ingredient1,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot8,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient4,ingredient3,dispenser4];grasp[left,shot12];clean-shot[shot12,ingredient3,left,right];fill-shot[shot12,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,left,l0,l1];clean-shot[shot12,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient3,left,shot12];fill-shot[shot12,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot12,ingredient3,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail11,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient3,dispenser3];grasp[right,shot14];refill-shot[shot14,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1];clean-shot[shot14,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,right,shot14];fill-shot[shot14,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot14,ingredient1,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[right,shaker1];shake[cocktail2,ingredient3,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot10,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient1,dispenser2];grasp[left,shot14];clean-shot[shot14,ingredient1,left,right];fill-shot[shot14,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1];clean-shot[shot14,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,left,shot14];fill-shot[shot14,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[left,shaker1];shake[cocktail1,ingredient2,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot11,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3];__method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient3,dispenser3];grasp[right,shot12];refill-shot[shot12,ingredient3,right,left,dispenser3];leave[right,shot12];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient1,dispenser1];grasp[right,shot14];refill-shot[shot14,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,right,l0,l1];clean-shot[shot14,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,right,shot14];fill-shot[shot14,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot14,ingredient3,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot13];nop[];grasp[left,shaker1];shake[cocktail7,ingredient1,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot13,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient1 shot12 
2 __method_precondition_m8_do_fill_shot_8_precondition shot12 dispenser1 ingredient1 
3 grasp left shot12 
4 fill-shot shot12 ingredient1 left right dispenser1 
5 pour-shot-to-clean-shaker shot12 ingredient1 shaker1 left l0 l1 
6 clean-shot shot12 ingredient1 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient4 left shot12 
8 fill-shot shot12 ingredient4 left right dispenser4 
9 pour-shot-to-used-shaker shot12 ingredient4 shaker1 left l1 l2 
10 leave left shot12 
11 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient1 ingredient4 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail8 ingredient1 ingredient4 shaker1 left right 
16 pour-shaker-to-shot cocktail8 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail8 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 left 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient1 shot12 
22 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient1 ingredient4 dispenser1 
23 grasp left shot12 
24 clean-shot shot12 ingredient4 left right 
25 fill-shot shot12 ingredient1 left right dispenser1 
26 pour-shot-to-clean-shaker shot12 ingredient1 shaker1 left l0 l1 
27 clean-shot shot12 ingredient1 left right 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient3 left shot12 
29 fill-shot shot12 ingredient3 left right dispenser3 
30 pour-shot-to-used-shaker shot12 ingredient3 shaker1 left l1 l2 
31 leave left shot12 
32 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient1 ingredient3 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp left shaker1 
36 shake cocktail9 ingredient1 ingredient3 shaker1 left right 
37 pour-shaker-to-shot cocktail9 shot2 left shaker1 l2 l1 
38 empty-shaker left shaker1 cocktail9 l1 l0 
39 clean-shaker left right shaker1 
40 leave left shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 right 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient2 shot14 
43 __method_precondition_m8_do_fill_shot_8_precondition shot14 dispenser2 ingredient2 
44 grasp right shot14 
45 fill-shot shot14 ingredient2 right left dispenser2 
46 pour-shot-to-clean-shaker shot14 ingredient2 shaker1 right l0 l1 
47 clean-shot shot14 ingredient2 right left 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient4 right shot14 
49 fill-shot shot14 ingredient4 right left dispenser4 
50 pour-shot-to-used-shaker shot14 ingredient4 shaker1 right l1 l2 
51 leave right shot14 
52 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient2 ingredient4 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp right shaker1 
56 shake cocktail4 ingredient2 ingredient4 shaker1 right left 
57 pour-shaker-to-shot cocktail4 shot3 right shaker1 l2 l1 
58 empty-shaker right shaker1 cocktail4 l1 l0 
59 clean-shaker right left shaker1 
60 leave right shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient4 shot12 
63 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient4 ingredient3 dispenser4 
64 grasp left shot12 
65 clean-shot shot12 ingredient3 left right 
66 fill-shot shot12 ingredient4 left right dispenser4 
67 pour-shot-to-clean-shaker shot12 ingredient4 shaker1 left l0 l1 
68 clean-shot shot12 ingredient4 left right 
69 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient1 left shot12 
70 fill-shot shot12 ingredient1 left right dispenser1 
71 pour-shot-to-used-shaker shot12 ingredient1 shaker1 left l1 l2 
72 leave left shot12 
73 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient4 ingredient1 
74 __method_precondition_m5_do_clean_shot_5_precondition shot4 
75 nop  
76 grasp left shaker1 
77 shake cocktail3 ingredient4 ingredient1 shaker1 left right 
78 pour-shaker-to-shot cocktail3 shot4 left shaker1 l2 l1 
79 empty-shaker left shaker1 cocktail3 l1 l0 
80 clean-shaker left right shaker1 
81 leave left shaker1 
82 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
83 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient1 shot12 
84 __method_precondition_m7_do_fill_shot_7_precondition shot12 ingredient1 dispenser1 
85 grasp left shot12 
86 refill-shot shot12 ingredient1 left right dispenser1 
87 pour-shot-to-clean-shaker shot12 ingredient1 shaker1 left l0 l1 
88 clean-shot shot12 ingredient1 left right 
89 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient3 left shot12 
90 fill-shot shot12 ingredient3 left right dispenser3 
91 pour-shot-to-used-shaker shot12 ingredient3 shaker1 left l1 l2 
92 leave left shot12 
93 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient1 ingredient3 
94 __method_precondition_m5_do_clean_shot_5_precondition shot5 
95 nop  
96 grasp left shaker1 
97 shake cocktail7 ingredient1 ingredient3 shaker1 left right 
98 pour-shaker-to-shot cocktail7 shot5 left shaker1 l2 l1 
99 empty-shaker left shaker1 cocktail7 l1 l0 
100 clean-shaker left right shaker1 
101 leave left shaker1 
102 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 right 
103 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient3 shot12 
104 __method_precondition_m7_do_fill_shot_7_precondition shot12 ingredient3 dispenser3 
105 grasp right shot12 
106 refill-shot shot12 ingredient3 right left dispenser3 
107 pour-shot-to-clean-shaker shot12 ingredient3 shaker1 right l0 l1 
108 clean-shot shot12 ingredient3 right left 
109 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient1 right shot12 
110 fill-shot shot12 ingredient1 right left dispenser1 
111 pour-shot-to-used-shaker shot12 ingredient1 shaker1 right l1 l2 
112 leave right shot12 
113 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient3 ingredient1 
114 __method_precondition_m5_do_clean_shot_5_precondition shot6 
115 nop  
116 grasp right shaker1 
117 shake cocktail5 ingredient3 ingredient1 shaker1 right left 
118 pour-shaker-to-shot cocktail5 shot6 right shaker1 l2 l1 
119 empty-shaker right shaker1 cocktail5 l1 l0 
120 clean-shaker right left shaker1 
121 leave right shaker1 
122 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 right 
123 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient1 shot14 
124 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient1 ingredient4 dispenser1 
125 grasp right shot14 
126 clean-shot shot14 ingredient4 right left 
127 fill-shot shot14 ingredient1 right left dispenser1 
128 pour-shot-to-clean-shaker shot14 ingredient1 shaker1 right l0 l1 
129 clean-shot shot14 ingredient1 right left 
130 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient3 right shot14 
131 fill-shot shot14 ingredient3 right left dispenser3 
132 pour-shot-to-used-shaker shot14 ingredient3 shaker1 right l1 l2 
133 leave right shot14 
134 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient1 ingredient3 
135 __method_precondition_m5_do_clean_shot_5_precondition shot7 
136 nop  
137 grasp right shaker1 
138 shake cocktail6 ingredient1 ingredient3 shaker1 right left 
139 pour-shaker-to-shot cocktail6 shot7 right shaker1 l2 l1 
140 empty-shaker right shaker1 cocktail6 l1 l0 
141 clean-shaker right left shaker1 
142 leave right shaker1 
143 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
144 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot12 
145 __method_precondition_m7_do_fill_shot_7_precondition shot12 ingredient1 dispenser1 
146 grasp right shot12 
147 refill-shot shot12 ingredient1 right left dispenser1 
148 pour-shot-to-clean-shaker shot12 ingredient1 shaker1 right l0 l1 
149 clean-shot shot12 ingredient1 right left 
150 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient3 right shot12 
151 fill-shot shot12 ingredient3 right left dispenser3 
152 pour-shot-to-used-shaker shot12 ingredient3 shaker1 right l1 l2 
153 leave right shot12 
154 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient3 
155 __method_precondition_m5_do_clean_shot_5_precondition shot8 
156 nop  
157 grasp left shaker1 
158 shake cocktail10 ingredient1 ingredient3 shaker1 left right 
159 pour-shaker-to-shot cocktail10 shot8 left shaker1 l2 l1 
160 empty-shaker left shaker1 cocktail10 l1 l0 
161 clean-shaker left right shaker1 
162 leave left shaker1 
163 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 left 
164 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient4 shot12 
165 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient4 ingredient3 dispenser4 
166 grasp left shot12 
167 clean-shot shot12 ingredient3 left right 
168 fill-shot shot12 ingredient4 left right dispenser4 
169 pour-shot-to-clean-shaker shot12 ingredient4 shaker1 left l0 l1 
170 clean-shot shot12 ingredient4 left right 
171 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient3 left shot12 
172 fill-shot shot12 ingredient3 left right dispenser3 
173 pour-shot-to-used-shaker shot12 ingredient3 shaker1 left l1 l2 
174 leave left shot12 
175 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient4 ingredient3 
176 __method_precondition_m5_do_clean_shot_5_precondition shot9 
177 nop  
178 grasp right shaker1 
179 shake cocktail11 ingredient4 ingredient3 shaker1 right left 
180 pour-shaker-to-shot cocktail11 shot9 right shaker1 l2 l1 
181 empty-shaker right shaker1 cocktail11 l1 l0 
182 clean-shaker right left shaker1 
183 leave right shaker1 
184 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 right 
185 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient3 shot14 
186 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient3 dispenser3 
187 grasp right shot14 
188 refill-shot shot14 ingredient3 right left dispenser3 
189 pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 
190 clean-shot shot14 ingredient3 right left 
191 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient1 right shot14 
192 fill-shot shot14 ingredient1 right left dispenser1 
193 pour-shot-to-used-shaker shot14 ingredient1 shaker1 right l1 l2 
194 leave right shot14 
195 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient3 ingredient1 
196 __method_precondition_m5_do_clean_shot_5_precondition shot10 
197 nop  
198 grasp right shaker1 
199 shake cocktail2 ingredient3 ingredient1 shaker1 right left 
200 pour-shaker-to-shot cocktail2 shot10 right shaker1 l2 l1 
201 empty-shaker right shaker1 cocktail2 l1 l0 
202 clean-shaker right left shaker1 
203 leave right shaker1 
204 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
205 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient2 shot14 
206 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient2 ingredient1 dispenser2 
207 grasp left shot14 
208 clean-shot shot14 ingredient1 left right 
209 fill-shot shot14 ingredient2 left right dispenser2 
210 pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 
211 clean-shot shot14 ingredient2 left right 
212 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient1 left shot14 
213 fill-shot shot14 ingredient1 left right dispenser1 
214 pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 
215 leave left shot14 
216 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient2 ingredient1 
217 __method_precondition_m5_do_clean_shot_5_precondition shot11 
218 nop  
219 grasp left shaker1 
220 shake cocktail1 ingredient2 ingredient1 shaker1 left right 
221 pour-shaker-to-shot cocktail1 shot11 left shaker1 l2 l1 
222 empty-shaker left shaker1 cocktail1 l1 l0 
223 clean-shaker left right shaker1 
224 leave left shaker1 
225 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser3 ingredient3 
226 __method_precondition_m7_do_fill_shot_7_precondition shot12 ingredient3 dispenser3 
227 grasp right shot12 
228 refill-shot shot12 ingredient3 right left dispenser3 
229 leave right shot12 
230 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot13 right 
231 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient1 shot14 
232 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient1 dispenser1 
233 grasp right shot14 
234 refill-shot shot14 ingredient1 right left dispenser1 
235 pour-shot-to-clean-shaker shot14 ingredient1 shaker1 right l0 l1 
236 clean-shot shot14 ingredient1 right left 
237 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient3 right shot14 
238 fill-shot shot14 ingredient3 right left dispenser3 
239 pour-shot-to-used-shaker shot14 ingredient3 shaker1 right l1 l2 
240 leave right shot14 
241 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient1 ingredient3 
242 __method_precondition_m5_do_clean_shot_5_precondition shot13 
243 nop  
244 grasp left shaker1 
245 shake cocktail7 ingredient1 ingredient3 shaker1 left right 
246 pour-shaker-to-shot cocktail7 shot13 left shaker1 l2 l1 
247 empty-shaker left shaker1 cocktail7 l1 l0 
248 clean-shaker left right shaker1 
249 leave left shaker1 
root 324
250 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 176 177
251 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 71
252 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 89 331 335 92
253 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 46
254 serve_shot shot7 cocktail6  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 134 256 137 138 139 140 141 142
255 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 189
256 do_clean_shot_m4_serve_shot_sip_2 shot7 left  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2> 135 136
257 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 107
258 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient1 left  -> _m3_get_second_ingredient_2 70
259 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 123 272 339 317
260 do_fill_shot shot14 ingredient2 left  -> m9_do_fill_shot 206 207 208 209
261 get_second_ingredient cocktail10 right  -> m3_get_second_ingredient 150 306 271 153
262 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 164 301 282 360
263 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 83 345 371 355
264 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 111
265 do_fill_shot shot12 ingredient3 right  -> m7_do_fill_shot 104 105 106
266 get_first_ingredient cocktail7 right  -> m2_get_first_ingredient 231 276 369 370
267 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient1 right  -> _m2_get_first_ingredient_4 149
268 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
269 do_cocktail_in_shot1 shot6 cocktail5  -> m0_do_cocktail_in_shot1 102 313 274 270
270 serve_shot shot6 cocktail5  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot6,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 113 343 116 117 118 119 120 121
271 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 152
272 do_fill_shot shot14 ingredient1 right  -> m9_do_fill_shot 124 125 126 127
273 serve_shot shot11 cocktail1  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot11,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 216 297 219 220 221 222 223 224
274 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 109 327 264 112
275 do_cocktail_in_shot1 shot11 cocktail1  -> m0_do_cocktail_in_shot1 204 372 336 273
276 do_fill_shot shot14 ingredient1 right  -> m7_do_fill_shot 232 233 234
277 do_cocktail_in_shot1 shot5 cocktail7  -> m0_do_cocktail_in_shot1 82 263 252 299
278 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 50
279 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 62 307 330 332
280 do_cocktail_in_shot1 shot9 cocktail11  -> m0_do_cocktail_in_shot1 163 262 316 347
281 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 69 258 251 72
282 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 169
283 do_cocktail_in_shot1 shot8 cocktail10  -> m0_do_cocktail_in_shot1 143 354 261 319
284 get_first_ingredient cocktail9 left  -> m2_get_first_ingredient 21 320 334 348
285 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient1 right  -> _m3_get_second_ingredient_2 192
286 do_cocktail_in_shot1 shot7 cocktail6  -> m0_do_cocktail_in_shot1 122 259 296 254
287 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 94 95
288 get_second_ingredient cocktail9 left  -> m3_get_second_ingredient 28 294 344 31
289 do_cocktail_in_shot1 shot3 cocktail4  -> m0_do_cocktail_in_shot1 41 366 352 303
290 do_cocktail_in_shot1 shot10 cocktail2  -> m0_do_cocktail_in_shot1 184 340 318 311
291 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 210
292 serve_shot shot2 cocktail9  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 32 361 35 36 37 38 39 40
293 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient3 right  -> _m2_get_first_ingredient_4 108
294 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient3 left  -> _m3_get_second_ingredient_2 29
295 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient4 left  -> _m3_get_second_ingredient_2 8
296 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 130 323 300 133
297 do_clean_shot_m4_serve_shot_sip_2 shot11 right  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail2,right];m5_do_clean_shot;0;-1,-2> 217 218
298 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 53 54
299 serve_shot shot5 cocktail7  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 93 287 96 97 98 99 100 101
300 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 132
301 do_fill_shot shot12 ingredient4 left  -> m9_do_fill_shot 165 166 167 168
302 do_cocktail_in_shot1 shot2 cocktail9  -> m0_do_cocktail_in_shot1 20 284 288 292
303 serve_shot shot3 cocktail4  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 52 298 55 56 57 58 59 60
304 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient1 left  -> _m2_get_first_ingredient_4 6
305 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 173
306 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient3 right  -> _m3_get_second_ingredient_2 151
307 do_fill_shot shot12 ingredient4 left  -> m9_do_fill_shot 63 64 65 66
308 do_cocktail_in_shot1 shot13 cocktail7  -> m0_do_cocktail_in_shot1 230 266 325 338
309 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 1 337 357 304
310 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 214
311 serve_shot shot10 cocktail2  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 195 349 198 199 200 201 202 203
312 do_clean_shot_m4_serve_shot_sip_2 shot13 right  -> <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,right];m5_do_clean_shot;0;-1,-2> 242 243
313 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 103 265 257 293
314 do_fill_shot shot12 ingredient1 right  -> m7_do_fill_shot 145 146 147
315 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2> 74 75
316 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 171 363 305 174
317 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient1 right  -> _m2_get_first_ingredient_4 129
318 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 191 285 364 194
319 serve_shot shot8 cocktail10  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 154 362 157 158 159 160 161 162
320 do_fill_shot shot12 ingredient1 left  -> m9_do_fill_shot 22 23 24 25
321 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient1 left  -> _m3_get_second_ingredient_2 213
322 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient3 right  -> _m2_get_first_ingredient_4 190
323 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient3 right  -> _m3_get_second_ingredient_2 131
324 __choicelessATCompilation__top_1  -> __top_1 351 302 289 329 277 269 286 283 280 290 275 342 308
325 get_second_ingredient cocktail7 right  -> m3_get_second_ingredient 237 350 328 240
326 do_fill_shot shot14 ingredient3 right  -> m7_do_fill_shot 186 187 188
327 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient1 right  -> _m3_get_second_ingredient_2 110
328 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 239
329 do_cocktail_in_shot1 shot4 cocktail3  -> m0_do_cocktail_in_shot1 61 279 281 356
330 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 67
331 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient3 left  -> _m3_get_second_ingredient_2 90
332 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient4 left  -> _m2_get_first_ingredient_4 68
333 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient4 right  -> _m3_get_second_ingredient_2 49
334 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 26
335 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 91
336 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 212 321 310 215
337 do_fill_shot shot12 ingredient1 left  -> m8_do_fill_shot 2 3 4
338 serve_shot shot13 cocktail7  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot13,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 241 312 244 245 246 247 248 249
339 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 128
340 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 185 326 255 322
341 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient2 right  -> _m2_get_first_ingredient_4 47
342 do_cocktail_in_shot2 shot12 ingredient3  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 225 358 229
343 do_clean_shot_m4_serve_shot_sip_2 shot6 left  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail3,left];m5_do_clean_shot;0;-1,-2> 114 115
344 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 30
345 do_fill_shot shot12 ingredient1 left  -> m7_do_fill_shot 84 85 86
346 serve_shot shot1 cocktail8  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 11 268 14 15 16 17 18 19
347 serve_shot shot9 cocktail11  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 175 250 178 179 180 181 182 183
348 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient1 left  -> _m2_get_first_ingredient_4 27
349 do_clean_shot_m4_serve_shot_sip_2 shot10 left  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2> 196 197
350 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient3 right  -> _m3_get_second_ingredient_2 238
351 do_cocktail_in_shot1 shot1 cocktail8  -> m0_do_cocktail_in_shot1 0 309 365 346
352 get_second_ingredient cocktail4 right  -> m3_get_second_ingredient 48 333 278 51
353 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 148
354 get_first_ingredient cocktail10 right  -> m2_get_first_ingredient 144 314 353 267
355 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient1 left  -> _m2_get_first_ingredient_4 88
356 serve_shot shot4 cocktail3  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 73 315 76 77 78 79 80 81
357 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 5
358 do_fill_shot shot12 ingredient3 right  -> m7_do_fill_shot 226 227 228
359 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient2 left  -> _m2_get_first_ingredient_4 211
360 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient4 left  -> _m2_get_first_ingredient_4 170
361 do_clean_shot_m4_serve_shot_sip_2 shot2 right  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2> 33 34
362 do_clean_shot_m4_serve_shot_sip_2 shot8 right  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2> 155 156
363 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient3 left  -> _m3_get_second_ingredient_2 172
364 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 193
365 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 7 295 367 10
366 get_first_ingredient cocktail4 right  -> m2_get_first_ingredient 42 368 253 341
367 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 9
368 do_fill_shot shot14 ingredient2 right  -> m8_do_fill_shot 43 44 45
369 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 235
370 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient1 right  -> _m2_get_first_ingredient_4 236
371 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 87
372 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 205 260 291 359

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 18.218 MEMPEAK_KBS 636205.056
