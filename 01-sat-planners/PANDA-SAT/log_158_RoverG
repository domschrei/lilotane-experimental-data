PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/RoverG/domain.hddl instances/RoverG/p06.hddl"


Planner Configuration
=====================
Domain: instances/RoverG/domain.hddl
Problem: instances/RoverG/p06.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p06.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 26
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Compiling negative preconditions ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Compiling split parameters ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Grounded planning graph ... done in 286ms.
	Number of Grounded Actions 711
	Number of Grounded Literals 433
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Two Way TDG ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 28
Grounding ... done.
	number of abstract tasks = 263
	number of tasks = 907
	number of decomposition methods = 855
	number of predicates = 690
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 263
	number of tasks = 907
	number of decomposition methods = 855
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 78ms.
	Number of Grounded Actions 644
	Number of Grounded Literals 82
	number of abstract tasks = 263
	number of tasks = 907
	number of decomposition methods = 855
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 263
	number of tasks = 907
	number of decomposition methods = 855
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 263
	number of tasks = 907
	number of decomposition methods = 855
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 39ms.
	Number of Grounded Actions 644
	Number of Grounded Literals 82
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 264
	number of tasks = 908
	number of decomposition methods = 856
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 443
	number of epsilon methods = 0
	number of primitive tasks = 644
	number of constants = 0
Tasks 644 - 119
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772002ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 103 will abort at 9223372036854771910
done
initial PDT has 120 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 84 leafs
SHOP LEAFS 48
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 9963
Size 9962 at 0/644
Size 3555 at 500/644
Size 3555
Size 3555 at 0/644
Size 460 at 500/644
Size 460
Size 460 at 0/644
Size 166 at 500/644
Size 166
Size 166 at 0/644
Size 166 at 500/644
Size 166
Invariant time: 0.168
Number of invariants: 166
Invariant Clauses 14110
NUMBER OF CLAUSES 43450
NUMBER OF STATE CLAUSES 29140
NUMBER OF DECOMPOSITION CLAUSES 14310
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 67.07000000000001% 32.93% 0.0% 
NUMBER OF PATHS 84
Starting cryptominisat5.5
Setting starttime of solver to 1604483687221
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770652
done
initial PDT has 180 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 135 leafs
SHOP LEAFS 54
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 22576
NUMBER OF CLAUSES 135414
NUMBER OF STATE CLAUSES 48074
NUMBER OF DECOMPOSITION CLAUSES 87340
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 35.5% 64.5% 0.0% 
NUMBER OF PATHS 135
Starting cryptominisat5.5
Setting starttime of solver to 1604483688265
Command exited with non-zero status 10
0.05 0.01

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_1;4,81 81 m12_send_rock_data
1;4 34 pathaction!2_1;4,148
Consider method^4_3;1;1;2,346 346 m3_do_navigate2
3;1;1;2 19 pathaction!4_3;1;1;2,744
Consider method^3_2;4;1,356 356 m1_do_navigate1
2;4;1 145 pathaction!3_2;4;1,117
Consider method^3_5;2;2,673 673 m3_do_navigate2
5;2;2 22 pathaction!3_5;2;2,805
Consider method^2_0;1,841 841 m1_do_navigate1
0;1 121 pathaction!2_0;1,119
Consider method^4_0;4;1;2,15 15 m2_do_navigate2
0;4;1;2 117 pathaction!4_0;4;1;2,725
Consider method^4_5;1;1;2,346 346 m3_do_navigate2
5;1;1;2 94 pathaction!4_5;1;1;2,744
Consider method^3_2;1;2,172 172 m4_do_navigate2
2;1;2 129 pathaction!3_2;1;2,722
Consider method^3_3;4;1,601 601 m1_do_navigate1
3;4;1 53 pathaction!3_3;4;1,115
Consider method^2_5;4,198 198 m14_send_image_data
5;4 157 pathaction!2_5;4,138
Consider method^3_4;4;1,631 631 m1_do_navigate1
4;4;1 30 pathaction!3_4;4;1,130
Consider method^2_0;4,675 675 m8_send_soil_data
0;4 56 pathaction!2_0;4,170
Consider method^2_4;4,92 92 m14_send_image_data
4;4 69 pathaction!2_4;4,139
Consider method^4_4;1;1;2,303 303 m3_do_navigate2
4;1;1;2 130 pathaction!4_4;1;1;2,885
Consider method^3_4;2;2,192 192 m2_do_navigate2
4;2;2 132 pathaction!3_4;2;2,822
Consider method^1_4,217 217 m13_get_image_data
4 67 pathaction!1_4,40
Consider method^4_3;4;1;2,673 673 m3_do_navigate2
3;4;1;2 119 pathaction!4_3;4;1;2,805
Consider method^4_2;1;2;3,774 774 m3_do_navigate2
2;1;2;3 33 pathaction!4_2;1;2;3,733
Consider method^4_4;4;1;2,151 151 m3_do_navigate2
4;4;1;2 82 pathaction!4_4;4;1;2,737
Consider method^1_3,210 210 m13_get_image_data
3 52 pathaction!1_3,39
Consider method^1_5,523 523 m13_get_image_data
5 65 pathaction!1_5,38
Consider method^3_0;4;1,219 219 m1_do_navigate1
0;4;1 16 pathaction!3_0;4;1,119
Consider method^3_3;1;1,290 290 m1_do_navigate1
3;1;1 126 pathaction!3_3;1;1,110
Consider method^2_5;2,601 601 m1_do_navigate1
5;2 36 pathaction!2_5;2,115
Consider method^2_3;2,80 80 m0_do_navigate1
3;2 127 pathaction!2_3;2,110
Consider method^2_4;1,773 773 m15_do_calibrate
4;1 80 pathaction!2_4;1,399
Consider method^3_1;1;2,102 102 m4_do_navigate2
1;1;2 87 pathaction!3_1;1;2,855
Consider method^3_0;1;2,380 380 m4_do_navigate2
0;1;2 163 pathaction!3_0;1;2,851
Consider method^2_2;2,833 833 m5_empty_store
2;2 108 pathaction!2_2;2,135
Consider method^4_2;4;1;2,19 19 m3_do_navigate2
2;4;1;2 85 pathaction!4_2;4;1;2,746
Consider method^2_2;4,633 633 m11_send_rock_data
2;4 151 pathaction!2_2;4,149
Consider method^2_4;2,575 575 m1_do_navigate1
4;2 115 pathaction!2_4;2,127
Consider method^2_2;1,260 260 m1_do_navigate1
2;1 128 pathaction!2_2;1,113
Consider method^4_5;4;1;2,393 393 m3_do_navigate2
5;4;1;2 49 pathaction!4_5;4;1;2,801
Consider method^2_1;2,828 828 m6_empty_store
1;2 112 pathaction!2_1;2,133
Consider method^2_1;1,150 150 m1_do_navigate1
1;1 158 pathaction!2_1;1,123
Consider method^1_0,232 232 m7_get_soil_data
0 1 pathaction!1_0,97
Consider method^1_1,776 776 m10_get_rock_data
1 100 pathaction!1_1,344
Consider method^0_,855 855 __top_1
 137 pathaction!0_,907
Consider method^2_3;1,141 141 m15_do_calibrate
3;1 89 pathaction!2_3;1,401
Consider method^4_1;1;2;3,821 821 m3_do_navigate2
1;1;2;3 0 pathaction!4_1;1;2;3,785
Consider method^3_5;1;1,290 290 m1_do_navigate1
5;1;1 40 pathaction!3_5;1;1,110
Consider method^4_0;1;2;3,653 653 m3_do_navigate2
0;1;2;3 64 pathaction!4_0;1;2;3,852
Consider method^2_3;4,120 120 m14_send_image_data
3;4 73 pathaction!2_3;4,140
Consider method^2_0;2,582 582 m5_empty_store
0;2 71 pathaction!2_0;2,133
Consider method^3_5;4;1,216 216 m1_do_navigate1
5;4;1 10 pathaction!3_5;4;1,129
Consider method^2_5;1,141 141 m15_do_calibrate
5;1 76 pathaction!2_5;1,401
Consider method^1_2,387 387 m10_get_rock_data
2 142 pathaction!1_2,343
Consider method^3_4;1;1,231 231 m1_do_navigate1
4;1;1 161 pathaction!3_4;1;1,127


CHECKING primitive solution of length 115 ...
true 99 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 44 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint4;]
true 47 visit[waypoint4;]
true 98 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint4,waypoint0,waypoint2;]
true 18 navigate[rover1,waypoint4,waypoint2;]
true 45 visit[waypoint2;]
true 81 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint0;]
true 75 navigate[rover1,waypoint2,waypoint0;]
true 93 unvisit[waypoint2;]
true 50 unvisit[waypoint4;]
true 164 __method_precondition_m5_empty_store_5_precondition[rover1store;]
true 114 nop[;]
true 138 sample_soil[rover1,rover1store,waypoint0;]
true 165 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint2,waypoint0;]
true 11 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0;]
true 7 visit[waypoint0;]
true 110 __method_precondition_m2_do_navigate2_2_precondition[rover1,waypoint0;]
true 37 nop[;]
true 159 unvisit[waypoint0;]
true 92 communicate_soil_data1[rover1,general,waypoint0,waypoint0,waypoint2;]
true 12 __method_precondition_m10_get_rock_data_10_precondition[rover1store,rover1;]
true 77 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0;]
true 122 visit[waypoint0;]
true 8 __method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint0,waypoint3,waypoint2;]
true 42 navigate[rover1,waypoint0,waypoint2;]
true 83 visit[waypoint2;]
true 46 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint3;]
true 88 navigate[rover1,waypoint2,waypoint3;]
true 90 unvisit[waypoint2;]
true 32 unvisit[waypoint0;]
true 120 __method_precondition_m6_empty_store_6_precondition[rover1store;]
true 162 drop[rover1,rover1store;]
true 38 sample_rock[rover1,rover1store,waypoint3;]
true 14 __method_precondition_m12_send_rock_data_12_precondition[general,waypoint2,waypoint3,rover1;]
true 139 communicate_rock_data2[rover1,general,waypoint3,waypoint2;]
true 41 __method_precondition_m10_get_rock_data_10_precondition[rover3store,rover3;]
true 113 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint7;]
true 74 visit[waypoint7;]
true 59 __method_precondition_m4_do_navigate2_4_precondition[rover3,waypoint7,waypoint6,waypoint0;]
true 28 navigate[rover3,waypoint7,waypoint0;]
true 141 visit[waypoint0;]
true 95 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint0,waypoint6;]
true 167 navigate[rover3,waypoint0,waypoint6;]
true 72 unvisit[waypoint0;]
true 131 unvisit[waypoint7;]
true 21 __method_precondition_m5_empty_store_5_precondition[rover3store;]
true 111 nop[;]
true 116 sample_rock[rover3,rover3store,waypoint6;]
true 146 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint2,waypoint0;]
true 135 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint6;]
true 26 visit[waypoint6;]
true 125 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint6,waypoint0;]
true 62 navigate[rover3,waypoint6,waypoint0;]
true 20 unvisit[waypoint6;]
true 6 communicate_rock_data1[rover3,general,waypoint6,waypoint0,waypoint2;]
true 101 __method_precondition_m13_get_image_data_13_precondition[objective2,rover0,low_res,waypoint2,camera2;]
true 144 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective0,waypoint2;]
true 58 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint4;]
true 43 visit[waypoint4;]
true 152 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint4,waypoint2;]
true 55 navigate[rover0,waypoint4,waypoint2;]
true 66 unvisit[waypoint4;]
true 91 calibrate[rover0,camera2,objective0,waypoint2;]
true 9 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint2;]
true 54 nop[;]
true 48 take_image[rover0,waypoint2,objective2,camera2,low_res;]
true 104 __method_precondition_m14_send_image_data_14_precondition[general,waypoint2,waypoint4;]
true 123 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint2;]
true 25 visit[waypoint2;]
true 149 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint2,waypoint4;]
true 118 navigate[rover0,waypoint2,waypoint4;]
true 143 unvisit[waypoint2;]
true 140 communicate_image_data[rover0,general,objective2,low_res,waypoint4,waypoint2;]
true 148 __method_precondition_m13_get_image_data_13_precondition[objective1,rover2,high_res,waypoint1,camera1;]
true 107 __method_precondition_m15_do_calibrate_15_precondition[camera1,objective1,waypoint1;]
true 13 __method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint7;]
true 24 visit[waypoint7;]
true 133 __method_precondition_m3_do_navigate2_3_precondition[rover2,waypoint7,waypoint1;]
true 39 navigate[rover2,waypoint7,waypoint1;]
true 78 unvisit[waypoint7;]
true 35 calibrate[rover2,camera1,objective1,waypoint1;]
true 61 __method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint1;]
true 5 visit[waypoint1;]
true 166 __method_precondition_m2_do_navigate2_2_precondition[rover2,waypoint1;]
true 86 nop[;]
true 70 unvisit[waypoint1;]
true 155 take_image[rover2,waypoint1,objective1,camera1,high_res;]
true 27 __method_precondition_m14_send_image_data_14_precondition[general,waypoint2,waypoint7;]
true 79 __method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint1;]
true 109 visit[waypoint1;]
true 153 __method_precondition_m3_do_navigate2_3_precondition[rover2,waypoint1,waypoint7;]
true 134 navigate[rover2,waypoint1,waypoint7;]
true 3 unvisit[waypoint1;]
true 29 communicate_image_data[rover2,general,objective1,high_res,waypoint7,waypoint2;]
true 106 __method_precondition_m13_get_image_data_13_precondition[objective3,rover0,low_res,waypoint4,camera2;]
true 4 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective0,waypoint2;]
true 124 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint4;]
true 154 visit[waypoint4;]
true 97 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint4,waypoint2;]
true 103 navigate[rover0,waypoint4,waypoint2;]
true 17 unvisit[waypoint4;]
true 2 calibrate[rover0,camera2,objective0,waypoint2;]
true 150 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint2;]
true 51 visit[waypoint2;]
true 57 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint2,waypoint4;]
true 156 navigate[rover0,waypoint2,waypoint4;]
true 15 unvisit[waypoint2;]
true 23 take_image[rover0,waypoint4,objective3,camera2,low_res;]
true 147 __method_precondition_m14_send_image_data_14_precondition[general,waypoint2,waypoint5;]
true 160 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint4;]
true 84 visit[waypoint4;]
true 31 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint4,waypoint5;]
true 63 navigate[rover0,waypoint4,waypoint5;]
true 60 unvisit[waypoint4;]
true 136 communicate_image_data[rover0,general,objective3,low_res,waypoint5,waypoint2;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 208610072
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 82
number of actions                    = 908
number of abstract actions           = 264
number of primitive actions          = 644
number of methods                    = 856
number of primitive shop actions     = 443
number of primitive non-shop actions = 201
size of largest method               = 6
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 43305
number of clauses               = 135414
average size of clauses         = 4.084201042728226
number of assert                = 25
number of horn                  = 125156
K offset                        = 0
K chosen value                  = 5
state formula                   = 48074
method children clauses         = 0
number of paths                 = 135
maximum plan length             = 135
number of decomposition clauses = 87340
number of ordering clauses      = 0
number of state clauses         = 48074
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 6675
============ parsing ============
total                         = 1147
file parser                   = 629
sort expansion                = 201
closed world assumption       = 144
inherit preconditions         = 0
shop methods                  = 40
eliminate identical variables = 68
strip domain of hybridity     = 1
flatten formula               = 63
============ preprocessing ============
total                                      = 2442
compile negative preconditions             = 58
compile unit methods                       = 0
split parameter                            = 42
expand choiceless abstract tasks           = 1
compile methods with identical tasks       = 6
removing unnecessary predicates            = 285
lifted reachabiltiy analysis               = 80
grounded planning graph analysis           = 629
grounded task decomposition graph analysis = 1029
grounding                                  = 299
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 254
============ sat ============
total                                        = 2162
generate formula                             = 1684
generate path decomposition tree             = 303
normalise path decomposition tree            = 97
sog optimisation                             = 105
translate path decomposition tree to clauses = 495
generate state formula                       = 1597
generate state invariant formula             = 47
transform to DIMACS                          = 220
SAT solver                                   = 70
SAT solver for K=0004                        = 10
SAT solver for K=0005                        = 60

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="644";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="264";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="208610072";"40 sat:20:state formula"="48074";"40 sat:01:number of variables"="43305";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="135";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="856";"30 problem:07:number of primitive shop actions"="443";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="908";"30 problem:08:number of primitive non-shop actions"="201";"30 problem:02:number of predicates"="82";"40 sat:03:number of horn"="125156";"40 sat:15:K chosen value"="5";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="6";"40 sat:03:average size of clauses"="4.084201042728226";"40 sat:02:number of clauses"="135414";"40 sat:50:number of state clauses"="48074";"40 sat:03:number of assert"="25";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="135";"40 sat:50:number of decomposition clauses"="87340";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="629";"01 parsing:08:flatten formula"="63";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="2162";"40 sat:16:generate state formula"="1597";"40 sat:20:transform to DIMACS"="220";"40 sat:11:generate path decomposition tree"="303";"02 preprocessing:07:compile methods with identical tasks"="6";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="285";"01 parsing:03:closed world assumption"="144";"02 preprocessing:11:lifted reachabiltiy analysis"="80";"01 parsing:02:sort expansion"="201";"40 sat:12:normalise path decomposition tree"="97";"40 sat:40:SAT solver"="70";"01 parsing:00:total"="1147";"40 sat:10:generate formula"="1684";"40 sat:41:SAT solver for K=0005"="60";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="58";"00 total:00:total"="6675";"40 sat:13:sog optimisation"="105";"02 preprocessing:12:grounded planning graph analysis"="629";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1029";"02 preprocessing:04:split parameter"="42";"01 parsing:05:shop methods"="40";"10 search preparation:02:compute state invariants"="254";"01 parsing:06:eliminate identical variables"="68";"40 sat:15:translate path decomposition tree to clauses"="495";"02 preprocessing:05:expand choiceless abstract tasks"="1";"40 sat:17:generate state invariant formula"="47";"02 preprocessing:00:total"="2442";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="299"
#!verify __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1];__method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint4];visit[waypoint4];__method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint4,waypoint0,waypoint2];navigate[rover1,waypoint4,waypoint2];visit[waypoint2];__method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint0];navigate[rover1,waypoint2,waypoint0];unvisit[waypoint2];unvisit[waypoint4];__method_precondition_m5_empty_store_5_precondition[rover1store];nop[];sample_soil[rover1,rover1store,waypoint0];__method_precondition_m8_send_soil_data_8_precondition[general,waypoint2,waypoint0];__method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0];visit[waypoint0];__method_precondition_m2_do_navigate2_2_precondition[rover1,waypoint0];nop[];unvisit[waypoint0];communicate_soil_data1[rover1,general,waypoint0,waypoint0,waypoint2];__method_precondition_m10_get_rock_data_10_precondition[rover1store,rover1];__method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0];visit[waypoint0];__method_precondition_m4_do_navigate2_4_precondition[rover1,waypoint0,waypoint3,waypoint2];navigate[rover1,waypoint0,waypoint2];visit[waypoint2];__method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint3];navigate[rover1,waypoint2,waypoint3];unvisit[waypoint2];unvisit[waypoint0];__method_precondition_m6_empty_store_6_precondition[rover1store];drop[rover1,rover1store];sample_rock[rover1,rover1store,waypoint3];__method_precondition_m12_send_rock_data_12_precondition[general,waypoint2,waypoint3,rover1];communicate_rock_data2[rover1,general,waypoint3,waypoint2];__method_precondition_m10_get_rock_data_10_precondition[rover3store,rover3];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint7];visit[waypoint7];__method_precondition_m4_do_navigate2_4_precondition[rover3,waypoint7,waypoint6,waypoint0];navigate[rover3,waypoint7,waypoint0];visit[waypoint0];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint0,waypoint6];navigate[rover3,waypoint0,waypoint6];unvisit[waypoint0];unvisit[waypoint7];__method_precondition_m5_empty_store_5_precondition[rover3store];nop[];sample_rock[rover3,rover3store,waypoint6];__method_precondition_m11_send_rock_data_11_precondition[general,waypoint2,waypoint0];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint6];visit[waypoint6];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint6,waypoint0];navigate[rover3,waypoint6,waypoint0];unvisit[waypoint6];communicate_rock_data1[rover3,general,waypoint6,waypoint0,waypoint2];__method_precondition_m13_get_image_data_13_precondition[objective2,rover0,low_res,waypoint2,camera2];__method_precondition_m15_do_calibrate_15_precondition[camera2,objective0,waypoint2];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint4];visit[waypoint4];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint4,waypoint2];navigate[rover0,waypoint4,waypoint2];unvisit[waypoint4];calibrate[rover0,camera2,objective0,waypoint2];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint2];nop[];take_image[rover0,waypoint2,objective2,camera2,low_res];__method_precondition_m14_send_image_data_14_precondition[general,waypoint2,waypoint4];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint2];visit[waypoint2];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint2,waypoint4];navigate[rover0,waypoint2,waypoint4];unvisit[waypoint2];communicate_image_data[rover0,general,objective2,low_res,waypoint4,waypoint2];__method_precondition_m13_get_image_data_13_precondition[objective1,rover2,high_res,waypoint1,camera1];__method_precondition_m15_do_calibrate_15_precondition[camera1,objective1,waypoint1];__method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint7];visit[waypoint7];__method_precondition_m3_do_navigate2_3_precondition[rover2,waypoint7,waypoint1];navigate[rover2,waypoint7,waypoint1];unvisit[waypoint7];calibrate[rover2,camera1,objective1,waypoint1];__method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint1];visit[waypoint1];__method_precondition_m2_do_navigate2_2_precondition[rover2,waypoint1];nop[];unvisit[waypoint1];take_image[rover2,waypoint1,objective1,camera1,high_res];__method_precondition_m14_send_image_data_14_precondition[general,waypoint2,waypoint7];__method_precondition_m1_do_navigate1_1_precondition[rover2,waypoint1];visit[waypoint1];__method_precondition_m3_do_navigate2_3_precondition[rover2,waypoint1,waypoint7];navigate[rover2,waypoint1,waypoint7];unvisit[waypoint1];communicate_image_data[rover2,general,objective1,high_res,waypoint7,waypoint2];__method_precondition_m13_get_image_data_13_precondition[objective3,rover0,low_res,waypoint4,camera2];__method_precondition_m15_do_calibrate_15_precondition[camera2,objective0,waypoint2];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint4];visit[waypoint4];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint4,waypoint2];navigate[rover0,waypoint4,waypoint2];unvisit[waypoint4];calibrate[rover0,camera2,objective0,waypoint2];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint2];visit[waypoint2];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint2,waypoint4];navigate[rover0,waypoint2,waypoint4];unvisit[waypoint2];take_image[rover0,waypoint4,objective3,camera2,low_res];__method_precondition_m14_send_image_data_14_precondition[general,waypoint2,waypoint5];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint4];visit[waypoint4];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint4,waypoint5];navigate[rover0,waypoint4,waypoint5];unvisit[waypoint4];communicate_image_data[rover0,general,objective3,low_res,waypoint5,waypoint2]
==>
0 __method_precondition_m7_get_soil_data_7_precondition rover1store rover1 
1 __method_precondition_m1_do_navigate1_1_precondition rover1 waypoint4 
2 visit waypoint4 
3 __method_precondition_m4_do_navigate2_4_precondition rover1 waypoint4 waypoint0 waypoint2 
4 navigate rover1 waypoint4 waypoint2 
5 visit waypoint2 
6 __method_precondition_m3_do_navigate2_3_precondition rover1 waypoint2 waypoint0 
7 navigate rover1 waypoint2 waypoint0 
8 unvisit waypoint2 
9 unvisit waypoint4 
10 __method_precondition_m5_empty_store_5_precondition rover1store 
11 nop  
12 sample_soil rover1 rover1store waypoint0 
13 __method_precondition_m8_send_soil_data_8_precondition general waypoint2 waypoint0 
14 __method_precondition_m1_do_navigate1_1_precondition rover1 waypoint0 
15 visit waypoint0 
16 __method_precondition_m2_do_navigate2_2_precondition rover1 waypoint0 
17 nop  
18 unvisit waypoint0 
19 communicate_soil_data1 rover1 general waypoint0 waypoint0 waypoint2 
20 __method_precondition_m10_get_rock_data_10_precondition rover1store rover1 
21 __method_precondition_m1_do_navigate1_1_precondition rover1 waypoint0 
22 visit waypoint0 
23 __method_precondition_m4_do_navigate2_4_precondition rover1 waypoint0 waypoint3 waypoint2 
24 navigate rover1 waypoint0 waypoint2 
25 visit waypoint2 
26 __method_precondition_m3_do_navigate2_3_precondition rover1 waypoint2 waypoint3 
27 navigate rover1 waypoint2 waypoint3 
28 unvisit waypoint2 
29 unvisit waypoint0 
30 __method_precondition_m6_empty_store_6_precondition rover1store 
31 drop rover1 rover1store 
32 sample_rock rover1 rover1store waypoint3 
33 __method_precondition_m12_send_rock_data_12_precondition general waypoint2 waypoint3 rover1 
34 communicate_rock_data2 rover1 general waypoint3 waypoint2 
35 __method_precondition_m10_get_rock_data_10_precondition rover3store rover3 
36 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint7 
37 visit waypoint7 
38 __method_precondition_m4_do_navigate2_4_precondition rover3 waypoint7 waypoint6 waypoint0 
39 navigate rover3 waypoint7 waypoint0 
40 visit waypoint0 
41 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint0 waypoint6 
42 navigate rover3 waypoint0 waypoint6 
43 unvisit waypoint0 
44 unvisit waypoint7 
45 __method_precondition_m5_empty_store_5_precondition rover3store 
46 nop  
47 sample_rock rover3 rover3store waypoint6 
48 __method_precondition_m11_send_rock_data_11_precondition general waypoint2 waypoint0 
49 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint6 
50 visit waypoint6 
51 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint6 waypoint0 
52 navigate rover3 waypoint6 waypoint0 
53 unvisit waypoint6 
54 communicate_rock_data1 rover3 general waypoint6 waypoint0 waypoint2 
55 __method_precondition_m13_get_image_data_13_precondition objective2 rover0 low_res waypoint2 camera2 
56 __method_precondition_m15_do_calibrate_15_precondition camera2 objective0 waypoint2 
57 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint4 
58 visit waypoint4 
59 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint4 waypoint2 
60 navigate rover0 waypoint4 waypoint2 
61 unvisit waypoint4 
62 calibrate rover0 camera2 objective0 waypoint2 
63 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint2 
64 nop  
65 take_image rover0 waypoint2 objective2 camera2 low_res 
66 __method_precondition_m14_send_image_data_14_precondition general waypoint2 waypoint4 
67 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint2 
68 visit waypoint2 
69 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint2 waypoint4 
70 navigate rover0 waypoint2 waypoint4 
71 unvisit waypoint2 
72 communicate_image_data rover0 general objective2 low_res waypoint4 waypoint2 
73 __method_precondition_m13_get_image_data_13_precondition objective1 rover2 high_res waypoint1 camera1 
74 __method_precondition_m15_do_calibrate_15_precondition camera1 objective1 waypoint1 
75 __method_precondition_m1_do_navigate1_1_precondition rover2 waypoint7 
76 visit waypoint7 
77 __method_precondition_m3_do_navigate2_3_precondition rover2 waypoint7 waypoint1 
78 navigate rover2 waypoint7 waypoint1 
79 unvisit waypoint7 
80 calibrate rover2 camera1 objective1 waypoint1 
81 __method_precondition_m1_do_navigate1_1_precondition rover2 waypoint1 
82 visit waypoint1 
83 __method_precondition_m2_do_navigate2_2_precondition rover2 waypoint1 
84 nop  
85 unvisit waypoint1 
86 take_image rover2 waypoint1 objective1 camera1 high_res 
87 __method_precondition_m14_send_image_data_14_precondition general waypoint2 waypoint7 
88 __method_precondition_m1_do_navigate1_1_precondition rover2 waypoint1 
89 visit waypoint1 
90 __method_precondition_m3_do_navigate2_3_precondition rover2 waypoint1 waypoint7 
91 navigate rover2 waypoint1 waypoint7 
92 unvisit waypoint1 
93 communicate_image_data rover2 general objective1 high_res waypoint7 waypoint2 
94 __method_precondition_m13_get_image_data_13_precondition objective3 rover0 low_res waypoint4 camera2 
95 __method_precondition_m15_do_calibrate_15_precondition camera2 objective0 waypoint2 
96 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint4 
97 visit waypoint4 
98 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint4 waypoint2 
99 navigate rover0 waypoint4 waypoint2 
100 unvisit waypoint4 
101 calibrate rover0 camera2 objective0 waypoint2 
102 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint2 
103 visit waypoint2 
104 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint2 waypoint4 
105 navigate rover0 waypoint2 waypoint4 
106 unvisit waypoint2 
107 take_image rover0 waypoint4 objective3 camera2 low_res 
108 __method_precondition_m14_send_image_data_14_precondition general waypoint2 waypoint5 
109 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint4 
110 visit waypoint4 
111 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint4 waypoint5 
112 navigate rover0 waypoint4 waypoint5 
113 unvisit waypoint4 
114 communicate_image_data rover0 general objective3 low_res waypoint5 waypoint2 
root 117
115 get_rock_data waypoint3  -> m10_get_rock_data 20 137 119 32 125
116 do_navigate2 rover1 waypoint4 waypoint0  -> m4_do_navigate2 3 4 5 161 8
117 __artificialTopCompilation__top_1  -> __top_1 130 115 131 158 141 122
118 do_navigate2 rover1 waypoint0 waypoint3  -> m4_do_navigate2 23 24 25 138 28
119 empty_store rover1store rover1  -> m6_empty_store 30 31
120 do_navigate1 rover2 waypoint1  -> m1_do_navigate1 81 82 151 85
121 do_navigate1 rover0 waypoint2  -> m1_do_navigate1 96 97 136 100
122 get_image_data objective3 low_res  -> m13_get_image_data 94 148 155 107 126
123 send_image_data rover2 objective1 high_res  -> m14_send_image_data 87 132 93
124 do_navigate2 rover0 waypoint2 waypoint4  -> m3_do_navigate2 69 70
125 send_rock_data rover1 waypoint3  -> m12_send_rock_data 33 34
126 send_image_data rover0 objective3 low_res  -> m14_send_image_data 108 146 114
127 do_calibrate rover0 camera2  -> m15_do_calibrate 56 162 62
128 do_navigate2 rover1 waypoint0 waypoint0  -> m2_do_navigate2 16 17
129 do_navigate2 rover2 waypoint1 waypoint7  -> m3_do_navigate2 90 91
130 get_soil_data waypoint0  -> m7_get_soil_data 0 152 133 12 134
131 get_rock_data waypoint6  -> m10_get_rock_data 35 154 143 47 135
132 do_navigate1 rover2 waypoint7  -> m1_do_navigate1 88 89 129 92
133 empty_store rover1store rover1  -> m5_empty_store 10 11
134 send_soil_data rover1 waypoint0  -> m8_send_soil_data 13 150 19
135 send_rock_data rover3 waypoint6  -> m11_send_rock_data 48 139 54
136 do_navigate2 rover0 waypoint4 waypoint2  -> m3_do_navigate2 98 99
137 do_navigate1 rover1 waypoint3  -> m1_do_navigate1 21 22 118 29
138 do_navigate2 rover1 waypoint2 waypoint3  -> m3_do_navigate2 26 27
139 do_navigate1 rover3 waypoint0  -> m1_do_navigate1 49 50 160 53
140 do_calibrate rover2 camera1  -> m15_do_calibrate 74 163 80
141 get_image_data objective1 high_res  -> m13_get_image_data 73 140 120 86 123
142 do_navigate2 rover0 waypoint2 waypoint4  -> m3_do_navigate2 104 105
143 empty_store rover3store rover3  -> m5_empty_store 45 46
144 do_navigate1 rover0 waypoint2  -> m0_do_navigate1 63 64
145 send_image_data rover0 objective2 low_res  -> m14_send_image_data 66 147 72
146 do_navigate1 rover0 waypoint5  -> m1_do_navigate1 109 110 157 113
147 do_navigate1 rover0 waypoint4  -> m1_do_navigate1 67 68 124 71
148 do_calibrate rover0 camera2  -> m15_do_calibrate 95 121 101
149 do_navigate2 rover2 waypoint7 waypoint1  -> m3_do_navigate2 77 78
150 do_navigate1 rover1 waypoint0  -> m1_do_navigate1 14 15 128 18
151 do_navigate2 rover2 waypoint1 waypoint1  -> m2_do_navigate2 83 84
152 do_navigate1 rover1 waypoint0  -> m1_do_navigate1 1 2 116 9
153 do_navigate2 rover3 waypoint7 waypoint6  -> m4_do_navigate2 38 39 40 156 43
154 do_navigate1 rover3 waypoint6  -> m1_do_navigate1 36 37 153 44
155 do_navigate1 rover0 waypoint4  -> m1_do_navigate1 102 103 142 106
156 do_navigate2 rover3 waypoint0 waypoint6  -> m3_do_navigate2 41 42
157 do_navigate2 rover0 waypoint4 waypoint5  -> m3_do_navigate2 111 112
158 get_image_data objective2 low_res  -> m13_get_image_data 55 127 144 65 145
159 do_navigate2 rover0 waypoint4 waypoint2  -> m3_do_navigate2 59 60
160 do_navigate2 rover3 waypoint6 waypoint0  -> m3_do_navigate2 51 52
161 do_navigate2 rover1 waypoint2 waypoint0  -> m3_do_navigate2 6 7
162 do_navigate1 rover0 waypoint2  -> m1_do_navigate1 57 58 159 61
163 do_navigate1 rover2 waypoint1  -> m1_do_navigate1 75 76 149 79

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 7.701 MEMPEAK_KBS 339692.544
