PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p01.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p01.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p01.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounded planning graph ... done in 498ms.
	Number of Grounded Actions 2355
	Number of Grounded Literals 371
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounding ... done.
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 371
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 306ms.
	Number of Grounded Actions 2333
	Number of Grounded Literals 342
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1148
	number of tasks = 3481
	number of decomposition methods = 4190
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 791
	number of tasks = 3124
	number of decomposition methods = 3833
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 791
	number of tasks = 3124
	number of decomposition methods = 3833
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 791
	number of tasks = 3124
	number of decomposition methods = 3833
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 208ms.
	Number of Grounded Actions 2333
	Number of Grounded Literals 342
	number of abstract tasks = 791
	number of tasks = 3124
	number of decomposition methods = 3833
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 791
	number of tasks = 3124
	number of decomposition methods = 3593
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 791
	number of tasks = 3124
	number of decomposition methods = 3593
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 791
	number of tasks = 3124
	number of decomposition methods = 3593
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 791
	number of tasks = 3124
	number of decomposition methods = 3593
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 791
	number of tasks = 3124
	number of decomposition methods = 3593
	number of predicates = 342
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 928
	number of epsilon methods = 0
	number of primitive tasks = 2333
	number of constants = 0
Tasks 2333 - 13
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768238ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767750
done
initial PDT has 264 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 264 leafs
SHOP LEAFS 88
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 174933
Size 174933 at 0/2333
Size 174130 at 500/2333
Size 143793 at 1000/2333
Size 41577 at 1500/2333
Size 20243 at 2000/2333
Size 20203
Size 20203 at 0/2333
Size 20195 at 500/2333
Size 10699 at 1000/2333
Size 10697 at 1500/2333
Size 10689 at 2000/2333
Size 10689
Size 10689 at 0/2333
Size 10689 at 500/2333
Size 3294 at 1000/2333
Size 3270 at 1500/2333
Size 3198 at 2000/2333
Size 3198
Size 3198 at 0/2333
Size 3198 at 500/2333
Size 3078 at 1000/2333
Size 3078 at 1500/2333
Size 3078 at 2000/2333
Size 3078
Size 3078 at 0/2333
Size 3078 at 500/2333
Size 3013 at 1000/2333
Size 3013 at 1500/2333
Size 3013 at 2000/2333
Size 3013
Size 3013 at 0/2333
Size 3013 at 500/2333
Size 3013 at 1000/2333
Size 3013 at 1500/2333
Size 3013 at 2000/2333
Size 3013
Invariant time: 2.271
Number of invariants: 3013
Invariant Clauses 798445
NUMBER OF CLAUSES 1260093
NUMBER OF STATE CLAUSES 1055169
NUMBER OF DECOMPOSITION CLAUSES 204924
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.74% 16.26% 0.0% 
NUMBER OF PATHS 264
Starting cryptominisat5.5
Setting starttime of solver to 1604475117380
Command exited with non-zero status 10
0.68 0.04

Time command gave the following runtime for the solver: 720
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_5;3;1,515 515 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 140 pathaction!3_5;3;1,1050
Consider method^2_6;3,3349 3349 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 294 pathaction!2_6;3,2826
Consider method^2_3;1,1046 1046 m2_get_first_ingredient
3;1 289 pathaction!2_3;1,551
Consider method^2_9;1,1920 1920 m2_get_first_ingredient
9;1 43 pathaction!2_9;1,544
Consider method^2_2;2,1101 1101 m3_get_second_ingredient
2;2 223 pathaction!2_2;2,1601
Consider method^3_11;1;3,2014 2014 _m2_get_first_ingredient_4
11;1;3 297 pathaction!3_11;1;3,771
Consider method^2_3;3,3327 3327 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 141 pathaction!2_3;3,2829
Consider method^1_8,3007 3007 m0_do_cocktail_in_shot1
8 164 pathaction!1_8,1486
Consider method^3_0;1;1,421 421 m8_do_fill_shot
0;1;1 338 pathaction!3_0;1;1,927
Consider method^3_10;1;2,1212 1212 _m2_get_first_ingredient_3
10;1;2 3 pathaction!3_10;1;2,1201
Consider method^3_2;1;1,1740 1740 m8_do_fill_shot
2;1;1 147 pathaction!3_2;1;1,917
Consider method^3_2;2;2,1392 1392 _m3_get_second_ingredient_3
2;2;2 315 pathaction!3_2;2;2,2907
Consider method^2_5;1,3290 3290 m2_get_first_ingredient
5;1 190 pathaction!2_5;1,553
Consider method^2_11;3,41 41 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 276 pathaction!2_11;3,2830
Consider method^2_1;1,1294 1294 m2_get_first_ingredient
1;1 303 pathaction!2_1;1,557
Consider method^3_10;1;1,2479 2479 m7_do_fill_shot
10;1;1 85 pathaction!3_10;1;1,958
Consider method^3_11;2;1,3566 3566 _m3_get_second_ingredient_2
11;2;1 92 pathaction!3_11;2;1,670
Consider method^3_5;2;2,345 345 _m3_get_second_ingredient_3
5;2;2 213 pathaction!3_5;2;2,2911
Consider method^1_5,1118 1118 m0_do_cocktail_in_shot1
5 72 pathaction!1_5,1481
Consider method^3_4;3;1,160 160 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 319 pathaction!3_4;3;1,1031
Consider method^2_12;1,1668 1668 m7_do_fill_shot
12;1 318 pathaction!2_12;1,1006
Consider method^2_4;2,2207 2207 m3_get_second_ingredient
4;2 357 pathaction!2_4;2,1585
Consider method^2_6;1,156 156 m2_get_first_ingredient
6;1 17 pathaction!2_6;1,558
Consider method^3_1;1;2,2511 2511 _m2_get_first_ingredient_3
1;1;2 248 pathaction!3_1;1;2,1137
Consider method^2_7;2,146 146 m3_get_second_ingredient
7;2 341 pathaction!2_7;2,1583
Consider method^3_8;2;2,331 331 _m3_get_second_ingredient_3
8;2;2 351 pathaction!3_8;2;2,2945
Consider method^2_8;1,82 82 m2_get_first_ingredient
8;1 20 pathaction!2_8;1,542
Consider method^3_6;1;2,706 706 _m2_get_first_ingredient_3
6;1;2 193 pathaction!3_6;1;2,1193
Consider method^3_8;1;3,1303 1303 _m2_get_first_ingredient_4
8;1;3 30 pathaction!3_8;1;3,782
Consider method^3_4;2;1,3566 3566 _m3_get_second_ingredient_2
4;2;1 236 pathaction!3_4;2;1,670
Consider method^3_1;2;1,2656 2656 _m3_get_second_ingredient_2
1;2;1 198 pathaction!3_1;2;1,664
Consider method^3_2;2;1,164 164 _m3_get_second_ingredient_2
2;2;1 66 pathaction!3_2;2;1,672
Consider method^1_7,68 68 m0_do_cocktail_in_shot1
7 210 pathaction!1_7,1487
Consider method^2_10;3,2891 2891 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 131 pathaction!2_10;3,2828
Consider method^3_11;2;2,1824 1824 _m3_get_second_ingredient_3
11;2;2 274 pathaction!3_11;2;2,2919
Consider method^3_0;2;1,3566 3566 _m3_get_second_ingredient_2
0;2;1 377 pathaction!3_0;2;1,670
Consider method^1_3,63 63 m0_do_cocktail_in_shot1
3 347 pathaction!1_3,1483
Consider method^3_8;3;1,2986 2986 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 16 pathaction!3_8;3;1,1037
Consider method^2_3;2,1233 1233 m3_get_second_ingredient
3;2 56 pathaction!2_3;2,1591
Consider method^2_6;2,2498 2498 m3_get_second_ingredient
6;2 55 pathaction!2_6;2,1598
Consider method^2_1;2,2762 2762 m3_get_second_ingredient
1;2 162 pathaction!2_1;2,1597
Consider method^3_6;3;1,1565 1565 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2>
6;3;1 265 pathaction!3_6;3;1,1043
Consider method^2_1;3,1407 1407 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 252 pathaction!2_1;3,2834
Consider method^2_2;3,910 910 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 18 pathaction!2_2;3,2836
Consider method^3_2;1;3,1516 1516 _m2_get_first_ingredient_4
2;1;3 184 pathaction!3_2;1;3,749
Consider method^3_7;1;1,729 729 m9_do_fill_shot
7;1;1 94 pathaction!3_7;1;1,1028
Consider method^2_10;1,1590 1590 m2_get_first_ingredient
10;1 8 pathaction!2_10;1,547
Consider method^2_0;3,3469 3469 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 156 pathaction!2_0;3,2835
Consider method^3_9;2;1,3088 3088 _m3_get_second_ingredient_2
9;2;1 180 pathaction!3_9;2;1,645
Consider method^3_4;2;2,1824 1824 _m3_get_second_ingredient_3
4;2;2 242 pathaction!3_4;2;2,2919
Consider method^1_11,230 230 m0_do_cocktail_in_shot1
11 132 pathaction!1_11,1484
Consider method^3_3;2;1,2064 2064 _m3_get_second_ingredient_2
3;2;1 79 pathaction!3_3;2;1,641
Consider method^2_13;1,561 561 m9_do_fill_shot
13;1 278 pathaction!2_13;1,939
Consider method^3_10;2;1,3181 3181 _m3_get_second_ingredient_2
10;2;1 218 pathaction!3_10;2;1,708
Consider method^3_2;1;2,852 852 _m2_get_first_ingredient_3
2;1;2 247 pathaction!3_2;1;2,1180
Consider method^3_10;3;1,637 637 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 314 pathaction!3_10;3;1,1048
Consider method^3_7;2;1,3088 3088 _m3_get_second_ingredient_2
7;2;1 1 pathaction!3_7;2;1,645
Consider method^2_7;3,1166 1166 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 100 pathaction!2_7;3,2833
Consider method^3_7;3;1,758 758 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 267 pathaction!3_7;3;1,1034
Consider method^2_11;1,156 156 m2_get_first_ingredient
11;1 97 pathaction!2_11;1,558
Consider method^3_0;1;3,1012 1012 _m2_get_first_ingredient_4
0;1;3 61 pathaction!3_0;1;3,759
Consider method^1_2,2563 2563 m0_do_cocktail_in_shot1
2 86 pathaction!1_2,1490
Consider method^3_9;1;1,293 293 m9_do_fill_shot
9;1;1 75 pathaction!3_9;1;1,1008
Consider method^2_10;2,1631 1631 m3_get_second_ingredient
10;2 169 pathaction!2_10;2,1587
Consider method^3_1;1;1,3422 3422 m8_do_fill_shot
1;1;1 340 pathaction!3_1;1;1,967
Consider method^3_8;2;1,532 532 _m3_get_second_ingredient_2
8;2;1 251 pathaction!3_8;2;1,626
Consider method^3_3;1;1,72 72 m7_do_fill_shot
3;1;1 209 pathaction!3_3;1;1,952
Consider method^2_5;3,718 718 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 361 pathaction!2_5;3,2827
Consider method^2_2;1,1523 1523 m2_get_first_ingredient
2;1 60 pathaction!2_2;1,561
Consider method^3_7;1;2,2837 2837 _m2_get_first_ingredient_3
7;1;2 12 pathaction!3_7;1;2,1135
Consider method^3_3;1;3,3031 3031 _m2_get_first_ingredient_4
3;1;3 355 pathaction!3_3;1;3,784
Consider method^3_3;2;2,2771 2771 _m3_get_second_ingredient_3
3;2;2 363 pathaction!3_3;2;2,2884
Consider method^2_8;2,858 858 m3_get_second_ingredient
8;2 135 pathaction!2_8;2,1582
Consider method^3_10;1;3,3524 3524 _m2_get_first_ingredient_4
10;1;3 145 pathaction!3_10;1;3,790
Consider method^2_11;2,2498 2498 m3_get_second_ingredient
11;2 105 pathaction!2_11;2,1598
Consider method^1_9,2566 2566 m0_do_cocktail_in_shot1
9 346 pathaction!1_9,1485
Consider method^2_7;1,2663 2663 m2_get_first_ingredient
7;1 241 pathaction!2_7;1,543
Consider method^2_9;2,1495 1495 m3_get_second_ingredient
9;2 306 pathaction!2_9;2,1584
Consider method^3_8;1;1,435 435 m9_do_fill_shot
8;1;1 126 pathaction!3_8;1;1,950
Consider method^3_0;1;2,1448 1448 _m2_get_first_ingredient_3
0;1;2 158 pathaction!3_0;1;2,1177
Consider method^3_7;2;2,2026 2026 _m3_get_second_ingredient_3
7;2;2 348 pathaction!3_7;2;2,2917
Consider method^3_1;3;1,3253 3253 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 322 pathaction!3_1;3;1,1052
Consider method^3_1;2;2,2881 2881 _m3_get_second_ingredient_3
1;2;2 280 pathaction!3_1;2;2,2947
Consider method^1_6,1173 1173 m0_do_cocktail_in_shot1
6 40 pathaction!1_6,1480
Consider method^1_13,1741 1741 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
13 194 pathaction!1_13,1055
Consider method^3_11;3;1,651 651 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2>
11;3;1 174 pathaction!3_11;3;1,1030
Consider method^3_9;2;2,2026 2026 _m3_get_second_ingredient_3
9;2;2 39 pathaction!3_9;2;2,2917
Consider method^3_6;2;2,1824 1824 _m3_get_second_ingredient_3
6;2;2 217 pathaction!3_6;2;2,2919
Consider method^1_4,481 481 m0_do_cocktail_in_shot1
4 81 pathaction!1_4,1491
Consider method^3_3;1;2,1972 1972 _m2_get_first_ingredient_3
3;1;2 284 pathaction!3_3;1;2,1229
Consider method^2_4;1,1623 1623 m2_get_first_ingredient
4;1 160 pathaction!2_4;1,545
Consider method^2_5;2,1630 1630 m3_get_second_ingredient
5;2 343 pathaction!2_5;2,1593
Consider method^0_,3592 3592 __top_1
 206 pathaction!0_,3123
Consider method^3_6;1;3,2014 2014 _m2_get_first_ingredient_4
6;1;3 365 pathaction!3_6;1;3,771
Consider method^3_1;1;3,1823 1823 _m2_get_first_ingredient_4
1;1;3 2 pathaction!3_1;1;3,799
Consider method^3_0;3;1,1705 1705 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2>
0;3;1 369 pathaction!3_0;3;1,1032
Consider method^3_6;2;1,3566 3566 _m3_get_second_ingredient_2
6;2;1 166 pathaction!3_6;2;1,670
Consider method^3_6;1;1,585 585 m7_do_fill_shot
6;1;1 119 pathaction!3_6;1;1,939
Consider method^3_0;2;2,1824 1824 _m3_get_second_ingredient_3
0;2;2 159 pathaction!3_0;2;2,2919
Consider method^3_9;1;2,917 917 _m2_get_first_ingredient_3
9;1;2 125 pathaction!3_9;1;2,1204
Consider method^3_5;1;2,1448 1448 _m2_get_first_ingredient_3
5;1;2 238 pathaction!3_5;1;2,1177
Consider method^3_4;1;2,2921 2921 _m2_get_first_ingredient_3
4;1;2 150 pathaction!3_4;1;2,1239
Consider method^3_5;2;1,2031 2031 _m3_get_second_ingredient_2
5;2;1 325 pathaction!3_5;2;1,651
Consider method^2_0;2,1293 1293 m3_get_second_ingredient
0;2 88 pathaction!2_0;2,1586
Consider method^1_12,2953 2953 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
12 69 pathaction!1_12,1054
Consider method^3_3;3;1,452 452 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2>
3;3;1 93 pathaction!3_3;3;1,1041
Consider method^2_4;3,3129 3129 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 113 pathaction!2_4;3,2837
Consider method^3_2;3;1,606 606 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2>
2;3;1 281 pathaction!3_2;3;1,1045
Consider method^1_0,3108 3108 m0_do_cocktail_in_shot1
0 260 pathaction!1_0,1489
Consider method^3_5;1;3,1012 1012 _m2_get_first_ingredient_4
5;1;3 275 pathaction!3_5;1;3,759
Consider method^3_4;1;3,2551 2551 _m2_get_first_ingredient_4
4;1;3 229 pathaction!3_4;1;3,828
Consider method^3_11;1;1,3097 3097 m9_do_fill_shot
11;1;1 370 pathaction!3_11;1;1,939
Consider method^3_8;1;2,1663 1663 _m2_get_first_ingredient_3
8;1;2 330 pathaction!3_8;1;2,1156
Consider method^2_9;3,62 62 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 310 pathaction!2_9;3,2831
Consider method^2_0;1,3522 3522 m2_get_first_ingredient
0;1 253 pathaction!2_0;1,546
Consider method^1_10,2316 2316 m0_do_cocktail_in_shot1
10 7 pathaction!1_10,1482
Consider method^3_10;2;2,1189 1189 _m3_get_second_ingredient_3
10;2;2 258 pathaction!3_10;2;2,2957
Consider method^3_9;3;1,811 811 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2>
9;3;1 175 pathaction!3_9;3;1,1033
Consider method^3_5;1;1,2156 2156 m9_do_fill_shot
5;1;1 13 pathaction!3_5;1;1,927
Consider method^1_1,2152 2152 m0_do_cocktail_in_shot1
1 333 pathaction!1_1,1488
Consider method^3_9;1;3,2200 2200 _m2_get_first_ingredient_4
9;1;3 256 pathaction!3_9;1;3,840
Consider method^3_11;1;2,706 706 _m2_get_first_ingredient_3
11;1;2 225 pathaction!3_11;1;2,1193
Consider method^3_4;1;1,1274 1274 m9_do_fill_shot
4;1;1 321 pathaction!3_4;1;1,996
Consider method^2_8;3,683 683 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 254 pathaction!2_8;3,2832
Consider method^3_7;1;3,2880 2880 _m2_get_first_ingredient_4
7;1;3 345 pathaction!3_7;1;3,860


CHECKING primitive solution of length 257 ...
true 324 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 103 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient4,shot14;]
true 80 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser4,ingredient4;]
true 239 grasp[left,shot14;]
true 177 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 207 pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,left,l0,l1;]
true 332 clean-shot[shot14,ingredient4,left,right;]
true 136 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient1,left,shot14;]
true 327 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 300 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2;]
true 320 leave[left,shot14;]
true 192 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient4,ingredient1;]
true 153 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 25 nop[;]
true 170 grasp[right,shaker1;]
true 33 shake[cocktail4,ingredient4,ingredient1,shaker1,right,left;]
true 90 pour-shaker-to-shot[cocktail4,shot1,right,shaker1,l2,l1;]
true 78 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 183 clean-shaker[right,left,shaker1;]
true 38 leave[right,shaker1;]
true 83 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 115 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient3,shot15;]
true 173 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser3,ingredient3;]
true 148 grasp[right,shot15;]
true 129 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 134 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1;]
true 101 clean-shot[shot15,ingredient3,right,left;]
true 215 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient2,right,shot15;]
true 48 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 124 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,right,l1,l2;]
true 353 leave[right,shot15;]
true 51 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient3,ingredient2;]
true 188 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 359 nop[;]
true 35 grasp[right,shaker1;]
true 178 shake[cocktail6,ingredient3,ingredient2,shaker1,right,left;]
true 172 pour-shaker-to-shot[cocktail6,shot2,right,shaker1,l2,l1;]
true 259 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 87 clean-shaker[right,left,shaker1;]
true 271 leave[right,shaker1;]
true 312 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 240 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot13;]
true 70 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3;]
true 222 grasp[left,shot13;]
true 114 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 98 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 123 clean-shot[shot13,ingredient3,left,right;]
true 31 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient1,left,shot13;]
true 354 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 293 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 45 leave[left,shot13;]
true 201 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient1;]
true 250 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 329 nop[;]
true 233 grasp[left,shaker1;]
true 163 shake[cocktail11,ingredient3,ingredient1,shaker1,left,right;]
true 285 pour-shaker-to-shot[cocktail11,shot3,left,shaker1,l2,l1;]
true 73 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 381 clean-shaker[left,right,shaker1;]
true 371 leave[left,shaker1;]
true 181 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 58 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot15;]
true 211 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient2,dispenser2;]
true 139 grasp[right,shot15;]
true 302 refill-shot[shot15,ingredient2,right,left,dispenser2;]
true 76 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 307 clean-shot[shot15,ingredient2,right,left;]
true 155 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,right,shot15;]
true 202 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 311 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 270 leave[right,shot15;]
true 373 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient4;]
true 151 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 176 nop[;]
true 157 grasp[right,shaker1;]
true 187 shake[cocktail8,ingredient2,ingredient4,shaker1,right,left;]
true 9 pour-shaker-to-shot[cocktail8,shot4,right,shaker1,l2,l1;]
true 376 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 356 clean-shaker[right,left,shaker1;]
true 282 leave[right,shaker1;]
true 317 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 283 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot14;]
true 189 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient1,dispenser2;]
true 165 grasp[left,shot14;]
true 0 clean-shot[shot14,ingredient1,left,right;]
true 277 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 226 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 326 clean-shot[shot14,ingredient2,left,right;]
true 112 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,left,shot14;]
true 195 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 299 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2;]
true 74 leave[left,shot14;]
true 288 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient1;]
true 263 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 337 nop[;]
true 374 grasp[left,shaker1;]
true 301 shake[cocktail7,ingredient2,ingredient1,shaker1,left,right;]
true 197 pour-shaker-to-shot[cocktail7,shot5,left,shaker1,l2,l1;]
true 367 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 95 clean-shaker[left,right,shaker1;]
true 116 leave[left,shaker1;]
true 21 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 102 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot14;]
true 117 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient4,ingredient1,dispenser4;]
true 291 grasp[left,shot14;]
true 50 clean-shot[shot14,ingredient1,left,right;]
true 323 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 108 pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,left,l0,l1;]
true 149 clean-shot[shot14,ingredient4,left,right;]
true 99 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot14;]
true 255 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 264 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2;]
true 118 leave[left,shot14;]
true 216 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient3;]
true 161 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 144 nop[;]
true 220 grasp[left,shaker1;]
true 49 shake[cocktail9,ingredient4,ingredient3,shaker1,left,right;]
true 350 pour-shaker-to-shot[cocktail9,shot6,left,shaker1,l2,l1;]
true 380 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 27 clean-shaker[left,right,shaker1;]
true 110 leave[left,shaker1;]
true 29 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 362 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot14;]
true 67 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient3,dispenser3;]
true 244 grasp[left,shot14;]
true 24 refill-shot[shot14,ingredient3,left,right,dispenser3;]
true 138 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1;]
true 11 clean-shot[shot14,ingredient3,left,right;]
true 23 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,left,shot14;]
true 243 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 344 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2;]
true 304 leave[left,shot14;]
true 109 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient1;]
true 62 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 142 nop[;]
true 228 grasp[right,shaker1;]
true 268 shake[cocktail2,ingredient3,ingredient1,shaker1,right,left;]
true 171 pour-shaker-to-shot[cocktail2,shot7,right,shaker1,l2,l1;]
true 53 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 196 clean-shaker[right,left,shaker1;]
true 272 leave[right,shaker1;]
true 122 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 375 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot15;]
true 14 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient4,dispenser1;]
true 262 grasp[left,shot15;]
true 5 clean-shot[shot15,ingredient4,left,right;]
true 287 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 313 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 46 clean-shot[shot15,ingredient1,left,right;]
true 269 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot15;]
true 208 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 235 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 96 leave[left,shot15;]
true 133 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient4;]
true 273 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 245 nop[;]
true 331 grasp[right,shaker1;]
true 199 shake[cocktail3,ingredient1,ingredient4,shaker1,right,left;]
true 296 pour-shaker-to-shot[cocktail3,shot8,right,shaker1,l2,l1;]
true 368 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 34 clean-shaker[right,left,shaker1;]
true 44 leave[right,shaker1;]
true 77 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 237 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot13;]
true 137 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient1,dispenser4;]
true 59 grasp[right,shot13;]
true 203 clean-shot[shot13,ingredient1,right,left;]
true 234 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 106 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 349 clean-shot[shot13,ingredient4,right,left;]
true 168 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot13;]
true 372 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 219 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2;]
true 257 leave[right,shot13;]
true 104 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient2;]
true 127 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 146 nop[;]
true 309 grasp[right,shaker1;]
true 22 shake[cocktail5,ingredient4,ingredient2,shaker1,right,left;]
true 224 pour-shaker-to-shot[cocktail5,shot9,right,shaker1,l2,l1;]
true 214 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 15 clean-shaker[right,left,shaker1;]
true 63 leave[right,shaker1;]
true 91 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 360 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot15;]
true 41 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient4,dispenser2;]
true 154 grasp[left,shot15;]
true 143 clean-shot[shot15,ingredient4,left,right;]
true 28 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 358 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1;]
true 286 clean-shot[shot15,ingredient2,left,right;]
true 191 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot15;]
true 379 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 316 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 54 leave[left,shot15;]
true 120 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient4;]
true 26 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 378 nop[;]
true 205 grasp[right,shaker1;]
true 212 shake[cocktail1,ingredient2,ingredient4,shaker1,right,left;]
true 42 pour-shaker-to-shot[cocktail1,shot10,right,shaker1,l2,l1;]
true 279 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 4 clean-shaker[right,left,shaker1;]
true 364 leave[right,shaker1;]
true 89 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 328 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot14;]
true 227 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient1,dispenser1;]
true 152 grasp[left,shot14;]
true 107 refill-shot[shot14,ingredient1,left,right,dispenser1;]
true 352 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,left,l0,l1;]
true 231 clean-shot[shot14,ingredient1,left,right;]
true 246 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient2,left,shot14;]
true 179 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 292 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,left,l1,l2;]
true 47 leave[left,shot14;]
true 71 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient2;]
true 37 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 334 nop[;]
true 339 grasp[right,shaker1;]
true 204 shake[cocktail10,ingredient1,ingredient2,shaker1,right,left;]
true 200 pour-shaker-to-shot[cocktail10,shot11,right,shaker1,l2,l1;]
true 111 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 121 clean-shaker[right,left,shaker1;]
true 64 leave[right,shaker1;]
true 366 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 36 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot14;]
true 65 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient2,dispenser3;]
true 32 grasp[left,shot14;]
true 342 clean-shot[shot14,ingredient2,left,right;]
true 308 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 249 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1;]
true 182 clean-shot[shot14,ingredient3,left,right;]
true 186 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,left,shot14;]
true 305 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 128 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2;]
true 10 leave[left,shot14;]
true 57 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient1;]
true 84 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 167 nop[;]
true 185 grasp[right,shaker1;]
true 6 shake[cocktail2,ingredient3,ingredient1,shaker1,right,left;]
true 82 pour-shaker-to-shot[cocktail2,shot12,right,shaker1,l2,l1;]
true 336 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 130 clean-shaker[right,left,shaker1;]
true 52 leave[right,shaker1;]
true 19 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2;]
true 335 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient2,dispenser2;]
true 295 grasp[left,shot13;]
true 290 refill-shot[shot13,ingredient2,left,right,dispenser2;]
true 230 leave[left,shot13;]
true 298 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 68 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient1,dispenser3;]
true 266 grasp[left,shot14;]
true 232 clean-shot[shot14,ingredient1,left,right;]
true 221 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 261 leave[left,shot14;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 466135520
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 342
number of actions                    = 3124
number of abstract actions           = 791
number of primitive actions          = 2333
number of methods                    = 3593
number of primitive shop actions     = 928
number of primitive non-shop actions = 1405
size of largest method               = 14
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 246726
number of clauses               = 1260093
average size of clauses         = 2.4121862433963206
number of assert                = 156
number of horn                  = 1097639
K offset                        = 0
K chosen value                  = 4
state formula                   = 1055169
method children clauses         = 0
number of paths                 = 264
maximum plan length             = 264
number of decomposition clauses = 204924
number of ordering clauses      = 0
number of state clauses         = 1055169
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 16975
============ parsing ============
total                         = 1199
file parser                   = 661
sort expansion                = 255
closed world assumption       = 142
inherit preconditions         = 0
shop methods                  = 7
eliminate identical variables = 45
strip domain of hybridity     = 4
flatten formula               = 83
============ preprocessing ============
total                                      = 5830
compile negative preconditions             = 60
compile unit methods                       = 0
split parameter                            = 47
expand choiceless abstract tasks           = 613
compile methods with identical tasks       = 31
removing unnecessary predicates            = 1033
lifted reachabiltiy analysis               = 106
grounded planning graph analysis           = 1475
grounded task decomposition graph analysis = 1843
grounding                                  = 580
create artificial top task                 = 24
============ search preparation ============
compute state invariants = 2536
============ sat ============
total                                        = 7164
generate formula                             = 5615
generate path decomposition tree             = 411
normalise path decomposition tree            = 101
sog optimisation                             = 168
translate path decomposition tree to clauses = 725
generate state formula                       = 5538
generate state invariant formula             = 502
transform to DIMACS                          = 436
SAT solver                                   = 720
SAT solver for K=0004                        = 720

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2333";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="791";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="466135520";"40 sat:20:state formula"="1055169";"40 sat:01:number of variables"="246726";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="264";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="3593";"30 problem:07:number of primitive shop actions"="928";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3124";"30 problem:08:number of primitive non-shop actions"="1405";"30 problem:02:number of predicates"="342";"40 sat:03:number of horn"="1097639";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="14";"40 sat:03:average size of clauses"="2.4121862433963206";"40 sat:02:number of clauses"="1260093";"40 sat:50:number of state clauses"="1055169";"40 sat:03:number of assert"="156";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="264";"40 sat:50:number of decomposition clauses"="204924";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="661";"01 parsing:08:flatten formula"="83";"40 sat:41:SAT solver for K=0004"="720";"40 sat:00:total"="7164";"40 sat:16:generate state formula"="5538";"40 sat:20:transform to DIMACS"="436";"40 sat:11:generate path decomposition tree"="411";"02 preprocessing:07:compile methods with identical tasks"="31";"01 parsing:07:strip domain of hybridity"="4";"02 preprocessing:08:removing unnecessary predicates"="1033";"01 parsing:03:closed world assumption"="142";"02 preprocessing:11:lifted reachabiltiy analysis"="106";"01 parsing:02:sort expansion"="255";"40 sat:12:normalise path decomposition tree"="101";"40 sat:40:SAT solver"="720";"01 parsing:00:total"="1199";"40 sat:10:generate formula"="5615";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="60";"00 total:00:total"="16975";"40 sat:13:sog optimisation"="168";"02 preprocessing:12:grounded planning graph analysis"="1475";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1843";"02 preprocessing:04:split parameter"="47";"01 parsing:05:shop methods"="7";"10 search preparation:02:compute state invariants"="2536";"01 parsing:06:eliminate identical variables"="45";"40 sat:15:translate path decomposition tree to clauses"="725";"02 preprocessing:05:expand choiceless abstract tasks"="613";"40 sat:17:generate state invariant formula"="502";"02 preprocessing:00:total"="5830";"02 preprocessing:99:create artificial top task"="24";"02 preprocessing:84:grounding"="580"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient4,shot14];__method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser4,ingredient4];grasp[left,shot14];fill-shot[shot14,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,left,l0,l1];clean-shot[shot14,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient1,left,shot14];fill-shot[shot14,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[right,shaker1];shake[cocktail4,ingredient4,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot1,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient3,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser3,ingredient3];grasp[right,shot15];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1];clean-shot[shot15,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient2,right,shot15];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail6,ingredient3,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3];grasp[left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1];clean-shot[shot13,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient1,left,shot13];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[left,shaker1];shake[cocktail11,ingredient3,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail11,shot3,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail11,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient2,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient2,dispenser2];grasp[right,shot15];refill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1];clean-shot[shot15,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,right,shot15];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient2,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[right,shaker1];shake[cocktail8,ingredient2,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot4,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient2,ingredient1,dispenser2];grasp[left,shot14];clean-shot[shot14,ingredient1,left,right];fill-shot[shot14,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1];clean-shot[shot14,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,left,shot14];fill-shot[shot14,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail7,ingredient2,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient4,ingredient1,dispenser4];grasp[left,shot14];clean-shot[shot14,ingredient1,left,right];fill-shot[shot14,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,left,l0,l1];clean-shot[shot14,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot14];fill-shot[shot14,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail9,ingredient4,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail9,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail9,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient3,dispenser3];grasp[left,shot14];refill-shot[shot14,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1];clean-shot[shot14,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,left,shot14];fill-shot[shot14,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[right,shaker1];shake[cocktail2,ingredient3,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot7,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient4,dispenser1];grasp[left,shot15];clean-shot[shot15,ingredient4,left,right];fill-shot[shot15,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1];clean-shot[shot15,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail3,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail3,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail3,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient1,dispenser4];grasp[right,shot13];clean-shot[shot13,ingredient1,right,left];fill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1];clean-shot[shot13,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot13];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail5,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient4,dispenser2];grasp[left,shot15];clean-shot[shot15,ingredient4,left,right];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1];clean-shot[shot15,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[right,shaker1];shake[cocktail1,ingredient2,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail1,shot10,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail1,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient1,dispenser1];grasp[left,shot14];refill-shot[shot14,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,left,l0,l1];clean-shot[shot14,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient2,left,shot14];fill-shot[shot14,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot14,ingredient2,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail10,ingredient1,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient2,dispenser3];grasp[left,shot14];clean-shot[shot14,ingredient2,left,right];fill-shot[shot14,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,left,l0,l1];clean-shot[shot14,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,left,shot14];fill-shot[shot14,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot14,ingredient1,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[right,shaker1];shake[cocktail2,ingredient3,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot12,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2];__method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient2,dispenser2];grasp[left,shot13];refill-shot[shot13,ingredient2,left,right,dispenser2];leave[left,shot13];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient1,dispenser3];grasp[left,shot14];clean-shot[shot14,ingredient1,left,right];fill-shot[shot14,ingredient3,left,right,dispenser3];leave[left,shot14]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient4 shot14 
2 __method_precondition_m8_do_fill_shot_8_precondition shot14 dispenser4 ingredient4 
3 grasp left shot14 
4 fill-shot shot14 ingredient4 left right dispenser4 
5 pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 
6 clean-shot shot14 ingredient4 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient1 left shot14 
8 fill-shot shot14 ingredient1 left right dispenser1 
9 pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 
10 leave left shot14 
11 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient4 ingredient1 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp right shaker1 
15 shake cocktail4 ingredient4 ingredient1 shaker1 right left 
16 pour-shaker-to-shot cocktail4 shot1 right shaker1 l2 l1 
17 empty-shaker right shaker1 cocktail4 l1 l0 
18 clean-shaker right left shaker1 
19 leave right shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient3 shot15 
22 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser3 ingredient3 
23 grasp right shot15 
24 fill-shot shot15 ingredient3 right left dispenser3 
25 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 
26 clean-shot shot15 ingredient3 right left 
27 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient2 right shot15 
28 fill-shot shot15 ingredient2 right left dispenser2 
29 pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 
30 leave right shot15 
31 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient3 ingredient2 
32 __method_precondition_m5_do_clean_shot_5_precondition shot2 
33 nop  
34 grasp right shaker1 
35 shake cocktail6 ingredient3 ingredient2 shaker1 right left 
36 pour-shaker-to-shot cocktail6 shot2 right shaker1 l2 l1 
37 empty-shaker right shaker1 cocktail6 l1 l0 
38 clean-shaker right left shaker1 
39 leave right shaker1 
40 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
41 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient3 shot13 
42 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser3 ingredient3 
43 grasp left shot13 
44 fill-shot shot13 ingredient3 left right dispenser3 
45 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 
46 clean-shot shot13 ingredient3 left right 
47 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient1 left shot13 
48 fill-shot shot13 ingredient1 left right dispenser1 
49 pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 
50 leave left shot13 
51 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient3 ingredient1 
52 __method_precondition_m5_do_clean_shot_5_precondition shot3 
53 nop  
54 grasp left shaker1 
55 shake cocktail11 ingredient3 ingredient1 shaker1 left right 
56 pour-shaker-to-shot cocktail11 shot3 left shaker1 l2 l1 
57 empty-shaker left shaker1 cocktail11 l1 l0 
58 clean-shaker left right shaker1 
59 leave left shaker1 
60 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 right 
61 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient2 shot15 
62 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient2 dispenser2 
63 grasp right shot15 
64 refill-shot shot15 ingredient2 right left dispenser2 
65 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 
66 clean-shot shot15 ingredient2 right left 
67 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient4 right shot15 
68 fill-shot shot15 ingredient4 right left dispenser4 
69 pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 
70 leave right shot15 
71 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient2 ingredient4 
72 __method_precondition_m5_do_clean_shot_5_precondition shot4 
73 nop  
74 grasp right shaker1 
75 shake cocktail8 ingredient2 ingredient4 shaker1 right left 
76 pour-shaker-to-shot cocktail8 shot4 right shaker1 l2 l1 
77 empty-shaker right shaker1 cocktail8 l1 l0 
78 clean-shaker right left shaker1 
79 leave right shaker1 
80 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
81 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient2 shot14 
82 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient2 ingredient1 dispenser2 
83 grasp left shot14 
84 clean-shot shot14 ingredient1 left right 
85 fill-shot shot14 ingredient2 left right dispenser2 
86 pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 
87 clean-shot shot14 ingredient2 left right 
88 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient1 left shot14 
89 fill-shot shot14 ingredient1 left right dispenser1 
90 pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 
91 leave left shot14 
92 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient2 ingredient1 
93 __method_precondition_m5_do_clean_shot_5_precondition shot5 
94 nop  
95 grasp left shaker1 
96 shake cocktail7 ingredient2 ingredient1 shaker1 left right 
97 pour-shaker-to-shot cocktail7 shot5 left shaker1 l2 l1 
98 empty-shaker left shaker1 cocktail7 l1 l0 
99 clean-shaker left right shaker1 
100 leave left shaker1 
101 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
102 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient4 shot14 
103 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient4 ingredient1 dispenser4 
104 grasp left shot14 
105 clean-shot shot14 ingredient1 left right 
106 fill-shot shot14 ingredient4 left right dispenser4 
107 pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 
108 clean-shot shot14 ingredient4 left right 
109 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient3 left shot14 
110 fill-shot shot14 ingredient3 left right dispenser3 
111 pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 
112 leave left shot14 
113 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient4 ingredient3 
114 __method_precondition_m5_do_clean_shot_5_precondition shot6 
115 nop  
116 grasp left shaker1 
117 shake cocktail9 ingredient4 ingredient3 shaker1 left right 
118 pour-shaker-to-shot cocktail9 shot6 left shaker1 l2 l1 
119 empty-shaker left shaker1 cocktail9 l1 l0 
120 clean-shaker left right shaker1 
121 leave left shaker1 
122 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
123 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient3 shot14 
124 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient3 dispenser3 
125 grasp left shot14 
126 refill-shot shot14 ingredient3 left right dispenser3 
127 pour-shot-to-clean-shaker shot14 ingredient3 shaker1 left l0 l1 
128 clean-shot shot14 ingredient3 left right 
129 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient1 left shot14 
130 fill-shot shot14 ingredient1 left right dispenser1 
131 pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 
132 leave left shot14 
133 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient3 ingredient1 
134 __method_precondition_m5_do_clean_shot_5_precondition shot7 
135 nop  
136 grasp right shaker1 
137 shake cocktail2 ingredient3 ingredient1 shaker1 right left 
138 pour-shaker-to-shot cocktail2 shot7 right shaker1 l2 l1 
139 empty-shaker right shaker1 cocktail2 l1 l0 
140 clean-shaker right left shaker1 
141 leave right shaker1 
142 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 left 
143 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient1 shot15 
144 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient4 dispenser1 
145 grasp left shot15 
146 clean-shot shot15 ingredient4 left right 
147 fill-shot shot15 ingredient1 left right dispenser1 
148 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 
149 clean-shot shot15 ingredient1 left right 
150 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient4 left shot15 
151 fill-shot shot15 ingredient4 left right dispenser4 
152 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
153 leave left shot15 
154 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient1 ingredient4 
155 __method_precondition_m5_do_clean_shot_5_precondition shot8 
156 nop  
157 grasp right shaker1 
158 shake cocktail3 ingredient1 ingredient4 shaker1 right left 
159 pour-shaker-to-shot cocktail3 shot8 right shaker1 l2 l1 
160 empty-shaker right shaker1 cocktail3 l1 l0 
161 clean-shaker right left shaker1 
162 leave right shaker1 
163 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
164 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient4 shot13 
165 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient1 dispenser4 
166 grasp right shot13 
167 clean-shot shot13 ingredient1 right left 
168 fill-shot shot13 ingredient4 right left dispenser4 
169 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 
170 clean-shot shot13 ingredient4 right left 
171 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient2 right shot13 
172 fill-shot shot13 ingredient2 right left dispenser2 
173 pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 
174 leave right shot13 
175 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient4 ingredient2 
176 __method_precondition_m5_do_clean_shot_5_precondition shot9 
177 nop  
178 grasp right shaker1 
179 shake cocktail5 ingredient4 ingredient2 shaker1 right left 
180 pour-shaker-to-shot cocktail5 shot9 right shaker1 l2 l1 
181 empty-shaker right shaker1 cocktail5 l1 l0 
182 clean-shaker right left shaker1 
183 leave right shaker1 
184 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
185 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient2 shot15 
186 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient2 ingredient4 dispenser2 
187 grasp left shot15 
188 clean-shot shot15 ingredient4 left right 
189 fill-shot shot15 ingredient2 left right dispenser2 
190 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 
191 clean-shot shot15 ingredient2 left right 
192 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient4 left shot15 
193 fill-shot shot15 ingredient4 left right dispenser4 
194 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
195 leave left shot15 
196 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient2 ingredient4 
197 __method_precondition_m5_do_clean_shot_5_precondition shot10 
198 nop  
199 grasp right shaker1 
200 shake cocktail1 ingredient2 ingredient4 shaker1 right left 
201 pour-shaker-to-shot cocktail1 shot10 right shaker1 l2 l1 
202 empty-shaker right shaker1 cocktail1 l1 l0 
203 clean-shaker right left shaker1 
204 leave right shaker1 
205 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
206 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot14 
207 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient1 dispenser1 
208 grasp left shot14 
209 refill-shot shot14 ingredient1 left right dispenser1 
210 pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 
211 clean-shot shot14 ingredient1 left right 
212 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient2 left shot14 
213 fill-shot shot14 ingredient2 left right dispenser2 
214 pour-shot-to-used-shaker shot14 ingredient2 shaker1 left l1 l2 
215 leave left shot14 
216 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient2 
217 __method_precondition_m5_do_clean_shot_5_precondition shot11 
218 nop  
219 grasp right shaker1 
220 shake cocktail10 ingredient1 ingredient2 shaker1 right left 
221 pour-shaker-to-shot cocktail10 shot11 right shaker1 l2 l1 
222 empty-shaker right shaker1 cocktail10 l1 l0 
223 clean-shaker right left shaker1 
224 leave right shaker1 
225 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 left 
226 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient3 shot14 
227 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient3 ingredient2 dispenser3 
228 grasp left shot14 
229 clean-shot shot14 ingredient2 left right 
230 fill-shot shot14 ingredient3 left right dispenser3 
231 pour-shot-to-clean-shaker shot14 ingredient3 shaker1 left l0 l1 
232 clean-shot shot14 ingredient3 left right 
233 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient1 left shot14 
234 fill-shot shot14 ingredient1 left right dispenser1 
235 pour-shot-to-used-shaker shot14 ingredient1 shaker1 left l1 l2 
236 leave left shot14 
237 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient3 ingredient1 
238 __method_precondition_m5_do_clean_shot_5_precondition shot12 
239 nop  
240 grasp right shaker1 
241 shake cocktail2 ingredient3 ingredient1 shaker1 right left 
242 pour-shaker-to-shot cocktail2 shot12 right shaker1 l2 l1 
243 empty-shaker right shaker1 cocktail2 l1 l0 
244 clean-shaker right left shaker1 
245 leave right shaker1 
246 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser2 ingredient2 
247 __method_precondition_m7_do_fill_shot_7_precondition shot13 ingredient2 dispenser2 
248 grasp left shot13 
249 refill-shot shot13 ingredient2 left right dispenser2 
250 leave left shot13 
251 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser3 ingredient3 
252 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient3 ingredient1 dispenser3 
253 grasp left shot14 
254 clean-shot shot14 ingredient1 left right 
255 fill-shot shot14 ingredient3 left right dispenser3 
256 leave left shot14 
root 351
257 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 206 325 352 363
258 do_clean_shot_m4_serve_shot_sip_2 shot1 left  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2> 12 13
259 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 32 33
260 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient1 left  -> _m3_get_second_ingredient_2 8
261 do_fill_shot shot13 ingredient3 left  -> m8_do_fill_shot 42 43 44
262 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 7 260 355 10
263 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 5
264 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 93 94
265 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 49
266 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient3 left  -> _m2_get_first_ingredient_4 232
267 do_cocktail_in_shot2 shot13 ingredient2  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 246 378 250
268 do_fill_shot shot14 ingredient4 left  -> m9_do_fill_shot 103 104 105 106
269 do_cocktail_in_shot1 shot4 cocktail8  -> m0_do_cocktail_in_shot1 60 342 286 381
270 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 65
271 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 176 177
272 serve_shot shot10 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 196 380 199 200 201 202 203 204
273 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 173
274 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient2 left  -> _m2_get_first_ingredient_4 87
275 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient1 left  -> _m3_get_second_ingredient_2 89
276 do_cocktail_in_shot1 shot3 cocktail11  -> m0_do_cocktail_in_shot1 40 307 304 301
277 do_clean_shot_m4_serve_shot_sip_2 shot7 left  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2> 134 135
278 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 150 339 331 153
279 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 27 361 338 30
280 serve_shot shot11 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 216 336 219 220 221 222 223 224
281 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 131
282 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 21 356 366 309
283 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient3 left  -> _m3_get_second_ingredient_2 110
284 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 1 310 263 379
285 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 143 316 327 368
286 get_second_ingredient cocktail8 right  -> m3_get_second_ingredient 67 343 287 70
287 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 69
288 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 192 293 360 195
289 get_first_ingredient cocktail2 left  -> m2_get_first_ingredient 226 320 314 266
290 do_fill_shot shot13 ingredient4 right  -> m9_do_fill_shot 165 166 167 168
291 do_clean_shot_m4_serve_shot_sip_2 shot4 left  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2> 72 73
292 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 90
293 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 193
294 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 235
295 do_cocktail_in_shot1 shot5 cocktail7  -> m0_do_cocktail_in_shot1 80 306 340 341
296 do_cocktail_in_shot1 shot2 cocktail6  -> m0_do_cocktail_in_shot1 20 282 279 322
297 serve_shot shot12 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 237 305 240 241 242 243 244 245
298 do_cocktail_in_shot1 shot10 cocktail1  -> m0_do_cocktail_in_shot1 184 364 288 272
299 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 left  -> _m3_get_second_ingredient_2 48
300 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 left  -> _m2_get_first_ingredient_4 46
301 serve_shot shot3 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 51 311 54 55 56 57 58 59
302 do_cocktail_in_shot1 shot9 cocktail5  -> m0_do_cocktail_in_shot1 163 332 312 328
303 get_second_ingredient cocktail9 left  -> m3_get_second_ingredient 109 283 354 112
304 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 47 299 265 50
305 do_clean_shot_m4_serve_shot_sip_2 shot12 left  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2> 238 239
306 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 81 376 346 274
307 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 41 261 345 300
308 do_fill_shot shot15 ingredient2 right  -> m7_do_fill_shot 62 63 64
309 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 right  -> _m2_get_first_ingredient_4 26
310 do_fill_shot shot14 ingredient4 left  -> m8_do_fill_shot 2 3 4
311 do_clean_shot_m4_serve_shot_sip_2 shot3 right  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2> 52 53
312 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 171 344 273 174
313 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient1 left  -> _m3_get_second_ingredient_2 130
314 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 231
315 serve_shot shot7 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 133 277 136 137 138 139 140 141
316 do_fill_shot shot15 ingredient1 left  -> m9_do_fill_shot 144 145 146 147
317 do_fill_shot shot14 ingredient3 left  -> m9_do_fill_shot 252 253 254 255
318 do_cocktail_in_shot2 shot14 ingredient3  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 251 317 256
319 serve_shot shot1 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 258 14 15 16 17 18 19
320 do_fill_shot shot14 ingredient3 left  -> m9_do_fill_shot 227 228 229 230
321 serve_shot shot6 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 113 370 116 117 118 119 120 121
322 serve_shot shot2 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 31 259 34 35 36 37 38 39
323 do_cocktail_in_shot1 shot6 cocktail9  -> m0_do_cocktail_in_shot1 101 349 303 321
324 do_cocktail_in_shot1 shot11 cocktail10  -> m0_do_cocktail_in_shot1 205 257 377 280
325 do_fill_shot shot14 ingredient1 left  -> m7_do_fill_shot 207 208 209
326 get_first_ingredient cocktail2 left  -> m2_get_first_ingredient 123 372 330 375
327 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 148
328 serve_shot shot9 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 175 271 178 179 180 181 182 183
329 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient4 left  -> _m2_get_first_ingredient_4 108
330 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 127
331 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 152
332 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 164 290 357 374
333 do_cocktail_in_shot1 shot8 cocktail3  -> m0_do_cocktail_in_shot1 142 285 278 347
334 do_cocktail_in_shot1 shot1 cocktail4  -> m0_do_cocktail_in_shot1 0 284 262 319
335 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 214
336 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 217 218
337 get_second_ingredient cocktail2 left  -> m3_get_second_ingredient 233 359 294 236
338 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 29
339 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 151
340 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 88 275 292 91
341 serve_shot shot5 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 92 264 95 96 97 98 99 100
342 get_first_ingredient cocktail8 right  -> m2_get_first_ingredient 61 308 270 362
343 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 right  -> _m3_get_second_ingredient_2 68
344 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 right  -> _m3_get_second_ingredient_2 172
345 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 45
346 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 86
347 serve_shot shot8 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 154 367 157 158 159 160 161 162
348 do_cocktail_in_shot1 shot7 cocktail2  -> m0_do_cocktail_in_shot1 122 326 365 315
349 get_first_ingredient cocktail9 left  -> m2_get_first_ingredient 102 268 369 329
350 do_fill_shot shot15 ingredient2 left  -> m9_do_fill_shot 186 187 188 189
351 __choicelessATCompilation__top_1  -> __top_1 334 296 276 269 295 323 348 333 302 298 324 353 267 318
352 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 210
353 do_cocktail_in_shot1 shot12 cocktail2  -> m0_do_cocktail_in_shot1 225 289 337 297
354 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 111
355 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 9
356 do_fill_shot shot15 ingredient3 right  -> m8_do_fill_shot 22 23 24
357 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 169
358 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient2 left  -> _m3_get_second_ingredient_2 213
359 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient1 left  -> _m3_get_second_ingredient_2 234
360 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 194
361 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 right  -> _m3_get_second_ingredient_2 28
362 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 right  -> _m2_get_first_ingredient_4 66
363 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient1 left  -> _m2_get_first_ingredient_4 211
364 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 185 350 371 373
365 get_second_ingredient cocktail2 left  -> m3_get_second_ingredient 129 313 281 132
366 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 25
367 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 155 156
368 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 left  -> _m2_get_first_ingredient_4 149
369 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 107
370 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 114 115
371 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 190
372 do_fill_shot shot14 ingredient3 left  -> m7_do_fill_shot 124 125 126
373 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 left  -> _m2_get_first_ingredient_4 191
374 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 right  -> _m2_get_first_ingredient_4 170
375 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient3 left  -> _m2_get_first_ingredient_4 128
376 do_fill_shot shot14 ingredient2 left  -> m9_do_fill_shot 82 83 84 85
377 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 212 358 335 215
378 do_fill_shot shot13 ingredient2 left  -> m7_do_fill_shot 247 248 249
379 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient4 left  -> _m2_get_first_ingredient_4 6
380 do_clean_shot_m4_serve_shot_sip_2 shot10 left  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2> 197 198
381 serve_shot shot4 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 71 291 74 75 76 77 78 79

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 18.755 MEMPEAK_KBS 663853.056
