PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p09.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p09.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p09.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounded planning graph ... done in 470ms.
	Number of Grounded Actions 2013
	Number of Grounded Literals 327
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounding ... done.
	number of abstract tasks = 946
	number of tasks = 2887
	number of decomposition methods = 3485
	number of predicates = 327
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 946
	number of tasks = 2887
	number of decomposition methods = 3485
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 273ms.
	Number of Grounded Actions 1941
	Number of Grounded Literals 300
	number of abstract tasks = 946
	number of tasks = 2887
	number of decomposition methods = 3485
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 946
	number of tasks = 2887
	number of decomposition methods = 3485
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 642
	number of tasks = 2583
	number of decomposition methods = 3181
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 642
	number of tasks = 2583
	number of decomposition methods = 3181
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 642
	number of tasks = 2583
	number of decomposition methods = 3181
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 162ms.
	Number of Grounded Actions 1941
	Number of Grounded Literals 300
	number of abstract tasks = 642
	number of tasks = 2583
	number of decomposition methods = 3181
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 642
	number of tasks = 2583
	number of decomposition methods = 2983
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 642
	number of tasks = 2583
	number of decomposition methods = 2983
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 642
	number of tasks = 2583
	number of decomposition methods = 2983
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 642
	number of tasks = 2583
	number of decomposition methods = 2983
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 642
	number of tasks = 2583
	number of decomposition methods = 2983
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1941
	number of constants = 0
Tasks 1941 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854769374ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854769131
done
initial PDT has 237 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 237 leafs
SHOP LEAFS 79
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 134550
Size 134543 at 0/1941
Size 133671 at 500/1941
Size 133647 at 1000/1941
Size 132989 at 1500/1941
Size 109883
Size 109855 at 0/1941
Size 108835 at 500/1941
Size 108825 at 1000/1941
Size 20466 at 1500/1941
Size 19354
Size 19087 at 0/1941
Size 12031 at 500/1941
Size 12027 at 1000/1941
Size 12022 at 1500/1941
Size 11084
Size 10357 at 0/1941
Size 2798 at 500/1941
Size 2798 at 1000/1941
Size 2759 at 1500/1941
Size 2718
Size 2718 at 0/1941
Size 2674 at 500/1941
Size 2674 at 1000/1941
Size 2674 at 1500/1941
Size 2674
Size 2665 at 0/1941
Size 2521 at 500/1941
Size 2521 at 1000/1941
Size 2521 at 1500/1941
Size 2521
Size 2521 at 0/1941
Size 2521 at 500/1941
Size 2521 at 1000/1941
Size 2521 at 1500/1941
Size 2521
Invariant time: 4.66
Number of invariants: 2521
Invariant Clauses 599998
NUMBER OF CLAUSES 956535
NUMBER OF STATE CLAUSES 802832
NUMBER OF DECOMPOSITION CLAUSES 153703
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.93% 16.07% 0.0% 
NUMBER OF PATHS 237
Starting cryptominisat5.5
Setting starttime of solver to 1604475282846
Command exited with non-zero status 10
0.52 0.02

Time command gave the following runtime for the solver: 540
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_4;3;1,157 157 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 141 pathaction!3_4;3;1,440
Consider method^2_0;2,2198 2198 m3_get_second_ingredient
0;2 285 pathaction!2_0;2,424
Consider method^3_8;1;3,1153 1153 _m2_get_first_ingredient_4
8;1;3 193 pathaction!3_8;1;3,1742
Consider method^2_5;1,309 309 m2_get_first_ingredient
5;1 92 pathaction!2_5;1,20
Consider method^3_6;2;2,319 319 _m3_get_second_ingredient_3
6;2;2 205 pathaction!3_6;2;2,2356
Consider method^3_3;2;1,159 159 _m3_get_second_ingredient_2
3;2;1 253 pathaction!3_3;2;1,2395
Consider method^3_2;1;1,1163 1163 m9_do_fill_shot
2;1;1 204 pathaction!3_2;1;1,2486
Consider method^2_1;1,2865 2865 m2_get_first_ingredient
1;1 291 pathaction!2_1;1,14
Consider method^3_5;2;2,151 151 _m3_get_second_ingredient_3
5;2;2 258 pathaction!3_5;2;2,2340
Consider method^3_8;3;1,2510 2510 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 299 pathaction!3_8;3;1,446
Consider method^3_2;3;1,1748 1748 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 233 pathaction!3_2;3;1,460
Consider method^3_6;1;2,633 633 _m2_get_first_ingredient_3
6;1;2 225 pathaction!3_6;1;2,1233
Consider method^3_8;2;2,319 319 _m3_get_second_ingredient_3
8;2;2 218 pathaction!3_8;2;2,2356
Consider method^3_0;1;2,2179 2179 _m2_get_first_ingredient_3
0;1;2 165 pathaction!3_0;1;2,1253
Consider method^3_11;1;1,1361 1361 m9_do_fill_shot
11;1;1 303 pathaction!3_11;1;1,2533
Consider method^2_6;3,2085 2085 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 252 pathaction!2_6;3,2271
Consider method^3_3;1;2,808 808 _m2_get_first_ingredient_3
3;1;2 298 pathaction!3_3;1;2,1242
Consider method^2_9;2,2832 2832 m3_get_second_ingredient
9;2 16 pathaction!2_9;2,427
Consider method^3_9;1;1,303 303 m9_do_fill_shot
9;1;1 38 pathaction!3_9;1;1,2466
Consider method^2_1;2,1763 1763 m3_get_second_ingredient
1;2 169 pathaction!2_1;2,422
Consider method^3_4;1;2,2511 2511 _m2_get_first_ingredient_3
4;1;2 242 pathaction!3_4;1;2,1279
Consider method^2_6;2,18 18 m3_get_second_ingredient
6;2 201 pathaction!2_6;2,416
Consider method^2_11;3,359 359 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 243 pathaction!2_11;3,2272
Consider method^3_1;1;1,296 296 m8_do_fill_shot
1;1;1 68 pathaction!3_1;1;1,2466
Consider method^2_10;1,11 11 m9_do_fill_shot
10;1 309 pathaction!2_10;1,2527
Consider method^3_2;1;3,693 693 _m2_get_first_ingredient_4
2;1;3 245 pathaction!3_2;1;3,1745
Consider method^3_1;1;3,2155 2155 _m2_get_first_ingredient_4
1;1;3 240 pathaction!3_1;1;3,1725
Consider method^3_2;2;2,1658 1658 _m3_get_second_ingredient_3
2;2;2 333 pathaction!3_2;2;2,2295
Consider method^2_5;2,1874 1874 m3_get_second_ingredient
5;2 29 pathaction!2_5;2,428
Consider method^3_11;2;1,2881 2881 _m3_get_second_ingredient_2
11;2;1 81 pathaction!3_11;2;1,2371
Consider method^3_0;1;1,1952 1952 m8_do_fill_shot
0;1;1 270 pathaction!3_0;1;1,2543
Consider method^2_5;3,615 615 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 105 pathaction!2_5;3,2276
Consider method^2_8;2,2509 2509 m3_get_second_ingredient
8;2 278 pathaction!2_8;2,418
Consider method^3_7;1;3,265 265 _m2_get_first_ingredient_4
7;1;3 296 pathaction!3_7;1;3,1786
Consider method^2_2;2,1473 1473 m3_get_second_ingredient
2;2 36 pathaction!2_2;2,420
Consider method^3_2;2;1,671 671 _m3_get_second_ingredient_2
2;2;1 224 pathaction!3_2;2;1,2392
Consider method^3_7;2;1,626 626 _m3_get_second_ingredient_2
7;2;1 238 pathaction!3_7;2;1,2381
Consider method^3_1;1;2,66 66 _m2_get_first_ingredient_3
1;1;2 234 pathaction!3_1;1;2,1259
Consider method^3_9;1;2,66 66 _m2_get_first_ingredient_3
9;1;2 54 pathaction!3_9;1;2,1259
Consider method^3_6;1;1,971 971 m7_do_fill_shot
6;1;1 142 pathaction!3_6;1;1,2484
Consider method^2_4;1,2948 2948 m2_get_first_ingredient
4;1 226 pathaction!2_4;1,4
Consider method^3_6;3;1,1398 1398 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2>
6;3;1 301 pathaction!3_6;3;1,452
Consider method^3_5;1;1,1192 1192 m9_do_fill_shot
5;1;1 322 pathaction!3_5;1;1,2543
Consider method^3_5;2;1,2618 2618 _m3_get_second_ingredient_2
5;2;1 220 pathaction!3_5;2;1,2412
Consider method^3_1;2;2,2256 2256 _m3_get_second_ingredient_3
1;2;2 151 pathaction!3_1;2;2,2332
Consider method^3_3;1;1,2601 2601 m7_do_fill_shot
3;1;1 94 pathaction!3_3;1;1,2455
Consider method^3_9;2;1,2881 2881 _m3_get_second_ingredient_2
9;2;1 115 pathaction!3_9;2;1,2371
Consider method^3_11;2;2,2256 2256 _m3_get_second_ingredient_3
11;2;2 295 pathaction!3_11;2;2,2332
Consider method^3_4;1;1,1163 1163 m9_do_fill_shot
4;1;1 304 pathaction!3_4;1;1,2486
Consider method^3_11;1;2,257 257 _m2_get_first_ingredient_3
11;1;2 40 pathaction!3_11;1;2,1246
Consider method^2_7;2,682 682 m3_get_second_ingredient
7;2 76 pathaction!2_7;2,417
Consider method^3_6;1;3,2605 2605 _m2_get_first_ingredient_4
6;1;3 308 pathaction!3_6;1;3,1743
Consider method^3_8;2;1,497 497 _m3_get_second_ingredient_2
8;2;1 257 pathaction!3_8;2;1,2369
Consider method^1_2,2424 2424 m0_do_cocktail_in_shot1
2 127 pathaction!1_2,2288
Consider method^1_3,1447 1447 m0_do_cocktail_in_shot1
3 239 pathaction!1_3,2279
Consider method^2_4;3,2119 2119 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 79 pathaction!2_4;3,2273
Consider method^3_5;1;3,1375 1375 _m2_get_first_ingredient_4
5;1;3 65 pathaction!3_5;1;3,1802
Consider method^3_9;3;1,1826 1826 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail5,right];m5_do_clean_shot;0;-1,-2>
9;3;1 276 pathaction!3_9;3;1,458
Consider method^3_7;2;2,2808 2808 _m3_get_second_ingredient_3
7;2;2 1 pathaction!3_7;2;2,2309
Consider method^2_11;2,2397 2397 m3_get_second_ingredient
11;2 255 pathaction!2_11;2,421
Consider method^3_4;2;1,2025 2025 _m3_get_second_ingredient_2
4;2;1 106 pathaction!3_4;2;1,2422
Consider method^3_2;1;2,2511 2511 _m2_get_first_ingredient_3
2;1;2 69 pathaction!3_2;1;2,1279
Consider method^1_7,1655 1655 m0_do_cocktail_in_shot1
7 294 pathaction!1_7,2278
Consider method^0_,2982 2982 __top_1
 207 pathaction!0_,2582
Consider method^3_4;2;2,1586 1586 _m3_get_second_ingredient_3
4;2;2 277 pathaction!3_4;2;2,2321
Consider method^2_8;3,2773 2773 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 126 pathaction!2_8;3,2270
Consider method^3_1;3;1,2696 2696 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 210 pathaction!3_1;3;1,459
Consider method^2_11;1,2943 2943 m2_get_first_ingredient
11;1 283 pathaction!2_11;1,13
Consider method^1_5,2221 2221 m0_do_cocktail_in_shot1
5 72 pathaction!1_5,2287
Consider method^3_9;1;3,2155 2155 _m2_get_first_ingredient_4
9;1;3 319 pathaction!3_9;1;3,1725
Consider method^1_1,789 789 m0_do_cocktail_in_shot1
1 236 pathaction!1_1,2285
Consider method^2_9;1,754 754 m2_get_first_ingredient
9;1 120 pathaction!2_9;1,19
Consider method^2_3;2,2685 2685 m3_get_second_ingredient
3;2 130 pathaction!2_3;2,411
Consider method^2_0;3,446 446 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 280 pathaction!2_0;3,2269
Consider method^2_4;2,1118 1118 m3_get_second_ingredient
4;2 262 pathaction!2_4;2,412
Consider method^2_0;1,1009 1009 m2_get_first_ingredient
0;1 131 pathaction!2_0;1,16
Consider method^3_3;2;2,1230 1230 _m3_get_second_ingredient_3
3;2;2 249 pathaction!3_3;2;2,2339
Consider method^2_2;3,2512 2512 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 23 pathaction!2_2;3,2277
Consider method^1_11,143 143 m0_do_cocktail_in_shot1
11 137 pathaction!1_11,2283
Consider method^2_8;1,2335 2335 m2_get_first_ingredient
8;1 147 pathaction!2_8;1,10
Consider method^2_7;1,95 95 m2_get_first_ingredient
7;1 159 pathaction!2_7;1,9
Consider method^2_7;3,2415 2415 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 32 pathaction!2_7;3,2267
Consider method^2_2;1,2932 2932 m2_get_first_ingredient
2;1 321 pathaction!2_2;1,12
Consider method^2_1;3,1537 1537 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 24 pathaction!2_1;3,2274
Consider method^1_4,540 540 m0_do_cocktail_in_shot1
4 313 pathaction!1_4,2284
Consider method^3_7;1;1,2717 2717 m9_do_fill_shot
7;1;1 288 pathaction!3_7;1;1,2527
Consider method^2_3;3,2389 2389 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 166 pathaction!2_3;3,2268
Consider method^3_6;2;1,497 497 _m3_get_second_ingredient_2
6;2;1 189 pathaction!3_6;2;1,2369
Consider method^3_11;1;3,2099 2099 _m2_get_first_ingredient_4
11;1;3 155 pathaction!3_11;1;3,1792
Consider method^2_3;1,283 283 m2_get_first_ingredient
3;1 186 pathaction!2_3;1,3
Consider method^3_5;1;2,2179 2179 _m2_get_first_ingredient_3
5;1;2 197 pathaction!3_5;1;2,1253
Consider method^1_0,1433 1433 m0_do_cocktail_in_shot1
0 230 pathaction!1_0,2280
Consider method^1_8,2304 2304 m0_do_cocktail_in_shot1
8 300 pathaction!1_8,2281
Consider method^1_9,2814 2814 m0_do_cocktail_in_shot1
9 293 pathaction!1_9,2286
Consider method^3_7;3;1,2400 2400 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2>
7;3;1 190 pathaction!3_7;3;1,444
Consider method^3_9;2;2,2256 2256 _m3_get_second_ingredient_3
9;2;2 176 pathaction!3_9;2;2,2332
Consider method^3_7;1;2,2980 2980 _m2_get_first_ingredient_3
7;1;2 335 pathaction!3_7;1;2,1274
Consider method^3_11;3;1,991 991 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2>
11;3;1 163 pathaction!3_11;3;1,453
Consider method^3_0;3;1,1304 1304 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 77 pathaction!3_0;3;1,451
Consider method^3_3;3;1,864 864 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail5,right];m5_do_clean_shot;0;-1,-2>
3;3;1 326 pathaction!3_3;3;1,456
Consider method^1_6,1247 1247 m0_do_cocktail_in_shot1
6 144 pathaction!1_6,2282
Consider method^3_3;1;3,1363 1363 _m2_get_first_ingredient_4
3;1;3 320 pathaction!3_3;1;3,1714
Consider method^2_6;1,1687 1687 m2_get_first_ingredient
6;1 52 pathaction!2_6;1,8
Consider method^3_0;2;2,151 151 _m3_get_second_ingredient_3
0;2;2 198 pathaction!3_0;2;2,2340
Consider method^3_0;2;1,2618 2618 _m3_get_second_ingredient_2
0;2;1 122 pathaction!3_0;2;1,2412
Consider method^3_8;1;2,1482 1482 _m2_get_first_ingredient_3
8;1;2 124 pathaction!3_8;1;2,1222
Consider method^3_5;3;1,481 481 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 254 pathaction!3_5;3;1,457
Consider method^1_10,2549 2549 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
10 121 pathaction!1_10,0
Consider method^3_1;2;1,2881 2881 _m3_get_second_ingredient_2
1;2;1 50 pathaction!3_1;2;1,2371
Consider method^2_9;3,263 263 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 344 pathaction!2_9;3,2275
Consider method^3_0;1;3,1375 1375 _m2_get_first_ingredient_4
0;1;3 51 pathaction!3_0;1;3,1802
Consider method^3_4;1;3,693 693 _m2_get_first_ingredient_4
4;1;3 80 pathaction!3_4;1;3,1745
Consider method^3_8;1;1,659 659 m9_do_fill_shot
8;1;1 343 pathaction!3_8;1;1,2483


CHECKING primitive solution of length 233 ...
true 28 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 71 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient4,shot11;]
true 97 __method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser4,ingredient4;]
true 261 grasp[right,shot11;]
true 49 fill-shot[shot11,ingredient4,right,left,dispenser4;]
true 315 pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,right,l0,l1;]
true 188 clean-shot[shot11,ingredient4,right,left;]
true 287 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,right,shot11;]
true 30 fill-shot[shot11,ingredient1,right,left,dispenser1;]
true 177 pour-shot-to-used-shaker[shot11,ingredient1,shaker1,right,l1,l2;]
true 329 leave[right,shot11;]
true 46 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient4,ingredient1;]
true 33 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 264 nop[;]
true 248 grasp[left,shaker1;]
true 48 shake[cocktail10,ingredient4,ingredient1,shaker1,left,right;]
true 213 pour-shaker-to-shot[cocktail10,shot1,left,shaker1,l2,l1;]
true 195 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 297 clean-shaker[left,right,shaker1;]
true 281 leave[left,shaker1;]
true 332 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 140 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot13;]
true 251 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4;]
true 3 grasp[left,shot13;]
true 103 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 74 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1;]
true 330 clean-shot[shot13,ingredient4,left,right;]
true 0 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,left,shot13;]
true 13 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 44 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 306 leave[left,shot13;]
true 284 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3;]
true 250 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 324 nop[;]
true 327 grasp[right,shaker1;]
true 318 shake[cocktail5,ingredient4,ingredient3,shaker1,right,left;]
true 219 pour-shaker-to-shot[cocktail5,shot2,right,shaker1,l2,l1;]
true 339 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 275 clean-shaker[right,left,shaker1;]
true 158 leave[right,shaker1;]
true 70 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 271 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot11;]
true 25 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient4,ingredient1,dispenser4;]
true 27 grasp[left,shot11;]
true 19 clean-shot[shot11,ingredient1,left,right;]
true 145 fill-shot[shot11,ingredient4,left,right,dispenser4;]
true 20 pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,left,l0,l1;]
true 345 clean-shot[shot11,ingredient4,left,right;]
true 191 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot11;]
true 161 fill-shot[shot11,ingredient1,left,right,dispenser1;]
true 37 pour-shot-to-used-shaker[shot11,ingredient1,shaker1,left,l1,l2;]
true 342 leave[left,shot11;]
true 41 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1;]
true 82 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 192 nop[;]
true 185 grasp[right,shaker1;]
true 314 shake[cocktail6,ingredient4,ingredient1,shaker1,right,left;]
true 247 pour-shaker-to-shot[cocktail6,shot3,right,shaker1,l2,l1;]
true 194 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 160 clean-shaker[right,left,shaker1;]
true 17 leave[right,shaker1;]
true 154 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 138 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot13;]
true 123 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient3,dispenser3;]
true 282 grasp[left,shot13;]
true 206 refill-shot[shot13,ingredient3,left,right,dispenser3;]
true 209 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 116 clean-shot[shot13,ingredient3,left,right;]
true 292 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,left,shot13;]
true 268 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 215 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 286 leave[left,shot13;]
true 112 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient1;]
true 134 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 331 nop[;]
true 310 grasp[left,shaker1;]
true 246 shake[cocktail3,ingredient3,ingredient1,shaker1,left,right;]
true 114 pour-shaker-to-shot[cocktail3,shot4,left,shaker1,l2,l1;]
true 129 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 162 clean-shaker[left,right,shaker1;]
true 337 leave[left,shaker1;]
true 43 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 87 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient4,shot11;]
true 179 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient4,ingredient1,dispenser4;]
true 22 grasp[left,shot11;]
true 260 clean-shot[shot11,ingredient1,left,right;]
true 289 fill-shot[shot11,ingredient4,left,right,dispenser4;]
true 235 pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,left,l0,l1;]
true 108 clean-shot[shot11,ingredient4,left,right;]
true 341 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,left,shot11;]
true 102 fill-shot[shot11,ingredient2,left,right,dispenser2;]
true 302 pour-shot-to-used-shaker[shot11,ingredient2,shaker1,left,l1,l2;]
true 100 leave[left,shot11;]
true 312 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient4,ingredient2;]
true 63 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 237 nop[;]
true 111 grasp[left,shaker1;]
true 266 shake[cocktail1,ingredient4,ingredient2,shaker1,left,right;]
true 56 pour-shaker-to-shot[cocktail1,shot5,left,shaker1,l2,l1;]
true 175 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 39 clean-shaker[left,right,shaker1;]
true 73 leave[left,shaker1;]
true 133 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 229 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot11;]
true 58 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient4,ingredient2,dispenser4;]
true 221 grasp[right,shot11;]
true 228 clean-shot[shot11,ingredient2,right,left;]
true 2 fill-shot[shot11,ingredient4,right,left,dispenser4;]
true 156 pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,right,l0,l1;]
true 338 clean-shot[shot11,ingredient4,right,left;]
true 328 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,right,shot11;]
true 334 fill-shot[shot11,ingredient1,right,left,dispenser1;]
true 4 pour-shot-to-used-shaker[shot11,ingredient1,shaker1,right,l1,l2;]
true 340 leave[right,shot11;]
true 149 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient1;]
true 135 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 203 nop[;]
true 196 grasp[left,shaker1;]
true 132 shake[cocktail7,ingredient4,ingredient1,shaker1,left,right;]
true 187 pour-shaker-to-shot[cocktail7,shot6,left,shaker1,l2,l1;]
true 109 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 101 clean-shaker[left,right,shaker1;]
true 223 leave[left,shaker1;]
true 117 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 273 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot13;]
true 78 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient1,dispenser1;]
true 95 grasp[right,shot13;]
true 60 refill-shot[shot13,ingredient1,right,left,dispenser1;]
true 125 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1;]
true 157 clean-shot[shot13,ingredient1,right,left;]
true 98 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot13;]
true 153 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 45 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2;]
true 174 leave[right,shot13;]
true 136 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2;]
true 164 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 232 nop[;]
true 170 grasp[right,shaker1;]
true 128 shake[cocktail4,ingredient1,ingredient2,shaker1,right,left;]
true 212 pour-shaker-to-shot[cocktail4,shot7,right,shaker1,l2,l1;]
true 167 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 104 clean-shaker[right,left,shaker1;]
true 279 leave[right,shaker1;]
true 202 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 62 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot11;]
true 168 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient2,ingredient1,dispenser2;]
true 241 grasp[right,shot11;]
true 172 clean-shot[shot11,ingredient1,right,left;]
true 64 fill-shot[shot11,ingredient2,right,left,dispenser2;]
true 173 pour-shot-to-clean-shaker[shot11,ingredient2,shaker1,right,l0,l1;]
true 336 clean-shot[shot11,ingredient2,right,left;]
true 99 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,right,shot11;]
true 119 fill-shot[shot11,ingredient3,right,left,dispenser3;]
true 15 pour-shot-to-used-shaker[shot11,ingredient3,shaker1,right,l1,l2;]
true 90 leave[right,shot11;]
true 18 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient3;]
true 178 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 96 nop[;]
true 14 grasp[left,shaker1;]
true 66 shake[cocktail9,ingredient2,ingredient3,shaker1,left,right;]
true 317 pour-shaker-to-shot[cocktail9,shot8,left,shaker1,l2,l1;]
true 31 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 67 clean-shaker[left,right,shaker1;]
true 107 leave[left,shaker1;]
true 199 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 311 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13;]
true 265 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient2,dispenser4;]
true 150 grasp[right,shot13;]
true 75 clean-shot[shot13,ingredient2,right,left;]
true 26 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 208 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 93 clean-shot[shot13,ingredient4,right,left;]
true 89 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient2,right,shot13;]
true 5 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 316 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2;]
true 227 leave[right,shot13;]
true 181 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient2;]
true 217 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 139 nop[;]
true 91 grasp[right,shaker1;]
true 274 shake[cocktail2,ingredient4,ingredient2,shaker1,right,left;]
true 6 pour-shaker-to-shot[cocktail2,shot9,right,shaker1,l2,l1;]
true 171 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 323 clean-shaker[right,left,shaker1;]
true 7 leave[right,shaker1;]
true 118 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 148 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot13;]
true 307 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient2,dispenser4;]
true 143 grasp[left,shot13;]
true 86 clean-shot[shot13,ingredient2,left,right;]
true 8 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 55 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1;]
true 214 clean-shot[shot13,ingredient4,left,right;]
true 256 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient3,left,shot13;]
true 200 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 152 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 21 leave[left,shot13;]
true 231 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient3;]
true 83 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 85 nop[;]
true 305 grasp[left,shaker1;]
true 12 shake[cocktail8,ingredient4,ingredient3,shaker1,left,right;]
true 57 pour-shaker-to-shot[cocktail8,shot10,left,shaker1,l2,l1;]
true 259 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 10 clean-shaker[left,right,shaker1;]
true 53 leave[left,shaker1;]
true 263 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2;]
true 244 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient2,ingredient3,dispenser2;]
true 222 grasp[right,shot11;]
true 183 clean-shot[shot11,ingredient3,right,left;]
true 269 fill-shot[shot11,ingredient2,right,left,dispenser2;]
true 290 leave[right,shot11;]
true 11 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 146 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot13;]
true 180 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2;]
true 184 grasp[left,shot13;]
true 42 clean-shot[shot13,ingredient3,left,right;]
true 59 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 47 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 110 clean-shot[shot13,ingredient2,left,right;]
true 113 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot13;]
true 9 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 216 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 61 leave[left,shot13;]
true 325 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient3;]
true 84 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 182 nop[;]
true 211 grasp[left,shaker1;]
true 267 shake[cocktail9,ingredient2,ingredient3,shaker1,left,right;]
true 272 pour-shaker-to-shot[cocktail9,shot12,left,shaker1,l2,l1;]
true 88 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 35 clean-shaker[left,right,shaker1;]
true 34 leave[left,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 410377784
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 300
number of actions                    = 2583
number of abstract actions           = 642
number of primitive actions          = 1941
number of methods                    = 2983
number of primitive shop actions     = 768
number of primitive non-shop actions = 1173
size of largest method               = 12
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 194994
number of clauses               = 956535
average size of clauses         = 2.3775491748864392
number of assert                = 136
number of horn                  = 835653
K offset                        = 0
K chosen value                  = 4
state formula                   = 802832
method children clauses         = 0
number of paths                 = 237
maximum plan length             = 237
number of decomposition clauses = 153703
number of ordering clauses      = 0
number of state clauses         = 802832
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 16830
============ parsing ============
total                         = 1129
file parser                   = 621
sort expansion                = 230
closed world assumption       = 121
inherit preconditions         = 0
shop methods                  = 25
eliminate identical variables = 61
strip domain of hybridity     = 1
flatten formula               = 69
============ preprocessing ============
total                                      = 4903
compile negative preconditions             = 43
compile unit methods                       = 0
split parameter                            = 47
expand choiceless abstract tasks           = 542
compile methods with identical tasks       = 26
removing unnecessary predicates            = 708
lifted reachabiltiy analysis               = 92
grounded planning graph analysis           = 1355
grounded task decomposition graph analysis = 1495
grounding                                  = 562
create artificial top task                 = 5
============ search preparation ============
compute state invariants = 4838
============ sat ============
total                                        = 8666
generate formula                             = 7482
generate path decomposition tree             = 281
normalise path decomposition tree            = 97
sog optimisation                             = 104
translate path decomposition tree to clauses = 610
generate state formula                       = 7229
generate state invariant formula             = 382
transform to DIMACS                          = 336
SAT solver                                   = 540
SAT solver for K=0004                        = 540

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="1941";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="642";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="410377784";"40 sat:20:state formula"="802832";"40 sat:01:number of variables"="194994";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="237";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="2983";"30 problem:07:number of primitive shop actions"="768";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="2583";"30 problem:08:number of primitive non-shop actions"="1173";"30 problem:02:number of predicates"="300";"40 sat:03:number of horn"="835653";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="12";"40 sat:03:average size of clauses"="2.3775491748864392";"40 sat:02:number of clauses"="956535";"40 sat:50:number of state clauses"="802832";"40 sat:03:number of assert"="136";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="237";"40 sat:50:number of decomposition clauses"="153703";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="621";"01 parsing:08:flatten formula"="69";"40 sat:41:SAT solver for K=0004"="540";"40 sat:00:total"="8666";"40 sat:16:generate state formula"="7229";"40 sat:20:transform to DIMACS"="336";"40 sat:11:generate path decomposition tree"="281";"02 preprocessing:07:compile methods with identical tasks"="26";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="708";"01 parsing:03:closed world assumption"="121";"02 preprocessing:11:lifted reachabiltiy analysis"="92";"01 parsing:02:sort expansion"="230";"40 sat:12:normalise path decomposition tree"="97";"40 sat:40:SAT solver"="540";"01 parsing:00:total"="1129";"40 sat:10:generate formula"="7482";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="43";"00 total:00:total"="16830";"40 sat:13:sog optimisation"="104";"02 preprocessing:12:grounded planning graph analysis"="1355";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1495";"02 preprocessing:04:split parameter"="47";"01 parsing:05:shop methods"="25";"10 search preparation:02:compute state invariants"="4838";"01 parsing:06:eliminate identical variables"="61";"40 sat:15:translate path decomposition tree to clauses"="610";"02 preprocessing:05:expand choiceless abstract tasks"="542";"40 sat:17:generate state invariant formula"="382";"02 preprocessing:00:total"="4903";"02 preprocessing:99:create artificial top task"="5";"02 preprocessing:84:grounding"="562"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient4,shot11];__method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser4,ingredient4];grasp[right,shot11];fill-shot[shot11,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,right,l0,l1];clean-shot[shot11,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,right,shot11];fill-shot[shot11,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot11,ingredient1,shaker1,right,l1,l2];leave[right,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail10,ingredient4,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4];grasp[left,shot13];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1];clean-shot[shot13,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail5,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient4,ingredient1,dispenser4];grasp[left,shot11];clean-shot[shot11,ingredient1,left,right];fill-shot[shot11,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,left,l0,l1];clean-shot[shot11,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot11];fill-shot[shot11,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot11,ingredient1,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail6,ingredient4,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot13];__method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient3,dispenser3];grasp[left,shot13];refill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1];clean-shot[shot13,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,left,shot13];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail3,ingredient3,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient4,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient4,ingredient1,dispenser4];grasp[left,shot11];clean-shot[shot11,ingredient1,left,right];fill-shot[shot11,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,left,l0,l1];clean-shot[shot11,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,left,shot11];fill-shot[shot11,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot11,ingredient2,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail1,ingredient4,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient4,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient4,ingredient2,dispenser4];grasp[right,shot11];clean-shot[shot11,ingredient2,right,left];fill-shot[shot11,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,right,l0,l1];clean-shot[shot11,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,right,shot11];fill-shot[shot11,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot11,ingredient1,shaker1,right,l1,l2];leave[right,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail7,ingredient4,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot13];__method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient1,dispenser1];grasp[right,shot13];refill-shot[shot13,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1];clean-shot[shot13,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot13];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[right,shaker1];shake[cocktail4,ingredient1,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot7,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient2,ingredient1,dispenser2];grasp[right,shot11];clean-shot[shot11,ingredient1,right,left];fill-shot[shot11,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot11,ingredient2,shaker1,right,l0,l1];clean-shot[shot11,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,right,shot11];fill-shot[shot11,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot11,ingredient3,shaker1,right,l1,l2];leave[right,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[left,shaker1];shake[cocktail9,ingredient2,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail9,shot8,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail9,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient2,dispenser4];grasp[right,shot13];clean-shot[shot13,ingredient2,right,left];fill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1];clean-shot[shot13,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient2,right,shot13];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail2,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient2,dispenser4];grasp[left,shot13];clean-shot[shot13,ingredient2,left,right];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1];clean-shot[shot13,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail8,ingredient4,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail8,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail8,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient2,ingredient3,dispenser2];grasp[right,shot11];clean-shot[shot11,ingredient3,right,left];fill-shot[shot11,ingredient2,right,left,dispenser2];leave[right,shot11];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2];grasp[left,shot13];clean-shot[shot13,ingredient3,left,right];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1];clean-shot[shot13,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[left,shaker1];shake[cocktail9,ingredient2,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail9,shot12,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail9,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 right 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient4 shot11 
2 __method_precondition_m8_do_fill_shot_8_precondition shot11 dispenser4 ingredient4 
3 grasp right shot11 
4 fill-shot shot11 ingredient4 right left dispenser4 
5 pour-shot-to-clean-shaker shot11 ingredient4 shaker1 right l0 l1 
6 clean-shot shot11 ingredient4 right left 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient1 right shot11 
8 fill-shot shot11 ingredient1 right left dispenser1 
9 pour-shot-to-used-shaker shot11 ingredient1 shaker1 right l1 l2 
10 leave right shot11 
11 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient4 ingredient1 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail10 ingredient4 ingredient1 shaker1 left right 
16 pour-shaker-to-shot cocktail10 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail10 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 left 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient4 shot13 
22 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser4 ingredient4 
23 grasp left shot13 
24 fill-shot shot13 ingredient4 left right dispenser4 
25 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 left l0 l1 
26 clean-shot shot13 ingredient4 left right 
27 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient3 left shot13 
28 fill-shot shot13 ingredient3 left right dispenser3 
29 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
30 leave left shot13 
31 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient4 ingredient3 
32 __method_precondition_m5_do_clean_shot_5_precondition shot2 
33 nop  
34 grasp right shaker1 
35 shake cocktail5 ingredient4 ingredient3 shaker1 right left 
36 pour-shaker-to-shot cocktail5 shot2 right shaker1 l2 l1 
37 empty-shaker right shaker1 cocktail5 l1 l0 
38 clean-shaker right left shaker1 
39 leave right shaker1 
40 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
41 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient4 shot11 
42 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient4 ingredient1 dispenser4 
43 grasp left shot11 
44 clean-shot shot11 ingredient1 left right 
45 fill-shot shot11 ingredient4 left right dispenser4 
46 pour-shot-to-clean-shaker shot11 ingredient4 shaker1 left l0 l1 
47 clean-shot shot11 ingredient4 left right 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient1 left shot11 
49 fill-shot shot11 ingredient1 left right dispenser1 
50 pour-shot-to-used-shaker shot11 ingredient1 shaker1 left l1 l2 
51 leave left shot11 
52 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient4 ingredient1 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp right shaker1 
56 shake cocktail6 ingredient4 ingredient1 shaker1 right left 
57 pour-shaker-to-shot cocktail6 shot3 right shaker1 l2 l1 
58 empty-shaker right shaker1 cocktail6 l1 l0 
59 clean-shaker right left shaker1 
60 leave right shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient3 shot13 
63 __method_precondition_m7_do_fill_shot_7_precondition shot13 ingredient3 dispenser3 
64 grasp left shot13 
65 refill-shot shot13 ingredient3 left right dispenser3 
66 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 
67 clean-shot shot13 ingredient3 left right 
68 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient1 left shot13 
69 fill-shot shot13 ingredient1 left right dispenser1 
70 pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 
71 leave left shot13 
72 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient3 ingredient1 
73 __method_precondition_m5_do_clean_shot_5_precondition shot4 
74 nop  
75 grasp left shaker1 
76 shake cocktail3 ingredient3 ingredient1 shaker1 left right 
77 pour-shaker-to-shot cocktail3 shot4 left shaker1 l2 l1 
78 empty-shaker left shaker1 cocktail3 l1 l0 
79 clean-shaker left right shaker1 
80 leave left shaker1 
81 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
82 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient4 shot11 
83 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient4 ingredient1 dispenser4 
84 grasp left shot11 
85 clean-shot shot11 ingredient1 left right 
86 fill-shot shot11 ingredient4 left right dispenser4 
87 pour-shot-to-clean-shaker shot11 ingredient4 shaker1 left l0 l1 
88 clean-shot shot11 ingredient4 left right 
89 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient2 left shot11 
90 fill-shot shot11 ingredient2 left right dispenser2 
91 pour-shot-to-used-shaker shot11 ingredient2 shaker1 left l1 l2 
92 leave left shot11 
93 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient4 ingredient2 
94 __method_precondition_m5_do_clean_shot_5_precondition shot5 
95 nop  
96 grasp left shaker1 
97 shake cocktail1 ingredient4 ingredient2 shaker1 left right 
98 pour-shaker-to-shot cocktail1 shot5 left shaker1 l2 l1 
99 empty-shaker left shaker1 cocktail1 l1 l0 
100 clean-shaker left right shaker1 
101 leave left shaker1 
102 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 right 
103 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient4 shot11 
104 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient4 ingredient2 dispenser4 
105 grasp right shot11 
106 clean-shot shot11 ingredient2 right left 
107 fill-shot shot11 ingredient4 right left dispenser4 
108 pour-shot-to-clean-shaker shot11 ingredient4 shaker1 right l0 l1 
109 clean-shot shot11 ingredient4 right left 
110 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient1 right shot11 
111 fill-shot shot11 ingredient1 right left dispenser1 
112 pour-shot-to-used-shaker shot11 ingredient1 shaker1 right l1 l2 
113 leave right shot11 
114 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient4 ingredient1 
115 __method_precondition_m5_do_clean_shot_5_precondition shot6 
116 nop  
117 grasp left shaker1 
118 shake cocktail7 ingredient4 ingredient1 shaker1 left right 
119 pour-shaker-to-shot cocktail7 shot6 left shaker1 l2 l1 
120 empty-shaker left shaker1 cocktail7 l1 l0 
121 clean-shaker left right shaker1 
122 leave left shaker1 
123 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 right 
124 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient1 shot13 
125 __method_precondition_m7_do_fill_shot_7_precondition shot13 ingredient1 dispenser1 
126 grasp right shot13 
127 refill-shot shot13 ingredient1 right left dispenser1 
128 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 
129 clean-shot shot13 ingredient1 right left 
130 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 right shot13 
131 fill-shot shot13 ingredient2 right left dispenser2 
132 pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 
133 leave right shot13 
134 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient1 ingredient2 
135 __method_precondition_m5_do_clean_shot_5_precondition shot7 
136 nop  
137 grasp right shaker1 
138 shake cocktail4 ingredient1 ingredient2 shaker1 right left 
139 pour-shaker-to-shot cocktail4 shot7 right shaker1 l2 l1 
140 empty-shaker right shaker1 cocktail4 l1 l0 
141 clean-shaker right left shaker1 
142 leave right shaker1 
143 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
144 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient2 shot11 
145 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient2 ingredient1 dispenser2 
146 grasp right shot11 
147 clean-shot shot11 ingredient1 right left 
148 fill-shot shot11 ingredient2 right left dispenser2 
149 pour-shot-to-clean-shaker shot11 ingredient2 shaker1 right l0 l1 
150 clean-shot shot11 ingredient2 right left 
151 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient3 right shot11 
152 fill-shot shot11 ingredient3 right left dispenser3 
153 pour-shot-to-used-shaker shot11 ingredient3 shaker1 right l1 l2 
154 leave right shot11 
155 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient2 ingredient3 
156 __method_precondition_m5_do_clean_shot_5_precondition shot8 
157 nop  
158 grasp left shaker1 
159 shake cocktail9 ingredient2 ingredient3 shaker1 left right 
160 pour-shaker-to-shot cocktail9 shot8 left shaker1 l2 l1 
161 empty-shaker left shaker1 cocktail9 l1 l0 
162 clean-shaker left right shaker1 
163 leave left shaker1 
164 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
165 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot13 
166 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient2 dispenser4 
167 grasp right shot13 
168 clean-shot shot13 ingredient2 right left 
169 fill-shot shot13 ingredient4 right left dispenser4 
170 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 
171 clean-shot shot13 ingredient4 right left 
172 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient2 right shot13 
173 fill-shot shot13 ingredient2 right left dispenser2 
174 pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 
175 leave right shot13 
176 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient2 
177 __method_precondition_m5_do_clean_shot_5_precondition shot9 
178 nop  
179 grasp right shaker1 
180 shake cocktail2 ingredient4 ingredient2 shaker1 right left 
181 pour-shaker-to-shot cocktail2 shot9 right shaker1 l2 l1 
182 empty-shaker right shaker1 cocktail2 l1 l0 
183 clean-shaker right left shaker1 
184 leave right shaker1 
185 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
186 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient4 shot13 
187 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient2 dispenser4 
188 grasp left shot13 
189 clean-shot shot13 ingredient2 left right 
190 fill-shot shot13 ingredient4 left right dispenser4 
191 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 left l0 l1 
192 clean-shot shot13 ingredient4 left right 
193 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient3 left shot13 
194 fill-shot shot13 ingredient3 left right dispenser3 
195 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
196 leave left shot13 
197 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient4 ingredient3 
198 __method_precondition_m5_do_clean_shot_5_precondition shot10 
199 nop  
200 grasp left shaker1 
201 shake cocktail8 ingredient4 ingredient3 shaker1 left right 
202 pour-shaker-to-shot cocktail8 shot10 left shaker1 l2 l1 
203 empty-shaker left shaker1 cocktail8 l1 l0 
204 clean-shaker left right shaker1 
205 leave left shaker1 
206 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser2 ingredient2 
207 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient2 ingredient3 dispenser2 
208 grasp right shot11 
209 clean-shot shot11 ingredient3 right left 
210 fill-shot shot11 ingredient2 right left dispenser2 
211 leave right shot11 
212 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 left 
213 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient2 shot13 
214 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient2 ingredient3 dispenser2 
215 grasp left shot13 
216 clean-shot shot13 ingredient3 left right 
217 fill-shot shot13 ingredient2 left right dispenser2 
218 pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 
219 clean-shot shot13 ingredient2 left right 
220 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient3 left shot13 
221 fill-shot shot13 ingredient3 left right dispenser3 
222 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
223 leave left shot13 
224 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient2 ingredient3 
225 __method_precondition_m5_do_clean_shot_5_precondition shot12 
226 nop  
227 grasp left shaker1 
228 shake cocktail9 ingredient2 ingredient3 shaker1 left right 
229 pour-shaker-to-shot cocktail9 shot12 left shaker1 l2 l1 
230 empty-shaker left shaker1 cocktail9 l1 l0 
231 clean-shaker left right shaker1 
232 leave left shaker1 
root 340
233 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 87
234 do_fill_shot shot13 ingredient4 right  -> m9_do_fill_shot 166 167 168 169
235 do_fill_shot shot11 ingredient4 right  -> m8_do_fill_shot 2 3 4
236 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 right  -> _m3_get_second_ingredient_2 131
237 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 128
238 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 left  -> _m2_get_first_ingredient_4 26
239 serve_shot shot2 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 31 242 34 35 36 37 38 39
240 do_fill_shot shot13 ingredient3 left  -> m7_do_fill_shot 63 64 65
241 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient4 right  -> _m2_get_first_ingredient_4 6
242 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 32 33
243 get_second_ingredient cocktail10 right  -> m3_get_second_ingredient 7 296 343 10
244 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 28
245 do_fill_shot shot11 ingredient4 left  -> m9_do_fill_shot 42 43 44 45
246 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient4 right  -> _m2_get_first_ingredient_4 109
247 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 29
248 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 191
249 do_fill_shot shot13 ingredient4 left  -> m9_do_fill_shot 187 188 189 190
250 do_cocktail_in_shot1 shot6 cocktail7  -> m0_do_cocktail_in_shot1 102 330 262 260
251 get_second_ingredient cocktail9 left  -> m3_get_second_ingredient 220 321 303 223
252 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient4 left  -> _m2_get_first_ingredient_4 47
253 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 132
254 get_first_ingredient cocktail9 left  -> m2_get_first_ingredient 213 274 289 263
255 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 5
256 serve_shot shot7 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 134 299 137 138 139 140 141 142
257 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 144 329 309 315
258 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 68 275 282 71
259 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 108
260 serve_shot shot6 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 114 312 117 118 119 120 121 122
261 do_cocktail_in_shot1 shot10 cocktail8  -> m0_do_cocktail_in_shot1 185 339 287 320
262 get_second_ingredient cocktail7 right  -> m3_get_second_ingredient 110 285 322 113
263 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient2 left  -> _m2_get_first_ingredient_4 219
264 serve_shot shot3 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 52 323 55 56 57 58 59 60
265 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 94 95
266 do_cocktail_in_shot1 shot9 cocktail2  -> m0_do_cocktail_in_shot1 164 318 272 308
267 get_first_ingredient cocktail4 right  -> m2_get_first_ingredient 124 313 237 288
268 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient3 right  -> _m3_get_second_ingredient_2 152
269 do_cocktail_in_shot1 shot7 cocktail4  -> m0_do_cocktail_in_shot1 123 267 277 256
270 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 153
271 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 62 240 276 279
272 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 172 300 295 175
273 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 27 244 247 30
274 do_fill_shot shot13 ingredient2 left  -> m9_do_fill_shot 214 215 216 217
275 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 left  -> _m3_get_second_ingredient_2 69
276 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 66
277 get_second_ingredient cocktail4 right  -> m3_get_second_ingredient 130 236 253 133
278 do_cocktail_in_shot1 shot2 cocktail5  -> m0_do_cocktail_in_shot1 20 335 273 239
279 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 left  -> _m2_get_first_ingredient_4 67
280 do_cocktail_in_shot1 shot5 cocktail1  -> m0_do_cocktail_in_shot1 81 292 342 297
281 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 50
282 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 70
283 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail5,right];m5_do_clean_shot;0;-1,-2> 198 199
284 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 195
285 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient1 right  -> _m3_get_second_ingredient_2 111
286 serve_shot shot1 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 338 14 15 16 17 18 19
287 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 193 304 284 196
288 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 right  -> _m2_get_first_ingredient_4 129
289 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 218
290 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 177 178
291 do_fill_shot shot11 ingredient2 right  -> m9_do_fill_shot 207 208 209 210
292 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 82 344 233 341
293 do_cocktail_in_shot1 shot3 cocktail6  -> m0_do_cocktail_in_shot1 40 314 334 264
294 do_cocktail_in_shot1 shot1 cocktail10  -> m0_do_cocktail_in_shot1 0 319 243 286
295 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 174
296 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient1 right  -> _m3_get_second_ingredient_2 8
297 serve_shot shot5 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 93 265 96 97 98 99 100 101
298 do_cocktail_in_shot2 shot11 ingredient2  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 206 291 211
299 do_clean_shot_m4_serve_shot_sip_2 shot7 left  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2> 135 136
300 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 right  -> _m3_get_second_ingredient_2 173
301 do_fill_shot shot11 ingredient4 right  -> m9_do_fill_shot 104 105 106 107
302 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 91
303 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 222
304 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 194
305 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient2 left  -> _m3_get_second_ingredient_2 90
306 do_clean_shot_m4_serve_shot_sip_2 shot12 right  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail8,right];m5_do_clean_shot;0;-1,-2> 225 226
307 do_cocktail_in_shot1 shot12 cocktail9  -> m0_do_cocktail_in_shot1 212 254 251 317
308 serve_shot shot9 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 176 290 179 180 181 182 183 184
309 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 149
310 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 151 268 270 154
311 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 left  -> _m2_get_first_ingredient_4 192
312 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 115 116
313 do_fill_shot shot13 ingredient1 right  -> m7_do_fill_shot 125 126 127
314 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 41 245 327 252
315 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient2 right  -> _m2_get_first_ingredient_4 150
316 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 25
317 serve_shot shot12 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot12,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 224 306 227 228 229 230 231 232
318 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 165 234 326 324
319 get_first_ingredient cocktail10 right  -> m2_get_first_ingredient 1 235 255 241
320 serve_shot shot10 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 197 283 200 201 202 203 204 205
321 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 221
322 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 112
323 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 53 54
324 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 right  -> _m2_get_first_ingredient_4 171
325 do_clean_shot_m4_serve_shot_sip_2 shot8 right  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2> 156 157
326 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 170
327 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 46
328 serve_shot shot4 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 72 336 75 76 77 78 79 80
329 do_fill_shot shot11 ingredient2 right  -> m9_do_fill_shot 145 146 147 148
330 get_first_ingredient cocktail7 right  -> m2_get_first_ingredient 103 301 259 246
331 do_fill_shot shot13 ingredient4 left  -> m8_do_fill_shot 22 23 24
332 do_cocktail_in_shot1 shot8 cocktail9  -> m0_do_cocktail_in_shot1 143 257 310 333
333 serve_shot shot8 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 155 325 158 159 160 161 162 163
334 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 48 337 281 51
335 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 21 331 316 238
336 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail5,right];m5_do_clean_shot;0;-1,-2> 73 74
337 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient1 left  -> _m3_get_second_ingredient_2 49
338 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
339 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 186 249 248 311
340 __choicelessATCompilation__top_1  -> __top_1 294 278 293 345 280 250 269 332 266 261 298 307
341 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient4 left  -> _m2_get_first_ingredient_4 88
342 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 89 305 302 92
343 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 9
344 do_fill_shot shot11 ingredient4 left  -> m9_do_fill_shot 83 84 85 86
345 do_cocktail_in_shot1 shot4 cocktail3  -> m0_do_cocktail_in_shot1 61 271 258 328

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 18.330 MEMPEAK_KBS 604913.664
