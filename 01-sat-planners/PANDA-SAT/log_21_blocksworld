PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/blocksworld/domain.hddl instances/blocksworld/p01.hddl"


Planner Configuration
=====================
Domain: instances/blocksworld/domain.hddl
Problem: instances/blocksworld/p01.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p01.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 5
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 5
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 5
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 10
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 5
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 5
Grounded planning graph ... done in 112ms.
	Number of Grounded Actions 47
	Number of Grounded Literals 33
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 5
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 17
	number of decomposition methods = 8
	number of predicates = 7
	number of sorts = 2
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8
	number of epsilon methods = 0
	number of primitive tasks = 13
	number of constants = 5
Grounding ... done.
	number of abstract tasks = 14
	number of tasks = 61
	number of decomposition methods = 33
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 14
	number of tasks = 61
	number of decomposition methods = 33
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 30ms.
	Number of Grounded Actions 47
	Number of Grounded Literals 33
	number of abstract tasks = 14
	number of tasks = 61
	number of decomposition methods = 33
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 14
	number of tasks = 61
	number of decomposition methods = 33
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 14
	number of tasks = 61
	number of decomposition methods = 33
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 15
	number of tasks = 62
	number of decomposition methods = 34
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 15
	number of tasks = 62
	number of decomposition methods = 34
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 6ms.
	Number of Grounded Actions 47
	Number of Grounded Literals 33
	number of abstract tasks = 15
	number of tasks = 62
	number of decomposition methods = 34
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 62
	number of decomposition methods = 34
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 15
	number of tasks = 62
	number of decomposition methods = 34
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 15
	number of tasks = 62
	number of decomposition methods = 34
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 15
	number of tasks = 62
	number of decomposition methods = 34
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 15
	number of tasks = 62
	number of decomposition methods = 34
	number of predicates = 33
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 28
	number of epsilon methods = 0
	number of primitive tasks = 47
	number of constants = 0
Tasks 47 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854774254ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 9 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 6 leafs
SHOP LEAFS 6
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 102 will abort at 9223372036854774202
done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 1584
Size 1569 at 0/47
Size 957
Size 942 at 0/47
Size 597
Size 575 at 0/47
Size 290
Size 274 at 0/47
Size 209
Size 207 at 0/47
Size 199
Size 199 at 0/47
Size 199
Invariant time: 0.051
Number of invariants: 199
Invariant Clauses 1393
NUMBER OF CLAUSES 1881
NUMBER OF STATE CLAUSES 1827
NUMBER OF DECOMPOSITION CLAUSES 54
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 97.13% 2.87% 0.0% 
NUMBER OF PATHS 6
Starting cryptominisat5.5
Setting starttime of solver to 1604475513255
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 39 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 33 leafs
SHOP LEAFS 21
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Still waiting ... running for 100 will abort at 9223372036854773882
Invariant Clauses 6766
NUMBER OF CLAUSES 9704
NUMBER OF STATE CLAUSES 9192
NUMBER OF DECOMPOSITION CLAUSES 512
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 94.72% 5.28% 0.0% 
NUMBER OF PATHS 33
Starting cryptominisat5.5
Setting starttime of solver to 1604475513468
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 57 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 51 leafs
SHOP LEAFS 27
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Still waiting ... running for 100 will abort at 9223372036854773667
Invariant Clauses 10348
NUMBER OF CLAUSES 15082
NUMBER OF STATE CLAUSES 14172
NUMBER OF DECOMPOSITION CLAUSES 910
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 93.97% 6.03% 0.0% 
NUMBER OF PATHS 51
Starting cryptominisat5.5
Setting starttime of solver to 1604475513672
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 75 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 69 leafs
SHOP LEAFS 33
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Still waiting ... running for 100 will abort at 9223372036854773298
Invariant Clauses 13930
NUMBER OF CLAUSES 20732
NUMBER OF STATE CLAUSES 19241
NUMBER OF DECOMPOSITION CLAUSES 1491
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 92.81% 7.19% 0.0% 
NUMBER OF PATHS 69
Starting cryptominisat5.5
Setting starttime of solver to 1604475514069
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 93 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 87 leafs
SHOP LEAFS 39
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Still waiting ... running for 100 will abort at 9223372036854772953
Invariant Clauses 17512
NUMBER OF CLAUSES 26556
NUMBER OF STATE CLAUSES 24370
NUMBER OF DECOMPOSITION CLAUSES 2186
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 91.77% 8.23% 0.0% 
NUMBER OF PATHS 87
Starting cryptominisat5.5
Setting starttime of solver to 1604475514430
Command exited with non-zero status 10
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_0;1,26 26 m7_do_clear
0;1 0 pathaction!2_0;1,3
Consider method^2_0;4,24 24 m5_do_move
0;4 2 pathaction!2_0;4,53
Consider method^2_0;3,6 6 m3_do_on_table
0;3 8 pathaction!2_0;3,8
Consider method^1_2,4 4 m1_do_put_on
2 34 pathaction!1_2,42
Consider method^2_2;4,9 9 m4_do_move
2;4 10 pathaction!2_2;4,52
Consider method^2_1;3,27 27 m2_do_on_table
1;3 30 pathaction!2_1;3,10
Consider method^3_0;1;1,10 10 m7_do_clear
0;1;1 26 pathaction!3_0;1;1,4
Consider method^2_1;1,31 31 m6_do_clear
1;1 36 pathaction!2_1;1,7
Consider method^5_0;1;1;1;1,29 29 m6_do_clear
0;1;1;1;1 52 pathaction!5_0;1;1;1;1,5
Consider method^2_2;3,30 30 m3_do_on_table
2;3 54 pathaction!2_2;3,9
Consider method^1_0,8 8 m1_do_put_on
0 15 pathaction!1_0,43
Consider method^1_1,19 19 m1_do_put_on
1 9 pathaction!1_1,41
Consider method^2_0;2,29 29 m6_do_clear
0;2 40 pathaction!2_0;2,5
Consider method^0_,33 33 __top_1
 6 pathaction!0_,61
Consider method^2_1;2,5 5 m6_do_clear
1;2 38 pathaction!2_1;2,3
Consider method^2_1;4,11 11 m4_do_move
1;4 35 pathaction!2_1;4,51
Consider method^2_2;1,17 17 m6_do_clear
2;1 21 pathaction!2_2;1,6
Consider method^2_2;2,31 31 m6_do_clear
2;2 44 pathaction!2_2;2,7
Consider method^4_0;1;1;1,25 25 m7_do_clear
0;1;1;1 31 pathaction!4_0;1;1;1,6


CHECKING primitive solution of length 40 ...
true 50 __method_precondition_m1_do_put_on_1_precondition[;]
true 53 __method_precondition_m7_do_clear_7_precondition[b4,b5;]
true 24 __method_precondition_m7_do_clear_7_precondition[b5,b3;]
true 49 __method_precondition_m7_do_clear_7_precondition[b3,b2;]
true 41 __method_precondition_m6_do_clear_6_precondition[b2;]
true 4 nop[;]
true 37 unstack[b2,b3;]
true 56 put-down[b2;]
true 16 unstack[b3,b5;]
true 12 put-down[b3;]
true 46 unstack[b5,b4;]
true 25 put-down[b5;]
true 13 __method_precondition_m6_do_clear_6_precondition[b2;]
true 33 nop[;]
true 22 __method_precondition_m3_do_on_table_3_precondition[b2;]
true 11 nop[;]
true 29 __method_precondition_m5_do_move_5_precondition[b4,b2;]
true 7 unstack[b4,b1;]
true 18 stack[b4,b2;]
true 14 __method_precondition_m1_do_put_on_1_precondition[;]
true 17 __method_precondition_m6_do_clear_6_precondition[b1;]
true 48 nop[;]
true 28 __method_precondition_m6_do_clear_6_precondition[b4;]
true 5 nop[;]
true 23 __method_precondition_m2_do_on_table_2_precondition[b4;]
true 27 unstack[b4,b2;]
true 45 put-down[b4;]
true 3 __method_precondition_m4_do_move_4_precondition[b1,b4;]
true 19 pick-up[b1;]
true 42 stack[b1,b4;]
true 43 __method_precondition_m1_do_put_on_1_precondition[;]
true 58 __method_precondition_m6_do_clear_6_precondition[b3;]
true 55 nop[;]
true 1 __method_precondition_m6_do_clear_6_precondition[b1;]
true 51 nop[;]
true 20 __method_precondition_m3_do_on_table_3_precondition[b1;]
true 39 nop[;]
true 32 __method_precondition_m4_do_move_4_precondition[b3,b1;]
true 57 pick-up[b3;]
true 47 stack[b3,b1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 154713960
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 33
number of actions                    = 62
number of abstract actions           = 15
number of primitive actions          = 47
number of methods                    = 34
number of primitive shop actions     = 28
number of primitive non-shop actions = 19
size of largest method               = 5
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 7386
number of clauses               = 26556
average size of clauses         = 2.037580960988101
number of assert                = 18
number of horn                  = 24664
K offset                        = 0
K chosen value                  = 6
state formula                   = 24370
method children clauses         = 0
number of paths                 = 87
maximum plan length             = 87
number of decomposition clauses = 2186
number of ordering clauses      = 0
number of state clauses         = 24370
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 3423
============ parsing ============
total                         = 829
file parser                   = 519
sort expansion                = 122
closed world assumption       = 48
inherit preconditions         = 0
shop methods                  = 13
eliminate identical variables = 62
strip domain of hybridity     = 1
flatten formula               = 64
============ preprocessing ============
total                                      = 674
compile negative preconditions             = 34
compile unit methods                       = 0
split parameter                            = 11
expand choiceless abstract tasks           = 0
compile methods with identical tasks       = 2
removing unnecessary predicates            = 12
lifted reachabiltiy analysis               = 88
grounded planning graph analysis           = 254
grounded task decomposition graph analysis = 185
grounding                                  = 78
create artificial top task                 = 1
============ search preparation ============
compute state invariants = 77
============ sat ============
total                                        = 1089
generate formula                             = 757
generate path decomposition tree             = 132
normalise path decomposition tree            = 63
sog optimisation                             = 51
translate path decomposition tree to clauses = 186
generate state formula                       = 749
generate state invariant formula             = 106
transform to DIMACS                          = 106
SAT solver                                   = 10
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 0
SAT solver for K=0004                        = 0
SAT solver for K=0005                        = 0
SAT solver for K=0006                        = 10

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="47";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="15";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="154713960";"40 sat:20:state formula"="24370";"40 sat:01:number of variables"="7386";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="87";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="34";"30 problem:07:number of primitive shop actions"="28";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="62";"30 problem:08:number of primitive non-shop actions"="19";"30 problem:02:number of predicates"="33";"40 sat:03:number of horn"="24664";"40 sat:15:K chosen value"="6";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="5";"40 sat:03:average size of clauses"="2.037580960988101";"40 sat:02:number of clauses"="26556";"40 sat:50:number of state clauses"="24370";"40 sat:03:number of assert"="18";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="87";"40 sat:50:number of decomposition clauses"="2186";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="519";"01 parsing:08:flatten formula"="64";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="1089";"40 sat:16:generate state formula"="749";"40 sat:20:transform to DIMACS"="106";"40 sat:11:generate path decomposition tree"="132";"02 preprocessing:07:compile methods with identical tasks"="2";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="12";"01 parsing:03:closed world assumption"="48";"02 preprocessing:11:lifted reachabiltiy analysis"="88";"01 parsing:02:sort expansion"="122";"40 sat:12:normalise path decomposition tree"="63";"40 sat:40:SAT solver"="10";"01 parsing:00:total"="829";"40 sat:10:generate formula"="757";"40 sat:41:SAT solver for K=0005"="0";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="34";"00 total:00:total"="3423";"40 sat:13:sog optimisation"="51";"02 preprocessing:12:grounded planning graph analysis"="254";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="185";"40 sat:41:SAT solver for K=0006"="10";"02 preprocessing:04:split parameter"="11";"01 parsing:05:shop methods"="13";"10 search preparation:02:compute state invariants"="77";"01 parsing:06:eliminate identical variables"="62";"40 sat:15:translate path decomposition tree to clauses"="186";"02 preprocessing:05:expand choiceless abstract tasks"="0";"40 sat:41:SAT solver for K=0003"="0";"40 sat:17:generate state invariant formula"="106";"02 preprocessing:00:total"="674";"02 preprocessing:99:create artificial top task"="1";"02 preprocessing:84:grounding"="78"
#!verify __method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m7_do_clear_7_precondition[b4,b5];__method_precondition_m7_do_clear_7_precondition[b5,b3];__method_precondition_m7_do_clear_7_precondition[b3,b2];__method_precondition_m6_do_clear_6_precondition[b2];nop[];unstack[b2,b3];put-down[b2];unstack[b3,b5];put-down[b3];unstack[b5,b4];put-down[b5];__method_precondition_m6_do_clear_6_precondition[b2];nop[];__method_precondition_m3_do_on_table_3_precondition[b2];nop[];__method_precondition_m5_do_move_5_precondition[b4,b2];unstack[b4,b1];stack[b4,b2];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b1];nop[];__method_precondition_m6_do_clear_6_precondition[b4];nop[];__method_precondition_m2_do_on_table_2_precondition[b4];unstack[b4,b2];put-down[b4];__method_precondition_m4_do_move_4_precondition[b1,b4];pick-up[b1];stack[b1,b4];__method_precondition_m1_do_put_on_1_precondition[];__method_precondition_m6_do_clear_6_precondition[b3];nop[];__method_precondition_m6_do_clear_6_precondition[b1];nop[];__method_precondition_m3_do_on_table_3_precondition[b1];nop[];__method_precondition_m4_do_move_4_precondition[b3,b1];pick-up[b3];stack[b3,b1]
==>
0 __method_precondition_m1_do_put_on_1_precondition  
1 __method_precondition_m7_do_clear_7_precondition b4 b5 
2 __method_precondition_m7_do_clear_7_precondition b5 b3 
3 __method_precondition_m7_do_clear_7_precondition b3 b2 
4 __method_precondition_m6_do_clear_6_precondition b2 
5 nop  
6 unstack b2 b3 
7 put-down b2 
8 unstack b3 b5 
9 put-down b3 
10 unstack b5 b4 
11 put-down b5 
12 __method_precondition_m6_do_clear_6_precondition b2 
13 nop  
14 __method_precondition_m3_do_on_table_3_precondition b2 
15 nop  
16 __method_precondition_m5_do_move_5_precondition b4 b2 
17 unstack b4 b1 
18 stack b4 b2 
19 __method_precondition_m1_do_put_on_1_precondition  
20 __method_precondition_m6_do_clear_6_precondition b1 
21 nop  
22 __method_precondition_m6_do_clear_6_precondition b4 
23 nop  
24 __method_precondition_m2_do_on_table_2_precondition b4 
25 unstack b4 b2 
26 put-down b4 
27 __method_precondition_m4_do_move_4_precondition b1 b4 
28 pick-up b1 
29 stack b1 b4 
30 __method_precondition_m1_do_put_on_1_precondition  
31 __method_precondition_m6_do_clear_6_precondition b3 
32 nop  
33 __method_precondition_m6_do_clear_6_precondition b1 
34 nop  
35 __method_precondition_m3_do_on_table_3_precondition b1 
36 nop  
37 __method_precondition_m4_do_move_4_precondition b3 b1 
38 pick-up b3 
39 stack b3 b1 
root 40
40 __artificialTopCompilation__top_1  -> __top_1 46 43 42
41 do_move b3 b1  -> m4_do_move 37 38 39
42 do_put_on b3 b1  -> m1_do_put_on 30 57 45 48 41
43 do_put_on b1 b4  -> m1_do_put_on 19 49 56 53 52
44 do_clear b2  -> m6_do_clear 4 5
45 do_clear b1  -> m6_do_clear 33 34
46 do_put_on b4 b2  -> m1_do_put_on 0 55 47 54 51
47 do_clear b2  -> m6_do_clear 12 13
48 do_on_table b1  -> m3_do_on_table 35 36
49 do_clear b1  -> m6_do_clear 20 21
50 do_clear b3  -> m7_do_clear 3 44 6 7
51 do_move b4 b2  -> m5_do_move 16 17 18
52 do_move b1 b4  -> m4_do_move 27 28 29
53 do_on_table b4  -> m2_do_on_table 24 25 26
54 do_on_table b2  -> m3_do_on_table 14 15
55 do_clear b4  -> m7_do_clear 1 58 10 11
56 do_clear b4  -> m6_do_clear 22 23
57 do_clear b3  -> m6_do_clear 31 32
58 do_clear b5  -> m7_do_clear 2 50 8 9

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 4.364 MEMPEAK_KBS 237650.944
