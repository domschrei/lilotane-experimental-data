PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile23.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile23.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile23.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Grounded planning graph ... done in 281ms.
	Number of Grounded Actions 429
	Number of Grounded Literals 148
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 32
Grounding ... done.
	number of abstract tasks = 145
	number of tasks = 574
	number of decomposition methods = 603
	number of predicates = 148
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 145
	number of tasks = 574
	number of decomposition methods = 603
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 108ms.
	Number of Grounded Actions 429
	Number of Grounded Literals 107
	number of abstract tasks = 145
	number of tasks = 574
	number of decomposition methods = 603
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 145
	number of tasks = 574
	number of decomposition methods = 603
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 145
	number of tasks = 574
	number of decomposition methods = 603
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 43ms.
	Number of Grounded Actions 429
	Number of Grounded Literals 107
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 146
	number of tasks = 575
	number of decomposition methods = 604
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 206
	number of tasks = 635
	number of decomposition methods = 664
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 206
	number of tasks = 635
	number of decomposition methods = 664
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 429
	number of constants = 0
Tasks 429 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773050ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 125 will abort at 9223372036854772975
done
initial PDT has 40 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 40 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 17013
Size 16802 at 0/429
Size 10824
Size 10816 at 0/429
Size 3455
Size 3452 at 0/429
Size 767
Size 767 at 0/429
Size 464
Size 464 at 0/429
Size 434
Size 434 at 0/429
Size 433
Size 433 at 0/429
Size 433
Invariant time: 0.29
Number of invariants: 433
Invariant Clauses 17753
NUMBER OF CLAUSES 33304
NUMBER OF STATE CLAUSES 28223
NUMBER OF DECOMPOSITION CLAUSES 5081
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.74% 15.26% 0.0% 
NUMBER OF PATHS 40
Starting cryptominisat5.5
Setting starttime of solver to 1604489488255
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 60 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 60 leafs
SHOP LEAFS 0
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854771774
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 26413
NUMBER OF CLAUSES 64612
NUMBER OF STATE CLAUSES 43581
NUMBER OF DECOMPOSITION CLAUSES 21031
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 67.45% 32.55% 0.0% 
NUMBER OF PATHS 60
Starting cryptominisat5.5
Setting starttime of solver to 1604489488981
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 99 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854770999
done
PDT has 99 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 43300
NUMBER OF CLAUSES 132037
NUMBER OF STATE CLAUSES 72975
NUMBER OF DECOMPOSITION CLAUSES 59062
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 55.27% 44.730000000000004% 0.0% 
NUMBER OF PATHS 99
Starting cryptominisat5.5
Setting starttime of solver to 1604489489854
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770144
done
initial PDT has 138 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 138 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 60187
NUMBER OF CLAUSES 243766
NUMBER OF STATE CLAUSES 105021
NUMBER OF DECOMPOSITION CLAUSES 138745
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 43.08% 56.92% 0.0% 
NUMBER OF PATHS 138
Starting cryptominisat5.5
Setting starttime of solver to 1604489491044
Command exited with non-zero status 20
0.11 0.00

Time command gave the following runtime for the solver: 110
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854768966
done
initial PDT has 177 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 177 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 77074
NUMBER OF CLAUSES 425083
NUMBER OF STATE CLAUSES 139980
NUMBER OF DECOMPOSITION CLAUSES 285103
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 32.93% 67.07000000000001% 0.0% 
NUMBER OF PATHS 177
Starting cryptominisat5.5
Setting starttime of solver to 1604489492635
Command exited with non-zero status 10
0.40 0.02

Time command gave the following runtime for the solver: 420
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^5_0;0;0;0;0,611 611 m-drive-to
0;0;0;0;0 13 pathaction!5_0;0;0;0;0,537
Consider method^2_3;1,266 266 m-load
3;1 207 pathaction!2_3;1,361
Consider method^2_4;2,403 403 m-drive-to-via
4;2 198 pathaction!2_4;2,524
Consider method^3_3;0;0,569 569 m-drive-to-via
3;0;0 175 pathaction!3_3;0;0,541
Consider method^3_4;0;0,239 239 m-drive-to-via
4;0;0 164 pathaction!3_4;0;0,522
Consider method^2_3;2,403 403 m-drive-to-via
3;2 150 pathaction!2_3;2,524
Consider method^2_3;3,106 106 m-unload
3;3 21 pathaction!2_3;3,558
Consider method^2_9;1,144 144 m-load
9;1 132 pathaction!2_9;1,350
Consider method^2_1;0,366 366 m-drive-to-via
1;0 178 pathaction!2_1;0,521
Consider method^2_1;1,619 619 m-load
1;1 47 pathaction!2_1;1,375
Consider method^4_4;2;0;0,457 457 m-drive-to
4;2;0;0 69 pathaction!4_4;2;0;0,499
Consider method^2_0;0,403 403 m-drive-to-via
0;0 183 pathaction!2_0;0,524
Consider method^2_6;3,609 609 m-unload
6;3 171 pathaction!2_6;3,544
Consider method^1_7,581 581 m-deliver
7 125 pathaction!1_7,400
Consider method^6_5;2;0;0;0;0,236 236 m-i-am-there
5;2;0;0;0;0 23 pathaction!6_5;2;0;0;0;0,538
Consider method^4_7;0;0;0,441 441 m-drive-to-via
7;0;0;0 142 pathaction!4_7;0;0;0,533
Consider method^1_1,413 413 m-deliver
1 117 pathaction!1_1,406
Consider method^2_2;2,564 564 m-drive-to-via
2;2 137 pathaction!2_2;2,523
Consider method^2_1;2,458 458 m-drive-to-via
1;2 199 pathaction!2_1;2,508
Consider method^2_8;0,164 164 m-drive-to-via
8;0 31 pathaction!2_8;0,543
Consider method^4_5;2;0;0,103 103 m-drive-to-via
5;2;0;0 141 pathaction!4_5;2;0;0,516
Consider method^5_8;0;0;0;0,316 316 m-drive-to-via
8;0;0;0;0 86 pathaction!5_8;0;0;0;0,520
Consider method^5_1;0;0;0;0,650 650 m-drive-to-via
1;0;0;0;0 188 pathaction!5_1;0;0;0;0,503
Consider method^3_3;2;0,504 504 m-drive-to-via
3;2;0 107 pathaction!3_3;2;0,516
Consider method^4_8;0;0;0,542 542 m-drive-to-via
8;0;0;0 224 pathaction!4_8;0;0;0,502
Consider method^2_6;1,545 545 m-load
6;1 53 pathaction!2_6;1,344
Consider method^1_5,145 145 m-deliver
5 87 pathaction!1_5,402
Consider method^5_2;0;0;0;0,505 505 m-drive-to-via
2;0;0;0;0 203 pathaction!5_2;0;0;0;0,535
Consider method^5_6;2;0;0;0,636 636 m-drive-to-via
6;2;0;0;0 33 pathaction!5_6;2;0;0;0,533
Consider method^4_0;0;0;0,71 71 m-drive-to-via
0;0;0;0 4 pathaction!4_0;0;0;0,524
Consider method^0_,663 663 __top_1
 227 pathaction!0_,574
Consider method^4_3;2;0;0,294 294 m-drive-to-via
3;2;0;0 3 pathaction!4_3;2;0;0,499
Consider method^3_2;2;0,7 7 m-drive-to
2;2;0 17 pathaction!3_2;2;0,511
Consider method^2_9;0,618 618 m-drive-to-via
9;0 46 pathaction!2_9;0,537
Consider method^3_2;0;0,264 264 m-drive-to-via
2;0;0 30 pathaction!3_2;0;0,519
Consider method^4_1;0;0;0,525 525 m-drive-to-via
1;0;0;0 90 pathaction!4_1;0;0;0,512
Consider method^3_1;2;0,442 442 m-drive-to-via
1;2;0 42 pathaction!3_1;2;0,506
Consider method^1_4,358 358 m-deliver
4 138 pathaction!1_4,408
Consider method^5_5;0;0;0;0,247 247 m-drive-to-via
5;0;0;0;0 7 pathaction!5_5;0;0;0;0,516
Consider method^2_6;2,583 583 m-drive-to-via
6;2 176 pathaction!2_6;2,502
Consider method^5_3;2;0;0;0,638 638 m-drive-to
3;2;0;0;0 122 pathaction!5_3;2;0;0;0,541
Consider method^3_6;0;0,432 432 m-drive-to
6;0;0 154 pathaction!3_6;0;0,511
Consider method^2_9;3,227 227 m-unload
9;3 123 pathaction!2_9;3,554
Consider method^3_9;0;0,632 632 m-drive-to-via
9;0;0 155 pathaction!3_9;0;0,534
Consider method^2_0;2,503 503 m-drive-to-via
0;2 18 pathaction!2_0;2,540
Consider method^4_3;0;0;0,503 503 m-drive-to-via
3;0;0;0 193 pathaction!4_3;0;0;0,540
Consider method^4_2;0;0;0,647 647 m-drive-to-via
2;0;0;0 121 pathaction!4_2;0;0;0,533
Consider method^2_5;3,307 307 m-unload
5;3 181 pathaction!2_5;3,556
Consider method^2_4;0,196 196 m-drive-to-via
4;0 124 pathaction!2_4;0,541
Consider method^2_4;3,394 394 m-unload
4;3 70 pathaction!2_4;3,566
Consider method^6_6;2;0;0;0;0,432 432 m-drive-to
6;2;0;0;0;0 60 pathaction!6_6;2;0;0;0;0,511
Consider method^1_9,302 302 m-deliver
9 220 pathaction!1_9,407
Consider method^3_8;2;0,460 460 m-drive-to-via
8;2;0 156 pathaction!3_8;2;0,511
Consider method^6_7;0;0;0;0;0,546 546 m-drive-to
7;0;0;0;0;0 65 pathaction!6_7;0;0;0;0;0,532
Consider method^3_7;0;0,655 655 m-drive-to-via
7;0;0 91 pathaction!3_7;0;0,531
Consider method^2_1;3,357 357 m-unload
1;3 118 pathaction!2_1;3,571
Consider method^5_0;2;0;0;0,247 247 m-drive-to-via
0;2;0;0;0 73 pathaction!5_0;2;0;0;0,516
Consider method^5_3;0;0;0;0,582 582 m-drive-to
3;0;0;0;0 48 pathaction!5_3;0;0;0;0,541
Consider method^4_4;0;0;0,586 586 m-drive-to-via
4;0;0;0 115 pathaction!4_4;0;0;0,541
Consider method^3_6;2;0,341 341 m-drive-to-via
6;2;0 170 pathaction!3_6;2;0,532
Consider method^4_5;0;0;0,200 200 m-drive-to-via
5;0;0;0 180 pathaction!4_5;0;0;0,529
Consider method^2_8;3,215 215 m-unload
8;3 93 pathaction!2_8;3,567
Consider method^1_3,595 595 m-deliver
3 25 pathaction!1_3,403
Consider method^3_9;2;0,247 247 m-drive-to-via
9;2;0 151 pathaction!3_9;2;0,516
Consider method^2_5;1,208 208 m-load
5;1 8 pathaction!2_5;1,383
Consider method^5_4;0;0;0;0,268 268 m-drive-to-via
4;0;0;0;0 120 pathaction!5_4;0;0;0;0,499
Consider method^2_4;1,161 161 m-load
4;1 166 pathaction!2_4;1,392
Consider method^1_8,183 183 m-deliver
8 63 pathaction!1_8,405
Consider method^3_4;2;0,504 504 m-drive-to-via
4;2;0 26 pathaction!3_4;2;0,516
Consider method^2_7;1,4 4 m-load
7;1 62 pathaction!2_7;1,387
Consider method^2_9;2,268 268 m-drive-to-via
9;2 127 pathaction!2_9;2,499
Consider method^6_5;0;0;0;0;0,174 174 m-i-am-there
5;0;0;0;0;0 216 pathaction!6_5;0;0;0;0;0,524
Consider method^4_9;0;0;0,660 660 m-drive-to-via
9;0;0;0 78 pathaction!4_9;0;0;0,536
Consider method^3_8;0;0,593 593 m-drive-to-via
8;0;0 161 pathaction!3_8;0;0,520
Consider method^1_2,406 406 m-deliver
2 66 pathaction!1_2,399
Consider method^6_8;0;0;0;0;0,269 269 m-drive-to
8;0;0;0;0;0 145 pathaction!6_8;0;0;0;0;0,518
Consider method^2_2;3,126 126 m-unload
2;3 45 pathaction!2_2;3,572
Consider method^6_0;2;0;0;0;0,174 174 m-i-am-there
0;2;0;0;0;0 208 pathaction!6_0;2;0;0;0;0,524
Consider method^2_7;2,264 264 m-drive-to-via
7;2 157 pathaction!2_7;2,519
Consider method^1_0,162 162 m-deliver
0 219 pathaction!1_0,401
Consider method^2_2;0,175 175 m-drive-to-via
2;0 56 pathaction!2_2;0,518
Consider method^2_8;1,73 73 m-load
8;1 211 pathaction!2_8;1,396
Consider method^2_5;2,455 455 m-drive-to-via
5;2 147 pathaction!2_5;2,539
Consider method^3_1;0;0,349 349 m-drive-to-via
1;0;0 54 pathaction!3_1;0;0,504
Consider method^6_2;0;0;0;0;0,546 546 m-drive-to
2;0;0;0;0;0 77 pathaction!6_2;0;0;0;0;0,532
Consider method^2_7;0,467 467 m-drive-to-via
7;0 192 pathaction!2_7;0,531
Consider method^6_1;0;0;0;0;0,102 102 m-drive-to
1;0;0;0;0;0 2 pathaction!6_1;0;0;0;0;0,506
Consider method^3_0;0;0,247 247 m-drive-to-via
0;0;0 143 pathaction!3_0;0;0,516
Consider method^5_9;0;0;0;0,586 586 m-drive-to-via
9;0;0;0;0 160 pathaction!5_9;0;0;0;0,541
Consider method^6_9;0;0;0;0;0,298 298 m-drive-to
9;0;0;0;0;0 184 pathaction!6_9;0;0;0;0;0,499
Consider method^4_1;2;0;0,300 300 m-drive-to-via
1;2;0;0 218 pathaction!4_1;2;0;0,503
Consider method^2_7;3,453 453 m-unload
7;3 10 pathaction!2_7;3,546
Consider method^2_0;1,101 101 m-load
0;1 32 pathaction!2_0;1,346
Consider method^3_7;2;0,501 501 m-drive-to
7;2;0 95 pathaction!3_7;2;0,533
Consider method^5_8;2;0;0;0,648 648 m-drive-to
8;2;0;0;0 50 pathaction!5_8;2;0;0;0,520
Consider method^2_0;3,37 37 m-unload
0;3 109 pathaction!2_0;3,570
Consider method^3_0;2;0,586 586 m-drive-to-via
0;2;0 191 pathaction!3_0;2;0,541
Consider method^3_5;2;0,268 268 m-drive-to-via
5;2;0 84 pathaction!3_5;2;0,499
Consider method^4_9;2;0;0,391 391 m-drive-to
9;2;0;0 79 pathaction!4_9;2;0;0,524
Consider method^5_5;2;0;0;0,541 541 m-drive-to-via
5;2;0;0;0 235 pathaction!5_5;2;0;0;0,529
Consider method^2_3;0,649 649 m-drive-to-via
3;0 140 pathaction!2_3;0,529
Consider method^4_0;2;0;0,268 268 m-drive-to-via
0;2;0;0 163 pathaction!4_0;2;0;0,499
Consider method^2_6;0,564 564 m-drive-to-via
6;0 11 pathaction!2_6;0,523
Consider method^1_6,172 172 m-deliver
6 215 pathaction!1_6,404
Consider method^2_5;0,246 246 m-drive-to-via
5;0 34 pathaction!2_5;0,538
Consider method^4_8;2;0;0,140 140 m-drive-to-via
8;2;0;0 71 pathaction!4_8;2;0;0,518
Consider method^2_2;1,351 351 m-load
2;1 14 pathaction!2_2;1,366
Consider method^3_5;0;0,509 509 m-drive-to-via
5;0;0 134 pathaction!3_5;0;0,538
Consider method^6_4;0;0;0;0;0,263 263 m-drive-to
4;0;0;0;0;0 152 pathaction!6_4;0;0;0;0;0,516
Consider method^6_1;2;0;0;0;0,262 262 m-drive-to
1;2;0;0;0;0 200 pathaction!6_1;2;0;0;0;0,542
Consider method^5_7;0;0;0;0,311 311 m-drive-to-via
7;0;0;0;0 81 pathaction!5_7;0;0;0;0,514
Consider method^4_6;2;0;0,367 367 m-drive-to-via
6;2;0;0 167 pathaction!4_6;2;0;0,514
Consider method^2_8;2,3 3 m-drive-to-via
8;2 94 pathaction!2_8;2,518
Consider method^5_1;2;0;0;0,232 232 m-drive-to-via
1;2;0;0;0 52 pathaction!5_1;2;0;0;0,512


CHECKING primitive solution of length 103 ...
true 185 drive[truck-2,city-loc-10,city-loc-11;]
true 67 drive[truck-2,city-loc-11,city-loc-1;]
true 165 drive[truck-2,city-loc-1,city-loc-0;]
true 58 drive[truck-2,city-loc-0,city-loc-1;]
true 201 pick-up[truck-2,city-loc-1,package-0,capacity-2,capacity-3;]
true 82 noop[truck-2,city-loc-1;]
true 41 drive[truck-2,city-loc-1,city-loc-0;]
true 158 drive[truck-2,city-loc-0,city-loc-9;]
true 103 drive[truck-2,city-loc-9,city-loc-14;]
true 83 drive[truck-2,city-loc-14,city-loc-3;]
true 104 drop[truck-2,city-loc-3,package-0,capacity-2,capacity-3;]
true 119 drive[truck-0,city-loc-8,city-loc-7;]
true 194 drive[truck-0,city-loc-7,city-loc-9;]
true 205 drive[truck-0,city-loc-9,city-loc-14;]
true 74 drive[truck-0,city-loc-14,city-loc-2;]
true 108 drive[truck-0,city-loc-2,city-loc-12;]
true 149 pick-up[truck-0,city-loc-12,package-1,capacity-2,capacity-3;]
true 221 drive[truck-0,city-loc-12,city-loc-3;]
true 162 drive[truck-0,city-loc-3,city-loc-14;]
true 16 drive[truck-0,city-loc-14,city-loc-9;]
true 189 drive[truck-0,city-loc-9,city-loc-7;]
true 114 drive[truck-0,city-loc-7,city-loc-8;]
true 130 drop[truck-0,city-loc-8,package-1,capacity-2,capacity-3;]
true 222 drive[truck-1,city-loc-11,city-loc-10;]
true 190 drive[truck-1,city-loc-10,city-loc-5;]
true 136 drive[truck-1,city-loc-5,city-loc-14;]
true 148 drive[truck-1,city-loc-14,city-loc-2;]
true 131 drive[truck-1,city-loc-2,city-loc-0;]
true 113 pick-up[truck-1,city-loc-0,package-2,capacity-2,capacity-3;]
true 169 drive[truck-1,city-loc-0,city-loc-9;]
true 202 drive[truck-1,city-loc-9,city-loc-7;]
true 36 drop[truck-1,city-loc-7,package-2,capacity-2,capacity-3;]
true 38 drive[truck-2,city-loc-3,city-loc-14;]
true 24 drive[truck-2,city-loc-14,city-loc-3;]
true 133 drive[truck-2,city-loc-3,city-loc-14;]
true 1 drive[truck-2,city-loc-14,city-loc-2;]
true 112 pick-up[truck-2,city-loc-2,package-3,capacity-2,capacity-3;]
true 98 drive[truck-2,city-loc-2,city-loc-14;]
true 228 drive[truck-2,city-loc-14,city-loc-9;]
true 111 drive[truck-2,city-loc-9,city-loc-0;]
true 22 drive[truck-2,city-loc-0,city-loc-1;]
true 101 drop[truck-2,city-loc-1,package-3,capacity-2,capacity-3;]
true 159 drive[truck-2,city-loc-1,city-loc-0;]
true 64 drive[truck-2,city-loc-0,city-loc-9;]
true 39 drive[truck-2,city-loc-9,city-loc-14;]
true 55 drive[truck-2,city-loc-14,city-loc-5;]
true 57 drive[truck-2,city-loc-5,city-loc-14;]
true 153 pick-up[truck-2,city-loc-14,package-4,capacity-2,capacity-3;]
true 6 drive[truck-2,city-loc-14,city-loc-9;]
true 212 drive[truck-2,city-loc-9,city-loc-0;]
true 99 drive[truck-2,city-loc-0,city-loc-1;]
true 168 drop[truck-2,city-loc-1,package-4,capacity-2,capacity-3;]
true 27 noop[truck-2,city-loc-1;]
true 35 drive[truck-2,city-loc-1,city-loc-0;]
true 96 drive[truck-2,city-loc-0,city-loc-2;]
true 37 drive[truck-2,city-loc-2,city-loc-12;]
true 5 drive[truck-2,city-loc-12,city-loc-12;]
true 97 pick-up[truck-2,city-loc-12,package-5,capacity-2,capacity-3;]
true 88 noop[truck-2,city-loc-12;]
true 116 drive[truck-2,city-loc-12,city-loc-2;]
true 186 drive[truck-2,city-loc-2,city-loc-0;]
true 19 drive[truck-2,city-loc-0,city-loc-9;]
true 129 drive[truck-2,city-loc-9,city-loc-7;]
true 12 drop[truck-2,city-loc-7,package-5,capacity-2,capacity-3;]
true 234 drive[truck-1,city-loc-7,city-loc-9;]
true 177 drive[truck-1,city-loc-9,city-loc-7;]
true 51 pick-up[truck-1,city-loc-7,package-6,capacity-2,capacity-3;]
true 144 drive[truck-1,city-loc-7,city-loc-9;]
true 0 drive[truck-1,city-loc-9,city-loc-14;]
true 173 drive[truck-1,city-loc-14,city-loc-4;]
true 102 drive[truck-1,city-loc-4,city-loc-10;]
true 187 drive[truck-1,city-loc-10,city-loc-11;]
true 225 drop[truck-1,city-loc-11,package-6,capacity-2,capacity-3;]
true 15 drive[truck-1,city-loc-11,city-loc-10;]
true 72 drive[truck-1,city-loc-10,city-loc-4;]
true 128 drive[truck-1,city-loc-4,city-loc-14;]
true 197 drive[truck-1,city-loc-14,city-loc-3;]
true 213 drive[truck-1,city-loc-3,city-loc-3;]
true 195 pick-up[truck-1,city-loc-3,package-7,capacity-2,capacity-3;]
true 100 drive[truck-1,city-loc-3,city-loc-14;]
true 206 drive[truck-1,city-loc-14,city-loc-2;]
true 20 drop[truck-1,city-loc-2,package-7,capacity-2,capacity-3;]
true 106 drive[truck-1,city-loc-2,city-loc-0;]
true 68 drive[truck-1,city-loc-0,city-loc-1;]
true 231 drive[truck-1,city-loc-1,city-loc-11;]
true 174 drive[truck-1,city-loc-11,city-loc-1;]
true 92 drive[truck-1,city-loc-1,city-loc-6;]
true 29 pick-up[truck-1,city-loc-6,package-8,capacity-2,capacity-3;]
true 28 drive[truck-1,city-loc-6,city-loc-1;]
true 105 drive[truck-1,city-loc-1,city-loc-0;]
true 209 drive[truck-1,city-loc-0,city-loc-9;]
true 135 drive[truck-1,city-loc-9,city-loc-0;]
true 126 drop[truck-1,city-loc-0,package-8,capacity-2,capacity-3;]
true 85 drive[truck-2,city-loc-7,city-loc-9;]
true 210 drive[truck-2,city-loc-9,city-loc-14;]
true 179 drive[truck-2,city-loc-14,city-loc-4;]
true 146 drive[truck-2,city-loc-4,city-loc-10;]
true 76 drive[truck-2,city-loc-10,city-loc-11;]
true 230 pick-up[truck-2,city-loc-11,package-9,capacity-2,capacity-3;]
true 182 drive[truck-2,city-loc-11,city-loc-1;]
true 43 drive[truck-2,city-loc-1,city-loc-0;]
true 204 drive[truck-2,city-loc-0,city-loc-9;]
true 49 drop[truck-2,city-loc-9,package-9,capacity-2,capacity-3;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 275068552
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 107
number of actions                    = 635
number of abstract actions           = 206
number of primitive actions          = 429
number of methods                    = 664
number of primitive shop actions     = 0
number of primitive non-shop actions = 429
size of largest method               = 10
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 124865
number of clauses               = 425083
average size of clauses         = 3.2874873848166124
number of assert                = 17
number of horn                  = 389223
K offset                        = 0
K chosen value                  = 7
state formula                   = 139980
method children clauses         = 0
number of paths                 = 177
maximum plan length             = 177
number of decomposition clauses = 285103
number of ordering clauses      = 0
number of state clauses         = 139980
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 9621
============ parsing ============
total                         = 906
file parser                   = 532
sort expansion                = 160
closed world assumption       = 143
inherit preconditions         = 0
shop methods                  = 1
eliminate identical variables = 27
strip domain of hybridity     = 2
flatten formula               = 40
============ preprocessing ============
total                                      = 1689
compile negative preconditions             = 63
compile unit methods                       = 0
split parameter                            = 36
expand choiceless abstract tasks           = 1
compile methods with identical tasks       = 44
removing unnecessary predicates            = 170
lifted reachabiltiy analysis               = 58
grounded planning graph analysis           = 613
grounded task decomposition graph analysis = 496
grounding                                  = 183
create artificial top task                 = 15
============ search preparation ============
compute state invariants = 366
============ sat ============
total                                        = 5484
generate formula                             = 3941
generate path decomposition tree             = 514
normalise path decomposition tree            = 239
sog optimisation                             = 129
translate path decomposition tree to clauses = 1453
generate state formula                       = 3872
generate state invariant formula             = 212
transform to DIMACS                          = 549
SAT solver                                   = 590
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 10
SAT solver for K=0005                        = 40
SAT solver for K=0006                        = 110
SAT solver for K=0007                        = 420

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="429";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="206";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="275068552";"40 sat:20:state formula"="139980";"40 sat:01:number of variables"="124865";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="177";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="664";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="635";"30 problem:08:number of primitive non-shop actions"="429";"30 problem:02:number of predicates"="107";"40 sat:03:number of horn"="389223";"40 sat:15:K chosen value"="7";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="10";"40 sat:03:average size of clauses"="3.2874873848166124";"40 sat:02:number of clauses"="425083";"40 sat:50:number of state clauses"="139980";"40 sat:03:number of assert"="17";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="177";"40 sat:50:number of decomposition clauses"="285103";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="532";"01 parsing:08:flatten formula"="40";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="5484";"40 sat:16:generate state formula"="3872";"40 sat:20:transform to DIMACS"="549";"40 sat:11:generate path decomposition tree"="514";"02 preprocessing:07:compile methods with identical tasks"="44";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="170";"01 parsing:03:closed world assumption"="143";"02 preprocessing:11:lifted reachabiltiy analysis"="58";"01 parsing:02:sort expansion"="160";"40 sat:12:normalise path decomposition tree"="239";"40 sat:40:SAT solver"="590";"01 parsing:00:total"="906";"40 sat:10:generate formula"="3941";"40 sat:41:SAT solver for K=0005"="40";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="63";"00 total:00:total"="9621";"40 sat:13:sog optimisation"="129";"02 preprocessing:12:grounded planning graph analysis"="613";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="496";"40 sat:41:SAT solver for K=0006"="110";"02 preprocessing:04:split parameter"="36";"01 parsing:05:shop methods"="1";"10 search preparation:02:compute state invariants"="366";"01 parsing:06:eliminate identical variables"="27";"40 sat:15:translate path decomposition tree to clauses"="1453";"02 preprocessing:05:expand choiceless abstract tasks"="1";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="212";"02 preprocessing:00:total"="1689";"02 preprocessing:99:create artificial top task"="15";"02 preprocessing:84:grounding"="183";"40 sat:41:SAT solver for K=0007"="420"
#!verify drive[truck-2,city-loc-10,city-loc-11];drive[truck-2,city-loc-11,city-loc-1];drive[truck-2,city-loc-1,city-loc-0];drive[truck-2,city-loc-0,city-loc-1];pick-up[truck-2,city-loc-1,package-0,capacity-2,capacity-3];noop[truck-2,city-loc-1];drive[truck-2,city-loc-1,city-loc-0];drive[truck-2,city-loc-0,city-loc-9];drive[truck-2,city-loc-9,city-loc-14];drive[truck-2,city-loc-14,city-loc-3];drop[truck-2,city-loc-3,package-0,capacity-2,capacity-3];drive[truck-0,city-loc-8,city-loc-7];drive[truck-0,city-loc-7,city-loc-9];drive[truck-0,city-loc-9,city-loc-14];drive[truck-0,city-loc-14,city-loc-2];drive[truck-0,city-loc-2,city-loc-12];pick-up[truck-0,city-loc-12,package-1,capacity-2,capacity-3];drive[truck-0,city-loc-12,city-loc-3];drive[truck-0,city-loc-3,city-loc-14];drive[truck-0,city-loc-14,city-loc-9];drive[truck-0,city-loc-9,city-loc-7];drive[truck-0,city-loc-7,city-loc-8];drop[truck-0,city-loc-8,package-1,capacity-2,capacity-3];drive[truck-1,city-loc-11,city-loc-10];drive[truck-1,city-loc-10,city-loc-5];drive[truck-1,city-loc-5,city-loc-14];drive[truck-1,city-loc-14,city-loc-2];drive[truck-1,city-loc-2,city-loc-0];pick-up[truck-1,city-loc-0,package-2,capacity-2,capacity-3];drive[truck-1,city-loc-0,city-loc-9];drive[truck-1,city-loc-9,city-loc-7];drop[truck-1,city-loc-7,package-2,capacity-2,capacity-3];drive[truck-2,city-loc-3,city-loc-14];drive[truck-2,city-loc-14,city-loc-3];drive[truck-2,city-loc-3,city-loc-14];drive[truck-2,city-loc-14,city-loc-2];pick-up[truck-2,city-loc-2,package-3,capacity-2,capacity-3];drive[truck-2,city-loc-2,city-loc-14];drive[truck-2,city-loc-14,city-loc-9];drive[truck-2,city-loc-9,city-loc-0];drive[truck-2,city-loc-0,city-loc-1];drop[truck-2,city-loc-1,package-3,capacity-2,capacity-3];drive[truck-2,city-loc-1,city-loc-0];drive[truck-2,city-loc-0,city-loc-9];drive[truck-2,city-loc-9,city-loc-14];drive[truck-2,city-loc-14,city-loc-5];drive[truck-2,city-loc-5,city-loc-14];pick-up[truck-2,city-loc-14,package-4,capacity-2,capacity-3];drive[truck-2,city-loc-14,city-loc-9];drive[truck-2,city-loc-9,city-loc-0];drive[truck-2,city-loc-0,city-loc-1];drop[truck-2,city-loc-1,package-4,capacity-2,capacity-3];noop[truck-2,city-loc-1];drive[truck-2,city-loc-1,city-loc-0];drive[truck-2,city-loc-0,city-loc-2];drive[truck-2,city-loc-2,city-loc-12];drive[truck-2,city-loc-12,city-loc-12];pick-up[truck-2,city-loc-12,package-5,capacity-2,capacity-3];noop[truck-2,city-loc-12];drive[truck-2,city-loc-12,city-loc-2];drive[truck-2,city-loc-2,city-loc-0];drive[truck-2,city-loc-0,city-loc-9];drive[truck-2,city-loc-9,city-loc-7];drop[truck-2,city-loc-7,package-5,capacity-2,capacity-3];drive[truck-1,city-loc-7,city-loc-9];drive[truck-1,city-loc-9,city-loc-7];pick-up[truck-1,city-loc-7,package-6,capacity-2,capacity-3];drive[truck-1,city-loc-7,city-loc-9];drive[truck-1,city-loc-9,city-loc-14];drive[truck-1,city-loc-14,city-loc-4];drive[truck-1,city-loc-4,city-loc-10];drive[truck-1,city-loc-10,city-loc-11];drop[truck-1,city-loc-11,package-6,capacity-2,capacity-3];drive[truck-1,city-loc-11,city-loc-10];drive[truck-1,city-loc-10,city-loc-4];drive[truck-1,city-loc-4,city-loc-14];drive[truck-1,city-loc-14,city-loc-3];drive[truck-1,city-loc-3,city-loc-3];pick-up[truck-1,city-loc-3,package-7,capacity-2,capacity-3];drive[truck-1,city-loc-3,city-loc-14];drive[truck-1,city-loc-14,city-loc-2];drop[truck-1,city-loc-2,package-7,capacity-2,capacity-3];drive[truck-1,city-loc-2,city-loc-0];drive[truck-1,city-loc-0,city-loc-1];drive[truck-1,city-loc-1,city-loc-11];drive[truck-1,city-loc-11,city-loc-1];drive[truck-1,city-loc-1,city-loc-6];pick-up[truck-1,city-loc-6,package-8,capacity-2,capacity-3];drive[truck-1,city-loc-6,city-loc-1];drive[truck-1,city-loc-1,city-loc-0];drive[truck-1,city-loc-0,city-loc-9];drive[truck-1,city-loc-9,city-loc-0];drop[truck-1,city-loc-0,package-8,capacity-2,capacity-3];drive[truck-2,city-loc-7,city-loc-9];drive[truck-2,city-loc-9,city-loc-14];drive[truck-2,city-loc-14,city-loc-4];drive[truck-2,city-loc-4,city-loc-10];drive[truck-2,city-loc-10,city-loc-11];pick-up[truck-2,city-loc-11,package-9,capacity-2,capacity-3];drive[truck-2,city-loc-11,city-loc-1];drive[truck-2,city-loc-1,city-loc-0];drive[truck-2,city-loc-0,city-loc-9];drop[truck-2,city-loc-9,package-9,capacity-2,capacity-3]
==>
0 drive truck-2 city-loc-10 city-loc-11 
1 drive truck-2 city-loc-11 city-loc-1 
2 drive truck-2 city-loc-1 city-loc-0 
3 drive truck-2 city-loc-0 city-loc-1 
4 pick-up truck-2 city-loc-1 package-0 capacity-2 capacity-3 
5 noop truck-2 city-loc-1 
6 drive truck-2 city-loc-1 city-loc-0 
7 drive truck-2 city-loc-0 city-loc-9 
8 drive truck-2 city-loc-9 city-loc-14 
9 drive truck-2 city-loc-14 city-loc-3 
10 drop truck-2 city-loc-3 package-0 capacity-2 capacity-3 
11 drive truck-0 city-loc-8 city-loc-7 
12 drive truck-0 city-loc-7 city-loc-9 
13 drive truck-0 city-loc-9 city-loc-14 
14 drive truck-0 city-loc-14 city-loc-2 
15 drive truck-0 city-loc-2 city-loc-12 
16 pick-up truck-0 city-loc-12 package-1 capacity-2 capacity-3 
17 drive truck-0 city-loc-12 city-loc-3 
18 drive truck-0 city-loc-3 city-loc-14 
19 drive truck-0 city-loc-14 city-loc-9 
20 drive truck-0 city-loc-9 city-loc-7 
21 drive truck-0 city-loc-7 city-loc-8 
22 drop truck-0 city-loc-8 package-1 capacity-2 capacity-3 
23 drive truck-1 city-loc-11 city-loc-10 
24 drive truck-1 city-loc-10 city-loc-5 
25 drive truck-1 city-loc-5 city-loc-14 
26 drive truck-1 city-loc-14 city-loc-2 
27 drive truck-1 city-loc-2 city-loc-0 
28 pick-up truck-1 city-loc-0 package-2 capacity-2 capacity-3 
29 drive truck-1 city-loc-0 city-loc-9 
30 drive truck-1 city-loc-9 city-loc-7 
31 drop truck-1 city-loc-7 package-2 capacity-2 capacity-3 
32 drive truck-2 city-loc-3 city-loc-14 
33 drive truck-2 city-loc-14 city-loc-3 
34 drive truck-2 city-loc-3 city-loc-14 
35 drive truck-2 city-loc-14 city-loc-2 
36 pick-up truck-2 city-loc-2 package-3 capacity-2 capacity-3 
37 drive truck-2 city-loc-2 city-loc-14 
38 drive truck-2 city-loc-14 city-loc-9 
39 drive truck-2 city-loc-9 city-loc-0 
40 drive truck-2 city-loc-0 city-loc-1 
41 drop truck-2 city-loc-1 package-3 capacity-2 capacity-3 
42 drive truck-2 city-loc-1 city-loc-0 
43 drive truck-2 city-loc-0 city-loc-9 
44 drive truck-2 city-loc-9 city-loc-14 
45 drive truck-2 city-loc-14 city-loc-5 
46 drive truck-2 city-loc-5 city-loc-14 
47 pick-up truck-2 city-loc-14 package-4 capacity-2 capacity-3 
48 drive truck-2 city-loc-14 city-loc-9 
49 drive truck-2 city-loc-9 city-loc-0 
50 drive truck-2 city-loc-0 city-loc-1 
51 drop truck-2 city-loc-1 package-4 capacity-2 capacity-3 
52 noop truck-2 city-loc-1 
53 drive truck-2 city-loc-1 city-loc-0 
54 drive truck-2 city-loc-0 city-loc-2 
55 drive truck-2 city-loc-2 city-loc-12 
56 drive truck-2 city-loc-12 city-loc-12 
57 pick-up truck-2 city-loc-12 package-5 capacity-2 capacity-3 
58 noop truck-2 city-loc-12 
59 drive truck-2 city-loc-12 city-loc-2 
60 drive truck-2 city-loc-2 city-loc-0 
61 drive truck-2 city-loc-0 city-loc-9 
62 drive truck-2 city-loc-9 city-loc-7 
63 drop truck-2 city-loc-7 package-5 capacity-2 capacity-3 
64 drive truck-1 city-loc-7 city-loc-9 
65 drive truck-1 city-loc-9 city-loc-7 
66 pick-up truck-1 city-loc-7 package-6 capacity-2 capacity-3 
67 drive truck-1 city-loc-7 city-loc-9 
68 drive truck-1 city-loc-9 city-loc-14 
69 drive truck-1 city-loc-14 city-loc-4 
70 drive truck-1 city-loc-4 city-loc-10 
71 drive truck-1 city-loc-10 city-loc-11 
72 drop truck-1 city-loc-11 package-6 capacity-2 capacity-3 
73 drive truck-1 city-loc-11 city-loc-10 
74 drive truck-1 city-loc-10 city-loc-4 
75 drive truck-1 city-loc-4 city-loc-14 
76 drive truck-1 city-loc-14 city-loc-3 
77 drive truck-1 city-loc-3 city-loc-3 
78 pick-up truck-1 city-loc-3 package-7 capacity-2 capacity-3 
79 drive truck-1 city-loc-3 city-loc-14 
80 drive truck-1 city-loc-14 city-loc-2 
81 drop truck-1 city-loc-2 package-7 capacity-2 capacity-3 
82 drive truck-1 city-loc-2 city-loc-0 
83 drive truck-1 city-loc-0 city-loc-1 
84 drive truck-1 city-loc-1 city-loc-11 
85 drive truck-1 city-loc-11 city-loc-1 
86 drive truck-1 city-loc-1 city-loc-6 
87 pick-up truck-1 city-loc-6 package-8 capacity-2 capacity-3 
88 drive truck-1 city-loc-6 city-loc-1 
89 drive truck-1 city-loc-1 city-loc-0 
90 drive truck-1 city-loc-0 city-loc-9 
91 drive truck-1 city-loc-9 city-loc-0 
92 drop truck-1 city-loc-0 package-8 capacity-2 capacity-3 
93 drive truck-2 city-loc-7 city-loc-9 
94 drive truck-2 city-loc-9 city-loc-14 
95 drive truck-2 city-loc-14 city-loc-4 
96 drive truck-2 city-loc-4 city-loc-10 
97 drive truck-2 city-loc-10 city-loc-11 
98 pick-up truck-2 city-loc-11 package-9 capacity-2 capacity-3 
99 drive truck-2 city-loc-11 city-loc-1 
100 drive truck-2 city-loc-1 city-loc-0 
101 drive truck-2 city-loc-0 city-loc-9 
102 drop truck-2 city-loc-9 package-9 capacity-2 capacity-3 
root 132
103 unload truck-2 city-loc-9 package-9  -> m-unload 102
104 get-to truck-1 city-loc-0  -> m-drive-to-via 195 27
105 get-to truck-0 city-loc-9  -> m-drive-to-via 149 19
106 deliver package-6 city-loc-11  -> m-deliver 138 183 211 161
107 get-to truck-2 city-loc-9  -> m-drive-to-via 151 61
108 get-to truck-2 city-loc-9  -> m-drive-to 93
109 get-to truck-0 city-loc-7  -> m-drive-to 11
110 get-to truck-1 city-loc-4  -> m-drive-to-via 174 69
111 get-to truck-2 city-loc-1  -> m-i-am-there 5
112 unload truck-2 city-loc-7 package-5  -> m-unload 63
113 get-to truck-2 city-loc-1  -> m-drive-to-via 216 3
114 get-to truck-2 city-loc-10  -> m-drive-to-via 157 96
115 get-to truck-1 city-loc-14  -> m-drive-to 79
116 get-to truck-2 city-loc-9  -> m-drive-to-via 142 7
117 get-to truck-2 city-loc-11  -> m-drive-to-via 114 97
118 get-to truck-1 city-loc-6  -> m-drive-to-via 192 86
119 get-to truck-2 city-loc-7  -> m-drive-to-via 107 62
120 get-to truck-2 city-loc-9  -> m-drive-to-via 184 38
121 get-to truck-1 city-loc-10  -> m-drive-to 73
122 deliver package-4 city-loc-1  -> m-deliver 137 127 167 152
123 get-to truck-1 city-loc-14  -> m-drive-to-via 187 25
124 get-to truck-2 city-loc-3  -> m-drive-to-via 173 9
125 get-to truck-2 city-loc-9  -> m-drive-to-via 207 101
126 get-to truck-2 city-loc-1  -> m-drive-to-via 147 1
127 load truck-2 city-loc-14 package-4  -> m-load 47
128 get-to truck-2 city-loc-0  -> m-drive-to 42
129 get-to truck-2 city-loc-12  -> m-drive-to-via 175 55
130 get-to truck-2 city-loc-3  -> m-drive-to-via 135 33
131 get-to truck-2 city-loc-14  -> m-drive-to-via 194 44
132 __artificialTopCompilation__top_1  -> __top_1 191 158 199 202 122 168 106 160 214 215
133 get-to truck-0 city-loc-8  -> m-drive-to-via 166 21
134 get-to truck-2 city-loc-14  -> m-drive-to-via 108 94
135 get-to truck-2 city-loc-14  -> m-drive-to 32
136 get-to truck-1 city-loc-11  -> m-drive-to-via 169 84
137 get-to truck-2 city-loc-14  -> m-drive-to-via 188 46
138 get-to truck-1 city-loc-7  -> m-drive-to-via 163 65
139 unload truck-2 city-loc-1 package-3  -> m-unload 41
140 get-to truck-0 city-loc-12  -> m-drive-to-via 148 15
141 get-to truck-1 city-loc-9  -> m-drive-to 67
142 get-to truck-2 city-loc-0  -> m-drive-to-via 111 6
143 get-to truck-0 city-loc-3  -> m-drive-to 17
144 get-to truck-1 city-loc-3  -> m-drive-to-via 182 76
145 get-to truck-1 city-loc-3  -> m-drive-to-via 144 77
146 get-to truck-2 city-loc-12  -> m-i-am-there 58
147 get-to truck-2 city-loc-11  -> m-drive-to 0
148 get-to truck-0 city-loc-2  -> m-drive-to-via 201 14
149 get-to truck-0 city-loc-14  -> m-drive-to-via 143 18
150 get-to truck-1 city-loc-10  -> m-drive-to-via 110 70
151 get-to truck-2 city-loc-0  -> m-drive-to-via 186 60
152 unload truck-2 city-loc-1 package-4  -> m-unload 51
153 get-to truck-1 city-loc-10  -> m-drive-to 23
154 get-to truck-1 city-loc-7  -> m-drive-to-via 205 30
155 get-to truck-2 city-loc-1  -> m-i-am-there 52
156 get-to truck-1 city-loc-9  -> m-drive-to-via 172 90
157 get-to truck-2 city-loc-4  -> m-drive-to-via 134 95
158 deliver package-1 city-loc-8  -> m-deliver 140 165 133 170
159 get-to truck-0 city-loc-9  -> m-drive-to-via 109 12
160 deliver package-7 city-loc-2  -> m-deliver 145 212 197 200
161 unload truck-1 city-loc-11 package-6  -> m-unload 72
162 get-to truck-1 city-loc-0  -> m-drive-to-via 156 91
163 get-to truck-1 city-loc-9  -> m-drive-to 64
164 load truck-1 city-loc-0 package-2  -> m-load 28
165 load truck-0 city-loc-12 package-1  -> m-load 16
166 get-to truck-0 city-loc-7  -> m-drive-to-via 105 20
167 get-to truck-2 city-loc-1  -> m-drive-to-via 181 50
168 deliver package-5 city-loc-7  -> m-deliver 208 209 119 112
169 get-to truck-1 city-loc-1  -> m-drive-to-via 176 83
170 unload truck-0 city-loc-8 package-1  -> m-unload 22
171 unload truck-1 city-loc-0 package-8  -> m-unload 92
172 get-to truck-1 city-loc-0  -> m-drive-to-via 204 89
173 get-to truck-2 city-loc-14  -> m-drive-to-via 116 8
174 get-to truck-1 city-loc-14  -> m-drive-to-via 141 68
175 get-to truck-2 city-loc-2  -> m-drive-to-via 213 54
176 get-to truck-1 city-loc-0  -> m-drive-to 82
177 get-to truck-1 city-loc-4  -> m-drive-to-via 121 74
178 unload truck-2 city-loc-3 package-0  -> m-unload 10
179 load truck-2 city-loc-1 package-0  -> m-load 4
180 get-to truck-2 city-loc-9  -> m-drive-to 48
181 get-to truck-2 city-loc-0  -> m-drive-to-via 180 49
182 get-to truck-1 city-loc-14  -> m-drive-to-via 177 75
183 load truck-1 city-loc-7 package-6  -> m-load 66
184 get-to truck-2 city-loc-14  -> m-drive-to 37
185 load truck-2 city-loc-2 package-3  -> m-load 36
186 get-to truck-2 city-loc-2  -> m-drive-to-via 146 59
187 get-to truck-1 city-loc-5  -> m-drive-to-via 153 24
188 get-to truck-2 city-loc-5  -> m-drive-to-via 131 45
189 get-to truck-2 city-loc-2  -> m-drive-to-via 196 35
190 unload truck-1 city-loc-7 package-2  -> m-unload 31
191 deliver package-0 city-loc-3  -> m-deliver 113 179 124 178
192 get-to truck-1 city-loc-1  -> m-drive-to-via 136 85
193 get-to truck-2 city-loc-0  -> m-drive-to-via 120 39
194 get-to truck-2 city-loc-9  -> m-drive-to-via 128 43
195 get-to truck-1 city-loc-2  -> m-drive-to-via 123 26
196 get-to truck-2 city-loc-14  -> m-drive-to-via 130 34
197 get-to truck-1 city-loc-2  -> m-drive-to-via 115 80
198 load truck-1 city-loc-6 package-8  -> m-load 87
199 deliver package-2 city-loc-7  -> m-deliver 104 164 154 190
200 unload truck-1 city-loc-2 package-7  -> m-unload 81
201 get-to truck-0 city-loc-14  -> m-drive-to-via 159 13
202 deliver package-3 city-loc-1  -> m-deliver 189 185 203 139
203 get-to truck-2 city-loc-1  -> m-drive-to-via 193 40
204 get-to truck-1 city-loc-1  -> m-drive-to 88
205 get-to truck-1 city-loc-9  -> m-drive-to 29
206 load truck-2 city-loc-11 package-9  -> m-load 98
207 get-to truck-2 city-loc-0  -> m-drive-to-via 210 100
208 get-to truck-2 city-loc-12  -> m-drive-to-via 129 56
209 load truck-2 city-loc-12 package-5  -> m-load 57
210 get-to truck-2 city-loc-1  -> m-drive-to 99
211 get-to truck-1 city-loc-11  -> m-drive-to-via 150 71
212 load truck-1 city-loc-3 package-7  -> m-load 78
213 get-to truck-2 city-loc-0  -> m-drive-to-via 155 53
214 deliver package-8 city-loc-0  -> m-deliver 118 198 162 171
215 deliver package-9 city-loc-9  -> m-deliver 117 206 125 103
216 get-to truck-2 city-loc-0  -> m-drive-to-via 126 2

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 10.752 MEMPEAK_KBS 595580.928
