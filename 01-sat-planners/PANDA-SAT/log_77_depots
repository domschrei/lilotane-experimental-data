PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p17.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p17.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p17.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Grounded planning graph ... done in 467ms.
	Number of Grounded Actions 1158
	Number of Grounded Literals 239
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Grounding ... done.
	number of abstract tasks = 208
	number of tasks = 933
	number of decomposition methods = 852
	number of predicates = 255
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 208
	number of tasks = 933
	number of decomposition methods = 852
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 115ms.
	Number of Grounded Actions 725
	Number of Grounded Literals 162
	number of abstract tasks = 208
	number of tasks = 933
	number of decomposition methods = 852
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 208
	number of tasks = 933
	number of decomposition methods = 852
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 161
	number of tasks = 886
	number of decomposition methods = 805
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 161
	number of tasks = 886
	number of decomposition methods = 805
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 161
	number of tasks = 886
	number of decomposition methods = 805
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 37ms.
	Number of Grounded Actions 725
	Number of Grounded Literals 162
	number of abstract tasks = 161
	number of tasks = 886
	number of decomposition methods = 805
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 161
	number of tasks = 886
	number of decomposition methods = 805
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 149
	number of tasks = 874
	number of decomposition methods = 793
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 149
	number of tasks = 874
	number of decomposition methods = 793
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 149
	number of tasks = 874
	number of decomposition methods = 793
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 43ms.
	Number of Grounded Actions 725
	Number of Grounded Literals 162
	number of abstract tasks = 149
	number of tasks = 874
	number of decomposition methods = 793
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 149
	number of tasks = 874
	number of decomposition methods = 793
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 146
	number of tasks = 871
	number of decomposition methods = 790
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 146
	number of tasks = 871
	number of decomposition methods = 790
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 146
	number of tasks = 871
	number of decomposition methods = 790
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 40ms.
	Number of Grounded Actions 725
	Number of Grounded Literals 162
	number of abstract tasks = 146
	number of tasks = 871
	number of decomposition methods = 790
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 146
	number of tasks = 871
	number of decomposition methods = 790
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 146
	number of tasks = 871
	number of decomposition methods = 790
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 146
	number of tasks = 871
	number of decomposition methods = 790
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 146
	number of tasks = 871
	number of decomposition methods = 790
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 146
	number of tasks = 871
	number of decomposition methods = 790
	number of predicates = 162
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 387
	number of epsilon methods = 0
	number of primitive tasks = 725
	number of constants = 0
Tasks 725 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771302ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 41 leafs
Checking whether the PDT can grow any more ... yes ... done
Still waiting ... running for 101 will abort at 9223372036854771222
Normalising and optimising PDT ... done
PDT has 14 leafs
SHOP LEAFS 14
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 39123
Size 39123 at 0/725
Size 32931 at 500/725
Size 16554
Size 16554 at 0/725
Size 9313 at 500/725
Size 5309
Size 5309 at 0/725
Size 5293 at 500/725
Size 2412
Size 2412 at 0/725
Size 2390 at 500/725
Size 1362
Size 1362 at 0/725
Size 1358 at 500/725
Size 1338
Size 1338 at 0/725
Size 1330 at 500/725
Size 1319
Size 1319 at 0/725
Size 1319 at 500/725
Size 1307
Size 1307 at 0/725
Size 1307 at 500/725
Size 1305
Size 1305 at 0/725
Size 1305 at 500/725
Size 1305
Invariant time: 0.789
Number of invariants: 1305
Invariant Clauses 19575
NUMBER OF CLAUSES 24398
NUMBER OF STATE CLAUSES 24280
NUMBER OF DECOMPOSITION CLAUSES 118
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.52% 0.48% 0.0% 
NUMBER OF PATHS 14
Starting cryptominisat5.5
Setting starttime of solver to 1604479204182
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 125 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854769660
done
PDT has 73 leafs
SHOP LEAFS 44
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 96570
NUMBER OF CLAUSES 130652
NUMBER OF STATE CLAUSES 122797
NUMBER OF DECOMPOSITION CLAUSES 7855
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 93.99% 6.01% 0.0% 
NUMBER OF PATHS 73
Starting cryptominisat5.5
Setting starttime of solver to 1604479205141
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 214 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 164 leafs
SHOP LEAFS 92
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768557
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 215325
NUMBER OF CLAUSES 308329
NUMBER OF STATE CLAUSES 276088
NUMBER OF DECOMPOSITION CLAUSES 32241
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 89.54% 10.46% 0.0% 
NUMBER OF PATHS 164
Starting cryptominisat5.5
Setting starttime of solver to 1604479206514
Command exited with non-zero status 20
0.07 0.00

Time command gave the following runtime for the solver: 70
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 272 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 247 leafs
SHOP LEAFS 136
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854767288
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 323640
NUMBER OF CLAUSES 463794
NUMBER OF STATE CLAUSES 415302
NUMBER OF DECOMPOSITION CLAUSES 48492
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 89.54% 10.46% 0.0% 
NUMBER OF PATHS 247
Starting cryptominisat5.5
Setting starttime of solver to 1604479207964
Command exited with non-zero status 10
0.15 0.03

Time command gave the following runtime for the solver: 180
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_3;2;1,317 317 m4_do_clear
3;2;1 104 pathaction!3_3;2;1,4
Consider method^2_6;3,521 521 _m3_do_put_on_2
6;3 26 pathaction!2_6;3,687
Consider method^2_3;1,298 298 m7_do_get_truck
3;1 67 pathaction!2_3;1,621
Consider method^4_5;3;5;1,245 245 m7_do_get_truck
5;3;5;1 4 pathaction!4_5;3;5;1,630
Consider method^1_2,583 583 <<<<m3_do_put_on;do_unload_truck[crate2,pallet4,distributor0,truck3];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate2,distributor0,truck3];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate2,pallet4,distributor0,truck3];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate2,distributor0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9>
2 20 pathaction!1_2,209
Consider method^3_3;2;3,616 616 m6_do_get_truck
3;2;3 107 pathaction!3_3;2;3,621
Consider method^3_1;5;1,674 674 m7_do_get_truck
1;5;1 76 pathaction!3_1;5;1,628
Consider method^2_1;8,619 619 m4_do_clear
1;8 3 pathaction!2_1;8,2
Consider method^2_0;7,490 490 m11_do_unload_truck
0;7 68 pathaction!2_0;7,646
Consider method^1_3,375 375 m2_do_put_on
3 46 pathaction!1_3,211
Consider method^2_4;2,432 432 m4_do_clear
4;2 52 pathaction!2_4;2,9
Consider method^1_5,500 500 m3_do_put_on
5 6 pathaction!1_5,213
Consider method^2_4;1,616 616 m6_do_get_truck
4;1 40 pathaction!2_4;1,621
Consider method^3_0;7;1,573 573 m4_do_clear
0;7;1 23 pathaction!3_0;7;1,7
Consider method^4_6;3;5;1,656 656 m6_do_get_truck
6;3;5;1 145 pathaction!4_6;3;5;1,620
Consider method^2_2;8,43 43 m4_do_clear
2;8 118 pathaction!2_2;8,6
Consider method^1_4,363 363 m2_do_put_on
4 147 pathaction!1_4,214
Consider method^2_0;1,348 348 m7_do_get_truck
0;1 31 pathaction!2_0;1,623
Consider method^2_6;5,663 663 m11_do_unload_truck
6;5 112 pathaction!2_6;5,647
Consider method^1_6,143 143 m3_do_put_on
6 48 pathaction!1_6,208
Consider method^2_2;1,743 743 m7_do_get_truck
2;1 36 pathaction!2_2;1,629
Consider method^4_1;5;2;1,223 223 m4_do_clear
1;5;2;1 54 pathaction!4_1;5;2;1,8
Consider method^3_5;3;5,482 482 <m10_do_load_truck;do_clear[crate7,distributor1];m4_do_clear;2;0,1,-1,-2,3,4>
5;3;5 72 pathaction!3_5;3;5,51
Consider method^1_0,11 11 <<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate4,depot1,truck3];_m3_do_put_on_2;0;-1,1,2>;do_load_truck[crate4,pallet1,depot1,truck3];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2>;do_clear[crate4,depot1];m4_do_clear;2;0,1,-1,-2,3,4,5,6>
0 123 pathaction!1_0,210
Consider method^4_1;5;2;3,32 32 m6_do_get_truck
1;5;2;3 116 pathaction!4_1;5;2;3,628
Consider method^1_1,261 261 <<m3_do_put_on;do_unload_truck[crate6,pallet1,depot1,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate6,distributor1,truck0];_m3_do_put_on_2;0;-1,1,2,3,4,5>
1 33 pathaction!1_1,212
Consider method^2_1;5,241 241 m10_do_load_truck
1;5 13 pathaction!2_1;5,76
Consider method^3_6;3;5,117 117 <m10_do_load_truck;do_clear[crate1,distributor1];m4_do_clear;2;0,1,-1,-2,3,4>
6;3;5 122 pathaction!3_6;3;5,85
Consider method^3_1;5;2,286 286 m5_do_clear
1;5;2 60 pathaction!3_1;5;2,5
Consider method^3_6;5;1,187 187 m4_do_clear
6;5;1 51 pathaction!3_6;5;1,0
Consider method^2_5;5,586 586 m11_do_unload_truck
5;5 146 pathaction!2_5;5,639
Consider method^3_5;5;1,317 317 m4_do_clear
5;5;1 141 pathaction!3_5;5;1,4
Consider method^2_5;3,367 367 _m3_do_put_on_2
5;3 129 pathaction!2_5;3,680
Consider method^2_3;2,707 707 m5_do_clear
3;2 138 pathaction!2_3;2,1
Consider method^0_,789 789 __top_1
 71 pathaction!0_,870


CHECKING primitive solution of length 89 ...
true 119 __method_precondition_m10_do_load_truck_10_precondition[crate4,depot1,pallet1,hoist1;]
true 130 __method_precondition_m7_do_get_truck_7_precondition[truck3,depot1;]
true 10 Drive[truck3,depot0,depot1;]
true 100 __method_precondition_m4_do_clear_4_precondition[crate4,depot1;]
true 133 nop[;]
true 56 Lift[hoist1,crate4,pallet1,depot1;]
true 0 Load[hoist1,crate4,truck3,depot1;]
true 43 Drive[truck3,depot1,depot0;]
true 114 __method_precondition_m11_do_unload_truck_11_precondition[truck3,hoist4,pallet0,depot0,crate4;]
true 7 __method_precondition_m4_do_clear_4_precondition[pallet0,depot0;]
true 127 nop[;]
true 9 Unload[hoist4,crate4,truck3,depot0;]
true 22 Drop[hoist4,crate4,pallet0,depot0;]
true 95 __method_precondition_m10_do_load_truck_10_precondition[crate6,distributor1,pallet7,hoist7;]
true 102 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 94 Drive[truck0,depot1,distributor1;]
true 63 __method_precondition_m5_do_clear_5_precondition[crate6,crate8,distributor1,hoist3;]
true 78 __method_precondition_m4_do_clear_4_precondition[crate8,distributor1;]
true 45 nop[;]
true 132 Lift[hoist3,crate8,crate6,distributor1;]
true 124 __method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1;]
true 27 nop[;]
true 85 Load[hoist3,crate8,truck0,distributor1;]
true 30 Lift[hoist7,crate6,pallet7,distributor1;]
true 18 Load[hoist7,crate6,truck0,distributor1;]
true 24 Drive[truck0,distributor1,depot1;]
true 92 __method_precondition_m11_do_unload_truck_11_precondition[truck0,hoist1,pallet1,depot1,crate6;]
true 82 __method_precondition_m4_do_clear_4_precondition[pallet1,depot1;]
true 144 nop[;]
true 88 Unload[hoist1,crate6,truck0,depot1;]
true 97 Drop[hoist1,crate6,pallet1,depot1;]
true 16 __method_precondition_m10_do_load_truck_10_precondition[crate2,distributor0,pallet4,hoist2;]
true 59 __method_precondition_m7_do_get_truck_7_precondition[truck3,distributor0;]
true 53 Drive[truck3,depot0,distributor0;]
true 90 __method_precondition_m4_do_clear_4_precondition[crate2,distributor0;]
true 1 nop[;]
true 61 Lift[hoist2,crate2,pallet4,distributor0;]
true 73 Load[hoist2,crate2,truck3,distributor0;]
true 29 Drive[truck3,distributor0,distributor0;]
true 137 __method_precondition_m11_do_unload_truck_11_precondition[truck3,hoist2,pallet4,distributor0,crate2;]
true 139 __method_precondition_m4_do_clear_4_precondition[pallet4,distributor0;]
true 34 nop[;]
true 39 Unload[hoist2,crate2,truck3,distributor0;]
true 89 Drop[hoist2,crate2,pallet4,distributor0;]
true 101 __method_precondition_m2_do_put_on_2_precondition[crate8,truck0;]
true 115 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot0;]
true 106 Drive[truck0,depot1,depot0;]
true 32 __method_precondition_m5_do_clear_5_precondition[pallet6,crate3,depot0,hoist6;]
true 108 __method_precondition_m4_do_clear_4_precondition[crate3,depot0;]
true 42 nop[;]
true 55 Lift[hoist6,crate3,pallet6,depot0;]
true 126 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 93 nop[;]
true 143 Load[hoist6,crate3,truck0,depot0;]
true 128 Unload[hoist4,crate8,truck0,depot0;]
true 91 Drop[hoist4,crate8,pallet6,depot0;]
true 81 __method_precondition_m2_do_put_on_2_precondition[crate3,truck0;]
true 28 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot0;]
true 86 nop[;]
true 136 __method_precondition_m4_do_clear_4_precondition[crate8,depot0;]
true 49 nop[;]
true 64 Unload[hoist6,crate3,truck0,depot0;]
true 5 Drop[hoist6,crate3,crate8,depot0;]
true 79 __method_precondition_m10_do_load_truck_10_precondition[crate7,distributor1,crate5,hoist3;]
true 14 __method_precondition_m7_do_get_truck_7_precondition[truck3,distributor1;]
true 35 Drive[truck3,distributor0,distributor1;]
true 80 __method_precondition_m4_do_clear_4_precondition[crate7,distributor1;]
true 74 nop[;]
true 87 Lift[hoist3,crate7,crate5,distributor1;]
true 75 Load[hoist3,crate7,truck3,distributor1;]
true 69 Drive[truck3,distributor1,depot0;]
true 19 __method_precondition_m11_do_unload_truck_11_precondition[truck3,hoist6,crate3,depot0,crate7;]
true 57 __method_precondition_m4_do_clear_4_precondition[crate3,depot0;]
true 135 nop[;]
true 17 Unload[hoist6,crate7,truck3,depot0;]
true 84 Drop[hoist6,crate7,crate3,depot0;]
true 37 __method_precondition_m10_do_load_truck_10_precondition[crate1,distributor1,pallet5,hoist3;]
true 103 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 62 nop[;]
true 96 __method_precondition_m4_do_clear_4_precondition[crate1,distributor1;]
true 2 nop[;]
true 21 Lift[hoist3,crate1,pallet5,distributor1;]
true 66 Load[hoist3,crate1,truck1,distributor1;]
true 105 Drive[truck1,distributor1,distributor1;]
true 44 __method_precondition_m11_do_unload_truck_11_precondition[truck1,hoist3,pallet7,distributor1,crate1;]
true 134 __method_precondition_m4_do_clear_4_precondition[pallet7,distributor1;]
true 58 nop[;]
true 99 Unload[hoist3,crate1,truck1,distributor1;]
true 50 Drop[hoist3,crate1,pallet7,distributor1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 273155968
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 162
number of actions                    = 871
number of abstract actions           = 146
number of primitive actions          = 725
number of methods                    = 790
number of primitive shop actions     = 387
number of primitive non-shop actions = 338
size of largest method               = 11
average method size                  = 4
============ sat ============
plan length                     = -1
number of variables             = 99150
number of clauses               = 463794
average size of clauses         = 2.13790605311841
number of assert                = 53
number of horn                  = 431620
K offset                        = 0
K chosen value                  = 5
state formula                   = 415302
method children clauses         = 0
number of paths                 = 247
maximum plan length             = 247
number of decomposition clauses = 48492
number of ordering clauses      = 0
number of state clauses         = 415302
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 10738
============ parsing ============
total                         = 1041
file parser                   = 576
sort expansion                = 200
closed world assumption       = 113
inherit preconditions         = 0
shop methods                  = 25
eliminate identical variables = 50
strip domain of hybridity     = 1
flatten formula               = 75
============ preprocessing ============
total                                      = 3196
compile negative preconditions             = 33
compile unit methods                       = 0
split parameter                            = 44
expand choiceless abstract tasks           = 395
compile methods with identical tasks       = 15
removing unnecessary predicates            = 324
lifted reachabiltiy analysis               = 62
grounded planning graph analysis           = 1018
grounded task decomposition graph analysis = 1030
grounding                                  = 236
create artificial top task                 = 27
============ search preparation ============
compute state invariants = 936
============ sat ============
total                                        = 4738
generate formula                             = 3505
generate path decomposition tree             = 279
normalise path decomposition tree            = 96
sog optimisation                             = 81
translate path decomposition tree to clauses = 472
generate state formula                       = 3398
generate state invariant formula             = 744
transform to DIMACS                          = 592
SAT solver                                   = 280
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 30
SAT solver for K=0004                        = 70
SAT solver for K=0005                        = 180

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="725";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="146";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="273155968";"40 sat:20:state formula"="415302";"40 sat:01:number of variables"="99150";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="247";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="790";"30 problem:07:number of primitive shop actions"="387";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="871";"30 problem:08:number of primitive non-shop actions"="338";"30 problem:02:number of predicates"="162";"40 sat:03:number of horn"="431620";"40 sat:15:K chosen value"="5";"30 problem:10:average method size"="4";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="11";"40 sat:03:average size of clauses"="2.13790605311841";"40 sat:02:number of clauses"="463794";"40 sat:50:number of state clauses"="415302";"40 sat:03:number of assert"="53";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="247";"40 sat:50:number of decomposition clauses"="48492";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="576";"01 parsing:08:flatten formula"="75";"40 sat:41:SAT solver for K=0004"="70";"40 sat:00:total"="4738";"40 sat:16:generate state formula"="3398";"40 sat:20:transform to DIMACS"="592";"40 sat:11:generate path decomposition tree"="279";"02 preprocessing:07:compile methods with identical tasks"="15";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="324";"01 parsing:03:closed world assumption"="113";"02 preprocessing:11:lifted reachabiltiy analysis"="62";"01 parsing:02:sort expansion"="200";"40 sat:12:normalise path decomposition tree"="96";"40 sat:40:SAT solver"="280";"01 parsing:00:total"="1041";"40 sat:10:generate formula"="3505";"40 sat:41:SAT solver for K=0005"="180";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="33";"00 total:00:total"="10738";"40 sat:13:sog optimisation"="81";"02 preprocessing:12:grounded planning graph analysis"="1018";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1030";"02 preprocessing:04:split parameter"="44";"01 parsing:05:shop methods"="25";"10 search preparation:02:compute state invariants"="936";"01 parsing:06:eliminate identical variables"="50";"40 sat:15:translate path decomposition tree to clauses"="472";"02 preprocessing:05:expand choiceless abstract tasks"="395";"40 sat:41:SAT solver for K=0003"="30";"40 sat:17:generate state invariant formula"="744";"02 preprocessing:00:total"="3196";"02 preprocessing:99:create artificial top task"="27";"02 preprocessing:84:grounding"="236"
#!verify __method_precondition_m10_do_load_truck_10_precondition[crate4,depot1,pallet1,hoist1];__method_precondition_m7_do_get_truck_7_precondition[truck3,depot1];Drive[truck3,depot0,depot1];__method_precondition_m4_do_clear_4_precondition[crate4,depot1];nop[];Lift[hoist1,crate4,pallet1,depot1];Load[hoist1,crate4,truck3,depot1];Drive[truck3,depot1,depot0];__method_precondition_m11_do_unload_truck_11_precondition[truck3,hoist4,pallet0,depot0,crate4];__method_precondition_m4_do_clear_4_precondition[pallet0,depot0];nop[];Unload[hoist4,crate4,truck3,depot0];Drop[hoist4,crate4,pallet0,depot0];__method_precondition_m10_do_load_truck_10_precondition[crate6,distributor1,pallet7,hoist7];__method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1];Drive[truck0,depot1,distributor1];__method_precondition_m5_do_clear_5_precondition[crate6,crate8,distributor1,hoist3];__method_precondition_m4_do_clear_4_precondition[crate8,distributor1];nop[];Lift[hoist3,crate8,crate6,distributor1];__method_precondition_m6_do_get_truck_6_precondition[truck0,distributor1];nop[];Load[hoist3,crate8,truck0,distributor1];Lift[hoist7,crate6,pallet7,distributor1];Load[hoist7,crate6,truck0,distributor1];Drive[truck0,distributor1,depot1];__method_precondition_m11_do_unload_truck_11_precondition[truck0,hoist1,pallet1,depot1,crate6];__method_precondition_m4_do_clear_4_precondition[pallet1,depot1];nop[];Unload[hoist1,crate6,truck0,depot1];Drop[hoist1,crate6,pallet1,depot1];__method_precondition_m10_do_load_truck_10_precondition[crate2,distributor0,pallet4,hoist2];__method_precondition_m7_do_get_truck_7_precondition[truck3,distributor0];Drive[truck3,depot0,distributor0];__method_precondition_m4_do_clear_4_precondition[crate2,distributor0];nop[];Lift[hoist2,crate2,pallet4,distributor0];Load[hoist2,crate2,truck3,distributor0];Drive[truck3,distributor0,distributor0];__method_precondition_m11_do_unload_truck_11_precondition[truck3,hoist2,pallet4,distributor0,crate2];__method_precondition_m4_do_clear_4_precondition[pallet4,distributor0];nop[];Unload[hoist2,crate2,truck3,distributor0];Drop[hoist2,crate2,pallet4,distributor0];__method_precondition_m2_do_put_on_2_precondition[crate8,truck0];__method_precondition_m7_do_get_truck_7_precondition[truck0,depot0];Drive[truck0,depot1,depot0];__method_precondition_m5_do_clear_5_precondition[pallet6,crate3,depot0,hoist6];__method_precondition_m4_do_clear_4_precondition[crate3,depot0];nop[];Lift[hoist6,crate3,pallet6,depot0];__method_precondition_m6_do_get_truck_6_precondition[truck0,depot0];nop[];Load[hoist6,crate3,truck0,depot0];Unload[hoist4,crate8,truck0,depot0];Drop[hoist4,crate8,pallet6,depot0];__method_precondition_m2_do_put_on_2_precondition[crate3,truck0];__method_precondition_m6_do_get_truck_6_precondition[truck0,depot0];nop[];__method_precondition_m4_do_clear_4_precondition[crate8,depot0];nop[];Unload[hoist6,crate3,truck0,depot0];Drop[hoist6,crate3,crate8,depot0];__method_precondition_m10_do_load_truck_10_precondition[crate7,distributor1,crate5,hoist3];__method_precondition_m7_do_get_truck_7_precondition[truck3,distributor1];Drive[truck3,distributor0,distributor1];__method_precondition_m4_do_clear_4_precondition[crate7,distributor1];nop[];Lift[hoist3,crate7,crate5,distributor1];Load[hoist3,crate7,truck3,distributor1];Drive[truck3,distributor1,depot0];__method_precondition_m11_do_unload_truck_11_precondition[truck3,hoist6,crate3,depot0,crate7];__method_precondition_m4_do_clear_4_precondition[crate3,depot0];nop[];Unload[hoist6,crate7,truck3,depot0];Drop[hoist6,crate7,crate3,depot0];__method_precondition_m10_do_load_truck_10_precondition[crate1,distributor1,pallet5,hoist3];__method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1];nop[];__method_precondition_m4_do_clear_4_precondition[crate1,distributor1];nop[];Lift[hoist3,crate1,pallet5,distributor1];Load[hoist3,crate1,truck1,distributor1];Drive[truck1,distributor1,distributor1];__method_precondition_m11_do_unload_truck_11_precondition[truck1,hoist3,pallet7,distributor1,crate1];__method_precondition_m4_do_clear_4_precondition[pallet7,distributor1];nop[];Unload[hoist3,crate1,truck1,distributor1];Drop[hoist3,crate1,pallet7,distributor1]
==>
0 __method_precondition_m10_do_load_truck_10_precondition crate4 depot1 pallet1 hoist1 
1 __method_precondition_m7_do_get_truck_7_precondition truck3 depot1 
2 Drive truck3 depot0 depot1 
3 __method_precondition_m4_do_clear_4_precondition crate4 depot1 
4 nop  
5 Lift hoist1 crate4 pallet1 depot1 
6 Load hoist1 crate4 truck3 depot1 
7 Drive truck3 depot1 depot0 
8 __method_precondition_m11_do_unload_truck_11_precondition truck3 hoist4 pallet0 depot0 crate4 
9 __method_precondition_m4_do_clear_4_precondition pallet0 depot0 
10 nop  
11 Unload hoist4 crate4 truck3 depot0 
12 Drop hoist4 crate4 pallet0 depot0 
13 __method_precondition_m10_do_load_truck_10_precondition crate6 distributor1 pallet7 hoist7 
14 __method_precondition_m7_do_get_truck_7_precondition truck0 distributor1 
15 Drive truck0 depot1 distributor1 
16 __method_precondition_m5_do_clear_5_precondition crate6 crate8 distributor1 hoist3 
17 __method_precondition_m4_do_clear_4_precondition crate8 distributor1 
18 nop  
19 Lift hoist3 crate8 crate6 distributor1 
20 __method_precondition_m6_do_get_truck_6_precondition truck0 distributor1 
21 nop  
22 Load hoist3 crate8 truck0 distributor1 
23 Lift hoist7 crate6 pallet7 distributor1 
24 Load hoist7 crate6 truck0 distributor1 
25 Drive truck0 distributor1 depot1 
26 __method_precondition_m11_do_unload_truck_11_precondition truck0 hoist1 pallet1 depot1 crate6 
27 __method_precondition_m4_do_clear_4_precondition pallet1 depot1 
28 nop  
29 Unload hoist1 crate6 truck0 depot1 
30 Drop hoist1 crate6 pallet1 depot1 
31 __method_precondition_m10_do_load_truck_10_precondition crate2 distributor0 pallet4 hoist2 
32 __method_precondition_m7_do_get_truck_7_precondition truck3 distributor0 
33 Drive truck3 depot0 distributor0 
34 __method_precondition_m4_do_clear_4_precondition crate2 distributor0 
35 nop  
36 Lift hoist2 crate2 pallet4 distributor0 
37 Load hoist2 crate2 truck3 distributor0 
38 Drive truck3 distributor0 distributor0 
39 __method_precondition_m11_do_unload_truck_11_precondition truck3 hoist2 pallet4 distributor0 crate2 
40 __method_precondition_m4_do_clear_4_precondition pallet4 distributor0 
41 nop  
42 Unload hoist2 crate2 truck3 distributor0 
43 Drop hoist2 crate2 pallet4 distributor0 
44 __method_precondition_m2_do_put_on_2_precondition crate8 truck0 
45 __method_precondition_m7_do_get_truck_7_precondition truck0 depot0 
46 Drive truck0 depot1 depot0 
47 __method_precondition_m5_do_clear_5_precondition pallet6 crate3 depot0 hoist6 
48 __method_precondition_m4_do_clear_4_precondition crate3 depot0 
49 nop  
50 Lift hoist6 crate3 pallet6 depot0 
51 __method_precondition_m6_do_get_truck_6_precondition truck0 depot0 
52 nop  
53 Load hoist6 crate3 truck0 depot0 
54 Unload hoist4 crate8 truck0 depot0 
55 Drop hoist4 crate8 pallet6 depot0 
56 __method_precondition_m2_do_put_on_2_precondition crate3 truck0 
57 __method_precondition_m6_do_get_truck_6_precondition truck0 depot0 
58 nop  
59 __method_precondition_m4_do_clear_4_precondition crate8 depot0 
60 nop  
61 Unload hoist6 crate3 truck0 depot0 
62 Drop hoist6 crate3 crate8 depot0 
63 __method_precondition_m10_do_load_truck_10_precondition crate7 distributor1 crate5 hoist3 
64 __method_precondition_m7_do_get_truck_7_precondition truck3 distributor1 
65 Drive truck3 distributor0 distributor1 
66 __method_precondition_m4_do_clear_4_precondition crate7 distributor1 
67 nop  
68 Lift hoist3 crate7 crate5 distributor1 
69 Load hoist3 crate7 truck3 distributor1 
70 Drive truck3 distributor1 depot0 
71 __method_precondition_m11_do_unload_truck_11_precondition truck3 hoist6 crate3 depot0 crate7 
72 __method_precondition_m4_do_clear_4_precondition crate3 depot0 
73 nop  
74 Unload hoist6 crate7 truck3 depot0 
75 Drop hoist6 crate7 crate3 depot0 
76 __method_precondition_m10_do_load_truck_10_precondition crate1 distributor1 pallet5 hoist3 
77 __method_precondition_m6_do_get_truck_6_precondition truck1 distributor1 
78 nop  
79 __method_precondition_m4_do_clear_4_precondition crate1 distributor1 
80 nop  
81 Lift hoist3 crate1 pallet5 distributor1 
82 Load hoist3 crate1 truck1 distributor1 
83 Drive truck1 distributor1 distributor1 
84 __method_precondition_m11_do_unload_truck_11_precondition truck1 hoist3 pallet7 distributor1 crate1 
85 __method_precondition_m4_do_clear_4_precondition pallet7 distributor1 
86 nop  
87 Unload hoist3 crate1 truck1 distributor1 
88 Drop hoist3 crate1 pallet7 distributor1 
root 117
89 do_unload_truck crate1 pallet7 distributor1 truck1  -> m11_do_unload_truck 84 114 87 88
90 do_clear pallet0 depot0  -> m4_do_clear 9 10
91 do_clear crate6 distributor1  -> m5_do_clear 16 106 19 103 22
92 do_put_on crate7 crate3  -> m3_do_put_on 120 70 98
93 do_get_truck truck0 depot0  -> m6_do_get_truck 57 58
94 do_get_truck truck3 distributor1  -> m7_do_get_truck 64 65
95 do_get_truck truck1 distributor1  -> m6_do_get_truck 77 78
96 do_clear pallet1 depot1  -> m4_do_clear 27 28
97 do_put_on crate1 pallet7  -> m3_do_put_on 123 83 89
98 do_unload_truck crate7 crate3 depot0 truck3  -> m11_do_unload_truck 71 122 74 75
99 do_put_on crate3 crate8  -> m2_do_put_on 56 93 104 61 62
100 do_put_on crate4 pallet0  -> <<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate4,depot1,truck3];_m3_do_put_on_2;0;-1,1,2>;do_load_truck[crate4,pallet1,depot1,truck3];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2>;do_clear[crate4,depot1];m4_do_clear;2;0,1,-1,-2,3,4,5,6> 0 109 3 4 5 6 7 116
101 do_get_truck truck0 depot0  -> m7_do_get_truck 45 46
102 do_load_truck crate1 pallet5 distributor1 truck1  -> <m10_do_load_truck;do_clear[crate1,distributor1];m4_do_clear;2;0,1,-1,-2,3,4> 76 95 79 80 81 82
103 do_get_truck truck0 distributor1  -> m6_do_get_truck 20 21
104 do_clear crate8 depot0  -> m4_do_clear 59 60
105 do_get_truck truck3 distributor0  -> m7_do_get_truck 32 33
106 do_clear crate8 distributor1  -> m4_do_clear 17 18
107 do_clear crate3 depot0  -> m4_do_clear 48 49
108 do_clear pallet4 distributor0  -> m4_do_clear 40 41
109 do_get_truck truck3 depot1  -> m7_do_get_truck 1 2
110 do_put_on crate2 pallet4  -> <<<<m3_do_put_on;do_unload_truck[crate2,pallet4,distributor0,truck3];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate2,distributor0,truck3];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate2,pallet4,distributor0,truck3];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate2,distributor0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9> 31 105 34 35 36 37 38 39 108 42 43
111 do_get_truck truck0 distributor1  -> m7_do_get_truck 14 15
112 do_load_truck crate6 pallet7 distributor1 truck0  -> m10_do_load_truck 13 111 91 23 24
113 do_put_on crate8 pallet6  -> m2_do_put_on 44 101 115 54 55
114 do_clear pallet7 distributor1  -> m4_do_clear 85 86
115 do_clear pallet6 depot0  -> m5_do_clear 47 107 50 119 53
116 do_unload_truck crate4 pallet0 depot0 truck3  -> m11_do_unload_truck 8 90 11 12
117 __choicelessATCompilation__top_1  -> __top_1 100 121 110 113 99 92 97
118 do_load_truck crate7 crate5 distributor1 truck3  -> <m10_do_load_truck;do_clear[crate7,distributor1];m4_do_clear;2;0,1,-1,-2,3,4> 63 94 66 67 68 69
119 do_get_truck truck0 depot0  -> m6_do_get_truck 51 52
120 do_load_truck_m3_do_put_on_sip_2 crate7 distributor1 truck3  -> _m3_do_put_on_2 118
121 do_put_on crate6 pallet1  -> <<m3_do_put_on;do_unload_truck[crate6,pallet1,depot1,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate6,distributor1,truck0];_m3_do_put_on_2;0;-1,1,2,3,4,5> 112 25 26 96 29 30
122 do_clear crate3 depot0  -> m4_do_clear 72 73
123 do_load_truck_m3_do_put_on_sip_2 crate1 distributor1 truck1  -> _m3_do_put_on_2 102

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 11.756 MEMPEAK_KBS 446092.288
