PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p14.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p14.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p14.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Grounded planning graph ... done in 322ms.
	Number of Grounded Actions 510
	Number of Grounded Literals 195
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 34
Grounding ... done.
	number of abstract tasks = 116
	number of tasks = 390
	number of decomposition methods = 283
	number of predicates = 213
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 274
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 116
	number of tasks = 390
	number of decomposition methods = 283
	number of predicates = 136
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 274
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 50ms.
	Number of Grounded Actions 269
	Number of Grounded Literals 135
	number of abstract tasks = 116
	number of tasks = 385
	number of decomposition methods = 278
	number of predicates = 136
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 116
	number of tasks = 385
	number of decomposition methods = 278
	number of predicates = 136
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 71
	number of tasks = 340
	number of decomposition methods = 233
	number of predicates = 136
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 71
	number of tasks = 340
	number of decomposition methods = 233
	number of predicates = 136
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 71
	number of tasks = 340
	number of decomposition methods = 233
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 30ms.
	Number of Grounded Actions 269
	Number of Grounded Literals 135
	number of abstract tasks = 71
	number of tasks = 340
	number of decomposition methods = 233
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 71
	number of tasks = 340
	number of decomposition methods = 233
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 7
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 45
	number of tasks = 314
	number of decomposition methods = 207
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 45
	number of tasks = 314
	number of decomposition methods = 207
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 45
	number of tasks = 314
	number of decomposition methods = 207
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 22ms.
	Number of Grounded Actions 269
	Number of Grounded Literals 135
	number of abstract tasks = 45
	number of tasks = 314
	number of decomposition methods = 207
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 45
	number of tasks = 314
	number of decomposition methods = 207
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 38
	number of tasks = 307
	number of decomposition methods = 200
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 38
	number of tasks = 307
	number of decomposition methods = 200
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 38
	number of tasks = 307
	number of decomposition methods = 200
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 17ms.
	Number of Grounded Actions 269
	Number of Grounded Literals 135
	number of abstract tasks = 38
	number of tasks = 307
	number of decomposition methods = 200
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 38
	number of tasks = 307
	number of decomposition methods = 200
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 38
	number of tasks = 307
	number of decomposition methods = 200
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 38
	number of tasks = 307
	number of decomposition methods = 200
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 38
	number of tasks = 307
	number of decomposition methods = 200
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 38
	number of tasks = 307
	number of decomposition methods = 200
	number of predicates = 135
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 141
	number of epsilon methods = 0
	number of primitive tasks = 269
	number of constants = 0
Tasks 269 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772414ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 58 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 14 leafs
SHOP LEAFS 14
Assignment implications
Still waiting ... running for 102 will abort at 9223372036854772356
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 27135
Size 27135 at 0/269
Size 9431
Size 9431 at 0/269
Size 3613
Size 3613 at 0/269
Size 1707
Size 1707 at 0/269
Size 1207
Size 1207 at 0/269
Size 1177
Size 1177 at 0/269
Size 1150
Size 1150 at 0/269
Size 1149
Size 1149 at 0/269
Size 1149
Invariant time: 0.204
Number of invariants: 1149
Invariant Clauses 17235
NUMBER OF CLAUSES 21275
NUMBER OF STATE CLAUSES 21157
NUMBER OF DECOMPOSITION CLAUSES 118
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.45% 0.55% 0.0% 
NUMBER OF PATHS 14
Starting cryptominisat5.5
Setting starttime of solver to 1604479161600
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 162 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 108 leafs
SHOP LEAFS 58
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771420
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 125241
NUMBER OF CLAUSES 163565
NUMBER OF STATE CLAUSES 156702
NUMBER OF DECOMPOSITION CLAUSES 6863
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.8% 4.2% 0.0% 
NUMBER OF PATHS 108
Starting cryptominisat5.5
Setting starttime of solver to 1604479162567
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 210 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 192 leafs
SHOP LEAFS 96
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 101 will abort at 9223372036854770544
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 221757
NUMBER OF CLAUSES 292080
NUMBER OF STATE CLAUSES 278021
NUMBER OF DECOMPOSITION CLAUSES 14059
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.19% 4.8100000000000005% 0.0% 
NUMBER OF PATHS 192
Starting cryptominisat5.5
Setting starttime of solver to 1604479163469
Command exited with non-zero status 10
0.10 0.00

Time command gave the following runtime for the solver: 100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^0_,199 199 __top_1
 91 pathaction!0_,306
Consider method^2_6;2,143 143 m6_do_get_truck
6;2 38 pathaction!2_6;2,305
Consider method^2_1;7,161 161 m4_do_clear
1;7 58 pathaction!2_1;7,19
Consider method^3_0;2;1,96 96 m4_do_clear
0;2;1 32 pathaction!3_0;2;1,13
Consider method^3_6;8;4,163 163 m6_do_get_truck
6;8;4 108 pathaction!3_6;8;4,297
Consider method^2_2;1,142 142 m7_do_get_truck
2;1 36 pathaction!2_2;1,299
Consider method^2_4;1,13 13 m7_do_get_truck
4;1 117 pathaction!2_4;1,305
Consider method^1_3,119 119 <<<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate5,depot0,truck0];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate5,pallet5,distributor2,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate5,crate1,depot0,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate5,depot0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9>
3 126 pathaction!1_3,34
Consider method^2_6;8,138 138 <m5_do_clear;do_clear[crate0,distributor1];m4_do_clear;1;0,-1,-2,2,3,4>
6;8 10 pathaction!2_6;8,10
Consider method^1_2,6 6 <<<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate9,distributor0,truck0];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate9,crate7,depot1,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate9,crate2,distributor0,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate9,distributor0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9>
2 114 pathaction!1_2,32
Consider method^2_1;6,174 174 m6_do_get_truck
1;6 67 pathaction!2_1;6,301
Consider method^2_3;1,80 80 m7_do_get_truck
3;1 25 pathaction!2_3;1,298
Consider method^2_0;7,173 173 <m5_do_clear;do_clear[crate8,depot1];m4_do_clear;1;0,-1,-2,2,3,4>
0;7 133 pathaction!2_0;7,9
Consider method^2_0;1,82 82 m7_do_get_truck
0;1 81 pathaction!2_0;1,297
Consider method^2_0;2,170 170 m5_do_clear
0;2 128 pathaction!2_0;2,14
Consider method^1_5,155 155 m0_do_put_on
5 68 pathaction!1_5,30
Consider method^2_2;8,100 100 m4_do_clear
2;8 11 pathaction!2_2;8,12
Consider method^2_4;8,140 140 m4_do_clear
4;8 111 pathaction!2_4;8,18
Consider method^3_0;2;3,169 169 m7_do_get_truck
0;2;3 90 pathaction!3_0;2;3,302
Consider method^2_6;3,131 131 m4_do_clear
6;3 82 pathaction!2_6;3,16
Consider method^1_1,194 194 m2_do_put_on
1 118 pathaction!1_1,36
Consider method^2_3;8,17 17 m4_do_clear
3;8 96 pathaction!2_3;8,15
Consider method^1_4,137 137 <<<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate4,depot0,truck1];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate4,pallet0,depot0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate4,pallet0,depot0,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate4,depot0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9>
4 24 pathaction!1_4,33
Consider method^1_0,94 94 <<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate6,distributor1,truck1];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate6,pallet1,depot1,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate6,pallet4,distributor1,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>
0 15 pathaction!1_0,35
Consider method^3_0;7;4,180 180 m7_do_get_truck
0;7;4 17 pathaction!3_0;7;4,301
Consider method^1_6,115 115 <<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate1,depot0,truck1];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate1,pallet8,distributor1,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate1,pallet9,depot0,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>
6 13 pathaction!1_6,31


CHECKING primitive solution of length 89 ...
true 69 __method_precondition_m10_do_load_truck_10_precondition[crate6,distributor1,pallet4,hoist4;]
true 98 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 26 Drive[truck1,depot2,distributor1;]
true 23 __method_precondition_m5_do_clear_5_precondition[crate6,crate7,distributor1,hoist4;]
true 123 __method_precondition_m4_do_clear_4_precondition[crate7,distributor1;]
true 43 nop[;]
true 125 Lift[hoist4,crate7,crate6,distributor1;]
true 75 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 14 Drive[truck0,depot1,distributor1;]
true 52 Load[hoist4,crate7,truck0,distributor1;]
true 132 Lift[hoist4,crate6,pallet4,distributor1;]
true 28 Load[hoist4,crate6,truck1,distributor1;]
true 107 Drive[truck1,distributor1,depot1;]
true 31 __method_precondition_m11_do_unload_truck_11_precondition[truck1,hoist1,pallet1,crate6,depot1;]
true 42 __method_precondition_m5_do_clear_5_precondition[pallet1,crate8,depot1,hoist1;]
true 63 __method_precondition_m4_do_clear_4_precondition[crate8,depot1;]
true 112 nop[;]
true 8 Lift[hoist1,crate8,pallet1,depot1;]
true 74 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot1;]
true 76 Drive[truck0,distributor1,depot1;]
true 61 Load[hoist1,crate8,truck0,depot1;]
true 113 Unload[hoist1,crate6,truck1,depot1;]
true 56 Drop[hoist1,crate6,pallet1,depot1;]
true 48 __method_precondition_m2_do_put_on_2_precondition[crate7,truck0;]
true 102 __method_precondition_m6_do_get_truck_6_precondition[truck0,depot1;]
true 79 nop[;]
true 0 __method_precondition_m4_do_clear_4_precondition[crate6,depot1;]
true 70 nop[;]
true 121 Unload[hoist1,crate7,truck0,depot1;]
true 22 Drop[hoist1,crate7,crate6,depot1;]
true 129 __method_precondition_m10_do_load_truck_10_precondition[crate9,distributor0,crate2,hoist3;]
true 1 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor0;]
true 59 Drive[truck0,depot1,distributor0;]
true 66 __method_precondition_m4_do_clear_4_precondition[crate9,distributor0;]
true 88 nop[;]
true 57 Lift[hoist3,crate9,crate2,distributor0;]
true 93 Load[hoist3,crate9,truck0,distributor0;]
true 37 Drive[truck0,distributor0,depot1;]
true 86 __method_precondition_m11_do_unload_truck_11_precondition[truck0,hoist1,crate7,crate9,depot1;]
true 47 __method_precondition_m4_do_clear_4_precondition[crate7,depot1;]
true 39 nop[;]
true 20 Unload[hoist1,crate9,truck0,depot1;]
true 4 Drop[hoist1,crate9,crate7,depot1;]
true 16 __method_precondition_m10_do_load_truck_10_precondition[crate5,depot0,crate1,hoist0;]
true 5 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot0;]
true 106 Drive[truck0,depot1,depot0;]
true 60 __method_precondition_m4_do_clear_4_precondition[crate5,depot0;]
true 105 nop[;]
true 100 Lift[hoist0,crate5,crate1,depot0;]
true 101 Load[hoist0,crate5,truck0,depot0;]
true 3 Drive[truck0,depot0,distributor2;]
true 119 __method_precondition_m11_do_unload_truck_11_precondition[truck0,hoist5,pallet5,crate5,distributor2;]
true 120 __method_precondition_m4_do_clear_4_precondition[pallet5,distributor2;]
true 134 nop[;]
true 77 Unload[hoist5,crate5,truck0,distributor2;]
true 80 Drop[hoist5,crate5,pallet5,distributor2;]
true 92 __method_precondition_m10_do_load_truck_10_precondition[crate4,depot0,pallet0,hoist0;]
true 99 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot0;]
true 50 Drive[truck1,depot1,depot0;]
true 78 __method_precondition_m4_do_clear_4_precondition[crate4,depot0;]
true 104 nop[;]
true 6 Lift[hoist0,crate4,pallet0,depot0;]
true 33 Load[hoist0,crate4,truck1,depot0;]
true 62 Drive[truck1,depot0,depot0;]
true 131 __method_precondition_m11_do_unload_truck_11_precondition[truck1,hoist0,pallet0,crate4,depot0;]
true 30 __method_precondition_m4_do_clear_4_precondition[pallet0,depot0;]
true 7 nop[;]
true 12 Unload[hoist0,crate4,truck1,depot0;]
true 45 Drop[hoist0,crate4,pallet0,depot0;]
true 87 __method_precondition_m0_do_put_on_0_precondition[crate2,pallet3;]
true 21 nop[;]
true 130 __method_precondition_m10_do_load_truck_10_precondition[crate1,depot0,pallet9,hoist0;]
true 83 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 55 nop[;]
true 71 __method_precondition_m4_do_clear_4_precondition[crate1,depot0;]
true 103 nop[;]
true 94 Lift[hoist0,crate1,pallet9,depot0;]
true 122 Load[hoist0,crate1,truck1,depot0;]
true 89 Drive[truck1,depot0,distributor1;]
true 44 __method_precondition_m11_do_unload_truck_11_precondition[truck1,hoist4,pallet8,crate1,distributor1;]
true 73 __method_precondition_m5_do_clear_5_precondition[pallet8,crate0,distributor1,hoist4;]
true 97 __method_precondition_m4_do_clear_4_precondition[crate0,distributor1;]
true 35 nop[;]
true 9 Lift[hoist4,crate0,pallet8,distributor1;]
true 84 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1;]
true 64 nop[;]
true 110 Load[hoist4,crate0,truck1,distributor1;]
true 51 Unload[hoist4,crate1,truck1,distributor1;]
true 49 Drop[hoist4,crate1,pallet8,distributor1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 192562640
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 135
number of actions                    = 307
number of abstract actions           = 38
number of primitive actions          = 269
number of methods                    = 200
number of primitive shop actions     = 141
number of primitive non-shop actions = 128
size of largest method               = 11
average method size                  = 4
============ sat ============
plan length                     = -1
number of variables             = 59534
number of clauses               = 292080
average size of clauses         = 2.0364146809093397
number of assert                = 51
number of horn                  = 264571
K offset                        = 0
K chosen value                  = 4
state formula                   = 278021
method children clauses         = 0
number of paths                 = 192
maximum plan length             = 192
number of decomposition clauses = 14059
number of ordering clauses      = 0
number of state clauses         = 278021
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 6769
============ parsing ============
total                         = 1038
file parser                   = 570
sort expansion                = 198
closed world assumption       = 114
inherit preconditions         = 0
shop methods                  = 12
eliminate identical variables = 55
strip domain of hybridity     = 18
flatten formula               = 70
============ preprocessing ============
total                                      = 2220
compile negative preconditions             = 35
compile unit methods                       = 0
split parameter                            = 44
expand choiceless abstract tasks           = 343
compile methods with identical tasks       = 17
removing unnecessary predicates            = 251
lifted reachabiltiy analysis               = 70
grounded planning graph analysis           = 685
grounded task decomposition graph analysis = 609
grounding                                  = 147
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 307
============ sat ============
total                                        = 2382
generate formula                             = 1674
generate path decomposition tree             = 135
normalise path decomposition tree            = 94
sog optimisation                             = 63
translate path decomposition tree to clauses = 237
generate state formula                       = 1621
generate state invariant formula             = 362
transform to DIMACS                          = 209
SAT solver                                   = 140
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 40
SAT solver for K=0004                        = 100

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="269";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="38";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="192562640";"40 sat:20:state formula"="278021";"40 sat:01:number of variables"="59534";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="192";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="200";"30 problem:07:number of primitive shop actions"="141";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="307";"30 problem:08:number of primitive non-shop actions"="128";"30 problem:02:number of predicates"="135";"40 sat:03:number of horn"="264571";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="4";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="11";"40 sat:03:average size of clauses"="2.0364146809093397";"40 sat:02:number of clauses"="292080";"40 sat:50:number of state clauses"="278021";"40 sat:03:number of assert"="51";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="192";"40 sat:50:number of decomposition clauses"="14059";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="570";"01 parsing:08:flatten formula"="70";"40 sat:41:SAT solver for K=0004"="100";"40 sat:00:total"="2382";"40 sat:16:generate state formula"="1621";"40 sat:20:transform to DIMACS"="209";"40 sat:11:generate path decomposition tree"="135";"02 preprocessing:07:compile methods with identical tasks"="17";"01 parsing:07:strip domain of hybridity"="18";"02 preprocessing:08:removing unnecessary predicates"="251";"01 parsing:03:closed world assumption"="114";"02 preprocessing:11:lifted reachabiltiy analysis"="70";"01 parsing:02:sort expansion"="198";"40 sat:12:normalise path decomposition tree"="94";"40 sat:40:SAT solver"="140";"01 parsing:00:total"="1038";"40 sat:10:generate formula"="1674";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="35";"00 total:00:total"="6769";"40 sat:13:sog optimisation"="63";"02 preprocessing:12:grounded planning graph analysis"="685";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="609";"02 preprocessing:04:split parameter"="44";"01 parsing:05:shop methods"="12";"10 search preparation:02:compute state invariants"="307";"01 parsing:06:eliminate identical variables"="55";"40 sat:15:translate path decomposition tree to clauses"="237";"02 preprocessing:05:expand choiceless abstract tasks"="343";"40 sat:41:SAT solver for K=0003"="40";"40 sat:17:generate state invariant formula"="362";"02 preprocessing:00:total"="2220";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="147"
#!verify __method_precondition_m10_do_load_truck_10_precondition[crate6,distributor1,pallet4,hoist4];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1];Drive[truck1,depot2,distributor1];__method_precondition_m5_do_clear_5_precondition[crate6,crate7,distributor1,hoist4];__method_precondition_m4_do_clear_4_precondition[crate7,distributor1];nop[];Lift[hoist4,crate7,crate6,distributor1];__method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1];Drive[truck0,depot1,distributor1];Load[hoist4,crate7,truck0,distributor1];Lift[hoist4,crate6,pallet4,distributor1];Load[hoist4,crate6,truck1,distributor1];Drive[truck1,distributor1,depot1];__method_precondition_m11_do_unload_truck_11_precondition[truck1,hoist1,pallet1,crate6,depot1];__method_precondition_m5_do_clear_5_precondition[pallet1,crate8,depot1,hoist1];__method_precondition_m4_do_clear_4_precondition[crate8,depot1];nop[];Lift[hoist1,crate8,pallet1,depot1];__method_precondition_m7_do_get_truck_7_precondition[truck0,depot1];Drive[truck0,distributor1,depot1];Load[hoist1,crate8,truck0,depot1];Unload[hoist1,crate6,truck1,depot1];Drop[hoist1,crate6,pallet1,depot1];__method_precondition_m2_do_put_on_2_precondition[crate7,truck0];__method_precondition_m6_do_get_truck_6_precondition[truck0,depot1];nop[];__method_precondition_m4_do_clear_4_precondition[crate6,depot1];nop[];Unload[hoist1,crate7,truck0,depot1];Drop[hoist1,crate7,crate6,depot1];__method_precondition_m10_do_load_truck_10_precondition[crate9,distributor0,crate2,hoist3];__method_precondition_m7_do_get_truck_7_precondition[truck0,distributor0];Drive[truck0,depot1,distributor0];__method_precondition_m4_do_clear_4_precondition[crate9,distributor0];nop[];Lift[hoist3,crate9,crate2,distributor0];Load[hoist3,crate9,truck0,distributor0];Drive[truck0,distributor0,depot1];__method_precondition_m11_do_unload_truck_11_precondition[truck0,hoist1,crate7,crate9,depot1];__method_precondition_m4_do_clear_4_precondition[crate7,depot1];nop[];Unload[hoist1,crate9,truck0,depot1];Drop[hoist1,crate9,crate7,depot1];__method_precondition_m10_do_load_truck_10_precondition[crate5,depot0,crate1,hoist0];__method_precondition_m7_do_get_truck_7_precondition[truck0,depot0];Drive[truck0,depot1,depot0];__method_precondition_m4_do_clear_4_precondition[crate5,depot0];nop[];Lift[hoist0,crate5,crate1,depot0];Load[hoist0,crate5,truck0,depot0];Drive[truck0,depot0,distributor2];__method_precondition_m11_do_unload_truck_11_precondition[truck0,hoist5,pallet5,crate5,distributor2];__method_precondition_m4_do_clear_4_precondition[pallet5,distributor2];nop[];Unload[hoist5,crate5,truck0,distributor2];Drop[hoist5,crate5,pallet5,distributor2];__method_precondition_m10_do_load_truck_10_precondition[crate4,depot0,pallet0,hoist0];__method_precondition_m7_do_get_truck_7_precondition[truck1,depot0];Drive[truck1,depot1,depot0];__method_precondition_m4_do_clear_4_precondition[crate4,depot0];nop[];Lift[hoist0,crate4,pallet0,depot0];Load[hoist0,crate4,truck1,depot0];Drive[truck1,depot0,depot0];__method_precondition_m11_do_unload_truck_11_precondition[truck1,hoist0,pallet0,crate4,depot0];__method_precondition_m4_do_clear_4_precondition[pallet0,depot0];nop[];Unload[hoist0,crate4,truck1,depot0];Drop[hoist0,crate4,pallet0,depot0];__method_precondition_m0_do_put_on_0_precondition[crate2,pallet3];nop[];__method_precondition_m10_do_load_truck_10_precondition[crate1,depot0,pallet9,hoist0];__method_precondition_m6_do_get_truck_6_precondition[truck1,depot0];nop[];__method_precondition_m4_do_clear_4_precondition[crate1,depot0];nop[];Lift[hoist0,crate1,pallet9,depot0];Load[hoist0,crate1,truck1,depot0];Drive[truck1,depot0,distributor1];__method_precondition_m11_do_unload_truck_11_precondition[truck1,hoist4,pallet8,crate1,distributor1];__method_precondition_m5_do_clear_5_precondition[pallet8,crate0,distributor1,hoist4];__method_precondition_m4_do_clear_4_precondition[crate0,distributor1];nop[];Lift[hoist4,crate0,pallet8,distributor1];__method_precondition_m6_do_get_truck_6_precondition[truck1,distributor1];nop[];Load[hoist4,crate0,truck1,distributor1];Unload[hoist4,crate1,truck1,distributor1];Drop[hoist4,crate1,pallet8,distributor1]
==>
0 __method_precondition_m10_do_load_truck_10_precondition crate6 distributor1 pallet4 hoist4 
1 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor1 
2 Drive truck1 depot2 distributor1 
3 __method_precondition_m5_do_clear_5_precondition crate6 crate7 distributor1 hoist4 
4 __method_precondition_m4_do_clear_4_precondition crate7 distributor1 
5 nop  
6 Lift hoist4 crate7 crate6 distributor1 
7 __method_precondition_m7_do_get_truck_7_precondition truck0 distributor1 
8 Drive truck0 depot1 distributor1 
9 Load hoist4 crate7 truck0 distributor1 
10 Lift hoist4 crate6 pallet4 distributor1 
11 Load hoist4 crate6 truck1 distributor1 
12 Drive truck1 distributor1 depot1 
13 __method_precondition_m11_do_unload_truck_11_precondition truck1 hoist1 pallet1 crate6 depot1 
14 __method_precondition_m5_do_clear_5_precondition pallet1 crate8 depot1 hoist1 
15 __method_precondition_m4_do_clear_4_precondition crate8 depot1 
16 nop  
17 Lift hoist1 crate8 pallet1 depot1 
18 __method_precondition_m7_do_get_truck_7_precondition truck0 depot1 
19 Drive truck0 distributor1 depot1 
20 Load hoist1 crate8 truck0 depot1 
21 Unload hoist1 crate6 truck1 depot1 
22 Drop hoist1 crate6 pallet1 depot1 
23 __method_precondition_m2_do_put_on_2_precondition crate7 truck0 
24 __method_precondition_m6_do_get_truck_6_precondition truck0 depot1 
25 nop  
26 __method_precondition_m4_do_clear_4_precondition crate6 depot1 
27 nop  
28 Unload hoist1 crate7 truck0 depot1 
29 Drop hoist1 crate7 crate6 depot1 
30 __method_precondition_m10_do_load_truck_10_precondition crate9 distributor0 crate2 hoist3 
31 __method_precondition_m7_do_get_truck_7_precondition truck0 distributor0 
32 Drive truck0 depot1 distributor0 
33 __method_precondition_m4_do_clear_4_precondition crate9 distributor0 
34 nop  
35 Lift hoist3 crate9 crate2 distributor0 
36 Load hoist3 crate9 truck0 distributor0 
37 Drive truck0 distributor0 depot1 
38 __method_precondition_m11_do_unload_truck_11_precondition truck0 hoist1 crate7 crate9 depot1 
39 __method_precondition_m4_do_clear_4_precondition crate7 depot1 
40 nop  
41 Unload hoist1 crate9 truck0 depot1 
42 Drop hoist1 crate9 crate7 depot1 
43 __method_precondition_m10_do_load_truck_10_precondition crate5 depot0 crate1 hoist0 
44 __method_precondition_m7_do_get_truck_7_precondition truck0 depot0 
45 Drive truck0 depot1 depot0 
46 __method_precondition_m4_do_clear_4_precondition crate5 depot0 
47 nop  
48 Lift hoist0 crate5 crate1 depot0 
49 Load hoist0 crate5 truck0 depot0 
50 Drive truck0 depot0 distributor2 
51 __method_precondition_m11_do_unload_truck_11_precondition truck0 hoist5 pallet5 crate5 distributor2 
52 __method_precondition_m4_do_clear_4_precondition pallet5 distributor2 
53 nop  
54 Unload hoist5 crate5 truck0 distributor2 
55 Drop hoist5 crate5 pallet5 distributor2 
56 __method_precondition_m10_do_load_truck_10_precondition crate4 depot0 pallet0 hoist0 
57 __method_precondition_m7_do_get_truck_7_precondition truck1 depot0 
58 Drive truck1 depot1 depot0 
59 __method_precondition_m4_do_clear_4_precondition crate4 depot0 
60 nop  
61 Lift hoist0 crate4 pallet0 depot0 
62 Load hoist0 crate4 truck1 depot0 
63 Drive truck1 depot0 depot0 
64 __method_precondition_m11_do_unload_truck_11_precondition truck1 hoist0 pallet0 crate4 depot0 
65 __method_precondition_m4_do_clear_4_precondition pallet0 depot0 
66 nop  
67 Unload hoist0 crate4 truck1 depot0 
68 Drop hoist0 crate4 pallet0 depot0 
69 __method_precondition_m0_do_put_on_0_precondition crate2 pallet3 
70 nop  
71 __method_precondition_m10_do_load_truck_10_precondition crate1 depot0 pallet9 hoist0 
72 __method_precondition_m6_do_get_truck_6_precondition truck1 depot0 
73 nop  
74 __method_precondition_m4_do_clear_4_precondition crate1 depot0 
75 nop  
76 Lift hoist0 crate1 pallet9 depot0 
77 Load hoist0 crate1 truck1 depot0 
78 Drive truck1 depot0 distributor1 
79 __method_precondition_m11_do_unload_truck_11_precondition truck1 hoist4 pallet8 crate1 distributor1 
80 __method_precondition_m5_do_clear_5_precondition pallet8 crate0 distributor1 hoist4 
81 __method_precondition_m4_do_clear_4_precondition crate0 distributor1 
82 nop  
83 Lift hoist4 crate0 pallet8 distributor1 
84 __method_precondition_m6_do_get_truck_6_precondition truck1 distributor1 
85 nop  
86 Load hoist4 crate0 truck1 distributor1 
87 Unload hoist4 crate1 truck1 distributor1 
88 Drop hoist4 crate1 pallet8 distributor1 
root 100
89 do_get_truck truck0 distributor1  -> m7_do_get_truck 7 8
90 do_put_on crate1 pallet8  -> <<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate1,depot0,truck1];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate1,pallet8,distributor1,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate1,pallet9,depot0,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5> 71 110 92 76 77 78 79 112 87 88
91 do_clear pallet5 distributor2  -> m4_do_clear 52 53
92 do_clear crate1 depot0  -> m4_do_clear 74 75
93 do_get_truck truck0 depot1  -> m7_do_get_truck 18 19
94 do_get_truck truck1 distributor1  -> m7_do_get_truck 1 2
95 do_get_truck truck0 depot1  -> m6_do_get_truck 24 25
96 do_clear crate6 distributor1  -> m5_do_clear 3 108 6 89 9
97 do_get_truck truck1 depot0  -> m7_do_get_truck 57 58
98 do_clear crate6 depot1  -> m4_do_clear 26 27
99 do_get_truck truck1 distributor1  -> m6_do_get_truck 84 85
100 __choicelessATCompilation__top_1  -> __top_1 109 111 114 103 107 105 90
101 do_get_truck truck0 depot0  -> m7_do_get_truck 44 45
102 do_get_truck truck0 distributor0  -> m7_do_get_truck 31 32
103 do_put_on crate5 pallet5  -> <<<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate5,depot0,truck0];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate5,pallet5,distributor2,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate5,crate1,depot0,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate5,depot0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9> 43 101 46 47 48 49 50 51 91 54 55
104 do_clear pallet1 depot1  -> <m5_do_clear;do_clear[crate8,depot1];m4_do_clear;1;0,-1,-2,2,3,4> 14 15 16 17 93 20
105 do_put_on crate2 pallet3  -> m0_do_put_on 69 70
106 do_clear crate7 depot1  -> m4_do_clear 39 40
107 do_put_on crate4 pallet0  -> <<<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate4,depot0,truck1];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate4,pallet0,depot0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate4,pallet0,depot0,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate4,depot0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9> 56 97 59 60 61 62 63 64 113 67 68
108 do_clear crate7 distributor1  -> m4_do_clear 4 5
109 do_put_on crate6 pallet1  -> <<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate6,distributor1,truck1];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate6,pallet1,depot1,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate6,pallet4,distributor1,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5> 0 94 96 10 11 12 13 104 21 22
110 do_get_truck truck1 depot0  -> m6_do_get_truck 72 73
111 do_put_on crate7 crate6  -> m2_do_put_on 23 95 98 28 29
112 do_clear pallet8 distributor1  -> <m5_do_clear;do_clear[crate0,distributor1];m4_do_clear;1;0,-1,-2,2,3,4> 80 81 82 83 99 86
113 do_clear pallet0 depot0  -> m4_do_clear 65 66
114 do_put_on crate9 crate7  -> <<<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate9,distributor0,truck0];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate9,crate7,depot1,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate9,crate2,distributor0,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate9,distributor0];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9> 30 102 33 34 35 36 37 38 106 41 42

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 7.780 MEMPEAK_KBS 546070.528
