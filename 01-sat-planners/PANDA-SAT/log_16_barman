PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p16.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p16.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p16.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounded planning graph ... done in 599ms.
	Number of Grounded Actions 2828
	Number of Grounded Literals 419
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 1360
	number of tasks = 4166
	number of decomposition methods = 5281
	number of predicates = 419
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1360
	number of tasks = 4166
	number of decomposition methods = 5281
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 441ms.
	Number of Grounded Actions 2806
	Number of Grounded Literals 389
	number of abstract tasks = 1360
	number of tasks = 4166
	number of decomposition methods = 5281
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1360
	number of tasks = 4166
	number of decomposition methods = 5281
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 978
	number of tasks = 3784
	number of decomposition methods = 4899
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 978
	number of tasks = 3784
	number of decomposition methods = 4899
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 978
	number of tasks = 3784
	number of decomposition methods = 4899
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 239ms.
	Number of Grounded Actions 2806
	Number of Grounded Literals 389
	number of abstract tasks = 978
	number of tasks = 3784
	number of decomposition methods = 4899
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 978
	number of tasks = 3784
	number of decomposition methods = 4639
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 978
	number of tasks = 3784
	number of decomposition methods = 4639
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 978
	number of tasks = 3784
	number of decomposition methods = 4639
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 978
	number of tasks = 3784
	number of decomposition methods = 4639
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 978
	number of tasks = 3784
	number of decomposition methods = 4639
	number of predicates = 389
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1097
	number of epsilon methods = 0
	number of primitive tasks = 2806
	number of constants = 0
Tasks 2806 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767651ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767212
done
initial PDT has 279 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 279 leafs
SHOP LEAFS 93
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 226398
Size 226398 at 0/2806
Size 226323 at 500/2806
Size 192456 at 1000/2806
Size 46482 at 1500/2806
Size 30349 at 2000/2806
Size 30341 at 2500/2806
Size 30341
Size 30341 at 0/2806
Size 30341 at 500/2806
Size 21983 at 1000/2806
Size 13356 at 1500/2806
Size 4272 at 2000/2806
Size 4237 at 2500/2806
Size 4196
Size 4196 at 0/2806
Size 4196 at 500/2806
Size 4184 at 1000/2806
Size 4141 at 1500/2806
Size 4045 at 2000/2806
Size 4045 at 2500/2806
Size 4040
Size 4040 at 0/2806
Size 4040 at 500/2806
Size 3988 at 1000/2806
Size 3858 at 1500/2806
Size 3772 at 2000/2806
Size 3772 at 2500/2806
Size 3772
Size 3772 at 0/2806
Size 3772 at 500/2806
Size 3772 at 1000/2806
Size 3772 at 1500/2806
Size 3772 at 2000/2806
Size 3772 at 2500/2806
Size 3772
Invariant time: 2.635
Number of invariants: 3772
Invariant Clauses 1056160
NUMBER OF CLAUSES 1618988
NUMBER OF STATE CLAUSES 1362313
NUMBER OF DECOMPOSITION CLAUSES 256675
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.15% 15.85% 0.0% 
NUMBER OF PATHS 279
Starting cryptominisat5.5
Setting starttime of solver to 1604475428100
Command exited with non-zero status 10
0.86 0.05

Time command gave the following runtime for the solver: 910
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_4;2;2,1577 1577 _m3_get_second_ingredient_3
4;2;2 393 pathaction!3_4;2;2,2454
Consider method^3_10;1;1,4293 4293 m7_do_fill_shot
10;1;1 67 pathaction!3_10;1;1,2512
Consider method^2_13;1,3913 3913 m9_do_fill_shot
13;1 381 pathaction!2_13;1,2487
Consider method^3_12;3;1,1760 1760 <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,left];m5_do_clean_shot;0;-1,-2>
12;3;1 382 pathaction!3_12;3;1,2284
Consider method^2_8;3,1876 1876 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 264 pathaction!2_8;3,3333
Consider method^3_4;3;1,4118 4118 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2>
4;3;1 345 pathaction!3_4;3;1,2287
Consider method^3_11;1;1,2550 2550 m9_do_fill_shot
11;1;1 242 pathaction!3_11;1;1,2602
Consider method^3_8;2;1,3277 3277 _m3_get_second_ingredient_2
8;2;1 38 pathaction!3_8;2;1,641
Consider method^3_8;2;2,1566 1566 _m3_get_second_ingredient_3
8;2;2 76 pathaction!3_8;2;2,2364
Consider method^1_1,3668 3668 m0_do_cocktail_in_shot1
1 176 pathaction!1_1,82
Consider method^2_10;2,612 612 m3_get_second_ingredient
10;2 206 pathaction!2_10;2,3729
Consider method^1_7,3448 3448 m0_do_cocktail_in_shot1
7 374 pathaction!1_7,85
Consider method^2_4;3,336 336 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 95 pathaction!2_4;3,3335
Consider method^3_6;2;2,4275 4275 _m3_get_second_ingredient_3
6;2;2 131 pathaction!3_6;2;2,2366
Consider method^2_4;1,4577 4577 m2_get_first_ingredient
4;1 62 pathaction!2_4;1,3326
Consider method^3_7;2;1,3716 3716 _m3_get_second_ingredient_2
7;2;1 116 pathaction!3_7;2;1,561
Consider method^3_11;1;3,3749 3749 _m2_get_first_ingredient_4
11;1;3 320 pathaction!3_11;1;3,2752
Consider method^2_6;2,3838 3838 m3_get_second_ingredient
6;2 82 pathaction!2_6;2,3718
Consider method^2_2;2,2514 2514 m3_get_second_ingredient
2;2 311 pathaction!2_2;2,3732
Consider method^2_11;2,1531 1531 m3_get_second_ingredient
11;2 331 pathaction!2_11;2,3729
Consider method^3_9;2;2,3803 3803 _m3_get_second_ingredient_3
9;2;2 402 pathaction!3_9;2;2,2402
Consider method^2_9;2,2153 2153 m3_get_second_ingredient
9;2 294 pathaction!2_9;2,3731
Consider method^3_10;2;2,4031 4031 _m3_get_second_ingredient_3
10;2;2 89 pathaction!3_10;2;2,2377
Consider method^3_3;2;1,3455 3455 _m3_get_second_ingredient_2
3;2;1 346 pathaction!3_3;2;1,598
Consider method^3_8;1;1,1449 1449 m9_do_fill_shot
8;1;1 93 pathaction!3_8;1;1,2525
Consider method^2_6;3,1000 1000 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 35 pathaction!2_6;3,3337
Consider method^2_12;3,353 353 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot13,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
12;3 45 pathaction!2_12;3,3331
Consider method^1_9,162 162 m0_do_cocktail_in_shot1
9 260 pathaction!1_9,78
Consider method^2_12;2,2112 2112 m3_get_second_ingredient
12;2 279 pathaction!2_12;2,3728
Consider method^3_0;1;3,4605 4605 _m2_get_first_ingredient_4
0;1;3 123 pathaction!3_0;1;3,2675
Consider method^3_6;1;3,4605 4605 _m2_get_first_ingredient_4
6;1;3 298 pathaction!3_6;1;3,2675
Consider method^3_12;2;1,3716 3716 _m3_get_second_ingredient_2
12;2;1 336 pathaction!3_12;2;1,561
Consider method^3_5;2;1,4599 4599 _m3_get_second_ingredient_2
5;2;1 2 pathaction!3_5;2;1,606
Consider method^2_7;2,3814 3814 m3_get_second_ingredient
7;2 57 pathaction!2_7;2,3733
Consider method^1_8,288 288 m0_do_cocktail_in_shot1
8 304 pathaction!1_8,79
Consider method^3_11;1;2,3701 3701 _m2_get_first_ingredient_3
11;1;2 124 pathaction!3_11;1;2,1054
Consider method^3_3;1;1,557 557 m7_do_fill_shot
3;1;1 196 pathaction!3_3;1;1,2562
Consider method^3_3;2;2,1180 1180 _m3_get_second_ingredient_3
3;2;2 383 pathaction!3_3;2;2,2331
Consider method^3_8;1;3,4605 4605 _m2_get_first_ingredient_4
8;1;3 16 pathaction!3_8;1;3,2675
Consider method^2_12;1,254 254 m2_get_first_ingredient
12;1 137 pathaction!2_12;1,3318
Consider method^1_11,593 593 m0_do_cocktail_in_shot1
11 99 pathaction!1_11,76
Consider method^3_1;3;1,490 490 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2>
1;3;1 195 pathaction!3_1;3;1,2297
Consider method^3_5;3;1,2576 2576 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail3,left];m5_do_clean_shot;0;-1,-2>
5;3;1 69 pathaction!3_5;3;1,2289
Consider method^2_1;2,72 72 m3_get_second_ingredient
1;2 253 pathaction!2_1;2,3727
Consider method^3_6;1;1,1449 1449 m9_do_fill_shot
6;1;1 202 pathaction!3_6;1;1,2525
Consider method^3_9;1;2,3233 3233 _m2_get_first_ingredient_3
9;1;2 236 pathaction!3_9;1;2,1154
Consider method^0_,4638 4638 __top_1
 271 pathaction!0_,3783
Consider method^3_9;1;3,4438 4438 _m2_get_first_ingredient_4
9;1;3 344 pathaction!3_9;1;3,2657
Consider method^3_6;2;1,509 509 _m3_get_second_ingredient_2
6;2;1 88 pathaction!3_6;2;1,686
Consider method^2_11;3,1127 1127 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 335 pathaction!2_11;3,3330
Consider method^3_9;3;1,2764 2764 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2>
9;3;1 291 pathaction!3_9;3;1,2302
Consider method^1_0,339 339 m0_do_cocktail_in_shot1
0 48 pathaction!1_0,75
Consider method^2_0;1,1708 1708 m2_get_first_ingredient
0;1 170 pathaction!2_0;1,3327
Consider method^2_1;1,967 967 m2_get_first_ingredient
1;1 173 pathaction!2_1;1,3317
Consider method^3_12;1;1,539 539 m7_do_fill_shot
12;1;1 324 pathaction!3_12;1;1,2587
Consider method^3_6;3;1,2513 2513 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 112 pathaction!3_6;3;1,2291
Consider method^2_4;2,776 776 m3_get_second_ingredient
4;2 17 pathaction!2_4;2,3736
Consider method^3_8;1;2,1263 1263 _m2_get_first_ingredient_3
8;1;2 126 pathaction!3_8;1;2,1081
Consider method^2_3;3,2275 2275 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 113 pathaction!2_3;3,3341
Consider method^2_7;1,3582 3582 m2_get_first_ingredient
7;1 398 pathaction!2_7;1,3323
Consider method^3_4;1;1,4386 4386 m9_do_fill_shot
4;1;1 127 pathaction!3_4;1;1,2473
Consider method^3_3;3;1,1210 1210 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2>
3;3;1 36 pathaction!3_3;3;1,2300
Consider method^2_2;3,3254 3254 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 175 pathaction!2_2;3,3340
Consider method^3_10;3;1,797 797 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 325 pathaction!3_10;3;1,2299
Consider method^3_12;2;2,4626 4626 _m3_get_second_ingredient_3
12;2;2 223 pathaction!3_12;2;2,2422
Consider method^2_11;1,4176 4176 m2_get_first_ingredient
11;1 92 pathaction!2_11;1,3319
Consider method^2_5;1,4086 4086 m2_get_first_ingredient
5;1 353 pathaction!2_5;1,3313
Consider method^2_2;1,2024 2024 m2_get_first_ingredient
2;1 51 pathaction!2_2;1,3322
Consider method^3_2;1;2,4053 4053 _m2_get_first_ingredient_3
2;1;2 400 pathaction!3_2;1;2,1118
Consider method^3_4;2;1,4111 4111 _m3_get_second_ingredient_2
4;2;1 43 pathaction!3_4;2;1,661
Consider method^1_2,2487 2487 m0_do_cocktail_in_shot1
2 63 pathaction!1_2,86
Consider method^2_5;3,4555 4555 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot6,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 256 pathaction!2_5;3,3334
Consider method^3_1;2;2,739 739 _m3_get_second_ingredient_3
1;2;2 144 pathaction!3_1;2;2,2394
Consider method^1_12,2189 2189 m0_do_cocktail_in_shot1
12 376 pathaction!1_12,77
Consider method^3_2;1;1,4446 4446 m9_do_fill_shot
2;1;1 101 pathaction!3_2;1;1,2482
Consider method^3_7;3;1,996 996 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 7 pathaction!3_7;3;1,2285
Consider method^3_2;2;2,4626 4626 _m3_get_second_ingredient_3
2;2;2 84 pathaction!3_2;2;2,2422
Consider method^2_9;1,1988 1988 m2_get_first_ingredient
9;1 305 pathaction!2_9;1,3321
Consider method^3_7;1;2,1263 1263 _m2_get_first_ingredient_3
7;1;2 348 pathaction!3_7;1;2,1081
Consider method^3_5;2;2,1021 1021 _m3_get_second_ingredient_3
5;2;2 86 pathaction!3_5;2;2,2423
Consider method^1_6,3563 3563 m0_do_cocktail_in_shot1
6 268 pathaction!1_6,83
Consider method^3_8;3;1,3887 3887 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 77 pathaction!3_8;3;1,2288
Consider method^2_0;3,1744 1744 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 174 pathaction!2_0;3,3329
Consider method^3_11;2;2,2694 2694 _m3_get_second_ingredient_3
11;2;2 310 pathaction!3_11;2;2,2406
Consider method^3_1;1;3,3926 3926 _m2_get_first_ingredient_4
1;1;3 104 pathaction!3_1;1;3,2655
Consider method^1_10,2479 2479 m0_do_cocktail_in_shot1
10 207 pathaction!1_10,84
Consider method^3_2;3;1,2624 2624 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 61 pathaction!3_2;3;1,2304
Consider method^2_5;2,2193 2193 m3_get_second_ingredient
5;2 252 pathaction!2_5;2,3723
Consider method^2_3;2,3196 3196 m3_get_second_ingredient
3;2 368 pathaction!2_3;2,3738
Consider method^1_13,1969 1969 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
13 385 pathaction!1_13,1572
Consider method^3_5;1;3,3749 3749 _m2_get_first_ingredient_4
5;1;3 184 pathaction!3_5;1;3,2752
Consider method^3_3;1;2,3800 3800 _m2_get_first_ingredient_3
3;1;2 270 pathaction!3_3;1;2,1185
Consider method^3_5;1;2,3701 3701 _m2_get_first_ingredient_3
5;1;2 251 pathaction!3_5;1;2,1054
Consider method^3_2;2;1,3716 3716 _m3_get_second_ingredient_2
2;2;1 154 pathaction!3_2;2;1,561
Consider method^2_8;1,4589 4589 m2_get_first_ingredient
8;1 73 pathaction!2_8;1,3316
Consider method^2_9;3,4045 4045 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 327 pathaction!2_9;3,3332
Consider method^3_10;1;2,1620 1620 _m2_get_first_ingredient_3
10;1;2 297 pathaction!3_10;1;2,1141
Consider method^3_7;1;1,2160 2160 m9_do_fill_shot
7;1;1 119 pathaction!3_7;1;1,2525
Consider method^3_4;1;3,1334 1334 _m2_get_first_ingredient_4
4;1;3 387 pathaction!3_4;1;3,2623
Consider method^3_9;1;1,4102 4102 m7_do_fill_shot
9;1;1 79 pathaction!3_9;1;1,2507
Consider method^2_0;2,2920 2920 m3_get_second_ingredient
0;2 134 pathaction!2_0;2,3737
Consider method^3_12;1;3,4230 4230 _m2_get_first_ingredient_4
12;1;3 313 pathaction!3_12;1;3,2737
Consider method^3_6;1;2,1263 1263 _m2_get_first_ingredient_3
6;1;2 293 pathaction!3_6;1;2,1081
Consider method^3_2;1;3,4579 4579 _m2_get_first_ingredient_4
2;1;3 187 pathaction!3_2;1;3,2632
Consider method^3_7;2;2,4626 4626 _m3_get_second_ingredient_3
7;2;2 272 pathaction!3_7;2;2,2422
Consider method^2_1;3,1359 1359 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 267 pathaction!2_1;3,3336
Consider method^3_0;1;1,4069 4069 m8_do_fill_shot
0;1;1 404 pathaction!3_0;1;1,2525
Consider method^1_4,1075 1075 m0_do_cocktail_in_shot1
4 118 pathaction!1_4,81
Consider method^3_5;1;1,3810 3810 m7_do_fill_shot
5;1;1 247 pathaction!3_5;1;1,2602
Consider method^3_11;3;1,818 818 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2>
11;3;1 333 pathaction!3_11;3;1,2279
Consider method^3_10;2;1,4243 4243 _m3_get_second_ingredient_2
10;2;1 397 pathaction!3_10;2;1,572
Consider method^2_8;2,4465 4465 m3_get_second_ingredient
8;2 341 pathaction!2_8;2,3726
Consider method^3_0;3;1,2286 2286 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2>
0;3;1 32 pathaction!3_0;3;1,2282
Consider method^3_1;2;1,4451 4451 _m3_get_second_ingredient_2
1;2;1 233 pathaction!3_1;2;1,679
Consider method^3_1;1;2,2631 2631 _m2_get_first_ingredient_3
1;1;2 182 pathaction!3_1;1;2,1172
Consider method^1_5,4636 4636 m0_do_cocktail_in_shot1
5 209 pathaction!1_5,80
Consider method^3_9;2;1,1409 1409 _m3_get_second_ingredient_2
9;2;1 249 pathaction!3_9;2;1,702
Consider method^2_10;3,3848 3848 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 50 pathaction!2_10;3,3338
Consider method^3_0;2;2,4626 4626 _m3_get_second_ingredient_3
0;2;2 97 pathaction!3_0;2;2,2422
Consider method^1_3,3813 3813 m0_do_cocktail_in_shot1
3 161 pathaction!1_3,87
Consider method^2_3;1,2717 2717 m2_get_first_ingredient
3;1 65 pathaction!2_3;1,3328
Consider method^2_10;1,2879 2879 m2_get_first_ingredient
10;1 292 pathaction!2_10;1,3319
Consider method^3_3;1;3,3393 3393 _m2_get_first_ingredient_4
3;1;3 5 pathaction!3_3;1;3,2712
Consider method^3_4;1;2,1951 1951 _m2_get_first_ingredient_3
4;1;2 168 pathaction!3_4;1;2,1108
Consider method^2_6;1,2598 2598 m2_get_first_ingredient
6;1 163 pathaction!2_6;1,3308
Consider method^2_7;3,3867 3867 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 158 pathaction!2_7;3,3339
Consider method^3_11;2;1,3989 3989 _m3_get_second_ingredient_2
11;2;1 329 pathaction!3_11;2;1,578
Consider method^3_0;2;1,3716 3716 _m3_get_second_ingredient_2
0;2;1 220 pathaction!3_0;2;1,561
Consider method^3_1;1;1,1411 1411 m8_do_fill_shot
1;1;1 143 pathaction!3_1;1;1,2505
Consider method^3_7;1;3,4605 4605 _m2_get_first_ingredient_4
7;1;3 160 pathaction!3_7;1;3,2675
Consider method^3_0;1;2,1263 1263 _m2_get_first_ingredient_3
0;1;2 365 pathaction!3_0;1;2,1081
Consider method^3_12;1;2,4595 4595 _m2_get_first_ingredient_3
12;1;2 338 pathaction!3_12;1;2,1097
Consider method^3_10;1;3,4549 4549 _m2_get_first_ingredient_4
10;1;3 141 pathaction!3_10;1;3,2662


CHECKING primitive solution of length 272 ...
true 255 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 120 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot14;]
true 136 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser5,ingredient5;]
true 70 grasp[right,shot14;]
true 238 fill-shot[shot14,ingredient5,right,left,dispenser5;]
true 66 pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1;]
true 74 clean-shot[shot14,ingredient5,right,left;]
true 214 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,right,shot14;]
true 269 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 13 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2;]
true 21 leave[right,shot14;]
true 1 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2;]
true 26 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 110 nop[;]
true 243 grasp[right,shaker1;]
true 183 shake[cocktail7,ingredient5,ingredient2,shaker1,right,left;]
true 172 pour-shaker-to-shot[cocktail7,shot1,right,shaker1,l2,l1;]
true 244 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 308 clean-shaker[right,left,shaker1;]
true 328 leave[right,shaker1;]
true 106 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 254 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot15;]
true 186 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser2,ingredient2;]
true 0 grasp[right,shot15;]
true 213 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 240 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 194 clean-shot[shot15,ingredient2,right,left;]
true 54 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,right,shot15;]
true 191 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 287 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 30 leave[right,shot15;]
true 258 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient1;]
true 285 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 145 nop[;]
true 108 grasp[left,shaker1;]
true 125 shake[cocktail2,ingredient2,ingredient1,shaker1,left,right;]
true 364 pour-shaker-to-shot[cocktail2,shot2,left,shaker1,l2,l1;]
true 349 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 241 clean-shaker[left,right,shaker1;]
true 128 leave[left,shaker1;]
true 135 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 205 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot14;]
true 193 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient2,dispenser3;]
true 391 grasp[right,shot14;]
true 159 clean-shot[shot14,ingredient2,right,left;]
true 91 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 379 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1;]
true 315 clean-shot[shot14,ingredient3,right,left;]
true 380 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient2,right,shot14;]
true 392 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 373 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2;]
true 388 leave[right,shot14;]
true 263 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient2;]
true 166 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 12 nop[;]
true 369 grasp[right,shaker1;]
true 282 shake[cocktail3,ingredient3,ingredient2,shaker1,right,left;]
true 289 pour-shaker-to-shot[cocktail3,shot3,right,shaker1,l2,l1;]
true 31 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 114 clean-shaker[right,left,shaker1;]
true 218 leave[right,shaker1;]
true 334 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 342 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient2,shot14;]
true 295 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient2,dispenser2;]
true 266 grasp[left,shot14;]
true 40 refill-shot[shot14,ingredient2,left,right,dispenser2;]
true 201 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 130 clean-shot[shot14,ingredient2,left,right;]
true 83 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient5,left,shot14;]
true 121 fill-shot[shot14,ingredient5,left,right,dispenser5;]
true 42 pour-shot-to-used-shaker[shot14,ingredient5,shaker1,left,l1,l2;]
true 217 leave[left,shot14;]
true 171 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient2,ingredient5;]
true 46 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 22 nop[;]
true 245 grasp[left,shaker1;]
true 232 shake[cocktail11,ingredient2,ingredient5,shaker1,left,right;]
true 197 pour-shaker-to-shot[cocktail11,shot4,left,shaker1,l2,l1;]
true 332 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 190 clean-shaker[left,right,shaker1;]
true 401 leave[left,shaker1;]
true 162 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 139 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot14;]
true 33 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient4,ingredient5,dispenser4;]
true 80 grasp[left,shot14;]
true 55 clean-shot[shot14,ingredient5,left,right;]
true 150 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 303 pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,left,l0,l1;]
true 181 clean-shot[shot14,ingredient4,left,right;]
true 352 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot14;]
true 281 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 219 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,left,l1,l2;]
true 109 leave[left,shot14;]
true 41 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient2;]
true 169 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 290 nop[;]
true 179 grasp[right,shaker1;]
true 75 shake[cocktail8,ingredient4,ingredient2,shaker1,right,left;]
true 323 pour-shaker-to-shot[cocktail8,shot5,right,shaker1,l2,l1;]
true 371 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 71 clean-shaker[right,left,shaker1;]
true 306 leave[right,shaker1;]
true 403 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 60 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot15;]
true 15 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient1,dispenser1;]
true 234 grasp[left,shot15;]
true 4 refill-shot[shot15,ingredient1,left,right,dispenser1;]
true 100 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 188 clean-shot[shot15,ingredient1,left,right;]
true 317 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient3,left,shot15;]
true 389 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 9 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 156 leave[left,shot15;]
true 296 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient3;]
true 140 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 395 nop[;]
true 39 grasp[right,shaker1;]
true 164 shake[cocktail4,ingredient1,ingredient3,shaker1,right,left;]
true 283 pour-shaker-to-shot[cocktail4,shot6,right,shaker1,l2,l1;]
true 185 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 357 clean-shaker[right,left,shaker1;]
true 20 leave[right,shaker1;]
true 228 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 354 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient5,shot14;]
true 199 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient2,dispenser5;]
true 44 grasp[right,shot14;]
true 147 clean-shot[shot14,ingredient2,right,left;]
true 239 fill-shot[shot14,ingredient5,right,left,dispenser5;]
true 276 pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1;]
true 212 clean-shot[shot14,ingredient5,right,left;]
true 211 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,right,shot14;]
true 37 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 221 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2;]
true 10 leave[right,shot14;]
true 375 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient5,ingredient4;]
true 122 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 330 nop[;]
true 248 grasp[left,shaker1;]
true 231 shake[cocktail1,ingredient5,ingredient4,shaker1,left,right;]
true 14 pour-shaker-to-shot[cocktail1,shot7,left,shaker1,l2,l1;]
true 25 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 165 clean-shaker[left,right,shaker1;]
true 103 leave[left,shaker1;]
true 138 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 399 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot14;]
true 102 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient4,dispenser5;]
true 280 grasp[right,shot14;]
true 363 clean-shot[shot14,ingredient4,right,left;]
true 235 fill-shot[shot14,ingredient5,right,left,dispenser5;]
true 314 pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1;]
true 151 clean-shot[shot14,ingredient5,right,left;]
true 215 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient2,right,shot14;]
true 321 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 216 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2;]
true 318 leave[right,shot14;]
true 312 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient2;]
true 226 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 355 nop[;]
true 288 grasp[right,shaker1;]
true 347 shake[cocktail10,ingredient5,ingredient2,shaker1,right,left;]
true 8 pour-shaker-to-shot[cocktail10,shot8,right,shaker1,l2,l1;]
true 339 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 378 clean-shaker[right,left,shaker1;]
true 153 leave[right,shaker1;]
true 90 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 265 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient5,shot14;]
true 155 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient2,dispenser5;]
true 117 grasp[right,shot14;]
true 129 clean-shot[shot14,ingredient2,right,left;]
true 319 fill-shot[shot14,ingredient5,right,left,dispenser5;]
true 56 pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1;]
true 34 clean-shot[shot14,ingredient5,right,left;]
true 257 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,right,shot14;]
true 198 fill-shot[shot14,ingredient1,right,left,dispenser1;]
true 47 pour-shot-to-used-shaker[shot14,ingredient1,shaker1,right,l1,l2;]
true 301 leave[right,shot14;]
true 98 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient5,ingredient1;]
true 222 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 377 nop[;]
true 85 grasp[right,shaker1;]
true 390 shake[cocktail9,ingredient5,ingredient1,shaker1,right,left;]
true 358 pour-shaker-to-shot[cocktail9,shot9,right,shaker1,l2,l1;]
true 111 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 237 clean-shaker[right,left,shaker1;]
true 274 leave[right,shaker1;]
true 361 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 149 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot15;]
true 52 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient3,dispenser3;]
true 203 grasp[left,shot15;]
true 309 refill-shot[shot15,ingredient3,left,right,dispenser3;]
true 72 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 177 clean-shot[shot15,ingredient3,left,right;]
true 386 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient5,left,shot15;]
true 307 fill-shot[shot15,ingredient5,left,right,dispenser5;]
true 302 pour-shot-to-used-shaker[shot15,ingredient5,shaker1,left,l1,l2;]
true 246 leave[left,shot15;]
true 259 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient5;]
true 350 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 6 nop[;]
true 64 grasp[left,shaker1;]
true 157 shake[cocktail5,ingredient3,ingredient5,shaker1,left,right;]
true 275 pour-shaker-to-shot[cocktail5,shot10,left,shaker1,l2,l1;]
true 29 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 273 clean-shaker[left,right,shaker1;]
true 384 leave[left,shaker1;]
true 19 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 262 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot14;]
true 322 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient1,dispenser1;]
true 343 grasp[left,shot14;]
true 59 refill-shot[shot14,ingredient1,left,right,dispenser1;]
true 178 pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,left,l0,l1;]
true 210 clean-shot[shot14,ingredient1,left,right;]
true 351 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,left,shot14;]
true 105 fill-shot[shot14,ingredient4,left,right,dispenser4;]
true 230 pour-shot-to-used-shaker[shot14,ingredient4,shaker1,left,l1,l2;]
true 229 leave[left,shot14;]
true 299 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient4;]
true 3 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 115 nop[;]
true 142 grasp[right,shaker1;]
true 286 shake[cocktail6,ingredient1,ingredient4,shaker1,right,left;]
true 300 pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1;]
true 192 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 227 clean-shaker[right,left,shaker1;]
true 394 leave[right,shaker1;]
true 11 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 94 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot15;]
true 370 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient5,dispenser1;]
true 78 grasp[left,shot15;]
true 180 clean-shot[shot15,ingredient5,left,right;]
true 277 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 360 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 356 clean-shot[shot15,ingredient1,left,right;]
true 167 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,left,shot15;]
true 68 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 148 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 58 leave[left,shot15;]
true 28 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient4;]
true 18 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 189 nop[;]
true 24 grasp[right,shaker1;]
true 53 shake[cocktail6,ingredient1,ingredient4,shaker1,right,left;]
true 146 pour-shaker-to-shot[cocktail6,shot12,right,shaker1,l2,l1;]
true 23 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 396 clean-shaker[right,left,shaker1;]
true 208 leave[right,shaker1;]
true 261 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right;]
true 340 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot14;]
true 284 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient4,dispenser4;]
true 337 grasp[right,shot14;]
true 200 refill-shot[shot14,ingredient4,right,left,dispenser4;]
true 107 pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,right,l0,l1;]
true 96 clean-shot[shot14,ingredient4,right,left;]
true 152 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,right,shot14;]
true 204 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 362 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2;]
true 316 leave[right,shot14;]
true 87 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient2;]
true 224 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 366 nop[;]
true 359 grasp[right,shaker1;]
true 278 shake[cocktail8,ingredient4,ingredient2,shaker1,right,left;]
true 250 pour-shaker-to-shot[cocktail8,shot13,right,shaker1,l2,l1;]
true 372 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 81 clean-shaker[right,left,shaker1;]
true 367 leave[right,shaker1;]
true 326 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 225 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient2,dispenser3;]
true 27 grasp[left,shot14;]
true 49 clean-shot[shot14,ingredient2,left,right;]
true 133 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 132 leave[left,shot14;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 607487984
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 389
number of actions                    = 3784
number of abstract actions           = 978
number of primitive actions          = 2806
number of methods                    = 4639
number of primitive shop actions     = 1097
number of primitive non-shop actions = 1709
size of largest method               = 14
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 293796
number of clauses               = 1618988
average size of clauses         = 2.381255450936017
number of assert                = 171
number of horn                  = 1419282
K offset                        = 0
K chosen value                  = 4
state formula                   = 1362313
method children clauses         = 0
number of paths                 = 279
maximum plan length             = 279
number of decomposition clauses = 256675
number of ordering clauses      = 0
number of state clauses         = 1362313
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 19839
============ parsing ============
total                         = 1126
file parser                   = 620
sort expansion                = 245
closed world assumption       = 131
inherit preconditions         = 0
shop methods                  = 28
eliminate identical variables = 48
strip domain of hybridity     = 2
flatten formula               = 52
============ preprocessing ============
total                                      = 6335
compile negative preconditions             = 52
compile unit methods                       = 0
split parameter                            = 53
expand choiceless abstract tasks           = 560
compile methods with identical tasks       = 31
removing unnecessary predicates            = 1005
lifted reachabiltiy analysis               = 79
grounded planning graph analysis           = 1785
grounded task decomposition graph analysis = 1965
grounding                                  = 758
create artificial top task                 = 22
============ search preparation ============
compute state invariants = 2923
============ sat ============
total                                        = 8455
generate formula                             = 6673
generate path decomposition tree             = 446
normalise path decomposition tree            = 98
sog optimisation                             = 61
translate path decomposition tree to clauses = 854
generate state formula                       = 6513
generate state invariant formula             = 783
transform to DIMACS                          = 633
SAT solver                                   = 910
SAT solver for K=0004                        = 910

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2806";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="978";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="607487984";"40 sat:20:state formula"="1362313";"40 sat:01:number of variables"="293796";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="279";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="4639";"30 problem:07:number of primitive shop actions"="1097";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3784";"30 problem:08:number of primitive non-shop actions"="1709";"30 problem:02:number of predicates"="389";"40 sat:03:number of horn"="1419282";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="14";"40 sat:03:average size of clauses"="2.381255450936017";"40 sat:02:number of clauses"="1618988";"40 sat:50:number of state clauses"="1362313";"40 sat:03:number of assert"="171";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="279";"40 sat:50:number of decomposition clauses"="256675";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="620";"01 parsing:08:flatten formula"="52";"40 sat:41:SAT solver for K=0004"="910";"40 sat:00:total"="8455";"40 sat:16:generate state formula"="6513";"40 sat:20:transform to DIMACS"="633";"40 sat:11:generate path decomposition tree"="446";"02 preprocessing:07:compile methods with identical tasks"="31";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="1005";"01 parsing:03:closed world assumption"="131";"02 preprocessing:11:lifted reachabiltiy analysis"="79";"01 parsing:02:sort expansion"="245";"40 sat:12:normalise path decomposition tree"="98";"40 sat:40:SAT solver"="910";"01 parsing:00:total"="1126";"40 sat:10:generate formula"="6673";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="52";"00 total:00:total"="19839";"40 sat:13:sog optimisation"="61";"02 preprocessing:12:grounded planning graph analysis"="1785";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1965";"02 preprocessing:04:split parameter"="53";"01 parsing:05:shop methods"="28";"10 search preparation:02:compute state invariants"="2923";"01 parsing:06:eliminate identical variables"="48";"40 sat:15:translate path decomposition tree to clauses"="854";"02 preprocessing:05:expand choiceless abstract tasks"="560";"40 sat:17:generate state invariant formula"="783";"02 preprocessing:00:total"="6335";"02 preprocessing:99:create artificial top task"="22";"02 preprocessing:84:grounding"="758"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot14];__method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser5,ingredient5];grasp[right,shot14];fill-shot[shot14,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1];clean-shot[shot14,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,right,shot14];fill-shot[shot14,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[right,shaker1];shake[cocktail7,ingredient5,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail7,shot1,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail7,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient2,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser2,ingredient2];grasp[right,shot15];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1];clean-shot[shot15,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,right,shot15];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[left,shaker1];shake[cocktail2,ingredient2,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail2,shot2,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail2,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient2,dispenser3];grasp[right,shot14];clean-shot[shot14,ingredient2,right,left];fill-shot[shot14,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1];clean-shot[shot14,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient2,right,shot14];fill-shot[shot14,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail3,ingredient3,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail3,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail3,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient2,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient2,dispenser2];grasp[left,shot14];refill-shot[shot14,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1];clean-shot[shot14,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient5,left,shot14];fill-shot[shot14,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot14,ingredient5,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail11,ingredient2,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail11,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail11,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient4,ingredient5,dispenser4];grasp[left,shot14];clean-shot[shot14,ingredient5,left,right];fill-shot[shot14,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,left,l0,l1];clean-shot[shot14,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot14];fill-shot[shot14,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot14,ingredient2,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[right,shaker1];shake[cocktail8,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot5,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient1,dispenser1];grasp[left,shot15];refill-shot[shot15,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1];clean-shot[shot15,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[right,shaker1];shake[cocktail4,ingredient1,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot6,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient5,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient2,dispenser5];grasp[right,shot14];clean-shot[shot14,ingredient2,right,left];fill-shot[shot14,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1];clean-shot[shot14,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,right,shot14];fill-shot[shot14,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot14,ingredient4,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient5,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail1,ingredient5,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient4,dispenser5];grasp[right,shot14];clean-shot[shot14,ingredient4,right,left];fill-shot[shot14,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1];clean-shot[shot14,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient2,right,shot14];fill-shot[shot14,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail10,ingredient5,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient5,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient5,ingredient2,dispenser5];grasp[right,shot14];clean-shot[shot14,ingredient2,right,left];fill-shot[shot14,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1];clean-shot[shot14,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,right,shot14];fill-shot[shot14,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot14,ingredient1,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient5,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail9,ingredient5,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient3,dispenser3];grasp[left,shot15];refill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1];clean-shot[shot15,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient5,left,shot15];fill-shot[shot15,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot15,ingredient5,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail5,ingredient3,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient1,dispenser1];grasp[left,shot14];refill-shot[shot14,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot14,ingredient1,shaker1,left,l0,l1];clean-shot[shot14,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,left,shot14];fill-shot[shot14,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot14,ingredient4,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail6,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient5,dispenser1];grasp[left,shot15];clean-shot[shot15,ingredient5,left,right];fill-shot[shot15,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1];clean-shot[shot15,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[right,shaker1];shake[cocktail6,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot12,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient4,dispenser4];grasp[right,shot14];refill-shot[shot14,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot14,ingredient4,shaker1,right,l0,l1];clean-shot[shot14,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,right,shot14];fill-shot[shot14,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot13];nop[];grasp[right,shaker1];shake[cocktail8,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot13,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient2,dispenser3];grasp[left,shot14];clean-shot[shot14,ingredient2,left,right];fill-shot[shot14,ingredient3,left,right,dispenser3];leave[left,shot14]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 right 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient5 shot14 
2 __method_precondition_m8_do_fill_shot_8_precondition shot14 dispenser5 ingredient5 
3 grasp right shot14 
4 fill-shot shot14 ingredient5 right left dispenser5 
5 pour-shot-to-clean-shaker shot14 ingredient5 shaker1 right l0 l1 
6 clean-shot shot14 ingredient5 right left 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient2 right shot14 
8 fill-shot shot14 ingredient2 right left dispenser2 
9 pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 
10 leave right shot14 
11 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient5 ingredient2 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp right shaker1 
15 shake cocktail7 ingredient5 ingredient2 shaker1 right left 
16 pour-shaker-to-shot cocktail7 shot1 right shaker1 l2 l1 
17 empty-shaker right shaker1 cocktail7 l1 l0 
18 clean-shaker right left shaker1 
19 leave right shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient2 shot15 
22 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser2 ingredient2 
23 grasp right shot15 
24 fill-shot shot15 ingredient2 right left dispenser2 
25 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 
26 clean-shot shot15 ingredient2 right left 
27 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient1 right shot15 
28 fill-shot shot15 ingredient1 right left dispenser1 
29 pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 
30 leave right shot15 
31 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient2 ingredient1 
32 __method_precondition_m5_do_clean_shot_5_precondition shot2 
33 nop  
34 grasp left shaker1 
35 shake cocktail2 ingredient2 ingredient1 shaker1 left right 
36 pour-shaker-to-shot cocktail2 shot2 left shaker1 l2 l1 
37 empty-shaker left shaker1 cocktail2 l1 l0 
38 clean-shaker left right shaker1 
39 leave left shaker1 
40 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 right 
41 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient3 shot14 
42 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient3 ingredient2 dispenser3 
43 grasp right shot14 
44 clean-shot shot14 ingredient2 right left 
45 fill-shot shot14 ingredient3 right left dispenser3 
46 pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 
47 clean-shot shot14 ingredient3 right left 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient2 right shot14 
49 fill-shot shot14 ingredient2 right left dispenser2 
50 pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 
51 leave right shot14 
52 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient3 ingredient2 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp right shaker1 
56 shake cocktail3 ingredient3 ingredient2 shaker1 right left 
57 pour-shaker-to-shot cocktail3 shot3 right shaker1 l2 l1 
58 empty-shaker right shaker1 cocktail3 l1 l0 
59 clean-shaker right left shaker1 
60 leave right shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient2 shot14 
63 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient2 dispenser2 
64 grasp left shot14 
65 refill-shot shot14 ingredient2 left right dispenser2 
66 pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 
67 clean-shot shot14 ingredient2 left right 
68 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient5 left shot14 
69 fill-shot shot14 ingredient5 left right dispenser5 
70 pour-shot-to-used-shaker shot14 ingredient5 shaker1 left l1 l2 
71 leave left shot14 
72 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient2 ingredient5 
73 __method_precondition_m5_do_clean_shot_5_precondition shot4 
74 nop  
75 grasp left shaker1 
76 shake cocktail11 ingredient2 ingredient5 shaker1 left right 
77 pour-shaker-to-shot cocktail11 shot4 left shaker1 l2 l1 
78 empty-shaker left shaker1 cocktail11 l1 l0 
79 clean-shaker left right shaker1 
80 leave left shaker1 
81 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
82 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient4 shot14 
83 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient4 ingredient5 dispenser4 
84 grasp left shot14 
85 clean-shot shot14 ingredient5 left right 
86 fill-shot shot14 ingredient4 left right dispenser4 
87 pour-shot-to-clean-shaker shot14 ingredient4 shaker1 left l0 l1 
88 clean-shot shot14 ingredient4 left right 
89 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient2 left shot14 
90 fill-shot shot14 ingredient2 left right dispenser2 
91 pour-shot-to-used-shaker shot14 ingredient2 shaker1 left l1 l2 
92 leave left shot14 
93 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient4 ingredient2 
94 __method_precondition_m5_do_clean_shot_5_precondition shot5 
95 nop  
96 grasp right shaker1 
97 shake cocktail8 ingredient4 ingredient2 shaker1 right left 
98 pour-shaker-to-shot cocktail8 shot5 right shaker1 l2 l1 
99 empty-shaker right shaker1 cocktail8 l1 l0 
100 clean-shaker right left shaker1 
101 leave right shaker1 
102 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
103 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient1 shot15 
104 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient1 dispenser1 
105 grasp left shot15 
106 refill-shot shot15 ingredient1 left right dispenser1 
107 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 
108 clean-shot shot15 ingredient1 left right 
109 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient3 left shot15 
110 fill-shot shot15 ingredient3 left right dispenser3 
111 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
112 leave left shot15 
113 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient1 ingredient3 
114 __method_precondition_m5_do_clean_shot_5_precondition shot6 
115 nop  
116 grasp right shaker1 
117 shake cocktail4 ingredient1 ingredient3 shaker1 right left 
118 pour-shaker-to-shot cocktail4 shot6 right shaker1 l2 l1 
119 empty-shaker right shaker1 cocktail4 l1 l0 
120 clean-shaker right left shaker1 
121 leave right shaker1 
122 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 right 
123 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient5 shot14 
124 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient5 ingredient2 dispenser5 
125 grasp right shot14 
126 clean-shot shot14 ingredient2 right left 
127 fill-shot shot14 ingredient5 right left dispenser5 
128 pour-shot-to-clean-shaker shot14 ingredient5 shaker1 right l0 l1 
129 clean-shot shot14 ingredient5 right left 
130 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient4 right shot14 
131 fill-shot shot14 ingredient4 right left dispenser4 
132 pour-shot-to-used-shaker shot14 ingredient4 shaker1 right l1 l2 
133 leave right shot14 
134 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient5 ingredient4 
135 __method_precondition_m5_do_clean_shot_5_precondition shot7 
136 nop  
137 grasp left shaker1 
138 shake cocktail1 ingredient5 ingredient4 shaker1 left right 
139 pour-shaker-to-shot cocktail1 shot7 left shaker1 l2 l1 
140 empty-shaker left shaker1 cocktail1 l1 l0 
141 clean-shaker left right shaker1 
142 leave left shaker1 
143 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
144 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient5 shot14 
145 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient5 ingredient4 dispenser5 
146 grasp right shot14 
147 clean-shot shot14 ingredient4 right left 
148 fill-shot shot14 ingredient5 right left dispenser5 
149 pour-shot-to-clean-shaker shot14 ingredient5 shaker1 right l0 l1 
150 clean-shot shot14 ingredient5 right left 
151 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient2 right shot14 
152 fill-shot shot14 ingredient2 right left dispenser2 
153 pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 
154 leave right shot14 
155 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient5 ingredient2 
156 __method_precondition_m5_do_clean_shot_5_precondition shot8 
157 nop  
158 grasp right shaker1 
159 shake cocktail10 ingredient5 ingredient2 shaker1 right left 
160 pour-shaker-to-shot cocktail10 shot8 right shaker1 l2 l1 
161 empty-shaker right shaker1 cocktail10 l1 l0 
162 clean-shaker right left shaker1 
163 leave right shaker1 
164 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
165 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient5 shot14 
166 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient5 ingredient2 dispenser5 
167 grasp right shot14 
168 clean-shot shot14 ingredient2 right left 
169 fill-shot shot14 ingredient5 right left dispenser5 
170 pour-shot-to-clean-shaker shot14 ingredient5 shaker1 right l0 l1 
171 clean-shot shot14 ingredient5 right left 
172 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient1 right shot14 
173 fill-shot shot14 ingredient1 right left dispenser1 
174 pour-shot-to-used-shaker shot14 ingredient1 shaker1 right l1 l2 
175 leave right shot14 
176 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient5 ingredient1 
177 __method_precondition_m5_do_clean_shot_5_precondition shot9 
178 nop  
179 grasp right shaker1 
180 shake cocktail9 ingredient5 ingredient1 shaker1 right left 
181 pour-shaker-to-shot cocktail9 shot9 right shaker1 l2 l1 
182 empty-shaker right shaker1 cocktail9 l1 l0 
183 clean-shaker right left shaker1 
184 leave right shaker1 
185 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
186 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient3 shot15 
187 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient3 dispenser3 
188 grasp left shot15 
189 refill-shot shot15 ingredient3 left right dispenser3 
190 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 
191 clean-shot shot15 ingredient3 left right 
192 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient5 left shot15 
193 fill-shot shot15 ingredient5 left right dispenser5 
194 pour-shot-to-used-shaker shot15 ingredient5 shaker1 left l1 l2 
195 leave left shot15 
196 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient3 ingredient5 
197 __method_precondition_m5_do_clean_shot_5_precondition shot10 
198 nop  
199 grasp left shaker1 
200 shake cocktail5 ingredient3 ingredient5 shaker1 left right 
201 pour-shaker-to-shot cocktail5 shot10 left shaker1 l2 l1 
202 empty-shaker left shaker1 cocktail5 l1 l0 
203 clean-shaker left right shaker1 
204 leave left shaker1 
205 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
206 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient1 shot14 
207 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient1 dispenser1 
208 grasp left shot14 
209 refill-shot shot14 ingredient1 left right dispenser1 
210 pour-shot-to-clean-shaker shot14 ingredient1 shaker1 left l0 l1 
211 clean-shot shot14 ingredient1 left right 
212 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient4 left shot14 
213 fill-shot shot14 ingredient4 left right dispenser4 
214 pour-shot-to-used-shaker shot14 ingredient4 shaker1 left l1 l2 
215 leave left shot14 
216 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient1 ingredient4 
217 __method_precondition_m5_do_clean_shot_5_precondition shot11 
218 nop  
219 grasp right shaker1 
220 shake cocktail6 ingredient1 ingredient4 shaker1 right left 
221 pour-shaker-to-shot cocktail6 shot11 right shaker1 l2 l1 
222 empty-shaker right shaker1 cocktail6 l1 l0 
223 clean-shaker right left shaker1 
224 leave right shaker1 
225 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 left 
226 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient1 shot15 
227 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient5 dispenser1 
228 grasp left shot15 
229 clean-shot shot15 ingredient5 left right 
230 fill-shot shot15 ingredient1 left right dispenser1 
231 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 
232 clean-shot shot15 ingredient1 left right 
233 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient4 left shot15 
234 fill-shot shot15 ingredient4 left right dispenser4 
235 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
236 leave left shot15 
237 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient1 ingredient4 
238 __method_precondition_m5_do_clean_shot_5_precondition shot12 
239 nop  
240 grasp right shaker1 
241 shake cocktail6 ingredient1 ingredient4 shaker1 right left 
242 pour-shaker-to-shot cocktail6 shot12 right shaker1 l2 l1 
243 empty-shaker right shaker1 cocktail6 l1 l0 
244 clean-shaker right left shaker1 
245 leave right shaker1 
246 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot13 right 
247 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient4 shot14 
248 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient4 dispenser4 
249 grasp right shot14 
250 refill-shot shot14 ingredient4 right left dispenser4 
251 pour-shot-to-clean-shaker shot14 ingredient4 shaker1 right l0 l1 
252 clean-shot shot14 ingredient4 right left 
253 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient2 right shot14 
254 fill-shot shot14 ingredient2 right left dispenser2 
255 pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 
256 leave right shot14 
257 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient4 ingredient2 
258 __method_precondition_m5_do_clean_shot_5_precondition shot13 
259 nop  
260 grasp right shaker1 
261 shake cocktail8 ingredient4 ingredient2 shaker1 right left 
262 pour-shaker-to-shot cocktail8 shot13 right shaker1 l2 l1 
263 empty-shaker right shaker1 cocktail8 l1 l0 
264 clean-shaker right left shaker1 
265 leave right shaker1 
266 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser3 ingredient3 
267 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient3 ingredient2 dispenser3 
268 grasp left shot14 
269 clean-shot shot14 ingredient2 left right 
270 fill-shot shot14 ingredient3 left right dispenser3 
271 leave left shot14 
root 316
272 do_cocktail_in_shot1 shot12 cocktail6  -> m0_do_cocktail_in_shot1 225 300 308 351
273 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient2 left  -> _m2_get_first_ingredient_4 67
274 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 153
275 do_cocktail_in_shot1 shot10 cocktail5  -> m0_do_cocktail_in_shot1 185 290 322 333
276 do_cocktail_in_shot1 shot6 cocktail4  -> m0_do_cocktail_in_shot1 102 399 379 375
277 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 214
278 serve_shot shot2 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 31 377 34 35 36 37 38 39
279 do_fill_shot shot14 ingredient4 right  -> m7_do_fill_shot 248 249 250
280 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient5 right  -> _m2_get_first_ingredient_4 6
281 get_second_ingredient cocktail7 right  -> m3_get_second_ingredient 7 320 310 10
282 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 89 366 307 92
283 do_cocktail_in_shot1 shot4 cocktail11  -> m0_do_cocktail_in_shot1 61 370 291 388
284 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 217 218
285 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient4 left  -> _m3_get_second_ingredient_2 213
286 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 251
287 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 left  -> _m2_get_first_ingredient_4 232
288 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 210
289 get_second_ingredient cocktail10 right  -> m3_get_second_ingredient 151 296 274 154
290 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 186 385 336 359
291 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 68 328 335 71
292 do_cocktail_in_shot1 shot11 cocktail6  -> m0_do_cocktail_in_shot1 205 323 397 376
293 do_fill_shot shot15 ingredient1 left  -> m9_do_fill_shot 227 228 229 230
294 get_second_ingredient cocktail3 right  -> m3_get_second_ingredient 48 381 367 51
295 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 left  -> _m2_get_first_ingredient_4 108
296 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient2 right  -> _m3_get_second_ingredient_2 152
297 do_fill_shot shot14 ingredient4 left  -> m9_do_fill_shot 83 84 85 86
298 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 46
299 get_first_ingredient cocktail7 right  -> m2_get_first_ingredient 1 378 393 280
300 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 226 293 314 287
301 serve_shot shot1 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 404 14 15 16 17 18 19
302 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 132
303 do_clean_shot_m4_serve_shot_sip_2 shot5 left  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2> 94 95
304 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient5 right  -> _m2_get_first_ingredient_4 150
305 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 87
306 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 165 354 337 346
307 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 91
308 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 233 390 373 236
309 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient4 left  -> _m2_get_first_ingredient_4 88
310 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 9
311 do_fill_shot shot14 ingredient1 left  -> m7_do_fill_shot 207 208 209
312 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient4 right  -> _m2_get_first_ingredient_4 252
313 do_clean_shot_m4_serve_shot_sip_2 shot13 left  -> <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,left];m5_do_clean_shot;0;-1,-2> 258 259
314 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 231
315 do_clean_shot_m4_serve_shot_sip_2 shot12 left  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2> 238 239
316 __choicelessATCompilation__top_1  -> __top_1 324 368 340 283 369 276 358 332 318 275 292 272 353 371
317 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient5 right  -> _m2_get_first_ingredient_4 129
318 do_cocktail_in_shot1 shot9 cocktail9  -> m0_do_cocktail_in_shot1 164 306 403 372
319 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 29
320 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient2 right  -> _m3_get_second_ingredient_2 8
321 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 149
322 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 192 360 396 195
323 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 206 311 288 342
324 do_cocktail_in_shot1 shot1 cocktail7  -> m0_do_cocktail_in_shot1 0 299 281 301
325 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 123 343 361 317
326 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient1 right  -> _m3_get_second_ingredient_2 173
327 do_clean_shot_m4_serve_shot_sip_2 shot6 left  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail3,left];m5_do_clean_shot;0;-1,-2> 114 115
328 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient5 left  -> _m3_get_second_ingredient_2 69
329 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 53 54
330 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 130 362 302 133
331 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 255
332 do_cocktail_in_shot1 shot8 cocktail10  -> m0_do_cocktail_in_shot1 143 387 289 348
333 serve_shot shot10 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 196 345 199 200 201 202 203 204
334 do_fill_shot shot15 ingredient2 right  -> m8_do_fill_shot 22 23 24
335 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 70
336 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 190
337 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 170
338 do_fill_shot shot14 ingredient3 right  -> m9_do_fill_shot 42 43 44 45
339 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 66
340 do_cocktail_in_shot1 shot3 cocktail3  -> m0_do_cocktail_in_shot1 40 391 294 344
341 get_first_ingredient cocktail8 right  -> m2_get_first_ingredient 247 279 286 312
342 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient1 left  -> _m2_get_first_ingredient_4 211
343 do_fill_shot shot14 ingredient5 right  -> m9_do_fill_shot 124 125 126 127
344 serve_shot shot3 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 52 329 55 56 57 58 59 60
345 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2> 197 198
346 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient5 right  -> _m2_get_first_ingredient_4 171
347 do_fill_shot shot14 ingredient3 left  -> m9_do_fill_shot 267 268 269 270
348 serve_shot shot8 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 155 398 158 159 160 161 162 163
349 get_second_ingredient cocktail8 right  -> m3_get_second_ingredient 253 374 331 256
350 serve_shot shot13 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot13,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 257 313 260 261 262 263 264 265
351 serve_shot shot12 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 237 315 240 241 242 243 244 245
352 do_fill_shot shot15 ingredient1 left  -> m7_do_fill_shot 104 105 106
353 do_cocktail_in_shot1 shot13 cocktail8  -> m0_do_cocktail_in_shot1 246 341 349 350
354 do_fill_shot shot14 ingredient5 right  -> m9_do_fill_shot 166 167 168 169
355 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2> 73 74
356 serve_shot shot7 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 134 386 137 138 139 140 141 142
357 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 174
358 do_cocktail_in_shot1 shot7 cocktail1  -> m0_do_cocktail_in_shot1 122 325 330 356
359 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 left  -> _m2_get_first_ingredient_4 191
360 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient5 left  -> _m3_get_second_ingredient_2 193
361 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 128
362 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient4 right  -> _m3_get_second_ingredient_2 131
363 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 111
364 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient3 right  -> _m2_get_first_ingredient_4 47
365 do_fill_shot shot14 ingredient2 left  -> m7_do_fill_shot 63 64 65
366 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient2 left  -> _m3_get_second_ingredient_2 90
367 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 50
368 do_cocktail_in_shot1 shot2 cocktail2  -> m0_do_cocktail_in_shot1 20 395 402 278
369 do_cocktail_in_shot1 shot5 cocktail8  -> m0_do_cocktail_in_shot1 81 382 282 401
370 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 62 365 339 273
371 do_cocktail_in_shot2 shot14 ingredient3  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 266 347 271
372 serve_shot shot9 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 176 383 179 180 181 182 183 184
373 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 235
374 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient2 right  -> _m3_get_second_ingredient_2 254
375 serve_shot shot6 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot6,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 113 327 116 117 118 119 120 121
376 serve_shot shot11 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 216 284 219 220 221 222 223 224
377 do_clean_shot_m4_serve_shot_sip_2 shot2 right  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2> 32 33
378 do_fill_shot shot14 ingredient5 right  -> m8_do_fill_shot 2 3 4
379 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 109 392 363 112
380 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 25
381 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient2 right  -> _m3_get_second_ingredient_2 49
382 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 82 297 305 309
383 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 177 178
384 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient1 right  -> _m3_get_second_ingredient_2 28
385 do_fill_shot shot15 ingredient3 left  -> m7_do_fill_shot 187 188 189
386 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 135 136
387 get_first_ingredient cocktail10 right  -> m2_get_first_ingredient 144 389 321 304
388 serve_shot shot4 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 72 355 75 76 77 78 79 80
389 do_fill_shot shot14 ingredient5 right  -> m9_do_fill_shot 145 146 147 148
390 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 234
391 get_first_ingredient cocktail3 right  -> m2_get_first_ingredient 41 338 298 364
392 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 110
393 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 5
394 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 107
395 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 21 334 380 400
396 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 194
397 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 212 285 277 215
398 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 156 157
399 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 103 352 394 295
400 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 right  -> _m2_get_first_ingredient_4 26
401 serve_shot shot5 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 93 303 96 97 98 99 100 101
402 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 27 384 319 30
403 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 172 326 357 175
404 do_clean_shot_m4_serve_shot_sip_2 shot1 left  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2> 12 13

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 21.649 MEMPEAK_KBS 766735.36
