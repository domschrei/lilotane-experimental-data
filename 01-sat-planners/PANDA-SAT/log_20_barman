PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p20.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p20.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p20.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 43
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Grounded planning graph ... done in 619ms.
	Number of Grounded Actions 3009
	Number of Grounded Literals 443
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 43
Grounding ... done.
	number of abstract tasks = 1290
	number of tasks = 3973
	number of decomposition methods = 4939
	number of predicates = 443
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1290
	number of tasks = 3973
	number of decomposition methods = 4939
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 415ms.
	Number of Grounded Actions 2683
	Number of Grounded Literals 413
	number of abstract tasks = 1290
	number of tasks = 3973
	number of decomposition methods = 4939
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1290
	number of tasks = 3973
	number of decomposition methods = 4939
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 882
	number of tasks = 3565
	number of decomposition methods = 4531
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 882
	number of tasks = 3565
	number of decomposition methods = 4531
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 882
	number of tasks = 3565
	number of decomposition methods = 4531
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 203ms.
	Number of Grounded Actions 2683
	Number of Grounded Literals 413
	number of abstract tasks = 882
	number of tasks = 3565
	number of decomposition methods = 4531
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 882
	number of tasks = 3565
	number of decomposition methods = 4251
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 882
	number of tasks = 3565
	number of decomposition methods = 4251
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 882
	number of tasks = 3565
	number of decomposition methods = 4251
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 882
	number of tasks = 3565
	number of decomposition methods = 4251
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 882
	number of tasks = 3565
	number of decomposition methods = 4251
	number of predicates = 413
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 1058
	number of epsilon methods = 0
	number of primitive tasks = 2683
	number of constants = 0
Tasks 2683 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767756ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854767319
done
initial PDT has 300 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 300 leafs
SHOP LEAFS 100
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 255234
Size 255192 at 0/2683
Size 253946 at 500/2683
Size 56999 at 1000/2683
Size 33998 at 1500/2683
Size 33998 at 2000/2683
Size 28732 at 2500/2683
Size 28732
Size 28406 at 0/2683
Size 22095 at 500/2683
Size 20693 at 1000/2683
Size 6157 at 1500/2683
Size 6157 at 2000/2683
Size 5556 at 2500/2683
Size 5556
Size 5556 at 0/2683
Size 5556 at 500/2683
Size 5515 at 1000/2683
Size 4409 at 1500/2683
Size 4409 at 2000/2683
Size 4383 at 2500/2683
Size 4383
Size 4353 at 0/2683
Size 4331 at 500/2683
Size 4323 at 1000/2683
Size 4105 at 1500/2683
Size 4105 at 2000/2683
Size 4093 at 2500/2683
Size 4093
Size 4091 at 0/2683
Size 4090 at 500/2683
Size 4090 at 1000/2683
Size 4080 at 1500/2683
Size 4080 at 2000/2683
Size 4079 at 2500/2683
Size 4079
Size 4079 at 0/2683
Size 4079 at 500/2683
Size 4079 at 1000/2683
Size 4079 at 1500/2683
Size 4079 at 2000/2683
Size 4079 at 2500/2683
Size 4079
Invariant time: 1.37
Number of invariants: 4079
Invariant Clauses 1227779
NUMBER OF CLAUSES 1881225
NUMBER OF STATE CLAUSES 1577684
NUMBER OF DECOMPOSITION CLAUSES 303541
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.86% 16.14% 0.0% 
NUMBER OF PATHS 300
Starting cryptominisat5.5
Setting starttime of solver to 1604475505792
Command exited with non-zero status 10
1.06 0.08

Time command gave the following runtime for the solver: 1140
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_4;1;2,3433 3433 _m2_get_first_ingredient_3
4;1;2 57 pathaction!3_4;1;2,1743
Consider method^3_7;3;1,969 969 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 83 pathaction!3_7;3;1,2932
Consider method^3_14;3;1,362 362 <_m4_serve_shot_2;do_clean_shot[shot15,cocktail7,left];m5_do_clean_shot;0;-1,-2>
14;3;1 361 pathaction!3_14;3;1,2926
Consider method^3_5;3;1,635 635 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 300 pathaction!3_5;3;1,2950
Consider method^2_7;2,2251 2251 m3_get_second_ingredient
7;2 114 pathaction!2_7;2,256
Consider method^2_3;3,296 296 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
3;3 130 pathaction!2_3;3,1316
Consider method^2_9;3,3847 3847 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
9;3 206 pathaction!2_9;3,1326
Consider method^3_7;2;1,1320 1320 _m3_get_second_ingredient_2
7;2;1 235 pathaction!3_7;2;1,881
Consider method^3_5;2;1,1027 1027 _m3_get_second_ingredient_2
5;2;1 340 pathaction!3_5;2;1,842
Consider method^2_1;3,273 273 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
1;3 92 pathaction!2_1;3,1320
Consider method^1_8,3998 3998 m0_do_cocktail_in_shot1
8 324 pathaction!1_8,2960
Consider method^3_13;1;1,1640 1640 m9_do_fill_shot
13;1;1 134 pathaction!3_13;1;1,645
Consider method^2_8;2,2264 2264 m3_get_second_ingredient
8;2 334 pathaction!2_8;2,266
Consider method^3_10;1;1,2698 2698 m9_do_fill_shot
10;1;1 416 pathaction!3_10;1;1,682
Consider method^3_0;3;1,2134 2134 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2>
0;3;1 143 pathaction!3_0;3;1,2929
Consider method^3_14;1;3,233 233 _m2_get_first_ingredient_4
14;1;3 31 pathaction!3_14;1;3,1056
Consider method^3_0;2;2,2646 2646 _m3_get_second_ingredient_3
0;2;2 410 pathaction!3_0;2;2,1194
Consider method^3_4;2;1,1701 1701 _m3_get_second_ingredient_2
4;2;1 63 pathaction!3_4;2;1,854
Consider method^2_1;2,2349 2349 m3_get_second_ingredient
1;2 283 pathaction!2_1;2,259
Consider method^2_0;3,30 30 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
0;3 372 pathaction!2_0;3,1325
Consider method^3_7;1;2,1846 1846 _m2_get_first_ingredient_3
7;1;2 217 pathaction!3_7;1;2,1784
Consider method^1_4,1037 1037 m0_do_cocktail_in_shot1
4 238 pathaction!1_4,2962
Consider method^2_12;1,616 616 m2_get_first_ingredient
12;1 156 pathaction!2_12;1,2881
Consider method^3_0;1;1,309 309 m8_do_fill_shot
0;1;1 244 pathaction!3_0;1;1,707
Consider method^3_3;1;3,233 233 _m2_get_first_ingredient_4
3;1;3 123 pathaction!3_3;1;3,1056
Consider method^3_6;1;2,1799 1799 _m2_get_first_ingredient_3
6;1;2 181 pathaction!3_6;1;2,1815
Consider method^3_9;2;2,2278 2278 _m3_get_second_ingredient_3
9;2;2 305 pathaction!3_9;2;2,1240
Consider method^3_12;1;3,1018 1018 _m2_get_first_ingredient_4
12;1;3 437 pathaction!3_12;1;3,1043
Consider method^2_2;2,1761 1761 m3_get_second_ingredient
2;2 110 pathaction!2_2;2,273
Consider method^3_2;1;3,3741 3741 _m2_get_first_ingredient_4
2;1;3 194 pathaction!3_2;1;3,1029
Consider method^2_14;1,3450 3450 m2_get_first_ingredient
14;1 326 pathaction!2_14;1,2871
Consider method^2_0;1,1137 1137 m2_get_first_ingredient
0;1 25 pathaction!2_0;1,2876
Consider method^3_6;2;1,1701 1701 _m3_get_second_ingredient_2
6;2;1 115 pathaction!3_6;2;1,854
Consider method^3_4;3;1,191 191 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 107 pathaction!3_4;3;1,2928
Consider method^2_9;2,2012 2012 m3_get_second_ingredient
9;2 56 pathaction!2_9;2,263
Consider method^3_12;1;2,1846 1846 _m2_get_first_ingredient_3
12;1;2 344 pathaction!3_12;1;2,1784
Consider method^2_1;1,3658 3658 m2_get_first_ingredient
1;1 228 pathaction!2_1;1,2873
Consider method^3_0;2;1,1027 1027 _m3_get_second_ingredient_2
0;2;1 182 pathaction!3_0;2;1,842
Consider method^3_7;1;3,1018 1018 _m2_get_first_ingredient_4
7;1;3 84 pathaction!3_7;1;3,1043
Consider method^3_9;1;2,3433 3433 _m2_get_first_ingredient_3
9;1;2 170 pathaction!3_9;1;2,1743
Consider method^3_1;3;1,476 476 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2>
1;3;1 236 pathaction!3_1;3;1,2946
Consider method^2_3;1,3450 3450 m2_get_first_ingredient
3;1 152 pathaction!2_3;1,2871
Consider method^1_2,704 704 m0_do_cocktail_in_shot1
2 157 pathaction!1_2,2966
Consider method^2_5;3,3587 3587 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
5;3 269 pathaction!2_5;3,1318
Consider method^3_5;1;2,3241 3241 _m2_get_first_ingredient_3
5;1;2 36 pathaction!3_5;1;2,1847
Consider method^2_2;1,371 371 m2_get_first_ingredient
2;1 325 pathaction!2_2;1,2887
Consider method^2_2;3,1149 1149 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
2;3 414 pathaction!2_2;3,1328
Consider method^3_3;1;2,1090 1090 _m2_get_first_ingredient_3
3;1;2 352 pathaction!3_3;1;2,1807
Consider method^1_6,3620 3620 m0_do_cocktail_in_shot1
6 187 pathaction!1_6,2957
Consider method^3_13;1;2,1846 1846 _m2_get_first_ingredient_3
13;1;2 250 pathaction!3_13;1;2,1784
Consider method^3_2;3;1,2407 2407 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 108 pathaction!3_2;3;1,2953
Consider method^3_14;1;2,1090 1090 _m2_get_first_ingredient_3
14;1;2 276 pathaction!3_14;1;2,1807
Consider method^3_2;2;2,2071 2071 _m3_get_second_ingredient_3
2;2;2 174 pathaction!3_2;2;2,1143
Consider method^1_14,3522 3522 m0_do_cocktail_in_shot1
14 347 pathaction!1_14,2967
Consider method^3_8;1;2,2370 2370 _m2_get_first_ingredient_3
8;1;2 144 pathaction!3_8;1;2,1856
Consider method^3_2;1;1,1925 1925 m8_do_fill_shot
2;1;1 422 pathaction!3_2;1;1,631
Consider method^3_9;1;3,2503 2503 _m2_get_first_ingredient_4
9;1;3 159 pathaction!3_9;1;3,1001
Consider method^2_13;1,2686 2686 m2_get_first_ingredient
13;1 384 pathaction!2_13;1,2870
Consider method^3_6;3;1,2309 2309 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 81 pathaction!3_6;3;1,2940
Consider method^1_12,4163 4163 m0_do_cocktail_in_shot1
12 171 pathaction!1_12,2961
Consider method^3_12;2;1,3018 3018 _m3_get_second_ingredient_2
12;2;1 4 pathaction!3_12;2;1,866
Consider method^3_2;1;2,2320 2320 _m2_get_first_ingredient_3
2;1;2 304 pathaction!3_2;1;2,1760
Consider method^3_13;3;1,3268 3268 <_m4_serve_shot_2;do_clean_shot[shot14,cocktail8,right];m5_do_clean_shot;0;-1,-2>
13;3;1 85 pathaction!3_13;3;1,2941
Consider method^3_6;2;2,839 839 _m3_get_second_ingredient_3
6;2;2 312 pathaction!3_6;2;2,1168
Consider method^3_0;1;3,4011 4011 _m2_get_first_ingredient_4
0;1;3 27 pathaction!3_0;1;3,1105
Consider method^3_9;3;1,1051 1051 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2>
9;3;1 70 pathaction!3_9;3;1,2930
Consider method^3_5;2;2,2646 2646 _m3_get_second_ingredient_3
5;2;2 329 pathaction!3_5;2;2,1194
Consider method^3_12;1;1,3027 3027 m9_do_fill_shot
12;1;1 61 pathaction!3_12;1;1,645
Consider method^3_8;1;1,1743 1743 m9_do_fill_shot
8;1;1 9 pathaction!3_8;1;1,682
Consider method^3_8;2;2,2071 2071 _m3_get_second_ingredient_3
8;2;2 71 pathaction!3_8;2;2,1143
Consider method^2_7;1,2686 2686 m2_get_first_ingredient
7;1 118 pathaction!2_7;1,2870
Consider method^2_12;2,1148 1148 m3_get_second_ingredient
12;2 41 pathaction!2_12;2,267
Consider method^3_10;3;1,808 808 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail2,right];m5_do_clean_shot;0;-1,-2>
10;3;1 150 pathaction!3_10;3;1,2947
Consider method^3_1;1;3,637 637 _m2_get_first_ingredient_4
1;1;3 80 pathaction!3_1;1;3,1101
Consider method^3_1;2;1,1027 1027 _m3_get_second_ingredient_2
1;2;1 39 pathaction!3_1;2;1,842
Consider method^2_11;1,3563 3563 m9_do_fill_shot
11;1 200 pathaction!2_11;1,603
Consider method^3_3;3;1,1217 1217 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2>
3;3;1 341 pathaction!3_3;3;1,2949
Consider method^3_10;2;2,2071 2071 _m3_get_second_ingredient_3
10;2;2 178 pathaction!3_10;2;2,1143
Consider method^3_14;1;1,2212 2212 m7_do_fill_shot
14;1;1 45 pathaction!3_14;1;1,658
Consider method^2_0;2,2514 2514 m3_get_second_ingredient
0;2 386 pathaction!2_0;2,262
Consider method^3_1;2;2,2646 2646 _m3_get_second_ingredient_3
1;2;2 75 pathaction!3_1;2;2,1194
Consider method^3_6;1;1,1983 1983 m9_do_fill_shot
6;1;1 190 pathaction!3_6;1;1,677
Consider method^3_7;2;2,4198 4198 _m3_get_second_ingredient_3
7;2;2 95 pathaction!3_7;2;2,1203
Consider method^3_14;2;2,2590 2590 _m3_get_second_ingredient_3
14;2;2 394 pathaction!3_14;2;2,1169
Consider method^1_11,1188 1188 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
11 255 pathaction!1_11,3563
Consider method^3_2;2;1,4229 4229 _m3_get_second_ingredient_2
2;2;1 72 pathaction!3_2;2;1,879
Consider method^2_7;3,2759 2759 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
7;3 425 pathaction!2_7;3,1317
Consider method^3_10;1;3,3261 3261 _m2_get_first_ingredient_4
10;1;3 354 pathaction!3_10;1;3,1080
Consider method^3_7;1;1,3027 3027 m9_do_fill_shot
7;1;1 413 pathaction!3_7;1;1,645
Consider method^3_14;2;1,758 758 _m3_get_second_ingredient_2
14;2;1 263 pathaction!3_14;2;1,827
Consider method^3_6;1;3,2758 2758 _m2_get_first_ingredient_4
6;1;3 218 pathaction!3_6;1;3,1075
Consider method^1_3,1637 1637 m0_do_cocktail_in_shot1
3 374 pathaction!1_3,2954
Consider method^3_4;2;2,839 839 _m3_get_second_ingredient_3
4;2;2 285 pathaction!3_4;2;2,1168
Consider method^1_13,196 196 m0_do_cocktail_in_shot1
13 166 pathaction!1_13,2965
Consider method^2_10;3,2805 2805 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot11,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
10;3 391 pathaction!2_10;3,1321
Consider method^3_8;1;3,3261 3261 _m2_get_first_ingredient_4
8;1;3 127 pathaction!3_8;1;3,1080
Consider method^1_9,1233 1233 m0_do_cocktail_in_shot1
9 392 pathaction!1_9,2964
Consider method^3_4;1;1,3563 3563 m9_do_fill_shot
4;1;1 192 pathaction!3_4;1;1,603
Consider method^2_9;1,3451 3451 m2_get_first_ingredient
9;1 17 pathaction!2_9;1,2877
Consider method^3_5;1;3,2614 2614 _m2_get_first_ingredient_4
5;1;3 221 pathaction!3_5;1;3,1019
Consider method^3_3;2;2,2590 2590 _m3_get_second_ingredient_3
3;2;2 290 pathaction!3_3;2;2,1169
Consider method^3_12;3;1,820 820 <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,right];m5_do_clean_shot;0;-1,-2>
12;3;1 64 pathaction!3_12;3;1,2927
Consider method^2_14;2,2395 2395 m3_get_second_ingredient
14;2 24 pathaction!2_14;2,257
Consider method^2_8;3,2464 2464 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
8;3 298 pathaction!2_8;3,1322
Consider method^2_4;3,2530 2530 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
4;3 186 pathaction!2_4;3,1324
Consider method^3_1;1;2,3126 3126 _m2_get_first_ingredient_3
1;1;2 121 pathaction!3_1;1;2,1781
Consider method^2_10;1,2918 2918 m2_get_first_ingredient
10;1 231 pathaction!2_10;1,2872
Consider method^2_14;3,3756 3756 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot15,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
14;3 32 pathaction!2_14;3,1329
Consider method^2_3;2,2395 2395 m3_get_second_ingredient
3;2 142 pathaction!2_3;2,257
Consider method^3_8;3;1,3572 3572 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 385 pathaction!3_8;3;1,2935
Consider method^2_6;1,2279 2279 m2_get_first_ingredient
6;1 207 pathaction!2_6;1,2875
Consider method^3_1;1;1,2950 2950 m9_do_fill_shot
1;1;1 364 pathaction!3_1;1;1,703
Consider method^3_10;1;2,2370 2370 _m2_get_first_ingredient_3
10;1;2 229 pathaction!3_10;1;2,1856
Consider method^1_5,2902 2902 m0_do_cocktail_in_shot1
5 284 pathaction!1_5,2956
Consider method^3_12;2;2,2795 2795 _m3_get_second_ingredient_3
12;2;2 58 pathaction!3_12;2;2,1214
Consider method^3_4;1;3,2503 2503 _m2_get_first_ingredient_4
4;1;3 315 pathaction!3_4;1;3,1001
Consider method^2_5;1,3376 3376 m2_get_first_ingredient
5;1 6 pathaction!2_5;1,2883
Consider method^3_13;2;1,1320 1320 _m3_get_second_ingredient_2
13;2;1 35 pathaction!3_13;2;1,881
Consider method^2_13;3,2448 2448 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot14,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
13;3 96 pathaction!2_13;3,1327
Consider method^2_13;2,2251 2251 m3_get_second_ingredient
13;2 359 pathaction!2_13;2,256
Consider method^2_6;2,1626 1626 m3_get_second_ingredient
6;2 93 pathaction!2_6;2,261
Consider method^3_13;2;2,4198 4198 _m3_get_second_ingredient_3
13;2;2 265 pathaction!3_13;2;2,1203
Consider method^1_1,942 942 m0_do_cocktail_in_shot1
1 40 pathaction!1_1,2958
Consider method^2_10;2,3397 3397 m3_get_second_ingredient
10;2 34 pathaction!2_10;2,258
Consider method^3_9;1;1,3563 3563 m9_do_fill_shot
9;1;1 199 pathaction!3_9;1;1,603
Consider method^3_5;1;1,3974 3974 m9_do_fill_shot
5;1;1 185 pathaction!3_5;1;1,621
Consider method^2_6;3,1064 1064 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
6;3 240 pathaction!2_6;3,1319
Consider method^1_0,2121 2121 m0_do_cocktail_in_shot1
0 183 pathaction!1_0,2963
Consider method^3_13;1;3,1018 1018 _m2_get_first_ingredient_4
13;1;3 54 pathaction!3_13;1;3,1043
Consider method^3_9;2;1,2265 2265 _m3_get_second_ingredient_2
9;2;1 219 pathaction!3_9;2;1,936
Consider method^3_8;2;1,4229 4229 _m3_get_second_ingredient_2
8;2;1 367 pathaction!3_8;2;1,879
Consider method^3_3;2;1,758 758 _m3_get_second_ingredient_2
3;2;1 43 pathaction!3_3;2;1,827
Consider method^2_5;2,2637 2637 m3_get_second_ingredient
5;2 138 pathaction!2_5;2,269
Consider method^2_4;1,3903 3903 m2_get_first_ingredient
4;1 129 pathaction!2_4;1,2889
Consider method^3_10;2;1,4229 4229 _m3_get_second_ingredient_2
10;2;1 297 pathaction!3_10;2;1,879
Consider method^2_4;2,3420 3420 m3_get_second_ingredient
4;2 249 pathaction!2_4;2,275
Consider method^1_7,3532 3532 m0_do_cocktail_in_shot1
7 53 pathaction!1_7,2955
Consider method^3_3;1;1,2212 2212 m7_do_fill_shot
3;1;1 153 pathaction!3_3;1;1,658
Consider method^2_12;3,1714 1714 <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot13,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>
12;3 94 pathaction!2_12;3,1323
Consider method^1_10,3105 3105 m0_do_cocktail_in_shot1
10 227 pathaction!1_10,2959
Consider method^3_0;1;2,221 221 _m2_get_first_ingredient_3
0;1;2 141 pathaction!3_0;1;2,1786
Consider method^0_,4250 4250 __top_1
 363 pathaction!0_,3564
Consider method^2_8;1,902 902 m2_get_first_ingredient
8;1 293 pathaction!2_8;1,2880


CHECKING primitive solution of length 296 ...
true 177 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 337 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot16;]
true 313 __method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser2,ingredient2;]
true 350 grasp[left,shot16;]
true 278 fill-shot[shot16,ingredient2,left,right,dispenser2;]
true 419 pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1;]
true 261 clean-shot[shot16,ingredient2,left,right;]
true 19 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient5,left,shot16;]
true 270 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 415 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 214 leave[left,shot16;]
true 224 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient5;]
true 232 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 309 nop[;]
true 287 grasp[right,shaker1;]
true 429 shake[cocktail4,ingredient2,ingredient5,shaker1,right,left;]
true 164 pour-shaker-to-shot[cocktail4,shot1,right,shaker1,l2,l1;]
true 366 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 184 clean-shaker[right,left,shaker1;]
true 264 leave[right,shaker1;]
true 342 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 310 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot16;]
true 204 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient5,dispenser3;]
true 268 grasp[left,shot16;]
true 66 clean-shot[shot16,ingredient5,left,right;]
true 273 fill-shot[shot16,ingredient3,left,right,dispenser3;]
true 408 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1;]
true 251 clean-shot[shot16,ingredient3,left,right;]
true 303 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient5,left,shot16;]
true 131 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 314 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 209 leave[left,shot16;]
true 316 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient5;]
true 148 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 370 nop[;]
true 405 grasp[left,shaker1;]
true 377 shake[cocktail3,ingredient3,ingredient5,shaker1,left,right;]
true 212 pour-shaker-to-shot[cocktail3,shot2,left,shaker1,l2,l1;]
true 13 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 78 clean-shaker[left,right,shaker1;]
true 11 leave[left,shaker1;]
true 132 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 67 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot12;]
true 102 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser4,ingredient4;]
true 49 grasp[right,shot12;]
true 126 fill-shot[shot12,ingredient4,right,left,dispenser4;]
true 162 pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,right,l0,l1;]
true 299 clean-shot[shot12,ingredient4,right,left;]
true 365 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient2,right,shot12;]
true 282 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 343 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2;]
true 106 leave[right,shot12;]
true 47 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient2;]
true 136 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 109 nop[;]
true 241 grasp[right,shaker1;]
true 208 shake[cocktail6,ingredient4,ingredient2,shaker1,right,left;]
true 161 pour-shaker-to-shot[cocktail6,shot3,right,shaker1,l2,l1;]
true 223 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 77 clean-shaker[right,left,shaker1;]
true 69 leave[right,shaker1;]
true 327 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 306 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient5,shot16;]
true 225 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient5,dispenser5;]
true 281 grasp[right,shot16;]
true 262 refill-shot[shot16,ingredient5,right,left,dispenser5;]
true 158 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1;]
true 101 clean-shot[shot16,ingredient5,right,left;]
true 179 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,right,shot16;]
true 44 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 180 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,right,l1,l2;]
true 98 leave[right,shot16;]
true 406 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient5,ingredient2;]
true 435 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 213 nop[;]
true 288 grasp[left,shaker1;]
true 246 shake[cocktail1,ingredient5,ingredient2,shaker1,left,right;]
true 10 pour-shaker-to-shot[cocktail1,shot4,left,shaker1,l2,l1;]
true 248 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 381 clean-shaker[left,right,shaker1;]
true 378 leave[left,shaker1;]
true 62 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 433 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot12;]
true 375 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient2,dispenser3;]
true 173 grasp[left,shot12;]
true 234 clean-shot[shot12,ingredient2,left,right;]
true 292 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 399 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,left,l0,l1;]
true 100 clean-shot[shot12,ingredient3,left,right;]
true 22 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot12;]
true 311 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 418 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2;]
true 274 leave[left,shot12;]
true 216 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient4;]
true 330 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 3 nop[;]
true 275 grasp[left,shaker1;]
true 151 shake[cocktail8,ingredient3,ingredient4,shaker1,left,right;]
true 357 pour-shaker-to-shot[cocktail8,shot5,left,shaker1,l2,l1;]
true 302 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 280 clean-shaker[left,right,shaker1;]
true 86 leave[left,shaker1;]
true 154 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 1 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot16;]
true 349 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient4,ingredient2,dispenser4;]
true 438 grasp[left,shot16;]
true 382 clean-shot[shot16,ingredient2,left,right;]
true 256 fill-shot[shot16,ingredient4,left,right,dispenser4;]
true 258 pour-shot-to-clean-shaker[shot16,ingredient4,shaker1,left,l0,l1;]
true 120 clean-shot[shot16,ingredient4,left,right;]
true 103 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient5,left,shot16;]
true 99 fill-shot[shot16,ingredient5,left,right,dispenser5;]
true 163 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2;]
true 318 leave[left,shot16;]
true 198 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient5;]
true 355 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 68 nop[;]
true 333 grasp[left,shaker1;]
true 395 shake[cocktail9,ingredient4,ingredient5,shaker1,left,right;]
true 257 pour-shaker-to-shot[cocktail9,shot6,left,shaker1,l2,l1;]
true 189 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 332 clean-shaker[left,right,shaker1;]
true 16 leave[left,shaker1;]
true 91 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 431 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot12;]
true 226 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient4,dispenser5;]
true 155 grasp[left,shot12;]
true 51 clean-shot[shot12,ingredient4,left,right;]
true 400 fill-shot[shot12,ingredient5,left,right,dispenser5;]
true 322 pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,left,l0,l1;]
true 420 clean-shot[shot12,ingredient5,left,right;]
true 356 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,left,shot12;]
true 253 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 140 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2;]
true 197 leave[left,shot12;]
true 52 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient4;]
true 160 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 8 nop[;]
true 112 grasp[left,shaker1;]
true 279 shake[cocktail7,ingredient5,ingredient4,shaker1,left,right;]
true 388 pour-shaker-to-shot[cocktail7,shot7,left,shaker1,l2,l1;]
true 426 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 119 clean-shaker[left,right,shaker1;]
true 260 leave[left,shaker1;]
true 379 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 393 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot16;]
true 362 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient5,dispenser3;]
true 376 grasp[right,shot16;]
true 403 clean-shot[shot16,ingredient5,right,left;]
true 74 fill-shot[shot16,ingredient3,right,left,dispenser3;]
true 242 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1;]
true 335 clean-shot[shot16,ingredient3,right,left;]
true 175 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient5,right,shot16;]
true 90 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 105 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2;]
true 211 leave[right,shot16;]
true 358 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient5;]
true 412 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 59 nop[;]
true 7 grasp[right,shaker1;]
true 291 shake[cocktail11,ingredient3,ingredient5,shaker1,right,left;]
true 23 pour-shaker-to-shot[cocktail11,shot8,right,shaker1,l2,l1;]
true 428 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 239 clean-shaker[right,left,shaker1;]
true 202 leave[right,shaker1;]
true 176 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 128 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient5,shot12;]
true 196 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient4,dispenser5;]
true 351 grasp[right,shot12;]
true 371 clean-shot[shot12,ingredient4,right,left;]
true 230 fill-shot[shot12,ingredient5,right,left,dispenser5;]
true 434 pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,right,l0,l1;]
true 222 clean-shot[shot12,ingredient5,right,left;]
true 295 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient2,right,shot12;]
true 48 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 46 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2;]
true 169 leave[right,shot12;]
true 135 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient5,ingredient2;]
true 267 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 87 nop[;]
true 237 grasp[right,shaker1;]
true 259 shake[cocktail2,ingredient5,ingredient2,shaker1,right,left;]
true 191 pour-shaker-to-shot[cocktail2,shot9,right,shaker1,l2,l1;]
true 14 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 195 clean-shaker[right,left,shaker1;]
true 165 leave[right,shaker1;]
true 38 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 89 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot12;]
true 147 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient2,dispenser3;]
true 15 grasp[left,shot12;]
true 97 clean-shot[shot12,ingredient2,left,right;]
true 133 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 29 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,left,l0,l1;]
true 145 clean-shot[shot12,ingredient3,left,right;]
true 117 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,left,shot12;]
true 33 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 307 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2;]
true 369 leave[left,shot12;]
true 401 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient1;]
true 76 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 390 nop[;]
true 320 grasp[right,shaker1;]
true 319 shake[cocktail10,ingredient3,ingredient1,shaker1,right,left;]
true 430 pour-shaker-to-shot[cocktail10,shot10,right,shaker1,l2,l1;]
true 328 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 26 clean-shaker[right,left,shaker1;]
true 20 leave[right,shaker1;]
true 104 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 271 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient5,shot12;]
true 432 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient1,dispenser5;]
true 88 grasp[right,shot12;]
true 233 clean-shot[shot12,ingredient1,right,left;]
true 323 fill-shot[shot12,ingredient5,right,left,dispenser5;]
true 193 pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,right,l0,l1;]
true 436 clean-shot[shot12,ingredient5,right,left;]
true 215 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot12;]
true 421 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 423 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2;]
true 402 leave[right,shot12;]
true 398 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient5,ingredient2;]
true 167 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 373 nop[;]
true 201 grasp[left,shaker1;]
true 296 shake[cocktail5,ingredient5,ingredient2,shaker1,left,right;]
true 149 pour-shaker-to-shot[cocktail5,shot11,left,shaker1,l2,l1;]
true 5 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 245 clean-shaker[left,right,shaker1;]
true 243 leave[left,shaker1;]
true 348 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 346 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient2,dispenser3;]
true 380 grasp[left,shot12;]
true 383 clean-shot[shot12,ingredient2,left,right;]
true 188 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 277 leave[left,shot12;]
true 2 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right;]
true 21 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot16;]
true 42 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient5,dispenser3;]
true 220 grasp[right,shot16;]
true 55 clean-shot[shot16,ingredient5,right,left;]
true 254 fill-shot[shot16,ingredient3,right,left,dispenser3;]
true 427 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1;]
true 50 clean-shot[shot16,ingredient3,right,left;]
true 272 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,right,shot16;]
true 125 fill-shot[shot16,ingredient4,right,left,dispenser4;]
true 409 pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2;]
true 82 leave[right,shot16;]
true 111 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient4;]
true 116 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 65 nop[;]
true 12 grasp[left,shaker1;]
true 168 shake[cocktail8,ingredient3,ingredient4,shaker1,left,right;]
true 137 pour-shaker-to-shot[cocktail8,shot13,left,shaker1,l2,l1;]
true 411 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 321 clean-shaker[left,right,shaker1;]
true 301 leave[left,shaker1;]
true 389 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,right;]
true 18 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot16;]
true 404 __method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient4,dispenser3;]
true 124 grasp[right,shot16;]
true 113 clean-shot[shot16,ingredient4,right,left;]
true 247 fill-shot[shot16,ingredient3,right,left,dispenser3;]
true 317 pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1;]
true 79 clean-shot[shot16,ingredient3,right,left;]
true 294 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient5,right,shot16;]
true 345 fill-shot[shot16,ingredient5,right,left,dispenser5;]
true 387 pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2;]
true 122 leave[right,shot16;]
true 203 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient5;]
true 407 __method_precondition_m5_do_clean_shot_5_precondition[shot14;]
true 368 nop[;]
true 139 grasp[left,shaker1;]
true 331 shake[cocktail11,ingredient3,ingredient5,shaker1,left,right;]
true 360 pour-shaker-to-shot[cocktail11,shot14,left,shaker1,l2,l1;]
true 336 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 424 clean-shaker[left,right,shaker1;]
true 73 leave[left,shaker1;]
true 266 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,right;]
true 146 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient5,shot16;]
true 339 __method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient5,dispenser5;]
true 60 grasp[right,shot16;]
true 0 refill-shot[shot16,ingredient5,right,left,dispenser5;]
true 172 pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1;]
true 30 clean-shot[shot16,ingredient5,right,left;]
true 338 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,right,shot16;]
true 289 fill-shot[shot16,ingredient2,right,left,dispenser2;]
true 308 pour-shot-to-used-shaker[shot16,ingredient2,shaker1,right,l1,l2;]
true 210 leave[right,shot16;]
true 417 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient5,ingredient2;]
true 252 __method_precondition_m5_do_clean_shot_5_precondition[shot15;]
true 397 nop[;]
true 396 grasp[right,shaker1;]
true 205 shake[cocktail1,ingredient5,ingredient2,shaker1,right,left;]
true 353 pour-shaker-to-shot[cocktail1,shot15,right,shaker1,l2,l1;]
true 28 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 286 clean-shaker[right,left,shaker1;]
true 37 leave[right,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 587676728
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 413
number of actions                    = 3565
number of abstract actions           = 882
number of primitive actions          = 2683
number of methods                    = 4251
number of primitive shop actions     = 1058
number of primitive non-shop actions = 1625
size of largest method               = 15
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 335641
number of clauses               = 1881225
average size of clauses         = 2.400435354622653
number of assert                = 182
number of horn                  = 1647477
K offset                        = 0
K chosen value                  = 4
state formula                   = 1577684
method children clauses         = 0
number of paths                 = 300
maximum plan length             = 300
number of decomposition clauses = 303541
number of ordering clauses      = 0
number of state clauses         = 1577684
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 18618
============ parsing ============
total                         = 1142
file parser                   = 613
sort expansion                = 266
closed world assumption       = 137
inherit preconditions         = 0
shop methods                  = 11
eliminate identical variables = 48
strip domain of hybridity     = 1
flatten formula               = 64
============ preprocessing ============
total                                      = 6267
compile negative preconditions             = 58
compile unit methods                       = 0
split parameter                            = 41
expand choiceless abstract tasks           = 585
compile methods with identical tasks       = 28
removing unnecessary predicates            = 959
lifted reachabiltiy analysis               = 103
grounded planning graph analysis           = 1755
grounded task decomposition graph analysis = 2020
grounding                                  = 666
create artificial top task                 = 12
============ search preparation ============
compute state invariants = 1768
============ sat ============
total                                        = 8293
generate formula                             = 5708
generate path decomposition tree             = 432
normalise path decomposition tree            = 112
sog optimisation                             = 88
translate path decomposition tree to clauses = 917
generate state formula                       = 5481
generate state invariant formula             = 779
transform to DIMACS                          = 1031
SAT solver                                   = 1140
SAT solver for K=0004                        = 1140

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2683";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="882";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="587676728";"40 sat:20:state formula"="1577684";"40 sat:01:number of variables"="335641";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="300";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="4251";"30 problem:07:number of primitive shop actions"="1058";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3565";"30 problem:08:number of primitive non-shop actions"="1625";"30 problem:02:number of predicates"="413";"40 sat:03:number of horn"="1647477";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="15";"40 sat:03:average size of clauses"="2.400435354622653";"40 sat:02:number of clauses"="1881225";"40 sat:50:number of state clauses"="1577684";"40 sat:03:number of assert"="182";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="300";"40 sat:50:number of decomposition clauses"="303541";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="613";"01 parsing:08:flatten formula"="64";"40 sat:41:SAT solver for K=0004"="1140";"40 sat:00:total"="8293";"40 sat:16:generate state formula"="5481";"40 sat:20:transform to DIMACS"="1031";"40 sat:11:generate path decomposition tree"="432";"02 preprocessing:07:compile methods with identical tasks"="28";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="959";"01 parsing:03:closed world assumption"="137";"02 preprocessing:11:lifted reachabiltiy analysis"="103";"01 parsing:02:sort expansion"="266";"40 sat:12:normalise path decomposition tree"="112";"40 sat:40:SAT solver"="1140";"01 parsing:00:total"="1142";"40 sat:10:generate formula"="5708";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="58";"00 total:00:total"="18618";"40 sat:13:sog optimisation"="88";"02 preprocessing:12:grounded planning graph analysis"="1755";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="2020";"02 preprocessing:04:split parameter"="41";"01 parsing:05:shop methods"="11";"10 search preparation:02:compute state invariants"="1768";"01 parsing:06:eliminate identical variables"="48";"40 sat:15:translate path decomposition tree to clauses"="917";"02 preprocessing:05:expand choiceless abstract tasks"="585";"40 sat:17:generate state invariant formula"="779";"02 preprocessing:00:total"="6267";"02 preprocessing:99:create artificial top task"="12";"02 preprocessing:84:grounding"="666"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient2,shot16];__method_precondition_m8_do_fill_shot_8_precondition[shot16,dispenser2,ingredient2];grasp[left,shot16];fill-shot[shot16,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot16,ingredient2,shaker1,left,l0,l1];clean-shot[shot16,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient5,left,shot16];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[right,shaker1];shake[cocktail4,ingredient2,ingredient5,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot1,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient5,dispenser3];grasp[left,shot16];clean-shot[shot16,ingredient5,left,right];fill-shot[shot16,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,left,l0,l1];clean-shot[shot16,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient5,left,shot16];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[left,shaker1];shake[cocktail3,ingredient3,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot2,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot12];__method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser4,ingredient4];grasp[right,shot12];fill-shot[shot12,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,right,l0,l1];clean-shot[shot12,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient2,right,shot12];fill-shot[shot12,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail6,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient5,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient5,dispenser5];grasp[right,shot16];refill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1];clean-shot[shot16,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,right,shot16];fill-shot[shot16,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail1,ingredient5,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient2,dispenser3];grasp[left,shot12];clean-shot[shot12,ingredient2,left,right];fill-shot[shot12,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,left,l0,l1];clean-shot[shot12,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot12];fill-shot[shot12,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail8,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail8,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail8,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient4,ingredient2,dispenser4];grasp[left,shot16];clean-shot[shot16,ingredient2,left,right];fill-shot[shot16,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot16,ingredient4,shaker1,left,l0,l1];clean-shot[shot16,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient5,left,shot16];fill-shot[shot16,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,left,l1,l2];leave[left,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail9,ingredient4,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail9,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail9,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient4,dispenser5];grasp[left,shot12];clean-shot[shot12,ingredient4,left,right];fill-shot[shot12,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,left,l0,l1];clean-shot[shot12,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,left,shot12];fill-shot[shot12,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail7,ingredient5,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient5,dispenser3];grasp[right,shot16];clean-shot[shot16,ingredient5,right,left];fill-shot[shot16,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1];clean-shot[shot16,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient5,right,shot16];fill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail11,ingredient3,ingredient5,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient5,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient4,dispenser5];grasp[right,shot12];clean-shot[shot12,ingredient4,right,left];fill-shot[shot12,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,right,l0,l1];clean-shot[shot12,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient2,right,shot12];fill-shot[shot12,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail2,ingredient5,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient2,dispenser3];grasp[left,shot12];clean-shot[shot12,ingredient2,left,right];fill-shot[shot12,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,left,l0,l1];clean-shot[shot12,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient1,left,shot12];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[right,shaker1];shake[cocktail10,ingredient3,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot10,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient5,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient5,ingredient1,dispenser5];grasp[right,shot12];clean-shot[shot12,ingredient1,right,left];fill-shot[shot12,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,right,l0,l1];clean-shot[shot12,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot12];fill-shot[shot12,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot12,ingredient2,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[left,shaker1];shake[cocktail5,ingredient5,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot11,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient2,dispenser3];grasp[left,shot12];clean-shot[shot12,ingredient2,left,right];fill-shot[shot12,ingredient3,left,right,dispenser3];leave[left,shot12];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient5,dispenser3];grasp[right,shot16];clean-shot[shot16,ingredient5,right,left];fill-shot[shot16,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1];clean-shot[shot16,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,right,shot16];fill-shot[shot16,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot16,ingredient4,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot13];nop[];grasp[left,shaker1];shake[cocktail8,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail8,shot13,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail8,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot16];__method_precondition_m9_do_fill_shot_9_precondition[shot16,ingredient3,ingredient4,dispenser3];grasp[right,shot16];clean-shot[shot16,ingredient4,right,left];fill-shot[shot16,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot16,ingredient3,shaker1,right,l0,l1];clean-shot[shot16,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient5,right,shot16];fill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot16,ingredient5,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot14];nop[];grasp[left,shaker1];shake[cocktail11,ingredient3,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail11,shot14,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail11,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot15,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient5,shot16];__method_precondition_m7_do_fill_shot_7_precondition[shot16,ingredient5,dispenser5];grasp[right,shot16];refill-shot[shot16,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot16,ingredient5,shaker1,right,l0,l1];clean-shot[shot16,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,right,shot16];fill-shot[shot16,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot16,ingredient2,shaker1,right,l1,l2];leave[right,shot16];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot15];nop[];grasp[right,shaker1];shake[cocktail1,ingredient5,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail1,shot15,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail1,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient2 shot16 
2 __method_precondition_m8_do_fill_shot_8_precondition shot16 dispenser2 ingredient2 
3 grasp left shot16 
4 fill-shot shot16 ingredient2 left right dispenser2 
5 pour-shot-to-clean-shaker shot16 ingredient2 shaker1 left l0 l1 
6 clean-shot shot16 ingredient2 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient5 left shot16 
8 fill-shot shot16 ingredient5 left right dispenser5 
9 pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 
10 leave left shot16 
11 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient2 ingredient5 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp right shaker1 
15 shake cocktail4 ingredient2 ingredient5 shaker1 right left 
16 pour-shaker-to-shot cocktail4 shot1 right shaker1 l2 l1 
17 empty-shaker right shaker1 cocktail4 l1 l0 
18 clean-shaker right left shaker1 
19 leave right shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 left 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient3 shot16 
22 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient3 ingredient5 dispenser3 
23 grasp left shot16 
24 clean-shot shot16 ingredient5 left right 
25 fill-shot shot16 ingredient3 left right dispenser3 
26 pour-shot-to-clean-shaker shot16 ingredient3 shaker1 left l0 l1 
27 clean-shot shot16 ingredient3 left right 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient5 left shot16 
29 fill-shot shot16 ingredient5 left right dispenser5 
30 pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 
31 leave left shot16 
32 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient3 ingredient5 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp left shaker1 
36 shake cocktail3 ingredient3 ingredient5 shaker1 left right 
37 pour-shaker-to-shot cocktail3 shot2 left shaker1 l2 l1 
38 empty-shaker left shaker1 cocktail3 l1 l0 
39 clean-shaker left right shaker1 
40 leave left shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 right 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient4 shot12 
43 __method_precondition_m8_do_fill_shot_8_precondition shot12 dispenser4 ingredient4 
44 grasp right shot12 
45 fill-shot shot12 ingredient4 right left dispenser4 
46 pour-shot-to-clean-shaker shot12 ingredient4 shaker1 right l0 l1 
47 clean-shot shot12 ingredient4 right left 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient2 right shot12 
49 fill-shot shot12 ingredient2 right left dispenser2 
50 pour-shot-to-used-shaker shot12 ingredient2 shaker1 right l1 l2 
51 leave right shot12 
52 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient4 ingredient2 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp right shaker1 
56 shake cocktail6 ingredient4 ingredient2 shaker1 right left 
57 pour-shaker-to-shot cocktail6 shot3 right shaker1 l2 l1 
58 empty-shaker right shaker1 cocktail6 l1 l0 
59 clean-shaker right left shaker1 
60 leave right shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 right 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient5 shot16 
63 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient5 dispenser5 
64 grasp right shot16 
65 refill-shot shot16 ingredient5 right left dispenser5 
66 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 
67 clean-shot shot16 ingredient5 right left 
68 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient2 right shot16 
69 fill-shot shot16 ingredient2 right left dispenser2 
70 pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 
71 leave right shot16 
72 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient5 ingredient2 
73 __method_precondition_m5_do_clean_shot_5_precondition shot4 
74 nop  
75 grasp left shaker1 
76 shake cocktail1 ingredient5 ingredient2 shaker1 left right 
77 pour-shaker-to-shot cocktail1 shot4 left shaker1 l2 l1 
78 empty-shaker left shaker1 cocktail1 l1 l0 
79 clean-shaker left right shaker1 
80 leave left shaker1 
81 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
82 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot12 
83 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient3 ingredient2 dispenser3 
84 grasp left shot12 
85 clean-shot shot12 ingredient2 left right 
86 fill-shot shot12 ingredient3 left right dispenser3 
87 pour-shot-to-clean-shaker shot12 ingredient3 shaker1 left l0 l1 
88 clean-shot shot12 ingredient3 left right 
89 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient4 left shot12 
90 fill-shot shot12 ingredient4 left right dispenser4 
91 pour-shot-to-used-shaker shot12 ingredient4 shaker1 left l1 l2 
92 leave left shot12 
93 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient4 
94 __method_precondition_m5_do_clean_shot_5_precondition shot5 
95 nop  
96 grasp left shaker1 
97 shake cocktail8 ingredient3 ingredient4 shaker1 left right 
98 pour-shaker-to-shot cocktail8 shot5 left shaker1 l2 l1 
99 empty-shaker left shaker1 cocktail8 l1 l0 
100 clean-shaker left right shaker1 
101 leave left shaker1 
102 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
103 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient4 shot16 
104 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient4 ingredient2 dispenser4 
105 grasp left shot16 
106 clean-shot shot16 ingredient2 left right 
107 fill-shot shot16 ingredient4 left right dispenser4 
108 pour-shot-to-clean-shaker shot16 ingredient4 shaker1 left l0 l1 
109 clean-shot shot16 ingredient4 left right 
110 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient5 left shot16 
111 fill-shot shot16 ingredient5 left right dispenser5 
112 pour-shot-to-used-shaker shot16 ingredient5 shaker1 left l1 l2 
113 leave left shot16 
114 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient4 ingredient5 
115 __method_precondition_m5_do_clean_shot_5_precondition shot6 
116 nop  
117 grasp left shaker1 
118 shake cocktail9 ingredient4 ingredient5 shaker1 left right 
119 pour-shaker-to-shot cocktail9 shot6 left shaker1 l2 l1 
120 empty-shaker left shaker1 cocktail9 l1 l0 
121 clean-shaker left right shaker1 
122 leave left shaker1 
123 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
124 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient5 shot12 
125 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient5 ingredient4 dispenser5 
126 grasp left shot12 
127 clean-shot shot12 ingredient4 left right 
128 fill-shot shot12 ingredient5 left right dispenser5 
129 pour-shot-to-clean-shaker shot12 ingredient5 shaker1 left l0 l1 
130 clean-shot shot12 ingredient5 left right 
131 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient4 left shot12 
132 fill-shot shot12 ingredient4 left right dispenser4 
133 pour-shot-to-used-shaker shot12 ingredient4 shaker1 left l1 l2 
134 leave left shot12 
135 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient5 ingredient4 
136 __method_precondition_m5_do_clean_shot_5_precondition shot7 
137 nop  
138 grasp left shaker1 
139 shake cocktail7 ingredient5 ingredient4 shaker1 left right 
140 pour-shaker-to-shot cocktail7 shot7 left shaker1 l2 l1 
141 empty-shaker left shaker1 cocktail7 l1 l0 
142 clean-shaker left right shaker1 
143 leave left shaker1 
144 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
145 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient3 shot16 
146 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient3 ingredient5 dispenser3 
147 grasp right shot16 
148 clean-shot shot16 ingredient5 right left 
149 fill-shot shot16 ingredient3 right left dispenser3 
150 pour-shot-to-clean-shaker shot16 ingredient3 shaker1 right l0 l1 
151 clean-shot shot16 ingredient3 right left 
152 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient5 right shot16 
153 fill-shot shot16 ingredient5 right left dispenser5 
154 pour-shot-to-used-shaker shot16 ingredient5 shaker1 right l1 l2 
155 leave right shot16 
156 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient3 ingredient5 
157 __method_precondition_m5_do_clean_shot_5_precondition shot8 
158 nop  
159 grasp right shaker1 
160 shake cocktail11 ingredient3 ingredient5 shaker1 right left 
161 pour-shaker-to-shot cocktail11 shot8 right shaker1 l2 l1 
162 empty-shaker right shaker1 cocktail11 l1 l0 
163 clean-shaker right left shaker1 
164 leave right shaker1 
165 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
166 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient5 shot12 
167 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient5 ingredient4 dispenser5 
168 grasp right shot12 
169 clean-shot shot12 ingredient4 right left 
170 fill-shot shot12 ingredient5 right left dispenser5 
171 pour-shot-to-clean-shaker shot12 ingredient5 shaker1 right l0 l1 
172 clean-shot shot12 ingredient5 right left 
173 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient2 right shot12 
174 fill-shot shot12 ingredient2 right left dispenser2 
175 pour-shot-to-used-shaker shot12 ingredient2 shaker1 right l1 l2 
176 leave right shot12 
177 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient5 ingredient2 
178 __method_precondition_m5_do_clean_shot_5_precondition shot9 
179 nop  
180 grasp right shaker1 
181 shake cocktail2 ingredient5 ingredient2 shaker1 right left 
182 pour-shaker-to-shot cocktail2 shot9 right shaker1 l2 l1 
183 empty-shaker right shaker1 cocktail2 l1 l0 
184 clean-shaker right left shaker1 
185 leave right shaker1 
186 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
187 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient3 shot12 
188 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient3 ingredient2 dispenser3 
189 grasp left shot12 
190 clean-shot shot12 ingredient2 left right 
191 fill-shot shot12 ingredient3 left right dispenser3 
192 pour-shot-to-clean-shaker shot12 ingredient3 shaker1 left l0 l1 
193 clean-shot shot12 ingredient3 left right 
194 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient1 left shot12 
195 fill-shot shot12 ingredient1 left right dispenser1 
196 pour-shot-to-used-shaker shot12 ingredient1 shaker1 left l1 l2 
197 leave left shot12 
198 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient3 ingredient1 
199 __method_precondition_m5_do_clean_shot_5_precondition shot10 
200 nop  
201 grasp right shaker1 
202 shake cocktail10 ingredient3 ingredient1 shaker1 right left 
203 pour-shaker-to-shot cocktail10 shot10 right shaker1 l2 l1 
204 empty-shaker right shaker1 cocktail10 l1 l0 
205 clean-shaker right left shaker1 
206 leave right shaker1 
207 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 right 
208 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient5 shot12 
209 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient5 ingredient1 dispenser5 
210 grasp right shot12 
211 clean-shot shot12 ingredient1 right left 
212 fill-shot shot12 ingredient5 right left dispenser5 
213 pour-shot-to-clean-shaker shot12 ingredient5 shaker1 right l0 l1 
214 clean-shot shot12 ingredient5 right left 
215 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient2 right shot12 
216 fill-shot shot12 ingredient2 right left dispenser2 
217 pour-shot-to-used-shaker shot12 ingredient2 shaker1 right l1 l2 
218 leave right shot12 
219 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient5 ingredient2 
220 __method_precondition_m5_do_clean_shot_5_precondition shot11 
221 nop  
222 grasp left shaker1 
223 shake cocktail5 ingredient5 ingredient2 shaker1 left right 
224 pour-shaker-to-shot cocktail5 shot11 left shaker1 l2 l1 
225 empty-shaker left shaker1 cocktail5 l1 l0 
226 clean-shaker left right shaker1 
227 leave left shaker1 
228 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser3 ingredient3 
229 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient3 ingredient2 dispenser3 
230 grasp left shot12 
231 clean-shot shot12 ingredient2 left right 
232 fill-shot shot12 ingredient3 left right dispenser3 
233 leave left shot12 
234 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot13 right 
235 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot16 
236 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient3 ingredient5 dispenser3 
237 grasp right shot16 
238 clean-shot shot16 ingredient5 right left 
239 fill-shot shot16 ingredient3 right left dispenser3 
240 pour-shot-to-clean-shaker shot16 ingredient3 shaker1 right l0 l1 
241 clean-shot shot16 ingredient3 right left 
242 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient4 right shot16 
243 fill-shot shot16 ingredient4 right left dispenser4 
244 pour-shot-to-used-shaker shot16 ingredient4 shaker1 right l1 l2 
245 leave right shot16 
246 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient4 
247 __method_precondition_m5_do_clean_shot_5_precondition shot13 
248 nop  
249 grasp left shaker1 
250 shake cocktail8 ingredient3 ingredient4 shaker1 left right 
251 pour-shaker-to-shot cocktail8 shot13 left shaker1 l2 l1 
252 empty-shaker left shaker1 cocktail8 l1 l0 
253 clean-shaker left right shaker1 
254 leave left shaker1 
255 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot14 right 
256 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient3 shot16 
257 __method_precondition_m9_do_fill_shot_9_precondition shot16 ingredient3 ingredient4 dispenser3 
258 grasp right shot16 
259 clean-shot shot16 ingredient4 right left 
260 fill-shot shot16 ingredient3 right left dispenser3 
261 pour-shot-to-clean-shaker shot16 ingredient3 shaker1 right l0 l1 
262 clean-shot shot16 ingredient3 right left 
263 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient5 right shot16 
264 fill-shot shot16 ingredient5 right left dispenser5 
265 pour-shot-to-used-shaker shot16 ingredient5 shaker1 right l1 l2 
266 leave right shot16 
267 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient3 ingredient5 
268 __method_precondition_m5_do_clean_shot_5_precondition shot14 
269 nop  
270 grasp left shaker1 
271 shake cocktail11 ingredient3 ingredient5 shaker1 left right 
272 pour-shaker-to-shot cocktail11 shot14 left shaker1 l2 l1 
273 empty-shaker left shaker1 cocktail11 l1 l0 
274 clean-shaker left right shaker1 
275 leave left shaker1 
276 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot15 right 
277 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient5 shot16 
278 __method_precondition_m7_do_fill_shot_7_precondition shot16 ingredient5 dispenser5 
279 grasp right shot16 
280 refill-shot shot16 ingredient5 right left dispenser5 
281 pour-shot-to-clean-shaker shot16 ingredient5 shaker1 right l0 l1 
282 clean-shot shot16 ingredient5 right left 
283 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient2 right shot16 
284 fill-shot shot16 ingredient2 right left dispenser2 
285 pour-shot-to-used-shaker shot16 ingredient2 shaker1 right l1 l2 
286 leave right shot16 
287 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient5 ingredient2 
288 __method_precondition_m5_do_clean_shot_5_precondition shot15 
289 nop  
290 grasp right shaker1 
291 shake cocktail1 ingredient5 ingredient2 shaker1 right left 
292 pour-shaker-to-shot cocktail1 shot15 right shaker1 l2 l1 
293 empty-shaker right shaker1 cocktail1 l1 l0 
294 clean-shaker right left shaker1 
295 leave right shaker1 
root 420
296 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 42 432 416 387
297 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 192
298 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 154
299 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 277 391 346 434
300 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 108
301 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 133
302 do_fill_shot shot16 ingredient4 left  -> m9_do_fill_shot 104 105 106 107
303 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 91
304 serve_shot shot7 cocktail7  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 135 367 138 139 140 141 142 143
305 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 right  -> _m2_get_first_ingredient_4 67
306 serve_shot shot4 cocktail1  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 72 308 75 76 77 78 79 80
307 do_clean_shot_m4_serve_shot_sip_2 shot11 right  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail2,right];m5_do_clean_shot;0;-1,-2> 220 221
308 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2> 73 74
309 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 87
310 do_fill_shot shot12 ingredient3 left  -> m9_do_fill_shot 188 189 190 191
311 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient3 right  -> _m2_get_first_ingredient_4 241
312 do_clean_shot_m4_serve_shot_sip_2 shot1 left  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2> 12 13
313 do_cocktail_in_shot1 shot2 cocktail3  -> m0_do_cocktail_in_shot1 20 336 352 353
314 get_first_ingredient cocktail11 right  -> m2_get_first_ingredient 256 340 395 374
315 do_clean_shot_m4_serve_shot_sip_2 shot14 right  -> <_m4_serve_shot_2;do_clean_shot[shot14,cocktail8,right];m5_do_clean_shot;0;-1,-2> 268 269
316 do_fill_shot shot12 ingredient5 left  -> m9_do_fill_shot 125 126 127 128
317 serve_shot shot9 cocktail2  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 177 410 180 181 182 183 184 185
318 do_clean_shot_m4_serve_shot_sip_2 shot15 left  -> <_m4_serve_shot_2;do_clean_shot[shot15,cocktail7,left];m5_do_clean_shot;0;-1,-2> 288 289
319 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 82 413 309 360
320 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient4 right  -> _m3_get_second_ingredient_2 243
321 serve_shot shot15 cocktail1  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot15,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 287 318 290 291 292 293 294 295
322 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 94 95
323 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 89 404 303 92
324 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 30
325 do_fill_shot shot12 ingredient5 right  -> m9_do_fill_shot 209 210 211 212
326 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient3 left  -> _m2_get_first_ingredient_4 193
327 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 129
328 get_second_ingredient cocktail11 right  -> m3_get_second_ingredient 152 421 298 155
329 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient5 right  -> _m2_get_first_ingredient_4 172
330 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient5 right  -> _m2_get_first_ingredient_4 214
331 do_fill_shot shot16 ingredient5 right  -> m7_do_fill_shot 63 64 65
332 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 208 325 357 330
333 do_cocktail_in_shot2 shot12 ingredient3  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 228 426 233
334 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 left  -> _m3_get_second_ingredient_2 29
335 do_cocktail_in_shot1 shot14 cocktail11  -> m0_do_cocktail_in_shot1 255 314 355 380
336 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 21 393 373 415
337 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 right  -> _m3_get_second_ingredient_2 264
338 do_fill_shot shot16 ingredient3 right  -> m9_do_fill_shot 146 147 148 149
339 do_cocktail_in_shot1 shot3 cocktail6  -> m0_do_cocktail_in_shot1 41 296 361 378
340 do_fill_shot shot16 ingredient3 right  -> m9_do_fill_shot 257 258 259 260
341 do_cocktail_in_shot1 shot6 cocktail9  -> m0_do_cocktail_in_shot1 102 371 437 362
342 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient4 left  -> _m2_get_first_ingredient_4 109
343 do_cocktail_in_shot1 shot4 cocktail1  -> m0_do_cocktail_in_shot1 61 348 405 306
344 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 196
345 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 5
346 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 281
347 do_clean_shot_m4_serve_shot_sip_2 shot2 right  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2> 33 34
348 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 62 331 381 305
349 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 53 54
350 do_cocktail_in_shot1 shot10 cocktail10  -> m0_do_cocktail_in_shot1 186 397 402 407
351 do_cocktail_in_shot1 shot11 cocktail5  -> m0_do_cocktail_in_shot1 207 332 356 359
352 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 28 334 324 31
353 serve_shot shot2 cocktail3  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 32 347 35 36 37 38 39 40
354 do_cocktail_in_shot1 shot7 cocktail7  -> m0_do_cocktail_in_shot1 123 363 400 304
355 get_second_ingredient cocktail11 right  -> m3_get_second_ingredient 263 337 431 266
356 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 215 435 401 218
357 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 213
358 get_first_ingredient cocktail8 right  -> m2_get_first_ingredient 235 429 412 311
359 serve_shot shot11 cocktail5  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot11,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 219 307 222 223 224 225 226 227
360 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient3 left  -> _m2_get_first_ingredient_4 88
361 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 48 436 389 51
362 serve_shot shot6 cocktail9  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 114 399 117 118 119 120 121 122
363 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 124 316 327 424
364 do_cocktail_in_shot1 shot5 cocktail8  -> m0_do_cocktail_in_shot1 81 319 323 368
365 serve_shot shot13 cocktail8  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot13,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 246 382 249 250 251 252 253 254
366 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 171
367 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 136 137
368 serve_shot shot5 cocktail8  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 93 322 96 97 98 99 100 101
369 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 right  -> _m3_get_second_ingredient_2 69
370 do_fill_shot shot12 ingredient5 right  -> m9_do_fill_shot 167 168 169 170
371 get_first_ingredient cocktail9 left  -> m2_get_first_ingredient 103 302 300 342
372 do_cocktail_in_shot1 shot8 cocktail11  -> m0_do_cocktail_in_shot1 144 425 328 417
373 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 26
374 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient3 right  -> _m2_get_first_ingredient_4 262
375 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 9
376 do_fill_shot shot16 ingredient2 left  -> m8_do_fill_shot 2 3 4
377 do_cocktail_in_shot1 shot13 cocktail8  -> m0_do_cocktail_in_shot1 234 358 411 365
378 serve_shot shot3 cocktail6  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 52 349 55 56 57 58 59 60
379 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 173 418 428 176
380 serve_shot shot14 cocktail11  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot14,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 267 315 270 271 272 273 274 275
381 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 66
382 do_clean_shot_m4_serve_shot_sip_2 shot13 right  -> <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,right];m5_do_clean_shot;0;-1,-2> 247 248
383 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient2 left  -> _m2_get_first_ingredient_4 6
384 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 left  -> _m3_get_second_ingredient_2 8
385 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 166 370 366 329
386 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 244
387 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient4 right  -> _m2_get_first_ingredient_4 47
388 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient4 left  -> _m3_get_second_ingredient_2 132
389 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 50
390 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 285
391 do_fill_shot shot16 ingredient5 right  -> m7_do_fill_shot 278 279 280
392 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 150
393 do_fill_shot shot16 ingredient3 left  -> m9_do_fill_shot 22 23 24 25
394 serve_shot shot1 cocktail4  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 11 312 14 15 16 17 18 19
395 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 261
396 do_cocktail_in_shot1 shot15 cocktail1  -> m0_do_cocktail_in_shot1 276 299 403 321
397 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 187 310 297 326
398 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient2 right  -> _m3_get_second_ingredient_2 284
399 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 115 116
400 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 131 388 301 134
401 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 217
402 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 194 438 344 197
403 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 283 398 390 286
404 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient4 left  -> _m3_get_second_ingredient_2 90
405 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 68 369 422 71
406 do_cocktail_in_shot1 shot9 cocktail2  -> m0_do_cocktail_in_shot1 165 385 379 317
407 serve_shot shot10 cocktail10  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 198 409 201 202 203 204 205 206
408 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 7 384 375 10
409 do_clean_shot_m4_serve_shot_sip_2 shot10 left  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2> 199 200
410 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 178 179
411 get_second_ingredient cocktail8 right  -> m3_get_second_ingredient 242 320 386 245
412 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot16 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 240
413 do_fill_shot shot12 ingredient3 left  -> m9_do_fill_shot 83 84 85 86
414 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 1 376 345 383
415 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient3 left  -> _m2_get_first_ingredient_4 27
416 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 46
417 serve_shot shot8 cocktail11  -> <<m4_serve_shot;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7> 156 430 159 160 161 162 163 164
418 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient2 right  -> _m3_get_second_ingredient_2 174
419 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 112
420 __choicelessATCompilation__top_1  -> __top_1 427 313 339 343 364 341 354 372 406 350 351 333 377 335 396
421 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 right  -> _m3_get_second_ingredient_2 153
422 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 70
423 fill-shot_m3_get_second_ingredient_sip_2 shot16 ingredient5 left  -> _m3_get_second_ingredient_2 111
424 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient5 left  -> _m2_get_first_ingredient_4 130
425 get_first_ingredient cocktail11 right  -> m2_get_first_ingredient 145 338 392 433
426 do_fill_shot shot12 ingredient3 left  -> m9_do_fill_shot 229 230 231 232
427 do_cocktail_in_shot1 shot1 cocktail4  -> m0_do_cocktail_in_shot1 0 414 408 394
428 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 175
429 do_fill_shot shot16 ingredient3 right  -> m9_do_fill_shot 236 237 238 239
430 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 157 158
431 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot16 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 265
432 do_fill_shot shot12 ingredient4 right  -> m8_do_fill_shot 43 44 45
433 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient3 right  -> _m2_get_first_ingredient_4 151
434 clean-shot_m2_get_first_ingredient_sip_4 shot16 ingredient5 right  -> _m2_get_first_ingredient_4 282
435 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient2 right  -> _m3_get_second_ingredient_2 216
436 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient2 right  -> _m3_get_second_ingredient_2 49
437 get_second_ingredient cocktail9 left  -> m3_get_second_ingredient 110 423 419 113
438 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient1 left  -> _m3_get_second_ingredient_2 195

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 20.817 MEMPEAK_KBS 892017.664
