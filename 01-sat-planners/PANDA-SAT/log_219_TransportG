PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile27.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile27.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile27.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Grounded planning graph ... done in 340ms.
	Number of Grounded Actions 770
	Number of Grounded Literals 246
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 38
Grounding ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 246
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 121ms.
	Number of Grounded Actions 770
	Number of Grounded Literals 195
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 315
	number of tasks = 1085
	number of decomposition methods = 1165
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 63ms.
	Number of Grounded Actions 770
	Number of Grounded Literals 195
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 316
	number of tasks = 1086
	number of decomposition methods = 1166
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 466
	number of tasks = 1236
	number of decomposition methods = 1316
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 466
	number of tasks = 1236
	number of decomposition methods = 1316
	number of predicates = 195
	number of sorts = 0
	number of tasks in largest method = 15
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 770
	number of constants = 0
Tasks 770 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772270ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854772119
done
initial PDT has 60 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 60 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 56745
Size 56745 at 0/770
Size 51729 at 500/770
Size 37013
Size 37013 at 0/770
Size 18567 at 500/770
Size 10029
Size 10029 at 0/770
Size 1181 at 500/770
Size 857
Size 857 at 0/770
Size 855 at 500/770
Size 855
Size 855 at 0/770
Size 855 at 500/770
Size 855
Invariant time: 0.7
Number of invariants: 855
Invariant Clauses 52155
NUMBER OF CLAUSES 91111
NUMBER OF STATE CLAUSES 79360
NUMBER OF DECOMPOSITION CLAUSES 11751
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 87.10000000000001% 12.9% 0.0% 
NUMBER OF PATHS 60
Starting cryptominisat5.5
Setting starttime of solver to 1604489766144
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770132
done
initial PDT has 90 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 90 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 77805
NUMBER OF CLAUSES 196191
NUMBER OF STATE CLAUSES 125005
NUMBER OF DECOMPOSITION CLAUSES 71186
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 63.72% 36.28% 0.0% 
NUMBER OF PATHS 90
Starting cryptominisat5.5
Setting starttime of solver to 1604489767404
Command exited with non-zero status 20
0.06 0.00

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854768943
done
initial PDT has 145 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 145 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 124830
NUMBER OF CLAUSES 547231
NUMBER OF STATE CLAUSES 214225
NUMBER OF DECOMPOSITION CLAUSES 333006
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 39.15% 60.85% 0.0% 
NUMBER OF PATHS 145
Starting cryptominisat5.5
Setting starttime of solver to 1604489769647
Command exited with non-zero status 10
0.28 0.02

Time command gave the following runtime for the solver: 300
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_2;0,511 511 m-drive-to-via
2;0 241 pathaction!2_2;0,695
Consider method^4_6;0;0;0,1269 1269 m-drive-to
6;0;0;0 141 pathaction!4_6;0;0;0,717
Consider method^4_1;2;0;0,690 690 m-drive-to
1;2;0;0 64 pathaction!4_1;2;0;0,748
Consider method^2_10;2,673 673 m-drive-to-via
10;2 110 pathaction!2_10;2,717
Consider method^3_4;2;0,575 575 m-drive-to-via
4;2;0 0 pathaction!3_4;2;0,715
Consider method^2_9;1,939 939 m-load
9;1 192 pathaction!2_9;1,80
Consider method^3_2;0;0,513 513 m-drive-to-via
2;0;0 128 pathaction!3_2;0;0,730
Consider method^1_0,863 863 m-deliver
0 53 pathaction!1_0,157
Consider method^4_13;0;0;0,99 99 m-drive-to
13;0;0;0 19 pathaction!4_13;0;0;0,751
Consider method^2_12;3,334 334 m-unload
12;3 17 pathaction!2_12;3,1075
Consider method^2_2;2,398 398 m-drive-to-via
2;2 145 pathaction!2_2;2,749
Consider method^2_7;3,41 41 m-unload
7;3 222 pathaction!2_7;3,1045
Consider method^1_9,1054 1054 m-deliver
9 71 pathaction!1_9,160
Consider method^2_12;2,827 827 m-drive-to-via
12;2 138 pathaction!2_12;2,760
Consider method^4_14;2;0;0,1158 1158 m-drive-to
14;2;0;0 129 pathaction!4_14;2;0;0,707
Consider method^4_2;0;0;0,1009 1009 m-drive-to
2;0;0;0 62 pathaction!4_2;0;0;0,727
Consider method^1_6,1186 1186 m-deliver
6 149 pathaction!1_6,155
Consider method^4_4;2;0;0,439 439 m-drive-to
4;2;0;0 168 pathaction!4_4;2;0;0,716
Consider method^2_10;3,1148 1148 m-unload
10;3 69 pathaction!2_10;3,1051
Consider method^3_12;0;0,1260 1260 m-drive-to-via
12;0;0 89 pathaction!3_12;0;0,717
Consider method^2_5;1,902 902 m-load
5;1 124 pathaction!2_5;1,49
Consider method^2_5;2,267 267 m-drive-to-via
5;2 22 pathaction!2_5;2,690
Consider method^2_8;3,738 738 m-unload
8;3 4 pathaction!2_8;3,1072
Consider method^0_,1315 1315 __top_1
 107 pathaction!0_,1085
Consider method^2_2;3,1114 1114 m-unload
2;3 131 pathaction!2_2;3,1054
Consider method^2_0;0,277 277 m-drive-to-via
0;0 163 pathaction!2_0;0,729
Consider method^4_4;0;0;0,792 792 m-drive-to
4;0;0;0 209 pathaction!4_4;0;0;0,715
Consider method^2_14;3,580 580 m-unload
14;3 91 pathaction!2_14;3,1062
Consider method^3_11;2;0,1128 1128 m-drive-to-via
11;2;0 43 pathaction!3_11;2;0,696
Consider method^3_13;2;0,1120 1120 m-drive-to-via
13;2;0 123 pathaction!3_13;2;0,740
Consider method^4_12;0;0;0,1138 1138 m-drive-to
12;0;0;0 114 pathaction!4_12;0;0;0,723
Consider method^2_4;0,199 199 m-drive-to-via
4;0 230 pathaction!2_4;0,731
Consider method^1_5,244 244 m-deliver
5 223 pathaction!1_5,159
Consider method^2_7;1,660 660 m-load
7;1 76 pathaction!2_7;1,5
Consider method^2_6;0,1028 1028 m-drive-to-via
6;0 204 pathaction!2_6;0,754
Consider method^4_8;2;0;0,693 693 m-drive-to
8;2;0;0 77 pathaction!4_8;2;0;0,706
Consider method^3_2;2;0,160 160 m-drive-to
2;2;0 184 pathaction!3_2;2;0,754
Consider method^2_3;3,466 466 m-unload
3;3 216 pathaction!2_3;3,1035
Consider method^3_9;0;0,856 856 m-drive-to-via
9;0;0 154 pathaction!3_9;0;0,730
Consider method^4_9;0;0;0,234 234 m-drive-to
9;0;0;0 82 pathaction!4_9;0;0;0,695
Consider method^1_14,648 648 m-deliver
14 212 pathaction!1_14,158
Consider method^4_0;0;0;0,399 399 m-drive-to
0;0;0;0 24 pathaction!4_0;0;0;0,751
Consider method^2_10;0,790 790 m-drive-to-via
10;0 174 pathaction!2_10;0,700
Consider method^2_3;0,308 308 m-drive-to-via
3;0 11 pathaction!2_3;0,706
Consider method^4_0;2;0;0,1216 1216 m-drive-to
0;2;0;0 21 pathaction!4_0;2;0;0,705
Consider method^2_12;1,441 441 m-load
12;1 167 pathaction!2_12;1,13
Consider method^2_0;1,1056 1056 m-load
0;1 27 pathaction!2_0;1,81
Consider method^2_8;1,444 444 m-load
8;1 121 pathaction!2_8;1,58
Consider method^2_0;2,941 941 m-drive-to-via
0;2 186 pathaction!2_0;2,690
Consider method^2_8;0,694 694 m-drive-to
8;0 75 pathaction!2_8;0,711
Consider method^2_11;0,923 923 m-drive-to-via
11;0 72 pathaction!2_11;0,764
Consider method^2_4;3,115 115 m-unload
4;3 156 pathaction!2_4;3,1025
Consider method^2_14;0,1005 1005 m-drive-to
14;0 182 pathaction!2_14;0,699
Consider method^2_14;2,302 302 m-drive-to-via
14;2 1 pathaction!2_14;2,711
Consider method^3_6;0;0,421 421 m-drive-to-via
6;0;0 40 pathaction!3_6;0;0,749
Consider method^2_6;3,1228 1228 m-unload
6;3 81 pathaction!2_6;3,1055
Consider method^2_11;3,721 721 m-unload
11;3 32 pathaction!2_11;3,1039
Consider method^2_0;3,64 64 m-unload
0;3 108 pathaction!2_0;3,1082
Consider method^1_8,741 741 m-deliver
8 86 pathaction!1_8,150
Consider method^4_13;2;0;0,1216 1216 m-drive-to
13;2;0;0 112 pathaction!4_13;2;0;0,705
Consider method^2_11;2,1176 1176 m-drive-to-via
11;2 52 pathaction!2_11;2,725
Consider method^2_4;1,89 89 m-load
4;1 164 pathaction!2_4;1,141
Consider method^2_1;2,187 187 m-drive-to-via
1;2 172 pathaction!2_1;2,719
Consider method^1_10,65 65 m-deliver
10 162 pathaction!1_10,162
Consider method^4_3;0;0;0,985 985 m-drive-to
3;0;0;0 15 pathaction!4_3;0;0;0,691
Consider method^2_13;1,488 488 m-load
13;1 96 pathaction!2_13;1,40
Consider method^3_3;0;0,1290 1290 m-drive-to-via
3;0;0 18 pathaction!3_3;0;0,763
Consider method^3_6;2;0,205 205 m-drive-to-via
6;2;0 191 pathaction!3_6;2;0,695
Consider method^2_9;3,684 684 m-unload
9;3 218 pathaction!2_9;3,1065
Consider method^1_1,1297 1297 m-deliver
1 205 pathaction!1_1,151
Consider method^3_1;2;0,512 512 m-drive-to-via
1;2;0 79 pathaction!3_1;2;0,740
Consider method^4_11;0;0;0,173 173 m-drive-to
11;0;0;0 66 pathaction!4_11;0;0;0,696
Consider method^3_12;2;0,785 785 m-drive-to
12;2;0 247 pathaction!3_12;2;0,730
Consider method^3_14;2;0,841 841 m-drive-to-via
14;2;0 109 pathaction!3_14;2;0,706
Consider method^4_10;0;0;0,95 95 m-drive-to
10;0;0;0 51 pathaction!4_10;0;0;0,744
Consider method^1_3,28 28 m-deliver
3 135 pathaction!1_3,156
Consider method^1_2,703 703 m-deliver
2 153 pathaction!1_2,164
Consider method^3_1;0;0,626 626 m-drive-to-via
1;0;0 116 pathaction!3_1;0;0,705
Consider method^4_1;0;0;0,99 99 m-drive-to
1;0;0;0 3 pathaction!4_1;0;0;0,751
Consider method^2_12;0,421 421 m-drive-to-via
12;0 254 pathaction!2_12;0,749
Consider method^3_4;0;0,297 297 m-drive-to-via
4;0;0 171 pathaction!3_4;0;0,716
Consider method^1_13,1151 1151 m-deliver
13 190 pathaction!1_13,154
Consider method^2_13;2,187 187 m-drive-to-via
13;2 221 pathaction!2_13;2,719
Consider method^3_10;0;0,1293 1293 m-drive-to-via
10;0;0 201 pathaction!3_10;0;0,749
Consider method^2_5;3,1273 1273 m-unload
5;3 42 pathaction!2_5;3,1064
Consider method^1_11,1049 1049 m-deliver
11 234 pathaction!1_11,163
Consider method^2_3;1,797 797 m-load
3;1 158 pathaction!2_3;1,135
Consider method^2_7;0,1060 1060 m-i-am-there
7;0 187 pathaction!2_7;0,737
Consider method^4_5;2;0;0,1298 1298 m-drive-to
5;2;0;0 188 pathaction!4_5;2;0;0,740
Consider method^4_10;2;0;0,453 453 m-drive-to
10;2;0;0 7 pathaction!4_10;2;0;0,754
Consider method^2_2;1,960 960 m-load
2;1 240 pathaction!2_2;1,106
Consider method^2_1;1,611 611 m-load
1;1 178 pathaction!2_1;1,89
Consider method^2_3;2,1048 1048 m-drive-to-via
3;2 34 pathaction!2_3;2,737
Consider method^3_11;0;0,1045 1045 m-drive-to-via
11;0;0 120 pathaction!3_11;0;0,722
Consider method^1_12,515 515 m-deliver
12 256 pathaction!1_12,161
Consider method^4_6;2;0;0,132 132 m-drive-to
6;2;0;0 47 pathaction!4_6;2;0;0,695
Consider method^3_13;0;0,626 626 m-drive-to-via
13;0;0 229 pathaction!3_13;0;0,705
Consider method^2_7;2,595 595 m-drive-to-via
7;2 115 pathaction!2_7;2,706
Consider method^2_4;2,1291 1291 m-drive-to-via
4;2 166 pathaction!2_4;2,703
Consider method^2_13;3,108 108 m-unload
13;3 130 pathaction!2_13;3,1070
Consider method^2_6;2,395 395 m-drive-to-via
6;2 180 pathaction!2_6;2,709
Consider method^2_1;3,1220 1220 m-unload
1;3 134 pathaction!2_1;3,1050
Consider method^3_9;2;0,472 472 m-drive-to
9;2;0 170 pathaction!3_9;2;0,744
Consider method^3_0;2;0,188 188 m-drive-to-via
0;2;0 2 pathaction!3_0;2;0,751
Consider method^2_11;1,740 740 m-load
11;1 117 pathaction!2_11;1,144
Consider method^2_10;1,209 209 m-load
10;1 195 pathaction!2_10;1,77
Consider method^1_7,385 385 m-deliver
7 65 pathaction!1_7,152
Consider method^2_1;0,1120 1120 m-drive-to-via
1;0 6 pathaction!2_1;0,740
Consider method^3_5;0;0,1298 1298 m-drive-to
5;0;0 133 pathaction!3_5;0;0,740
Consider method^2_6;1,354 354 m-load
6;1 194 pathaction!2_6;1,122
Consider method^3_10;2;0,398 398 m-drive-to-via
10;2;0 118 pathaction!3_10;2;0,749
Consider method^2_14;1,571 571 m-load
14;1 126 pathaction!2_14;1,9
Consider method^4_11;2;0;0,125 125 m-drive-to
11;2;0;0 203 pathaction!4_11;2;0;0,722
Consider method^3_8;2;0,165 165 m-drive-to-via
8;2;0 139 pathaction!3_8;2;0,720
Consider method^3_0;0;0,626 626 m-drive-to-via
0;0;0 8 pathaction!3_0;0;0,705
Consider method^2_8;2,553 553 m-drive-to-via
8;2 173 pathaction!2_8;2,734
Consider method^2_9;2,335 335 m-drive-to-via
9;2 57 pathaction!2_9;2,755
Consider method^2_9;0,1233 1233 m-drive-to-via
9;0 211 pathaction!2_9;0,762
Consider method^3_3;2;0,1059 1059 m-drive-to
3;2;0 242 pathaction!3_3;2;0,702
Consider method^1_4,118 118 m-deliver
4 125 pathaction!1_4,153
Consider method^3_7;2;0,914 914 m-drive-to
7;2;0 199 pathaction!3_7;2;0,702
Consider method^2_5;0,187 187 m-drive-to-via
5;0 206 pathaction!2_5;0,719
Consider method^3_5;2;0,1024 1024 m-drive-to-via
5;2;0 20 pathaction!3_5;2;0,753
Consider method^2_13;0,277 277 m-drive-to-via
13;0 255 pathaction!2_13;0,729


CHECKING primitive solution of length 108 ...
true 127 drive[truck-2,city-loc-7,city-loc-4;]
true 101 drive[truck-2,city-loc-4,city-loc-8;]
true 88 drive[truck-2,city-loc-8,city-loc-5;]
true 39 pick-up[truck-2,city-loc-5,package-0,capacity-1,capacity-2;]
true 183 drive[truck-2,city-loc-5,city-loc-8;]
true 151 drive[truck-2,city-loc-8,city-loc-4;]
true 137 drive[truck-2,city-loc-4,city-loc-9;]
true 14 drop[truck-2,city-loc-9,package-0,capacity-1,capacity-2;]
true 58 drive[truck-2,city-loc-9,city-loc-4;]
true 189 drive[truck-2,city-loc-4,city-loc-8;]
true 228 drive[truck-2,city-loc-8,city-loc-2;]
true 246 pick-up[truck-2,city-loc-2,package-1,capacity-1,capacity-2;]
true 104 drive[truck-2,city-loc-2,city-loc-10;]
true 83 drive[truck-2,city-loc-10,city-loc-2;]
true 252 drive[truck-2,city-loc-2,city-loc-0;]
true 233 drop[truck-2,city-loc-0,package-1,capacity-1,capacity-2;]
true 144 drive[truck-3,city-loc-3,city-loc-10;]
true 23 drive[truck-3,city-loc-10,city-loc-2;]
true 157 drive[truck-3,city-loc-2,city-loc-11;]
true 179 pick-up[truck-3,city-loc-11,package-2,capacity-1,capacity-2;]
true 227 drive[truck-3,city-loc-11,city-loc-13;]
true 165 drive[truck-3,city-loc-13,city-loc-8;]
true 239 drop[truck-3,city-loc-8,package-2,capacity-1,capacity-2;]
true 44 drive[truck-0,city-loc-12,city-loc-10;]
true 136 drive[truck-0,city-loc-10,city-loc-3;]
true 60 drive[truck-0,city-loc-3,city-loc-8;]
true 148 pick-up[truck-0,city-loc-8,package-3,capacity-1,capacity-2;]
true 37 drive[truck-0,city-loc-8,city-loc-2;]
true 25 drive[truck-0,city-loc-2,city-loc-6;]
true 122 drop[truck-0,city-loc-6,package-3,capacity-1,capacity-2;]
true 224 drive[truck-1,city-loc-3,city-loc-8;]
true 140 drive[truck-1,city-loc-8,city-loc-4;]
true 50 drive[truck-1,city-loc-4,city-loc-7;]
true 5 pick-up[truck-1,city-loc-7,package-4,capacity-1,capacity-2;]
true 132 drive[truck-1,city-loc-7,city-loc-4;]
true 106 drive[truck-1,city-loc-4,city-loc-8;]
true 99 drive[truck-1,city-loc-8,city-loc-13;]
true 26 drop[truck-1,city-loc-13,package-4,capacity-1,capacity-2;]
true 56 drive[truck-2,city-loc-0,city-loc-2;]
true 226 drive[truck-2,city-loc-2,city-loc-0;]
true 177 pick-up[truck-2,city-loc-0,package-5,capacity-1,capacity-2;]
true 232 drive[truck-2,city-loc-0,city-loc-2;]
true 181 drive[truck-2,city-loc-2,city-loc-11;]
true 207 drive[truck-2,city-loc-11,city-loc-9;]
true 48 drop[truck-2,city-loc-9,package-5,capacity-1,capacity-2;]
true 243 drive[truck-3,city-loc-8,city-loc-4;]
true 251 drive[truck-3,city-loc-4,city-loc-8;]
true 93 drive[truck-3,city-loc-8,city-loc-13;]
true 202 pick-up[truck-3,city-loc-13,package-6,capacity-1,capacity-2;]
true 29 drive[truck-3,city-loc-13,city-loc-11;]
true 200 drive[truck-3,city-loc-11,city-loc-11;]
true 253 drive[truck-3,city-loc-11,city-loc-1;]
true 245 drop[truck-3,city-loc-1,package-6,capacity-1,capacity-2;]
true 97 noop[truck-0,city-loc-6;]
true 236 pick-up[truck-0,city-loc-6,package-7,capacity-1,capacity-2;]
true 94 drive[truck-0,city-loc-6,city-loc-2;]
true 102 drive[truck-0,city-loc-2,city-loc-8;]
true 105 drop[truck-0,city-loc-8,package-7,capacity-1,capacity-2;]
true 159 drive[truck-0,city-loc-8,city-loc-5;]
true 16 pick-up[truck-0,city-loc-5,package-8,capacity-1,capacity-2;]
true 161 drive[truck-0,city-loc-5,city-loc-8;]
true 55 drive[truck-0,city-loc-8,city-loc-13;]
true 85 drive[truck-0,city-loc-13,city-loc-11;]
true 84 drop[truck-0,city-loc-11,package-8,capacity-1,capacity-2;]
true 68 drive[truck-3,city-loc-1,city-loc-11;]
true 160 drive[truck-3,city-loc-11,city-loc-2;]
true 63 drive[truck-3,city-loc-2,city-loc-0;]
true 210 pick-up[truck-3,city-loc-0,package-9,capacity-1,capacity-2;]
true 103 drive[truck-3,city-loc-0,city-loc-14;]
true 119 drive[truck-3,city-loc-14,city-loc-12;]
true 100 drop[truck-3,city-loc-12,package-9,capacity-1,capacity-2;]
true 113 drive[truck-3,city-loc-12,city-loc-14;]
true 185 drive[truck-3,city-loc-14,city-loc-8;]
true 54 drive[truck-3,city-loc-8,city-loc-3;]
true 67 pick-up[truck-3,city-loc-3,package-10,capacity-1,capacity-2;]
true 248 drive[truck-3,city-loc-3,city-loc-13;]
true 10 drive[truck-3,city-loc-13,city-loc-8;]
true 9 drive[truck-3,city-loc-8,city-loc-4;]
true 208 drop[truck-3,city-loc-4,package-10,capacity-1,capacity-2;]
true 225 drive[truck-1,city-loc-13,city-loc-11;]
true 78 drive[truck-1,city-loc-11,city-loc-2;]
true 198 drive[truck-1,city-loc-2,city-loc-6;]
true 35 pick-up[truck-1,city-loc-6,package-11,capacity-1,capacity-2;]
true 74 drive[truck-1,city-loc-6,city-loc-2;]
true 215 drive[truck-1,city-loc-2,city-loc-11;]
true 61 drive[truck-1,city-loc-11,city-loc-1;]
true 98 drop[truck-1,city-loc-1,package-11,capacity-1,capacity-2;]
true 217 drive[truck-3,city-loc-4,city-loc-7;]
true 213 drive[truck-3,city-loc-7,city-loc-4;]
true 73 drive[truck-3,city-loc-4,city-loc-8;]
true 49 pick-up[truck-3,city-loc-8,package-12,capacity-1,capacity-2;]
true 28 drive[truck-3,city-loc-8,city-loc-2;]
true 30 drive[truck-3,city-loc-2,city-loc-6;]
true 237 drop[truck-3,city-loc-6,package-12,capacity-1,capacity-2;]
true 175 drive[truck-2,city-loc-9,city-loc-4;]
true 249 drive[truck-2,city-loc-4,city-loc-8;]
true 235 drive[truck-2,city-loc-8,city-loc-5;]
true 87 pick-up[truck-2,city-loc-5,package-13,capacity-1,capacity-2;]
true 231 drive[truck-2,city-loc-5,city-loc-8;]
true 12 drive[truck-2,city-loc-8,city-loc-2;]
true 143 drive[truck-2,city-loc-2,city-loc-0;]
true 152 drop[truck-2,city-loc-0,package-13,capacity-1,capacity-2;]
true 169 drive[truck-0,city-loc-11,city-loc-9;]
true 146 pick-up[truck-0,city-loc-9,package-14,capacity-1,capacity-2;]
true 90 drive[truck-0,city-loc-9,city-loc-4;]
true 150 drive[truck-0,city-loc-4,city-loc-8;]
true 45 drive[truck-0,city-loc-8,city-loc-5;]
true 33 drop[truck-0,city-loc-5,package-14,capacity-1,capacity-2;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 309869368
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 195
number of actions                    = 1236
number of abstract actions           = 466
number of primitive actions          = 770
number of methods                    = 1316
number of primitive shop actions     = 0
number of primitive non-shop actions = 770
size of largest method               = 15
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 155045
number of clauses               = 547231
average size of clauses         = 3.753042133943435
number of assert                = 26
number of horn                  = 506741
K offset                        = 0
K chosen value                  = 5
state formula                   = 214225
method children clauses         = 0
number of paths                 = 145
maximum plan length             = 145
number of decomposition clauses = 333006
number of ordering clauses      = 0
number of state clauses         = 214225
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 10316
============ parsing ============
total                         = 932
file parser                   = 554
sort expansion                = 174
closed world assumption       = 104
inherit preconditions         = 0
shop methods                  = 1
eliminate identical variables = 54
strip domain of hybridity     = 1
flatten formula               = 44
============ preprocessing ============
total                                      = 2404
compile negative preconditions             = 44
compile unit methods                       = 0
split parameter                            = 53
expand choiceless abstract tasks           = 3
compile methods with identical tasks       = 65
removing unnecessary predicates            = 226
lifted reachabiltiy analysis               = 80
grounded planning graph analysis           = 793
grounded task decomposition graph analysis = 747
grounding                                  = 318
create artificial top task                 = 17
============ search preparation ============
compute state invariants = 838
============ sat ============
total                                        = 5317
generate formula                             = 4260
generate path decomposition tree             = 506
normalise path decomposition tree            = 184
sog optimisation                             = 130
translate path decomposition tree to clauses = 1239
generate state formula                       = 4196
generate state invariant formula             = 314
transform to DIMACS                          = 369
SAT solver                                   = 370
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 60
SAT solver for K=0005                        = 300

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="770";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="466";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="309869368";"40 sat:20:state formula"="214225";"40 sat:01:number of variables"="155045";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="145";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="1316";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="1236";"30 problem:08:number of primitive non-shop actions"="770";"30 problem:02:number of predicates"="195";"40 sat:03:number of horn"="506741";"40 sat:15:K chosen value"="5";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="15";"40 sat:03:average size of clauses"="3.753042133943435";"40 sat:02:number of clauses"="547231";"40 sat:50:number of state clauses"="214225";"40 sat:03:number of assert"="26";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="145";"40 sat:50:number of decomposition clauses"="333006";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="554";"01 parsing:08:flatten formula"="44";"40 sat:41:SAT solver for K=0004"="60";"40 sat:00:total"="5317";"40 sat:16:generate state formula"="4196";"40 sat:20:transform to DIMACS"="369";"40 sat:11:generate path decomposition tree"="506";"02 preprocessing:07:compile methods with identical tasks"="65";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="226";"01 parsing:03:closed world assumption"="104";"02 preprocessing:11:lifted reachabiltiy analysis"="80";"01 parsing:02:sort expansion"="174";"40 sat:12:normalise path decomposition tree"="184";"40 sat:40:SAT solver"="370";"01 parsing:00:total"="932";"40 sat:10:generate formula"="4260";"40 sat:41:SAT solver for K=0005"="300";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="44";"00 total:00:total"="10316";"40 sat:13:sog optimisation"="130";"02 preprocessing:12:grounded planning graph analysis"="793";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="747";"02 preprocessing:04:split parameter"="53";"01 parsing:05:shop methods"="1";"10 search preparation:02:compute state invariants"="838";"01 parsing:06:eliminate identical variables"="54";"40 sat:15:translate path decomposition tree to clauses"="1239";"02 preprocessing:05:expand choiceless abstract tasks"="3";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="314";"02 preprocessing:00:total"="2404";"02 preprocessing:99:create artificial top task"="17";"02 preprocessing:84:grounding"="318"
#!verify drive[truck-2,city-loc-7,city-loc-4];drive[truck-2,city-loc-4,city-loc-8];drive[truck-2,city-loc-8,city-loc-5];pick-up[truck-2,city-loc-5,package-0,capacity-1,capacity-2];drive[truck-2,city-loc-5,city-loc-8];drive[truck-2,city-loc-8,city-loc-4];drive[truck-2,city-loc-4,city-loc-9];drop[truck-2,city-loc-9,package-0,capacity-1,capacity-2];drive[truck-2,city-loc-9,city-loc-4];drive[truck-2,city-loc-4,city-loc-8];drive[truck-2,city-loc-8,city-loc-2];pick-up[truck-2,city-loc-2,package-1,capacity-1,capacity-2];drive[truck-2,city-loc-2,city-loc-10];drive[truck-2,city-loc-10,city-loc-2];drive[truck-2,city-loc-2,city-loc-0];drop[truck-2,city-loc-0,package-1,capacity-1,capacity-2];drive[truck-3,city-loc-3,city-loc-10];drive[truck-3,city-loc-10,city-loc-2];drive[truck-3,city-loc-2,city-loc-11];pick-up[truck-3,city-loc-11,package-2,capacity-1,capacity-2];drive[truck-3,city-loc-11,city-loc-13];drive[truck-3,city-loc-13,city-loc-8];drop[truck-3,city-loc-8,package-2,capacity-1,capacity-2];drive[truck-0,city-loc-12,city-loc-10];drive[truck-0,city-loc-10,city-loc-3];drive[truck-0,city-loc-3,city-loc-8];pick-up[truck-0,city-loc-8,package-3,capacity-1,capacity-2];drive[truck-0,city-loc-8,city-loc-2];drive[truck-0,city-loc-2,city-loc-6];drop[truck-0,city-loc-6,package-3,capacity-1,capacity-2];drive[truck-1,city-loc-3,city-loc-8];drive[truck-1,city-loc-8,city-loc-4];drive[truck-1,city-loc-4,city-loc-7];pick-up[truck-1,city-loc-7,package-4,capacity-1,capacity-2];drive[truck-1,city-loc-7,city-loc-4];drive[truck-1,city-loc-4,city-loc-8];drive[truck-1,city-loc-8,city-loc-13];drop[truck-1,city-loc-13,package-4,capacity-1,capacity-2];drive[truck-2,city-loc-0,city-loc-2];drive[truck-2,city-loc-2,city-loc-0];pick-up[truck-2,city-loc-0,package-5,capacity-1,capacity-2];drive[truck-2,city-loc-0,city-loc-2];drive[truck-2,city-loc-2,city-loc-11];drive[truck-2,city-loc-11,city-loc-9];drop[truck-2,city-loc-9,package-5,capacity-1,capacity-2];drive[truck-3,city-loc-8,city-loc-4];drive[truck-3,city-loc-4,city-loc-8];drive[truck-3,city-loc-8,city-loc-13];pick-up[truck-3,city-loc-13,package-6,capacity-1,capacity-2];drive[truck-3,city-loc-13,city-loc-11];drive[truck-3,city-loc-11,city-loc-11];drive[truck-3,city-loc-11,city-loc-1];drop[truck-3,city-loc-1,package-6,capacity-1,capacity-2];noop[truck-0,city-loc-6];pick-up[truck-0,city-loc-6,package-7,capacity-1,capacity-2];drive[truck-0,city-loc-6,city-loc-2];drive[truck-0,city-loc-2,city-loc-8];drop[truck-0,city-loc-8,package-7,capacity-1,capacity-2];drive[truck-0,city-loc-8,city-loc-5];pick-up[truck-0,city-loc-5,package-8,capacity-1,capacity-2];drive[truck-0,city-loc-5,city-loc-8];drive[truck-0,city-loc-8,city-loc-13];drive[truck-0,city-loc-13,city-loc-11];drop[truck-0,city-loc-11,package-8,capacity-1,capacity-2];drive[truck-3,city-loc-1,city-loc-11];drive[truck-3,city-loc-11,city-loc-2];drive[truck-3,city-loc-2,city-loc-0];pick-up[truck-3,city-loc-0,package-9,capacity-1,capacity-2];drive[truck-3,city-loc-0,city-loc-14];drive[truck-3,city-loc-14,city-loc-12];drop[truck-3,city-loc-12,package-9,capacity-1,capacity-2];drive[truck-3,city-loc-12,city-loc-14];drive[truck-3,city-loc-14,city-loc-8];drive[truck-3,city-loc-8,city-loc-3];pick-up[truck-3,city-loc-3,package-10,capacity-1,capacity-2];drive[truck-3,city-loc-3,city-loc-13];drive[truck-3,city-loc-13,city-loc-8];drive[truck-3,city-loc-8,city-loc-4];drop[truck-3,city-loc-4,package-10,capacity-1,capacity-2];drive[truck-1,city-loc-13,city-loc-11];drive[truck-1,city-loc-11,city-loc-2];drive[truck-1,city-loc-2,city-loc-6];pick-up[truck-1,city-loc-6,package-11,capacity-1,capacity-2];drive[truck-1,city-loc-6,city-loc-2];drive[truck-1,city-loc-2,city-loc-11];drive[truck-1,city-loc-11,city-loc-1];drop[truck-1,city-loc-1,package-11,capacity-1,capacity-2];drive[truck-3,city-loc-4,city-loc-7];drive[truck-3,city-loc-7,city-loc-4];drive[truck-3,city-loc-4,city-loc-8];pick-up[truck-3,city-loc-8,package-12,capacity-1,capacity-2];drive[truck-3,city-loc-8,city-loc-2];drive[truck-3,city-loc-2,city-loc-6];drop[truck-3,city-loc-6,package-12,capacity-1,capacity-2];drive[truck-2,city-loc-9,city-loc-4];drive[truck-2,city-loc-4,city-loc-8];drive[truck-2,city-loc-8,city-loc-5];pick-up[truck-2,city-loc-5,package-13,capacity-1,capacity-2];drive[truck-2,city-loc-5,city-loc-8];drive[truck-2,city-loc-8,city-loc-2];drive[truck-2,city-loc-2,city-loc-0];drop[truck-2,city-loc-0,package-13,capacity-1,capacity-2];drive[truck-0,city-loc-11,city-loc-9];pick-up[truck-0,city-loc-9,package-14,capacity-1,capacity-2];drive[truck-0,city-loc-9,city-loc-4];drive[truck-0,city-loc-4,city-loc-8];drive[truck-0,city-loc-8,city-loc-5];drop[truck-0,city-loc-5,package-14,capacity-1,capacity-2]
==>
0 drive truck-2 city-loc-7 city-loc-4 
1 drive truck-2 city-loc-4 city-loc-8 
2 drive truck-2 city-loc-8 city-loc-5 
3 pick-up truck-2 city-loc-5 package-0 capacity-1 capacity-2 
4 drive truck-2 city-loc-5 city-loc-8 
5 drive truck-2 city-loc-8 city-loc-4 
6 drive truck-2 city-loc-4 city-loc-9 
7 drop truck-2 city-loc-9 package-0 capacity-1 capacity-2 
8 drive truck-2 city-loc-9 city-loc-4 
9 drive truck-2 city-loc-4 city-loc-8 
10 drive truck-2 city-loc-8 city-loc-2 
11 pick-up truck-2 city-loc-2 package-1 capacity-1 capacity-2 
12 drive truck-2 city-loc-2 city-loc-10 
13 drive truck-2 city-loc-10 city-loc-2 
14 drive truck-2 city-loc-2 city-loc-0 
15 drop truck-2 city-loc-0 package-1 capacity-1 capacity-2 
16 drive truck-3 city-loc-3 city-loc-10 
17 drive truck-3 city-loc-10 city-loc-2 
18 drive truck-3 city-loc-2 city-loc-11 
19 pick-up truck-3 city-loc-11 package-2 capacity-1 capacity-2 
20 drive truck-3 city-loc-11 city-loc-13 
21 drive truck-3 city-loc-13 city-loc-8 
22 drop truck-3 city-loc-8 package-2 capacity-1 capacity-2 
23 drive truck-0 city-loc-12 city-loc-10 
24 drive truck-0 city-loc-10 city-loc-3 
25 drive truck-0 city-loc-3 city-loc-8 
26 pick-up truck-0 city-loc-8 package-3 capacity-1 capacity-2 
27 drive truck-0 city-loc-8 city-loc-2 
28 drive truck-0 city-loc-2 city-loc-6 
29 drop truck-0 city-loc-6 package-3 capacity-1 capacity-2 
30 drive truck-1 city-loc-3 city-loc-8 
31 drive truck-1 city-loc-8 city-loc-4 
32 drive truck-1 city-loc-4 city-loc-7 
33 pick-up truck-1 city-loc-7 package-4 capacity-1 capacity-2 
34 drive truck-1 city-loc-7 city-loc-4 
35 drive truck-1 city-loc-4 city-loc-8 
36 drive truck-1 city-loc-8 city-loc-13 
37 drop truck-1 city-loc-13 package-4 capacity-1 capacity-2 
38 drive truck-2 city-loc-0 city-loc-2 
39 drive truck-2 city-loc-2 city-loc-0 
40 pick-up truck-2 city-loc-0 package-5 capacity-1 capacity-2 
41 drive truck-2 city-loc-0 city-loc-2 
42 drive truck-2 city-loc-2 city-loc-11 
43 drive truck-2 city-loc-11 city-loc-9 
44 drop truck-2 city-loc-9 package-5 capacity-1 capacity-2 
45 drive truck-3 city-loc-8 city-loc-4 
46 drive truck-3 city-loc-4 city-loc-8 
47 drive truck-3 city-loc-8 city-loc-13 
48 pick-up truck-3 city-loc-13 package-6 capacity-1 capacity-2 
49 drive truck-3 city-loc-13 city-loc-11 
50 drive truck-3 city-loc-11 city-loc-11 
51 drive truck-3 city-loc-11 city-loc-1 
52 drop truck-3 city-loc-1 package-6 capacity-1 capacity-2 
53 noop truck-0 city-loc-6 
54 pick-up truck-0 city-loc-6 package-7 capacity-1 capacity-2 
55 drive truck-0 city-loc-6 city-loc-2 
56 drive truck-0 city-loc-2 city-loc-8 
57 drop truck-0 city-loc-8 package-7 capacity-1 capacity-2 
58 drive truck-0 city-loc-8 city-loc-5 
59 pick-up truck-0 city-loc-5 package-8 capacity-1 capacity-2 
60 drive truck-0 city-loc-5 city-loc-8 
61 drive truck-0 city-loc-8 city-loc-13 
62 drive truck-0 city-loc-13 city-loc-11 
63 drop truck-0 city-loc-11 package-8 capacity-1 capacity-2 
64 drive truck-3 city-loc-1 city-loc-11 
65 drive truck-3 city-loc-11 city-loc-2 
66 drive truck-3 city-loc-2 city-loc-0 
67 pick-up truck-3 city-loc-0 package-9 capacity-1 capacity-2 
68 drive truck-3 city-loc-0 city-loc-14 
69 drive truck-3 city-loc-14 city-loc-12 
70 drop truck-3 city-loc-12 package-9 capacity-1 capacity-2 
71 drive truck-3 city-loc-12 city-loc-14 
72 drive truck-3 city-loc-14 city-loc-8 
73 drive truck-3 city-loc-8 city-loc-3 
74 pick-up truck-3 city-loc-3 package-10 capacity-1 capacity-2 
75 drive truck-3 city-loc-3 city-loc-13 
76 drive truck-3 city-loc-13 city-loc-8 
77 drive truck-3 city-loc-8 city-loc-4 
78 drop truck-3 city-loc-4 package-10 capacity-1 capacity-2 
79 drive truck-1 city-loc-13 city-loc-11 
80 drive truck-1 city-loc-11 city-loc-2 
81 drive truck-1 city-loc-2 city-loc-6 
82 pick-up truck-1 city-loc-6 package-11 capacity-1 capacity-2 
83 drive truck-1 city-loc-6 city-loc-2 
84 drive truck-1 city-loc-2 city-loc-11 
85 drive truck-1 city-loc-11 city-loc-1 
86 drop truck-1 city-loc-1 package-11 capacity-1 capacity-2 
87 drive truck-3 city-loc-4 city-loc-7 
88 drive truck-3 city-loc-7 city-loc-4 
89 drive truck-3 city-loc-4 city-loc-8 
90 pick-up truck-3 city-loc-8 package-12 capacity-1 capacity-2 
91 drive truck-3 city-loc-8 city-loc-2 
92 drive truck-3 city-loc-2 city-loc-6 
93 drop truck-3 city-loc-6 package-12 capacity-1 capacity-2 
94 drive truck-2 city-loc-9 city-loc-4 
95 drive truck-2 city-loc-4 city-loc-8 
96 drive truck-2 city-loc-8 city-loc-5 
97 pick-up truck-2 city-loc-5 package-13 capacity-1 capacity-2 
98 drive truck-2 city-loc-5 city-loc-8 
99 drive truck-2 city-loc-8 city-loc-2 
100 drive truck-2 city-loc-2 city-loc-0 
101 drop truck-2 city-loc-0 package-13 capacity-1 capacity-2 
102 drive truck-0 city-loc-11 city-loc-9 
103 pick-up truck-0 city-loc-9 package-14 capacity-1 capacity-2 
104 drive truck-0 city-loc-9 city-loc-4 
105 drive truck-0 city-loc-4 city-loc-8 
106 drive truck-0 city-loc-8 city-loc-5 
107 drop truck-0 city-loc-5 package-14 capacity-1 capacity-2 
root 221
108 get-to truck-3 city-loc-7  -> m-drive-to 87
109 unload truck-3 city-loc-1 package-6  -> m-unload 52
110 get-to truck-3 city-loc-13  -> m-drive-to 20
111 get-to truck-3 city-loc-4  -> m-drive-to 45
112 get-to truck-0 city-loc-9  -> m-drive-to 102
113 get-to truck-3 city-loc-1  -> m-drive-to-via 164 51
114 get-to truck-2 city-loc-8  -> m-drive-to 4
115 get-to truck-1 city-loc-8  -> m-drive-to-via 206 35
116 get-to truck-2 city-loc-10  -> m-drive-to 12
117 get-to truck-3 city-loc-8  -> m-drive-to-via 111 46
118 get-to truck-0 city-loc-4  -> m-drive-to 104
119 deliver package-9 city-loc-12  -> m-deliver 160 137 198 168
120 get-to truck-0 city-loc-5  -> m-drive-to 58
121 get-to truck-2 city-loc-8  -> m-drive-to-via 203 1
122 get-to truck-3 city-loc-11  -> m-drive-to 64
123 deliver package-13 city-loc-0  -> m-deliver 151 157 224 220
124 deliver package-14 city-loc-5  -> m-deliver 112 184 180 156
125 load truck-2 city-loc-2 package-1  -> m-load 11
126 unload truck-3 city-loc-6 package-12  -> m-unload 93
127 deliver package-0 city-loc-9  -> m-deliver 149 153 189 173
128 get-to truck-0 city-loc-6  -> m-i-am-there 53
129 get-to truck-1 city-loc-4  -> m-drive-to-via 143 31
130 get-to truck-2 city-loc-2  -> m-drive-to 38
131 get-to truck-1 city-loc-11  -> m-drive-to 79
132 deliver package-11 city-loc-1  -> m-deliver 139 178 163 147
133 load truck-3 city-loc-3 package-10  -> m-load 74
134 unload truck-2 city-loc-9 package-5  -> m-unload 44
135 get-to truck-2 city-loc-11  -> m-drive-to-via 225 42
136 get-to truck-0 city-loc-8  -> m-drive-to-via 118 105
137 load truck-3 city-loc-0 package-9  -> m-load 67
138 get-to truck-3 city-loc-4  -> m-drive-to-via 185 77
139 get-to truck-1 city-loc-6  -> m-drive-to-via 188 81
140 load truck-3 city-loc-11 package-2  -> m-load 19
141 get-to truck-0 city-loc-6  -> m-drive-to-via 207 28
142 get-to truck-2 city-loc-4  -> m-drive-to 8
143 get-to truck-1 city-loc-8  -> m-drive-to 30
144 get-to truck-3 city-loc-8  -> m-drive-to-via 146 89
145 get-to truck-1 city-loc-11  -> m-drive-to-via 211 84
146 get-to truck-3 city-loc-4  -> m-drive-to-via 108 88
147 unload truck-1 city-loc-1 package-11  -> m-unload 86
148 get-to truck-3 city-loc-2  -> m-drive-to 91
149 get-to truck-2 city-loc-5  -> m-drive-to-via 121 2
150 get-to truck-0 city-loc-11  -> m-drive-to-via 158 62
151 get-to truck-2 city-loc-5  -> m-drive-to-via 210 96
152 load truck-3 city-loc-8 package-12  -> m-load 90
153 load truck-2 city-loc-5 package-0  -> m-load 3
154 get-to truck-0 city-loc-8  -> m-drive-to 60
155 deliver package-5 city-loc-9  -> m-deliver 166 199 179 134
156 unload truck-0 city-loc-5 package-14  -> m-unload 107
157 load truck-2 city-loc-5 package-13  -> m-load 97
158 get-to truck-0 city-loc-13  -> m-drive-to-via 154 61
159 unload truck-2 city-loc-0 package-1  -> m-unload 15
160 get-to truck-3 city-loc-0  -> m-drive-to-via 191 66
161 unload truck-3 city-loc-4 package-10  -> m-unload 78
162 get-to truck-0 city-loc-10  -> m-drive-to 23
163 get-to truck-1 city-loc-1  -> m-drive-to-via 145 85
164 get-to truck-3 city-loc-11  -> m-drive-to-via 167 50
165 get-to truck-2 city-loc-2  -> m-drive-to-via 116 13
166 get-to truck-2 city-loc-0  -> m-drive-to-via 130 39
167 get-to truck-3 city-loc-11  -> m-drive-to 49
168 unload truck-3 city-loc-12 package-9  -> m-unload 70
169 get-to truck-2 city-loc-4  -> m-drive-to-via 114 5
170 load truck-0 city-loc-5 package-8  -> m-load 59
171 get-to truck-1 city-loc-7  -> m-drive-to-via 129 32
172 get-to truck-3 city-loc-2  -> m-drive-to-via 181 17
173 unload truck-2 city-loc-9 package-0  -> m-unload 7
174 get-to truck-1 city-loc-13  -> m-drive-to-via 115 36
175 get-to truck-3 city-loc-13  -> m-drive-to-via 117 47
176 get-to truck-3 city-loc-8  -> m-drive-to-via 230 72
177 get-to truck-0 city-loc-8  -> m-drive-to-via 190 56
178 load truck-1 city-loc-6 package-11  -> m-load 82
179 get-to truck-2 city-loc-9  -> m-drive-to-via 135 43
180 get-to truck-0 city-loc-5  -> m-drive-to-via 136 106
181 get-to truck-3 city-loc-10  -> m-drive-to 16
182 deliver package-2 city-loc-8  -> m-deliver 227 140 194 229
183 unload truck-1 city-loc-13 package-4  -> m-unload 37
184 load truck-0 city-loc-9 package-14  -> m-load 103
185 get-to truck-3 city-loc-8  -> m-drive-to-via 208 76
186 get-to truck-3 city-loc-6  -> m-drive-to-via 148 92
187 load truck-1 city-loc-7 package-4  -> m-load 33
188 get-to truck-1 city-loc-2  -> m-drive-to-via 131 80
189 get-to truck-2 city-loc-9  -> m-drive-to-via 169 6
190 get-to truck-0 city-loc-2  -> m-drive-to 55
191 get-to truck-3 city-loc-2  -> m-drive-to-via 122 65
192 load truck-0 city-loc-8 package-3  -> m-load 26
193 load truck-0 city-loc-6 package-7  -> m-load 54
194 get-to truck-3 city-loc-8  -> m-drive-to-via 110 21
195 get-to truck-2 city-loc-0  -> m-drive-to-via 165 14
196 get-to truck-3 city-loc-14  -> m-drive-to 68
197 get-to truck-2 city-loc-8  -> m-drive-to-via 142 9
198 get-to truck-3 city-loc-12  -> m-drive-to-via 196 69
199 load truck-2 city-loc-0 package-5  -> m-load 40
200 deliver package-4 city-loc-13  -> m-deliver 171 187 174 183
201 deliver package-10 city-loc-4  -> m-deliver 209 133 138 161
202 deliver package-6 city-loc-1  -> m-deliver 175 212 113 109
203 get-to truck-2 city-loc-4  -> m-drive-to 0
204 deliver package-3 city-loc-6  -> m-deliver 218 192 141 215
205 deliver package-12 city-loc-6  -> m-deliver 144 152 186 126
206 get-to truck-1 city-loc-4  -> m-drive-to 34
207 get-to truck-0 city-loc-2  -> m-drive-to 27
208 get-to truck-3 city-loc-13  -> m-drive-to 75
209 get-to truck-3 city-loc-3  -> m-drive-to-via 176 73
210 get-to truck-2 city-loc-8  -> m-drive-to-via 222 95
211 get-to truck-1 city-loc-2  -> m-drive-to 83
212 load truck-3 city-loc-13 package-6  -> m-load 48
213 get-to truck-0 city-loc-3  -> m-drive-to-via 162 24
214 deliver package-8 city-loc-11  -> m-deliver 120 170 150 223
215 unload truck-0 city-loc-6 package-3  -> m-unload 29
216 get-to truck-2 city-loc-2  -> m-drive-to-via 226 99
217 unload truck-0 city-loc-8 package-7  -> m-unload 57
218 get-to truck-0 city-loc-8  -> m-drive-to-via 213 25
219 get-to truck-2 city-loc-2  -> m-drive-to-via 197 10
220 unload truck-2 city-loc-0 package-13  -> m-unload 101
221 __artificialTopCompilation__top_1  -> __top_1 127 231 182 204 200 155 202 228 214 119 201 132 205 123 124
222 get-to truck-2 city-loc-4  -> m-drive-to 94
223 unload truck-0 city-loc-11 package-8  -> m-unload 63
224 get-to truck-2 city-loc-0  -> m-drive-to-via 216 100
225 get-to truck-2 city-loc-2  -> m-drive-to 41
226 get-to truck-2 city-loc-8  -> m-drive-to 98
227 get-to truck-3 city-loc-11  -> m-drive-to-via 172 18
228 deliver package-7 city-loc-8  -> m-deliver 128 193 177 217
229 unload truck-3 city-loc-8 package-2  -> m-unload 22
230 get-to truck-3 city-loc-14  -> m-drive-to 71
231 deliver package-1 city-loc-0  -> m-deliver 219 125 195 159

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 11.502 MEMPEAK_KBS 497905.664
