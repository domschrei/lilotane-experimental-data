PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile19.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile19.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile19.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Grounded planning graph ... done in 224ms.
	Number of Grounded Actions 278
	Number of Grounded Literals 107
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 29
Grounding ... done.
	number of abstract tasks = 101
	number of tasks = 379
	number of decomposition methods = 378
	number of predicates = 107
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 101
	number of tasks = 379
	number of decomposition methods = 378
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 66ms.
	Number of Grounded Actions 278
	Number of Grounded Literals 76
	number of abstract tasks = 101
	number of tasks = 379
	number of decomposition methods = 378
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 101
	number of tasks = 379
	number of decomposition methods = 378
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 101
	number of tasks = 379
	number of decomposition methods = 378
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 20ms.
	Number of Grounded Actions 278
	Number of Grounded Literals 76
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 102
	number of tasks = 380
	number of decomposition methods = 379
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 146
	number of tasks = 424
	number of decomposition methods = 423
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 146
	number of tasks = 424
	number of decomposition methods = 423
	number of predicates = 76
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 278
	number of constants = 0
Tasks 278 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773247ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854773184
done
initial PDT has 44 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 44 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 8550
Size 8550 at 0/278
Size 3702
Size 3702 at 0/278
Size 939
Size 939 at 0/278
Size 259
Size 259 at 0/278
Size 210
Size 210 at 0/278
Size 210
Invariant time: 0.16
Number of invariants: 210
Invariant Clauses 9450
NUMBER OF CLAUSES 21043
NUMBER OF STATE CLAUSES 17506
NUMBER OF DECOMPOSITION CLAUSES 3537
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.19% 16.81% 0.0% 
NUMBER OF PATHS 44
Starting cryptominisat5.5
Setting starttime of solver to 1604489452060
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 66 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854772143
done
PDT has 66 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 14070
NUMBER OF CLAUSES 40931
NUMBER OF STATE CLAUSES 27156
NUMBER OF DECOMPOSITION CLAUSES 13775
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 66.35% 33.65% 0.0% 
NUMBER OF PATHS 66
Starting cryptominisat5.5
Setting starttime of solver to 1604489452762
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 108 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854771481
done
PDT has 108 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 22890
NUMBER OF CLAUSES 82361
NUMBER OF STATE CLAUSES 45256
NUMBER OF DECOMPOSITION CLAUSES 37105
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 54.95% 45.050000000000004% 0.0% 
NUMBER OF PATHS 108
Starting cryptominisat5.5
Setting starttime of solver to 1604489453581
Command exited with non-zero status 20
0.04 0.00

Time command gave the following runtime for the solver: 40
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770746
done
initial PDT has 150 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 150 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 31710
NUMBER OF CLAUSES 147295
NUMBER OF STATE CLAUSES 65156
NUMBER OF DECOMPOSITION CLAUSES 82139
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 44.24% 55.76% 0.0% 
NUMBER OF PATHS 150
Starting cryptominisat5.5
Setting starttime of solver to 1604489454544
Command exited with non-zero status 10
0.09 0.01

Time command gave the following runtime for the solver: 100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_7;2;0,326 326 m-drive-to
7;2;0 127 pathaction!3_7;2;0,124
Consider method^2_5;3,219 219 m-unload
5;3 26 pathaction!2_5;3,35
Consider method^4_6;2;0;0,89 89 m-drive-to
6;2;0;0 82 pathaction!4_6;2;0;0,114
Consider method^5_1;0;0;0;0,0 0 m-drive-to
1;0;0;0;0 172 pathaction!5_1;0;0;0;0,112
Consider method^5_0;0;0;0;0,0 0 m-drive-to
0;0;0;0;0 9 pathaction!5_0;0;0;0;0,112
Consider method^3_6;0;0,384 384 m-drive-to-via
6;0;0 162 pathaction!3_6;0;0,112
Consider method^2_5;2,145 145 m-drive-to-via
5;2 105 pathaction!2_5;2,133
Consider method^2_10;0,352 352 m-drive-to-via
10;0 196 pathaction!2_10;0,128
Consider method^3_0;2;0,173 173 m-drive-to-via
0;2;0 27 pathaction!3_0;2;0,112
Consider method^1_6,269 269 m-deliver
6 152 pathaction!1_6,242
Consider method^5_2;0;0;0;0,335 335 m-drive-to
2;0;0;0;0 36 pathaction!5_2;0;0;0;0,118
Consider method^3_10;2;0,186 186 m-drive-to-via
10;2;0 77 pathaction!3_10;2;0,118
Consider method^1_8,333 333 m-deliver
8 99 pathaction!1_8,245
Consider method^2_2;1,305 305 m-load
2;1 168 pathaction!2_2;1,206
Consider method^2_10;3,304 304 m-unload
10;3 155 pathaction!2_10;3,39
Consider method^3_5;0;0,85 85 m-drive-to
5;0;0 101 pathaction!3_5;0;0,122
Consider method^1_10,52 52 m-deliver
10 113 pathaction!1_10,246
Consider method^5_3;0;0;0;0,421 421 m-drive-to
3;0;0;0;0 135 pathaction!5_3;0;0;0;0,114
Consider method^4_3;2;0;0,192 192 m-drive-to-via
3;2;0;0 83 pathaction!4_3;2;0;0,130
Consider method^1_0,16 16 m-deliver
0 96 pathaction!1_0,239
Consider method^3_1;0;0,331 331 m-drive-to-via
1;0;0 47 pathaction!3_1;0;0,114
Consider method^5_9;2;0;0;0,120 120 m-drive-to
9;2;0;0;0 18 pathaction!5_9;2;0;0;0,115
Consider method^2_0;2,91 91 m-drive-to-via
0;2 5 pathaction!2_0;2,127
Consider method^2_8;3,32 32 m-unload
8;3 166 pathaction!2_8;3,40
Consider method^2_0;1,107 107 m-load
0;1 29 pathaction!2_0;1,212
Consider method^3_3;2;0,234 234 m-drive-to-via
3;2;0 180 pathaction!3_3;2;0,117
Consider method^2_4;3,72 72 m-unload
4;3 115 pathaction!2_4;3,29
Consider method^4_2;0;0;0,377 377 m-drive-to-via
2;0;0;0 31 pathaction!4_2;0;0;0,115
Consider method^2_5;1,308 308 m-load
5;1 67 pathaction!2_5;1,219
Consider method^2_7;0,203 203 m-drive-to-via
7;0 208 pathaction!2_7;0,122
Consider method^4_10;0;0;0,348 348 m-drive-to-via
10;0;0;0 86 pathaction!4_10;0;0;0,115
Consider method^4_5;2;0;0,416 416 m-drive-to-via
5;2;0;0 118 pathaction!4_5;2;0;0,123
Consider method^2_10;2,192 192 m-drive-to-via
10;2 195 pathaction!2_10;2,130
Consider method^2_6;2,91 91 m-drive-to-via
6;2 209 pathaction!2_6;2,127
Consider method^3_10;0;0,404 404 m-drive-to-via
10;0;0 42 pathaction!3_10;0;0,118
Consider method^5_7;0;0;0;0,205 205 m-drive-to
7;0;0;0;0 51 pathaction!5_7;0;0;0;0,121
Consider method^3_6;2;0,150 150 m-drive-to-via
6;2;0 103 pathaction!3_6;2;0,112
Consider method^5_4;2;0;0;0,386 386 m-drive-to
4;2;0;0;0 4 pathaction!5_4;2;0;0;0,114
Consider method^2_3;0,352 352 m-drive-to-via
3;0 141 pathaction!2_3;0,128
Consider method^4_0;0;0;0,140 140 m-drive-to-via
0;0;0;0 183 pathaction!4_0;0;0;0,117
Consider method^3_3;0;0,329 329 m-drive-to-via
3;0;0 161 pathaction!3_3;0;0,118
Consider method^3_2;0;0,188 188 m-drive-to-via
2;0;0 212 pathaction!3_2;0;0,112
Consider method^2_8;1,84 84 m-load
8;1 119 pathaction!2_8;1,208
Consider method^3_0;0;0,124 124 m-drive-to-via
0;0;0 189 pathaction!3_0;0;0,130
Consider method^5_3;2;0;0;0,6 6 m-drive-to
3;2;0;0;0 163 pathaction!5_3;2;0;0;0,118
Consider method^3_1;2;0,329 329 m-drive-to-via
1;2;0 190 pathaction!3_1;2;0,118
Consider method^2_5;0,273 273 m-drive-to-via
5;0 37 pathaction!2_5;0,131
Consider method^2_8;0,189 189 m-drive-to-via
8;0 202 pathaction!2_8;0,124
Consider method^1_3,64 64 m-deliver
3 174 pathaction!1_3,244
Consider method^2_4;0,124 124 m-drive-to-via
4;0 16 pathaction!2_4;0,130
Consider method^4_4;2;0;0,150 150 m-drive-to-via
4;2;0;0 72 pathaction!4_4;2;0;0,112
Consider method^2_3;3,201 201 m-unload
3;3 151 pathaction!2_3;3,34
Consider method^2_6;1,126 126 m-load
6;1 100 pathaction!2_6;1,195
Consider method^0_,422 422 __top_1
 187 pathaction!0_,379
Consider method^2_7;1,309 309 m-load
7;1 154 pathaction!2_7;1,210
Consider method^2_4;1,128 128 m-load
4;1 19 pathaction!2_4;1,229
Consider method^2_1;0,150 150 m-drive-to-via
1;0 62 pathaction!2_1;0,112
Consider method^2_1;2,263 263 m-drive-to-via
1;2 204 pathaction!2_1;2,134
Consider method^2_7;3,385 385 m-unload
7;3 60 pathaction!2_7;3,36
Consider method^2_9;1,247 247 m-load
9;1 156 pathaction!2_9;1,200
Consider method^3_4;0;0,227 227 m-drive-to
4;0;0 91 pathaction!3_4;0;0,117
Consider method^4_9;2;0;0,331 331 m-drive-to-via
9;2;0;0 81 pathaction!4_9;2;0;0,114
Consider method^3_9;2;0,99 99 m-drive-to-via
9;2;0 56 pathaction!3_9;2;0,130
Consider method^1_5,202 202 m-deliver
5 84 pathaction!1_5,236
Consider method^2_9;3,251 251 m-unload
9;3 134 pathaction!2_9;3,37
Consider method^5_0;2;0;0;0,363 363 m-drive-to
0;2;0;0;0 3 pathaction!5_0;2;0;0;0,112
Consider method^2_3;1,37 37 m-load
3;1 139 pathaction!2_3;1,226
Consider method^2_2;3,195 195 m-unload
2;3 211 pathaction!2_2;3,44
Consider method^5_5;2;0;0;0,332 332 m-drive-to
5;2;0;0;0 58 pathaction!5_5;2;0;0;0,122
Consider method^3_4;2;0,140 140 m-drive-to-via
4;2;0 97 pathaction!3_4;2;0,117
Consider method^3_8;0;0,185 185 m-i-am-there
8;0;0 8 pathaction!3_8;0;0,132
Consider method^2_6;3,44 44 m-unload
6;3 41 pathaction!2_6;3,25
Consider method^5_1;2;0;0;0,300 300 m-drive-to
1;2;0;0;0 75 pathaction!5_1;2;0;0;0,117
Consider method^2_3;2,101 101 m-drive-to-via
3;2 193 pathaction!2_3;2,119
Consider method^3_7;0;0,189 189 m-drive-to-via
7;0;0 164 pathaction!3_7;0;0,124
Consider method^4_7;0;0;0,76 76 m-drive-to-via
7;0;0;0 15 pathaction!4_7;0;0;0,132
Consider method^5_10;0;0;0;0,363 363 m-drive-to
10;0;0;0;0 110 pathaction!5_10;0;0;0;0,112
Consider method^4_1;0;0;0,348 348 m-drive-to-via
1;0;0;0 46 pathaction!4_1;0;0;0,115
Consider method^2_1;1,176 176 m-load
1;1 70 pathaction!2_1;1,199
Consider method^2_7;2,139 139 m-drive-to-via
7;2 88 pathaction!2_7;2,132
Consider method^3_8;2;0,168 168 m-drive-to
8;2;0 185 pathaction!3_8;2;0,122
Consider method^2_0;0,234 234 m-drive-to-via
0;0 48 pathaction!2_0;0,117
Consider method^2_9;0,0 0 m-drive-to
9;0 49 pathaction!2_9;0,112
Consider method^2_0;3,161 161 m-unload
0;3 71 pathaction!2_0;3,42
Consider method^4_0;2;0;0,20 20 m-drive-to-via
0;2;0;0 53 pathaction!4_0;2;0;0,129
Consider method^1_9,196 196 m-deliver
9 34 pathaction!1_9,243
Consider method^1_2,292 292 m-deliver
2 112 pathaction!1_2,241
Consider method^1_7,243 243 m-deliver
7 147 pathaction!1_7,237
Consider method^2_1;3,420 420 m-unload
1;3 38 pathaction!2_1;3,41
Consider method^2_9;2,234 234 m-drive-to-via
9;2 85 pathaction!2_9;2,117
Consider method^2_2;0,91 91 m-drive-to-via
2;0 50 pathaction!2_2;0,127
Consider method^4_1;2;0;0,124 124 m-drive-to-via
1;2;0;0 205 pathaction!4_1;2;0;0,130
Consider method^2_6;0,348 348 m-drive-to-via
6;0 14 pathaction!2_6;0,115
Consider method^3_5;2;0,249 249 m-drive-to-via
5;2;0 184 pathaction!3_5;2;0,121
Consider method^2_2;2,0 0 m-drive-to
2;2 191 pathaction!2_2;2,112
Consider method^2_10;1,163 163 m-load
10;1 145 pathaction!2_10;1,228
Consider method^4_3;0;0;0,99 99 m-drive-to-via
3;0;0;0 129 pathaction!4_3;0;0;0,130
Consider method^2_8;2,67 67 m-drive-to-via
8;2 78 pathaction!2_8;2,126
Consider method^4_6;0;0;0,227 227 m-drive-to
6;0;0;0 76 pathaction!4_6;0;0;0,117
Consider method^1_1,406 406 m-deliver
1 59 pathaction!1_1,238
Consider method^2_4;2,101 101 m-drive-to-via
4;2 54 pathaction!2_4;2,119
Consider method^4_10;2;0;0,369 369 m-i-am-there
10;2;0;0 7 pathaction!4_10;2;0;0,128
Consider method^1_4,167 167 m-deliver
4 207 pathaction!1_4,240


CHECKING primitive solution of length 91 ...
true 150 drive[truck-0,city-loc-11,city-loc-10;]
true 1 drive[truck-0,city-loc-10,city-loc-8;]
true 30 drive[truck-0,city-loc-8,city-loc-0;]
true 142 drive[truck-0,city-loc-0,city-loc-8;]
true 68 pick-up[truck-0,city-loc-8,package-0,capacity-2,capacity-3;]
true 55 drive[truck-0,city-loc-8,city-loc-10;]
true 158 drive[truck-0,city-loc-10,city-loc-6;]
true 90 drive[truck-0,city-loc-6,city-loc-10;]
true 206 drive[truck-0,city-loc-10,city-loc-11;]
true 165 drop[truck-0,city-loc-11,package-0,capacity-2,capacity-3;]
true 121 drive[truck-0,city-loc-11,city-loc-10;]
true 74 drive[truck-0,city-loc-10,city-loc-2;]
true 104 drive[truck-0,city-loc-2,city-loc-9;]
true 176 drive[truck-0,city-loc-9,city-loc-10;]
true 124 pick-up[truck-0,city-loc-10,package-1,capacity-2,capacity-3;]
true 143 drive[truck-0,city-loc-10,city-loc-8;]
true 197 drive[truck-0,city-loc-8,city-loc-0;]
true 107 drive[truck-0,city-loc-0,city-loc-4;]
true 109 drive[truck-0,city-loc-4,city-loc-3;]
true 210 drop[truck-0,city-loc-3,package-1,capacity-2,capacity-3;]
true 66 drive[truck-0,city-loc-3,city-loc-4;]
true 179 drive[truck-0,city-loc-4,city-loc-2;]
true 177 drive[truck-0,city-loc-2,city-loc-10;]
true 65 drive[truck-0,city-loc-10,city-loc-11;]
true 6 pick-up[truck-0,city-loc-11,package-2,capacity-2,capacity-3;]
true 192 drive[truck-0,city-loc-11,city-loc-10;]
true 24 drop[truck-0,city-loc-10,package-2,capacity-2,capacity-3;]
true 122 drive[truck-0,city-loc-10,city-loc-9;]
true 171 drive[truck-0,city-loc-9,city-loc-0;]
true 130 drive[truck-0,city-loc-0,city-loc-4;]
true 182 drive[truck-0,city-loc-4,city-loc-1;]
true 2 pick-up[truck-0,city-loc-1,package-3,capacity-2,capacity-3;]
true 159 drive[truck-0,city-loc-1,city-loc-4;]
true 10 drive[truck-0,city-loc-4,city-loc-0;]
true 200 drive[truck-0,city-loc-0,city-loc-8;]
true 148 drive[truck-0,city-loc-8,city-loc-5;]
true 0 drop[truck-0,city-loc-5,package-3,capacity-2,capacity-3;]
true 181 drive[truck-0,city-loc-5,city-loc-8;]
true 61 drive[truck-0,city-loc-8,city-loc-0;]
true 43 pick-up[truck-0,city-loc-0,package-4,capacity-2,capacity-3;]
true 116 drive[truck-0,city-loc-0,city-loc-9;]
true 23 drive[truck-0,city-loc-9,city-loc-10;]
true 153 drive[truck-0,city-loc-10,city-loc-8;]
true 13 drive[truck-0,city-loc-8,city-loc-5;]
true 201 drop[truck-0,city-loc-5,package-4,capacity-2,capacity-3;]
true 35 drive[truck-1,city-loc-1,city-loc-4;]
true 20 drive[truck-1,city-loc-4,city-loc-3;]
true 89 pick-up[truck-1,city-loc-3,package-5,capacity-2,capacity-3;]
true 203 drive[truck-1,city-loc-3,city-loc-4;]
true 138 drive[truck-1,city-loc-4,city-loc-0;]
true 102 drive[truck-1,city-loc-0,city-loc-8;]
true 178 drive[truck-1,city-loc-8,city-loc-5;]
true 144 drop[truck-1,city-loc-5,package-5,capacity-2,capacity-3;]
true 64 drive[truck-0,city-loc-5,city-loc-8;]
true 175 drive[truck-0,city-loc-8,city-loc-10;]
true 45 drive[truck-0,city-loc-10,city-loc-2;]
true 170 pick-up[truck-0,city-loc-2,package-6,capacity-2,capacity-3;]
true 194 drive[truck-0,city-loc-2,city-loc-9;]
true 17 drive[truck-0,city-loc-9,city-loc-10;]
true 22 drive[truck-0,city-loc-10,city-loc-11;]
true 63 drop[truck-0,city-loc-11,package-6,capacity-2,capacity-3;]
true 125 drive[truck-1,city-loc-5,city-loc-8;]
true 160 drive[truck-1,city-loc-8,city-loc-10;]
true 28 drive[truck-1,city-loc-10,city-loc-2;]
true 94 drive[truck-1,city-loc-2,city-loc-4;]
true 131 pick-up[truck-1,city-loc-4,package-7,capacity-2,capacity-3;]
true 92 drive[truck-1,city-loc-4,city-loc-2;]
true 126 drive[truck-1,city-loc-2,city-loc-10;]
true 21 drop[truck-1,city-loc-10,package-7,capacity-2,capacity-3;]
true 186 noop[truck-1,city-loc-10;]
true 25 drive[truck-1,city-loc-10,city-loc-2;]
true 33 pick-up[truck-1,city-loc-2,package-8,capacity-2,capacity-3;]
true 111 drive[truck-1,city-loc-2,city-loc-4;]
true 140 drive[truck-1,city-loc-4,city-loc-7;]
true 198 drop[truck-1,city-loc-7,package-8,capacity-2,capacity-3;]
true 69 drive[truck-0,city-loc-11,city-loc-10;]
true 149 pick-up[truck-0,city-loc-10,package-9,capacity-2,capacity-3;]
true 73 drive[truck-0,city-loc-10,city-loc-2;]
true 39 drive[truck-0,city-loc-2,city-loc-9;]
true 188 drive[truck-0,city-loc-9,city-loc-0;]
true 132 drive[truck-0,city-loc-0,city-loc-8;]
true 114 drop[truck-0,city-loc-8,package-9,capacity-2,capacity-3;]
true 169 drive[truck-0,city-loc-8,city-loc-10;]
true 199 drive[truck-0,city-loc-10,city-loc-2;]
true 12 drive[truck-0,city-loc-2,city-loc-4;]
true 52 drive[truck-0,city-loc-4,city-loc-1;]
true 80 pick-up[truck-0,city-loc-1,package-10,capacity-2,capacity-3;]
true 133 noop[truck-0,city-loc-1;]
true 79 drive[truck-0,city-loc-1,city-loc-4;]
true 93 drive[truck-0,city-loc-4,city-loc-0;]
true 213 drop[truck-0,city-loc-0,package-10,capacity-2,capacity-3;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 197811856
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 76
number of actions                    = 424
number of abstract actions           = 146
number of primitive actions          = 278
number of methods                    = 423
number of primitive shop actions     = 0
number of primitive non-shop actions = 278
size of largest method               = 11
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 58043
number of clauses               = 147295
average size of clauses         = 2.732380596761601
number of assert                = 16
number of horn                  = 132739
K offset                        = 0
K chosen value                  = 6
state formula                   = 65156
method children clauses         = 0
number of paths                 = 150
maximum plan length             = 150
number of decomposition clauses = 82139
number of ordering clauses      = 0
number of state clauses         = 65156
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 6603
============ parsing ============
total                         = 889
file parser                   = 520
sort expansion                = 170
closed world assumption       = 94
inherit preconditions         = 0
shop methods                  = 2
eliminate identical variables = 37
strip domain of hybridity     = 1
flatten formula               = 65
============ preprocessing ============
total                                      = 1522
compile negative preconditions             = 40
compile unit methods                       = 0
split parameter                            = 38
expand choiceless abstract tasks           = 2
compile methods with identical tasks       = 34
removing unnecessary predicates            = 139
lifted reachabiltiy analysis               = 58
grounded planning graph analysis           = 499
grounded task decomposition graph analysis = 479
grounding                                  = 181
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 211
============ sat ============
total                                        = 2935
generate formula                             = 2181
generate path decomposition tree             = 347
normalise path decomposition tree            = 163
sog optimisation                             = 90
translate path decomposition tree to clauses = 630
generate state formula                       = 2030
generate state invariant formula             = 132
transform to DIMACS                          = 264
SAT solver                                   = 150
SAT solver for K=0003                        = 0
SAT solver for K=0004                        = 10
SAT solver for K=0005                        = 40
SAT solver for K=0006                        = 100

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="278";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="146";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="197811856";"40 sat:20:state formula"="65156";"40 sat:01:number of variables"="58043";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="150";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="423";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="424";"30 problem:08:number of primitive non-shop actions"="278";"30 problem:02:number of predicates"="76";"40 sat:03:number of horn"="132739";"40 sat:15:K chosen value"="6";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="11";"40 sat:03:average size of clauses"="2.732380596761601";"40 sat:02:number of clauses"="147295";"40 sat:50:number of state clauses"="65156";"40 sat:03:number of assert"="16";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="150";"40 sat:50:number of decomposition clauses"="82139";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="520";"01 parsing:08:flatten formula"="65";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="2935";"40 sat:16:generate state formula"="2030";"40 sat:20:transform to DIMACS"="264";"40 sat:11:generate path decomposition tree"="347";"02 preprocessing:07:compile methods with identical tasks"="34";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="139";"01 parsing:03:closed world assumption"="94";"02 preprocessing:11:lifted reachabiltiy analysis"="58";"01 parsing:02:sort expansion"="170";"40 sat:12:normalise path decomposition tree"="163";"40 sat:40:SAT solver"="150";"01 parsing:00:total"="889";"40 sat:10:generate formula"="2181";"40 sat:41:SAT solver for K=0005"="40";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="40";"00 total:00:total"="6603";"40 sat:13:sog optimisation"="90";"02 preprocessing:12:grounded planning graph analysis"="499";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="479";"40 sat:41:SAT solver for K=0006"="100";"02 preprocessing:04:split parameter"="38";"01 parsing:05:shop methods"="2";"10 search preparation:02:compute state invariants"="211";"01 parsing:06:eliminate identical variables"="37";"40 sat:15:translate path decomposition tree to clauses"="630";"02 preprocessing:05:expand choiceless abstract tasks"="2";"40 sat:41:SAT solver for K=0003"="0";"40 sat:17:generate state invariant formula"="132";"02 preprocessing:00:total"="1522";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="181"
#!verify drive[truck-0,city-loc-11,city-loc-10];drive[truck-0,city-loc-10,city-loc-8];drive[truck-0,city-loc-8,city-loc-0];drive[truck-0,city-loc-0,city-loc-8];pick-up[truck-0,city-loc-8,package-0,capacity-2,capacity-3];drive[truck-0,city-loc-8,city-loc-10];drive[truck-0,city-loc-10,city-loc-6];drive[truck-0,city-loc-6,city-loc-10];drive[truck-0,city-loc-10,city-loc-11];drop[truck-0,city-loc-11,package-0,capacity-2,capacity-3];drive[truck-0,city-loc-11,city-loc-10];drive[truck-0,city-loc-10,city-loc-2];drive[truck-0,city-loc-2,city-loc-9];drive[truck-0,city-loc-9,city-loc-10];pick-up[truck-0,city-loc-10,package-1,capacity-2,capacity-3];drive[truck-0,city-loc-10,city-loc-8];drive[truck-0,city-loc-8,city-loc-0];drive[truck-0,city-loc-0,city-loc-4];drive[truck-0,city-loc-4,city-loc-3];drop[truck-0,city-loc-3,package-1,capacity-2,capacity-3];drive[truck-0,city-loc-3,city-loc-4];drive[truck-0,city-loc-4,city-loc-2];drive[truck-0,city-loc-2,city-loc-10];drive[truck-0,city-loc-10,city-loc-11];pick-up[truck-0,city-loc-11,package-2,capacity-2,capacity-3];drive[truck-0,city-loc-11,city-loc-10];drop[truck-0,city-loc-10,package-2,capacity-2,capacity-3];drive[truck-0,city-loc-10,city-loc-9];drive[truck-0,city-loc-9,city-loc-0];drive[truck-0,city-loc-0,city-loc-4];drive[truck-0,city-loc-4,city-loc-1];pick-up[truck-0,city-loc-1,package-3,capacity-2,capacity-3];drive[truck-0,city-loc-1,city-loc-4];drive[truck-0,city-loc-4,city-loc-0];drive[truck-0,city-loc-0,city-loc-8];drive[truck-0,city-loc-8,city-loc-5];drop[truck-0,city-loc-5,package-3,capacity-2,capacity-3];drive[truck-0,city-loc-5,city-loc-8];drive[truck-0,city-loc-8,city-loc-0];pick-up[truck-0,city-loc-0,package-4,capacity-2,capacity-3];drive[truck-0,city-loc-0,city-loc-9];drive[truck-0,city-loc-9,city-loc-10];drive[truck-0,city-loc-10,city-loc-8];drive[truck-0,city-loc-8,city-loc-5];drop[truck-0,city-loc-5,package-4,capacity-2,capacity-3];drive[truck-1,city-loc-1,city-loc-4];drive[truck-1,city-loc-4,city-loc-3];pick-up[truck-1,city-loc-3,package-5,capacity-2,capacity-3];drive[truck-1,city-loc-3,city-loc-4];drive[truck-1,city-loc-4,city-loc-0];drive[truck-1,city-loc-0,city-loc-8];drive[truck-1,city-loc-8,city-loc-5];drop[truck-1,city-loc-5,package-5,capacity-2,capacity-3];drive[truck-0,city-loc-5,city-loc-8];drive[truck-0,city-loc-8,city-loc-10];drive[truck-0,city-loc-10,city-loc-2];pick-up[truck-0,city-loc-2,package-6,capacity-2,capacity-3];drive[truck-0,city-loc-2,city-loc-9];drive[truck-0,city-loc-9,city-loc-10];drive[truck-0,city-loc-10,city-loc-11];drop[truck-0,city-loc-11,package-6,capacity-2,capacity-3];drive[truck-1,city-loc-5,city-loc-8];drive[truck-1,city-loc-8,city-loc-10];drive[truck-1,city-loc-10,city-loc-2];drive[truck-1,city-loc-2,city-loc-4];pick-up[truck-1,city-loc-4,package-7,capacity-2,capacity-3];drive[truck-1,city-loc-4,city-loc-2];drive[truck-1,city-loc-2,city-loc-10];drop[truck-1,city-loc-10,package-7,capacity-2,capacity-3];noop[truck-1,city-loc-10];drive[truck-1,city-loc-10,city-loc-2];pick-up[truck-1,city-loc-2,package-8,capacity-2,capacity-3];drive[truck-1,city-loc-2,city-loc-4];drive[truck-1,city-loc-4,city-loc-7];drop[truck-1,city-loc-7,package-8,capacity-2,capacity-3];drive[truck-0,city-loc-11,city-loc-10];pick-up[truck-0,city-loc-10,package-9,capacity-2,capacity-3];drive[truck-0,city-loc-10,city-loc-2];drive[truck-0,city-loc-2,city-loc-9];drive[truck-0,city-loc-9,city-loc-0];drive[truck-0,city-loc-0,city-loc-8];drop[truck-0,city-loc-8,package-9,capacity-2,capacity-3];drive[truck-0,city-loc-8,city-loc-10];drive[truck-0,city-loc-10,city-loc-2];drive[truck-0,city-loc-2,city-loc-4];drive[truck-0,city-loc-4,city-loc-1];pick-up[truck-0,city-loc-1,package-10,capacity-2,capacity-3];noop[truck-0,city-loc-1];drive[truck-0,city-loc-1,city-loc-4];drive[truck-0,city-loc-4,city-loc-0];drop[truck-0,city-loc-0,package-10,capacity-2,capacity-3]
==>
0 drive truck-0 city-loc-11 city-loc-10 
1 drive truck-0 city-loc-10 city-loc-8 
2 drive truck-0 city-loc-8 city-loc-0 
3 drive truck-0 city-loc-0 city-loc-8 
4 pick-up truck-0 city-loc-8 package-0 capacity-2 capacity-3 
5 drive truck-0 city-loc-8 city-loc-10 
6 drive truck-0 city-loc-10 city-loc-6 
7 drive truck-0 city-loc-6 city-loc-10 
8 drive truck-0 city-loc-10 city-loc-11 
9 drop truck-0 city-loc-11 package-0 capacity-2 capacity-3 
10 drive truck-0 city-loc-11 city-loc-10 
11 drive truck-0 city-loc-10 city-loc-2 
12 drive truck-0 city-loc-2 city-loc-9 
13 drive truck-0 city-loc-9 city-loc-10 
14 pick-up truck-0 city-loc-10 package-1 capacity-2 capacity-3 
15 drive truck-0 city-loc-10 city-loc-8 
16 drive truck-0 city-loc-8 city-loc-0 
17 drive truck-0 city-loc-0 city-loc-4 
18 drive truck-0 city-loc-4 city-loc-3 
19 drop truck-0 city-loc-3 package-1 capacity-2 capacity-3 
20 drive truck-0 city-loc-3 city-loc-4 
21 drive truck-0 city-loc-4 city-loc-2 
22 drive truck-0 city-loc-2 city-loc-10 
23 drive truck-0 city-loc-10 city-loc-11 
24 pick-up truck-0 city-loc-11 package-2 capacity-2 capacity-3 
25 drive truck-0 city-loc-11 city-loc-10 
26 drop truck-0 city-loc-10 package-2 capacity-2 capacity-3 
27 drive truck-0 city-loc-10 city-loc-9 
28 drive truck-0 city-loc-9 city-loc-0 
29 drive truck-0 city-loc-0 city-loc-4 
30 drive truck-0 city-loc-4 city-loc-1 
31 pick-up truck-0 city-loc-1 package-3 capacity-2 capacity-3 
32 drive truck-0 city-loc-1 city-loc-4 
33 drive truck-0 city-loc-4 city-loc-0 
34 drive truck-0 city-loc-0 city-loc-8 
35 drive truck-0 city-loc-8 city-loc-5 
36 drop truck-0 city-loc-5 package-3 capacity-2 capacity-3 
37 drive truck-0 city-loc-5 city-loc-8 
38 drive truck-0 city-loc-8 city-loc-0 
39 pick-up truck-0 city-loc-0 package-4 capacity-2 capacity-3 
40 drive truck-0 city-loc-0 city-loc-9 
41 drive truck-0 city-loc-9 city-loc-10 
42 drive truck-0 city-loc-10 city-loc-8 
43 drive truck-0 city-loc-8 city-loc-5 
44 drop truck-0 city-loc-5 package-4 capacity-2 capacity-3 
45 drive truck-1 city-loc-1 city-loc-4 
46 drive truck-1 city-loc-4 city-loc-3 
47 pick-up truck-1 city-loc-3 package-5 capacity-2 capacity-3 
48 drive truck-1 city-loc-3 city-loc-4 
49 drive truck-1 city-loc-4 city-loc-0 
50 drive truck-1 city-loc-0 city-loc-8 
51 drive truck-1 city-loc-8 city-loc-5 
52 drop truck-1 city-loc-5 package-5 capacity-2 capacity-3 
53 drive truck-0 city-loc-5 city-loc-8 
54 drive truck-0 city-loc-8 city-loc-10 
55 drive truck-0 city-loc-10 city-loc-2 
56 pick-up truck-0 city-loc-2 package-6 capacity-2 capacity-3 
57 drive truck-0 city-loc-2 city-loc-9 
58 drive truck-0 city-loc-9 city-loc-10 
59 drive truck-0 city-loc-10 city-loc-11 
60 drop truck-0 city-loc-11 package-6 capacity-2 capacity-3 
61 drive truck-1 city-loc-5 city-loc-8 
62 drive truck-1 city-loc-8 city-loc-10 
63 drive truck-1 city-loc-10 city-loc-2 
64 drive truck-1 city-loc-2 city-loc-4 
65 pick-up truck-1 city-loc-4 package-7 capacity-2 capacity-3 
66 drive truck-1 city-loc-4 city-loc-2 
67 drive truck-1 city-loc-2 city-loc-10 
68 drop truck-1 city-loc-10 package-7 capacity-2 capacity-3 
69 noop truck-1 city-loc-10 
70 drive truck-1 city-loc-10 city-loc-2 
71 pick-up truck-1 city-loc-2 package-8 capacity-2 capacity-3 
72 drive truck-1 city-loc-2 city-loc-4 
73 drive truck-1 city-loc-4 city-loc-7 
74 drop truck-1 city-loc-7 package-8 capacity-2 capacity-3 
75 drive truck-0 city-loc-11 city-loc-10 
76 pick-up truck-0 city-loc-10 package-9 capacity-2 capacity-3 
77 drive truck-0 city-loc-10 city-loc-2 
78 drive truck-0 city-loc-2 city-loc-9 
79 drive truck-0 city-loc-9 city-loc-0 
80 drive truck-0 city-loc-0 city-loc-8 
81 drop truck-0 city-loc-8 package-9 capacity-2 capacity-3 
82 drive truck-0 city-loc-8 city-loc-10 
83 drive truck-0 city-loc-10 city-loc-2 
84 drive truck-0 city-loc-2 city-loc-4 
85 drive truck-0 city-loc-4 city-loc-1 
86 pick-up truck-0 city-loc-1 package-10 capacity-2 capacity-3 
87 noop truck-0 city-loc-1 
88 drive truck-0 city-loc-1 city-loc-4 
89 drive truck-0 city-loc-4 city-loc-0 
90 drop truck-0 city-loc-0 package-10 capacity-2 capacity-3 
root 148
91 get-to truck-0 city-loc-10  -> m-drive-to 0
92 get-to truck-0 city-loc-4  -> m-drive-to-via 144 29
93 get-to truck-0 city-loc-3  -> m-drive-to-via 155 18
94 get-to truck-0 city-loc-1  -> m-drive-to-via 92 30
95 unload truck-0 city-loc-10 package-2  -> m-unload 26
96 unload truck-0 city-loc-5 package-3  -> m-unload 36
97 load truck-0 city-loc-1 package-10  -> m-load 86
98 get-to truck-0 city-loc-11  -> m-drive-to-via 153 23
99 get-to truck-0 city-loc-10  -> m-drive-to-via 179 13
100 get-to truck-1 city-loc-2  -> m-drive-to-via 136 70
101 get-to truck-0 city-loc-10  -> m-drive-to 75
102 get-to truck-0 city-loc-0  -> m-drive-to-via 139 89
103 get-to truck-0 city-loc-1  -> m-i-am-there 87
104 get-to truck-0 city-loc-8  -> m-drive-to-via 91 1
105 deliver package-8 city-loc-7  -> m-deliver 100 112 135 129
106 unload truck-1 city-loc-5 package-5  -> m-unload 52
107 load truck-1 city-loc-4 package-7  -> m-load 65
108 deliver package-10 city-loc-0  -> m-deliver 146 97 102 166
109 get-to truck-1 city-loc-3  -> m-drive-to-via 142 46
110 get-to truck-0 city-loc-8  -> m-drive-to-via 121 80
111 get-to truck-0 city-loc-10  -> m-drive-to 82
112 load truck-1 city-loc-2 package-8  -> m-load 71
113 get-to truck-0 city-loc-6  -> m-drive-to-via 145 6
114 get-to truck-0 city-loc-0  -> m-drive-to-via 123 38
115 unload truck-0 city-loc-8 package-9  -> m-unload 81
116 load truck-0 city-loc-10 package-1  -> m-load 14
117 get-to truck-0 city-loc-10  -> m-drive-to-via 171 41
118 load truck-0 city-loc-1 package-3  -> m-load 31
119 deliver package-7 city-loc-10  -> m-deliver 149 107 156 175
120 load truck-0 city-loc-2 package-6  -> m-load 56
121 get-to truck-0 city-loc-0  -> m-drive-to-via 165 79
122 load truck-0 city-loc-10 package-9  -> m-load 76
123 get-to truck-0 city-loc-8  -> m-drive-to 37
124 get-to truck-1 city-loc-2  -> m-drive-to 66
125 deliver package-0 city-loc-11  -> m-deliver 177 133 186 164
126 get-to truck-0 city-loc-8  -> m-drive-to-via 117 42
127 get-to truck-0 city-loc-2  -> m-drive-to-via 111 83
128 get-to truck-0 city-loc-10  -> m-drive-to 25
129 unload truck-1 city-loc-7 package-8  -> m-unload 74
130 get-to truck-1 city-loc-2  -> m-drive-to-via 183 63
131 get-to truck-0 city-loc-11  -> m-drive-to-via 154 59
132 get-to truck-0 city-loc-0  -> m-drive-to-via 167 16
133 load truck-0 city-loc-8 package-0  -> m-load 4
134 get-to truck-0 city-loc-10  -> m-drive-to-via 113 7
135 get-to truck-1 city-loc-7  -> m-drive-to-via 187 73
136 get-to truck-1 city-loc-10  -> m-i-am-there 69
137 deliver package-4 city-loc-5  -> m-deliver 114 173 180 191
138 get-to truck-1 city-loc-5  -> m-drive-to-via 141 51
139 get-to truck-0 city-loc-4  -> m-drive-to-via 103 88
140 deliver package-9 city-loc-8  -> m-deliver 101 122 110 115
141 get-to truck-1 city-loc-8  -> m-drive-to-via 159 50
142 get-to truck-1 city-loc-4  -> m-drive-to 45
143 get-to truck-0 city-loc-8  -> m-drive-to 53
144 get-to truck-0 city-loc-0  -> m-drive-to-via 192 28
145 get-to truck-0 city-loc-10  -> m-drive-to 5
146 get-to truck-0 city-loc-1  -> m-drive-to-via 158 85
147 get-to truck-0 city-loc-2  -> m-drive-to 77
148 __artificialTopCompilation__top_1  -> __top_1 125 181 168 174 137 184 188 119 105 140 108
149 get-to truck-1 city-loc-4  -> m-drive-to-via 130 64
150 get-to truck-1 city-loc-8  -> m-drive-to 61
151 load truck-1 city-loc-3 package-5  -> m-load 47
152 get-to truck-0 city-loc-0  -> m-drive-to-via 104 2
153 get-to truck-0 city-loc-10  -> m-drive-to-via 178 22
154 get-to truck-0 city-loc-10  -> m-drive-to-via 190 58
155 get-to truck-0 city-loc-4  -> m-drive-to-via 132 17
156 get-to truck-1 city-loc-10  -> m-drive-to-via 124 67
157 get-to truck-1 city-loc-4  -> m-drive-to 48
158 get-to truck-0 city-loc-4  -> m-drive-to-via 127 84
159 get-to truck-1 city-loc-0  -> m-drive-to-via 157 49
160 get-to truck-0 city-loc-4  -> m-drive-to 20
161 get-to truck-0 city-loc-8  -> m-drive-to-via 185 34
162 get-to truck-0 city-loc-2  -> m-drive-to-via 170 55
163 unload truck-0 city-loc-3 package-1  -> m-unload 19
164 unload truck-0 city-loc-11 package-0  -> m-unload 9
165 get-to truck-0 city-loc-9  -> m-drive-to-via 147 78
166 unload truck-0 city-loc-0 package-10  -> m-unload 90
167 get-to truck-0 city-loc-8  -> m-drive-to 15
168 deliver package-2 city-loc-10  -> m-deliver 98 189 128 95
169 get-to truck-0 city-loc-5  -> m-drive-to-via 161 35
170 get-to truck-0 city-loc-10  -> m-drive-to-via 143 54
171 get-to truck-0 city-loc-9  -> m-drive-to 40
172 get-to truck-0 city-loc-2  -> m-drive-to-via 176 11
173 load truck-0 city-loc-0 package-4  -> m-load 39
174 deliver package-3 city-loc-5  -> m-deliver 94 118 169 96
175 unload truck-1 city-loc-10 package-7  -> m-unload 68
176 get-to truck-0 city-loc-10  -> m-drive-to 10
177 get-to truck-0 city-loc-8  -> m-drive-to-via 152 3
178 get-to truck-0 city-loc-2  -> m-drive-to-via 160 21
179 get-to truck-0 city-loc-9  -> m-drive-to-via 172 12
180 get-to truck-0 city-loc-5  -> m-drive-to-via 126 43
181 deliver package-1 city-loc-3  -> m-deliver 99 116 93 163
182 unload truck-0 city-loc-11 package-6  -> m-unload 60
183 get-to truck-1 city-loc-10  -> m-drive-to-via 150 62
184 deliver package-5 city-loc-5  -> m-deliver 109 151 138 106
185 get-to truck-0 city-loc-0  -> m-drive-to-via 193 33
186 get-to truck-0 city-loc-11  -> m-drive-to-via 134 8
187 get-to truck-1 city-loc-4  -> m-drive-to 72
188 deliver package-6 city-loc-11  -> m-deliver 162 120 131 182
189 load truck-0 city-loc-11 package-2  -> m-load 24
190 get-to truck-0 city-loc-9  -> m-drive-to 57
191 unload truck-0 city-loc-5 package-4  -> m-unload 44
192 get-to truck-0 city-loc-9  -> m-drive-to 27
193 get-to truck-0 city-loc-4  -> m-drive-to 32

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 7.785 MEMPEAK_KBS 524810.24
