PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p19.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p19.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p19.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounded planning graph ... done in 591ms.
	Number of Grounded Actions 2819
	Number of Grounded Literals 418
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 418
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 436ms.
	Number of Grounded Actions 2797
	Number of Grounded Literals 388
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1321
	number of tasks = 4118
	number of decomposition methods = 5185
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4829
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4829
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4829
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 249ms.
	Number of Grounded Actions 2797
	Number of Grounded Literals 388
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4829
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4589
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4589
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4589
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4589
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 965
	number of tasks = 3762
	number of decomposition methods = 4589
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1092
	number of epsilon methods = 0
	number of primitive tasks = 2797
	number of constants = 0
Tasks 2797 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767638ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854767098
done
initial PDT has 264 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 264 leafs
SHOP LEAFS 88
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 225234
Size 225234 at 0/2797
Size 225159 at 500/2797
Size 191372 at 1000/2797
Size 45662 at 1500/2797
Size 29557 at 2000/2797
Size 29557 at 2500/2797
Size 29557
Size 29557 at 0/2797
Size 29557 at 500/2797
Size 21208 at 1000/2797
Size 12590 at 1500/2797
Size 4184 at 2000/2797
Size 4184 at 2500/2797
Size 4146
Size 4146 at 0/2797
Size 4146 at 500/2797
Size 4134 at 1000/2797
Size 4091 at 1500/2797
Size 4002 at 2000/2797
Size 4002 at 2500/2797
Size 3997
Size 3997 at 0/2797
Size 3997 at 500/2797
Size 3949 at 1000/2797
Size 3829 at 1500/2797
Size 3754 at 2000/2797
Size 3754 at 2500/2797
Size 3754
Size 3754 at 0/2797
Size 3754 at 500/2797
Size 3754 at 1000/2797
Size 3754 at 1500/2797
Size 3754 at 2000/2797
Size 3754 at 2500/2797
Size 3754
Invariant time: 2.544
Number of invariants: 3754
Invariant Clauses 994810
NUMBER OF CLAUSES 1519698
NUMBER OF STATE CLAUSES 1282238
NUMBER OF DECOMPOSITION CLAUSES 237460
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.37% 15.63% 0.0% 
NUMBER OF PATHS 264
Starting cryptominisat5.5
Setting starttime of solver to 1604475485904
Command exited with non-zero status 10
0.78 0.05

Time command gave the following runtime for the solver: 830
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_5;1;1,1031 1031 m7_do_fill_shot
5;1;1 305 pathaction!3_5;1;1,2521
Consider method^3_4;1;1,4495 4495 m9_do_fill_shot
4;1;1 213 pathaction!3_4;1;1,2598
Consider method^3_1;2;2,2682 2682 _m3_get_second_ingredient_3
1;2;2 135 pathaction!3_1;2;2,2402
Consider method^3_9;1;3,3911 3911 _m2_get_first_ingredient_4
9;1;3 28 pathaction!3_9;1;3,2651
Consider method^1_3,806 806 m0_do_cocktail_in_shot1
3 364 pathaction!1_3,84
Consider method^1_5,3227 3227 m0_do_cocktail_in_shot1
5 353 pathaction!1_5,83
Consider method^2_8;3,143 143 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 344 pathaction!2_8;3,3312
Consider method^2_2;1,4509 4509 m2_get_first_ingredient
2;1 89 pathaction!2_2;1,3305
Consider method^3_5;3;1,664 664 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 130 pathaction!3_5;3;1,2297
Consider method^3_12;3;1,841 841 <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,right];m5_do_clean_shot;0;-1,-2>
12;3;1 271 pathaction!3_12;3;1,2277
Consider method^1_8,2049 2049 m0_do_cocktail_in_shot1
8 277 pathaction!1_8,79
Consider method^1_10,3119 3119 m0_do_cocktail_in_shot1
10 123 pathaction!1_10,76
Consider method^3_8;3;1,3872 3872 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 342 pathaction!3_8;3;1,2285
Consider method^1_4,2904 2904 m0_do_cocktail_in_shot1
4 281 pathaction!1_4,80
Consider method^3_12;1;1,3631 3631 m9_do_fill_shot
12;1;1 136 pathaction!3_12;1;1,2503
Consider method^1_6,421 421 m0_do_cocktail_in_shot1
6 143 pathaction!1_6,75
Consider method^3_1;1;3,4389 4389 _m2_get_first_ingredient_4
1;1;3 324 pathaction!3_1;1;3,2653
Consider method^3_12;2;1,3969 3969 _m3_get_second_ingredient_2
12;2;1 352 pathaction!3_12;2;1,577
Consider method^2_5;3,263 263 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 242 pathaction!2_5;3,3316
Consider method^2_11;1,3033 3033 m7_do_fill_shot
11;1 74 pathaction!2_11;1,2484
Consider method^3_1;1;2,3224 3224 _m2_get_first_ingredient_3
1;1;2 302 pathaction!3_1;1;2,1153
Consider method^3_12;2;2,2682 2682 _m3_get_second_ingredient_3
12;2;2 341 pathaction!3_12;2;2,2402
Consider method^2_10;3,3228 3228 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 191 pathaction!2_10;3,3309
Consider method^2_0;1,1984 1984 m2_get_first_ingredient
0;1 85 pathaction!2_0;1,3300
Consider method^0_,4588 4588 __top_1
 38 pathaction!0_,3761
Consider method^3_0;1;2,3224 3224 _m2_get_first_ingredient_3
0;1;2 343 pathaction!3_0;1;2,1153
Consider method^2_5;1,3583 3583 m2_get_first_ingredient
5;1 169 pathaction!2_5;1,3302
Consider method^1_11,1476 1476 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
11 267 pathaction!1_11,1571
Consider method^2_6;1,2957 2957 m2_get_first_ingredient
6;1 312 pathaction!2_6;1,3296
Consider method^3_10;1;1,445 445 m9_do_fill_shot
10;1;1 43 pathaction!3_10;1;1,2501
Consider method^3_3;2;1,3455 3455 _m3_get_second_ingredient_2
3;2;1 19 pathaction!3_3;2;1,597
Consider method^3_10;2;2,750 750 _m3_get_second_ingredient_3
10;2;2 299 pathaction!3_10;2;2,2390
Consider method^3_0;1;1,1628 1628 m8_do_fill_shot
0;1;1 339 pathaction!3_0;1;1,2503
Consider method^3_6;1;2,2506 2506 _m2_get_first_ingredient_3
6;1;2 282 pathaction!3_6;1;2,1070
Consider method^2_0;3,3806 3806 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 176 pathaction!2_0;3,3318
Consider method^3_7;3;1,3704 3704 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2>
7;3;1 284 pathaction!3_7;3;1,2283
Consider method^3_8;2;2,2737 2737 _m3_get_second_ingredient_3
8;2;2 100 pathaction!3_8;2;2,2336
Consider method^3_8;2;1,2909 2909 _m3_get_second_ingredient_2
8;2;1 278 pathaction!3_8;2;1,586
Consider method^1_1,4452 4452 m0_do_cocktail_in_shot1
1 321 pathaction!1_1,81
Consider method^2_13;1,1756 1756 m9_do_fill_shot
13;1 297 pathaction!2_13;1,2583
Consider method^3_2;1;1,4196 4196 m8_do_fill_shot
2;1;1 330 pathaction!3_2;1;1,2544
Consider method^3_6;1;1,3033 3033 m7_do_fill_shot
6;1;1 165 pathaction!3_6;1;1,2484
Consider method^3_1;3;1,490 490 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2>
1;3;1 97 pathaction!3_1;3;1,2293
Consider method^3_8;1;3,4249 4249 _m2_get_first_ingredient_4
8;1;3 381 pathaction!3_8;1;3,2711
Consider method^3_6;2;2,4356 4356 _m3_get_second_ingredient_3
6;2;2 292 pathaction!3_6;2;2,2448
Consider method^3_4;1;2,3702 3702 _m2_get_first_ingredient_3
4;1;2 47 pathaction!3_4;1;2,1053
Consider method^1_0,4363 4363 m0_do_cocktail_in_shot1
0 81 pathaction!1_0,85
Consider method^2_10;1,3173 3173 m2_get_first_ingredient
10;1 76 pathaction!2_10;1,3306
Consider method^1_12,603 603 m0_do_cocktail_in_shot1
12 350 pathaction!1_12,77
Consider method^2_3;3,4533 4533 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 337 pathaction!2_3;3,3317
Consider method^3_12;1;2,3224 3224 _m2_get_first_ingredient_3
12;1;2 315 pathaction!3_12;1;2,1153
Consider method^3_4;2;1,4560 4560 _m3_get_second_ingredient_2
4;2;1 260 pathaction!3_4;2;1,674
Consider method^3_7;2;2,740 740 _m3_get_second_ingredient_3
7;2;2 368 pathaction!3_7;2;2,2446
Consider method^1_13,4512 4512 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
13 362 pathaction!1_13,1572
Consider method^2_9;1,3868 3868 m2_get_first_ingredient
9;1 370 pathaction!2_9;1,3287
Consider method^2_10;2,69 69 m3_get_second_ingredient
10;2 58 pathaction!2_10;2,3715
Consider method^2_4;2,1282 1282 m3_get_second_ingredient
4;2 265 pathaction!2_4;2,3701
Consider method^1_9,780 780 m0_do_cocktail_in_shot1
9 101 pathaction!1_9,82
Consider method^3_0;2;1,4560 4560 _m3_get_second_ingredient_2
0;2;1 205 pathaction!3_0;2;1,674
Consider method^3_9;3;1,2753 2753 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2>
9;3;1 192 pathaction!3_9;3;1,2298
Consider method^3_3;1;2,3801 3801 _m2_get_first_ingredient_3
3;1;2 185 pathaction!3_3;1;2,1184
Consider method^3_2;1;3,3025 3025 _m2_get_first_ingredient_4
2;1;3 84 pathaction!3_2;1;3,2694
Consider method^3_10;2;1,4402 4402 _m3_get_second_ingredient_2
10;2;1 237 pathaction!3_10;2;1,678
Consider method^3_8;1;2,2704 2704 _m2_get_first_ingredient_3
8;1;2 17 pathaction!3_8;1;2,1182
Consider method^3_2;2;2,857 857 _m3_get_second_ingredient_3
2;2;2 190 pathaction!3_2;2;2,2356
Consider method^3_5;1;3,4554 4554 _m2_get_first_ingredient_4
5;1;3 295 pathaction!3_5;1;3,2671
Consider method^3_9;2;1,3820 3820 _m3_get_second_ingredient_2
9;2;1 371 pathaction!3_9;2;1,621
Consider method^2_12;1,2903 2903 m2_get_first_ingredient
12;1 52 pathaction!2_12;1,3307
Consider method^3_4;2;2,1160 1160 _m3_get_second_ingredient_3
4;2;2 152 pathaction!3_4;2;2,2409
Consider method^3_6;1;3,4042 4042 _m2_get_first_ingredient_4
6;1;3 132 pathaction!3_6;1;3,2634
Consider method^3_10;1;2,2617 2617 _m2_get_first_ingredient_3
10;1;2 3 pathaction!3_10;1;2,1171
Consider method^2_8;2,1950 1950 m3_get_second_ingredient
8;2 366 pathaction!2_8;2,3695
Consider method^2_4;1,4069 4069 m2_get_first_ingredient
4;1 228 pathaction!2_4;1,3292
Consider method^3_4;1;3,3750 3750 _m2_get_first_ingredient_4
4;1;3 287 pathaction!3_4;1;3,2748
Consider method^2_8;1,434 434 m2_get_first_ingredient
8;1 68 pathaction!2_8;1,3286
Consider method^2_1;1,3769 3769 m2_get_first_ingredient
1;1 276 pathaction!2_1;1,3289
Consider method^3_10;3;1,815 815 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 279 pathaction!3_10;3;1,2295
Consider method^3_2;3;1,2609 2609 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 93 pathaction!3_2;3;1,2300
Consider method^2_0;2,3005 3005 m3_get_second_ingredient
0;2 5 pathaction!2_0;2,3709
Consider method^3_6;3;1,2491 2491 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 6 pathaction!3_6;3;1,2288
Consider method^3_7;1;2,1940 1940 _m2_get_first_ingredient_3
7;1;2 75 pathaction!3_7;1;2,1060
Consider method^2_3;1,2040 2040 m2_get_first_ingredient
3;1 266 pathaction!2_3;1,3298
Consider method^2_1;2,3116 3116 m3_get_second_ingredient
1;2 318 pathaction!2_1;2,3698
Consider method^3_5;1;2,1277 1277 _m2_get_first_ingredient_3
5;1;2 355 pathaction!3_5;1;2,1080
Consider method^2_12;2,1891 1891 m3_get_second_ingredient
12;2 144 pathaction!2_12;2,3716
Consider method^3_1;1;1,1989 1989 m9_do_fill_shot
1;1;1 261 pathaction!3_1;1;1,2503
Consider method^3_8;1;1,3812 3812 m9_do_fill_shot
8;1;1 354 pathaction!3_8;1;1,2561
Consider method^2_4;3,4194 4194 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 56 pathaction!2_4;3,3313
Consider method^3_2;1;2,1878 1878 _m2_get_first_ingredient_3
2;1;2 246 pathaction!3_2;1;2,1135
Consider method^3_7;2;1,1760 1760 _m3_get_second_ingredient_2
7;2;1 229 pathaction!3_7;2;1,653
Consider method^3_6;2;1,2621 2621 _m3_get_second_ingredient_2
6;2;1 4 pathaction!3_6;2;1,663
Consider method^2_6;3,4559 4559 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 158 pathaction!2_6;3,3308
Consider method^3_4;3;1,4097 4097 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2>
4;3;1 119 pathaction!3_4;3;1,2284
Consider method^3_12;1;3,4389 4389 _m2_get_first_ingredient_4
12;1;3 37 pathaction!3_12;1;3,2653
Consider method^2_2;3,575 575 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 181 pathaction!2_2;3,3319
Consider method^3_7;1;3,2473 2473 _m2_get_first_ingredient_4
7;1;3 1 pathaction!3_7;1;3,2666
Consider method^2_6;2,4568 4568 m3_get_second_ingredient
6;2 182 pathaction!2_6;2,3705
Consider method^3_7;1;1,1517 1517 m9_do_fill_shot
7;1;1 333 pathaction!3_7;1;1,2516
Consider method^2_3;2,4332 4332 m3_get_second_ingredient
3;2 376 pathaction!2_3;2,3707
Consider method^3_0;3;1,1976 1976 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 298 pathaction!3_0;3;1,2290
Consider method^2_12;3,1418 1418 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot13,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
12;3 356 pathaction!2_12;3,3310
Consider method^3_5;2;1,1674 1674 _m3_get_second_ingredient_2
5;2;1 103 pathaction!3_5;2;1,580
Consider method^3_3;1;1,460 460 m8_do_fill_shot
3;1;1 217 pathaction!3_3;1;1,2558
Consider method^2_9;3,4434 4434 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 13 pathaction!2_9;3,3315
Consider method^3_2;2;1,1774 1774 _m3_get_second_ingredient_2
2;2;1 36 pathaction!3_2;2;1,588
Consider method^1_2,937 937 m0_do_cocktail_in_shot1
2 51 pathaction!1_2,86
Consider method^1_7,385 385 m0_do_cocktail_in_shot1
7 167 pathaction!1_7,78
Consider method^2_7;3,2758 2758 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 61 pathaction!2_7;3,3311
Consider method^3_3;1;3,3390 3390 _m2_get_first_ingredient_4
3;1;3 308 pathaction!3_3;1;3,2708
Consider method^3_9;1;2,2617 2617 _m2_get_first_ingredient_3
9;1;2 166 pathaction!3_9;1;2,1171
Consider method^2_7;1,3286 3286 m2_get_first_ingredient
7;1 336 pathaction!2_7;1,3295
Consider method^2_1;3,1974 1974 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 108 pathaction!2_1;3,3314
Consider method^2_5;2,2007 2007 m3_get_second_ingredient
5;2 296 pathaction!2_5;2,3711
Consider method^2_7;2,3760 3760 m3_get_second_ingredient
7;2 10 pathaction!2_7;2,3704
Consider method^2_2;2,3641 3641 m3_get_second_ingredient
2;2 195 pathaction!2_2;2,3714
Consider method^3_1;2;1,3969 3969 _m3_get_second_ingredient_2
1;2;1 157 pathaction!3_1;2;1,577
Consider method^3_3;2;2,1197 1197 _m3_get_second_ingredient_3
3;2;2 203 pathaction!3_3;2;2,2327
Consider method^3_0;1;3,4389 4389 _m2_get_first_ingredient_4
0;1;3 82 pathaction!3_0;1;3,2653
Consider method^3_9;1;1,3093 3093 m7_do_fill_shot
9;1;1 60 pathaction!3_9;1;1,2501
Consider method^3_0;2;2,1160 1160 _m3_get_second_ingredient_3
0;2;2 365 pathaction!3_0;2;2,2409
Consider method^3_10;1;3,3911 3911 _m2_get_first_ingredient_4
10;1;3 96 pathaction!3_10;1;3,2651
Consider method^3_5;2;2,4122 4122 _m3_get_second_ingredient_3
5;2;2 250 pathaction!3_5;2;2,2383
Consider method^3_9;2;2,2413 2413 _m3_get_second_ingredient_3
9;2;2 224 pathaction!3_9;2;2,2323
Consider method^2_9;2,1784 1784 m3_get_second_ingredient
9;2 113 pathaction!2_9;2,3696
Consider method^3_3;3;1,1230 1230 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2>
3;3;1 95 pathaction!3_3;3;1,2296


CHECKING primitive solution of length 257 ...
true 94 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 78 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot15;]
true 199 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser3,ingredient3;]
true 239 grasp[left,shot15;]
true 227 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 273 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 156 clean-shot[shot15,ingredient3,left,right;]
true 216 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,left,shot15;]
true 310 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 301 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 65 leave[left,shot15;]
true 189 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient2;]
true 208 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 163 nop[;]
true 241 grasp[left,shaker1;]
true 160 shake[cocktail5,ingredient3,ingredient2,shaker1,left,right;]
true 87 pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1;]
true 359 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 142 clean-shaker[left,right,shaker1;]
true 55 leave[left,shaker1;]
true 206 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 53 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot15;]
true 187 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient2,dispenser3;]
true 258 grasp[left,shot15;]
true 150 clean-shot[shot15,ingredient2,left,right;]
true 159 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 41 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 340 clean-shot[shot15,ingredient3,left,right;]
true 16 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot15;]
true 378 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 275 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 254 leave[left,shot15;]
true 177 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient4;]
true 154 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 151 nop[;]
true 24 grasp[left,shaker1;]
true 311 shake[cocktail3,ingredient3,ingredient4,shaker1,left,right;]
true 326 pour-shaker-to-shot[cocktail3,shot2,left,shaker1,l2,l1;]
true 313 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 219 clean-shaker[left,right,shaker1;]
true 117 leave[left,shaker1;]
true 372 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 25 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient5,shot12;]
true 146 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser5,ingredient5;]
true 226 grasp[left,shot12;]
true 294 fill-shot[shot12,ingredient5,left,right,dispenser5;]
true 380 pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,left,l0,l1;]
true 293 clean-shot[shot12,ingredient5,left,right;]
true 251 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot12;]
true 44 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 91 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2;]
true 345 leave[left,shot12;]
true 238 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient5,ingredient4;]
true 291 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 127 nop[;]
true 115 grasp[right,shaker1;]
true 34 shake[cocktail8,ingredient5,ingredient4,shaker1,right,left;]
true 20 pour-shaker-to-shot[cocktail8,shot3,right,shaker1,l2,l1;]
true 12 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 99 clean-shaker[right,left,shaker1;]
true 201 leave[right,shaker1;]
true 26 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 71 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot14;]
true 114 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser2,ingredient2;]
true 323 grasp[left,shot14;]
true 111 fill-shot[shot14,ingredient2,left,right,dispenser2;]
true 194 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 118 clean-shot[shot14,ingredient2,left,right;]
true 235 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,left,shot14;]
true 106 fill-shot[shot14,ingredient5,left,right,dispenser5;]
true 322 pour-shot-to-used-shaker[shot14,ingredient5,shaker1,left,l1,l2;]
true 200 leave[left,shot14;]
true 67 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient5;]
true 379 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 245 nop[;]
true 137 grasp[left,shaker1;]
true 268 shake[cocktail6,ingredient2,ingredient5,shaker1,left,right;]
true 11 pour-shaker-to-shot[cocktail6,shot4,left,shaker1,l2,l1;]
true 183 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 168 clean-shaker[left,right,shaker1;]
true 374 leave[left,shaker1;]
true 126 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 66 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot15;]
true 188 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient4,dispenser1;]
true 86 grasp[left,shot15;]
true 367 clean-shot[shot15,ingredient4,left,right;]
true 90 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 236 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 243 clean-shot[shot15,ingredient1,left,right;]
true 116 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot15;]
true 98 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 211 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 334 leave[left,shot15;]
true 244 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2;]
true 280 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 263 nop[;]
true 269 grasp[right,shaker1;]
true 328 shake[cocktail4,ingredient1,ingredient2,shaker1,right,left;]
true 7 pour-shaker-to-shot[cocktail4,shot5,right,shaker1,l2,l1;]
true 112 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 62 clean-shaker[right,left,shaker1;]
true 286 leave[right,shaker1;]
true 64 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 14 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot14;]
true 264 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient5,dispenser5;]
true 23 grasp[right,shot14;]
true 107 refill-shot[shot14,ingredient5,right,left,dispenser5;]
true 134 pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1;]
true 231 clean-shot[shot14,ingredient5,right,left;]
true 88 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,right,shot14;]
true 45 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 319 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,right,l1,l2;]
true 138 leave[right,shot14;]
true 272 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient3;]
true 240 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 139 nop[;]
true 32 grasp[left,shaker1;]
true 40 shake[cocktail10,ingredient5,ingredient3,shaker1,left,right;]
true 197 pour-shaker-to-shot[cocktail10,shot6,left,shaker1,l2,l1;]
true 357 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 204 clean-shaker[left,right,shaker1;]
true 335 leave[left,shaker1;]
true 317 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 212 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot12;]
true 253 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient4,dispenser4;]
true 262 grasp[right,shot12;]
true 259 refill-shot[shot12,ingredient4,right,left,dispenser4;]
true 283 pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,right,l0,l1;]
true 29 clean-shot[shot12,ingredient4,right,left;]
true 128 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot12;]
true 223 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 148 pour-shot-to-used-shaker[shot12,ingredient3,shaker1,right,l1,l2;]
true 42 leave[right,shot12;]
true 256 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 73 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 377 nop[;]
true 48 grasp[left,shaker1;]
true 121 shake[cocktail2,ingredient4,ingredient3,shaker1,left,right;]
true 162 pour-shaker-to-shot[cocktail2,shot7,left,shaker1,l2,l1;]
true 222 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 140 clean-shaker[left,right,shaker1;]
true 92 leave[left,shaker1;]
true 147 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 102 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot12;]
true 320 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient2,ingredient3,dispenser2;]
true 79 grasp[right,shot12;]
true 209 clean-shot[shot12,ingredient3,right,left;]
true 252 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 288 pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,right,l0,l1;]
true 110 clean-shot[shot12,ingredient2,right,left;]
true 124 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient5,right,shot12;]
true 196 fill-shot[shot12,ingredient5,right,left,dispenser5;]
true 184 pour-shot-to-used-shaker[shot12,ingredient5,shaker1,right,l1,l2;]
true 220 leave[right,shot12;]
true 290 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient5;]
true 63 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 69 nop[;]
true 285 grasp[left,shaker1;]
true 346 shake[cocktail9,ingredient2,ingredient5,shaker1,left,right;]
true 257 pour-shaker-to-shot[cocktail9,shot8,left,shaker1,l2,l1;]
true 2 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 83 clean-shaker[left,right,shaker1;]
true 145 leave[left,shaker1;]
true 172 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 35 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot12;]
true 358 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient5,dispenser3;]
true 57 grasp[right,shot12;]
true 255 clean-shot[shot12,ingredient5,right,left;]
true 39 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 129 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1;]
true 351 clean-shot[shot12,ingredient3,right,left;]
true 289 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,right,shot12;]
true 105 fill-shot[shot12,ingredient4,right,left,dispenser4;]
true 360 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,right,l1,l2;]
true 178 leave[right,shot12;]
true 306 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4;]
true 59 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 325 nop[;]
true 0 grasp[right,shaker1;]
true 21 shake[cocktail11,ingredient3,ingredient4,shaker1,right,left;]
true 31 pour-shaker-to-shot[cocktail11,shot9,right,shaker1,l2,l1;]
true 347 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 215 clean-shaker[right,left,shaker1;]
true 249 leave[right,shaker1;]
true 316 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 207 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot15;]
true 304 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient2,dispenser2;]
true 307 grasp[right,shot15;]
true 170 refill-shot[shot15,ingredient2,right,left,dispenser2;]
true 149 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 30 clean-shot[shot15,ingredient2,right,left;]
true 373 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient3,right,shot15;]
true 72 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 80 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 104 leave[right,shot15;]
true 232 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient3;]
true 77 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 173 nop[;]
true 155 grasp[left,shaker1;]
true 161 shake[cocktail1,ingredient2,ingredient3,shaker1,left,right;]
true 234 pour-shaker-to-shot[cocktail1,shot10,left,shaker1,l2,l1;]
true 9 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 247 clean-shaker[left,right,shaker1;]
true 361 leave[left,shaker1;]
true 221 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 18 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot15;]
true 180 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient3,dispenser2;]
true 179 grasp[right,shot15;]
true 125 clean-shot[shot15,ingredient3,right,left;]
true 109 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 248 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 303 clean-shot[shot15,ingredient2,right,left;]
true 186 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,right,shot15;]
true 133 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 225 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 338 leave[right,shot15;]
true 363 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient1;]
true 141 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 174 nop[;]
true 202 grasp[right,shaker1;]
true 193 shake[cocktail7,ingredient2,ingredient1,shaker1,right,left;]
true 348 pour-shaker-to-shot[cocktail7,shot11,right,shaker1,l2,l1;]
true 331 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 210 clean-shaker[right,left,shaker1;]
true 369 leave[right,shaker1;]
true 15 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 46 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient4,dispenser4;]
true 314 grasp[right,shot12;]
true 375 refill-shot[shot12,ingredient4,right,left,dispenser4;]
true 22 leave[right,shot12;]
true 153 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left;]
true 27 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot15;]
true 70 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient1,dispenser3;]
true 300 grasp[left,shot15;]
true 329 clean-shot[shot15,ingredient1,left,right;]
true 332 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 33 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 131 clean-shot[shot15,ingredient3,left,right;]
true 198 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,left,shot15;]
true 349 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 54 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 270 leave[left,shot15;]
true 122 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4;]
true 164 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 175 nop[;]
true 230 grasp[left,shaker1;]
true 274 shake[cocktail11,ingredient3,ingredient4,shaker1,left,right;]
true 8 pour-shaker-to-shot[cocktail11,shot13,left,shaker1,l2,l1;]
true 327 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 171 clean-shaker[left,right,shaker1;]
true 49 leave[left,shaker1;]
true 214 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 50 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient4,ingredient3,dispenser4;]
true 218 grasp[right,shot14;]
true 120 clean-shot[shot14,ingredient3,right,left;]
true 233 fill-shot[shot14,ingredient4,right,left,dispenser4;]
true 309 leave[right,shot14;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 551827296
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 388
number of actions                    = 3762
number of abstract actions           = 965
number of primitive actions          = 2797
number of methods                    = 4589
number of primitive shop actions     = 1092
number of primitive non-shop actions = 1705
size of largest method               = 14
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 276020
number of clauses               = 1519698
average size of clauses         = 2.3750646510030284
number of assert                = 171
number of horn                  = 1331392
K offset                        = 0
K chosen value                  = 4
state formula                   = 1282238
method children clauses         = 0
number of paths                 = 264
maximum plan length             = 264
number of decomposition clauses = 237460
number of ordering clauses      = 0
number of state clauses         = 1282238
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 19107
============ parsing ============
total                         = 1147
file parser                   = 611
sort expansion                = 253
closed world assumption       = 136
inherit preconditions         = 0
shop methods                  = 28
eliminate identical variables = 65
strip domain of hybridity     = 1
flatten formula               = 52
============ preprocessing ============
total                                      = 6333
compile negative preconditions             = 53
compile unit methods                       = 0
split parameter                            = 58
expand choiceless abstract tasks           = 553
compile methods with identical tasks       = 27
removing unnecessary predicates            = 942
lifted reachabiltiy analysis               = 78
grounded planning graph analysis           = 1806
grounded task decomposition graph analysis = 2053
grounding                                  = 693
create artificial top task                 = 23
============ search preparation ============
compute state invariants = 2876
============ sat ============
total                                        = 8657
generate formula                             = 6535
generate path decomposition tree             = 407
normalise path decomposition tree            = 100
sog optimisation                             = 96
translate path decomposition tree to clauses = 820
generate state formula                       = 6325
generate state invariant formula             = 667
transform to DIMACS                          = 918
SAT solver                                   = 830
SAT solver for K=0004                        = 830

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2797";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="965";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="551827296";"40 sat:20:state formula"="1282238";"40 sat:01:number of variables"="276020";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="264";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="4589";"30 problem:07:number of primitive shop actions"="1092";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3762";"30 problem:08:number of primitive non-shop actions"="1705";"30 problem:02:number of predicates"="388";"40 sat:03:number of horn"="1331392";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="14";"40 sat:03:average size of clauses"="2.3750646510030284";"40 sat:02:number of clauses"="1519698";"40 sat:50:number of state clauses"="1282238";"40 sat:03:number of assert"="171";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="264";"40 sat:50:number of decomposition clauses"="237460";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="611";"01 parsing:08:flatten formula"="52";"40 sat:41:SAT solver for K=0004"="830";"40 sat:00:total"="8657";"40 sat:16:generate state formula"="6325";"40 sat:20:transform to DIMACS"="918";"40 sat:11:generate path decomposition tree"="407";"02 preprocessing:07:compile methods with identical tasks"="27";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="942";"01 parsing:03:closed world assumption"="136";"02 preprocessing:11:lifted reachabiltiy analysis"="78";"01 parsing:02:sort expansion"="253";"40 sat:12:normalise path decomposition tree"="100";"40 sat:40:SAT solver"="830";"01 parsing:00:total"="1147";"40 sat:10:generate formula"="6535";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="53";"00 total:00:total"="19107";"40 sat:13:sog optimisation"="96";"02 preprocessing:12:grounded planning graph analysis"="1806";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="2053";"02 preprocessing:04:split parameter"="58";"01 parsing:05:shop methods"="28";"10 search preparation:02:compute state invariants"="2876";"01 parsing:06:eliminate identical variables"="65";"40 sat:15:translate path decomposition tree to clauses"="820";"02 preprocessing:05:expand choiceless abstract tasks"="553";"40 sat:17:generate state invariant formula"="667";"02 preprocessing:00:total"="6333";"02 preprocessing:99:create artificial top task"="23";"02 preprocessing:84:grounding"="693"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient3,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser3,ingredient3];grasp[left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1];clean-shot[shot15,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,left,shot15];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail5,ingredient3,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient3,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient2,dispenser3];grasp[left,shot15];clean-shot[shot15,ingredient2,left,right];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1];clean-shot[shot15,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[left,shaker1];shake[cocktail3,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot2,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient5,shot12];__method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser5,ingredient5];grasp[left,shot12];fill-shot[shot12,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot12,ingredient5,shaker1,left,l0,l1];clean-shot[shot12,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient4,left,shot12];fill-shot[shot12,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient5,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail8,ingredient5,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot14];__method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser2,ingredient2];grasp[left,shot14];fill-shot[shot14,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1];clean-shot[shot14,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,left,shot14];fill-shot[shot14,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot14,ingredient5,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail6,ingredient2,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient4,dispenser1];grasp[left,shot15];clean-shot[shot15,ingredient4,left,right];fill-shot[shot15,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1];clean-shot[shot15,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot15];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[right,shaker1];shake[cocktail4,ingredient1,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot5,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient5,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient5,dispenser5];grasp[right,shot14];refill-shot[shot14,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot14,ingredient5,shaker1,right,l0,l1];clean-shot[shot14,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,right,shot14];fill-shot[shot14,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot14,ingredient3,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient5,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail10,ingredient5,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot12];__method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient4,dispenser4];grasp[right,shot12];refill-shot[shot12,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot12,ingredient4,shaker1,right,l0,l1];clean-shot[shot12,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot12];fill-shot[shot12,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot12,ingredient3,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail2,ingredient4,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail2,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail2,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient2,ingredient3,dispenser2];grasp[right,shot12];clean-shot[shot12,ingredient3,right,left];fill-shot[shot12,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,right,l0,l1];clean-shot[shot12,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient5,right,shot12];fill-shot[shot12,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot12,ingredient5,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[left,shaker1];shake[cocktail9,ingredient2,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail9,shot8,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail9,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient5,dispenser3];grasp[right,shot12];clean-shot[shot12,ingredient5,right,left];fill-shot[shot12,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,right,l0,l1];clean-shot[shot12,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,right,shot12];fill-shot[shot12,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot12,ingredient4,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail11,ingredient3,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient2,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient2,dispenser2];grasp[right,shot15];refill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1];clean-shot[shot15,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient3,right,shot15];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail1,ingredient2,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient3,dispenser2];grasp[right,shot15];clean-shot[shot15,ingredient3,right,left];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1];clean-shot[shot15,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient1,right,shot15];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail7,ingredient2,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail7,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail7,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4];__method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient4,dispenser4];grasp[right,shot12];refill-shot[shot12,ingredient4,right,left,dispenser4];leave[right,shot12];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient1,dispenser3];grasp[left,shot15];clean-shot[shot15,ingredient1,left,right];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1];clean-shot[shot15,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot13];nop[];grasp[left,shaker1];shake[cocktail11,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail11,shot13,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail11,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient4,ingredient3,dispenser4];grasp[right,shot14];clean-shot[shot14,ingredient3,right,left];fill-shot[shot14,ingredient4,right,left,dispenser4];leave[right,shot14]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient3 shot15 
2 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser3 ingredient3 
3 grasp left shot15 
4 fill-shot shot15 ingredient3 left right dispenser3 
5 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 
6 clean-shot shot15 ingredient3 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient2 left shot15 
8 fill-shot shot15 ingredient2 left right dispenser2 
9 pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 
10 leave left shot15 
11 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient3 ingredient2 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail5 ingredient3 ingredient2 shaker1 left right 
16 pour-shaker-to-shot cocktail5 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail5 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 left 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient3 shot15 
22 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient3 ingredient2 dispenser3 
23 grasp left shot15 
24 clean-shot shot15 ingredient2 left right 
25 fill-shot shot15 ingredient3 left right dispenser3 
26 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 
27 clean-shot shot15 ingredient3 left right 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient4 left shot15 
29 fill-shot shot15 ingredient4 left right dispenser4 
30 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
31 leave left shot15 
32 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient3 ingredient4 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp left shaker1 
36 shake cocktail3 ingredient3 ingredient4 shaker1 left right 
37 pour-shaker-to-shot cocktail3 shot2 left shaker1 l2 l1 
38 empty-shaker left shaker1 cocktail3 l1 l0 
39 clean-shaker left right shaker1 
40 leave left shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient5 shot12 
43 __method_precondition_m8_do_fill_shot_8_precondition shot12 dispenser5 ingredient5 
44 grasp left shot12 
45 fill-shot shot12 ingredient5 left right dispenser5 
46 pour-shot-to-clean-shaker shot12 ingredient5 shaker1 left l0 l1 
47 clean-shot shot12 ingredient5 left right 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient4 left shot12 
49 fill-shot shot12 ingredient4 left right dispenser4 
50 pour-shot-to-used-shaker shot12 ingredient4 shaker1 left l1 l2 
51 leave left shot12 
52 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient5 ingredient4 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp right shaker1 
56 shake cocktail8 ingredient5 ingredient4 shaker1 right left 
57 pour-shaker-to-shot cocktail8 shot3 right shaker1 l2 l1 
58 empty-shaker right shaker1 cocktail8 l1 l0 
59 clean-shaker right left shaker1 
60 leave right shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient2 shot14 
63 __method_precondition_m8_do_fill_shot_8_precondition shot14 dispenser2 ingredient2 
64 grasp left shot14 
65 fill-shot shot14 ingredient2 left right dispenser2 
66 pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 
67 clean-shot shot14 ingredient2 left right 
68 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient5 left shot14 
69 fill-shot shot14 ingredient5 left right dispenser5 
70 pour-shot-to-used-shaker shot14 ingredient5 shaker1 left l1 l2 
71 leave left shot14 
72 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient2 ingredient5 
73 __method_precondition_m5_do_clean_shot_5_precondition shot4 
74 nop  
75 grasp left shaker1 
76 shake cocktail6 ingredient2 ingredient5 shaker1 left right 
77 pour-shaker-to-shot cocktail6 shot4 left shaker1 l2 l1 
78 empty-shaker left shaker1 cocktail6 l1 l0 
79 clean-shaker left right shaker1 
80 leave left shaker1 
81 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
82 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient1 shot15 
83 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient4 dispenser1 
84 grasp left shot15 
85 clean-shot shot15 ingredient4 left right 
86 fill-shot shot15 ingredient1 left right dispenser1 
87 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 
88 clean-shot shot15 ingredient1 left right 
89 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 left shot15 
90 fill-shot shot15 ingredient2 left right dispenser2 
91 pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 
92 leave left shot15 
93 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient1 ingredient2 
94 __method_precondition_m5_do_clean_shot_5_precondition shot5 
95 nop  
96 grasp right shaker1 
97 shake cocktail4 ingredient1 ingredient2 shaker1 right left 
98 pour-shaker-to-shot cocktail4 shot5 right shaker1 l2 l1 
99 empty-shaker right shaker1 cocktail4 l1 l0 
100 clean-shaker right left shaker1 
101 leave right shaker1 
102 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 right 
103 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient5 shot14 
104 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient5 dispenser5 
105 grasp right shot14 
106 refill-shot shot14 ingredient5 right left dispenser5 
107 pour-shot-to-clean-shaker shot14 ingredient5 shaker1 right l0 l1 
108 clean-shot shot14 ingredient5 right left 
109 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient3 right shot14 
110 fill-shot shot14 ingredient3 right left dispenser3 
111 pour-shot-to-used-shaker shot14 ingredient3 shaker1 right l1 l2 
112 leave right shot14 
113 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient5 ingredient3 
114 __method_precondition_m5_do_clean_shot_5_precondition shot6 
115 nop  
116 grasp left shaker1 
117 shake cocktail10 ingredient5 ingredient3 shaker1 left right 
118 pour-shaker-to-shot cocktail10 shot6 left shaker1 l2 l1 
119 empty-shaker left shaker1 cocktail10 l1 l0 
120 clean-shaker left right shaker1 
121 leave left shaker1 
122 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 right 
123 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot12 
124 __method_precondition_m7_do_fill_shot_7_precondition shot12 ingredient4 dispenser4 
125 grasp right shot12 
126 refill-shot shot12 ingredient4 right left dispenser4 
127 pour-shot-to-clean-shaker shot12 ingredient4 shaker1 right l0 l1 
128 clean-shot shot12 ingredient4 right left 
129 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 right shot12 
130 fill-shot shot12 ingredient3 right left dispenser3 
131 pour-shot-to-used-shaker shot12 ingredient3 shaker1 right l1 l2 
132 leave right shot12 
133 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient3 
134 __method_precondition_m5_do_clean_shot_5_precondition shot7 
135 nop  
136 grasp left shaker1 
137 shake cocktail2 ingredient4 ingredient3 shaker1 left right 
138 pour-shaker-to-shot cocktail2 shot7 left shaker1 l2 l1 
139 empty-shaker left shaker1 cocktail2 l1 l0 
140 clean-shaker left right shaker1 
141 leave left shaker1 
142 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
143 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient2 shot12 
144 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient2 ingredient3 dispenser2 
145 grasp right shot12 
146 clean-shot shot12 ingredient3 right left 
147 fill-shot shot12 ingredient2 right left dispenser2 
148 pour-shot-to-clean-shaker shot12 ingredient2 shaker1 right l0 l1 
149 clean-shot shot12 ingredient2 right left 
150 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient5 right shot12 
151 fill-shot shot12 ingredient5 right left dispenser5 
152 pour-shot-to-used-shaker shot12 ingredient5 shaker1 right l1 l2 
153 leave right shot12 
154 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient2 ingredient5 
155 __method_precondition_m5_do_clean_shot_5_precondition shot8 
156 nop  
157 grasp left shaker1 
158 shake cocktail9 ingredient2 ingredient5 shaker1 left right 
159 pour-shaker-to-shot cocktail9 shot8 left shaker1 l2 l1 
160 empty-shaker left shaker1 cocktail9 l1 l0 
161 clean-shaker left right shaker1 
162 leave left shaker1 
163 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
164 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient3 shot12 
165 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient3 ingredient5 dispenser3 
166 grasp right shot12 
167 clean-shot shot12 ingredient5 right left 
168 fill-shot shot12 ingredient3 right left dispenser3 
169 pour-shot-to-clean-shaker shot12 ingredient3 shaker1 right l0 l1 
170 clean-shot shot12 ingredient3 right left 
171 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient4 right shot12 
172 fill-shot shot12 ingredient4 right left dispenser4 
173 pour-shot-to-used-shaker shot12 ingredient4 shaker1 right l1 l2 
174 leave right shot12 
175 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient3 ingredient4 
176 __method_precondition_m5_do_clean_shot_5_precondition shot9 
177 nop  
178 grasp right shaker1 
179 shake cocktail11 ingredient3 ingredient4 shaker1 right left 
180 pour-shaker-to-shot cocktail11 shot9 right shaker1 l2 l1 
181 empty-shaker right shaker1 cocktail11 l1 l0 
182 clean-shaker right left shaker1 
183 leave right shaker1 
184 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 right 
185 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient2 shot15 
186 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient2 dispenser2 
187 grasp right shot15 
188 refill-shot shot15 ingredient2 right left dispenser2 
189 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 
190 clean-shot shot15 ingredient2 right left 
191 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient3 right shot15 
192 fill-shot shot15 ingredient3 right left dispenser3 
193 pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 
194 leave right shot15 
195 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient2 ingredient3 
196 __method_precondition_m5_do_clean_shot_5_precondition shot10 
197 nop  
198 grasp left shaker1 
199 shake cocktail1 ingredient2 ingredient3 shaker1 left right 
200 pour-shaker-to-shot cocktail1 shot10 left shaker1 l2 l1 
201 empty-shaker left shaker1 cocktail1 l1 l0 
202 clean-shaker left right shaker1 
203 leave left shaker1 
204 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 right 
205 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient2 shot15 
206 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient2 ingredient3 dispenser2 
207 grasp right shot15 
208 clean-shot shot15 ingredient3 right left 
209 fill-shot shot15 ingredient2 right left dispenser2 
210 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 
211 clean-shot shot15 ingredient2 right left 
212 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient1 right shot15 
213 fill-shot shot15 ingredient1 right left dispenser1 
214 pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 
215 leave right shot15 
216 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient2 ingredient1 
217 __method_precondition_m5_do_clean_shot_5_precondition shot11 
218 nop  
219 grasp right shaker1 
220 shake cocktail7 ingredient2 ingredient1 shaker1 right left 
221 pour-shaker-to-shot cocktail7 shot11 right shaker1 l2 l1 
222 empty-shaker right shaker1 cocktail7 l1 l0 
223 clean-shaker right left shaker1 
224 leave right shaker1 
225 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser4 ingredient4 
226 __method_precondition_m7_do_fill_shot_7_precondition shot12 ingredient4 dispenser4 
227 grasp right shot12 
228 refill-shot shot12 ingredient4 right left dispenser4 
229 leave right shot12 
230 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot13 left 
231 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient3 shot15 
232 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient3 ingredient1 dispenser3 
233 grasp left shot15 
234 clean-shot shot15 ingredient1 left right 
235 fill-shot shot15 ingredient3 left right dispenser3 
236 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 
237 clean-shot shot15 ingredient3 left right 
238 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient4 left shot15 
239 fill-shot shot15 ingredient4 left right dispenser4 
240 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
241 leave left shot15 
242 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient3 ingredient4 
243 __method_precondition_m5_do_clean_shot_5_precondition shot13 
244 nop  
245 grasp left shaker1 
246 shake cocktail11 ingredient3 ingredient4 shaker1 left right 
247 pour-shaker-to-shot cocktail11 shot13 left shaker1 l2 l1 
248 empty-shaker left shaker1 cocktail11 l1 l0 
249 clean-shaker left right shaker1 
250 leave left shaker1 
251 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser4 ingredient4 
252 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient4 ingredient3 dispenser4 
253 grasp right shot14 
254 clean-shot shot14 ingredient3 right left 
255 fill-shot shot14 ingredient4 right left dispenser4 
256 leave right shot14 
root 357
257 do_cocktail_in_shot1 shot13 cocktail11  -> m0_do_cocktail_in_shot1 230 344 351 373
258 do_fill_shot shot12 ingredient4 right  -> m7_do_fill_shot 124 125 126
259 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 173
260 do_fill_shot shot15 ingredient3 left  -> m9_do_fill_shot 232 233 234 235
261 do_fill_shot shot14 ingredient5 right  -> m7_do_fill_shot 104 105 106
262 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 50
263 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 114 115
264 do_cocktail_in_shot1 shot6 cocktail10  -> m0_do_cocktail_in_shot1 102 294 326 366
265 serve_shot shot9 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 175 360 178 179 180 181 182 183
266 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 150 372 376 153
267 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 53 54
268 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 48 336 262 51
269 do_fill_shot shot15 ingredient1 left  -> m9_do_fill_shot 83 84 85 86
270 do_cocktail_in_shot1 shot2 cocktail3  -> m0_do_cocktail_in_shot1 20 369 274 322
271 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 5
272 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 26
273 serve_shot shot10 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 195 343 198 199 200 201 202 203
274 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 28 315 354 31
275 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 214
276 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 left  -> _m3_get_second_ingredient_2 8
277 do_clean_shot_m4_serve_shot_sip_2 shot8 right  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2> 155 156
278 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 107
279 get_first_ingredient cocktail7 right  -> m2_get_first_ingredient 205 365 309 327
280 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient3 right  -> _m2_get_first_ingredient_4 170
281 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient3 right  -> _m3_get_second_ingredient_2 110
282 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 239
283 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 134 135
284 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 143 332 292 303
285 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient1 right  -> _m3_get_second_ingredient_2 213
286 get_first_ingredient cocktail11 right  -> m2_get_first_ingredient 164 323 311 280
287 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 111
288 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient4 right  -> _m3_get_second_ingredient_2 172
289 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 189
290 do_cocktail_in_shot1 shot5 cocktail4  -> m0_do_cocktail_in_shot1 81 314 306 361
291 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 129 340 362 132
292 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 148
293 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 46
294 get_first_ingredient cocktail10 right  -> m2_get_first_ingredient 103 261 278 364
295 do_cocktail_in_shot1 shot10 cocktail1  -> m0_do_cocktail_in_shot1 184 338 342 273
296 do_cocktail_in_shot1 shot4 cocktail6  -> m0_do_cocktail_in_shot1 61 347 352 356
297 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 right  -> _m2_get_first_ingredient_4 190
298 do_cocktail_in_shot1 shot9 cocktail11  -> m0_do_cocktail_in_shot1 163 286 319 265
299 do_fill_shot shot15 ingredient2 right  -> m7_do_fill_shot 186 187 188
300 do_fill_shot shot12 ingredient5 left  -> m8_do_fill_shot 43 44 45
301 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 217 218
302 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 127
303 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient2 right  -> _m2_get_first_ingredient_4 149
304 do_fill_shot shot15 ingredient3 left  -> m9_do_fill_shot 22 23 24 25
305 do_cocktail_in_shot2 shot12 ingredient4  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 225 353 229
306 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 89 368 378 92
307 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 123 258 302 348
308 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 1 318 271 312
309 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 210
310 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2> 73 74
311 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 169
312 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 left  -> _m2_get_first_ingredient_4 6
313 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 66
314 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 82 269 316 370
315 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 29
316 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 87
317 serve_shot shot8 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 154 277 157 158 159 160 161 162
318 do_fill_shot shot15 ingredient3 left  -> m8_do_fill_shot 2 3 4
319 get_second_ingredient cocktail11 right  -> m3_get_second_ingredient 171 288 259 174
320 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 193
321 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 right  -> _m3_get_second_ingredient_2 192
322 serve_shot shot2 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 32 359 35 36 37 38 39 40
323 do_fill_shot shot12 ingredient3 right  -> m9_do_fill_shot 165 166 167 168
324 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient2 left  -> _m2_get_first_ingredient_4 67
325 serve_shot shot11 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 216 301 219 220 221 222 223 224
326 get_second_ingredient cocktail10 right  -> m3_get_second_ingredient 109 281 287 112
327 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 right  -> _m2_get_first_ingredient_4 211
328 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
329 serve_shot shot1 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 328 14 15 16 17 18 19
330 serve_shot shot3 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 52 267 55 56 57 58 59 60
331 get_second_ingredient cocktail7 right  -> m3_get_second_ingredient 212 285 275 215
332 do_fill_shot shot12 ingredient2 right  -> m9_do_fill_shot 144 145 146 147
333 do_fill_shot shot14 ingredient4 right  -> m9_do_fill_shot 252 253 254 255
334 do_cocktail_in_shot1 shot7 cocktail2  -> m0_do_cocktail_in_shot1 122 307 291 380
335 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 236
336 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient4 left  -> _m3_get_second_ingredient_2 49
337 do_cocktail_in_shot1 shot3 cocktail8  -> m0_do_cocktail_in_shot1 41 363 268 330
338 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 185 299 289 297
339 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 7 276 374 10
340 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient3 right  -> _m3_get_second_ingredient_2 130
341 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 left  -> _m2_get_first_ingredient_4 27
342 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 191 321 320 194
343 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2> 196 197
344 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 231 260 335 367
345 do_clean_shot_m4_serve_shot_sip_2 shot5 left  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2> 94 95
346 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient5 left  -> _m2_get_first_ingredient_4 47
347 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 62 381 313 324
348 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient4 right  -> _m2_get_first_ingredient_4 128
349 do_cocktail_in_shot1 shot11 cocktail7  -> m0_do_cocktail_in_shot1 204 279 331 325
350 do_cocktail_in_shot1 shot1 cocktail5  -> m0_do_cocktail_in_shot1 0 308 339 329
351 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 238 282 377 241
352 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 68 371 375 71
353 do_fill_shot shot12 ingredient4 right  -> m7_do_fill_shot 226 227 228
354 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 30
355 do_clean_shot_m4_serve_shot_sip_2 shot13 right  -> <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,right];m5_do_clean_shot;0;-1,-2> 243 244
356 serve_shot shot4 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 72 310 75 76 77 78 79 80
357 __choicelessATCompilation__top_1  -> __top_1 350 270 337 296 290 264 334 379 298 295 349 305 257 358
358 do_cocktail_in_shot2 shot14 ingredient4  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 251 333 256
359 do_clean_shot_m4_serve_shot_sip_2 shot2 right  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2> 33 34
360 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 176 177
361 serve_shot shot5 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 93 345 96 97 98 99 100 101
362 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 131
363 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 42 300 293 346
364 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient5 right  -> _m2_get_first_ingredient_4 108
365 do_fill_shot shot15 ingredient2 right  -> m9_do_fill_shot 206 207 208 209
366 serve_shot shot6 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 113 263 116 117 118 119 120 121
367 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 left  -> _m2_get_first_ingredient_4 237
368 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 left  -> _m3_get_second_ingredient_2 90
369 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 21 304 272 341
370 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 left  -> _m2_get_first_ingredient_4 88
371 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient5 left  -> _m3_get_second_ingredient_2 69
372 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient5 right  -> _m3_get_second_ingredient_2 151
373 serve_shot shot13 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot13,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 242 355 245 246 247 248 249 250
374 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 9
375 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 70
376 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 152
377 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 240
378 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 91
379 do_cocktail_in_shot1 shot8 cocktail9  -> m0_do_cocktail_in_shot1 142 284 266 317
380 serve_shot shot7 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 133 283 136 137 138 139 140 141
381 do_fill_shot shot14 ingredient2 left  -> m8_do_fill_shot 63 64 65

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 20.762 MEMPEAK_KBS 793241.6
