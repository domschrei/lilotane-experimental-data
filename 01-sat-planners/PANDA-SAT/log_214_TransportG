PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/TransportG/domain.hddl instances/TransportG/pfile22.hddl"


Planner Configuration
=====================
Domain: instances/TransportG/domain.hddl
Problem: instances/TransportG/pfile22.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="pfile22.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 28
Compiling negative preconditions ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 28
Compiling split parameters ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 10
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 28
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 28
Grounded planning graph ... done in 268ms.
	Number of Grounded Actions 324
	Number of Grounded Literals 127
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 28
Two Way TDG ... done.
	number of abstract tasks = 4
	number of tasks = 8
	number of decomposition methods = 6
	number of predicates = 5
	number of sorts = 7
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 4
	number of constants = 28
Grounding ... done.
	number of abstract tasks = 150
	number of tasks = 474
	number of decomposition methods = 474
	number of predicates = 127
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 150
	number of tasks = 474
	number of decomposition methods = 474
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 86ms.
	Number of Grounded Actions 324
	Number of Grounded Literals 99
	number of abstract tasks = 150
	number of tasks = 474
	number of decomposition methods = 474
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 150
	number of tasks = 474
	number of decomposition methods = 474
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 150
	number of tasks = 474
	number of decomposition methods = 474
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 151
	number of tasks = 475
	number of decomposition methods = 475
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 151
	number of tasks = 475
	number of decomposition methods = 475
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 29ms.
	Number of Grounded Actions 324
	Number of Grounded Literals 99
	number of abstract tasks = 151
	number of tasks = 475
	number of decomposition methods = 475
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 151
	number of tasks = 475
	number of decomposition methods = 475
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 151
	number of tasks = 475
	number of decomposition methods = 475
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 151
	number of tasks = 475
	number of decomposition methods = 475
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 223
	number of tasks = 547
	number of decomposition methods = 547
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 223
	number of tasks = 547
	number of decomposition methods = 547
	number of predicates = 99
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 0
	number of epsilon methods = 0
	number of primitive tasks = 324
	number of constants = 0
Tasks 324 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773132ms
Computing minimum decomposition height: 3

Running SAT search with K = 3
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854773041
done
initial PDT has 48 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 48 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 14553
Size 14552 at 0/324
Size 4809
Size 4653 at 0/324
Size 839
Size 832 at 0/324
Size 292
Size 289 at 0/324
Size 265
Size 265 at 0/324
Size 264
Size 264 at 0/324
Size 264
Invariant time: 0.192
Number of invariants: 264
Invariant Clauses 12936
NUMBER OF CLAUSES 29259
NUMBER OF STATE CLAUSES 24153
NUMBER OF DECOMPOSITION CLAUSES 5106
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 82.55% 17.45% 0.0% 
NUMBER OF PATHS 48
Starting cryptominisat5.5
Setting starttime of solver to 1604489478109
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 72 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854771867
done
PDT has 72 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 19272
NUMBER OF CLAUSES 61557
NUMBER OF STATE CLAUSES 37926
NUMBER OF DECOMPOSITION CLAUSES 23631
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 61.61% 38.39% 0.0% 
NUMBER OF PATHS 72
Starting cryptominisat5.5
Setting starttime of solver to 1604489478870
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854771203
done
initial PDT has 117 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 117 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 31152
NUMBER OF CLAUSES 145401
NUMBER OF STATE CLAUSES 64905
NUMBER OF DECOMPOSITION CLAUSES 80496
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 44.64% 55.36% 0.0% 
NUMBER OF PATHS 117
Starting cryptominisat5.5
Setting starttime of solver to 1604489479861
Command exited with non-zero status 20
0.44 0.00

Time command gave the following runtime for the solver: 440
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854769802
done
initial PDT has 162 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 162 leafs
SHOP LEAFS 0
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 43032
NUMBER OF CLAUSES 300831
NUMBER OF STATE CLAUSES 95292
NUMBER OF DECOMPOSITION CLAUSES 205539
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.68% 68.32000000000001% 0.0% 
NUMBER OF PATHS 162
Starting cryptominisat5.5
Setting starttime of solver to 1604489481813
Command exited with non-zero status 10
0.42 0.00

Time command gave the following runtime for the solver: 420
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^5_10;0;0;0;0,425 425 m-drive-to
10;0;0;0;0 171 pathaction!5_10;0;0;0;0,391
Consider method^4_4;0;0;0,196 196 m-drive-to-via
4;0;0;0 53 pathaction!4_4;0;0;0,391
Consider method^3_6;2;0,67 67 m-drive-to-via
6;2;0 33 pathaction!3_6;2;0,392
Consider method^5_0;2;0;0;0,425 425 m-drive-to
0;2;0;0;0 59 pathaction!5_0;2;0;0;0,391
Consider method^4_11;0;0;0,259 259 m-drive-to-via
11;0;0;0 164 pathaction!4_11;0;0;0,392
Consider method^3_11;0;0,140 140 m-drive-to-via
11;0;0 231 pathaction!3_11;0;0,376
Consider method^4_9;2;0;0,395 395 m-drive-to-via
9;2;0;0 76 pathaction!4_9;2;0;0,401
Consider method^5_2;0;0;0;0,365 365 m-drive-to
2;0;0;0;0 71 pathaction!5_2;0;0;0;0,373
Consider method^2_10;3,191 191 m-unload
10;3 20 pathaction!2_10;3,361
Consider method^2_0;0,66 66 m-drive-to-via
0;0 132 pathaction!2_0;0,374
Consider method^1_11,178 178 m-deliver
11 145 pathaction!1_11,0
Consider method^2_10;1,402 402 m-load
10;1 203 pathaction!2_10;1,173
Consider method^2_7;3,24 24 m-unload
7;3 131 pathaction!2_7;3,356
Consider method^3_6;0;0,376 376 m-drive-to-via
6;0;0 214 pathaction!3_6;0;0,375
Consider method^2_2;1,21 21 m-load
2;1 210 pathaction!2_2;1,182
Consider method^5_11;2;0;0;0,83 83 m-drive-to
11;2;0;0;0 151 pathaction!5_11;2;0;0;0,376
Consider method^3_8;2;0,196 196 m-drive-to-via
8;2;0 109 pathaction!3_8;2;0,391
Consider method^5_5;0;0;0;0,484 484 m-i-am-there
5;0;0;0;0 80 pathaction!5_5;0;0;0;0,393
Consider method^2_6;1,34 34 m-load
6;1 116 pathaction!2_6;1,144
Consider method^2_11;2,321 321 m-drive-to-via
11;2 21 pathaction!2_11;2,400
Consider method^2_1;3,35 35 m-unload
1;3 52 pathaction!2_1;3,336
Consider method^2_5;2,522 522 m-drive-to-via
5;2 48 pathaction!2_5;2,377
Consider method^1_6,318 318 m-deliver
6 202 pathaction!1_6,8
Consider method^3_2;0;0,269 269 m-drive-to-via
2;0;0 225 pathaction!3_2;0;0,373
Consider method^2_2;3,43 43 m-unload
2;3 27 pathaction!2_2;3,370
Consider method^2_5;1,297 297 m-load
5;1 83 pathaction!2_5;1,131
Consider method^2_2;0,516 516 m-drive-to-via
2;0 227 pathaction!2_2;0,384
Consider method^3_4;2;0,48 48 m-drive-to-via
4;2;0 129 pathaction!3_4;2;0,376
Consider method^3_0;2;0,258 258 m-drive-to-via
0;2;0 182 pathaction!3_0;2;0,375
Consider method^1_0,210 210 m-deliver
0 54 pathaction!1_0,5
Consider method^2_10;2,20 20 m-drive-to-via
10;2 149 pathaction!2_10;2,375
Consider method^2_0;1,271 271 m-load
0;1 74 pathaction!2_0;1,134
Consider method^2_9;0,22 22 m-drive-to
9;0 39 pathaction!2_9;0,387
Consider method^4_1;0;0;0,68 68 m-drive-to
1;0;0;0 0 pathaction!4_1;0;0;0,389
Consider method^3_7;0;0,419 419 m-drive-to-via
7;0;0 157 pathaction!3_7;0;0,375
Consider method^2_9;2,531 531 m-drive-to-via
9;2 73 pathaction!2_9;2,385
Consider method^5_3;0;0;0;0,332 332 m-drive-to
3;0;0;0;0 62 pathaction!5_3;0;0;0;0,392
Consider method^2_6;0,196 196 m-drive-to-via
6;0 45 pathaction!2_6;0,391
Consider method^5_4;0;0;0;0,239 239 m-i-am-there
4;0;0;0;0 208 pathaction!5_4;0;0;0;0,375
Consider method^2_3;3,25 25 m-unload
3;3 96 pathaction!2_3;3,346
Consider method^2_3;1,415 415 m-load
3;1 156 pathaction!2_3;1,135
Consider method^3_1;0;0,92 92 m-drive-to-via
1;0;0 110 pathaction!3_1;0;0,382
Consider method^0_,546 546 __top_1
 184 pathaction!0_,474
Consider method^5_9;2;0;0;0,336 336 m-drive-to
9;2;0;0;0 41 pathaction!5_9;2;0;0;0,386
Consider method^3_0;0;0,353 353 m-drive-to-via
0;0;0 58 pathaction!3_0;0;0,379
Consider method^2_9;1,469 469 m-load
9;1 67 pathaction!2_9;1,169
Consider method^3_11;2;0,48 48 m-drive-to-via
11;2;0 224 pathaction!3_11;2;0,376
Consider method^2_8;3,426 426 m-unload
8;3 31 pathaction!2_8;3,342
Consider method^3_3;2;0,381 381 m-drive-to-via
3;2;0 173 pathaction!3_3;2;0,391
Consider method^2_7;1,470 470 m-load
7;1 160 pathaction!2_7;1,168
Consider method^1_2,234 234 m-deliver
2 68 pathaction!1_2,7
Consider method^5_6;2;0;0;0,247 247 m-drive-to
6;2;0;0;0 200 pathaction!5_6;2;0;0;0,374
Consider method^4_7;0;0;0,19 19 m-drive-to-via
7;0;0;0 34 pathaction!4_7;0;0;0,394
Consider method^2_3;2,258 258 m-drive-to-via
3;2 206 pathaction!2_3;2,375
Consider method^2_1;0,197 197 m-drive-to-via
1;0 241 pathaction!2_1;0,389
Consider method^2_3;0,267 267 m-drive-to-via
3;0 125 pathaction!2_3;0,379
Consider method^3_10;2;0,432 432 m-drive-to-via
10;2;0 221 pathaction!3_10;2;0,380
Consider method^2_0;3,248 248 m-unload
0;3 135 pathaction!2_0;3,344
Consider method^2_5;0,435 435 m-drive-to-via
5;0 97 pathaction!2_5;0,388
Consider method^2_7;0,398 398 m-drive-to-via
7;0 117 pathaction!2_7;0,394
Consider method^1_3,70 70 m-deliver
3 102 pathaction!1_3,6
Consider method^4_3;0;0;0,353 353 m-drive-to-via
3;0;0;0 237 pathaction!4_3;0;0;0,379
Consider method^2_8;1,412 412 m-load
8;1 75 pathaction!2_8;1,122
Consider method^2_11;3,165 165 m-unload
11;3 38 pathaction!2_11;3,355
Consider method^5_8;2;0;0;0,83 83 m-drive-to
8;2;0;0;0 99 pathaction!5_8;2;0;0;0,376
Consider method^1_1,129 129 m-deliver
1 64 pathaction!1_1,1
Consider method^2_1;2,473 473 m-drive-to
1;2 60 pathaction!2_1;2,386
Consider method^4_5;0;0;0,84 84 m-drive-to-via
5;0;0;0 104 pathaction!4_5;0;0;0,384
Consider method^5_11;0;0;0;0,509 509 m-drive-to
11;0;0;0;0 142 pathaction!5_11;0;0;0;0,394
Consider method^3_3;0;0,66 66 m-drive-to-via
3;0;0 79 pathaction!3_3;0;0,374
Consider method^4_7;2;0;0,380 380 m-drive-to
7;2;0;0 175 pathaction!4_7;2;0;0,392
Consider method^4_10;2;0;0,29 29 m-drive-to-via
10;2;0;0 2 pathaction!4_10;2;0;0,375
Consider method^5_10;2;0;0;0,83 83 m-drive-to
10;2;0;0;0 78 pathaction!5_10;2;0;0;0,376
Consider method^4_6;2;0;0,267 267 m-drive-to-via
6;2;0;0 35 pathaction!4_6;2;0;0,379
Consider method^4_11;2;0;0,29 29 m-drive-to-via
11;2;0;0 5 pathaction!4_11;2;0;0,375
Consider method^3_10;0;0,48 48 m-drive-to-via
10;0;0 170 pathaction!3_10;0;0,376
Consider method^4_5;2;0;0,460 460 m-drive-to-via
5;2;0;0 196 pathaction!4_5;2;0;0,373
Consider method^3_7;2;0,140 140 m-drive-to-via
7;2;0 240 pathaction!3_7;2;0,376
Consider method^3_4;0;0,258 258 m-drive-to-via
4;0;0 120 pathaction!3_4;0;0,375
Consider method^1_7,388 388 m-deliver
7 56 pathaction!1_7,2
Consider method^4_0;0;0;0,158 158 m-drive-to-via
0;0;0;0 185 pathaction!4_0;0;0;0,392
Consider method^4_8;2;0;0,29 29 m-drive-to-via
8;2;0;0 29 pathaction!4_8;2;0;0,375
Consider method^3_5;0;0,179 179 m-drive-to-via
5;0;0 90 pathaction!3_5;0;0,393
Consider method^4_4;2;0;0,0 0 m-drive-to
4;2;0;0 229 pathaction!4_4;2;0;0,375
Consider method^2_6;3,500 500 m-unload
6;3 204 pathaction!2_6;3,337
Consider method^5_5;2;0;0;0,502 502 m-drive-to
5;2;0;0;0 98 pathaction!5_5;2;0;0;0,393
Consider method^5_0;0;0;0;0,400 400 m-drive-to
0;0;0;0;0 106 pathaction!5_0;0;0;0;0,376
Consider method^2_4;3,341 341 m-unload
4;3 188 pathaction!2_4;3,366
Consider method^2_4;0,432 432 m-drive-to-via
4;0 140 pathaction!2_4;0,380
Consider method^5_6;0;0;0;0,83 83 m-drive-to
6;0;0;0;0 95 pathaction!5_6;0;0;0;0,376
Consider method^1_10,104 104 m-deliver
10 47 pathaction!1_10,4
Consider method^2_5;3,44 44 m-unload
5;3 63 pathaction!2_5;3,371
Consider method^2_11;1,278 278 m-load
11;1 209 pathaction!2_11;1,158
Consider method^2_2;2,539 539 m-drive-to
2;2 134 pathaction!2_2;2,393
Consider method^1_5,89 89 m-deliver
5 232 pathaction!1_5,11
Consider method^4_6;0;0;0,158 158 m-drive-to-via
6;0;0;0 230 pathaction!4_6;0;0;0,392
Consider method^4_3;2;0;0,281 281 m-drive-to
3;2;0;0 1 pathaction!4_3;2;0;0,374
Consider method^4_10;0;0;0,258 258 m-drive-to-via
10;0;0;0 57 pathaction!4_10;0;0;0,375
Consider method^3_5;2;0,472 472 m-drive-to-via
5;2;0 119 pathaction!3_5;2;0,398
Consider method^2_8;2,195 195 m-drive-to-via
8;2 218 pathaction!2_8;2,374
Consider method^5_7;0;0;0;0,257 257 m-drive-to
7;0;0;0;0 161 pathaction!5_7;0;0;0;0,392
Consider method^4_2;0;0;0,367 367 m-drive-to-via
2;0;0;0 211 pathaction!4_2;0;0;0,397
Consider method^2_0;2,48 48 m-drive-to-via
0;2 236 pathaction!2_0;2,376
Consider method^2_4;2,383 383 m-drive-to-via
4;2 193 pathaction!2_4;2,378
Consider method^4_0;2;0;0,384 384 m-drive-to-via
0;2;0;0 115 pathaction!4_0;2;0;0,391
Consider method^2_8;0,461 461 m-i-am-there
8;0 113 pathaction!2_8;0,378
Consider method^2_10;0,383 383 m-drive-to-via
10;0 234 pathaction!2_10;0,378
Consider method^3_9;2;0,143 143 m-drive-to-via
9;2;0 158 pathaction!3_9;2;0,401
Consider method^1_8,366 366 m-deliver
8 82 pathaction!1_8,9
Consider method^2_7;2,383 383 m-drive-to-via
7;2 155 pathaction!2_7;2,378
Consider method^2_9;3,280 280 m-unload
9;3 81 pathaction!2_9;3,347
Consider method^1_9,456 456 m-deliver
9 111 pathaction!1_9,3
Consider method^1_4,480 480 m-deliver
4 92 pathaction!1_4,10
Consider method^2_4;1,452 452 m-load
4;1 44 pathaction!2_4;1,137
Consider method^2_6;2,376 376 m-drive-to-via
6;2 189 pathaction!2_6;2,375
Consider method^2_1;1,311 311 m-load
1;1 174 pathaction!2_1;1,120
Consider method^2_11;0,383 383 m-drive-to-via
11;0 14 pathaction!2_11;0,378


CHECKING primitive solution of length 104 ...
true 228 drive[truck-0,city-loc-3,city-loc-7;]
true 16 drive[truck-0,city-loc-7,city-loc-6;]
true 180 drive[truck-0,city-loc-6,city-loc-4;]
true 107 drive[truck-0,city-loc-4,city-loc-9;]
true 178 pick-up[truck-0,city-loc-9,package-0,capacity-1,capacity-2;]
true 154 drive[truck-0,city-loc-9,city-loc-1;]
true 166 drive[truck-0,city-loc-1,city-loc-1;]
true 223 drive[truck-0,city-loc-1,city-loc-2;]
true 176 drive[truck-0,city-loc-2,city-loc-7;]
true 146 drop[truck-0,city-loc-7,package-0,capacity-1,capacity-2;]
true 159 drive[truck-1,city-loc-2,city-loc-7;]
true 7 drive[truck-1,city-loc-7,city-loc-8;]
true 69 drive[truck-1,city-loc-8,city-loc-7;]
true 123 pick-up[truck-1,city-loc-7,package-1,capacity-1,capacity-2;]
true 61 drive[truck-1,city-loc-7,city-loc-2;]
true 66 drop[truck-1,city-loc-2,package-1,capacity-1,capacity-2;]
true 133 drive[truck-2,city-loc-7,city-loc-6;]
true 36 drive[truck-2,city-loc-6,city-loc-4;]
true 9 drive[truck-2,city-loc-4,city-loc-6;]
true 6 drive[truck-2,city-loc-6,city-loc-0;]
true 40 pick-up[truck-2,city-loc-0,package-2,capacity-1,capacity-2;]
true 122 drive[truck-2,city-loc-0,city-loc-2;]
true 10 drop[truck-2,city-loc-2,package-2,capacity-1,capacity-2;]
true 8 drive[truck-0,city-loc-7,city-loc-6;]
true 181 drive[truck-0,city-loc-6,city-loc-4;]
true 72 drive[truck-0,city-loc-4,city-loc-9;]
true 197 drive[truck-0,city-loc-9,city-loc-4;]
true 219 pick-up[truck-0,city-loc-4,package-3,capacity-1,capacity-2;]
true 169 drive[truck-0,city-loc-4,city-loc-9;]
true 238 drive[truck-0,city-loc-9,city-loc-1;]
true 216 drive[truck-0,city-loc-1,city-loc-2;]
true 139 drop[truck-0,city-loc-2,package-3,capacity-1,capacity-2;]
true 121 noop[truck-0,city-loc-2;]
true 201 drive[truck-0,city-loc-2,city-loc-1;]
true 88 drive[truck-0,city-loc-1,city-loc-2;]
true 43 drive[truck-0,city-loc-2,city-loc-5;]
true 37 pick-up[truck-0,city-loc-5,package-4,capacity-1,capacity-2;]
true 150 drive[truck-0,city-loc-5,city-loc-2;]
true 143 drive[truck-0,city-loc-2,city-loc-7;]
true 195 drive[truck-0,city-loc-7,city-loc-8;]
true 86 drop[truck-0,city-loc-8,package-4,capacity-1,capacity-2;]
true 152 noop[truck-2,city-loc-2;]
true 226 drive[truck-2,city-loc-2,city-loc-0;]
true 179 drive[truck-2,city-loc-0,city-loc-2;]
true 94 drive[truck-2,city-loc-2,city-loc-5;]
true 51 pick-up[truck-2,city-loc-5,package-5,capacity-1,capacity-2;]
true 89 drive[truck-2,city-loc-5,city-loc-2;]
true 25 drive[truck-2,city-loc-2,city-loc-6;]
true 19 drive[truck-2,city-loc-6,city-loc-7;]
true 153 drive[truck-2,city-loc-7,city-loc-8;]
true 114 drop[truck-2,city-loc-8,package-5,capacity-1,capacity-2;]
true 198 drive[truck-0,city-loc-8,city-loc-7;]
true 84 drive[truck-0,city-loc-7,city-loc-6;]
true 65 drive[truck-0,city-loc-6,city-loc-2;]
true 105 drive[truck-0,city-loc-2,city-loc-1;]
true 148 pick-up[truck-0,city-loc-1,package-6,capacity-1,capacity-2;]
true 22 drive[truck-0,city-loc-1,city-loc-9;]
true 222 drive[truck-0,city-loc-9,city-loc-4;]
true 136 drive[truck-0,city-loc-4,city-loc-6;]
true 70 drive[truck-0,city-loc-6,city-loc-2;]
true 4 drop[truck-0,city-loc-2,package-6,capacity-1,capacity-2;]
true 190 drive[truck-0,city-loc-2,city-loc-6;]
true 124 drive[truck-0,city-loc-6,city-loc-0;]
true 194 drive[truck-0,city-loc-0,city-loc-2;]
true 118 drive[truck-0,city-loc-2,city-loc-0;]
true 137 pick-up[truck-0,city-loc-0,package-7,capacity-1,capacity-2;]
true 138 drive[truck-0,city-loc-0,city-loc-6;]
true 126 drive[truck-0,city-loc-6,city-loc-7;]
true 26 drive[truck-0,city-loc-7,city-loc-8;]
true 12 drop[truck-0,city-loc-8,package-7,capacity-1,capacity-2;]
true 205 noop[truck-0,city-loc-8;]
true 163 pick-up[truck-0,city-loc-8,package-8,capacity-1,capacity-2;]
true 215 drive[truck-0,city-loc-8,city-loc-7;]
true 191 drive[truck-0,city-loc-7,city-loc-2;]
true 87 drive[truck-0,city-loc-2,city-loc-1;]
true 162 drive[truck-0,city-loc-1,city-loc-9;]
true 91 drop[truck-0,city-loc-9,package-8,capacity-1,capacity-2;]
true 15 drive[truck-1,city-loc-2,city-loc-1;]
true 127 pick-up[truck-1,city-loc-1,package-9,capacity-1,capacity-2;]
true 28 drive[truck-1,city-loc-1,city-loc-2;]
true 207 drive[truck-1,city-loc-2,city-loc-6;]
true 24 drive[truck-1,city-loc-6,city-loc-6;]
true 112 drive[truck-1,city-loc-6,city-loc-0;]
true 130 drop[truck-1,city-loc-0,package-9,capacity-1,capacity-2;]
true 46 drive[truck-0,city-loc-9,city-loc-1;]
true 233 drive[truck-0,city-loc-1,city-loc-2;]
true 128 drive[truck-0,city-loc-2,city-loc-7;]
true 235 drive[truck-0,city-loc-7,city-loc-8;]
true 23 pick-up[truck-0,city-loc-8,package-10,capacity-1,capacity-2;]
true 144 drive[truck-0,city-loc-8,city-loc-7;]
true 213 drive[truck-0,city-loc-7,city-loc-2;]
true 186 drive[truck-0,city-loc-2,city-loc-5;]
true 167 drive[truck-0,city-loc-5,city-loc-2;]
true 17 drop[truck-0,city-loc-2,package-10,capacity-1,capacity-2;]
true 192 drive[truck-0,city-loc-2,city-loc-0;]
true 11 drive[truck-0,city-loc-0,city-loc-6;]
true 199 drive[truck-0,city-loc-6,city-loc-7;]
true 172 drive[truck-0,city-loc-7,city-loc-8;]
true 217 pick-up[truck-0,city-loc-8,package-11,capacity-1,capacity-2;]
true 220 drive[truck-0,city-loc-8,city-loc-7;]
true 108 drive[truck-0,city-loc-7,city-loc-2;]
true 49 drive[truck-0,city-loc-2,city-loc-7;]
true 50 drive[truck-0,city-loc-7,city-loc-3;]
true 13 drop[truck-0,city-loc-3,package-11,capacity-1,capacity-2;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 233824120
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 99
number of actions                    = 547
number of abstract actions           = 223
number of primitive actions          = 324
number of methods                    = 547
number of primitive shop actions     = 0
number of primitive non-shop actions = 324
size of largest method               = 12
average method size                  = 1
============ sat ============
plan length                     = -1
number of variables             = 101227
number of clauses               = 300831
average size of clauses         = 3.267296256037443
number of assert                = 19
number of horn                  = 272565
K offset                        = 0
K chosen value                  = 6
state formula                   = 95292
method children clauses         = 0
number of paths                 = 162
maximum plan length             = 162
number of decomposition clauses = 205539
number of ordering clauses      = 0
number of state clauses         = 95292
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 8699
============ parsing ============
total                         = 927
file parser                   = 546
sort expansion                = 167
closed world assumption       = 98
inherit preconditions         = 0
shop methods                  = 2
eliminate identical variables = 49
strip domain of hybridity     = 1
flatten formula               = 63
============ preprocessing ============
total                                      = 1600
compile negative preconditions             = 30
compile unit methods                       = 0
split parameter                            = 44
expand choiceless abstract tasks           = 21
compile methods with identical tasks       = 42
removing unnecessary predicates            = 167
lifted reachabiltiy analysis               = 54
grounded planning graph analysis           = 562
grounded task decomposition graph analysis = 482
grounding                                  = 171
create artificial top task                 = 4
============ search preparation ============
compute state invariants = 288
============ sat ============
total                                        = 4658
generate formula                             = 3074
generate path decomposition tree             = 479
normalise path decomposition tree            = 174
sog optimisation                             = 132
translate path decomposition tree to clauses = 1011
generate state formula                       = 3005
generate state invariant formula             = 143
transform to DIMACS                          = 383
SAT solver                                   = 880
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 10
SAT solver for K=0005                        = 440
SAT solver for K=0006                        = 420

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="324";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="223";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="233824120";"40 sat:20:state formula"="95292";"40 sat:01:number of variables"="101227";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="162";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="547";"30 problem:07:number of primitive shop actions"="0";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="547";"30 problem:08:number of primitive non-shop actions"="324";"30 problem:02:number of predicates"="99";"40 sat:03:number of horn"="272565";"40 sat:15:K chosen value"="6";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="12";"40 sat:03:average size of clauses"="3.267296256037443";"40 sat:02:number of clauses"="300831";"40 sat:50:number of state clauses"="95292";"40 sat:03:number of assert"="19";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="162";"40 sat:50:number of decomposition clauses"="205539";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="546";"01 parsing:08:flatten formula"="63";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="4658";"40 sat:16:generate state formula"="3005";"40 sat:20:transform to DIMACS"="383";"40 sat:11:generate path decomposition tree"="479";"02 preprocessing:07:compile methods with identical tasks"="42";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="167";"01 parsing:03:closed world assumption"="98";"02 preprocessing:11:lifted reachabiltiy analysis"="54";"01 parsing:02:sort expansion"="167";"40 sat:12:normalise path decomposition tree"="174";"40 sat:40:SAT solver"="880";"01 parsing:00:total"="927";"40 sat:10:generate formula"="3074";"40 sat:41:SAT solver for K=0005"="440";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="30";"00 total:00:total"="8699";"40 sat:13:sog optimisation"="132";"02 preprocessing:12:grounded planning graph analysis"="562";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="482";"40 sat:41:SAT solver for K=0006"="420";"02 preprocessing:04:split parameter"="44";"01 parsing:05:shop methods"="2";"10 search preparation:02:compute state invariants"="288";"01 parsing:06:eliminate identical variables"="49";"40 sat:15:translate path decomposition tree to clauses"="1011";"02 preprocessing:05:expand choiceless abstract tasks"="21";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="143";"02 preprocessing:00:total"="1600";"02 preprocessing:99:create artificial top task"="4";"02 preprocessing:84:grounding"="171"
#!verify drive[truck-0,city-loc-3,city-loc-7];drive[truck-0,city-loc-7,city-loc-6];drive[truck-0,city-loc-6,city-loc-4];drive[truck-0,city-loc-4,city-loc-9];pick-up[truck-0,city-loc-9,package-0,capacity-1,capacity-2];drive[truck-0,city-loc-9,city-loc-1];drive[truck-0,city-loc-1,city-loc-1];drive[truck-0,city-loc-1,city-loc-2];drive[truck-0,city-loc-2,city-loc-7];drop[truck-0,city-loc-7,package-0,capacity-1,capacity-2];drive[truck-1,city-loc-2,city-loc-7];drive[truck-1,city-loc-7,city-loc-8];drive[truck-1,city-loc-8,city-loc-7];pick-up[truck-1,city-loc-7,package-1,capacity-1,capacity-2];drive[truck-1,city-loc-7,city-loc-2];drop[truck-1,city-loc-2,package-1,capacity-1,capacity-2];drive[truck-2,city-loc-7,city-loc-6];drive[truck-2,city-loc-6,city-loc-4];drive[truck-2,city-loc-4,city-loc-6];drive[truck-2,city-loc-6,city-loc-0];pick-up[truck-2,city-loc-0,package-2,capacity-1,capacity-2];drive[truck-2,city-loc-0,city-loc-2];drop[truck-2,city-loc-2,package-2,capacity-1,capacity-2];drive[truck-0,city-loc-7,city-loc-6];drive[truck-0,city-loc-6,city-loc-4];drive[truck-0,city-loc-4,city-loc-9];drive[truck-0,city-loc-9,city-loc-4];pick-up[truck-0,city-loc-4,package-3,capacity-1,capacity-2];drive[truck-0,city-loc-4,city-loc-9];drive[truck-0,city-loc-9,city-loc-1];drive[truck-0,city-loc-1,city-loc-2];drop[truck-0,city-loc-2,package-3,capacity-1,capacity-2];noop[truck-0,city-loc-2];drive[truck-0,city-loc-2,city-loc-1];drive[truck-0,city-loc-1,city-loc-2];drive[truck-0,city-loc-2,city-loc-5];pick-up[truck-0,city-loc-5,package-4,capacity-1,capacity-2];drive[truck-0,city-loc-5,city-loc-2];drive[truck-0,city-loc-2,city-loc-7];drive[truck-0,city-loc-7,city-loc-8];drop[truck-0,city-loc-8,package-4,capacity-1,capacity-2];noop[truck-2,city-loc-2];drive[truck-2,city-loc-2,city-loc-0];drive[truck-2,city-loc-0,city-loc-2];drive[truck-2,city-loc-2,city-loc-5];pick-up[truck-2,city-loc-5,package-5,capacity-1,capacity-2];drive[truck-2,city-loc-5,city-loc-2];drive[truck-2,city-loc-2,city-loc-6];drive[truck-2,city-loc-6,city-loc-7];drive[truck-2,city-loc-7,city-loc-8];drop[truck-2,city-loc-8,package-5,capacity-1,capacity-2];drive[truck-0,city-loc-8,city-loc-7];drive[truck-0,city-loc-7,city-loc-6];drive[truck-0,city-loc-6,city-loc-2];drive[truck-0,city-loc-2,city-loc-1];pick-up[truck-0,city-loc-1,package-6,capacity-1,capacity-2];drive[truck-0,city-loc-1,city-loc-9];drive[truck-0,city-loc-9,city-loc-4];drive[truck-0,city-loc-4,city-loc-6];drive[truck-0,city-loc-6,city-loc-2];drop[truck-0,city-loc-2,package-6,capacity-1,capacity-2];drive[truck-0,city-loc-2,city-loc-6];drive[truck-0,city-loc-6,city-loc-0];drive[truck-0,city-loc-0,city-loc-2];drive[truck-0,city-loc-2,city-loc-0];pick-up[truck-0,city-loc-0,package-7,capacity-1,capacity-2];drive[truck-0,city-loc-0,city-loc-6];drive[truck-0,city-loc-6,city-loc-7];drive[truck-0,city-loc-7,city-loc-8];drop[truck-0,city-loc-8,package-7,capacity-1,capacity-2];noop[truck-0,city-loc-8];pick-up[truck-0,city-loc-8,package-8,capacity-1,capacity-2];drive[truck-0,city-loc-8,city-loc-7];drive[truck-0,city-loc-7,city-loc-2];drive[truck-0,city-loc-2,city-loc-1];drive[truck-0,city-loc-1,city-loc-9];drop[truck-0,city-loc-9,package-8,capacity-1,capacity-2];drive[truck-1,city-loc-2,city-loc-1];pick-up[truck-1,city-loc-1,package-9,capacity-1,capacity-2];drive[truck-1,city-loc-1,city-loc-2];drive[truck-1,city-loc-2,city-loc-6];drive[truck-1,city-loc-6,city-loc-6];drive[truck-1,city-loc-6,city-loc-0];drop[truck-1,city-loc-0,package-9,capacity-1,capacity-2];drive[truck-0,city-loc-9,city-loc-1];drive[truck-0,city-loc-1,city-loc-2];drive[truck-0,city-loc-2,city-loc-7];drive[truck-0,city-loc-7,city-loc-8];pick-up[truck-0,city-loc-8,package-10,capacity-1,capacity-2];drive[truck-0,city-loc-8,city-loc-7];drive[truck-0,city-loc-7,city-loc-2];drive[truck-0,city-loc-2,city-loc-5];drive[truck-0,city-loc-5,city-loc-2];drop[truck-0,city-loc-2,package-10,capacity-1,capacity-2];drive[truck-0,city-loc-2,city-loc-0];drive[truck-0,city-loc-0,city-loc-6];drive[truck-0,city-loc-6,city-loc-7];drive[truck-0,city-loc-7,city-loc-8];pick-up[truck-0,city-loc-8,package-11,capacity-1,capacity-2];drive[truck-0,city-loc-8,city-loc-7];drive[truck-0,city-loc-7,city-loc-2];drive[truck-0,city-loc-2,city-loc-7];drive[truck-0,city-loc-7,city-loc-3];drop[truck-0,city-loc-3,package-11,capacity-1,capacity-2]
==>
0 drive truck-0 city-loc-3 city-loc-7 
1 drive truck-0 city-loc-7 city-loc-6 
2 drive truck-0 city-loc-6 city-loc-4 
3 drive truck-0 city-loc-4 city-loc-9 
4 pick-up truck-0 city-loc-9 package-0 capacity-1 capacity-2 
5 drive truck-0 city-loc-9 city-loc-1 
6 drive truck-0 city-loc-1 city-loc-1 
7 drive truck-0 city-loc-1 city-loc-2 
8 drive truck-0 city-loc-2 city-loc-7 
9 drop truck-0 city-loc-7 package-0 capacity-1 capacity-2 
10 drive truck-1 city-loc-2 city-loc-7 
11 drive truck-1 city-loc-7 city-loc-8 
12 drive truck-1 city-loc-8 city-loc-7 
13 pick-up truck-1 city-loc-7 package-1 capacity-1 capacity-2 
14 drive truck-1 city-loc-7 city-loc-2 
15 drop truck-1 city-loc-2 package-1 capacity-1 capacity-2 
16 drive truck-2 city-loc-7 city-loc-6 
17 drive truck-2 city-loc-6 city-loc-4 
18 drive truck-2 city-loc-4 city-loc-6 
19 drive truck-2 city-loc-6 city-loc-0 
20 pick-up truck-2 city-loc-0 package-2 capacity-1 capacity-2 
21 drive truck-2 city-loc-0 city-loc-2 
22 drop truck-2 city-loc-2 package-2 capacity-1 capacity-2 
23 drive truck-0 city-loc-7 city-loc-6 
24 drive truck-0 city-loc-6 city-loc-4 
25 drive truck-0 city-loc-4 city-loc-9 
26 drive truck-0 city-loc-9 city-loc-4 
27 pick-up truck-0 city-loc-4 package-3 capacity-1 capacity-2 
28 drive truck-0 city-loc-4 city-loc-9 
29 drive truck-0 city-loc-9 city-loc-1 
30 drive truck-0 city-loc-1 city-loc-2 
31 drop truck-0 city-loc-2 package-3 capacity-1 capacity-2 
32 noop truck-0 city-loc-2 
33 drive truck-0 city-loc-2 city-loc-1 
34 drive truck-0 city-loc-1 city-loc-2 
35 drive truck-0 city-loc-2 city-loc-5 
36 pick-up truck-0 city-loc-5 package-4 capacity-1 capacity-2 
37 drive truck-0 city-loc-5 city-loc-2 
38 drive truck-0 city-loc-2 city-loc-7 
39 drive truck-0 city-loc-7 city-loc-8 
40 drop truck-0 city-loc-8 package-4 capacity-1 capacity-2 
41 noop truck-2 city-loc-2 
42 drive truck-2 city-loc-2 city-loc-0 
43 drive truck-2 city-loc-0 city-loc-2 
44 drive truck-2 city-loc-2 city-loc-5 
45 pick-up truck-2 city-loc-5 package-5 capacity-1 capacity-2 
46 drive truck-2 city-loc-5 city-loc-2 
47 drive truck-2 city-loc-2 city-loc-6 
48 drive truck-2 city-loc-6 city-loc-7 
49 drive truck-2 city-loc-7 city-loc-8 
50 drop truck-2 city-loc-8 package-5 capacity-1 capacity-2 
51 drive truck-0 city-loc-8 city-loc-7 
52 drive truck-0 city-loc-7 city-loc-6 
53 drive truck-0 city-loc-6 city-loc-2 
54 drive truck-0 city-loc-2 city-loc-1 
55 pick-up truck-0 city-loc-1 package-6 capacity-1 capacity-2 
56 drive truck-0 city-loc-1 city-loc-9 
57 drive truck-0 city-loc-9 city-loc-4 
58 drive truck-0 city-loc-4 city-loc-6 
59 drive truck-0 city-loc-6 city-loc-2 
60 drop truck-0 city-loc-2 package-6 capacity-1 capacity-2 
61 drive truck-0 city-loc-2 city-loc-6 
62 drive truck-0 city-loc-6 city-loc-0 
63 drive truck-0 city-loc-0 city-loc-2 
64 drive truck-0 city-loc-2 city-loc-0 
65 pick-up truck-0 city-loc-0 package-7 capacity-1 capacity-2 
66 drive truck-0 city-loc-0 city-loc-6 
67 drive truck-0 city-loc-6 city-loc-7 
68 drive truck-0 city-loc-7 city-loc-8 
69 drop truck-0 city-loc-8 package-7 capacity-1 capacity-2 
70 noop truck-0 city-loc-8 
71 pick-up truck-0 city-loc-8 package-8 capacity-1 capacity-2 
72 drive truck-0 city-loc-8 city-loc-7 
73 drive truck-0 city-loc-7 city-loc-2 
74 drive truck-0 city-loc-2 city-loc-1 
75 drive truck-0 city-loc-1 city-loc-9 
76 drop truck-0 city-loc-9 package-8 capacity-1 capacity-2 
77 drive truck-1 city-loc-2 city-loc-1 
78 pick-up truck-1 city-loc-1 package-9 capacity-1 capacity-2 
79 drive truck-1 city-loc-1 city-loc-2 
80 drive truck-1 city-loc-2 city-loc-6 
81 drive truck-1 city-loc-6 city-loc-6 
82 drive truck-1 city-loc-6 city-loc-0 
83 drop truck-1 city-loc-0 package-9 capacity-1 capacity-2 
84 drive truck-0 city-loc-9 city-loc-1 
85 drive truck-0 city-loc-1 city-loc-2 
86 drive truck-0 city-loc-2 city-loc-7 
87 drive truck-0 city-loc-7 city-loc-8 
88 pick-up truck-0 city-loc-8 package-10 capacity-1 capacity-2 
89 drive truck-0 city-loc-8 city-loc-7 
90 drive truck-0 city-loc-7 city-loc-2 
91 drive truck-0 city-loc-2 city-loc-5 
92 drive truck-0 city-loc-5 city-loc-2 
93 drop truck-0 city-loc-2 package-10 capacity-1 capacity-2 
94 drive truck-0 city-loc-2 city-loc-0 
95 drive truck-0 city-loc-0 city-loc-6 
96 drive truck-0 city-loc-6 city-loc-7 
97 drive truck-0 city-loc-7 city-loc-8 
98 pick-up truck-0 city-loc-8 package-11 capacity-1 capacity-2 
99 drive truck-0 city-loc-8 city-loc-7 
100 drive truck-0 city-loc-7 city-loc-2 
101 drive truck-0 city-loc-2 city-loc-7 
102 drive truck-0 city-loc-7 city-loc-3 
103 drop truck-0 city-loc-3 package-11 capacity-1 capacity-2 
root 113
104 get-to truck-0 city-loc-9  -> m-drive-to-via 153 75
105 get-to truck-2 city-loc-2  -> m-drive-to 46
106 get-to truck-2 city-loc-4  -> m-drive-to-via 118 17
107 get-to truck-0 city-loc-1  -> m-drive-to-via 175 29
108 get-to truck-0 city-loc-8  -> m-drive-to-via 201 87
109 get-to truck-0 city-loc-2  -> m-drive-to-via 169 85
110 get-to truck-0 city-loc-8  -> m-drive-to-via 166 68
111 get-to truck-1 city-loc-0  -> m-drive-to-via 158 82
112 load truck-2 city-loc-0 package-2  -> m-load 20
113 __artificialTopCompilation__top_1  -> __top_1 182 127 179 184 213 208 157 202 212 191 138 173
114 get-to truck-0 city-loc-2  -> m-drive-to-via 132 100
115 get-to truck-0 city-loc-3  -> m-drive-to-via 181 102
116 get-to truck-2 city-loc-6  -> m-drive-to-via 106 18
117 get-to truck-1 city-loc-1  -> m-drive-to 77
118 get-to truck-2 city-loc-6  -> m-drive-to 16
119 get-to truck-0 city-loc-0  -> m-drive-to-via 164 64
120 get-to truck-0 city-loc-8  -> m-i-am-there 70
121 get-to truck-0 city-loc-2  -> m-drive-to 37
122 get-to truck-0 city-loc-7  -> m-drive-to 89
123 unload truck-0 city-loc-2 package-6  -> m-unload 60
124 get-to truck-1 city-loc-6  -> m-drive-to-via 209 80
125 get-to truck-0 city-loc-1  -> m-drive-to-via 130 6
126 get-to truck-0 city-loc-2  -> m-drive-to-via 168 53
127 deliver package-1 city-loc-2  -> m-deliver 165 192 160 142
128 get-to truck-0 city-loc-7  -> m-drive-to-via 121 38
129 unload truck-0 city-loc-8 package-7  -> m-unload 69
130 get-to truck-0 city-loc-1  -> m-drive-to 5
131 get-to truck-1 city-loc-8  -> m-drive-to-via 210 11
132 get-to truck-0 city-loc-7  -> m-drive-to 99
133 load truck-0 city-loc-9 package-0  -> m-load 4
134 get-to truck-0 city-loc-2  -> m-drive-to-via 148 59
135 get-to truck-0 city-loc-2  -> m-drive-to-via 172 73
136 get-to truck-0 city-loc-7  -> m-drive-to 51
137 unload truck-0 city-loc-7 package-0  -> m-unload 9
138 deliver package-10 city-loc-2  -> m-deliver 108 149 207 211
139 get-to truck-0 city-loc-2  -> m-i-am-there 32
140 load truck-0 city-loc-5 package-4  -> m-load 36
141 get-to truck-0 city-loc-7  -> m-drive-to-via 150 8
142 unload truck-1 city-loc-2 package-1  -> m-unload 15
143 get-to truck-0 city-loc-8  -> m-drive-to-via 183 97
144 unload truck-2 city-loc-8 package-5  -> m-unload 50
145 get-to truck-2 city-loc-0  -> m-drive-to-via 116 19
146 unload truck-1 city-loc-0 package-9  -> m-unload 83
147 unload truck-0 city-loc-3 package-11  -> m-unload 103
148 get-to truck-0 city-loc-6  -> m-drive-to-via 167 58
149 load truck-0 city-loc-8 package-10  -> m-load 88
150 get-to truck-0 city-loc-2  -> m-drive-to-via 125 7
151 get-to truck-0 city-loc-9  -> m-drive-to 56
152 unload truck-0 city-loc-2 package-3  -> m-unload 31
153 get-to truck-0 city-loc-1  -> m-drive-to-via 135 74
154 get-to truck-0 city-loc-6  -> m-drive-to 61
155 get-to truck-0 city-loc-5  -> m-drive-to-via 200 91
156 get-to truck-0 city-loc-4  -> m-drive-to-via 214 26
157 deliver package-6 city-loc-2  -> m-deliver 162 204 134 123
158 get-to truck-1 city-loc-6  -> m-drive-to-via 124 81
159 get-to truck-2 city-loc-8  -> m-drive-to-via 163 49
160 get-to truck-1 city-loc-2  -> m-drive-to 14
161 load truck-1 city-loc-1 package-9  -> m-load 78
162 get-to truck-0 city-loc-1  -> m-drive-to-via 126 54
163 get-to truck-2 city-loc-7  -> m-drive-to-via 177 48
164 get-to truck-0 city-loc-2  -> m-drive-to-via 218 63
165 get-to truck-1 city-loc-7  -> m-drive-to-via 131 12
166 get-to truck-0 city-loc-7  -> m-drive-to-via 205 67
167 get-to truck-0 city-loc-4  -> m-drive-to-via 151 57
168 get-to truck-0 city-loc-6  -> m-drive-to-via 136 52
169 get-to truck-0 city-loc-1  -> m-drive-to 84
170 get-to truck-0 city-loc-9  -> m-drive-to-via 206 3
171 get-to truck-0 city-loc-6  -> m-drive-to-via 186 95
172 get-to truck-0 city-loc-7  -> m-drive-to 72
173 deliver package-11 city-loc-3  -> m-deliver 143 185 115 147
174 get-to truck-0 city-loc-6  -> m-drive-to-via 220 1
175 get-to truck-0 city-loc-9  -> m-drive-to 28
176 get-to truck-2 city-loc-2  -> m-drive-to-via 193 43
177 get-to truck-2 city-loc-6  -> m-drive-to-via 105 47
178 unload truck-0 city-loc-8 package-4  -> m-unload 40
179 deliver package-2 city-loc-2  -> m-deliver 145 112 219 189
180 get-to truck-2 city-loc-2  -> m-i-am-there 41
181 get-to truck-0 city-loc-7  -> m-drive-to-via 114 101
182 deliver package-0 city-loc-7  -> m-deliver 170 133 141 137
183 get-to truck-0 city-loc-7  -> m-drive-to-via 171 96
184 deliver package-3 city-loc-2  -> m-deliver 156 196 198 152
185 load truck-0 city-loc-8 package-11  -> m-load 98
186 get-to truck-0 city-loc-0  -> m-drive-to 94
187 get-to truck-2 city-loc-5  -> m-drive-to-via 176 44
188 load truck-0 city-loc-0 package-7  -> m-load 65
189 unload truck-2 city-loc-2 package-2  -> m-unload 22
190 get-to truck-0 city-loc-4  -> m-drive-to-via 195 24
191 deliver package-9 city-loc-0  -> m-deliver 117 161 111 146
192 load truck-1 city-loc-7 package-1  -> m-load 13
193 get-to truck-2 city-loc-0  -> m-drive-to-via 180 42
194 get-to truck-0 city-loc-1  -> m-drive-to-via 139 33
195 get-to truck-0 city-loc-6  -> m-drive-to 23
196 load truck-0 city-loc-4 package-3  -> m-load 27
197 load truck-2 city-loc-5 package-5  -> m-load 45
198 get-to truck-0 city-loc-2  -> m-drive-to-via 107 30
199 get-to truck-0 city-loc-5  -> m-drive-to-via 216 35
200 get-to truck-0 city-loc-2  -> m-drive-to-via 122 90
201 get-to truck-0 city-loc-7  -> m-drive-to-via 109 86
202 deliver package-7 city-loc-8  -> m-deliver 119 188 110 129
203 unload truck-0 city-loc-9 package-8  -> m-unload 76
204 load truck-0 city-loc-1 package-6  -> m-load 55
205 get-to truck-0 city-loc-6  -> m-drive-to 66
206 get-to truck-0 city-loc-4  -> m-drive-to-via 174 2
207 get-to truck-0 city-loc-2  -> m-drive-to-via 155 92
208 deliver package-5 city-loc-8  -> m-deliver 187 197 159 144
209 get-to truck-1 city-loc-2  -> m-drive-to 79
210 get-to truck-1 city-loc-7  -> m-drive-to 10
211 unload truck-0 city-loc-2 package-10  -> m-unload 93
212 deliver package-8 city-loc-9  -> m-deliver 120 215 104 203
213 deliver package-4 city-loc-8  -> m-deliver 199 140 217 178
214 get-to truck-0 city-loc-9  -> m-drive-to-via 190 25
215 load truck-0 city-loc-8 package-8  -> m-load 71
216 get-to truck-0 city-loc-2  -> m-drive-to-via 194 34
217 get-to truck-0 city-loc-8  -> m-drive-to-via 128 39
218 get-to truck-0 city-loc-0  -> m-drive-to-via 154 62
219 get-to truck-2 city-loc-2  -> m-drive-to 21
220 get-to truck-0 city-loc-7  -> m-drive-to 0

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 9.877 MEMPEAK_KBS 394200.064
