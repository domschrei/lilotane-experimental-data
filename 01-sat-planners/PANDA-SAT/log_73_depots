PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p13.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p13.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p13.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Grounded planning graph ... done in 274ms.
	Number of Grounded Actions 437
	Number of Grounded Literals 157
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 30
Grounding ... done.
	number of abstract tasks = 96
	number of tasks = 336
	number of decomposition methods = 242
	number of predicates = 174
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 96
	number of tasks = 336
	number of decomposition methods = 242
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 59ms.
	Number of Grounded Actions 240
	Number of Grounded Literals 114
	number of abstract tasks = 96
	number of tasks = 336
	number of decomposition methods = 242
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 96
	number of tasks = 336
	number of decomposition methods = 242
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 61
	number of tasks = 301
	number of decomposition methods = 207
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 61
	number of tasks = 301
	number of decomposition methods = 207
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 61
	number of tasks = 301
	number of decomposition methods = 207
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 22ms.
	Number of Grounded Actions 240
	Number of Grounded Literals 114
	number of abstract tasks = 61
	number of tasks = 301
	number of decomposition methods = 207
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 61
	number of tasks = 301
	number of decomposition methods = 207
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 43
	number of tasks = 283
	number of decomposition methods = 189
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 43
	number of tasks = 283
	number of decomposition methods = 189
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 43
	number of tasks = 283
	number of decomposition methods = 189
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 8ms.
	Number of Grounded Actions 240
	Number of Grounded Literals 114
	number of abstract tasks = 43
	number of tasks = 283
	number of decomposition methods = 189
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 43
	number of tasks = 283
	number of decomposition methods = 189
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 37
	number of tasks = 277
	number of decomposition methods = 183
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 37
	number of tasks = 277
	number of decomposition methods = 183
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 37
	number of tasks = 277
	number of decomposition methods = 183
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 9ms.
	Number of Grounded Actions 240
	Number of Grounded Literals 114
	number of abstract tasks = 37
	number of tasks = 277
	number of decomposition methods = 183
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 37
	number of tasks = 277
	number of decomposition methods = 183
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 37
	number of tasks = 277
	number of decomposition methods = 183
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 37
	number of tasks = 277
	number of decomposition methods = 183
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 37
	number of tasks = 277
	number of decomposition methods = 183
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 37
	number of tasks = 277
	number of decomposition methods = 183
	number of predicates = 114
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 117
	number of epsilon methods = 0
	number of primitive tasks = 240
	number of constants = 0
Tasks 240 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772765ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 48 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 12 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 121 will abort at 9223372036854772733
done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 19323
Size 19318 at 0/240
Size 10954
Size 10942 at 0/240
Size 4584
Size 4584 at 0/240
Size 2160
Size 2160 at 0/240
Size 1018
Size 1018 at 0/240
Size 976
Size 976 at 0/240
Size 976
Invariant time: 0.182
Number of invariants: 976
Invariant Clauses 12688
NUMBER OF CLAUSES 15646
NUMBER OF STATE CLAUSES 15544
NUMBER OF DECOMPOSITION CLAUSES 102
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 99.35000000000001% 0.65% 0.0% 
NUMBER OF PATHS 12
Starting cryptominisat5.5
Setting starttime of solver to 1604479153403
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 126 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 83 leafs
SHOP LEAFS 47
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854771844
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 81984
NUMBER OF CLAUSES 106850
NUMBER OF STATE CLAUSES 102460
NUMBER OF DECOMPOSITION CLAUSES 4390
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.89% 4.11% 0.0% 
NUMBER OF PATHS 83
Starting cryptominisat5.5
Setting starttime of solver to 1604479154193
Command exited with non-zero status 20
0.03 0.00

Time command gave the following runtime for the solver: 30
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 150 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 146 leafs
SHOP LEAFS 72
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854770988
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 143472
NUMBER OF CLAUSES 188052
NUMBER OF STATE CLAUSES 179633
NUMBER OF DECOMPOSITION CLAUSES 8419
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.52% 4.48% 0.0% 
NUMBER OF PATHS 146
Starting cryptominisat5.5
Setting starttime of solver to 1604479155213
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 151 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 151 leafs
SHOP LEAFS 74
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854770100
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 148352
NUMBER OF CLAUSES 194397
NUMBER OF STATE CLAUSES 185741
NUMBER OF DECOMPOSITION CLAUSES 8656
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 95.55% 4.45% 0.0% 
NUMBER OF PATHS 151
Starting cryptominisat5.5
Setting starttime of solver to 1604479155813
Command exited with non-zero status 10
0.08 0.00

Time command gave the following runtime for the solver: 80
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_5;8,136 136 m4_do_clear
5;8 44 pathaction!2_5;8,234
Consider method^3_0;3;3,99 99 m7_do_get_truck
0;3;3 53 pathaction!3_0;3;3,82
Consider method^3_0;3;1,92 92 <m5_do_clear;do_clear[crate5,depot2];m4_do_clear;1;0,-1,-2,2,3,4>
0;3;1 111 pathaction!3_0;3;1,235
Consider method^1_0,106 106 <<<m3_do_put_on;do_unload_truck[crate0,pallet0,depot0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate0,depot2,truck1];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate0,pallet2,depot2,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>
0 88 pathaction!1_0,2
Consider method^2_4;0,7 7 <<_m3_do_put_on_2;do_load_truck[crate4,pallet3,distributor0,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5>;do_clear[crate4,distributor0];m4_do_clear;2;0,1,-1,-2,3,4>
4;0 31 pathaction!2_4;0,244
Consider method^1_2,169 169 m2_do_put_on
2 89 pathaction!1_2,3
Consider method^2_1;8,18 18 m4_do_clear
1;8 46 pathaction!2_1;8,238
Consider method^2_4;3,79 79 m4_do_clear
4;3 78 pathaction!2_4;3,236
Consider method^1_5,121 121 m2_do_put_on
5 0 pathaction!1_5,0
Consider method^2_5;7,31 31 m7_do_get_truck
5;7 94 pathaction!2_5;7,88
Consider method^2_0;3,104 104 m5_do_clear
0;3 7 pathaction!2_0;3,241
Consider method^1_4,162 162 <m3_do_put_on;do_unload_truck[crate4,pallet9,distributor0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>
4 82 pathaction!1_4,5
Consider method^1_1,43 43 m2_do_put_on
1 32 pathaction!1_1,1
Consider method^2_2;7,176 176 m7_do_get_truck
2;7 87 pathaction!2_2;7,80
Consider method^3_3;0;1,63 63 m7_do_get_truck
3;0;1 63 pathaction!3_3;0;1,81
Consider method^2_2;8,20 20 m4_do_clear
2;8 40 pathaction!2_2;8,239
Consider method^2_0;2,87 87 m7_do_get_truck
0;2 64 pathaction!2_0;2,78
Consider method^1_3,178 178 <m3_do_put_on;do_unload_truck[crate3,pallet7,depot0,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>
3 101 pathaction!1_3,4
Consider method^2_1;7,118 118 m7_do_get_truck
1;7 66 pathaction!2_1;7,79
Consider method^3_0;8;4,130 130 m6_do_get_truck
0;8;4 24 pathaction!3_0;8;4,89
Consider method^2_3;0,97 97 <<_m3_do_put_on_2;do_load_truck[crate3,pallet8,depot0,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5>;do_clear[crate3,depot0];m4_do_clear;2;0,1,-1,-2,3,4>
3;0 109 pathaction!2_3;0,242
Consider method^4_0;3;1;4,120 120 m6_do_get_truck
0;3;1;4 95 pathaction!4_0;3;1;4,78
Consider method^2_0;8,52 52 <m5_do_clear;do_clear[crate2,depot0];m4_do_clear;1;0,-1,-2,2,3,4>
0;8 34 pathaction!2_0;8,240
Consider method^3_4;0;1,47 47 m7_do_get_truck
4;0;1 107 pathaction!3_4;0;1,84
Consider method^2_3;3,40 40 m4_do_clear
3;3 26 pathaction!2_3;3,237
Consider method^0_,182 182 __top_1
 69 pathaction!0_,276


CHECKING primitive solution of length 75 ...
true 55 __method_precondition_m10_do_load_truck_10_precondition[crate0,depot2,pallet2,hoist2;]
true 47 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot2;]
true 27 Drive[truck1,depot0,depot2;]
true 58 __method_precondition_m5_do_clear_5_precondition[crate0,crate1,depot2,hoist2;]
true 49 __method_precondition_m5_do_clear_5_precondition[crate1,crate5,depot2,hoist2;]
true 98 __method_precondition_m4_do_clear_4_precondition[crate5,depot2;]
true 76 nop[;]
true 72 Lift[hoist2,crate5,crate1,depot2;]
true 10 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot2;]
true 50 nop[;]
true 13 Load[hoist2,crate5,truck1,depot2;]
true 92 Lift[hoist2,crate1,crate0,depot2;]
true 29 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot2;]
true 80 Drive[truck0,distributor1,depot2;]
true 1 Load[hoist2,crate1,truck0,depot2;]
true 93 Lift[hoist2,crate0,pallet2,depot2;]
true 112 Load[hoist2,crate0,truck1,depot2;]
true 70 Drive[truck1,depot2,depot0;]
true 12 __method_precondition_m11_do_unload_truck_11_precondition[pallet0,hoist0,crate0,truck1,depot0;]
true 33 __method_precondition_m5_do_clear_5_precondition[pallet0,crate2,depot0,hoist0;]
true 42 __method_precondition_m4_do_clear_4_precondition[crate2,depot0;]
true 68 nop[;]
true 84 Lift[hoist0,crate2,pallet0,depot0;]
true 104 __method_precondition_m6_do_get_truck_6_precondition[truck1,depot0;]
true 4 nop[;]
true 48 Load[hoist0,crate2,truck1,depot0;]
true 97 Unload[hoist0,crate0,truck1,depot0;]
true 18 Drop[hoist0,crate0,pallet0,depot0;]
true 74 __method_precondition_m2_do_put_on_2_precondition[crate1,truck0;]
true 8 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor2;]
true 35 Drive[truck0,depot2,distributor2;]
true 17 __method_precondition_m4_do_clear_4_precondition[pallet5,distributor2;]
true 37 nop[;]
true 105 Unload[hoist5,crate1,truck0,distributor2;]
true 96 Drop[hoist5,crate1,pallet5,distributor2;]
true 57 __method_precondition_m2_do_put_on_2_precondition[crate2,truck1;]
true 100 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 3 Drive[truck1,depot0,distributor1;]
true 38 __method_precondition_m4_do_clear_4_precondition[pallet4,distributor1;]
true 43 nop[;]
true 81 Unload[hoist4,crate2,truck1,distributor1;]
true 20 Drop[hoist4,crate2,pallet4,distributor1;]
true 85 __method_precondition_m10_do_load_truck_10_precondition[crate3,depot0,pallet8,hoist0;]
true 91 __method_precondition_m7_do_get_truck_7_precondition[truck0,depot0;]
true 83 Drive[truck0,distributor2,depot0;]
true 23 __method_precondition_m4_do_clear_4_precondition[crate3,depot0;]
true 59 nop[;]
true 65 Lift[hoist0,crate3,pallet8,depot0;]
true 77 Load[hoist0,crate3,truck0,depot0;]
true 99 Drive[truck0,depot0,depot0;]
true 30 __method_precondition_m11_do_unload_truck_11_precondition[pallet7,hoist0,crate3,truck0,depot0;]
true 28 __method_precondition_m4_do_clear_4_precondition[pallet7,depot0;]
true 115 nop[;]
true 86 Unload[hoist0,crate3,truck0,depot0;]
true 25 Drop[hoist0,crate3,pallet7,depot0;]
true 62 __method_precondition_m10_do_load_truck_10_precondition[crate4,distributor0,pallet3,hoist3;]
true 22 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 61 Drive[truck1,distributor1,distributor0;]
true 52 __method_precondition_m4_do_clear_4_precondition[crate4,distributor0;]
true 71 nop[;]
true 60 Lift[hoist3,crate4,pallet3,distributor0;]
true 102 Load[hoist3,crate4,truck1,distributor0;]
true 19 Drive[truck1,distributor0,distributor0;]
true 39 __method_precondition_m11_do_unload_truck_11_precondition[pallet9,hoist3,crate4,truck1,distributor0;]
true 5 __method_precondition_m4_do_clear_4_precondition[pallet9,distributor0;]
true 75 nop[;]
true 21 Unload[hoist3,crate4,truck1,distributor0;]
true 56 Drop[hoist3,crate4,pallet9,distributor0;]
true 36 __method_precondition_m2_do_put_on_2_precondition[crate5,truck1;]
true 90 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot1;]
true 79 Drive[truck1,distributor0,depot1;]
true 106 __method_precondition_m4_do_clear_4_precondition[pallet1,depot1;]
true 16 nop[;]
true 51 Unload[hoist1,crate5,truck1,depot1;]
true 54 Drop[hoist1,crate5,pallet1,depot1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 188882440
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 114
number of actions                    = 277
number of abstract actions           = 37
number of primitive actions          = 240
number of methods                    = 183
number of primitive shop actions     = 117
number of primitive non-shop actions = 123
size of largest method               = 11
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 39605
number of clauses               = 194397
average size of clauses         = 2.0260189200450625
number of assert                = 46
number of horn                  = 171693
K offset                        = 0
K chosen value                  = 5
state formula                   = 185741
method children clauses         = 0
number of paths                 = 151
maximum plan length             = 151
number of decomposition clauses = 8656
number of ordering clauses      = 0
number of state clauses         = 185741
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 6787
============ parsing ============
total                         = 1044
file parser                   = 568
sort expansion                = 202
closed world assumption       = 124
inherit preconditions         = 0
shop methods                  = 8
eliminate identical variables = 52
strip domain of hybridity     = 1
flatten formula               = 89
============ preprocessing ============
total                                      = 1890
compile negative preconditions             = 47
compile unit methods                       = 0
split parameter                            = 56
expand choiceless abstract tasks           = 291
compile methods with identical tasks       = 3
removing unnecessary predicates            = 161
lifted reachabiltiy analysis               = 57
grounded planning graph analysis           = 587
grounded task decomposition graph analysis = 550
grounding                                  = 128
create artificial top task                 = 1
============ search preparation ============
compute state invariants = 295
============ sat ============
total                                        = 2614
generate formula                             = 1805
generate path decomposition tree             = 196
normalise path decomposition tree            = 83
sog optimisation                             = 84
translate path decomposition tree to clauses = 303
generate state formula                       = 1701
generate state invariant formula             = 382
transform to DIMACS                          = 311
SAT solver                                   = 160
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 30
SAT solver for K=0004                        = 50
SAT solver for K=0005                        = 80

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="240";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="37";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="188882440";"40 sat:20:state formula"="185741";"40 sat:01:number of variables"="39605";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="151";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="183";"30 problem:07:number of primitive shop actions"="117";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="277";"30 problem:08:number of primitive non-shop actions"="123";"30 problem:02:number of predicates"="114";"40 sat:03:number of horn"="171693";"40 sat:15:K chosen value"="5";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="11";"40 sat:03:average size of clauses"="2.0260189200450625";"40 sat:02:number of clauses"="194397";"40 sat:50:number of state clauses"="185741";"40 sat:03:number of assert"="46";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="151";"40 sat:50:number of decomposition clauses"="8656";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="568";"01 parsing:08:flatten formula"="89";"40 sat:41:SAT solver for K=0004"="50";"40 sat:00:total"="2614";"40 sat:16:generate state formula"="1701";"40 sat:20:transform to DIMACS"="311";"40 sat:11:generate path decomposition tree"="196";"02 preprocessing:07:compile methods with identical tasks"="3";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="161";"01 parsing:03:closed world assumption"="124";"02 preprocessing:11:lifted reachabiltiy analysis"="57";"01 parsing:02:sort expansion"="202";"40 sat:12:normalise path decomposition tree"="83";"40 sat:40:SAT solver"="160";"01 parsing:00:total"="1044";"40 sat:10:generate formula"="1805";"40 sat:41:SAT solver for K=0005"="80";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="47";"00 total:00:total"="6787";"40 sat:13:sog optimisation"="84";"02 preprocessing:12:grounded planning graph analysis"="587";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="550";"02 preprocessing:04:split parameter"="56";"01 parsing:05:shop methods"="8";"10 search preparation:02:compute state invariants"="295";"01 parsing:06:eliminate identical variables"="52";"40 sat:15:translate path decomposition tree to clauses"="303";"02 preprocessing:05:expand choiceless abstract tasks"="291";"40 sat:41:SAT solver for K=0003"="30";"40 sat:17:generate state invariant formula"="382";"02 preprocessing:00:total"="1890";"02 preprocessing:99:create artificial top task"="1";"02 preprocessing:84:grounding"="128"
#!verify __method_precondition_m10_do_load_truck_10_precondition[crate0,depot2,pallet2,hoist2];__method_precondition_m7_do_get_truck_7_precondition[truck1,depot2];Drive[truck1,depot0,depot2];__method_precondition_m5_do_clear_5_precondition[crate0,crate1,depot2,hoist2];__method_precondition_m5_do_clear_5_precondition[crate1,crate5,depot2,hoist2];__method_precondition_m4_do_clear_4_precondition[crate5,depot2];nop[];Lift[hoist2,crate5,crate1,depot2];__method_precondition_m6_do_get_truck_6_precondition[truck1,depot2];nop[];Load[hoist2,crate5,truck1,depot2];Lift[hoist2,crate1,crate0,depot2];__method_precondition_m7_do_get_truck_7_precondition[truck0,depot2];Drive[truck0,distributor1,depot2];Load[hoist2,crate1,truck0,depot2];Lift[hoist2,crate0,pallet2,depot2];Load[hoist2,crate0,truck1,depot2];Drive[truck1,depot2,depot0];__method_precondition_m11_do_unload_truck_11_precondition[pallet0,hoist0,crate0,truck1,depot0];__method_precondition_m5_do_clear_5_precondition[pallet0,crate2,depot0,hoist0];__method_precondition_m4_do_clear_4_precondition[crate2,depot0];nop[];Lift[hoist0,crate2,pallet0,depot0];__method_precondition_m6_do_get_truck_6_precondition[truck1,depot0];nop[];Load[hoist0,crate2,truck1,depot0];Unload[hoist0,crate0,truck1,depot0];Drop[hoist0,crate0,pallet0,depot0];__method_precondition_m2_do_put_on_2_precondition[crate1,truck0];__method_precondition_m7_do_get_truck_7_precondition[truck0,distributor2];Drive[truck0,depot2,distributor2];__method_precondition_m4_do_clear_4_precondition[pallet5,distributor2];nop[];Unload[hoist5,crate1,truck0,distributor2];Drop[hoist5,crate1,pallet5,distributor2];__method_precondition_m2_do_put_on_2_precondition[crate2,truck1];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1];Drive[truck1,depot0,distributor1];__method_precondition_m4_do_clear_4_precondition[pallet4,distributor1];nop[];Unload[hoist4,crate2,truck1,distributor1];Drop[hoist4,crate2,pallet4,distributor1];__method_precondition_m10_do_load_truck_10_precondition[crate3,depot0,pallet8,hoist0];__method_precondition_m7_do_get_truck_7_precondition[truck0,depot0];Drive[truck0,distributor2,depot0];__method_precondition_m4_do_clear_4_precondition[crate3,depot0];nop[];Lift[hoist0,crate3,pallet8,depot0];Load[hoist0,crate3,truck0,depot0];Drive[truck0,depot0,depot0];__method_precondition_m11_do_unload_truck_11_precondition[pallet7,hoist0,crate3,truck0,depot0];__method_precondition_m4_do_clear_4_precondition[pallet7,depot0];nop[];Unload[hoist0,crate3,truck0,depot0];Drop[hoist0,crate3,pallet7,depot0];__method_precondition_m10_do_load_truck_10_precondition[crate4,distributor0,pallet3,hoist3];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0];Drive[truck1,distributor1,distributor0];__method_precondition_m4_do_clear_4_precondition[crate4,distributor0];nop[];Lift[hoist3,crate4,pallet3,distributor0];Load[hoist3,crate4,truck1,distributor0];Drive[truck1,distributor0,distributor0];__method_precondition_m11_do_unload_truck_11_precondition[pallet9,hoist3,crate4,truck1,distributor0];__method_precondition_m4_do_clear_4_precondition[pallet9,distributor0];nop[];Unload[hoist3,crate4,truck1,distributor0];Drop[hoist3,crate4,pallet9,distributor0];__method_precondition_m2_do_put_on_2_precondition[crate5,truck1];__method_precondition_m7_do_get_truck_7_precondition[truck1,depot1];Drive[truck1,distributor0,depot1];__method_precondition_m4_do_clear_4_precondition[pallet1,depot1];nop[];Unload[hoist1,crate5,truck1,depot1];Drop[hoist1,crate5,pallet1,depot1]
==>
0 __method_precondition_m10_do_load_truck_10_precondition crate0 depot2 pallet2 hoist2 
1 __method_precondition_m7_do_get_truck_7_precondition truck1 depot2 
2 Drive truck1 depot0 depot2 
3 __method_precondition_m5_do_clear_5_precondition crate0 crate1 depot2 hoist2 
4 __method_precondition_m5_do_clear_5_precondition crate1 crate5 depot2 hoist2 
5 __method_precondition_m4_do_clear_4_precondition crate5 depot2 
6 nop  
7 Lift hoist2 crate5 crate1 depot2 
8 __method_precondition_m6_do_get_truck_6_precondition truck1 depot2 
9 nop  
10 Load hoist2 crate5 truck1 depot2 
11 Lift hoist2 crate1 crate0 depot2 
12 __method_precondition_m7_do_get_truck_7_precondition truck0 depot2 
13 Drive truck0 distributor1 depot2 
14 Load hoist2 crate1 truck0 depot2 
15 Lift hoist2 crate0 pallet2 depot2 
16 Load hoist2 crate0 truck1 depot2 
17 Drive truck1 depot2 depot0 
18 __method_precondition_m11_do_unload_truck_11_precondition pallet0 hoist0 crate0 truck1 depot0 
19 __method_precondition_m5_do_clear_5_precondition pallet0 crate2 depot0 hoist0 
20 __method_precondition_m4_do_clear_4_precondition crate2 depot0 
21 nop  
22 Lift hoist0 crate2 pallet0 depot0 
23 __method_precondition_m6_do_get_truck_6_precondition truck1 depot0 
24 nop  
25 Load hoist0 crate2 truck1 depot0 
26 Unload hoist0 crate0 truck1 depot0 
27 Drop hoist0 crate0 pallet0 depot0 
28 __method_precondition_m2_do_put_on_2_precondition crate1 truck0 
29 __method_precondition_m7_do_get_truck_7_precondition truck0 distributor2 
30 Drive truck0 depot2 distributor2 
31 __method_precondition_m4_do_clear_4_precondition pallet5 distributor2 
32 nop  
33 Unload hoist5 crate1 truck0 distributor2 
34 Drop hoist5 crate1 pallet5 distributor2 
35 __method_precondition_m2_do_put_on_2_precondition crate2 truck1 
36 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor1 
37 Drive truck1 depot0 distributor1 
38 __method_precondition_m4_do_clear_4_precondition pallet4 distributor1 
39 nop  
40 Unload hoist4 crate2 truck1 distributor1 
41 Drop hoist4 crate2 pallet4 distributor1 
42 __method_precondition_m10_do_load_truck_10_precondition crate3 depot0 pallet8 hoist0 
43 __method_precondition_m7_do_get_truck_7_precondition truck0 depot0 
44 Drive truck0 distributor2 depot0 
45 __method_precondition_m4_do_clear_4_precondition crate3 depot0 
46 nop  
47 Lift hoist0 crate3 pallet8 depot0 
48 Load hoist0 crate3 truck0 depot0 
49 Drive truck0 depot0 depot0 
50 __method_precondition_m11_do_unload_truck_11_precondition pallet7 hoist0 crate3 truck0 depot0 
51 __method_precondition_m4_do_clear_4_precondition pallet7 depot0 
52 nop  
53 Unload hoist0 crate3 truck0 depot0 
54 Drop hoist0 crate3 pallet7 depot0 
55 __method_precondition_m10_do_load_truck_10_precondition crate4 distributor0 pallet3 hoist3 
56 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor0 
57 Drive truck1 distributor1 distributor0 
58 __method_precondition_m4_do_clear_4_precondition crate4 distributor0 
59 nop  
60 Lift hoist3 crate4 pallet3 distributor0 
61 Load hoist3 crate4 truck1 distributor0 
62 Drive truck1 distributor0 distributor0 
63 __method_precondition_m11_do_unload_truck_11_precondition pallet9 hoist3 crate4 truck1 distributor0 
64 __method_precondition_m4_do_clear_4_precondition pallet9 distributor0 
65 nop  
66 Unload hoist3 crate4 truck1 distributor0 
67 Drop hoist3 crate4 pallet9 distributor0 
68 __method_precondition_m2_do_put_on_2_precondition crate5 truck1 
69 __method_precondition_m7_do_get_truck_7_precondition truck1 depot1 
70 Drive truck1 distributor0 depot1 
71 __method_precondition_m4_do_clear_4_precondition pallet1 depot1 
72 nop  
73 Unload hoist1 crate5 truck1 depot1 
74 Drop hoist1 crate5 pallet1 depot1 
root 82
75 do_get_truck truck0 depot0  -> m7_do_get_truck 43 44
76 do_clear pallet5 distributor2  -> m4_do_clear 31 32
77 do_get_truck truck1 depot0  -> m6_do_get_truck 23 24
78 do_clear pallet0 depot0  -> <m5_do_clear;do_clear[crate2,depot0];m4_do_clear;1;0,-1,-2,2,3,4> 19 20 21 22 77 25
79 do_clear crate0 depot2  -> m5_do_clear 3 97 11 88 14
80 do_put_on crate0 pallet0  -> <<<m3_do_put_on;do_unload_truck[crate0,pallet0,depot0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck_m3_do_put_on_sip_2[crate0,depot2,truck1];_m3_do_put_on_2;0;-1,1,2,3,4,5>;do_load_truck[crate0,pallet2,depot2,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5> 0 83 79 15 16 17 18 78 26 27
81 do_put_on crate4 pallet9  -> <m3_do_put_on;do_unload_truck[crate4,pallet9,distributor0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4> 98 62 63 86 66 67
82 __choicelessATCompilation__top_1  -> __top_1 80 92 85 94 81 100
83 do_get_truck truck1 depot2  -> m7_do_get_truck 1 2
84 do_get_truck truck1 depot1  -> m7_do_get_truck 69 70
85 do_put_on crate2 pallet4  -> m2_do_put_on 35 90 99 40 41
86 do_clear pallet9 distributor0  -> m4_do_clear 64 65
87 do_get_truck truck1 depot2  -> m6_do_get_truck 8 9
88 do_get_truck truck0 depot2  -> m7_do_get_truck 12 13
89 do_get_truck truck1 distributor0  -> m7_do_get_truck 56 57
90 do_get_truck truck1 distributor1  -> m7_do_get_truck 36 37
91 do_get_truck truck0 distributor2  -> m7_do_get_truck 29 30
92 do_put_on crate1 pallet5  -> m2_do_put_on 28 91 76 33 34
93 do_load_truck_m3_do_put_on_sip_2 crate3 depot0 truck0  -> <<_m3_do_put_on_2;do_load_truck[crate3,pallet8,depot0,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5>;do_clear[crate3,depot0];m4_do_clear;2;0,1,-1,-2,3,4> 42 75 45 46 47 48
94 do_put_on crate3 pallet7  -> <m3_do_put_on;do_unload_truck[crate3,pallet7,depot0,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4> 93 49 50 95 53 54
95 do_clear pallet7 depot0  -> m4_do_clear 51 52
96 do_clear pallet1 depot1  -> m4_do_clear 71 72
97 do_clear crate1 depot2  -> <m5_do_clear;do_clear[crate5,depot2];m4_do_clear;1;0,-1,-2,2,3,4> 4 5 6 7 87 10
98 do_load_truck_m3_do_put_on_sip_2 crate4 distributor0 truck1  -> <<_m3_do_put_on_2;do_load_truck[crate4,pallet3,distributor0,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5>;do_clear[crate4,distributor0];m4_do_clear;2;0,1,-1,-2,3,4> 55 89 58 59 60 61
99 do_clear pallet4 distributor1  -> m4_do_clear 38 39
100 do_put_on crate5 pallet1  -> m2_do_put_on 68 84 96 73 74

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 7.724 MEMPEAK_KBS 320371.712
