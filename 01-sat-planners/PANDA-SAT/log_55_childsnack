PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/childsnack/domain.hddl instances/childsnack/p15.hddl"


Planner Configuration
=====================
Domain: instances/childsnack/domain.hddl
Problem: instances/childsnack/p15.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p15.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 13
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 86
Compiling negative preconditions ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 86
Compiling split parameters ... done.
	number of abstract tasks = 1
	number of tasks = 10
	number of decomposition methods = 2
	number of predicates = 26
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 9
	number of constants = 86
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 86
Grounded planning graph ... done in 1647ms.
	Number of Grounded Actions 50980
	Number of Grounded Literals 310
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 86
Two Way TDG ... done.
	number of abstract tasks = 1
	number of tasks = 9
	number of decomposition methods = 2
	number of predicates = 15
	number of sorts = 7
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 2
	number of epsilon methods = 0
	number of primitive tasks = 8
	number of constants = 86
Grounding ... done.
	number of abstract tasks = 18
	number of tasks = 46122
	number of decomposition methods = 160704
	number of predicates = 346
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 18
	number of tasks = 46122
	number of decomposition methods = 160704
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 3836ms.
	Number of Grounded Actions 46104
	Number of Grounded Literals 238
	number of abstract tasks = 18
	number of tasks = 46122
	number of decomposition methods = 160704
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 18
	number of tasks = 46122
	number of decomposition methods = 160704
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 18
	number of tasks = 46122
	number of decomposition methods = 160704
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 3483ms.
	Number of Grounded Actions 46104
	Number of Grounded Literals 238
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 19
	number of tasks = 46123
	number of decomposition methods = 160705
	number of predicates = 238
	number of sorts = 0
	number of tasks in largest method = 18
	number of primitive SHOP tasks = 40176
	number of epsilon methods = 0
	number of primitive tasks = 46104
	number of constants = 0
Tasks 46104 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854658241ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854653665
done
initial PDT has 108 leafs
Checking whether the PDT can grow any more ... no ... done
Normalising and optimising PDT ... done
PDT has 108 leafs
SHOP LEAFS 18
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 84609
Size 84609 at 0/46104
Size 84609 at 500/46104
Size 84609 at 1000/46104
Size 84609 at 1500/46104
Size 84609 at 2000/46104
Size 84609 at 2500/46104
Size 84609 at 3000/46104
Size 84609 at 3500/46104
Size 84609 at 4000/46104
Size 84609 at 4500/46104
Size 84609 at 5000/46104
Size 84609 at 5500/46104
Size 84609 at 6000/46104
Size 84609 at 6500/46104
Size 84609 at 7000/46104
Size 84609 at 7500/46104
Size 84609 at 8000/46104
Size 60716 at 8500/46104
Size 60716 at 9000/46104
Size 53333 at 9500/46104
Size 53331 at 10000/46104
Size 53331 at 10500/46104
Size 53331 at 11000/46104
Size 53331 at 11500/46104
Size 53331 at 12000/46104
Size 53331 at 12500/46104
Size 53331 at 13000/46104
Size 53331 at 13500/46104
Size 53331 at 14000/46104
Size 53331 at 14500/46104
Size 53331 at 15000/46104
Size 53331 at 15500/46104
Size 53331 at 16000/46104
Size 53331 at 16500/46104
Size 53331 at 17000/46104
Size 53331 at 17500/46104
Size 53331 at 18000/46104
Size 53331 at 18500/46104
Size 53331 at 19000/46104
Size 53331 at 19500/46104
Size 53331 at 20000/46104
Size 53331 at 20500/46104
Size 53331 at 21000/46104
Size 53331 at 21500/46104
Size 53331 at 22000/46104
Size 53331 at 22500/46104
Size 53331 at 23000/46104
Size 53331 at 23500/46104
Size 53331 at 24000/46104
Size 53331 at 24500/46104
Size 53331 at 25000/46104
Size 53331 at 25500/46104
Size 53331 at 26000/46104
Size 53331 at 26500/46104
Size 53331 at 27000/46104
Size 53331 at 27500/46104
Size 53331 at 28000/46104
Size 53331 at 28500/46104
Size 53331 at 29000/46104
Size 53331 at 29500/46104
Size 53331 at 30000/46104
Size 53331 at 30500/46104
Size 53331 at 31000/46104
Size 53331 at 31500/46104
Size 53331 at 32000/46104
Size 53331 at 32500/46104
Size 53331 at 33000/46104
Size 53331 at 33500/46104
Size 53331 at 34000/46104
Size 53331 at 34500/46104
Size 53331 at 35000/46104
Size 53331 at 35500/46104
Size 53331 at 36000/46104
Size 53331 at 36500/46104
Size 53331 at 37000/46104
Size 53331 at 37500/46104
Size 53331 at 38000/46104
Size 53331 at 38500/46104
Size 53331 at 39000/46104
Size 53331 at 39500/46104
Size 53331 at 40000/46104
Size 53331 at 40500/46104
Size 53331 at 41000/46104
Size 53331 at 41500/46104
Size 53331 at 42000/46104
Size 53331 at 42500/46104
Size 53331 at 43000/46104
Size 53331 at 43500/46104
Size 53331 at 44000/46104
Size 52879 at 44500/46104
Size 52234 at 45000/46104
Size 51726 at 45500/46104
Size 46749 at 46000/46104
Size 7093
Size 7093 at 0/46104
Size 7093 at 500/46104
Size 7093 at 1000/46104
Size 7093 at 1500/46104
Size 7093 at 2000/46104
Size 7093 at 2500/46104
Size 7093 at 3000/46104
Size 7093 at 3500/46104
Size 7093 at 4000/46104
Size 7093 at 4500/46104
Size 7093 at 5000/46104
Size 7093 at 5500/46104
Size 7093 at 6000/46104
Size 7093 at 6500/46104
Size 7093 at 7000/46104
Size 7093 at 7500/46104
Size 7093 at 8000/46104
Size 7093 at 8500/46104
Size 7093 at 9000/46104
Size 7093 at 9500/46104
Size 7093 at 10000/46104
Size 7093 at 10500/46104
Size 7093 at 11000/46104
Size 7093 at 11500/46104
Size 7093 at 12000/46104
Size 7093 at 12500/46104
Size 7093 at 13000/46104
Size 7093 at 13500/46104
Size 7093 at 14000/46104
Size 7093 at 14500/46104
Size 7093 at 15000/46104
Size 7093 at 15500/46104
Size 7093 at 16000/46104
Size 7093 at 16500/46104
Size 7093 at 17000/46104
Size 7093 at 17500/46104
Size 7093 at 18000/46104
Size 7093 at 18500/46104
Size 7093 at 19000/46104
Size 7093 at 19500/46104
Size 7093 at 20000/46104
Size 7093 at 20500/46104
Size 7093 at 21000/46104
Size 7093 at 21500/46104
Size 7093 at 22000/46104
Size 7093 at 22500/46104
Size 7093 at 23000/46104
Size 7093 at 23500/46104
Size 7093 at 24000/46104
Size 7093 at 24500/46104
Size 7093 at 25000/46104
Size 7093 at 25500/46104
Size 7093 at 26000/46104
Size 7093 at 26500/46104
Size 7093 at 27000/46104
Size 7093 at 27500/46104
Size 7093 at 28000/46104
Size 7093 at 28500/46104
Size 7093 at 29000/46104
Size 7093 at 29500/46104
Size 7093 at 30000/46104
Size 7093 at 30500/46104
Size 7093 at 31000/46104
Size 7093 at 31500/46104
Size 7093 at 32000/46104
Size 7093 at 32500/46104
Size 7093 at 33000/46104
Size 7093 at 33500/46104
Size 7093 at 34000/46104
Size 7093 at 34500/46104
Size 7093 at 35000/46104
Size 7093 at 35500/46104
Size 7093 at 36000/46104
Size 7093 at 36500/46104
Size 7093 at 37000/46104
Size 7093 at 37500/46104
Size 7093 at 38000/46104
Size 7093 at 38500/46104
Size 7093 at 39000/46104
Size 7093 at 39500/46104
Size 7093 at 40000/46104
Size 7093 at 40500/46104
Size 7093 at 41000/46104
Size 7093 at 41500/46104
Size 7093 at 42000/46104
Size 7093 at 42500/46104
Size 7093 at 43000/46104
Size 7093 at 43500/46104
Size 7093 at 44000/46104
Size 4695 at 44500/46104
Size 792 at 45000/46104
Size 792 at 45500/46104
Size 480 at 46000/46104
Size 408
Size 408 at 0/46104
Size 408 at 500/46104
Size 408 at 1000/46104
Size 408 at 1500/46104
Size 408 at 2000/46104
Size 408 at 2500/46104
Size 408 at 3000/46104
Size 408 at 3500/46104
Size 408 at 4000/46104
Size 408 at 4500/46104
Size 408 at 5000/46104
Size 408 at 5500/46104
Size 408 at 6000/46104
Size 408 at 6500/46104
Size 408 at 7000/46104
Size 408 at 7500/46104
Size 408 at 8000/46104
Size 408 at 8500/46104
Size 408 at 9000/46104
Size 408 at 9500/46104
Size 408 at 10000/46104
Size 408 at 10500/46104
Size 408 at 11000/46104
Size 408 at 11500/46104
Size 408 at 12000/46104
Size 408 at 12500/46104
Size 408 at 13000/46104
Size 408 at 13500/46104
Size 408 at 14000/46104
Size 408 at 14500/46104
Size 408 at 15000/46104
Size 408 at 15500/46104
Size 408 at 16000/46104
Size 408 at 16500/46104
Size 408 at 17000/46104
Size 408 at 17500/46104
Size 408 at 18000/46104
Size 408 at 18500/46104
Size 408 at 19000/46104
Size 408 at 19500/46104
Size 408 at 20000/46104
Size 408 at 20500/46104
Size 408 at 21000/46104
Size 408 at 21500/46104
Size 408 at 22000/46104
Size 408 at 22500/46104
Size 408 at 23000/46104
Size 408 at 23500/46104
Size 408 at 24000/46104
Size 408 at 24500/46104
Size 408 at 25000/46104
Size 408 at 25500/46104
Size 408 at 26000/46104
Size 408 at 26500/46104
Size 408 at 27000/46104
Size 408 at 27500/46104
Size 408 at 28000/46104
Size 408 at 28500/46104
Size 408 at 29000/46104
Size 408 at 29500/46104
Size 408 at 30000/46104
Size 408 at 30500/46104
Size 408 at 31000/46104
Size 408 at 31500/46104
Size 408 at 32000/46104
Size 408 at 32500/46104
Size 408 at 33000/46104
Size 408 at 33500/46104
Size 408 at 34000/46104
Size 408 at 34500/46104
Size 408 at 35000/46104
Size 408 at 35500/46104
Size 408 at 36000/46104
Size 408 at 36500/46104
Size 408 at 37000/46104
Size 408 at 37500/46104
Size 408 at 38000/46104
Size 408 at 38500/46104
Size 408 at 39000/46104
Size 408 at 39500/46104
Size 408 at 40000/46104
Size 408 at 40500/46104
Size 408 at 41000/46104
Size 408 at 41500/46104
Size 408 at 42000/46104
Size 408 at 42500/46104
Size 408 at 43000/46104
Size 408 at 43500/46104
Size 408 at 44000/46104
Size 408 at 44500/46104
Size 408 at 45000/46104
Size 408 at 45500/46104
Size 408 at 46000/46104
Size 408
Invariant time: 4.342
Number of invariants: 408
Invariant Clauses 44472
NUMBER OF CLAUSES 2544100
NUMBER OF STATE CLAUSES 440704
NUMBER OF DECOMPOSITION CLAUSES 2103396
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 17.32% 82.68% 0.0% 
NUMBER OF PATHS 108
Starting cryptominisat5.5
Setting starttime of solver to 1604478088721
Command exited with non-zero status 10
5.01 0.12

Time command gave the following runtime for the solver: 5130
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_1,56217 56217 m0_serve
1 45 pathaction!1_1,9416
Consider method^0_,160704 160704 __top_1
 27 pathaction!0_,46122
Consider method^1_14,136728 136728 m1_serve
14 55 pathaction!1_14,9410
Consider method^1_15,151442 151442 m1_serve
15 37 pathaction!1_15,9420
Consider method^1_4,110094 110094 m0_serve
4 86 pathaction!1_4,9414
Consider method^1_5,152070 152070 m0_serve
5 103 pathaction!1_5,9422
Consider method^1_2,118021 118021 m1_serve
2 28 pathaction!1_2,9419
Consider method^1_7,130094 130094 m0_serve
7 50 pathaction!1_7,9409
Consider method^1_3,159584 159584 m1_serve
3 41 pathaction!1_3,9412
Consider method^1_11,31906 31906 m1_serve
11 65 pathaction!1_11,9423
Consider method^1_13,1708 1708 m0_serve
13 30 pathaction!1_13,9415
Consider method^1_9,139604 139604 m1_serve
9 126 pathaction!1_9,9417
Consider method^1_10,2599 2599 m1_serve
10 52 pathaction!1_10,9425
Consider method^1_6,77725 77725 m1_serve
6 31 pathaction!1_6,9413
Consider method^1_16,5830 5830 m0_serve
16 77 pathaction!1_16,9424
Consider method^1_17,138158 138158 m1_serve
17 25 pathaction!1_17,9408
Consider method^1_0,142244 142244 m1_serve
0 80 pathaction!1_0,9411
Consider method^1_8,94289 94289 m0_serve
8 112 pathaction!1_8,9421
Consider method^1_12,157821 157821 m1_serve
12 58 pathaction!1_12,9418


CHECKING primitive solution of length 108 ...
true 109 __method_precondition_m1_serve_1_precondition[child1,bread2,content11,table1,sandw17;]
true 33 make_sandwich[sandw17,bread2,content11;]
true 13 put_on_tray[sandw17,tray4;kitchen]
true 5 move_tray[tray4,kitchen,table1;]
true 64 serve_sandwich[sandw17,child1,tray4,table1;]
true 57 move_tray[tray4,table1,kitchen;]
true 2 __method_precondition_m0_serve_0_precondition[child2,bread4,content4,sandw23,table2;]
true 90 make_sandwich_no_gluten[sandw23,bread4,content4;]
true 23 put_on_tray[sandw23,tray3;kitchen]
true 100 move_tray[tray3,kitchen,table2;]
true 72 serve_sandwich_no_gluten[sandw23,child2,tray3,table2;]
true 40 move_tray[tray3,table2,kitchen;]
true 26 __method_precondition_m1_serve_1_precondition[child3,bread5,content8,table1,sandw2;]
true 120 make_sandwich[sandw2,bread5,content8;]
true 48 put_on_tray[sandw2,tray2;kitchen]
true 42 move_tray[tray2,kitchen,table1;]
true 91 serve_sandwich[sandw2,child3,tray2,table1;]
true 43 move_tray[tray2,table1,kitchen;]
true 102 __method_precondition_m1_serve_1_precondition[child4,bread18,content17,table1,sandw8;]
true 29 make_sandwich[sandw8,bread18,content17;]
true 108 put_on_tray[sandw8,tray2;kitchen]
true 83 move_tray[tray2,kitchen,table1;]
true 59 serve_sandwich[sandw8,child4,tray2,table1;]
true 94 move_tray[tray2,table1,kitchen;]
true 49 __method_precondition_m0_serve_0_precondition[child5,bread11,content14,sandw9,table3;]
true 54 make_sandwich_no_gluten[sandw9,bread11,content14;]
true 87 put_on_tray[sandw9,tray1;kitchen]
true 69 move_tray[tray1,kitchen,table3;]
true 110 serve_sandwich_no_gluten[sandw9,child5,tray1,table3;]
true 62 move_tray[tray1,table3,kitchen;]
true 113 __method_precondition_m0_serve_0_precondition[child6,bread9,content1,sandw16,table3;]
true 3 make_sandwich_no_gluten[sandw16,bread9,content1;]
true 68 put_on_tray[sandw16,tray4;kitchen]
true 11 move_tray[tray4,kitchen,table3;]
true 92 serve_sandwich_no_gluten[sandw16,child6,tray4,table3;]
true 84 move_tray[tray4,table3,kitchen;]
true 46 __method_precondition_m1_serve_1_precondition[child7,bread6,content10,table2,sandw7;]
true 95 make_sandwich[sandw7,bread6,content10;]
true 9 put_on_tray[sandw7,tray1;kitchen]
true 70 move_tray[tray1,kitchen,table2;]
true 35 serve_sandwich[sandw7,child7,tray1,table2;]
true 106 move_tray[tray1,table2,kitchen;]
true 0 __method_precondition_m0_serve_0_precondition[child8,bread7,content12,sandw21,table3;]
true 6 make_sandwich_no_gluten[sandw21,bread7,content12;]
true 21 put_on_tray[sandw21,tray2;kitchen]
true 14 move_tray[tray2,kitchen,table3;]
true 116 serve_sandwich_no_gluten[sandw21,child8,tray2,table3;]
true 36 move_tray[tray2,table3,kitchen;]
true 38 __method_precondition_m0_serve_0_precondition[child9,bread16,content18,sandw6,table2;]
true 17 make_sandwich_no_gluten[sandw6,bread16,content18;]
true 51 put_on_tray[sandw6,tray1;kitchen]
true 99 move_tray[tray1,kitchen,table2;]
true 18 serve_sandwich_no_gluten[sandw6,child9,tray1,table2;]
true 81 move_tray[tray1,table2,kitchen;]
true 115 __method_precondition_m1_serve_1_precondition[child10,bread12,content7,table2,sandw4;]
true 104 make_sandwich[sandw4,bread12,content7;]
true 1 put_on_tray[sandw4,tray4;kitchen]
true 15 move_tray[tray4,kitchen,table2;]
true 47 serve_sandwich[sandw4,child10,tray4,table2;]
true 111 move_tray[tray4,table2,kitchen;]
true 56 __method_precondition_m1_serve_1_precondition[child11,bread8,content13,table2,sandw20;]
true 20 make_sandwich[sandw20,bread8,content13;]
true 22 put_on_tray[sandw20,tray3;kitchen]
true 98 move_tray[tray3,kitchen,table2;]
true 118 serve_sandwich[sandw20,child11,tray3,table2;]
true 107 move_tray[tray3,table2,kitchen;]
true 74 __method_precondition_m1_serve_1_precondition[child12,bread17,content2,table2,sandw18;]
true 117 make_sandwich[sandw18,bread17,content2;]
true 7 put_on_tray[sandw18,tray3;kitchen]
true 89 move_tray[tray3,kitchen,table2;]
true 16 serve_sandwich[sandw18,child12,tray3,table2;]
true 8 move_tray[tray3,table2,kitchen;]
true 122 __method_precondition_m1_serve_1_precondition[child13,bread1,content15,table3,sandw13;]
true 97 make_sandwich[sandw13,bread1,content15;]
true 124 put_on_tray[sandw13,tray4;kitchen]
true 114 move_tray[tray4,kitchen,table3;]
true 60 serve_sandwich[sandw13,child13,tray4,table3;]
true 19 move_tray[tray4,table3,kitchen;]
true 12 __method_precondition_m0_serve_0_precondition[child14,bread14,content5,sandw12,table1;]
true 119 make_sandwich_no_gluten[sandw12,bread14,content5;]
true 96 put_on_tray[sandw12,tray2;kitchen]
true 66 move_tray[tray2,kitchen,table1;]
true 85 serve_sandwich_no_gluten[sandw12,child14,tray2,table1;]
true 76 move_tray[tray2,table1,kitchen;]
true 10 __method_precondition_m1_serve_1_precondition[child15,bread15,content6,table2,sandw5;]
true 101 make_sandwich[sandw5,bread15,content6;]
true 53 put_on_tray[sandw5,tray4;kitchen]
true 75 move_tray[tray4,kitchen,table2;]
true 121 serve_sandwich[sandw5,child15,tray4,table2;]
true 61 move_tray[tray4,table2,kitchen;]
true 67 __method_precondition_m1_serve_1_precondition[child16,bread13,content9,table2,sandw1;]
true 39 make_sandwich[sandw1,bread13,content9;]
true 125 put_on_tray[sandw1,tray4;kitchen]
true 78 move_tray[tray4,kitchen,table2;]
true 73 serve_sandwich[sandw1,child16,tray4,table2;]
true 88 move_tray[tray4,table2,kitchen;]
true 4 __method_precondition_m0_serve_0_precondition[child17,bread3,content3,sandw24,table2;]
true 105 make_sandwich_no_gluten[sandw24,bread3,content3;]
true 82 put_on_tray[sandw24,tray3;kitchen]
true 34 move_tray[tray3,kitchen,table2;]
true 44 serve_sandwich_no_gluten[sandw24,child17,tray3,table2;]
true 79 move_tray[tray3,table2,kitchen;]
true 63 __method_precondition_m1_serve_1_precondition[child18,bread10,content16,table1,sandw19;]
true 123 make_sandwich[sandw19,bread10,content16;]
true 93 put_on_tray[sandw19,tray4;kitchen]
true 32 move_tray[tray4,kitchen,table1;]
true 24 serve_sandwich[sandw19,child18,tray4,table1;]
true 71 move_tray[tray4,table1,kitchen;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 6775548704
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 238
number of actions                    = 46123
number of abstract actions           = 19
number of primitive actions          = 46104
number of methods                    = 160705
number of primitive shop actions     = 40176
number of primitive non-shop actions = 5928
size of largest method               = 18
average method size                  = 6
============ sat ============
plan length                     = -1
number of variables             = 780318
number of clauses               = 2544100
average size of clauses         = 2.132292362721591
number of assert                = 83
number of horn                  = 2538516
K offset                        = 0
K chosen value                  = 2
state formula                   = 440704
method children clauses         = 0
number of paths                 = 108
maximum plan length             = 108
number of decomposition clauses = 2103396
number of ordering clauses      = 0
number of state clauses         = 440704
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 166224
============ parsing ============
total                         = 1157
file parser                   = 602
sort expansion                = 215
closed world assumption       = 170
inherit preconditions         = 0
shop methods                  = 11
eliminate identical variables = 82
strip domain of hybridity     = 14
flatten formula               = 63
============ preprocessing ============
total                                      = 101845
compile negative preconditions             = 42
compile unit methods                       = 0
split parameter                            = 44
expand choiceless abstract tasks           = 184
compile methods with identical tasks       = 800
removing unnecessary predicates            = 32773
lifted reachabiltiy analysis               = 67
grounded planning graph analysis           = 16635
grounded task decomposition graph analysis = 42244
grounding                                  = 8509
create artificial top task                 = 365
============ search preparation ============
compute state invariants = 4514
============ sat ============
total                                        = 37521
generate formula                             = 30896
generate path decomposition tree             = 10365
normalise path decomposition tree            = 771
sog optimisation                             = 2241
translate path decomposition tree to clauses = 12174
generate state formula                       = 30728
generate state invariant formula             = 49
transform to DIMACS                          = 1158
SAT solver                                   = 5130
SAT solver for K=0002                        = 5130

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="46104";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="19";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="6775548704";"40 sat:20:state formula"="440704";"40 sat:01:number of variables"="780318";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="108";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="160705";"30 problem:07:number of primitive shop actions"="40176";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="46123";"30 problem:08:number of primitive non-shop actions"="5928";"30 problem:02:number of predicates"="238";"40 sat:03:number of horn"="2538516";"40 sat:15:K chosen value"="2";"30 problem:10:average method size"="6";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="18";"40 sat:03:average size of clauses"="2.132292362721591";"40 sat:02:number of clauses"="2544100";"40 sat:50:number of state clauses"="440704";"40 sat:03:number of assert"="83";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="108";"40 sat:50:number of decomposition clauses"="2103396";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="602";"01 parsing:08:flatten formula"="63";"40 sat:00:total"="37521";"40 sat:16:generate state formula"="30728";"40 sat:20:transform to DIMACS"="1158";"40 sat:11:generate path decomposition tree"="10365";"02 preprocessing:07:compile methods with identical tasks"="800";"01 parsing:07:strip domain of hybridity"="14";"02 preprocessing:08:removing unnecessary predicates"="32773";"01 parsing:03:closed world assumption"="170";"02 preprocessing:11:lifted reachabiltiy analysis"="67";"01 parsing:02:sort expansion"="215";"40 sat:12:normalise path decomposition tree"="771";"40 sat:40:SAT solver"="5130";"01 parsing:00:total"="1157";"40 sat:10:generate formula"="30896";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="5130";"02 preprocessing:01:compile negative preconditions"="42";"00 total:00:total"="166224";"40 sat:13:sog optimisation"="2241";"02 preprocessing:12:grounded planning graph analysis"="16635";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="42244";"02 preprocessing:04:split parameter"="44";"01 parsing:05:shop methods"="11";"10 search preparation:02:compute state invariants"="4514";"01 parsing:06:eliminate identical variables"="82";"40 sat:15:translate path decomposition tree to clauses"="12174";"02 preprocessing:05:expand choiceless abstract tasks"="184";"40 sat:17:generate state invariant formula"="49";"02 preprocessing:00:total"="101845";"02 preprocessing:99:create artificial top task"="365";"02 preprocessing:84:grounding"="8509"
#!verify __method_precondition_m1_serve_1_precondition[child1,bread2,content11,table1,sandw17];make_sandwich[sandw17,bread2,content11];put_on_tray[sandw17,tray4];move_tray[tray4,kitchen,table1];serve_sandwich[sandw17,child1,tray4,table1];move_tray[tray4,table1,kitchen];__method_precondition_m0_serve_0_precondition[child2,bread4,content4,sandw23,table2];make_sandwich_no_gluten[sandw23,bread4,content4];put_on_tray[sandw23,tray3];move_tray[tray3,kitchen,table2];serve_sandwich_no_gluten[sandw23,child2,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m1_serve_1_precondition[child3,bread5,content8,table1,sandw2];make_sandwich[sandw2,bread5,content8];put_on_tray[sandw2,tray2];move_tray[tray2,kitchen,table1];serve_sandwich[sandw2,child3,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m1_serve_1_precondition[child4,bread18,content17,table1,sandw8];make_sandwich[sandw8,bread18,content17];put_on_tray[sandw8,tray2];move_tray[tray2,kitchen,table1];serve_sandwich[sandw8,child4,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m0_serve_0_precondition[child5,bread11,content14,sandw9,table3];make_sandwich_no_gluten[sandw9,bread11,content14];put_on_tray[sandw9,tray1];move_tray[tray1,kitchen,table3];serve_sandwich_no_gluten[sandw9,child5,tray1,table3];move_tray[tray1,table3,kitchen];__method_precondition_m0_serve_0_precondition[child6,bread9,content1,sandw16,table3];make_sandwich_no_gluten[sandw16,bread9,content1];put_on_tray[sandw16,tray4];move_tray[tray4,kitchen,table3];serve_sandwich_no_gluten[sandw16,child6,tray4,table3];move_tray[tray4,table3,kitchen];__method_precondition_m1_serve_1_precondition[child7,bread6,content10,table2,sandw7];make_sandwich[sandw7,bread6,content10];put_on_tray[sandw7,tray1];move_tray[tray1,kitchen,table2];serve_sandwich[sandw7,child7,tray1,table2];move_tray[tray1,table2,kitchen];__method_precondition_m0_serve_0_precondition[child8,bread7,content12,sandw21,table3];make_sandwich_no_gluten[sandw21,bread7,content12];put_on_tray[sandw21,tray2];move_tray[tray2,kitchen,table3];serve_sandwich_no_gluten[sandw21,child8,tray2,table3];move_tray[tray2,table3,kitchen];__method_precondition_m0_serve_0_precondition[child9,bread16,content18,sandw6,table2];make_sandwich_no_gluten[sandw6,bread16,content18];put_on_tray[sandw6,tray1];move_tray[tray1,kitchen,table2];serve_sandwich_no_gluten[sandw6,child9,tray1,table2];move_tray[tray1,table2,kitchen];__method_precondition_m1_serve_1_precondition[child10,bread12,content7,table2,sandw4];make_sandwich[sandw4,bread12,content7];put_on_tray[sandw4,tray4];move_tray[tray4,kitchen,table2];serve_sandwich[sandw4,child10,tray4,table2];move_tray[tray4,table2,kitchen];__method_precondition_m1_serve_1_precondition[child11,bread8,content13,table2,sandw20];make_sandwich[sandw20,bread8,content13];put_on_tray[sandw20,tray3];move_tray[tray3,kitchen,table2];serve_sandwich[sandw20,child11,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m1_serve_1_precondition[child12,bread17,content2,table2,sandw18];make_sandwich[sandw18,bread17,content2];put_on_tray[sandw18,tray3];move_tray[tray3,kitchen,table2];serve_sandwich[sandw18,child12,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m1_serve_1_precondition[child13,bread1,content15,table3,sandw13];make_sandwich[sandw13,bread1,content15];put_on_tray[sandw13,tray4];move_tray[tray4,kitchen,table3];serve_sandwich[sandw13,child13,tray4,table3];move_tray[tray4,table3,kitchen];__method_precondition_m0_serve_0_precondition[child14,bread14,content5,sandw12,table1];make_sandwich_no_gluten[sandw12,bread14,content5];put_on_tray[sandw12,tray2];move_tray[tray2,kitchen,table1];serve_sandwich_no_gluten[sandw12,child14,tray2,table1];move_tray[tray2,table1,kitchen];__method_precondition_m1_serve_1_precondition[child15,bread15,content6,table2,sandw5];make_sandwich[sandw5,bread15,content6];put_on_tray[sandw5,tray4];move_tray[tray4,kitchen,table2];serve_sandwich[sandw5,child15,tray4,table2];move_tray[tray4,table2,kitchen];__method_precondition_m1_serve_1_precondition[child16,bread13,content9,table2,sandw1];make_sandwich[sandw1,bread13,content9];put_on_tray[sandw1,tray4];move_tray[tray4,kitchen,table2];serve_sandwich[sandw1,child16,tray4,table2];move_tray[tray4,table2,kitchen];__method_precondition_m0_serve_0_precondition[child17,bread3,content3,sandw24,table2];make_sandwich_no_gluten[sandw24,bread3,content3];put_on_tray[sandw24,tray3];move_tray[tray3,kitchen,table2];serve_sandwich_no_gluten[sandw24,child17,tray3,table2];move_tray[tray3,table2,kitchen];__method_precondition_m1_serve_1_precondition[child18,bread10,content16,table1,sandw19];make_sandwich[sandw19,bread10,content16];put_on_tray[sandw19,tray4];move_tray[tray4,kitchen,table1];serve_sandwich[sandw19,child18,tray4,table1];move_tray[tray4,table1,kitchen]
==>
0 __method_precondition_m1_serve_1_precondition child1 bread2 content11 table1 sandw17 
1 make_sandwich sandw17 bread2 content11 
2 put_on_tray sandw17 tray4 
3 move_tray tray4 kitchen table1 
4 serve_sandwich sandw17 child1 tray4 table1 
5 move_tray tray4 table1 kitchen 
6 __method_precondition_m0_serve_0_precondition child2 bread4 content4 sandw23 table2 
7 make_sandwich_no_gluten sandw23 bread4 content4 
8 put_on_tray sandw23 tray3 
9 move_tray tray3 kitchen table2 
10 serve_sandwich_no_gluten sandw23 child2 tray3 table2 
11 move_tray tray3 table2 kitchen 
12 __method_precondition_m1_serve_1_precondition child3 bread5 content8 table1 sandw2 
13 make_sandwich sandw2 bread5 content8 
14 put_on_tray sandw2 tray2 
15 move_tray tray2 kitchen table1 
16 serve_sandwich sandw2 child3 tray2 table1 
17 move_tray tray2 table1 kitchen 
18 __method_precondition_m1_serve_1_precondition child4 bread18 content17 table1 sandw8 
19 make_sandwich sandw8 bread18 content17 
20 put_on_tray sandw8 tray2 
21 move_tray tray2 kitchen table1 
22 serve_sandwich sandw8 child4 tray2 table1 
23 move_tray tray2 table1 kitchen 
24 __method_precondition_m0_serve_0_precondition child5 bread11 content14 sandw9 table3 
25 make_sandwich_no_gluten sandw9 bread11 content14 
26 put_on_tray sandw9 tray1 
27 move_tray tray1 kitchen table3 
28 serve_sandwich_no_gluten sandw9 child5 tray1 table3 
29 move_tray tray1 table3 kitchen 
30 __method_precondition_m0_serve_0_precondition child6 bread9 content1 sandw16 table3 
31 make_sandwich_no_gluten sandw16 bread9 content1 
32 put_on_tray sandw16 tray4 
33 move_tray tray4 kitchen table3 
34 serve_sandwich_no_gluten sandw16 child6 tray4 table3 
35 move_tray tray4 table3 kitchen 
36 __method_precondition_m1_serve_1_precondition child7 bread6 content10 table2 sandw7 
37 make_sandwich sandw7 bread6 content10 
38 put_on_tray sandw7 tray1 
39 move_tray tray1 kitchen table2 
40 serve_sandwich sandw7 child7 tray1 table2 
41 move_tray tray1 table2 kitchen 
42 __method_precondition_m0_serve_0_precondition child8 bread7 content12 sandw21 table3 
43 make_sandwich_no_gluten sandw21 bread7 content12 
44 put_on_tray sandw21 tray2 
45 move_tray tray2 kitchen table3 
46 serve_sandwich_no_gluten sandw21 child8 tray2 table3 
47 move_tray tray2 table3 kitchen 
48 __method_precondition_m0_serve_0_precondition child9 bread16 content18 sandw6 table2 
49 make_sandwich_no_gluten sandw6 bread16 content18 
50 put_on_tray sandw6 tray1 
51 move_tray tray1 kitchen table2 
52 serve_sandwich_no_gluten sandw6 child9 tray1 table2 
53 move_tray tray1 table2 kitchen 
54 __method_precondition_m1_serve_1_precondition child10 bread12 content7 table2 sandw4 
55 make_sandwich sandw4 bread12 content7 
56 put_on_tray sandw4 tray4 
57 move_tray tray4 kitchen table2 
58 serve_sandwich sandw4 child10 tray4 table2 
59 move_tray tray4 table2 kitchen 
60 __method_precondition_m1_serve_1_precondition child11 bread8 content13 table2 sandw20 
61 make_sandwich sandw20 bread8 content13 
62 put_on_tray sandw20 tray3 
63 move_tray tray3 kitchen table2 
64 serve_sandwich sandw20 child11 tray3 table2 
65 move_tray tray3 table2 kitchen 
66 __method_precondition_m1_serve_1_precondition child12 bread17 content2 table2 sandw18 
67 make_sandwich sandw18 bread17 content2 
68 put_on_tray sandw18 tray3 
69 move_tray tray3 kitchen table2 
70 serve_sandwich sandw18 child12 tray3 table2 
71 move_tray tray3 table2 kitchen 
72 __method_precondition_m1_serve_1_precondition child13 bread1 content15 table3 sandw13 
73 make_sandwich sandw13 bread1 content15 
74 put_on_tray sandw13 tray4 
75 move_tray tray4 kitchen table3 
76 serve_sandwich sandw13 child13 tray4 table3 
77 move_tray tray4 table3 kitchen 
78 __method_precondition_m0_serve_0_precondition child14 bread14 content5 sandw12 table1 
79 make_sandwich_no_gluten sandw12 bread14 content5 
80 put_on_tray sandw12 tray2 
81 move_tray tray2 kitchen table1 
82 serve_sandwich_no_gluten sandw12 child14 tray2 table1 
83 move_tray tray2 table1 kitchen 
84 __method_precondition_m1_serve_1_precondition child15 bread15 content6 table2 sandw5 
85 make_sandwich sandw5 bread15 content6 
86 put_on_tray sandw5 tray4 
87 move_tray tray4 kitchen table2 
88 serve_sandwich sandw5 child15 tray4 table2 
89 move_tray tray4 table2 kitchen 
90 __method_precondition_m1_serve_1_precondition child16 bread13 content9 table2 sandw1 
91 make_sandwich sandw1 bread13 content9 
92 put_on_tray sandw1 tray4 
93 move_tray tray4 kitchen table2 
94 serve_sandwich sandw1 child16 tray4 table2 
95 move_tray tray4 table2 kitchen 
96 __method_precondition_m0_serve_0_precondition child17 bread3 content3 sandw24 table2 
97 make_sandwich_no_gluten sandw24 bread3 content3 
98 put_on_tray sandw24 tray3 
99 move_tray tray3 kitchen table2 
100 serve_sandwich_no_gluten sandw24 child17 tray3 table2 
101 move_tray tray3 table2 kitchen 
102 __method_precondition_m1_serve_1_precondition child18 bread10 content16 table1 sandw19 
103 make_sandwich sandw19 bread10 content16 
104 put_on_tray sandw19 tray4 
105 move_tray tray4 kitchen table1 
106 serve_sandwich sandw19 child18 tray4 table1 
107 move_tray tray4 table1 kitchen 
root 119
108 serve child14  -> m0_serve 78 79 80 81 82 83
109 serve child12  -> m1_serve 66 67 68 69 70 71
110 serve child6  -> m0_serve 30 31 32 33 34 35
111 serve child16  -> m1_serve 90 91 92 93 94 95
112 serve child3  -> m1_serve 12 13 14 15 16 17
113 serve child10  -> m1_serve 54 55 56 57 58 59
114 serve child18  -> m1_serve 102 103 104 105 106 107
115 serve child15  -> m1_serve 84 85 86 87 88 89
116 serve child8  -> m0_serve 42 43 44 45 46 47
117 serve child4  -> m1_serve 18 19 20 21 22 23
118 serve child1  -> m1_serve 0 1 2 3 4 5
119 __artificialTopCompilation__top_1  -> __top_1 118 123 112 117 126 110 122 116 124 113 125 109 121 108 115 111 120 114
120 serve child17  -> m0_serve 96 97 98 99 100 101
121 serve child13  -> m1_serve 72 73 74 75 76 77
122 serve child7  -> m1_serve 36 37 38 39 40 41
123 serve child2  -> m0_serve 6 7 8 9 10 11
124 serve child9  -> m0_serve 48 49 50 51 52 53
125 serve child11  -> m1_serve 60 61 62 63 64 65
126 serve child5  -> m0_serve 24 25 26 27 28 29

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 167.593 MEMPEAK_KBS 7351894.016
