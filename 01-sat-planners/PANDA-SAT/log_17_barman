PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p17.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p17.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p17.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounded planning graph ... done in 513ms.
	Number of Grounded Actions 2013
	Number of Grounded Literals 327
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounding ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 327
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 317ms.
	Number of Grounded Actions 1993
	Number of Grounded Literals 300
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 171ms.
	Number of Grounded Actions 1993
	Number of Grounded Literals 300
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Tasks 1993 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768818ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854768514
done
initial PDT has 237 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 237 leafs
SHOP LEAFS 79
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 134550
Size 134543 at 0/1993
Size 133671 at 500/1993
Size 133647 at 1000/1993
Size 132989 at 1500/1993
Size 109883
Size 109855 at 0/1993
Size 108835 at 500/1993
Size 108825 at 1000/1993
Size 20427 at 1500/1993
Size 19315
Size 19048 at 0/1993
Size 11485 at 500/1993
Size 11481 at 1000/1993
Size 11476 at 1500/1993
Size 10538
Size 9811 at 0/1993
Size 2798 at 500/1993
Size 2798 at 1000/1993
Size 2759 at 1500/1993
Size 2718
Size 2718 at 0/1993
Size 2674 at 500/1993
Size 2674 at 1000/1993
Size 2674 at 1500/1993
Size 2674
Size 2664 at 0/1993
Size 2521 at 500/1993
Size 2521 at 1000/1993
Size 2521 at 1500/1993
Size 2521
Size 2521 at 0/1993
Size 2521 at 500/1993
Size 2521 at 1000/1993
Size 2521 at 1500/1993
Size 2521
Invariant time: 3.412
Number of invariants: 2521
Invariant Clauses 599998
NUMBER OF CLAUSES 956535
NUMBER OF STATE CLAUSES 802832
NUMBER OF DECOMPOSITION CLAUSES 153703
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.93% 16.07% 0.0% 
NUMBER OF PATHS 237
Starting cryptominisat5.5
Setting starttime of solver to 1604475447869
Command exited with non-zero status 10
0.48 0.02

Time command gave the following runtime for the solver: 500
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_9;2;2,2862 2862 _m3_get_second_ingredient_3
9;2;2 253 pathaction!3_9;2;2,2432
Consider method^2_11;3,2007 2007 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 340 pathaction!2_11;3,2320
Consider method^2_11;2,568 568 m3_get_second_ingredient
11;2 1 pathaction!2_11;2,422
Consider method^3_7;2;2,2207 2207 _m3_get_second_ingredient_3
7;2;2 217 pathaction!3_7;2;2,2354
Consider method^3_0;1;2,246 246 _m2_get_first_ingredient_3
0;1;2 206 pathaction!3_0;1;2,1246
Consider method^3_2;2;2,2862 2862 _m3_get_second_ingredient_3
2;2;2 212 pathaction!3_2;2;2,2432
Consider method^2_8;3,2579 2579 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 82 pathaction!2_8;3,2321
Consider method^3_9;1;1,398 398 m9_do_fill_shot
9;1;1 343 pathaction!3_9;1;1,2618
Consider method^3_7;1;1,2210 2210 m9_do_fill_shot
7;1;1 250 pathaction!3_7;1;1,2587
Consider method^1_4,1845 1845 m0_do_cocktail_in_shot1
4 97 pathaction!1_4,2337
Consider method^3_8;1;3,1378 1378 _m2_get_first_ingredient_4
8;1;3 222 pathaction!3_8;1;3,1727
Consider method^3_0;2;1,148 148 _m3_get_second_ingredient_2
0;2;1 162 pathaction!3_0;2;1,2486
Consider method^2_2;3,2529 2529 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 191 pathaction!2_2;3,2328
Consider method^2_3;1,2696 2696 m2_get_first_ingredient
3;1 78 pathaction!2_3;1,12
Consider method^2_4;3,2967 2967 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 2 pathaction!2_4;3,2326
Consider method^3_1;3;1,2785 2785 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 231 pathaction!3_1;3;1,459
Consider method^2_7;2,1350 1350 m3_get_second_ingredient
7;2 86 pathaction!2_7;2,417
Consider method^2_3;2,1224 1224 m3_get_second_ingredient
3;2 190 pathaction!2_3;2,420
Consider method^2_0;2,568 568 m3_get_second_ingredient
0;2 135 pathaction!2_0;2,422
Consider method^1_7,1684 1684 m0_do_cocktail_in_shot1
7 43 pathaction!1_7,2330
Consider method^2_5;2,2770 2770 m3_get_second_ingredient
5;2 309 pathaction!2_5;2,414
Consider method^2_5;3,2097 2097 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 59 pathaction!2_5;3,2324
Consider method^3_0;1;1,2058 2058 m8_do_fill_shot
0;1;1 202 pathaction!3_0;1;1,2637
Consider method^3_6;2;1,665 665 _m3_get_second_ingredient_2
6;2;1 55 pathaction!3_6;2;1,2483
Consider method^3_5;1;1,2289 2289 m9_do_fill_shot
5;1;1 72 pathaction!3_5;1;1,2591
Consider method^3_5;1;2,2984 2984 _m2_get_first_ingredient_3
5;1;2 271 pathaction!3_5;1;2,1194
Consider method^3_7;3;1,709 709 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 128 pathaction!3_7;3;1,443
Consider method^1_5,477 477 m0_do_cocktail_in_shot1
5 233 pathaction!1_5,2335
Consider method^2_8;1,690 690 m2_get_first_ingredient
8;1 114 pathaction!2_8;1,11
Consider method^3_0;1;3,2148 2148 _m2_get_first_ingredient_4
0;1;3 187 pathaction!3_0;1;3,1792
Consider method^3_11;1;2,246 246 _m2_get_first_ingredient_3
11;1;2 39 pathaction!3_11;1;2,1246
Consider method^2_0;3,1062 1062 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 167 pathaction!2_0;3,2329
Consider method^1_3,906 906 m0_do_cocktail_in_shot1
3 44 pathaction!1_3,2338
Consider method^3_5;1;3,2783 2783 _m2_get_first_ingredient_4
5;1;3 235 pathaction!3_5;1;3,1746
Consider method^1_1,1579 1579 m0_do_cocktail_in_shot1
1 244 pathaction!1_1,2336
Consider method^3_8;3;1,2580 2580 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 312 pathaction!3_8;3;1,446
Consider method^3_7;1;2,1508 1508 _m2_get_first_ingredient_3
7;1;2 185 pathaction!3_7;1;2,1222
Consider method^3_2;1;1,1171 1171 m7_do_fill_shot
2;1;1 326 pathaction!3_2;1;1,2618
Consider method^3_0;2;2,1258 1258 _m3_get_second_ingredient_3
0;2;2 246 pathaction!3_0;2;2,2403
Consider method^2_7;3,2886 2886 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 165 pathaction!2_7;3,2319
Consider method^3_9;1;3,2019 2019 _m2_get_first_ingredient_4
9;1;3 295 pathaction!3_9;1;3,1773
Consider method^3_5;2;1,2072 2072 _m3_get_second_ingredient_2
5;2;1 232 pathaction!3_5;2;1,2516
Consider method^3_9;2;1,2371 2371 _m3_get_second_ingredient_2
9;2;1 195 pathaction!3_9;2;1,2482
Consider method^2_9;2,2954 2954 m3_get_second_ingredient
9;2 163 pathaction!2_9;2,412
Consider method^2_1;2,2650 2650 m3_get_second_ingredient
1;2 81 pathaction!2_1;2,426
Consider method^3_6;3;1,1688 1688 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 146 pathaction!3_6;3;1,449
Consider method^3_6;1;1,2026 2026 m7_do_fill_shot
6;1;1 288 pathaction!3_6;1;1,2624
Consider method^3_4;2;1,2371 2371 _m3_get_second_ingredient_2
4;2;1 268 pathaction!3_4;2;1,2482
Consider method^2_7;1,196 196 m2_get_first_ingredient
7;1 175 pathaction!2_7;1,9
Consider method^3_1;1;1,2682 2682 m8_do_fill_shot
1;1;1 144 pathaction!3_1;1;1,2590
Consider method^1_0,1410 1410 m0_do_cocktail_in_shot1
0 293 pathaction!1_0,2340
Consider method^3_8;1;1,31 31 m9_do_fill_shot
8;1;1 205 pathaction!3_8;1;1,2572
Consider method^3_3;1;3,2783 2783 _m2_get_first_ingredient_4
3;1;3 6 pathaction!3_3;1;3,1746
Consider method^3_1;1;2,2581 2581 _m2_get_first_ingredient_3
1;1;2 3 pathaction!3_1;1;2,1279
Consider method^3_8;1;2,2396 2396 _m2_get_first_ingredient_3
8;1;2 192 pathaction!3_8;1;2,1210
Consider method^3_7;1;3,1183 1183 _m2_get_first_ingredient_4
7;1;3 95 pathaction!3_7;1;3,1742
Consider method^2_11;1,3072 3072 m2_get_first_ingredient
11;1 7 pathaction!2_11;1,14
Consider method^3_2;2;1,2371 2371 _m3_get_second_ingredient_2
2;2;1 242 pathaction!3_2;2;1,2482
Consider method^3_1;2;1,2960 2960 _m3_get_second_ingredient_2
1;2;1 159 pathaction!3_1;2;1,2510
Consider method^2_8;2,309 309 m3_get_second_ingredient
8;2 45 pathaction!2_8;2,419
Consider method^2_9;1,2345 2345 m2_get_first_ingredient
9;1 33 pathaction!2_9;1,4
Consider method^3_2;1;3,2019 2019 _m2_get_first_ingredient_4
2;1;3 247 pathaction!3_2;1;3,1773
Consider method^3_5;3;1,468 468 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 276 pathaction!3_5;3;1,457
Consider method^3_4;2;2,2862 2862 _m3_get_second_ingredient_3
4;2;2 317 pathaction!3_4;2;2,2432
Consider method^2_2;1,1580 1580 m2_get_first_ingredient
2;1 16 pathaction!2_2;1,7
Consider method^1_11,249 249 m0_do_cocktail_in_shot1
11 252 pathaction!1_11,2331
Consider method^3_11;1;3,2148 2148 _m2_get_first_ingredient_4
11;1;3 173 pathaction!3_11;1;3,1792
Consider method^3_6;2;2,1687 1687 _m3_get_second_ingredient_3
6;2;2 91 pathaction!3_6;2;2,2347
Consider method^3_1;1;3,691 691 _m2_get_first_ingredient_4
1;1;3 17 pathaction!3_1;1;3,1745
Consider method^2_4;2,214 214 m3_get_second_ingredient
4;2 18 pathaction!2_4;2,413
Consider method^3_4;3;1,2738 2738 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2>
4;3;1 339 pathaction!3_4;3;1,445
Consider method^3_4;1;1,2289 2289 m9_do_fill_shot
4;1;1 216 pathaction!3_4;1;1,2591
Consider method^2_4;1,1584 1584 m2_get_first_ingredient
4;1 137 pathaction!2_4;1,5
Consider method^2_9;3,374 374 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 200 pathaction!2_9;3,2323
Consider method^3_6;1;2,816 816 _m2_get_first_ingredient_3
6;1;2 266 pathaction!3_6;1;2,1226
Consider method^2_6;2,2574 2574 m3_get_second_ingredient
6;2 269 pathaction!2_6;2,411
Consider method^3_9;3;1,1857 1857 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail5,right];m5_do_clean_shot;0;-1,-2>
9;3;1 286 pathaction!3_9;3;1,458
Consider method^2_0;1,3072 3072 m2_get_first_ingredient
0;1 316 pathaction!2_0;1,14
Consider method^1_2,2766 2766 m0_do_cocktail_in_shot1
2 208 pathaction!1_2,2339
Consider method^3_3;1;2,2984 2984 _m2_get_first_ingredient_3
3;1;2 15 pathaction!3_3;1;2,1194
Consider method^3_8;2;1,2204 2204 _m3_get_second_ingredient_2
8;2;1 223 pathaction!3_8;2;1,2523
Consider method^3_2;3;1,554 554 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2>
2;3;1 303 pathaction!3_2;3;1,454
Consider method^3_5;2;2,1608 1608 _m3_get_second_ingredient_3
5;2;2 189 pathaction!3_5;2;2,2379
Consider method^1_10,2635 2635 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
10 143 pathaction!1_10,0
Consider method^3_9;1;2,1602 1602 _m2_get_first_ingredient_3
9;1;2 278 pathaction!3_9;1;2,1291
Consider method^2_2;2,2228 2228 m3_get_second_ingredient
2;2 116 pathaction!2_2;2,415
Consider method^3_6;1;3,565 565 _m2_get_first_ingredient_4
6;1;3 186 pathaction!3_6;1;3,1779
Consider method^3_0;3;1,1325 1325 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 92 pathaction!3_0;3;1,451
Consider method^2_10;1,1708 1708 m9_do_fill_shot
10;1 275 pathaction!2_10;1,2631
Consider method^1_8,2942 2942 m0_do_cocktail_in_shot1
8 182 pathaction!1_8,2332
Consider method^3_11;3;1,594 594 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2>
11;3;1 37 pathaction!3_11;3;1,439
Consider method^3_11;2;1,148 148 _m3_get_second_ingredient_2
11;2;1 36 pathaction!3_11;2;1,2486
Consider method^1_9,397 397 m0_do_cocktail_in_shot1
9 110 pathaction!1_9,2334
Consider method^2_6;1,2892 2892 m2_get_first_ingredient
6;1 138 pathaction!2_6;1,3
Consider method^3_3;3;1,868 868 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail5,right];m5_do_clean_shot;0;-1,-2>
3;3;1 334 pathaction!3_3;3;1,456
Consider method^3_2;1;2,1602 1602 _m2_get_first_ingredient_3
2;1;2 65 pathaction!3_2;1;2,1291
Consider method^2_5;1,59 59 m2_get_first_ingredient
5;1 287 pathaction!2_5;1,6
Consider method^3_3;1;1,2289 2289 m9_do_fill_shot
3;1;1 69 pathaction!3_3;1;1,2591
Consider method^2_1;1,2936 2936 m2_get_first_ingredient
1;1 321 pathaction!2_1;1,18
Consider method^3_11;2;2,1258 1258 _m3_get_second_ingredient_3
11;2;2 25 pathaction!3_11;2;2,2403
Consider method^3_4;1;2,2984 2984 _m2_get_first_ingredient_3
4;1;2 264 pathaction!3_4;1;2,1194
Consider method^3_4;1;3,2783 2783 _m2_get_first_ingredient_4
4;1;3 181 pathaction!3_4;1;3,1746
Consider method^3_7;2;1,473 473 _m3_get_second_ingredient_2
7;2;1 4 pathaction!3_7;2;1,2485
Consider method^3_11;1;1,1380 1380 m9_do_fill_shot
11;1;1 57 pathaction!3_11;1;1,2637
Consider method^2_3;3,3037 3037 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 90 pathaction!2_3;3,2327
Consider method^1_6,891 891 m0_do_cocktail_in_shot1
6 35 pathaction!1_6,2333
Consider method^2_6;3,1884 1884 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 307 pathaction!2_6;3,2322
Consider method^3_3;2;1,2371 2371 _m3_get_second_ingredient_2
3;2;1 67 pathaction!3_3;2;1,2482
Consider method^0_,3086 3086 __top_1
 94 pathaction!0_,2686
Consider method^3_8;2;2,252 252 _m3_get_second_ingredient_3
8;2;2 298 pathaction!3_8;2;2,2427
Consider method^3_3;2;2,2862 2862 _m3_get_second_ingredient_3
3;2;2 283 pathaction!3_3;2;2,2432
Consider method^3_1;2;2,1744 1744 _m3_get_second_ingredient_3
1;2;2 209 pathaction!3_1;2;2,2444
Consider method^2_1;3,2214 2214 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 273 pathaction!2_1;3,2325


CHECKING primitive solution of length 233 ...
true 73 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 228 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot13;]
true 84 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser2,ingredient2;]
true 77 grasp[left,shot13;]
true 62 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 76 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 164 clean-shot[shot13,ingredient2,left,right;]
true 179 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot13;]
true 23 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 132 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 211 leave[left,shot13;]
true 201 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient1;]
true 30 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 281 nop[;]
true 147 grasp[left,shaker1;]
true 308 shake[cocktail5,ingredient2,ingredient1,shaker1,left,right;]
true 254 pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1;]
true 240 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 282 clean-shaker[left,right,shaker1;]
true 255 leave[left,shaker1;]
true 338 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 336 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot11;]
true 325 __method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser4,ingredient4;]
true 46 grasp[left,shot11;]
true 8 fill-shot[shot11,ingredient4,left,right,dispenser4;]
true 180 pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,left,l0,l1;]
true 119 clean-shot[shot11,ingredient4,left,right;]
true 328 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot11;]
true 314 fill-shot[shot11,ingredient3,left,right,dispenser3;]
true 291 pour-shot-to-used-shaker[shot11,ingredient3,shaker1,left,l1,l2;]
true 344 leave[left,shot11;]
true 184 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 274 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 331 nop[;]
true 133 grasp[right,shaker1;]
true 324 shake[cocktail2,ingredient4,ingredient3,shaker1,right,left;]
true 272 pour-shaker-to-shot[cocktail2,shot2,right,shaker1,l2,l1;]
true 302 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 345 clean-shaker[right,left,shaker1;]
true 320 leave[right,shaker1;]
true 70 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 109 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot11;]
true 230 __method_precondition_m7_do_fill_shot_7_precondition[shot11,ingredient3,dispenser3;]
true 14 grasp[left,shot11;]
true 280 refill-shot[shot11,ingredient3,left,right,dispenser3;]
true 139 pour-shot-to-clean-shaker[shot11,ingredient3,shaker1,left,l0,l1;]
true 9 clean-shot[shot11,ingredient3,left,right;]
true 245 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot11;]
true 160 fill-shot[shot11,ingredient4,left,right,dispenser4;]
true 112 pour-shot-to-used-shaker[shot11,ingredient4,shaker1,left,l1,l2;]
true 19 leave[left,shot11;]
true 238 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient4;]
true 103 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 214 nop[;]
true 341 grasp[left,shaker1;]
true 123 shake[cocktail10,ingredient3,ingredient4,shaker1,left,right;]
true 289 pour-shaker-to-shot[cocktail10,shot3,left,shaker1,l2,l1;]
true 267 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 261 clean-shaker[left,right,shaker1;]
true 0 leave[left,shaker1;]
true 172 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 259 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot11;]
true 304 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient1,ingredient4,dispenser1;]
true 53 grasp[left,shot11;]
true 136 clean-shot[shot11,ingredient4,left,right;]
true 151 fill-shot[shot11,ingredient1,left,right,dispenser1;]
true 296 pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,left,l0,l1;]
true 176 clean-shot[shot11,ingredient1,left,right;]
true 68 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,left,shot11;]
true 174 fill-shot[shot11,ingredient4,left,right,dispenser4;]
true 98 pour-shot-to-used-shaker[shot11,ingredient4,shaker1,left,l1,l2;]
true 313 leave[left,shot11;]
true 140 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient4;]
true 154 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 337 nop[;]
true 64 grasp[left,shaker1;]
true 265 shake[cocktail6,ingredient1,ingredient4,shaker1,left,right;]
true 227 pour-shaker-to-shot[cocktail6,shot4,left,shaker1,l2,l1;]
true 188 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 32 clean-shaker[left,right,shaker1;]
true 262 leave[left,shaker1;]
true 41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 170 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot11;]
true 220 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient1,ingredient4,dispenser1;]
true 270 grasp[left,shot11;]
true 100 clean-shot[shot11,ingredient4,left,right;]
true 215 fill-shot[shot11,ingredient1,left,right,dispenser1;]
true 149 pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,left,l0,l1;]
true 323 clean-shot[shot11,ingredient1,left,right;]
true 168 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,left,shot11;]
true 297 fill-shot[shot11,ingredient4,left,right,dispenser4;]
true 31 pour-shot-to-used-shaker[shot11,ingredient4,shaker1,left,l1,l2;]
true 260 leave[left,shot11;]
true 241 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient4;]
true 66 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 256 nop[;]
true 310 grasp[right,shaker1;]
true 169 shake[cocktail7,ingredient1,ingredient4,shaker1,right,left;]
true 10 pour-shaker-to-shot[cocktail7,shot5,right,shaker1,l2,l1;]
true 322 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 277 clean-shaker[right,left,shaker1;]
true 171 leave[right,shaker1;]
true 142 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 52 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot11;]
true 87 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient1,ingredient4,dispenser1;]
true 234 grasp[left,shot11;]
true 145 clean-shot[shot11,ingredient4,left,right;]
true 99 fill-shot[shot11,ingredient1,left,right,dispenser1;]
true 106 pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,left,l0,l1;]
true 49 clean-shot[shot11,ingredient1,left,right;]
true 292 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot11;]
true 75 fill-shot[shot11,ingredient2,left,right,dispenser2;]
true 21 pour-shot-to-used-shaker[shot11,ingredient2,shaker1,left,l1,l2;]
true 29 leave[left,shot11;]
true 166 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2;]
true 155 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 226 nop[;]
true 207 grasp[left,shaker1;]
true 102 shake[cocktail4,ingredient1,ingredient2,shaker1,left,right;]
true 56 pour-shaker-to-shot[cocktail4,shot6,left,shaker1,l2,l1;]
true 193 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 122 clean-shaker[left,right,shaker1;]
true 79 leave[left,shaker1;]
true 89 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 221 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot11;]
true 83 __method_precondition_m7_do_fill_shot_7_precondition[shot11,ingredient2,dispenser2;]
true 124 grasp[left,shot11;]
true 12 refill-shot[shot11,ingredient2,left,right,dispenser2;]
true 150 pour-shot-to-clean-shaker[shot11,ingredient2,shaker1,left,l0,l1;]
true 111 clean-shot[shot11,ingredient2,left,right;]
true 11 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,left,shot11;]
true 96 fill-shot[shot11,ingredient1,left,right,dispenser1;]
true 47 pour-shot-to-used-shaker[shot11,ingredient1,shaker1,left,l1,l2;]
true 131 leave[left,shot11;]
true 54 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient1;]
true 178 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 248 nop[;]
true 5 grasp[left,shaker1;]
true 306 shake[cocktail3,ingredient2,ingredient1,shaker1,left,right;]
true 213 pour-shaker-to-shot[cocktail3,shot7,left,shaker1,l2,l1;]
true 342 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 80 clean-shaker[left,right,shaker1;]
true 38 leave[left,shaker1;]
true 225 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 93 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot13;]
true 251 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient1,dispenser4;]
true 134 grasp[right,shot13;]
true 294 clean-shot[shot13,ingredient1,right,left;]
true 203 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 113 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 329 clean-shot[shot13,ingredient4,right,left;]
true 318 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,right,shot13;]
true 263 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 236 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2;]
true 26 leave[right,shot13;]
true 183 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient3;]
true 196 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 115 nop[;]
true 125 grasp[right,shaker1;]
true 330 shake[cocktail9,ingredient4,ingredient3,shaker1,right,left;]
true 237 pour-shaker-to-shot[cocktail9,shot8,right,shaker1,l2,l1;]
true 333 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 58 clean-shaker[right,left,shaker1;]
true 285 leave[right,shaker1;]
true 224 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 290 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot11;]
true 127 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient3,ingredient1,dispenser3;]
true 243 grasp[right,shot11;]
true 120 clean-shot[shot11,ingredient1,right,left;]
true 300 fill-shot[shot11,ingredient3,right,left,dispenser3;]
true 218 pour-shot-to-clean-shaker[shot11,ingredient3,shaker1,right,l0,l1;]
true 229 clean-shot[shot11,ingredient3,right,left;]
true 194 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,right,shot11;]
true 34 fill-shot[shot11,ingredient2,right,left,dispenser2;]
true 48 pour-shot-to-used-shaker[shot11,ingredient2,shaker1,right,l1,l2;]
true 152 leave[right,shot11;]
true 311 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2;]
true 239 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 157 nop[;]
true 177 grasp[right,shaker1;]
true 22 shake[cocktail8,ingredient3,ingredient2,shaker1,right,left;]
true 299 pour-shaker-to-shot[cocktail8,shot9,right,shaker1,l2,l1;]
true 24 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 158 clean-shaker[right,left,shaker1;]
true 101 leave[right,shaker1;]
true 141 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 210 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot11;]
true 197 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient3,ingredient2,dispenser3;]
true 27 grasp[left,shot11;]
true 305 clean-shot[shot11,ingredient2,left,right;]
true 85 fill-shot[shot11,ingredient3,left,right,dispenser3;]
true 108 pour-shot-to-clean-shaker[shot11,ingredient3,shaker1,left,l0,l1;]
true 335 clean-shot[shot11,ingredient3,left,right;]
true 148 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot11;]
true 315 fill-shot[shot11,ingredient4,left,right,dispenser4;]
true 319 pour-shot-to-used-shaker[shot11,ingredient4,shaker1,left,l1,l2;]
true 301 leave[left,shot11;]
true 71 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient4;]
true 104 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 107 nop[;]
true 332 grasp[left,shaker1;]
true 258 shake[cocktail1,ingredient3,ingredient4,shaker1,left,right;]
true 219 pour-shaker-to-shot[cocktail1,shot10,left,shaker1,l2,l1;]
true 249 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 130 clean-shaker[left,right,shaker1;]
true 50 leave[left,shaker1;]
true 257 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2;]
true 153 __method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient2,ingredient4,dispenser2;]
true 161 grasp[right,shot11;]
true 121 clean-shot[shot11,ingredient4,right,left;]
true 284 fill-shot[shot11,ingredient2,right,left,dispenser2;]
true 327 leave[right,shot11;]
true 13 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 88 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot13;]
true 198 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2;]
true 156 grasp[left,shot13;]
true 40 clean-shot[shot13,ingredient3,left,right;]
true 63 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 51 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 129 clean-shot[shot13,ingredient2,left,right;]
true 126 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot13;]
true 60 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 118 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 74 leave[left,shot13;]
true 28 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient1;]
true 105 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 199 nop[;]
true 204 grasp[right,shaker1;]
true 42 shake[cocktail5,ingredient2,ingredient1,shaker1,right,left;]
true 61 pour-shaker-to-shot[cocktail5,shot12,right,shaker1,l2,l1;]
true 117 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 20 clean-shaker[right,left,shaker1;]
true 279 leave[right,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 387318712
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 300
number of actions                    = 2687
number of abstract actions           = 694
number of primitive actions          = 1993
number of methods                    = 3087
number of primitive shop actions     = 768
number of primitive non-shop actions = 1225
size of largest method               = 12
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 194994
number of clauses               = 956535
average size of clauses         = 2.3775491748864392
number of assert                = 136
number of horn                  = 835653
K offset                        = 0
K chosen value                  = 4
state formula                   = 802832
method children clauses         = 0
number of paths                 = 237
maximum plan length             = 237
number of decomposition clauses = 153703
number of ordering clauses      = 0
number of state clauses         = 802832
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 16051
============ parsing ============
total                         = 1135
file parser                   = 621
sort expansion                = 231
closed world assumption       = 132
inherit preconditions         = 0
shop methods                  = 32
eliminate identical variables = 47
strip domain of hybridity     = 1
flatten formula               = 71
============ preprocessing ============
total                                      = 5402
compile negative preconditions             = 31
compile unit methods                       = 0
split parameter                            = 48
expand choiceless abstract tasks           = 490
compile methods with identical tasks       = 25
removing unnecessary predicates            = 918
lifted reachabiltiy analysis               = 74
grounded planning graph analysis           = 1467
grounded task decomposition graph analysis = 1803
grounding                                  = 503
create artificial top task                 = 5
============ search preparation ============
compute state invariants = 3661
============ sat ============
total                                        = 7375
generate formula                             = 6274
generate path decomposition tree             = 317
normalise path decomposition tree            = 156
sog optimisation                             = 99
translate path decomposition tree to clauses = 641
generate state formula                       = 6217
generate state invariant formula             = 405
transform to DIMACS                          = 382
SAT solver                                   = 500
SAT solver for K=0004                        = 500

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="1993";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="694";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="387318712";"40 sat:20:state formula"="802832";"40 sat:01:number of variables"="194994";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="237";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="3087";"30 problem:07:number of primitive shop actions"="768";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="2687";"30 problem:08:number of primitive non-shop actions"="1225";"30 problem:02:number of predicates"="300";"40 sat:03:number of horn"="835653";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="12";"40 sat:03:average size of clauses"="2.3775491748864392";"40 sat:02:number of clauses"="956535";"40 sat:50:number of state clauses"="802832";"40 sat:03:number of assert"="136";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="237";"40 sat:50:number of decomposition clauses"="153703";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="621";"01 parsing:08:flatten formula"="71";"40 sat:41:SAT solver for K=0004"="500";"40 sat:00:total"="7375";"40 sat:16:generate state formula"="6217";"40 sat:20:transform to DIMACS"="382";"40 sat:11:generate path decomposition tree"="317";"02 preprocessing:07:compile methods with identical tasks"="25";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="918";"01 parsing:03:closed world assumption"="132";"02 preprocessing:11:lifted reachabiltiy analysis"="74";"01 parsing:02:sort expansion"="231";"40 sat:12:normalise path decomposition tree"="156";"40 sat:40:SAT solver"="500";"01 parsing:00:total"="1135";"40 sat:10:generate formula"="6274";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="31";"00 total:00:total"="16051";"40 sat:13:sog optimisation"="99";"02 preprocessing:12:grounded planning graph analysis"="1467";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1803";"02 preprocessing:04:split parameter"="48";"01 parsing:05:shop methods"="32";"10 search preparation:02:compute state invariants"="3661";"01 parsing:06:eliminate identical variables"="47";"40 sat:15:translate path decomposition tree to clauses"="641";"02 preprocessing:05:expand choiceless abstract tasks"="490";"40 sat:17:generate state invariant formula"="405";"02 preprocessing:00:total"="5402";"02 preprocessing:99:create artificial top task"="5";"02 preprocessing:84:grounding"="503"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser2,ingredient2];grasp[left,shot13];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1];clean-shot[shot13,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot13];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail5,ingredient2,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot11];__method_precondition_m8_do_fill_shot_8_precondition[shot11,dispenser4,ingredient4];grasp[left,shot11];fill-shot[shot11,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot11,ingredient4,shaker1,left,l0,l1];clean-shot[shot11,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot11];fill-shot[shot11,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot11,ingredient3,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail2,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient3,shot11];__method_precondition_m7_do_fill_shot_7_precondition[shot11,ingredient3,dispenser3];grasp[left,shot11];refill-shot[shot11,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot11,ingredient3,shaker1,left,l0,l1];clean-shot[shot11,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot11];fill-shot[shot11,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot11,ingredient4,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[left,shaker1];shake[cocktail10,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot3,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient1,ingredient4,dispenser1];grasp[left,shot11];clean-shot[shot11,ingredient4,left,right];fill-shot[shot11,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,left,l0,l1];clean-shot[shot11,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient4,left,shot11];fill-shot[shot11,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot11,ingredient4,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail6,ingredient1,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient1,ingredient4,dispenser1];grasp[left,shot11];clean-shot[shot11,ingredient4,left,right];fill-shot[shot11,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,left,l0,l1];clean-shot[shot11,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,left,shot11];fill-shot[shot11,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot11,ingredient4,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[right,shaker1];shake[cocktail7,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail7,shot5,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail7,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient1,ingredient4,dispenser1];grasp[left,shot11];clean-shot[shot11,ingredient4,left,right];fill-shot[shot11,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot11,ingredient1,shaker1,left,l0,l1];clean-shot[shot11,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot11];fill-shot[shot11,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot11,ingredient2,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail4,ingredient1,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail4,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail4,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot11];__method_precondition_m7_do_fill_shot_7_precondition[shot11,ingredient2,dispenser2];grasp[left,shot11];refill-shot[shot11,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot11,ingredient2,shaker1,left,l0,l1];clean-shot[shot11,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient1,left,shot11];fill-shot[shot11,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot11,ingredient1,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail3,ingredient2,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient1,dispenser4];grasp[right,shot13];clean-shot[shot13,ingredient1,right,left];fill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1];clean-shot[shot13,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,right,shot13];fill-shot[shot13,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail9,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient3,ingredient1,dispenser3];grasp[right,shot11];clean-shot[shot11,ingredient1,right,left];fill-shot[shot11,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot11,ingredient3,shaker1,right,l0,l1];clean-shot[shot11,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,right,shot11];fill-shot[shot11,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot11,ingredient2,shaker1,right,l1,l2];leave[right,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail8,ingredient3,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot11];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient3,ingredient2,dispenser3];grasp[left,shot11];clean-shot[shot11,ingredient2,left,right];fill-shot[shot11,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot11,ingredient3,shaker1,left,l0,l1];clean-shot[shot11,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot11];fill-shot[shot11,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot11,ingredient4,shaker1,left,l1,l2];leave[left,shot11];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail1,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2];__method_precondition_m9_do_fill_shot_9_precondition[shot11,ingredient2,ingredient4,dispenser2];grasp[right,shot11];clean-shot[shot11,ingredient4,right,left];fill-shot[shot11,ingredient2,right,left,dispenser2];leave[right,shot11];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient2,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2];grasp[left,shot13];clean-shot[shot13,ingredient3,left,right];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1];clean-shot[shot13,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,left,shot13];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[right,shaker1];shake[cocktail5,ingredient2,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot12,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient2 shot13 
2 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser2 ingredient2 
3 grasp left shot13 
4 fill-shot shot13 ingredient2 left right dispenser2 
5 pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 
6 clean-shot shot13 ingredient2 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient1 left shot13 
8 fill-shot shot13 ingredient1 left right dispenser1 
9 pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 
10 leave left shot13 
11 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient2 ingredient1 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail5 ingredient2 ingredient1 shaker1 left right 
16 pour-shaker-to-shot cocktail5 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail5 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 left 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot11 
22 __method_precondition_m8_do_fill_shot_8_precondition shot11 dispenser4 ingredient4 
23 grasp left shot11 
24 fill-shot shot11 ingredient4 left right dispenser4 
25 pour-shot-to-clean-shaker shot11 ingredient4 shaker1 left l0 l1 
26 clean-shot shot11 ingredient4 left right 
27 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 left shot11 
28 fill-shot shot11 ingredient3 left right dispenser3 
29 pour-shot-to-used-shaker shot11 ingredient3 shaker1 left l1 l2 
30 leave left shot11 
31 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient3 
32 __method_precondition_m5_do_clean_shot_5_precondition shot2 
33 nop  
34 grasp right shaker1 
35 shake cocktail2 ingredient4 ingredient3 shaker1 right left 
36 pour-shaker-to-shot cocktail2 shot2 right shaker1 l2 l1 
37 empty-shaker right shaker1 cocktail2 l1 l0 
38 clean-shaker right left shaker1 
39 leave right shaker1 
40 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
41 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient3 shot11 
42 __method_precondition_m7_do_fill_shot_7_precondition shot11 ingredient3 dispenser3 
43 grasp left shot11 
44 refill-shot shot11 ingredient3 left right dispenser3 
45 pour-shot-to-clean-shaker shot11 ingredient3 shaker1 left l0 l1 
46 clean-shot shot11 ingredient3 left right 
47 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient4 left shot11 
48 fill-shot shot11 ingredient4 left right dispenser4 
49 pour-shot-to-used-shaker shot11 ingredient4 shaker1 left l1 l2 
50 leave left shot11 
51 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient3 ingredient4 
52 __method_precondition_m5_do_clean_shot_5_precondition shot3 
53 nop  
54 grasp left shaker1 
55 shake cocktail10 ingredient3 ingredient4 shaker1 left right 
56 pour-shaker-to-shot cocktail10 shot3 left shaker1 l2 l1 
57 empty-shaker left shaker1 cocktail10 l1 l0 
58 clean-shaker left right shaker1 
59 leave left shaker1 
60 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
61 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient1 shot11 
62 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient1 ingredient4 dispenser1 
63 grasp left shot11 
64 clean-shot shot11 ingredient4 left right 
65 fill-shot shot11 ingredient1 left right dispenser1 
66 pour-shot-to-clean-shaker shot11 ingredient1 shaker1 left l0 l1 
67 clean-shot shot11 ingredient1 left right 
68 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient4 left shot11 
69 fill-shot shot11 ingredient4 left right dispenser4 
70 pour-shot-to-used-shaker shot11 ingredient4 shaker1 left l1 l2 
71 leave left shot11 
72 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient1 ingredient4 
73 __method_precondition_m5_do_clean_shot_5_precondition shot4 
74 nop  
75 grasp left shaker1 
76 shake cocktail6 ingredient1 ingredient4 shaker1 left right 
77 pour-shaker-to-shot cocktail6 shot4 left shaker1 l2 l1 
78 empty-shaker left shaker1 cocktail6 l1 l0 
79 clean-shaker left right shaker1 
80 leave left shaker1 
81 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
82 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient1 shot11 
83 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient1 ingredient4 dispenser1 
84 grasp left shot11 
85 clean-shot shot11 ingredient4 left right 
86 fill-shot shot11 ingredient1 left right dispenser1 
87 pour-shot-to-clean-shaker shot11 ingredient1 shaker1 left l0 l1 
88 clean-shot shot11 ingredient1 left right 
89 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient4 left shot11 
90 fill-shot shot11 ingredient4 left right dispenser4 
91 pour-shot-to-used-shaker shot11 ingredient4 shaker1 left l1 l2 
92 leave left shot11 
93 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient1 ingredient4 
94 __method_precondition_m5_do_clean_shot_5_precondition shot5 
95 nop  
96 grasp right shaker1 
97 shake cocktail7 ingredient1 ingredient4 shaker1 right left 
98 pour-shaker-to-shot cocktail7 shot5 right shaker1 l2 l1 
99 empty-shaker right shaker1 cocktail7 l1 l0 
100 clean-shaker right left shaker1 
101 leave right shaker1 
102 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
103 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient1 shot11 
104 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient1 ingredient4 dispenser1 
105 grasp left shot11 
106 clean-shot shot11 ingredient4 left right 
107 fill-shot shot11 ingredient1 left right dispenser1 
108 pour-shot-to-clean-shaker shot11 ingredient1 shaker1 left l0 l1 
109 clean-shot shot11 ingredient1 left right 
110 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 left shot11 
111 fill-shot shot11 ingredient2 left right dispenser2 
112 pour-shot-to-used-shaker shot11 ingredient2 shaker1 left l1 l2 
113 leave left shot11 
114 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient1 ingredient2 
115 __method_precondition_m5_do_clean_shot_5_precondition shot6 
116 nop  
117 grasp left shaker1 
118 shake cocktail4 ingredient1 ingredient2 shaker1 left right 
119 pour-shaker-to-shot cocktail4 shot6 left shaker1 l2 l1 
120 empty-shaker left shaker1 cocktail4 l1 l0 
121 clean-shaker left right shaker1 
122 leave left shaker1 
123 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
124 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient2 shot11 
125 __method_precondition_m7_do_fill_shot_7_precondition shot11 ingredient2 dispenser2 
126 grasp left shot11 
127 refill-shot shot11 ingredient2 left right dispenser2 
128 pour-shot-to-clean-shaker shot11 ingredient2 shaker1 left l0 l1 
129 clean-shot shot11 ingredient2 left right 
130 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient1 left shot11 
131 fill-shot shot11 ingredient1 left right dispenser1 
132 pour-shot-to-used-shaker shot11 ingredient1 shaker1 left l1 l2 
133 leave left shot11 
134 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient2 ingredient1 
135 __method_precondition_m5_do_clean_shot_5_precondition shot7 
136 nop  
137 grasp left shaker1 
138 shake cocktail3 ingredient2 ingredient1 shaker1 left right 
139 pour-shaker-to-shot cocktail3 shot7 left shaker1 l2 l1 
140 empty-shaker left shaker1 cocktail3 l1 l0 
141 clean-shaker left right shaker1 
142 leave left shaker1 
143 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
144 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient4 shot13 
145 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient1 dispenser4 
146 grasp right shot13 
147 clean-shot shot13 ingredient1 right left 
148 fill-shot shot13 ingredient4 right left dispenser4 
149 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 
150 clean-shot shot13 ingredient4 right left 
151 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient3 right shot13 
152 fill-shot shot13 ingredient3 right left dispenser3 
153 pour-shot-to-used-shaker shot13 ingredient3 shaker1 right l1 l2 
154 leave right shot13 
155 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient4 ingredient3 
156 __method_precondition_m5_do_clean_shot_5_precondition shot8 
157 nop  
158 grasp right shaker1 
159 shake cocktail9 ingredient4 ingredient3 shaker1 right left 
160 pour-shaker-to-shot cocktail9 shot8 right shaker1 l2 l1 
161 empty-shaker right shaker1 cocktail9 l1 l0 
162 clean-shaker right left shaker1 
163 leave right shaker1 
164 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
165 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot11 
166 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient3 ingredient1 dispenser3 
167 grasp right shot11 
168 clean-shot shot11 ingredient1 right left 
169 fill-shot shot11 ingredient3 right left dispenser3 
170 pour-shot-to-clean-shaker shot11 ingredient3 shaker1 right l0 l1 
171 clean-shot shot11 ingredient3 right left 
172 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient2 right shot11 
173 fill-shot shot11 ingredient2 right left dispenser2 
174 pour-shot-to-used-shaker shot11 ingredient2 shaker1 right l1 l2 
175 leave right shot11 
176 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient2 
177 __method_precondition_m5_do_clean_shot_5_precondition shot9 
178 nop  
179 grasp right shaker1 
180 shake cocktail8 ingredient3 ingredient2 shaker1 right left 
181 pour-shaker-to-shot cocktail8 shot9 right shaker1 l2 l1 
182 empty-shaker right shaker1 cocktail8 l1 l0 
183 clean-shaker right left shaker1 
184 leave right shaker1 
185 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
186 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient3 shot11 
187 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient3 ingredient2 dispenser3 
188 grasp left shot11 
189 clean-shot shot11 ingredient2 left right 
190 fill-shot shot11 ingredient3 left right dispenser3 
191 pour-shot-to-clean-shaker shot11 ingredient3 shaker1 left l0 l1 
192 clean-shot shot11 ingredient3 left right 
193 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient4 left shot11 
194 fill-shot shot11 ingredient4 left right dispenser4 
195 pour-shot-to-used-shaker shot11 ingredient4 shaker1 left l1 l2 
196 leave left shot11 
197 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient3 ingredient4 
198 __method_precondition_m5_do_clean_shot_5_precondition shot10 
199 nop  
200 grasp left shaker1 
201 shake cocktail1 ingredient3 ingredient4 shaker1 left right 
202 pour-shaker-to-shot cocktail1 shot10 left shaker1 l2 l1 
203 empty-shaker left shaker1 cocktail1 l1 l0 
204 clean-shaker left right shaker1 
205 leave left shaker1 
206 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser2 ingredient2 
207 __method_precondition_m9_do_fill_shot_9_precondition shot11 ingredient2 ingredient4 dispenser2 
208 grasp right shot11 
209 clean-shot shot11 ingredient4 right left 
210 fill-shot shot11 ingredient2 right left dispenser2 
211 leave right shot11 
212 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 left 
213 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient2 shot13 
214 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient2 ingredient3 dispenser2 
215 grasp left shot13 
216 clean-shot shot13 ingredient3 left right 
217 fill-shot shot13 ingredient2 left right dispenser2 
218 pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 
219 clean-shot shot13 ingredient2 left right 
220 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient1 left shot13 
221 fill-shot shot13 ingredient1 left right dispenser1 
222 pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 
223 leave left shot13 
224 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient2 ingredient1 
225 __method_precondition_m5_do_clean_shot_5_precondition shot12 
226 nop  
227 grasp right shaker1 
228 shake cocktail5 ingredient2 ingredient1 shaker1 right left 
229 pour-shaker-to-shot cocktail5 shot12 right shaker1 l2 l1 
230 empty-shaker right shaker1 cocktail5 l1 l0 
231 clean-shaker right left shaker1 
232 leave right shaker1 
root 253
233 do_cocktail_in_shot1 shot12 cocktail5  -> m0_do_cocktail_in_shot1 212 343 292 342
234 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 61 313 236 262
235 serve_shot shot3 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 51 279 54 55 56 57 58 59
236 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 66
237 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 130 290 341 133
238 serve_shot shot5 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 93 245 96 97 98 99 100 101
239 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient3 left  -> _m2_get_first_ingredient_4 192
240 do_fill_shot shot11 ingredient3 left  -> m7_do_fill_shot 42 43 44
241 do_clean_shot_m4_serve_shot_sip_2 shot12 left  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2> 225 226
242 do_fill_shot shot13 ingredient2 left  -> m8_do_fill_shot 2 3 4
243 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
244 do_fill_shot shot13 ingredient4 right  -> m9_do_fill_shot 145 146 147 148
245 do_clean_shot_m4_serve_shot_sip_2 shot5 left  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2> 94 95
246 get_first_ingredient cocktail2 left  -> m2_get_first_ingredient 21 307 257 270
247 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient4 left  -> _m3_get_second_ingredient_2 194
248 do_cocktail_in_shot1 shot10 cocktail1  -> m0_do_cocktail_in_shot1 185 325 258 338
249 get_second_ingredient cocktail8 right  -> m3_get_second_ingredient 172 337 287 175
250 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 156 157
251 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 195
252 do_cocktail_in_shot1 shot9 cocktail8  -> m0_do_cocktail_in_shot1 164 326 249 303
253 __choicelessATCompilation__top_1  -> __top_1 274 309 345 266 320 336 302 327 252 248 332 233
254 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail5,right];m5_do_clean_shot;0;-1,-2> 198 199
255 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 91
256 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient4 left  -> _m3_get_second_ingredient_2 69
257 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 25
258 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 193 247 251 196
259 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 110 271 344 113
260 do_fill_shot shot11 ingredient3 left  -> m9_do_fill_shot 187 188 189 190
261 do_fill_shot shot11 ingredient1 left  -> m9_do_fill_shot 104 105 106 107
262 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient1 left  -> _m2_get_first_ingredient_4 67
263 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 45
264 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 49
265 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient3 left  -> _m2_get_first_ingredient_4 46
266 do_cocktail_in_shot1 shot4 cocktail6  -> m0_do_cocktail_in_shot1 60 234 322 295
267 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient2 left  -> _m2_get_first_ingredient_4 6
268 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 218
269 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient1 left  -> _m2_get_first_ingredient_4 88
270 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient4 left  -> _m2_get_first_ingredient_4 26
271 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient2 left  -> _m3_get_second_ingredient_2 111
272 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 32 33
273 serve_shot shot6 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 114 306 117 118 119 120 121 122
274 do_cocktail_in_shot1 shot1 cocktail5  -> m0_do_cocktail_in_shot1 0 285 328 288
275 do_fill_shot shot11 ingredient2 right  -> m9_do_fill_shot 207 208 209 210
276 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 9
277 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 128
278 do_fill_shot shot13 ingredient2 left  -> m9_do_fill_shot 214 215 216 217
279 do_clean_shot_m4_serve_shot_sip_2 shot3 right  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2> 52 53
280 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 191
281 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient3 left  -> _m3_get_second_ingredient_2 28
282 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 5
283 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient3 right  -> _m2_get_first_ingredient_4 171
284 do_fill_shot shot11 ingredient1 left  -> m9_do_fill_shot 83 84 85 86
285 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 1 242 282 267
286 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 41 240 263 265
287 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 174
288 serve_shot shot1 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 243 14 15 16 17 18 19
289 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 right  -> _m3_get_second_ingredient_2 152
290 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient1 left  -> _m3_get_second_ingredient_2 131
291 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 144 244 304 315
292 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 220 334 330 223
293 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 124 331 277 310
294 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 153
295 serve_shot shot4 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 72 321 75 76 77 78 79 80
296 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient2 left  -> _m2_get_first_ingredient_4 219
297 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 103 261 324 340
298 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 87
299 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 29
300 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 151 289 294 154
301 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 82 284 298 269
302 do_cocktail_in_shot1 shot7 cocktail3  -> m0_do_cocktail_in_shot1 123 293 237 308
303 serve_shot shot9 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 176 335 179 180 181 182 183 184
304 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 149
305 serve_shot shot8 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 155 250 158 159 160 161 162 163
306 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 115 116
307 do_fill_shot shot11 ingredient4 left  -> m8_do_fill_shot 22 23 24
308 serve_shot shot7 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 134 316 137 138 139 140 141 142
309 do_cocktail_in_shot1 shot2 cocktail2  -> m0_do_cocktail_in_shot1 20 246 317 318
310 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient2 left  -> _m2_get_first_ingredient_4 129
311 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 89 319 255 92
312 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 170
313 do_fill_shot shot11 ingredient1 left  -> m9_do_fill_shot 62 63 64 65
314 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient4 left  -> _m3_get_second_ingredient_2 48
315 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 right  -> _m2_get_first_ingredient_4 150
316 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 135 136
317 get_second_ingredient cocktail2 left  -> m3_get_second_ingredient 27 281 299 30
318 serve_shot shot2 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 31 272 34 35 36 37 38 39
319 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient4 left  -> _m3_get_second_ingredient_2 90
320 do_cocktail_in_shot1 shot5 cocktail7  -> m0_do_cocktail_in_shot1 81 301 311 238
321 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail5,right];m5_do_clean_shot;0;-1,-2> 73 74
322 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 68 256 333 71
323 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 47 314 264 50
324 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot11 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 108
325 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 186 260 280 239
326 get_first_ingredient cocktail8 right  -> m2_get_first_ingredient 165 329 312 283
327 do_cocktail_in_shot1 shot8 cocktail9  -> m0_do_cocktail_in_shot1 143 291 300 305
328 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 7 339 276 10
329 do_fill_shot shot11 ingredient3 right  -> m9_do_fill_shot 166 167 168 169
330 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 222
331 do_fill_shot shot11 ingredient2 left  -> m7_do_fill_shot 125 126 127
332 do_cocktail_in_shot2 shot11 ingredient2  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 206 275 211
333 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 70
334 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 left  -> _m3_get_second_ingredient_2 221
335 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 177 178
336 do_cocktail_in_shot1 shot6 cocktail4  -> m0_do_cocktail_in_shot1 102 297 259 273
337 fill-shot_m3_get_second_ingredient_sip_2 shot11 ingredient2 right  -> _m3_get_second_ingredient_2 173
338 serve_shot shot10 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 197 254 200 201 202 203 204 205
339 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 left  -> _m3_get_second_ingredient_2 8
340 clean-shot_m2_get_first_ingredient_sip_4 shot11 ingredient1 left  -> _m2_get_first_ingredient_4 109
341 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 132
342 serve_shot shot12 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 224 241 227 228 229 230 231 232
343 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 213 278 268 296
344 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot11 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 112
345 do_cocktail_in_shot1 shot3 cocktail10  -> m0_do_cocktail_in_shot1 40 286 323 235

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 17.496 MEMPEAK_KBS 586828.8
