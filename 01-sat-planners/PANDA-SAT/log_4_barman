PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p04.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p04.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p04.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 37
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounded planning graph ... done in 491ms.
	Number of Grounded Actions 2013
	Number of Grounded Literals 327
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 37
Grounding ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 327
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 317ms.
	Number of Grounded Actions 1993
	Number of Grounded Literals 300
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 998
	number of tasks = 2991
	number of decomposition methods = 3589
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 161ms.
	Number of Grounded Actions 1993
	Number of Grounded Literals 300
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3285
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 694
	number of tasks = 2687
	number of decomposition methods = 3087
	number of predicates = 300
	number of sorts = 0
	number of tasks in largest method = 12
	number of primitive SHOP tasks = 768
	number of epsilon methods = 0
	number of primitive tasks = 1993
	number of constants = 0
Tasks 1993 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854769117ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854768828
done
initial PDT has 237 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 237 leafs
SHOP LEAFS 79
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 134550
Size 134543 at 0/1993
Size 133671 at 500/1993
Size 133647 at 1000/1993
Size 132989 at 1500/1993
Size 109883
Size 109855 at 0/1993
Size 108835 at 500/1993
Size 108825 at 1000/1993
Size 20427 at 1500/1993
Size 19315
Size 19048 at 0/1993
Size 11485 at 500/1993
Size 11481 at 1000/1993
Size 11476 at 1500/1993
Size 10538
Size 9811 at 0/1993
Size 2798 at 500/1993
Size 2798 at 1000/1993
Size 2759 at 1500/1993
Size 2718
Size 2718 at 0/1993
Size 2674 at 500/1993
Size 2674 at 1000/1993
Size 2674 at 1500/1993
Size 2674
Size 2664 at 0/1993
Size 2521 at 500/1993
Size 2521 at 1000/1993
Size 2521 at 1500/1993
Size 2521
Size 2521 at 0/1993
Size 2521 at 500/1993
Size 2521 at 1000/1993
Size 2521 at 1500/1993
Size 2521
Invariant time: 2.647
Number of invariants: 2521
Invariant Clauses 599998
NUMBER OF CLAUSES 956535
NUMBER OF STATE CLAUSES 802832
NUMBER OF DECOMPOSITION CLAUSES 153703
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.93% 16.07% 0.0% 
NUMBER OF PATHS 237
Starting cryptominisat5.5
Setting starttime of solver to 1604475178629
Command exited with non-zero status 10
0.51 0.02

Time command gave the following runtime for the solver: 530
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_5;3;1,473 473 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 247 pathaction!3_5;3;1,457
Consider method^1_1,797 797 m0_do_cocktail_in_shot1
1 118 pathaction!1_1,2335
Consider method^2_10;1,1579 1579 m2_get_first_ingredient
10;1 185 pathaction!2_10;1,7
Consider method^1_4,1145 1145 m0_do_cocktail_in_shot1
4 178 pathaction!1_4,2340
Consider method^3_9;1;3,2212 2212 _m2_get_first_ingredient_4
9;1;3 312 pathaction!3_9;1;3,1725
Consider method^2_2;3,656 656 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 164 pathaction!2_2;3,2328
Consider method^1_2,2770 2770 m0_do_cocktail_in_shot1
2 187 pathaction!1_2,2339
Consider method^2_7;1,2573 2573 m2_get_first_ingredient
7;1 208 pathaction!2_7;1,4
Consider method^3_1;1;2,138 138 _m2_get_first_ingredient_3
1;1;2 308 pathaction!3_1;1;2,1282
Consider method^1_8,1828 1828 m0_do_cocktail_in_shot1
8 154 pathaction!1_8,2332
Consider method^2_2;1,742 742 m2_get_first_ingredient
2;1 12 pathaction!2_2;1,7
Consider method^3_9;2;2,2325 2325 _m3_get_second_ingredient_3
9;2;2 217 pathaction!3_9;2;2,2395
Consider method^2_5;1,564 564 m2_get_first_ingredient
5;1 139 pathaction!2_5;1,12
Consider method^3_7;3;1,2467 2467 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2>
7;3;1 105 pathaction!3_7;3;1,443
Consider method^3_5;2;2,1266 1266 _m3_get_second_ingredient_3
5;2;2 273 pathaction!3_5;2;2,2403
Consider method^3_2;1;1,1120 1120 m9_do_fill_shot
2;1;1 188 pathaction!3_2;1;1,2645
Consider method^2_5;2,1269 1269 m3_get_second_ingredient
5;2 316 pathaction!2_5;2,420
Consider method^3_0;3;1,1339 1339 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 128 pathaction!3_0;3;1,450
Consider method^3_2;3;1,1773 1773 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 229 pathaction!3_2;3;1,460
Consider method^3_9;3;1,1862 1862 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail5,right];m5_do_clean_shot;0;-1,-2>
9;3;1 262 pathaction!3_9;3;1,458
Consider method^3_3;1;1,2410 2410 m9_do_fill_shot
3;1;1 285 pathaction!3_3;1;1,2559
Consider method^2_7;3,139 139 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 35 pathaction!2_7;3,2326
Consider method^3_5;1;2,66 66 _m2_get_first_ingredient_3
5;1;2 222 pathaction!3_5;1;2,1259
Consider method^1_9,236 236 m0_do_cocktail_in_shot1
9 324 pathaction!1_9,2338
Consider method^3_9;2;1,2977 2977 _m3_get_second_ingredient_2
9;2;1 111 pathaction!3_9;2;1,2451
Consider method^3_8;2;1,1217 1217 _m3_get_second_ingredient_2
8;2;1 205 pathaction!3_8;2;1,2470
Consider method^3_1;2;1,1350 1350 _m3_get_second_ingredient_2
1;2;1 143 pathaction!3_1;2;1,2484
Consider method^3_4;1;3,1671 1671 _m2_get_first_ingredient_4
4;1;3 232 pathaction!3_4;1;3,1753
Consider method^2_4;1,724 724 m2_get_first_ingredient
4;1 249 pathaction!2_4;1,9
Consider method^3_10;3;1,590 590 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 116 pathaction!3_10;3;1,455
Consider method^2_0;2,2403 2403 m3_get_second_ingredient
0;2 32 pathaction!2_0;2,414
Consider method^3_2;2;2,622 622 _m3_get_second_ingredient_3
2;2;2 186 pathaction!3_2;2;2,2384
Consider method^3_4;2;1,2638 2638 _m3_get_second_ingredient_2
4;2;1 211 pathaction!3_4;2;1,2533
Consider method^2_4;2,126 126 m3_get_second_ingredient
4;2 76 pathaction!2_4;2,417
Consider method^3_0;1;3,1390 1390 _m2_get_first_ingredient_4
0;1;3 80 pathaction!3_0;1;3,1714
Consider method^2_8;2,305 305 m3_get_second_ingredient
8;2 8 pathaction!2_8;2,413
Consider method^3_9;1;1,1078 1078 m9_do_fill_shot
9;1;1 125 pathaction!3_9;1;1,2570
Consider method^1_10,135 135 m0_do_cocktail_in_shot1
10 61 pathaction!1_10,2330
Consider method^3_2;2;1,1217 1217 _m3_get_second_ingredient_2
2;2;1 342 pathaction!3_2;2;1,2470
Consider method^3_6;1;3,1521 1521 _m2_get_first_ingredient_4
6;1;3 223 pathaction!3_6;1;3,1749
Consider method^3_9;1;2,66 66 _m2_get_first_ingredient_3
9;1;2 37 pathaction!3_9;1;2,1259
Consider method^3_6;2;1,2977 2977 _m3_get_second_ingredient_2
6;2;1 307 pathaction!3_6;2;1,2451
Consider method^3_1;3;1,2793 2793 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 207 pathaction!3_1;3;1,459
Consider method^3_6;3;1,1684 1684 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 176 pathaction!3_6;3;1,448
Consider method^2_1;3,2276 2276 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 43 pathaction!2_1;3,2324
Consider method^3_7;1;3,1831 1831 _m2_get_first_ingredient_4
7;1;3 98 pathaction!3_7;1;3,1713
Consider method^2_11;1,1954 1954 m9_do_fill_shot
11;1 78 pathaction!2_11;1,2629
Consider method^3_5;1;3,2212 2212 _m2_get_first_ingredient_4
5;1;3 103 pathaction!3_5;1;3,1725
Consider method^1_0,2379 2379 m0_do_cocktail_in_shot1
0 301 pathaction!1_0,2336
Consider method^3_3;1;3,1390 1390 _m2_get_first_ingredient_4
3;1;3 313 pathaction!3_3;1;3,1714
Consider method^2_2;2,814 814 m3_get_second_ingredient
2;2 90 pathaction!2_2;2,415
Consider method^2_8;1,2282 2282 m2_get_first_ingredient
8;1 303 pathaction!2_8;1,5
Consider method^3_3;2;1,153 153 _m3_get_second_ingredient_2
3;2;1 65 pathaction!3_3;2;1,2486
Consider method^3_0;2;2,1331 1331 _m3_get_second_ingredient_3
0;2;2 244 pathaction!3_0;2;2,2399
Consider method^3_8;1;3,718 718 _m2_get_first_ingredient_4
8;1;3 243 pathaction!3_8;1;3,1800
Consider method^3_2;1;3,718 718 _m2_get_first_ingredient_4
2;1;3 153 pathaction!3_2;1;3,1800
Consider method^2_3;1,2251 2251 m2_get_first_ingredient
3;1 169 pathaction!2_3;1,19
Consider method^3_8;3;1,2825 2825 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2>
8;3;1 344 pathaction!3_8;3;1,447
Consider method^2_4;3,2772 2772 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 261 pathaction!2_4;3,2329
Consider method^3_7;1;1,1391 1391 m9_do_fill_shot
7;1;1 198 pathaction!3_7;1;1,2558
Consider method^2_9;1,2338 2338 m2_get_first_ingredient
9;1 191 pathaction!2_9;1,18
Consider method^3_10;1;1,1351 1351 m9_do_fill_shot
10;1;1 174 pathaction!3_10;1;1,2594
Consider method^2_3;3,2665 2665 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 165 pathaction!2_3;3,2320
Consider method^3_4;3;1,2743 2743 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2>
4;3;1 158 pathaction!3_4;3;1,444
Consider method^3_8;1;2,138 138 _m2_get_first_ingredient_3
8;1;2 230 pathaction!3_8;1;2,1282
Consider method^2_0;3,371 371 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 74 pathaction!2_0;3,2325
Consider method^3_6;1;2,902 902 _m2_get_first_ingredient_3
6;1;2 237 pathaction!3_6;1;2,1250
Consider method^1_5,2048 2048 m0_do_cocktail_in_shot1
5 236 pathaction!1_5,2334
Consider method^3_1;2;2,1533 1533 _m3_get_second_ingredient_3
1;2;2 11 pathaction!3_1;2;2,2371
Consider method^3_7;2;1,1652 1652 _m3_get_second_ingredient_2
7;2;1 239 pathaction!3_7;2;1,2537
Consider method^2_7;2,1 1 m3_get_second_ingredient
7;2 340 pathaction!2_7;2,412
Consider method^1_3,568 568 m0_do_cocktail_in_shot1
3 181 pathaction!1_3,2331
Consider method^2_6;1,2863 2863 m2_get_first_ingredient
6;1 110 pathaction!2_6;1,3
Consider method^3_6;2;2,2325 2325 _m3_get_second_ingredient_3
6;2;2 18 pathaction!3_6;2;2,2395
Consider method^3_6;1;1,2916 2916 m7_do_fill_shot
6;1;1 337 pathaction!3_6;1;1,2594
Consider method^3_3;1;2,813 813 _m2_get_first_ingredient_3
3;1;2 284 pathaction!3_3;1;2,1242
Consider method^2_10;3,2259 2259 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 332 pathaction!2_10;3,2319
Consider method^2_1;2,2102 2102 m3_get_second_ingredient
1;2 156 pathaction!2_1;2,422
Consider method^3_4;2;2,1199 1199 _m3_get_second_ingredient_3
4;2;2 331 pathaction!3_4;2;2,2418
Consider method^2_9;3,2174 2174 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 106 pathaction!2_9;3,2327
Consider method^1_6,905 905 m0_do_cocktail_in_shot1
6 24 pathaction!1_6,2333
Consider method^2_3;2,2555 2555 m3_get_second_ingredient
3;2 30 pathaction!2_3;2,427
Consider method^3_3;3;1,880 880 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail5,right];m5_do_clean_shot;0;-1,-2>
3;3;1 322 pathaction!3_3;3;1,456
Consider method^3_10;1;3,1521 1521 _m2_get_first_ingredient_4
10;1;3 127 pathaction!3_10;1;3,1749
Consider method^3_2;1;2,138 138 _m2_get_first_ingredient_3
2;1;2 277 pathaction!3_2;1;2,1282
Consider method^3_8;1;1,2395 2395 m7_do_fill_shot
8;1;1 134 pathaction!3_8;1;1,2645
Consider method^3_7;2;2,1660 1660 _m3_get_second_ingredient_3
7;2;2 306 pathaction!3_7;2;2,2435
Consider method^3_5;2;1,153 153 _m3_get_second_ingredient_2
5;2;1 112 pathaction!3_5;2;1,2486
Consider method^3_1;1;3,718 718 _m2_get_first_ingredient_4
1;1;3 168 pathaction!3_1;1;3,1800
Consider method^1_11,2132 2132 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
11 196 pathaction!1_11,0
Consider method^2_0;1,1909 1909 m2_get_first_ingredient
0;1 310 pathaction!2_0;1,6
Consider method^3_10;2;1,1295 1295 _m3_get_second_ingredient_2
10;2;1 160 pathaction!3_10;2;1,2462
Consider method^2_6;3,41 41 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 282 pathaction!2_6;3,2322
Consider method^3_5;1;1,2162 2162 m9_do_fill_shot
5;1;1 343 pathaction!3_5;1;1,2570
Consider method^3_0;1;2,813 813 _m2_get_first_ingredient_3
0;1;2 83 pathaction!3_0;1;2,1242
Consider method^3_3;2;2,1266 1266 _m3_get_second_ingredient_3
3;2;2 36 pathaction!3_3;2;2,2403
Consider method^3_0;1;1,468 468 m8_do_fill_shot
0;1;1 33 pathaction!3_0;1;1,2559
Consider method^3_0;2;1,231 231 _m3_get_second_ingredient_2
0;2;1 72 pathaction!3_0;2;1,2529
Consider method^2_10;2,2972 2972 m3_get_second_ingredient
10;2 0 pathaction!2_10;2,415
Consider method^2_8;3,2215 2215 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 59 pathaction!2_8;3,2321
Consider method^2_6;2,824 824 m3_get_second_ingredient
6;2 242 pathaction!2_6;2,411
Consider method^3_10;1;2,902 902 _m2_get_first_ingredient_3
10;1;2 171 pathaction!3_10;1;2,1250
Consider method^1_7,1518 1518 m0_do_cocktail_in_shot1
7 292 pathaction!1_7,2337
Consider method^3_4;1;2,1314 1314 _m2_get_first_ingredient_3
4;1;2 161 pathaction!3_4;1;2,1206
Consider method^3_4;1;1,1071 1071 m9_do_fill_shot
4;1;1 190 pathaction!3_4;1;1,2598
Consider method^3_1;1;1,2161 2161 m8_do_fill_shot
1;1;1 296 pathaction!3_1;1;1,2645
Consider method^2_5;3,2186 2186 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 291 pathaction!2_5;3,2323
Consider method^3_7;1;2,2490 2490 _m2_get_first_ingredient_3
7;1;2 21 pathaction!3_7;1;2,1199
Consider method^3_10;2;2,320 320 _m3_get_second_ingredient_3
10;2;2 270 pathaction!3_10;2;2,2412
Consider method^0_,3086 3086 __top_1
 62 pathaction!0_,2686
Consider method^3_8;2;2,622 622 _m3_get_second_ingredient_3
8;2;2 150 pathaction!3_8;2;2,2384
Consider method^2_1;1,2997 2997 m2_get_first_ingredient
1;1 280 pathaction!2_1;1,14
Consider method^2_9;2,1153 1153 m3_get_second_ingredient
9;2 84 pathaction!2_9;2,426


CHECKING primitive solution of length 233 ...
true 293 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 101 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot13;]
true 40 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3;]
true 54 grasp[left,shot13;]
true 294 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 259 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 117 clean-shot[shot13,ingredient3,left,right;]
true 201 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot13;]
true 323 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 199 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 192 leave[left,shot13;]
true 179 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient2;]
true 81 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 254 nop[;]
true 113 grasp[left,shaker1;]
true 290 shake[cocktail4,ingredient3,ingredient2,shaker1,left,right;]
true 104 pour-shaker-to-shot[cocktail4,shot1,left,shaker1,l2,l1;]
true 200 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 255 clean-shaker[left,right,shaker1;]
true 233 leave[left,shaker1;]
true 328 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 82 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot12;]
true 245 __method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser1,ingredient1;]
true 268 grasp[left,shot12;]
true 166 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 102 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1;]
true 336 clean-shot[shot12,ingredient1,left,right;]
true 46 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,left,shot12;]
true 135 fill-shot[shot12,ingredient2,left,right,dispenser2;]
true 119 pour-shot-to-used-shaker[shot12,ingredient2,shaker1,left,l1,l2;]
true 52 leave[left,shot12;]
true 162 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient2;]
true 320 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 318 nop[;]
true 108 grasp[right,shaker1;]
true 327 shake[cocktail5,ingredient1,ingredient2,shaker1,right,left;]
true 345 pour-shaker-to-shot[cocktail5,shot2,right,shaker1,l2,l1;]
true 334 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 335 clean-shaker[right,left,shaker1;]
true 295 leave[right,shaker1;]
true 47 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 51 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot12;]
true 136 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient2,dispenser1;]
true 79 grasp[left,shot12;]
true 315 clean-shot[shot12,ingredient2,left,right;]
true 227 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 16 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1;]
true 4 clean-shot[shot12,ingredient1,left,right;]
true 170 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot12;]
true 241 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 44 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2;]
true 91 leave[left,shot12;]
true 147 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4;]
true 226 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 194 nop[;]
true 300 grasp[right,shaker1;]
true 321 shake[cocktail10,ingredient1,ingredient4,shaker1,right,left;]
true 314 pour-shaker-to-shot[cocktail10,shot3,right,shaker1,l2,l1;]
true 27 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 130 clean-shaker[right,left,shaker1;]
true 265 leave[right,shaker1;]
true 287 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 9 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot13;]
true 271 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient2,dispenser3;]
true 276 grasp[left,shot13;]
true 330 clean-shot[shot13,ingredient2,left,right;]
true 87 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 206 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 109 clean-shot[shot13,ingredient3,left,right;]
true 231 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,left,shot13;]
true 257 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 66 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 145 leave[left,shot13;]
true 126 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient1;]
true 96 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 326 nop[;]
true 42 grasp[left,shaker1;]
true 288 shake[cocktail8,ingredient3,ingredient1,shaker1,left,right;]
true 210 pour-shaker-to-shot[cocktail8,shot4,left,shaker1,l2,l1;]
true 67 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 22 clean-shaker[left,right,shaker1;]
true 238 leave[left,shaker1;]
true 329 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 269 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot12;]
true 177 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient2,ingredient4,dispenser2;]
true 132 grasp[right,shot12;]
true 20 clean-shot[shot12,ingredient4,right,left;]
true 258 fill-shot[shot12,ingredient2,right,left,dispenser2;]
true 253 pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,right,l0,l1;]
true 219 clean-shot[shot12,ingredient2,right,left;]
true 115 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,right,shot12;]
true 203 fill-shot[shot12,ingredient1,right,left,dispenser1;]
true 99 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,right,l1,l2;]
true 92 leave[right,shot12;]
true 157 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient1;]
true 122 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 234 nop[;]
true 283 grasp[right,shaker1;]
true 216 shake[cocktail9,ingredient2,ingredient1,shaker1,right,left;]
true 297 pour-shaker-to-shot[cocktail9,shot5,right,shaker1,l2,l1;]
true 159 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 248 clean-shaker[right,left,shaker1;]
true 142 leave[right,shaker1;]
true 19 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 298 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot13;]
true 86 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient1,dispenser4;]
true 100 grasp[left,shot13;]
true 70 clean-shot[shot13,ingredient1,left,right;]
true 175 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 45 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1;]
true 266 clean-shot[shot13,ingredient4,left,right;]
true 317 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot13;]
true 7 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 93 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2;]
true 144 leave[left,shot13;]
true 2 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1;]
true 286 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 204 nop[;]
true 182 grasp[left,shaker1;]
true 155 shake[cocktail6,ingredient4,ingredient1,shaker1,left,right;]
true 141 pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1;]
true 123 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 94 clean-shaker[left,right,shaker1;]
true 56 leave[left,shaker1;]
true 264 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 71 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot13;]
true 63 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient1,dispenser1;]
true 341 grasp[left,shot13;]
true 29 refill-shot[shot13,ingredient1,left,right,dispenser1;]
true 267 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 5 clean-shot[shot13,ingredient1,left,right;]
true 50 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot13;]
true 189 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 256 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 55 leave[left,shot13;]
true 138 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient3;]
true 218 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 224 nop[;]
true 1 grasp[left,shaker1;]
true 129 shake[cocktail3,ingredient1,ingredient3,shaker1,left,right;]
true 193 pour-shaker-to-shot[cocktail3,shot7,left,shaker1,l2,l1;]
true 333 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 57 clean-shaker[left,right,shaker1;]
true 28 leave[left,shaker1;]
true 274 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 97 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot12;]
true 152 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient1,dispenser3;]
true 15 grasp[left,shot12;]
true 235 clean-shot[shot12,ingredient1,left,right;]
true 58 fill-shot[shot12,ingredient3,left,right,dispenser3;]
true 184 pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,left,l0,l1;]
true 289 clean-shot[shot12,ingredient3,left,right;]
true 212 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,left,shot12;]
true 263 fill-shot[shot12,ingredient1,left,right,dispenser1;]
true 279 pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2;]
true 180 leave[left,shot12;]
true 13 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1;]
true 172 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 85 nop[;]
true 49 grasp[left,shaker1;]
true 89 shake[cocktail1,ingredient3,ingredient1,shaker1,left,right;]
true 146 pour-shaker-to-shot[cocktail1,shot8,left,shaker1,l2,l1;]
true 73 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 140 clean-shaker[left,right,shaker1;]
true 209 leave[left,shaker1;]
true 69 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 114 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot12;]
true 68 __method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient1,dispenser1;]
true 25 grasp[left,shot12;]
true 246 refill-shot[shot12,ingredient1,left,right,dispenser1;]
true 183 pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1;]
true 77 clean-shot[shot12,ingredient1,left,right;]
true 64 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,left,shot12;]
true 133 fill-shot[shot12,ingredient4,left,right,dispenser4;]
true 53 pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2;]
true 34 leave[left,shot12;]
true 60 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient4;]
true 215 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 131 nop[;]
true 221 grasp[left,shaker1;]
true 124 shake[cocktail7,ingredient1,ingredient4,shaker1,left,right;]
true 311 pour-shaker-to-shot[cocktail7,shot9,left,shaker1,l2,l1;]
true 48 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 41 clean-shaker[left,right,shaker1;]
true 260 leave[left,shaker1;]
true 213 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 17 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13;]
true 23 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient3,dispenser4;]
true 3 grasp[left,shot13;]
true 251 clean-shot[shot13,ingredient3,left,right;]
true 6 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 38 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1;]
true 214 clean-shot[shot13,ingredient4,left,right;]
true 26 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot13;]
true 202 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 39 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 325 leave[left,shot13;]
true 305 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 120 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 75 nop[;]
true 319 grasp[left,shaker1;]
true 121 shake[cocktail2,ingredient4,ingredient3,shaker1,left,right;]
true 10 pour-shaker-to-shot[cocktail2,shot10,left,shaker1,l2,l1;]
true 88 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 107 clean-shaker[left,right,shaker1;]
true 31 leave[left,shaker1;]
true 272 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 250 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot13;]
true 220 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient3,dispenser1;]
true 275 grasp[left,shot13;]
true 252 clean-shot[shot13,ingredient3,left,right;]
true 95 fill-shot[shot13,ingredient1,left,right,dispenser1;]
true 148 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 195 clean-shot[shot13,ingredient1,left,right;]
true 304 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot13;]
true 149 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 14 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2;]
true 163 leave[left,shot13;]
true 240 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4;]
true 228 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 281 nop[;]
true 151 grasp[right,shaker1;]
true 302 shake[cocktail10,ingredient1,ingredient4,shaker1,right,left;]
true 225 pour-shaker-to-shot[cocktail10,shot11,right,shaker1,l2,l1;]
true 278 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 197 clean-shaker[right,left,shaker1;]
true 137 leave[right,shaker1;]
true 173 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3;]
true 339 __method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient4,dispenser3;]
true 338 grasp[right,shot12;]
true 299 clean-shot[shot12,ingredient4,right,left;]
true 309 fill-shot[shot12,ingredient3,right,left,dispenser3;]
true 167 leave[right,shot12;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 386707584
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 300
number of actions                    = 2687
number of abstract actions           = 694
number of primitive actions          = 1993
number of methods                    = 3087
number of primitive shop actions     = 768
number of primitive non-shop actions = 1225
size of largest method               = 12
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 194994
number of clauses               = 956535
average size of clauses         = 2.3775491748864392
number of assert                = 136
number of horn                  = 835653
K offset                        = 0
K chosen value                  = 4
state formula                   = 802832
method children clauses         = 0
number of paths                 = 237
maximum plan length             = 237
number of decomposition clauses = 153703
number of ordering clauses      = 0
number of state clauses         = 802832
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 14991
============ parsing ============
total                         = 1117
file parser                   = 610
sort expansion                = 226
closed world assumption       = 123
inherit preconditions         = 0
shop methods                  = 29
eliminate identical variables = 51
strip domain of hybridity     = 2
flatten formula               = 76
============ preprocessing ============
total                                      = 5132
compile negative preconditions             = 32
compile unit methods                       = 0
split parameter                            = 62
expand choiceless abstract tasks           = 550
compile methods with identical tasks       = 25
removing unnecessary predicates            = 772
lifted reachabiltiy analysis               = 63
grounded planning graph analysis           = 1371
grounded task decomposition graph analysis = 1661
grounding                                  = 547
create artificial top task                 = 6
============ search preparation ============
compute state invariants = 2870
============ sat ============
total                                        = 6547
generate formula                             = 5447
generate path decomposition tree             = 311
normalise path decomposition tree            = 79
sog optimisation                             = 74
translate path decomposition tree to clauses = 662
generate state formula                       = 5388
generate state invariant formula             = 394
transform to DIMACS                          = 363
SAT solver                                   = 530
SAT solver for K=0004                        = 530

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="1993";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="694";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="386707584";"40 sat:20:state formula"="802832";"40 sat:01:number of variables"="194994";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="237";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="3087";"30 problem:07:number of primitive shop actions"="768";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="2687";"30 problem:08:number of primitive non-shop actions"="1225";"30 problem:02:number of predicates"="300";"40 sat:03:number of horn"="835653";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="12";"40 sat:03:average size of clauses"="2.3775491748864392";"40 sat:02:number of clauses"="956535";"40 sat:50:number of state clauses"="802832";"40 sat:03:number of assert"="136";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="237";"40 sat:50:number of decomposition clauses"="153703";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="610";"01 parsing:08:flatten formula"="76";"40 sat:41:SAT solver for K=0004"="530";"40 sat:00:total"="6547";"40 sat:16:generate state formula"="5388";"40 sat:20:transform to DIMACS"="363";"40 sat:11:generate path decomposition tree"="311";"02 preprocessing:07:compile methods with identical tasks"="25";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="772";"01 parsing:03:closed world assumption"="123";"02 preprocessing:11:lifted reachabiltiy analysis"="63";"01 parsing:02:sort expansion"="226";"40 sat:12:normalise path decomposition tree"="79";"40 sat:40:SAT solver"="530";"01 parsing:00:total"="1117";"40 sat:10:generate formula"="5447";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="32";"00 total:00:total"="14991";"40 sat:13:sog optimisation"="74";"02 preprocessing:12:grounded planning graph analysis"="1371";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1661";"02 preprocessing:04:split parameter"="62";"01 parsing:05:shop methods"="29";"10 search preparation:02:compute state invariants"="2870";"01 parsing:06:eliminate identical variables"="51";"40 sat:15:translate path decomposition tree to clauses"="662";"02 preprocessing:05:expand choiceless abstract tasks"="550";"40 sat:17:generate state invariant formula"="394";"02 preprocessing:00:total"="5132";"02 preprocessing:99:create artificial top task"="6";"02 preprocessing:84:grounding"="547"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3];grasp[left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1];clean-shot[shot13,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,left,shot13];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail4,ingredient3,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail4,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail4,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot12];__method_precondition_m8_do_fill_shot_8_precondition[shot12,dispenser1,ingredient1];grasp[left,shot12];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1];clean-shot[shot12,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,left,shot12];fill-shot[shot12,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot12,ingredient2,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail5,ingredient1,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient1,ingredient2,dispenser1];grasp[left,shot12];clean-shot[shot12,ingredient2,left,right];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1];clean-shot[shot12,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot12];fill-shot[shot12,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail10,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient2,dispenser3];grasp[left,shot13];clean-shot[shot13,ingredient2,left,right];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1];clean-shot[shot13,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,left,shot13];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail8,ingredient3,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail8,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail8,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient2,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient2,ingredient4,dispenser2];grasp[right,shot12];clean-shot[shot12,ingredient4,right,left];fill-shot[shot12,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot12,ingredient2,shaker1,right,l0,l1];clean-shot[shot12,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient1,right,shot12];fill-shot[shot12,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot12,ingredient1,shaker1,right,l1,l2];leave[right,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient2,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[right,shaker1];shake[cocktail9,ingredient2,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot5,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient1,dispenser4];grasp[left,shot13];clean-shot[shot13,ingredient1,left,right];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1];clean-shot[shot13,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,left,shot13];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail6,ingredient4,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot13];__method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient1,dispenser1];grasp[left,shot13];refill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1];clean-shot[shot13,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail3,ingredient1,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot12];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient1,dispenser3];grasp[left,shot12];clean-shot[shot12,ingredient1,left,right];fill-shot[shot12,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot12,ingredient3,shaker1,left,l0,l1];clean-shot[shot12,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,left,shot12];fill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-used-shaker[shot12,ingredient1,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[left,shaker1];shake[cocktail1,ingredient3,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot8,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot12];__method_precondition_m7_do_fill_shot_7_precondition[shot12,ingredient1,dispenser1];grasp[left,shot12];refill-shot[shot12,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot12,ingredient1,shaker1,left,l0,l1];clean-shot[shot12,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient4,left,shot12];fill-shot[shot12,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot12,ingredient4,shaker1,left,l1,l2];leave[left,shot12];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[left,shaker1];shake[cocktail7,ingredient1,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot9,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient3,dispenser4];grasp[left,shot13];clean-shot[shot13,ingredient3,left,right];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1];clean-shot[shot13,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail2,ingredient4,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail2,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail2,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient3,dispenser1];grasp[left,shot13];clean-shot[shot13,ingredient3,left,right];fill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1];clean-shot[shot13,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot13];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail10,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser3,ingredient3];__method_precondition_m9_do_fill_shot_9_precondition[shot12,ingredient3,ingredient4,dispenser3];grasp[right,shot12];clean-shot[shot12,ingredient4,right,left];fill-shot[shot12,ingredient3,right,left,dispenser3];leave[right,shot12]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient3 shot13 
2 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser3 ingredient3 
3 grasp left shot13 
4 fill-shot shot13 ingredient3 left right dispenser3 
5 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 
6 clean-shot shot13 ingredient3 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 left shot13 
8 fill-shot shot13 ingredient2 left right dispenser2 
9 pour-shot-to-used-shaker shot13 ingredient2 shaker1 left l1 l2 
10 leave left shot13 
11 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient3 ingredient2 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail4 ingredient3 ingredient2 shaker1 left right 
16 pour-shaker-to-shot cocktail4 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail4 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 left 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient1 shot12 
22 __method_precondition_m8_do_fill_shot_8_precondition shot12 dispenser1 ingredient1 
23 grasp left shot12 
24 fill-shot shot12 ingredient1 left right dispenser1 
25 pour-shot-to-clean-shaker shot12 ingredient1 shaker1 left l0 l1 
26 clean-shot shot12 ingredient1 left right 
27 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient2 left shot12 
28 fill-shot shot12 ingredient2 left right dispenser2 
29 pour-shot-to-used-shaker shot12 ingredient2 shaker1 left l1 l2 
30 leave left shot12 
31 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient1 ingredient2 
32 __method_precondition_m5_do_clean_shot_5_precondition shot2 
33 nop  
34 grasp right shaker1 
35 shake cocktail5 ingredient1 ingredient2 shaker1 right left 
36 pour-shaker-to-shot cocktail5 shot2 right shaker1 l2 l1 
37 empty-shaker right shaker1 cocktail5 l1 l0 
38 clean-shaker right left shaker1 
39 leave right shaker1 
40 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
41 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot12 
42 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient1 ingredient2 dispenser1 
43 grasp left shot12 
44 clean-shot shot12 ingredient2 left right 
45 fill-shot shot12 ingredient1 left right dispenser1 
46 pour-shot-to-clean-shaker shot12 ingredient1 shaker1 left l0 l1 
47 clean-shot shot12 ingredient1 left right 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient4 left shot12 
49 fill-shot shot12 ingredient4 left right dispenser4 
50 pour-shot-to-used-shaker shot12 ingredient4 shaker1 left l1 l2 
51 leave left shot12 
52 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient4 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp right shaker1 
56 shake cocktail10 ingredient1 ingredient4 shaker1 right left 
57 pour-shaker-to-shot cocktail10 shot3 right shaker1 l2 l1 
58 empty-shaker right shaker1 cocktail10 l1 l0 
59 clean-shaker right left shaker1 
60 leave right shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot13 
63 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient3 ingredient2 dispenser3 
64 grasp left shot13 
65 clean-shot shot13 ingredient2 left right 
66 fill-shot shot13 ingredient3 left right dispenser3 
67 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 
68 clean-shot shot13 ingredient3 left right 
69 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient1 left shot13 
70 fill-shot shot13 ingredient1 left right dispenser1 
71 pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 
72 leave left shot13 
73 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient1 
74 __method_precondition_m5_do_clean_shot_5_precondition shot4 
75 nop  
76 grasp left shaker1 
77 shake cocktail8 ingredient3 ingredient1 shaker1 left right 
78 pour-shaker-to-shot cocktail8 shot4 left shaker1 l2 l1 
79 empty-shaker left shaker1 cocktail8 l1 l0 
80 clean-shaker left right shaker1 
81 leave left shaker1 
82 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 right 
83 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient2 shot12 
84 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient2 ingredient4 dispenser2 
85 grasp right shot12 
86 clean-shot shot12 ingredient4 right left 
87 fill-shot shot12 ingredient2 right left dispenser2 
88 pour-shot-to-clean-shaker shot12 ingredient2 shaker1 right l0 l1 
89 clean-shot shot12 ingredient2 right left 
90 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient1 right shot12 
91 fill-shot shot12 ingredient1 right left dispenser1 
92 pour-shot-to-used-shaker shot12 ingredient1 shaker1 right l1 l2 
93 leave right shot12 
94 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient2 ingredient1 
95 __method_precondition_m5_do_clean_shot_5_precondition shot5 
96 nop  
97 grasp right shaker1 
98 shake cocktail9 ingredient2 ingredient1 shaker1 right left 
99 pour-shaker-to-shot cocktail9 shot5 right shaker1 l2 l1 
100 empty-shaker right shaker1 cocktail9 l1 l0 
101 clean-shaker right left shaker1 
102 leave right shaker1 
103 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
104 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient4 shot13 
105 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient1 dispenser4 
106 grasp left shot13 
107 clean-shot shot13 ingredient1 left right 
108 fill-shot shot13 ingredient4 left right dispenser4 
109 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 left l0 l1 
110 clean-shot shot13 ingredient4 left right 
111 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient1 left shot13 
112 fill-shot shot13 ingredient1 left right dispenser1 
113 pour-shot-to-used-shaker shot13 ingredient1 shaker1 left l1 l2 
114 leave left shot13 
115 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient4 ingredient1 
116 __method_precondition_m5_do_clean_shot_5_precondition shot6 
117 nop  
118 grasp left shaker1 
119 shake cocktail6 ingredient4 ingredient1 shaker1 left right 
120 pour-shaker-to-shot cocktail6 shot6 left shaker1 l2 l1 
121 empty-shaker left shaker1 cocktail6 l1 l0 
122 clean-shaker left right shaker1 
123 leave left shaker1 
124 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
125 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient1 shot13 
126 __method_precondition_m7_do_fill_shot_7_precondition shot13 ingredient1 dispenser1 
127 grasp left shot13 
128 refill-shot shot13 ingredient1 left right dispenser1 
129 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 left l0 l1 
130 clean-shot shot13 ingredient1 left right 
131 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient3 left shot13 
132 fill-shot shot13 ingredient3 left right dispenser3 
133 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
134 leave left shot13 
135 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient1 ingredient3 
136 __method_precondition_m5_do_clean_shot_5_precondition shot7 
137 nop  
138 grasp left shaker1 
139 shake cocktail3 ingredient1 ingredient3 shaker1 left right 
140 pour-shaker-to-shot cocktail3 shot7 left shaker1 l2 l1 
141 empty-shaker left shaker1 cocktail3 l1 l0 
142 clean-shaker left right shaker1 
143 leave left shaker1 
144 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 left 
145 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient3 shot12 
146 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient3 ingredient1 dispenser3 
147 grasp left shot12 
148 clean-shot shot12 ingredient1 left right 
149 fill-shot shot12 ingredient3 left right dispenser3 
150 pour-shot-to-clean-shaker shot12 ingredient3 shaker1 left l0 l1 
151 clean-shot shot12 ingredient3 left right 
152 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient1 left shot12 
153 fill-shot shot12 ingredient1 left right dispenser1 
154 pour-shot-to-used-shaker shot12 ingredient1 shaker1 left l1 l2 
155 leave left shot12 
156 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient3 ingredient1 
157 __method_precondition_m5_do_clean_shot_5_precondition shot8 
158 nop  
159 grasp left shaker1 
160 shake cocktail1 ingredient3 ingredient1 shaker1 left right 
161 pour-shaker-to-shot cocktail1 shot8 left shaker1 l2 l1 
162 empty-shaker left shaker1 cocktail1 l1 l0 
163 clean-shaker left right shaker1 
164 leave left shaker1 
165 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 left 
166 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient1 shot12 
167 __method_precondition_m7_do_fill_shot_7_precondition shot12 ingredient1 dispenser1 
168 grasp left shot12 
169 refill-shot shot12 ingredient1 left right dispenser1 
170 pour-shot-to-clean-shaker shot12 ingredient1 shaker1 left l0 l1 
171 clean-shot shot12 ingredient1 left right 
172 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient4 left shot12 
173 fill-shot shot12 ingredient4 left right dispenser4 
174 pour-shot-to-used-shaker shot12 ingredient4 shaker1 left l1 l2 
175 leave left shot12 
176 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient1 ingredient4 
177 __method_precondition_m5_do_clean_shot_5_precondition shot9 
178 nop  
179 grasp left shaker1 
180 shake cocktail7 ingredient1 ingredient4 shaker1 left right 
181 pour-shaker-to-shot cocktail7 shot9 left shaker1 l2 l1 
182 empty-shaker left shaker1 cocktail7 l1 l0 
183 clean-shaker left right shaker1 
184 leave left shaker1 
185 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
186 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot13 
187 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient3 dispenser4 
188 grasp left shot13 
189 clean-shot shot13 ingredient3 left right 
190 fill-shot shot13 ingredient4 left right dispenser4 
191 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 left l0 l1 
192 clean-shot shot13 ingredient4 left right 
193 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 left shot13 
194 fill-shot shot13 ingredient3 left right dispenser3 
195 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
196 leave left shot13 
197 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient3 
198 __method_precondition_m5_do_clean_shot_5_precondition shot10 
199 nop  
200 grasp left shaker1 
201 shake cocktail2 ingredient4 ingredient3 shaker1 left right 
202 pour-shaker-to-shot cocktail2 shot10 left shaker1 l2 l1 
203 empty-shaker left shaker1 cocktail2 l1 l0 
204 clean-shaker left right shaker1 
205 leave left shaker1 
206 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
207 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot13 
208 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient3 dispenser1 
209 grasp left shot13 
210 clean-shot shot13 ingredient3 left right 
211 fill-shot shot13 ingredient1 left right dispenser1 
212 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 left l0 l1 
213 clean-shot shot13 ingredient1 left right 
214 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient4 left shot13 
215 fill-shot shot13 ingredient4 left right dispenser4 
216 pour-shot-to-used-shaker shot13 ingredient4 shaker1 left l1 l2 
217 leave left shot13 
218 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient4 
219 __method_precondition_m5_do_clean_shot_5_precondition shot11 
220 nop  
221 grasp right shaker1 
222 shake cocktail10 ingredient1 ingredient4 shaker1 right left 
223 pour-shaker-to-shot cocktail10 shot11 right shaker1 l2 l1 
224 empty-shaker right shaker1 cocktail10 l1 l0 
225 clean-shaker right left shaker1 
226 leave right shaker1 
227 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser3 ingredient3 
228 __method_precondition_m9_do_fill_shot_9_precondition shot12 ingredient3 ingredient4 dispenser3 
229 grasp right shot12 
230 clean-shot shot12 ingredient4 right left 
231 fill-shot shot12 ingredient3 right left dispenser3 
232 leave right shot12 
root 260
233 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 left  -> _m2_get_first_ingredient_4 6
234 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 132
235 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient1 left  -> _m2_get_first_ingredient_4 171
236 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 145 248 312 309
237 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail5,right];m5_do_clean_shot;0;-1,-2> 74 75
238 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient1 left  -> _m3_get_second_ingredient_2 153
239 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 9
240 do_fill_shot shot13 ingredient3 left  -> m9_do_fill_shot 63 64 65 66
241 do_cocktail_in_shot1 shot2 cocktail5  -> m0_do_cocktail_in_shot1 20 283 337 307
242 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 left  -> _m3_get_second_ingredient_2 70
243 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 195
244 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 left  -> _m3_get_second_ingredient_2 112
245 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 109
246 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 154
247 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 1 296 305 233
248 do_fill_shot shot12 ingredient3 left  -> m9_do_fill_shot 146 147 148 149
249 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 191
250 do_cocktail_in_shot1 shot8 cocktail1  -> m0_do_cocktail_in_shot1 144 236 262 274
251 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 104 335 245 301
252 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 207 280 331 289
253 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 41 336 299 330
254 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 174
255 do_cocktail_in_shot1 shot7 cocktail3  -> m0_do_cocktail_in_shot1 124 292 285 315
256 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 71
257 do_fill_shot shot12 ingredient3 right  -> m9_do_fill_shot 228 229 230 231
258 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 48 270 293 51
259 serve_shot shot6 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 115 290 118 119 120 121 122 123
260 __choicelessATCompilation__top_1  -> __top_1 294 241 345 282 265 328 255 250 314 288 267 326
261 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 29
262 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 152 238 246 155
263 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 170
264 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 88
265 do_cocktail_in_shot1 shot5 cocktail9  -> m0_do_cocktail_in_shot1 82 298 306 277
266 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 left  -> _m2_get_first_ingredient_4 192
267 do_cocktail_in_shot1 shot11 cocktail10  -> m0_do_cocktail_in_shot1 206 252 320 344
268 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 32 33
269 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 194
270 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient4 left  -> _m3_get_second_ingredient_2 49
271 serve_shot shot10 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 197 318 200 201 202 203 204 205
272 do_fill_shot shot12 ingredient1 left  -> m7_do_fill_shot 167 168 169
273 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient2 right  -> _m2_get_first_ingredient_4 89
274 serve_shot shot8 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 156 310 159 160 161 162 163 164
275 do_fill_shot shot13 ingredient1 left  -> m7_do_fill_shot 126 127 128
276 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 69 242 256 72
277 serve_shot shot5 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 94 327 97 98 99 100 101 102
278 serve_shot shot4 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 73 237 76 77 78 79 80 81
279 serve_shot shot1 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 297 14 15 16 17 18 19
280 do_fill_shot shot13 ingredient1 left  -> m9_do_fill_shot 208 209 210 211
281 do_fill_shot shot13 ingredient4 left  -> m9_do_fill_shot 187 188 189 190
282 do_cocktail_in_shot1 shot4 cocktail8  -> m0_do_cocktail_in_shot1 61 329 276 278
283 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 21 333 284 324
284 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 25
285 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 131 234 323 134
286 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 111 244 325 114
287 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 216
288 do_cocktail_in_shot1 shot10 cocktail2  -> m0_do_cocktail_in_shot1 185 321 313 271
289 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 left  -> _m2_get_first_ingredient_4 213
290 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 116 117
291 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 129
292 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 125 275 291 341
293 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 50
294 do_cocktail_in_shot1 shot1 cocktail4  -> m0_do_cocktail_in_shot1 0 247 342 279
295 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 53 54
296 do_fill_shot shot13 ingredient3 left  -> m8_do_fill_shot 2 3 4
297 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
298 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 83 311 264 273
299 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 46
300 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 left  -> _m2_get_first_ingredient_4 68
301 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 left  -> _m2_get_first_ingredient_4 110
302 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 219 220
303 serve_shot shot3 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 52 295 55 56 57 58 59 60
304 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 166 272 263 235
305 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 5
306 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 90 339 334 93
307 serve_shot shot2 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 31 268 34 35 36 37 38 39
308 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 172 317 254 175
309 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient3 left  -> _m2_get_first_ingredient_4 151
310 do_clean_shot_m4_serve_shot_sip_2 shot8 right  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2> 157 158
311 do_fill_shot shot12 ingredient2 right  -> m9_do_fill_shot 84 85 86 87
312 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot12 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 150
313 get_second_ingredient cocktail2 left  -> m3_get_second_ingredient 193 269 243 196
314 do_cocktail_in_shot1 shot9 cocktail7  -> m0_do_cocktail_in_shot1 165 304 308 316
315 serve_shot shot7 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 135 322 138 139 140 141 142 143
316 serve_shot shot9 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 176 340 179 180 181 182 183 184
317 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient4 left  -> _m3_get_second_ingredient_2 173
318 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail5,right];m5_do_clean_shot;0;-1,-2> 198 199
319 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient4 left  -> _m3_get_second_ingredient_2 215
320 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 214 319 287 217
321 get_first_ingredient cocktail2 left  -> m2_get_first_ingredient 186 281 249 266
322 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 136 137
323 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 133
324 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient1 left  -> _m2_get_first_ingredient_4 26
325 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m3_get_second_ingredient_3 113
326 do_cocktail_in_shot2 shot12 ingredient3  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient3];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 227 257 232
327 do_clean_shot_m4_serve_shot_sip_2 shot5 left  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2> 95 96
328 do_cocktail_in_shot1 shot6 cocktail6  -> m0_do_cocktail_in_shot1 103 251 286 259
329 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 62 240 338 300
330 clean-shot_m2_get_first_ingredient_sip_4 shot12 ingredient1 left  -> _m2_get_first_ingredient_4 47
331 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 212
332 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient2 left  -> _m3_get_second_ingredient_2 28
333 do_fill_shot shot12 ingredient1 left  -> m8_do_fill_shot 22 23 24
334 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot12 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 92
335 do_fill_shot shot13 ingredient4 left  -> m9_do_fill_shot 105 106 107 108
336 do_fill_shot shot12 ingredient1 left  -> m9_do_fill_shot 42 43 44 45
337 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 27 332 261 30
338 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 67
339 fill-shot_m3_get_second_ingredient_sip_2 shot12 ingredient1 right  -> _m3_get_second_ingredient_2 91
340 do_clean_shot_m4_serve_shot_sip_2 shot9 right  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2> 177 178
341 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 left  -> _m2_get_first_ingredient_4 130
342 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 7 343 239 10
343 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 left  -> _m3_get_second_ingredient_2 8
344 serve_shot shot11 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 218 302 221 222 223 224 225 226
345 do_cocktail_in_shot1 shot3 cocktail10  -> m0_do_cocktail_in_shot1 40 253 258 303

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 16.431 MEMPEAK_KBS 594806.784
