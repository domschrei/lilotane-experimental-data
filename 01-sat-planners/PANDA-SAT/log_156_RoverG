PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/RoverG/domain.hddl instances/RoverG/p04.hddl"


Planner Configuration
=====================
Domain: instances/RoverG/domain.hddl
Problem: instances/RoverG/p04.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p04.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 26
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Compiling negative preconditions ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Compiling split parameters ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Grounded planning graph ... done in 173ms.
	Number of Grounded Actions 201
	Number of Grounded Literals 123
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Two Way TDG ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 18
Grounding ... done.
	number of abstract tasks = 54
	number of tasks = 243
	number of decomposition methods = 156
	number of predicates = 155
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 54
	number of tasks = 243
	number of decomposition methods = 156
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 44ms.
	Number of Grounded Actions 189
	Number of Grounded Literals 45
	number of abstract tasks = 54
	number of tasks = 243
	number of decomposition methods = 156
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 54
	number of tasks = 243
	number of decomposition methods = 156
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 51
	number of tasks = 240
	number of decomposition methods = 153
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 23
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 51
	number of tasks = 240
	number of decomposition methods = 153
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 23
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 51
	number of tasks = 240
	number of decomposition methods = 153
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 23
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 10ms.
	Number of Grounded Actions 189
	Number of Grounded Literals 45
	number of abstract tasks = 51
	number of tasks = 240
	number of decomposition methods = 153
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 23
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 51
	number of tasks = 240
	number of decomposition methods = 153
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 23
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 51
	number of tasks = 240
	number of decomposition methods = 153
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 23
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 51
	number of tasks = 240
	number of decomposition methods = 153
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 23
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 59
	number of tasks = 248
	number of decomposition methods = 161
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 23
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 59
	number of tasks = 248
	number of decomposition methods = 161
	number of predicates = 45
	number of sorts = 0
	number of tasks in largest method = 23
	number of primitive SHOP tasks = 101
	number of epsilon methods = 0
	number of primitive tasks = 189
	number of constants = 0
Tasks 189 - 54
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773273ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854773211
done
initial PDT has 158 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 125 leafs
SHOP LEAFS 59
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 2970
Size 2970 at 0/189
Size 819
Size 819 at 0/189
Size 48
Size 48 at 0/189
Size 45
Size 45 at 0/189
Size 45
Invariant time: 0.08
Number of invariants: 45
Invariant Clauses 5670
NUMBER OF CLAUSES 25947
NUMBER OF STATE CLAUSES 17859
NUMBER OF DECOMPOSITION CLAUSES 8088
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 68.83% 31.17% 0.0% 
NUMBER OF PATHS 125
Starting cryptominisat5.5
Setting starttime of solver to 1604483672819
Command exited with non-zero status 10
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^2_22;4,20 20 m14_send_image_data
22;4 0 pathaction!2_22;4,107
Consider method^1_17,155 155 __UNIQUE-replacement_3
17 4 pathaction!1_17,243
Consider method^3_21;1;1,73 73 m0_do_navigate1
21;1;1 60 pathaction!3_21;1;1,71
Consider method^1_11,5 5 m1_do_navigate1
11 61 pathaction!1_11,69
Consider method^2_20;1,9 9 m15_do_calibrate
20;1 106 pathaction!2_20;1,64
Consider method^1_5,157 157 __UNIQUE-replacement_5
5 133 pathaction!1_5,245
Consider method^1_14,2 2 m11_send_rock_data
14 98 pathaction!1_14,138
Consider method^2_11;2,17 17 m4_do_navigate2
11;2 42 pathaction!2_11;2,175
Consider method^2_21;1,9 9 m15_do_calibrate
21;1 105 pathaction!2_21;1,64
Consider method^3_20;4;1,73 73 m0_do_navigate1
20;4;1 116 pathaction!3_20;4;1,71
Consider method^2_21;4,108 108 m14_send_image_data
21;4 39 pathaction!2_21;4,110
Consider method^3_22;1;1,128 128 m0_do_navigate1
22;1;1 8 pathaction!3_22;1;1,69
Consider method^1_21,56 56 m13_get_image_data
21 24 pathaction!1_21,94
Consider method^2_16;2,130 130 m4_do_navigate2
16;2 6 pathaction!2_16;2,197
Consider method^1_15,159 159 __UNIQUE-replacement_7
15 3 pathaction!1_15,247
Consider method^2_7;0,145 145 m6_empty_store
7;0 77 pathaction!2_7;0,85
Consider method^3_14;1;2,140 140 m3_do_navigate2
14;1;2 140 pathaction!3_14;1;2,188
Consider method^3_16;2;3,140 140 m3_do_navigate2
16;2;3 114 pathaction!3_16;2;3,188
Consider method^3_21;4;1,128 128 m0_do_navigate1
21;4;1 148 pathaction!3_21;4;1,69
Consider method^1_19,13 13 m12_send_rock_data
19 57 pathaction!1_19,139
Consider method^1_16,55 55 m1_do_navigate1
16 7 pathaction!1_16,71
Consider method^2_1;2,71 71 m3_do_navigate2
1;2 147 pathaction!2_1;2,193
Consider method^1_10,158 158 __UNIQUE-replacement_6
10 94 pathaction!1_10,246
Consider method^2_20;4,43 43 m14_send_image_data
20;4 78 pathaction!2_20;4,105
Consider method^2_17;0,79 79 m6_empty_store
17;0 88 pathaction!2_17;0,84
Consider method^3_21;2;2,15 15 m3_do_navigate2
21;2;2 76 pathaction!3_21;2;2,198
Consider method^3_22;4;1,128 128 m0_do_navigate1
22;4;1 74 pathaction!3_22;4;1,69
Consider method^1_1,97 97 m1_do_navigate1
1 101 pathaction!1_1,66
Consider method^3_11;2;3,90 90 m3_do_navigate2
11;2;3 19 pathaction!3_11;2;3,192
Consider method^2_20;2,73 73 m0_do_navigate1
20;2 17 pathaction!2_20;2,71
Consider method^2_2;0,100 100 m5_empty_store
2;0 36 pathaction!2_2;0,85
Consider method^1_4,27 27 m9_send_soil_data
4 137 pathaction!1_4,111
Consider method^1_9,107 107 m9_send_soil_data
9 108 pathaction!1_9,112
Consider method^2_6;2,50 50 m3_do_navigate2
6;2 82 pathaction!2_6;2,195
Consider method^2_22;1,150 150 m15_do_calibrate
22;1 84 pathaction!2_22;1,64
Consider method^1_20,137 137 m13_get_image_data
20 86 pathaction!1_20,92
Consider method^2_14;1,45 45 m1_do_navigate1
14;1 125 pathaction!2_14;1,71
Consider method^1_0,156 156 __UNIQUE-replacement_4
0 68 pathaction!1_0,244
Consider method^3_20;1;1,73 73 m0_do_navigate1
20;1;1 117 pathaction!3_20;1;1,71
Consider method^2_12;0,24 24 m5_empty_store
12;0 11 pathaction!2_12;0,84
Consider method^1_2,152 152 __UNIQUE-replacement_0
2 130 pathaction!1_2,240
Consider method^2_22;2,128 128 m0_do_navigate1
22;2 71 pathaction!2_22;2,69
Consider method^1_7,153 153 __UNIQUE-replacement_1
7 134 pathaction!1_7,241
Consider method^1_22,29 29 m13_get_image_data
22 138 pathaction!1_22,93
Consider method^0_,160 160 <<<<__top_1;get_soil_data[waypoint1];m7_get_soil_data;0;-1,-2,-3,-4,-5,1,2,3,4,5,6>;get_rock_data[waypoint0];m10_get_rock_data;6;0,1,2,3,4,5,-1,-2,-3,-4,-5,7,8,9,10>;get_rock_data[waypoint1];m10_get_rock_data;11;0,1,2,3,4,5,6,7,8,9,10,-1,-2,-3,-4,-5,12,13,14>;get_soil_data[waypoint2];m7_get_soil_data;5;0,1,2,3,4,-1,-2,-3,-4,-5,6,7,8,9,10,11,12,13,14,15,16,17,18>
 58 pathaction!0_,239
Consider method^2_21;2,106 106 m1_do_navigate1
21;2 5 pathaction!2_21;2,69
Consider method^1_12,154 154 __UNIQUE-replacement_2
12 18 pathaction!1_12,242
Consider method^1_6,84 84 m1_do_navigate1
6 104 pathaction!1_6,65


CHECKING primitive solution of length 96 ...
true 34 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 55 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0;]
true 95 visit[waypoint0;]
true 59 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint0,waypoint1;]
true 123 navigate[rover1,waypoint0,waypoint1;]
true 119 unvisit[waypoint0;]
true 128 __method_precondition_m5_empty_store_5_precondition[rover1store;]
true 129 nop[;]
true 103 sample_soil[rover1,rover1store,waypoint1;]
true 115 __method_precondition_m9_send_soil_data_9_precondition[general,waypoint3,waypoint1,rover1;]
true 51 communicate_soil_data2[rover1,general,waypoint1,waypoint3;]
true 37 __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1;]
true 40 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint1;]
true 50 visit[waypoint1;]
true 144 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint1,waypoint2;]
true 31 navigate[rover1,waypoint1,waypoint2;]
true 92 unvisit[waypoint1;]
true 121 __method_precondition_m6_empty_store_6_precondition[rover1store;]
true 2 drop[rover1,rover1store;]
true 75 sample_soil[rover1,rover1store,waypoint2;]
true 70 __method_precondition_m9_send_soil_data_9_precondition[general,waypoint3,waypoint2,rover1;]
true 25 communicate_soil_data2[rover1,general,waypoint2,waypoint3;]
true 29 __method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0;]
true 141 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint0;]
true 93 visit[waypoint0;]
true 62 __method_precondition_m4_do_navigate2_4_precondition[rover0,waypoint0,waypoint0,waypoint3;]
true 65 navigate[rover0,waypoint0,waypoint3;]
true 111 visit[waypoint3;]
true 10 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint3,waypoint0;]
true 102 navigate[rover0,waypoint3,waypoint0;]
true 81 unvisit[waypoint3;]
true 52 unvisit[waypoint0;]
true 41 __method_precondition_m5_empty_store_5_precondition[rover0store;]
true 67 nop[;]
true 47 sample_rock[rover0,rover0store,waypoint0;]
true 13 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint3,waypoint1;]
true 27 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint0;]
true 48 visit[waypoint0;]
true 28 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint0,waypoint1;]
true 110 navigate[rover0,waypoint0,waypoint1;]
true 150 unvisit[waypoint0;]
true 122 communicate_rock_data1[rover0,general,waypoint0,waypoint1,waypoint3;]
true 12 __method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0;]
true 38 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint1;]
true 85 visit[waypoint1;]
true 43 __method_precondition_m4_do_navigate2_4_precondition[rover0,waypoint1,waypoint1,waypoint0;]
true 26 navigate[rover0,waypoint1,waypoint0;]
true 14 visit[waypoint0;]
true 97 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint0,waypoint1;]
true 64 navigate[rover0,waypoint0,waypoint1;]
true 16 unvisit[waypoint0;]
true 33 unvisit[waypoint1;]
true 142 __method_precondition_m6_empty_store_6_precondition[rover0store;]
true 30 drop[rover0,rover0store;]
true 139 sample_rock[rover0,rover0store,waypoint1;]
true 131 __method_precondition_m12_send_rock_data_12_precondition[general,waypoint3,waypoint1,rover0;]
true 35 communicate_rock_data2[rover0,general,waypoint1,waypoint3;]
true 46 __method_precondition_m13_get_image_data_13_precondition[waypoint1,rover0,high_res,camera2,objective0;]
true 1 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective1,waypoint1;]
true 143 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 73 nop[;]
true 100 calibrate[rover0,camera2,objective1,waypoint1;]
true 126 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 20 nop[;]
true 146 take_image[rover0,waypoint1,objective0,camera2,high_res;]
true 118 __method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint1;]
true 136 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 66 nop[;]
true 32 communicate_image_data[rover0,general,objective0,high_res,waypoint1,waypoint3;]
true 63 __method_precondition_m13_get_image_data_13_precondition[waypoint0,rover0,high_res,camera2,objective2;]
true 96 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective1,waypoint1;]
true 69 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1;]
true 15 nop[;]
true 91 calibrate[rover0,camera2,objective1,waypoint1;]
true 89 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint1;]
true 127 visit[waypoint1;]
true 80 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint1,waypoint0;]
true 45 navigate[rover0,waypoint1,waypoint0;]
true 23 unvisit[waypoint1;]
true 83 take_image[rover0,waypoint0,objective2,camera2,high_res;]
true 21 __method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint0;]
true 54 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0;]
true 135 nop[;]
true 132 communicate_image_data[rover0,general,objective2,high_res,waypoint0,waypoint3;]
true 112 __method_precondition_m13_get_image_data_13_precondition[waypoint0,rover0,colour,camera2,objective0;]
true 87 __method_precondition_m15_do_calibrate_15_precondition[camera2,objective1,waypoint0;]
true 56 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0;]
true 22 nop[;]
true 124 calibrate[rover0,camera2,objective1,waypoint0;]
true 120 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0;]
true 107 nop[;]
true 90 take_image[rover0,waypoint0,objective0,camera2,colour;]
true 109 __method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint0;]
true 9 __method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0;]
true 49 nop[;]
true 79 communicate_image_data[rover0,general,objective0,colour,waypoint0,waypoint3;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 163074704
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 45
number of actions                    = 248
number of abstract actions           = 59
number of primitive actions          = 189
number of methods                    = 161
number of primitive shop actions     = 101
number of primitive non-shop actions = 88
size of largest method               = 23
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 14625
number of clauses               = 25947
average size of clauses         = 2.3823178016726403
number of assert                = 20
number of horn                  = 22966
K offset                        = 0
K chosen value                  = 4
state formula                   = 17859
method children clauses         = 0
number of paths                 = 125
maximum plan length             = 125
number of decomposition clauses = 8088
number of ordering clauses      = 0
number of state clauses         = 17859
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 3942
============ parsing ============
total                         = 1016
file parser                   = 579
sort expansion                = 179
closed world assumption       = 100
inherit preconditions         = 0
shop methods                  = 15
eliminate identical variables = 69
strip domain of hybridity     = 2
flatten formula               = 72
============ preprocessing ============
total                                      = 1272
compile negative preconditions             = 37
compile unit methods                       = 0
split parameter                            = 23
expand choiceless abstract tasks           = 103
compile methods with identical tasks       = 21
removing unnecessary predicates            = 115
lifted reachabiltiy analysis               = 83
grounded planning graph analysis           = 387
grounded task decomposition graph analysis = 379
grounding                                  = 114
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 91
============ sat ============
total                                        = 861
generate formula                             = 660
generate path decomposition tree             = 152
normalise path decomposition tree            = 42
sog optimisation                             = 47
translate path decomposition tree to clauses = 187
generate state formula                       = 658
generate state invariant formula             = 27
transform to DIMACS                          = 71
SAT solver                                   = 10
SAT solver for K=0004                        = 10

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="189";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="59";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="163074704";"40 sat:20:state formula"="17859";"40 sat:01:number of variables"="14625";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="125";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="161";"30 problem:07:number of primitive shop actions"="101";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="248";"30 problem:08:number of primitive non-shop actions"="88";"30 problem:02:number of predicates"="45";"40 sat:03:number of horn"="22966";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="23";"40 sat:03:average size of clauses"="2.3823178016726403";"40 sat:02:number of clauses"="25947";"40 sat:50:number of state clauses"="17859";"40 sat:03:number of assert"="20";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="125";"40 sat:50:number of decomposition clauses"="8088";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="579";"01 parsing:08:flatten formula"="72";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="861";"40 sat:16:generate state formula"="658";"40 sat:20:transform to DIMACS"="71";"40 sat:11:generate path decomposition tree"="152";"02 preprocessing:07:compile methods with identical tasks"="21";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="115";"01 parsing:03:closed world assumption"="100";"02 preprocessing:11:lifted reachabiltiy analysis"="83";"01 parsing:02:sort expansion"="179";"40 sat:12:normalise path decomposition tree"="42";"40 sat:40:SAT solver"="10";"01 parsing:00:total"="1016";"40 sat:10:generate formula"="660";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="37";"00 total:00:total"="3942";"40 sat:13:sog optimisation"="47";"02 preprocessing:12:grounded planning graph analysis"="387";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="379";"02 preprocessing:04:split parameter"="23";"01 parsing:05:shop methods"="15";"10 search preparation:02:compute state invariants"="91";"01 parsing:06:eliminate identical variables"="69";"40 sat:15:translate path decomposition tree to clauses"="187";"02 preprocessing:05:expand choiceless abstract tasks"="103";"40 sat:17:generate state invariant formula"="27";"02 preprocessing:00:total"="1272";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="114"
#!verify __method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1];__method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint0];visit[waypoint0];__method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint0,waypoint1];navigate[rover1,waypoint0,waypoint1];unvisit[waypoint0];__method_precondition_m5_empty_store_5_precondition[rover1store];nop[];sample_soil[rover1,rover1store,waypoint1];__method_precondition_m9_send_soil_data_9_precondition[general,waypoint3,waypoint1,rover1];communicate_soil_data2[rover1,general,waypoint1,waypoint3];__method_precondition_m7_get_soil_data_7_precondition[rover1store,rover1];__method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint1];visit[waypoint1];__method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint1,waypoint2];navigate[rover1,waypoint1,waypoint2];unvisit[waypoint1];__method_precondition_m6_empty_store_6_precondition[rover1store];drop[rover1,rover1store];sample_soil[rover1,rover1store,waypoint2];__method_precondition_m9_send_soil_data_9_precondition[general,waypoint3,waypoint2,rover1];communicate_soil_data2[rover1,general,waypoint2,waypoint3];__method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint0];visit[waypoint0];__method_precondition_m4_do_navigate2_4_precondition[rover0,waypoint0,waypoint0,waypoint3];navigate[rover0,waypoint0,waypoint3];visit[waypoint3];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint3,waypoint0];navigate[rover0,waypoint3,waypoint0];unvisit[waypoint3];unvisit[waypoint0];__method_precondition_m5_empty_store_5_precondition[rover0store];nop[];sample_rock[rover0,rover0store,waypoint0];__method_precondition_m11_send_rock_data_11_precondition[general,waypoint3,waypoint1];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint0];visit[waypoint0];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint0,waypoint1];navigate[rover0,waypoint0,waypoint1];unvisit[waypoint0];communicate_rock_data1[rover0,general,waypoint0,waypoint1,waypoint3];__method_precondition_m10_get_rock_data_10_precondition[rover0store,rover0];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint1];visit[waypoint1];__method_precondition_m4_do_navigate2_4_precondition[rover0,waypoint1,waypoint1,waypoint0];navigate[rover0,waypoint1,waypoint0];visit[waypoint0];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint0,waypoint1];navigate[rover0,waypoint0,waypoint1];unvisit[waypoint0];unvisit[waypoint1];__method_precondition_m6_empty_store_6_precondition[rover0store];drop[rover0,rover0store];sample_rock[rover0,rover0store,waypoint1];__method_precondition_m12_send_rock_data_12_precondition[general,waypoint3,waypoint1,rover0];communicate_rock_data2[rover0,general,waypoint1,waypoint3];__method_precondition_m13_get_image_data_13_precondition[waypoint1,rover0,high_res,camera2,objective0];__method_precondition_m15_do_calibrate_15_precondition[camera2,objective1,waypoint1];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1];nop[];calibrate[rover0,camera2,objective1,waypoint1];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1];nop[];take_image[rover0,waypoint1,objective0,camera2,high_res];__method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint1];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1];nop[];communicate_image_data[rover0,general,objective0,high_res,waypoint1,waypoint3];__method_precondition_m13_get_image_data_13_precondition[waypoint0,rover0,high_res,camera2,objective2];__method_precondition_m15_do_calibrate_15_precondition[camera2,objective1,waypoint1];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint1];nop[];calibrate[rover0,camera2,objective1,waypoint1];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint1];visit[waypoint1];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint1,waypoint0];navigate[rover0,waypoint1,waypoint0];unvisit[waypoint1];take_image[rover0,waypoint0,objective2,camera2,high_res];__method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint0];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0];nop[];communicate_image_data[rover0,general,objective2,high_res,waypoint0,waypoint3];__method_precondition_m13_get_image_data_13_precondition[waypoint0,rover0,colour,camera2,objective0];__method_precondition_m15_do_calibrate_15_precondition[camera2,objective1,waypoint0];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0];nop[];calibrate[rover0,camera2,objective1,waypoint0];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0];nop[];take_image[rover0,waypoint0,objective0,camera2,colour];__method_precondition_m14_send_image_data_14_precondition[general,waypoint3,waypoint0];__method_precondition_m0_do_navigate1_0_precondition[rover0,waypoint0];nop[];communicate_image_data[rover0,general,objective0,colour,waypoint0,waypoint3]
==>
0 __method_precondition_m7_get_soil_data_7_precondition rover1store rover1 
1 __method_precondition_m1_do_navigate1_1_precondition rover1 waypoint0 
2 visit waypoint0 
3 __method_precondition_m3_do_navigate2_3_precondition rover1 waypoint0 waypoint1 
4 navigate rover1 waypoint0 waypoint1 
5 unvisit waypoint0 
6 __method_precondition_m5_empty_store_5_precondition rover1store 
7 nop  
8 sample_soil rover1 rover1store waypoint1 
9 __method_precondition_m9_send_soil_data_9_precondition general waypoint3 waypoint1 rover1 
10 communicate_soil_data2 rover1 general waypoint1 waypoint3 
11 __method_precondition_m7_get_soil_data_7_precondition rover1store rover1 
12 __method_precondition_m1_do_navigate1_1_precondition rover1 waypoint1 
13 visit waypoint1 
14 __method_precondition_m3_do_navigate2_3_precondition rover1 waypoint1 waypoint2 
15 navigate rover1 waypoint1 waypoint2 
16 unvisit waypoint1 
17 __method_precondition_m6_empty_store_6_precondition rover1store 
18 drop rover1 rover1store 
19 sample_soil rover1 rover1store waypoint2 
20 __method_precondition_m9_send_soil_data_9_precondition general waypoint3 waypoint2 rover1 
21 communicate_soil_data2 rover1 general waypoint2 waypoint3 
22 __method_precondition_m10_get_rock_data_10_precondition rover0store rover0 
23 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint0 
24 visit waypoint0 
25 __method_precondition_m4_do_navigate2_4_precondition rover0 waypoint0 waypoint0 waypoint3 
26 navigate rover0 waypoint0 waypoint3 
27 visit waypoint3 
28 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint3 waypoint0 
29 navigate rover0 waypoint3 waypoint0 
30 unvisit waypoint3 
31 unvisit waypoint0 
32 __method_precondition_m5_empty_store_5_precondition rover0store 
33 nop  
34 sample_rock rover0 rover0store waypoint0 
35 __method_precondition_m11_send_rock_data_11_precondition general waypoint3 waypoint1 
36 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint0 
37 visit waypoint0 
38 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint0 waypoint1 
39 navigate rover0 waypoint0 waypoint1 
40 unvisit waypoint0 
41 communicate_rock_data1 rover0 general waypoint0 waypoint1 waypoint3 
42 __method_precondition_m10_get_rock_data_10_precondition rover0store rover0 
43 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint1 
44 visit waypoint1 
45 __method_precondition_m4_do_navigate2_4_precondition rover0 waypoint1 waypoint1 waypoint0 
46 navigate rover0 waypoint1 waypoint0 
47 visit waypoint0 
48 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint0 waypoint1 
49 navigate rover0 waypoint0 waypoint1 
50 unvisit waypoint0 
51 unvisit waypoint1 
52 __method_precondition_m6_empty_store_6_precondition rover0store 
53 drop rover0 rover0store 
54 sample_rock rover0 rover0store waypoint1 
55 __method_precondition_m12_send_rock_data_12_precondition general waypoint3 waypoint1 rover0 
56 communicate_rock_data2 rover0 general waypoint1 waypoint3 
57 __method_precondition_m13_get_image_data_13_precondition waypoint1 rover0 high_res camera2 objective0 
58 __method_precondition_m15_do_calibrate_15_precondition camera2 objective1 waypoint1 
59 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint1 
60 nop  
61 calibrate rover0 camera2 objective1 waypoint1 
62 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint1 
63 nop  
64 take_image rover0 waypoint1 objective0 camera2 high_res 
65 __method_precondition_m14_send_image_data_14_precondition general waypoint3 waypoint1 
66 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint1 
67 nop  
68 communicate_image_data rover0 general objective0 high_res waypoint1 waypoint3 
69 __method_precondition_m13_get_image_data_13_precondition waypoint0 rover0 high_res camera2 objective2 
70 __method_precondition_m15_do_calibrate_15_precondition camera2 objective1 waypoint1 
71 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint1 
72 nop  
73 calibrate rover0 camera2 objective1 waypoint1 
74 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint1 
75 visit waypoint1 
76 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint1 waypoint0 
77 navigate rover0 waypoint1 waypoint0 
78 unvisit waypoint1 
79 take_image rover0 waypoint0 objective2 camera2 high_res 
80 __method_precondition_m14_send_image_data_14_precondition general waypoint3 waypoint0 
81 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint0 
82 nop  
83 communicate_image_data rover0 general objective2 high_res waypoint0 waypoint3 
84 __method_precondition_m13_get_image_data_13_precondition waypoint0 rover0 colour camera2 objective0 
85 __method_precondition_m15_do_calibrate_15_precondition camera2 objective1 waypoint0 
86 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint0 
87 nop  
88 calibrate rover0 camera2 objective1 waypoint0 
89 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint0 
90 nop  
91 take_image rover0 waypoint0 objective0 camera2 colour 
92 __method_precondition_m14_send_image_data_14_precondition general waypoint3 waypoint0 
93 __method_precondition_m0_do_navigate1_0_precondition rover0 waypoint0 
94 nop  
95 communicate_image_data rover0 general objective0 colour waypoint0 waypoint3 
root 96
96 __choicelessATCompilation__top_1  -> <<<<__top_1;get_soil_data[waypoint1];m7_get_soil_data;0;-1,-2,-3,-4,-5,1,2,3,4,5,6>;get_rock_data[waypoint0];m10_get_rock_data;6;0,1,2,3,4,5,-1,-2,-3,-4,-5,7,8,9,10>;get_rock_data[waypoint1];m10_get_rock_data;11;0,1,2,3,4,5,6,7,8,9,10,-1,-2,-3,-4,-5,12,13,14>;get_soil_data[waypoint2];m7_get_soil_data;5;0,1,2,3,4,-1,-2,-3,-4,-5,6,7,8,9,10,11,12,13,14,15,16,17,18> 105 133 100 8 135 134 110 116 19 101 131 132 141 34 124 121 98 109 54 128 104 125 123
97 do_navigate1 rover0 waypoint0  -> m1_do_navigate1 74 75 103 78
98 do_navigate1 rover0 waypoint1  -> m1_do_navigate1 43 44 117 51
99 do_navigate1 rover0 waypoint1  -> m0_do_navigate1 71 72
100 empty_store rover1store rover1  -> __UNIQUE-replacement_0 129
101 send_soil_data rover1 waypoint2  -> m9_send_soil_data 20 21
102 do_navigate2 rover0 waypoint3 waypoint0  -> m3_do_navigate2 28 29
103 do_navigate2 rover0 waypoint1 waypoint0  -> m3_do_navigate2 76 77
104 get_image_data objective0 high_res  -> m13_get_image_data 57 122 139 64 106
105 __method_precondition_m7_get_soil_data_7_precondition rover1store rover1  -> __UNIQUE-replacement_4 0
106 send_image_data rover0 objective0 high_res  -> m14_send_image_data 65 136 68
107 do_navigate2 rover0 waypoint0 waypoint1  -> m3_do_navigate2 38 39
108 do_navigate2 rover0 waypoint0 waypoint0  -> m4_do_navigate2 25 26 27 102 30
109 empty_store rover0store rover0  -> __UNIQUE-replacement_3 111
110 do_navigate1 rover1 waypoint2  -> m1_do_navigate1 12 13 120 16
111 empty_store rover0store rover0  -> m6_empty_store 52 53
112 do_navigate1 rover0 waypoint0  -> m0_do_navigate1 86 87
113 send_image_data rover0 objective2 high_res  -> m14_send_image_data 80 137 83
114 empty_store rover0store rover0  -> m5_empty_store 32 33
115 do_navigate2 rover1 waypoint0 waypoint1  -> m3_do_navigate2 3 4
116 empty_store rover1store rover1  -> __UNIQUE-replacement_1 142
117 do_navigate2 rover0 waypoint1 waypoint1  -> m4_do_navigate2 45 46 47 126 50
118 send_image_data rover0 objective0 colour  -> m14_send_image_data 92 119 95
119 do_navigate1 rover0 waypoint0  -> m0_do_navigate1 93 94
120 do_navigate2 rover1 waypoint1 waypoint2  -> m3_do_navigate2 14 15
121 __method_precondition_m10_get_rock_data_10_precondition rover0store rover0  -> __UNIQUE-replacement_7 42
122 do_calibrate rover0 camera2  -> m15_do_calibrate 58 127 61
123 get_image_data objective0 colour  -> m13_get_image_data 84 130 138 91 118
124 send_rock_data rover0 waypoint0  -> m11_send_rock_data 35 143 41
125 get_image_data objective2 high_res  -> m13_get_image_data 69 140 97 79 113
126 do_navigate2 rover0 waypoint0 waypoint1  -> m3_do_navigate2 48 49
127 do_navigate1 rover0 waypoint1  -> m0_do_navigate1 59 60
128 send_rock_data rover0 waypoint1  -> m12_send_rock_data 55 56
129 empty_store rover1store rover1  -> m5_empty_store 6 7
130 do_calibrate rover0 camera2  -> m15_do_calibrate 85 112 88
131 __method_precondition_m10_get_rock_data_10_precondition rover0store rover0  -> __UNIQUE-replacement_6 22
132 do_navigate1 rover0 waypoint0  -> m1_do_navigate1 23 24 108 31
133 do_navigate1 rover1 waypoint1  -> m1_do_navigate1 1 2 115 5
134 __method_precondition_m7_get_soil_data_7_precondition rover1store rover1  -> __UNIQUE-replacement_5 11
135 send_soil_data rover1 waypoint1  -> m9_send_soil_data 9 10
136 do_navigate1 rover0 waypoint1  -> m0_do_navigate1 66 67
137 do_navigate1 rover0 waypoint0  -> m0_do_navigate1 81 82
138 do_navigate1 rover0 waypoint0  -> m0_do_navigate1 89 90
139 do_navigate1 rover0 waypoint1  -> m0_do_navigate1 62 63
140 do_calibrate rover0 camera2  -> m15_do_calibrate 70 99 73
141 empty_store rover0store rover0  -> __UNIQUE-replacement_2 114
142 empty_store rover1store rover1  -> m6_empty_store 17 18
143 do_navigate1 rover0 waypoint1  -> m1_do_navigate1 36 37 107 40

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 4.896 MEMPEAK_KBS 281686.016
