PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/depots/domain.hddl instances/depots/p02.hddl"


Planner Configuration
=====================
Domain: instances/depots/domain.hddl
Problem: instances/depots/p02.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p02.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 6
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Compiling negative preconditions ... done.
	number of abstract tasks = 6
	number of tasks = 23
	number of decomposition methods = 12
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Compiling split parameters ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 12
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Grounded planning graph ... done in 213ms.
	Number of Grounded Actions 179
	Number of Grounded Literals 76
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Two Way TDG ... done.
	number of abstract tasks = 7
	number of tasks = 24
	number of decomposition methods = 13
	number of predicates = 8
	number of sorts = 10
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 17
	number of constants = 15
Grounding ... done.
	number of abstract tasks = 60
	number of tasks = 184
	number of decomposition methods = 126
	number of predicates = 82
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 60
	number of tasks = 184
	number of decomposition methods = 126
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 40ms.
	Number of Grounded Actions 124
	Number of Grounded Literals 65
	number of abstract tasks = 60
	number of tasks = 184
	number of decomposition methods = 126
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 60
	number of tasks = 184
	number of decomposition methods = 126
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 39
	number of tasks = 163
	number of decomposition methods = 105
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 39
	number of tasks = 163
	number of decomposition methods = 105
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 39
	number of tasks = 163
	number of decomposition methods = 105
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 10ms.
	Number of Grounded Actions 124
	Number of Grounded Literals 65
	number of abstract tasks = 39
	number of tasks = 163
	number of decomposition methods = 105
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 39
	number of tasks = 163
	number of decomposition methods = 105
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 6
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 25
	number of tasks = 149
	number of decomposition methods = 91
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 25
	number of tasks = 149
	number of decomposition methods = 91
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 25
	number of tasks = 149
	number of decomposition methods = 91
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 13ms.
	Number of Grounded Actions 124
	Number of Grounded Literals 65
	number of abstract tasks = 25
	number of tasks = 149
	number of decomposition methods = 91
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 25
	number of tasks = 149
	number of decomposition methods = 91
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 10
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 20
	number of tasks = 144
	number of decomposition methods = 86
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 20
	number of tasks = 144
	number of decomposition methods = 86
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 20
	number of tasks = 144
	number of decomposition methods = 86
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 6ms.
	Number of Grounded Actions 124
	Number of Grounded Literals 65
	number of abstract tasks = 20
	number of tasks = 144
	number of decomposition methods = 86
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 20
	number of tasks = 144
	number of decomposition methods = 86
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 20
	number of tasks = 144
	number of decomposition methods = 86
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 20
	number of tasks = 144
	number of decomposition methods = 86
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 20
	number of tasks = 144
	number of decomposition methods = 86
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 20
	number of tasks = 144
	number of decomposition methods = 86
	number of predicates = 65
	number of sorts = 0
	number of tasks in largest method = 11
	number of primitive SHOP tasks = 72
	number of epsilon methods = 0
	number of primitive tasks = 124
	number of constants = 0
Tasks 124 - 0
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854773240ms
Computing minimum decomposition height: 2

Running SAT search with K = 2
Generating initial PDT ... done
initial PDT has 35 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 8 leafs
SHOP LEAFS 8
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 101 will abort at 9223372036854773193
done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 6240
Size 6240 at 0/124
Size 2582
Size 2582 at 0/124
Size 1447
Size 1447 at 0/124
Size 1159
Size 1159 at 0/124
Size 495
Size 495 at 0/124
Size 451
Size 451 at 0/124
Size 451
Invariant time: 0.101
Number of invariants: 451
Invariant Clauses 4059
NUMBER OF CLAUSES 5238
NUMBER OF STATE CLAUSES 5168
NUMBER OF DECOMPOSITION CLAUSES 70
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 98.66% 1.34% 0.0% 
NUMBER OF PATHS 8
Starting cryptominisat5.5
Setting starttime of solver to 1604478998145
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 3
Generating initial PDT ... done
initial PDT has 92 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 63 leafs
SHOP LEAFS 34
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 102 will abort at 9223372036854772652
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 28864
NUMBER OF CLAUSES 40491
NUMBER OF STATE CLAUSES 37895
NUMBER OF DECOMPOSITION CLAUSES 2596
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 93.59% 6.41% 0.0% 
NUMBER OF PATHS 63
Starting cryptominisat5.5
Setting starttime of solver to 1604478998560
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 4
Generating initial PDT ... done
initial PDT has 114 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 107 leafs
SHOP LEAFS 54
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 100 will abort at 9223372036854772178
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 48708
NUMBER OF CLAUSES 68623
NUMBER OF STATE CLAUSES 64040
NUMBER OF DECOMPOSITION CLAUSES 4583
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 93.32000000000001% 6.68% 0.0% 
NUMBER OF PATHS 107
Starting cryptominisat5.5
Setting starttime of solver to 1604478999111
Command exited with non-zero status 10
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^0_,85 85 __top_1
 3 pathaction!0_,143
Consider method^2_3;7,25 25 m7_do_get_truck
3;7 35 pathaction!2_3;7,114
Consider method^2_2;8,76 76 m4_do_clear
2;8 61 pathaction!2_2;8,65
Consider method^1_0,31 31 m1_do_put_on
0 79 pathaction!1_0,68
Consider method^2_0;8,0 0 m8_do_lift_crate
0;8 77 pathaction!2_0;8,110
Consider method^3_0;7;3,75 75 m7_do_get_truck
0;7;3 40 pathaction!3_0;7;3,117
Consider method^2_1;8,66 66 <m5_do_clear;do_clear[crate0,depot0];m4_do_clear;1;0,-1,-2,2,3,4>
1;8 30 pathaction!2_1;8,66
Consider method^2_1;1,34 34 m7_do_get_truck
1;1 78 pathaction!2_1;1,118
Consider method^3_0;7;1,76 76 m4_do_clear
0;7;1 5 pathaction!3_0;7;1,65
Consider method^3_1;8;4,3 3 m7_do_get_truck
1;8;4 59 pathaction!3_1;8;4,119
Consider method^3_0;8;1,20 20 m6_do_get_truck
0;8;1 1 pathaction!3_0;8;1,117
Consider method^2_0;6,76 76 m4_do_clear
0;6 37 pathaction!2_0;6,65
Consider method^2_3;8,10 10 m4_do_clear
3;8 8 pathaction!2_3;8,63
Consider method^1_3,8 8 m2_do_put_on
3 24 pathaction!1_3,69
Consider method^1_1,53 53 <<<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate2,distributor1,truck0];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate2,pallet0,depot0,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate2,crate1,distributor1,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate2,distributor1];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9>
1 44 pathaction!1_1,70
Consider method^2_2;2,81 81 m7_do_get_truck
2;2 58 pathaction!2_2;2,114
Consider method^2_2;3,35 35 m4_do_clear
2;3 7 pathaction!2_2;3,67
Consider method^1_2,19 19 <<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate1,distributor1,truck1];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate1,crate3,distributor0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate1,pallet2,distributor1,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>
2 64 pathaction!1_2,71
Consider method^2_0;7,46 46 m5_do_clear
0;7 74 pathaction!2_0;7,64


CHECKING primitive solution of length 53 ...
true 20 __method_precondition_m1_do_put_on_1_precondition[crate3,distributor0;]
true 29 __method_precondition_m4_do_clear_4_precondition[crate3,distributor0;]
true 39 nop[;]
true 69 __method_precondition_m5_do_clear_5_precondition[pallet1,crate3,distributor0,hoist1;]
true 48 __method_precondition_m4_do_clear_4_precondition[crate3,distributor0;]
true 13 nop[;]
true 17 Lift[hoist1,crate3,pallet1,distributor0;]
true 32 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0;]
true 34 Drive[truck1,depot0,distributor0;]
true 80 Load[hoist1,crate3,truck1,distributor0;]
true 52 __method_precondition_m8_do_lift_crate_8_precondition[crate3,truck1,hoist1,distributor0;]
true 42 __method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0;]
true 49 nop[;]
true 19 Unload[hoist1,crate3,truck1,distributor0;]
true 23 Drop[hoist1,crate3,pallet1,distributor0;]
true 55 __method_precondition_m10_do_load_truck_10_precondition[crate2,distributor1,crate1,hoist2;]
true 65 __method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1;]
true 15 Drive[truck0,depot0,distributor1;]
true 50 __method_precondition_m4_do_clear_4_precondition[crate2,distributor1;]
true 25 nop[;]
true 41 Lift[hoist2,crate2,crate1,distributor1;]
true 2 Load[hoist2,crate2,truck0,distributor1;]
true 66 Drive[truck0,distributor1,depot0;]
true 18 __method_precondition_m11_do_unload_truck_11_precondition[hoist0,pallet0,depot0,crate2,truck0;]
true 62 __method_precondition_m5_do_clear_5_precondition[pallet0,crate0,depot0,hoist0;]
true 73 __method_precondition_m4_do_clear_4_precondition[crate0,depot0;]
true 12 nop[;]
true 54 Lift[hoist0,crate0,pallet0,depot0;]
true 14 __method_precondition_m7_do_get_truck_7_precondition[truck1,depot0;]
true 75 Drive[truck1,distributor0,depot0;]
true 26 Load[hoist0,crate0,truck1,depot0;]
true 60 Unload[hoist0,crate2,truck0,depot0;]
true 38 Drop[hoist0,crate2,pallet0,depot0;]
true 47 __method_precondition_m10_do_load_truck_10_precondition[crate1,distributor1,pallet2,hoist2;]
true 71 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 76 Drive[truck1,depot0,distributor1;]
true 63 __method_precondition_m4_do_clear_4_precondition[crate1,distributor1;]
true 67 nop[;]
true 16 Lift[hoist2,crate1,pallet2,distributor1;]
true 43 Load[hoist2,crate1,truck1,distributor1;]
true 53 Drive[truck1,distributor1,distributor0;]
true 68 __method_precondition_m11_do_unload_truck_11_precondition[hoist1,crate3,distributor0,crate1,truck1;]
true 46 __method_precondition_m4_do_clear_4_precondition[crate3,distributor0;]
true 6 nop[;]
true 28 Unload[hoist1,crate1,truck1,distributor0;]
true 51 Drop[hoist1,crate1,crate3,distributor0;]
true 4 __method_precondition_m2_do_put_on_2_precondition[crate0,truck1;]
true 72 __method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1;]
true 21 Drive[truck1,distributor0,distributor1;]
true 9 __method_precondition_m4_do_clear_4_precondition[pallet2,distributor1;]
true 22 nop[;]
true 81 Unload[hoist2,crate0,truck1,distributor1;]
true 27 Drop[hoist2,crate0,pallet2,distributor1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 158507808
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 65
number of actions                    = 144
number of abstract actions           = 20
number of primitive actions          = 124
number of methods                    = 86
number of primitive shop actions     = 72
number of primitive non-shop actions = 52
size of largest method               = 11
average method size                  = 4
============ sat ============
plan length                     = -1
number of variables             = 16746
number of clauses               = 68623
average size of clauses         = 2.033807906969966
number of assert                = 25
number of horn                  = 63070
K offset                        = 0
K chosen value                  = 4
state formula                   = 64040
method children clauses         = 0
number of paths                 = 107
maximum plan length             = 107
number of decomposition clauses = 4583
number of ordering clauses      = 0
number of state clauses         = 64040
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 4477
============ parsing ============
total                         = 975
file parser                   = 552
sort expansion                = 182
closed world assumption       = 103
inherit preconditions         = 0
shop methods                  = 22
eliminate identical variables = 50
strip domain of hybridity     = 2
flatten formula               = 64
============ preprocessing ============
total                                      = 1501
compile negative preconditions             = 51
compile unit methods                       = 0
split parameter                            = 29
expand choiceless abstract tasks           = 234
compile methods with identical tasks       = 3
removing unnecessary predicates            = 122
lifted reachabiltiy analysis               = 73
grounded planning graph analysis           = 459
grounded task decomposition graph analysis = 421
grounding                                  = 100
create artificial top task                 = 2
============ search preparation ============
compute state invariants = 155
============ sat ============
total                                        = 1278
generate formula                             = 901
generate path decomposition tree             = 90
normalise path decomposition tree            = 66
sog optimisation                             = 37
translate path decomposition tree to clauses = 182
generate state formula                       = 889
generate state invariant formula             = 150
transform to DIMACS                          = 91
SAT solver                                   = 30
SAT solver for K=0002                        = 0
SAT solver for K=0003                        = 10
SAT solver for K=0004                        = 20

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="124";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="20";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="158507808";"40 sat:20:state formula"="64040";"40 sat:01:number of variables"="16746";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="107";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="86";"30 problem:07:number of primitive shop actions"="72";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="144";"30 problem:08:number of primitive non-shop actions"="52";"30 problem:02:number of predicates"="65";"40 sat:03:number of horn"="63070";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="4";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="11";"40 sat:03:average size of clauses"="2.033807906969966";"40 sat:02:number of clauses"="68623";"40 sat:50:number of state clauses"="64040";"40 sat:03:number of assert"="25";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="107";"40 sat:50:number of decomposition clauses"="4583";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="552";"01 parsing:08:flatten formula"="64";"40 sat:41:SAT solver for K=0004"="20";"40 sat:00:total"="1278";"40 sat:16:generate state formula"="889";"40 sat:20:transform to DIMACS"="91";"40 sat:11:generate path decomposition tree"="90";"02 preprocessing:07:compile methods with identical tasks"="3";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="122";"01 parsing:03:closed world assumption"="103";"02 preprocessing:11:lifted reachabiltiy analysis"="73";"01 parsing:02:sort expansion"="182";"40 sat:12:normalise path decomposition tree"="66";"40 sat:40:SAT solver"="30";"01 parsing:00:total"="975";"40 sat:10:generate formula"="901";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0002"="0";"02 preprocessing:01:compile negative preconditions"="51";"00 total:00:total"="4477";"40 sat:13:sog optimisation"="37";"02 preprocessing:12:grounded planning graph analysis"="459";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="421";"02 preprocessing:04:split parameter"="29";"01 parsing:05:shop methods"="22";"10 search preparation:02:compute state invariants"="155";"01 parsing:06:eliminate identical variables"="50";"40 sat:15:translate path decomposition tree to clauses"="182";"02 preprocessing:05:expand choiceless abstract tasks"="234";"40 sat:41:SAT solver for K=0003"="10";"40 sat:17:generate state invariant formula"="150";"02 preprocessing:00:total"="1501";"02 preprocessing:99:create artificial top task"="2";"02 preprocessing:84:grounding"="100"
#!verify __method_precondition_m1_do_put_on_1_precondition[crate3,distributor0];__method_precondition_m4_do_clear_4_precondition[crate3,distributor0];nop[];__method_precondition_m5_do_clear_5_precondition[pallet1,crate3,distributor0,hoist1];__method_precondition_m4_do_clear_4_precondition[crate3,distributor0];nop[];Lift[hoist1,crate3,pallet1,distributor0];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor0];Drive[truck1,depot0,distributor0];Load[hoist1,crate3,truck1,distributor0];__method_precondition_m8_do_lift_crate_8_precondition[crate3,truck1,hoist1,distributor0];__method_precondition_m6_do_get_truck_6_precondition[truck1,distributor0];nop[];Unload[hoist1,crate3,truck1,distributor0];Drop[hoist1,crate3,pallet1,distributor0];__method_precondition_m10_do_load_truck_10_precondition[crate2,distributor1,crate1,hoist2];__method_precondition_m7_do_get_truck_7_precondition[truck0,distributor1];Drive[truck0,depot0,distributor1];__method_precondition_m4_do_clear_4_precondition[crate2,distributor1];nop[];Lift[hoist2,crate2,crate1,distributor1];Load[hoist2,crate2,truck0,distributor1];Drive[truck0,distributor1,depot0];__method_precondition_m11_do_unload_truck_11_precondition[hoist0,pallet0,depot0,crate2,truck0];__method_precondition_m5_do_clear_5_precondition[pallet0,crate0,depot0,hoist0];__method_precondition_m4_do_clear_4_precondition[crate0,depot0];nop[];Lift[hoist0,crate0,pallet0,depot0];__method_precondition_m7_do_get_truck_7_precondition[truck1,depot0];Drive[truck1,distributor0,depot0];Load[hoist0,crate0,truck1,depot0];Unload[hoist0,crate2,truck0,depot0];Drop[hoist0,crate2,pallet0,depot0];__method_precondition_m10_do_load_truck_10_precondition[crate1,distributor1,pallet2,hoist2];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1];Drive[truck1,depot0,distributor1];__method_precondition_m4_do_clear_4_precondition[crate1,distributor1];nop[];Lift[hoist2,crate1,pallet2,distributor1];Load[hoist2,crate1,truck1,distributor1];Drive[truck1,distributor1,distributor0];__method_precondition_m11_do_unload_truck_11_precondition[hoist1,crate3,distributor0,crate1,truck1];__method_precondition_m4_do_clear_4_precondition[crate3,distributor0];nop[];Unload[hoist1,crate1,truck1,distributor0];Drop[hoist1,crate1,crate3,distributor0];__method_precondition_m2_do_put_on_2_precondition[crate0,truck1];__method_precondition_m7_do_get_truck_7_precondition[truck1,distributor1];Drive[truck1,distributor0,distributor1];__method_precondition_m4_do_clear_4_precondition[pallet2,distributor1];nop[];Unload[hoist2,crate0,truck1,distributor1];Drop[hoist2,crate0,pallet2,distributor1]
==>
0 __method_precondition_m1_do_put_on_1_precondition crate3 distributor0 
1 __method_precondition_m4_do_clear_4_precondition crate3 distributor0 
2 nop  
3 __method_precondition_m5_do_clear_5_precondition pallet1 crate3 distributor0 hoist1 
4 __method_precondition_m4_do_clear_4_precondition crate3 distributor0 
5 nop  
6 Lift hoist1 crate3 pallet1 distributor0 
7 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor0 
8 Drive truck1 depot0 distributor0 
9 Load hoist1 crate3 truck1 distributor0 
10 __method_precondition_m8_do_lift_crate_8_precondition crate3 truck1 hoist1 distributor0 
11 __method_precondition_m6_do_get_truck_6_precondition truck1 distributor0 
12 nop  
13 Unload hoist1 crate3 truck1 distributor0 
14 Drop hoist1 crate3 pallet1 distributor0 
15 __method_precondition_m10_do_load_truck_10_precondition crate2 distributor1 crate1 hoist2 
16 __method_precondition_m7_do_get_truck_7_precondition truck0 distributor1 
17 Drive truck0 depot0 distributor1 
18 __method_precondition_m4_do_clear_4_precondition crate2 distributor1 
19 nop  
20 Lift hoist2 crate2 crate1 distributor1 
21 Load hoist2 crate2 truck0 distributor1 
22 Drive truck0 distributor1 depot0 
23 __method_precondition_m11_do_unload_truck_11_precondition hoist0 pallet0 depot0 crate2 truck0 
24 __method_precondition_m5_do_clear_5_precondition pallet0 crate0 depot0 hoist0 
25 __method_precondition_m4_do_clear_4_precondition crate0 depot0 
26 nop  
27 Lift hoist0 crate0 pallet0 depot0 
28 __method_precondition_m7_do_get_truck_7_precondition truck1 depot0 
29 Drive truck1 distributor0 depot0 
30 Load hoist0 crate0 truck1 depot0 
31 Unload hoist0 crate2 truck0 depot0 
32 Drop hoist0 crate2 pallet0 depot0 
33 __method_precondition_m10_do_load_truck_10_precondition crate1 distributor1 pallet2 hoist2 
34 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor1 
35 Drive truck1 depot0 distributor1 
36 __method_precondition_m4_do_clear_4_precondition crate1 distributor1 
37 nop  
38 Lift hoist2 crate1 pallet2 distributor1 
39 Load hoist2 crate1 truck1 distributor1 
40 Drive truck1 distributor1 distributor0 
41 __method_precondition_m11_do_unload_truck_11_precondition hoist1 crate3 distributor0 crate1 truck1 
42 __method_precondition_m4_do_clear_4_precondition crate3 distributor0 
43 nop  
44 Unload hoist1 crate1 truck1 distributor0 
45 Drop hoist1 crate1 crate3 distributor0 
46 __method_precondition_m2_do_put_on_2_precondition crate0 truck1 
47 __method_precondition_m7_do_get_truck_7_precondition truck1 distributor1 
48 Drive truck1 distributor0 distributor1 
49 __method_precondition_m4_do_clear_4_precondition pallet2 distributor1 
50 nop  
51 Unload hoist2 crate0 truck1 distributor1 
52 Drop hoist2 crate0 pallet2 distributor1 
root 64
53 do_get_truck truck1 distributor1  -> m7_do_get_truck 47 48
54 do_get_truck truck1 distributor0  -> m6_do_get_truck 11 12
55 do_put_on crate3 pallet1  -> m1_do_put_on 0 66 56 63 14
56 do_clear pallet1 distributor0  -> m5_do_clear 3 67 6 59 9
57 do_get_truck truck1 distributor1  -> m7_do_get_truck 34 35
58 do_put_on crate2 pallet0  -> <<<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate2,distributor1,truck0];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate2,pallet0,depot0,truck0];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate2,crate1,distributor1,truck0];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5>;do_clear[crate2,distributor1];m4_do_clear;2;0,1,-1,-2,3,4,5,6,7,8,9> 15 68 18 19 20 21 22 23 70 31 32
59 do_get_truck truck1 distributor0  -> m7_do_get_truck 7 8
60 do_put_on crate1 crate3  -> <<<m3_do_put_on;do_load_truck_m3_do_put_on_sip_2[crate1,distributor1,truck1];_m3_do_put_on_2;0;-1,1,2>;do_unload_truck[crate1,crate3,distributor0,truck1];m11_do_unload_truck;2;0,1,-1,-2,-3,-4>;do_load_truck[crate1,pallet2,distributor1,truck1];m10_do_load_truck;0;-1,-2,-3,-4,-5,1,2,3,4,5> 33 57 71 38 39 40 41 62 44 45
61 do_clear pallet2 distributor1  -> m4_do_clear 49 50
62 do_clear crate3 distributor0  -> m4_do_clear 42 43
63 do_lift_crate crate3 distributor0 hoist1  -> m8_do_lift_crate 10 54 13
64 __choicelessATCompilation__top_1  -> __top_1 55 58 60 69
65 do_get_truck truck1 depot0  -> m7_do_get_truck 28 29
66 do_clear crate3 distributor0  -> m4_do_clear 1 2
67 do_clear crate3 distributor0  -> m4_do_clear 4 5
68 do_get_truck truck0 distributor1  -> m7_do_get_truck 16 17
69 do_put_on crate0 pallet2  -> m2_do_put_on 46 53 61 51 52
70 do_clear pallet0 depot0  -> <m5_do_clear;do_clear[crate0,depot0];m4_do_clear;1;0,-1,-2,2,3,4> 24 25 26 27 65 30
71 do_clear crate1 distributor1  -> m4_do_clear 36 37

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 5.417 MEMPEAK_KBS 545654.784
