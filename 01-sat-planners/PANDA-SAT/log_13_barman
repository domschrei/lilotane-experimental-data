PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p13.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p13.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p13.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Grounded planning graph ... done in 633ms.
	Number of Grounded Actions 3190
	Number of Grounded Literals 467
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Grounding ... done.
	number of abstract tasks = 1540
	number of tasks = 4708
	number of decomposition methods = 6005
	number of predicates = 467
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1540
	number of tasks = 4708
	number of decomposition methods = 6005
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 578ms.
	Number of Grounded Actions 3168
	Number of Grounded Literals 437
	number of abstract tasks = 1540
	number of tasks = 4708
	number of decomposition methods = 6005
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1540
	number of tasks = 4708
	number of decomposition methods = 6005
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 1106
	number of tasks = 4274
	number of decomposition methods = 5571
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1106
	number of tasks = 4274
	number of decomposition methods = 5571
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1106
	number of tasks = 4274
	number of decomposition methods = 5571
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 248ms.
	Number of Grounded Actions 3168
	Number of Grounded Literals 437
	number of abstract tasks = 1106
	number of tasks = 4274
	number of decomposition methods = 5571
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1106
	number of tasks = 4274
	number of decomposition methods = 5271
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 1106
	number of tasks = 4274
	number of decomposition methods = 5271
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 1106
	number of tasks = 4274
	number of decomposition methods = 5271
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 1106
	number of tasks = 4274
	number of decomposition methods = 5271
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1106
	number of tasks = 4274
	number of decomposition methods = 5271
	number of predicates = 437
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1243
	number of epsilon methods = 0
	number of primitive tasks = 3168
	number of constants = 0
Tasks 3168 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854766764ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854766192
done
initial PDT has 321 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 321 leafs
SHOP LEAFS 107
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 285798
Size 285783 at 0/3168
Size 283879 at 500/3168
Size 283779 at 1000/3168
Size 283689 at 1500/3168
Size 240680 at 2000/3168
Size 240561 at 2500/3168
Size 240153 at 3000/3168
Size 240153
Size 237279 at 0/3168
Size 27341 at 500/3168
Size 27317 at 1000/3168
Size 17437 at 1500/3168
Size 16939 at 2000/3168
Size 16939 at 2500/3168
Size 4889 at 3000/3168
Size 4842
Size 4842 at 0/3168
Size 4842 at 500/3168
Size 4842 at 1000/3168
Size 4769 at 1500/3168
Size 4769 at 2000/3168
Size 4769 at 2500/3168
Size 4719 at 3000/3168
Size 4714
Size 4714 at 0/3168
Size 4654 at 500/3168
Size 4654 at 1000/3168
Size 4494 at 1500/3168
Size 4494 at 2000/3168
Size 4494 at 2500/3168
Size 4394 at 3000/3168
Size 4394
Size 4394 at 0/3168
Size 4394 at 500/3168
Size 4394 at 1000/3168
Size 4394 at 1500/3168
Size 4394 at 2000/3168
Size 4394 at 2500/3168
Size 4394 at 3000/3168
Size 4394
Invariant time: 2.878
Number of invariants: 4394
Invariant Clauses 1414868
NUMBER OF CLAUSES 2166912
NUMBER OF STATE CLAUSES 1811425
NUMBER OF DECOMPOSITION CLAUSES 355487
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.59% 16.41% 0.0% 
NUMBER OF PATHS 321
Starting cryptominisat5.5
Setting starttime of solver to 1604475369565
Command exited with non-zero status 10
1.31 0.10

Time command gave the following runtime for the solver: 1410
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_11;2;2,1143 1143 _m3_get_second_ingredient_3
11;2;2 95 pathaction!3_11;2;2,3898
Consider method^3_11;1;1,4010 4010 m7_do_fill_shot
11;1;1 383 pathaction!3_11;1;1,3961
Consider method^3_4;2;1,1306 1306 _m3_get_second_ingredient_2
4;2;1 313 pathaction!3_4;2;1,1403
Consider method^2_1;2,3482 3482 m3_get_second_ingredient
1;2 402 pathaction!2_1;2,2242
Consider method^3_8;2;2,3285 3285 _m3_get_second_ingredient_3
8;2;2 267 pathaction!3_8;2;2,3894
Consider method^3_10;2;2,3034 3034 _m3_get_second_ingredient_3
10;2;2 305 pathaction!3_10;2;2,3878
Consider method^1_6,522 522 m0_do_cocktail_in_shot1
6 374 pathaction!1_6,2267
Consider method^3_2;2;1,4570 4570 _m3_get_second_ingredient_2
2;2;1 136 pathaction!3_2;2;1,1281
Consider method^3_13;1;1,1818 1818 m9_do_fill_shot
13;1;1 84 pathaction!3_13;1;1,4094
Consider method^3_4;1;2,7 7 _m2_get_first_ingredient_3
4;1;2 145 pathaction!3_4;1;2,2169
Consider method^3_11;2;1,5218 5218 _m3_get_second_ingredient_2
11;2;1 157 pathaction!3_11;2;1,1311
Consider method^3_3;3;1,615 615 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2>
3;3;1 126 pathaction!3_3;3;1,4120
Consider method^2_10;1,2068 2068 m2_get_first_ingredient
10;1 390 pathaction!2_10;1,2607
Consider method^3_9;1;1,4046 4046 m9_do_fill_shot
9;1;1 192 pathaction!3_9;1;1,3961
Consider method^2_8;3,1134 1134 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 137 pathaction!2_8;3,2345
Consider method^2_9;3,4556 4556 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 143 pathaction!2_9;3,2349
Consider method^3_0;1;2,1736 1736 _m2_get_first_ingredient_3
0;1;2 40 pathaction!3_0;1;2,2129
Consider method^1_1,91 91 m0_do_cocktail_in_shot1
1 362 pathaction!1_1,2258
Consider method^3_5;2;2,4350 4350 _m3_get_second_ingredient_3
5;2;2 403 pathaction!3_5;2;2,3874
Consider method^3_8;1;2,918 918 _m2_get_first_ingredient_3
8;1;2 282 pathaction!3_8;1;2,2221
Consider method^3_10;1;1,4970 4970 m9_do_fill_shot
10;1;1 292 pathaction!3_10;1;1,4100
Consider method^2_8;2,1796 1796 m3_get_second_ingredient
8;2 138 pathaction!2_8;2,2256
Consider method^1_9,5151 5151 m0_do_cocktail_in_shot1
9 60 pathaction!1_9,2268
Consider method^1_14,3358 3358 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
14 47 pathaction!1_14,680
Consider method^3_3;2;1,1506 1506 _m3_get_second_ingredient_2
3;2;1 406 pathaction!3_3;2;1,1400
Consider method^3_0;1;3,1009 1009 _m2_get_first_ingredient_4
0;1;3 422 pathaction!3_0;1;3,1448
Consider method^3_12;1;1,3596 3596 m9_do_fill_shot
12;1;1 325 pathaction!3_12;1;1,3961
Consider method^3_2;3;1,852 852 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2>
2;3;1 130 pathaction!3_2;3;1,4124
Consider method^3_15;1;3,203 203 _m2_get_first_ingredient_4
15;1;3 397 pathaction!3_15;1;3,1581
Consider method^3_4;3;1,4713 4713 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2>
4;3;1 24 pathaction!3_4;3;1,4112
Consider method^1_4,3037 3037 m0_do_cocktail_in_shot1
4 353 pathaction!1_4,2262
Consider method^3_5;1;3,4278 4278 _m2_get_first_ingredient_4
5;1;3 92 pathaction!3_5;1;3,1593
Consider method^2_7;2,4042 4042 m3_get_second_ingredient
7;2 85 pathaction!2_7;2,2247
Consider method^3_1;3;1,4804 4804 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 368 pathaction!3_1;3;1,4131
Consider method^0_,5270 5270 __top_1
 178 pathaction!0_,4273
Consider method^3_11;1;3,3300 3300 _m2_get_first_ingredient_4
11;1;3 280 pathaction!3_11;1;3,1455
Consider method^2_15;1,5232 5232 m2_get_first_ingredient
15;1 167 pathaction!2_15;1,2606
Consider method^3_2;1;3,3299 3299 _m2_get_first_ingredient_4
2;1;3 293 pathaction!3_2;1;3,1560
Consider method^3_8;2;1,1506 1506 _m3_get_second_ingredient_2
8;2;1 278 pathaction!3_8;2;1,1400
Consider method^2_11;2,1188 1188 m3_get_second_ingredient
11;2 289 pathaction!2_11;2,2239
Consider method^3_2;1;2,1367 1367 _m2_get_first_ingredient_3
2;1;2 235 pathaction!3_2;1;2,2190
Consider method^2_13;3,3888 3888 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot14,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
13;3 97 pathaction!2_13;3,2346
Consider method^3_7;3;1,4211 4211 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2>
7;3;1 241 pathaction!3_7;3;1,4111
Consider method^2_5;1,2663 2663 m2_get_first_ingredient
5;1 291 pathaction!2_5;1,2601
Consider method^2_4;3,2270 2270 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 344 pathaction!2_4;3,2343
Consider method^2_6;2,2007 2007 m3_get_second_ingredient
6;2 339 pathaction!2_6;2,2240
Consider method^3_2;2;2,3034 3034 _m3_get_second_ingredient_3
2;2;2 166 pathaction!3_2;2;2,3878
Consider method^3_10;1;2,775 775 _m2_get_first_ingredient_3
10;1;2 163 pathaction!3_10;1;2,2178
Consider method^3_9;1;2,71 71 _m2_get_first_ingredient_3
9;1;2 453 pathaction!3_9;1;2,2182
Consider method^2_8;1,1594 1594 m2_get_first_ingredient
8;1 195 pathaction!2_8;1,2609
Consider method^1_0,4355 4355 m0_do_cocktail_in_shot1
0 80 pathaction!1_0,2271
Consider method^2_7;3,732 732 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 463 pathaction!2_7;3,2341
Consider method^1_15,1449 1449 m0_do_cocktail_in_shot1
15 164 pathaction!1_15,2272
Consider method^1_10,3592 3592 m0_do_cocktail_in_shot1
10 231 pathaction!1_10,2269
Consider method^3_0;3;1,2564 2564 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2>
0;3;1 466 pathaction!3_0;3;1,4107
Consider method^2_12;2,1188 1188 m3_get_second_ingredient
12;2 117 pathaction!2_12;2,2239
Consider method^3_15;2;1,2957 2957 _m3_get_second_ingredient_2
15;2;1 290 pathaction!3_15;2;1,1279
Consider method^3_13;1;3,54 54 _m2_get_first_ingredient_4
13;1;3 354 pathaction!3_13;1;3,1588
Consider method^2_0;1,3603 3603 m2_get_first_ingredient
0;1 162 pathaction!2_0;1,2589
Consider method^2_1;3,5132 5132 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 128 pathaction!2_1;3,2339
Consider method^2_0;3,3136 3136 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 323 pathaction!2_0;3,2352
Consider method^3_6;1;2,4208 4208 _m2_get_first_ingredient_3
6;1;2 271 pathaction!3_6;1;2,2086
Consider method^2_9;1,2113 2113 m2_get_first_ingredient
9;1 299 pathaction!2_9;1,2592
Consider method^3_15;1;1,2368 2368 m9_do_fill_shot
15;1;1 318 pathaction!3_15;1;1,4087
Consider method^1_13,1833 1833 m0_do_cocktail_in_shot1
13 265 pathaction!1_13,2265
Consider method^1_11,2384 2384 m0_do_cocktail_in_shot1
11 184 pathaction!1_11,2259
Consider method^3_0;2;2,828 828 _m3_get_second_ingredient_3
0;2;2 386 pathaction!3_0;2;2,3865
Consider method^3_12;1;2,71 71 _m2_get_first_ingredient_3
12;1;2 42 pathaction!3_12;1;2,2182
Consider method^3_5;3;1,709 709 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 211 pathaction!3_5;3;1,4129
Consider method^3_7;1;3,2742 2742 _m2_get_first_ingredient_4
7;1;3 120 pathaction!3_7;1;3,1502
Consider method^2_10;2,1765 1765 m3_get_second_ingredient
10;2 51 pathaction!2_10;2,2254
Consider method^2_11;1,2113 2113 m2_get_first_ingredient
11;1 421 pathaction!2_11;1,2592
Consider method^3_9;2;2,1143 1143 _m3_get_second_ingredient_3
9;2;2 427 pathaction!3_9;2;2,3898
Consider method^3_1;1;3,1840 1840 _m2_get_first_ingredient_4
1;1;3 346 pathaction!3_1;1;3,1539
Consider method^3_1;2;1,1914 1914 _m3_get_second_ingredient_2
1;2;1 89 pathaction!3_1;2;1,1370
Consider method^3_4;1;3,343 343 _m2_get_first_ingredient_4
4;1;3 196 pathaction!3_4;1;3,1566
Consider method^3_10;1;3,1253 1253 _m2_get_first_ingredient_4
10;1;3 109 pathaction!3_10;1;3,1594
Consider method^3_12;2;2,1143 1143 _m3_get_second_ingredient_3
12;2;2 456 pathaction!3_12;2;2,3898
Consider method^3_13;2;2,3574 3574 _m3_get_second_ingredient_3
13;2;2 107 pathaction!3_13;2;2,3762
Consider method^3_11;3;1,917 917 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2>
11;3;1 67 pathaction!3_11;3;1,4104
Consider method^3_5;1;1,1400 1400 m9_do_fill_shot
5;1;1 70 pathaction!3_5;1;1,4099
Consider method^2_2;3,3061 3061 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 215 pathaction!2_2;3,2351
Consider method^1_3,3332 3332 m0_do_cocktail_in_shot1
3 131 pathaction!1_3,2261
Consider method^2_4;2,4397 4397 m3_get_second_ingredient
4;2 348 pathaction!2_4;2,2238
Consider method^1_12,448 448 m0_do_cocktail_in_shot1
12 350 pathaction!1_12,2263
Consider method^2_13;2,1658 1658 m3_get_second_ingredient
13;2 443 pathaction!2_13;2,2240
Consider method^3_12;2;1,5218 5218 _m3_get_second_ingredient_2
12;2;1 431 pathaction!3_12;2;1,1311
Consider method^3_11;1;2,71 71 _m2_get_first_ingredient_3
11;1;2 377 pathaction!3_11;1;2,2182
Consider method^3_3;1;1,3494 3494 m9_do_fill_shot
3;1;1 225 pathaction!3_3;1;1,4087
Consider method^2_2;1,1839 1839 m2_get_first_ingredient
2;1 220 pathaction!2_2;1,2596
Consider method^3_7;2;2,828 828 _m3_get_second_ingredient_3
7;2;2 433 pathaction!3_7;2;2,3865
Consider method^2_4;1,5120 5120 m2_get_first_ingredient
4;1 330 pathaction!2_4;1,2591
Consider method^3_0;2;1,5062 5062 _m3_get_second_ingredient_2
0;2;1 72 pathaction!3_0;2;1,1392
Consider method^2_3;3,2446 2446 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 125 pathaction!2_3;3,2342
Consider method^2_0;2,3109 3109 m3_get_second_ingredient
0;2 223 pathaction!2_0;2,2236
Consider method^2_12;3,3659 3659 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot13,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
12;3 216 pathaction!2_12;3,2344
Consider method^3_6;1;3,4278 4278 _m2_get_first_ingredient_4
6;1;3 462 pathaction!3_6;1;3,1593
Consider method^3_7;1;2,3763 3763 _m2_get_first_ingredient_3
7;1;2 99 pathaction!3_7;1;2,2092
Consider method^2_13;1,2117 2117 m2_get_first_ingredient
13;1 300 pathaction!2_13;1,2593
Consider method^3_12;1;3,3300 3300 _m2_get_first_ingredient_4
12;1;3 186 pathaction!3_12;1;3,1455
Consider method^2_15;3,2798 2798 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot16,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
15;3 208 pathaction!2_15;3,2353
Consider method^3_1;1;1,756 756 m8_do_fill_shot
1;1;1 55 pathaction!3_1;1;1,4045
Consider method^3_0;1;1,1181 1181 m8_do_fill_shot
0;1;1 408 pathaction!3_0;1;1,3954
Consider method^1_5,3375 3375 m0_do_cocktail_in_shot1
5 127 pathaction!1_5,2266
Consider method^3_12;3;1,1972 1972 <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,left];m5_do_clean_shot;0;-1,-2>
12;3;1 46 pathaction!3_12;3;1,4109
Consider method^3_15;3;1,3166 3166 <_m4_serve_shot_2;do_clean_shot[shot16,cocktail2,left];m5_do_clean_shot;0;-1,-2>
15;3;1 254 pathaction!3_15;3;1,4103
Consider method^2_7;1,4957 4957 m2_get_first_ingredient
7;1 418 pathaction!2_7;1,2600
Consider method^3_3;1;3,203 203 _m2_get_first_ingredient_4
3;1;3 6 pathaction!3_3;1;3,1581
Consider method^2_3;1,4925 4925 m2_get_first_ingredient
3;1 273 pathaction!2_3;1,2598
Consider method^1_2,3814 3814 m0_do_cocktail_in_shot1
2 233 pathaction!1_2,2270
Consider method^1_7,3840 3840 m0_do_cocktail_in_shot1
7 171 pathaction!1_7,2260
Consider method^2_1;1,8 8 m2_get_first_ingredient
1;1 18 pathaction!2_1;1,2595
Consider method^3_6;1;1,1400 1400 m9_do_fill_shot
6;1;1 465 pathaction!3_6;1;1,4099
Consider method^3_7;2;1,5062 5062 _m3_get_second_ingredient_2
7;2;1 394 pathaction!3_7;2;1,1392
Consider method^3_13;3;1,4032 4032 <_m4_serve_shot_2;do_clean_shot[shot14,cocktail8,right];m5_do_clean_shot;0;-1,-2>
13;3;1 287 pathaction!3_13;3;1,4118
Consider method^2_11;3,55 55 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 217 pathaction!2_11;3,2340
Consider method^3_9;2;1,5218 5218 _m3_get_second_ingredient_2
9;2;1 213 pathaction!3_9;2;1,1311
Consider method^3_4;1;1,3364 3364 m9_do_fill_shot
4;1;1 212 pathaction!3_4;1;1,4072
Consider method^3_8;1;3,3813 3813 _m2_get_first_ingredient_4
8;1;3 329 pathaction!3_8;1;3,1453
Consider method^3_13;2;1,4696 4696 _m3_get_second_ingredient_2
13;2;1 261 pathaction!3_13;2;1,1365
Consider method^3_5;2;1,1584 1584 _m3_get_second_ingredient_2
5;2;1 191 pathaction!3_5;2;1,1420
Consider method^3_13;1;2,2655 2655 _m2_get_first_ingredient_3
13;1;2 365 pathaction!3_13;1;2,2087
Consider method^3_9;1;3,3300 3300 _m2_get_first_ingredient_4
9;1;3 165 pathaction!3_9;1;3,1455
Consider method^2_14;1,2352 2352 m9_do_fill_shot
14;1 48 pathaction!2_14;1,4066
Consider method^3_10;2;1,4570 4570 _m3_get_second_ingredient_2
10;2;1 245 pathaction!3_10;2;1,1281
Consider method^3_9;3;1,3126 3126 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2>
9;3;1 441 pathaction!3_9;3;1,4130
Consider method^2_12;1,2113 2113 m2_get_first_ingredient
12;1 250 pathaction!2_12;1,2592
Consider method^3_15;2;2,3935 3935 _m3_get_second_ingredient_3
15;2;2 114 pathaction!3_15;2;2,3917
Consider method^3_5;1;2,4208 4208 _m2_get_first_ingredient_3
5;1;2 226 pathaction!3_5;1;2,2086
Consider method^3_7;1;1,1090 1090 m9_do_fill_shot
7;1;1 221 pathaction!3_7;1;1,4008
Consider method^3_15;1;2,1831 1831 _m2_get_first_ingredient_3
15;1;2 63 pathaction!3_15;1;2,2121
Consider method^2_3;2,2927 2927 m3_get_second_ingredient
3;2 94 pathaction!2_3;2,2245
Consider method^3_4;2;2,1870 1870 _m3_get_second_ingredient_3
4;2;2 435 pathaction!3_4;2;2,3804
Consider method^3_1;2;2,3014 3014 _m3_get_second_ingredient_3
1;2;2 5 pathaction!3_1;2;2,3801
Consider method^1_8,878 878 m0_do_cocktail_in_shot1
8 4 pathaction!1_8,2264
Consider method^2_5;3,290 290 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 181 pathaction!2_5;3,2347
Consider method^3_3;2;2,3285 3285 _m3_get_second_ingredient_3
3;2;2 122 pathaction!3_3;2;2,3894
Consider method^2_6;3,3542 3542 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 366 pathaction!2_6;3,2348
Consider method^3_6;2;2,3034 3034 _m3_get_second_ingredient_3
6;2;2 176 pathaction!3_6;2;2,3878
Consider method^3_1;1;2,4317 4317 _m2_get_first_ingredient_3
1;1;2 306 pathaction!3_1;1;2,2066
Consider method^2_15;2,1623 1623 m3_get_second_ingredient
15;2 355 pathaction!2_15;2,2253
Consider method^3_3;1;2,1831 1831 _m2_get_first_ingredient_3
3;1;2 69 pathaction!3_3;1;2,2121
Consider method^3_6;3;1,2378 2378 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2>
6;3;1 264 pathaction!3_6;3;1,4122
Consider method^3_6;2;1,4570 4570 _m3_get_second_ingredient_2
6;2;1 423 pathaction!3_6;2;1,1281
Consider method^2_6;1,1121 1121 m2_get_first_ingredient
6;1 180 pathaction!2_6;1,2593
Consider method^3_10;3;1,892 892 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 174 pathaction!3_10;3;1,4127
Consider method^2_5;2,3847 3847 m3_get_second_ingredient
5;2 410 pathaction!2_5;2,2248
Consider method^2_2;2,2304 2304 m3_get_second_ingredient
2;2 22 pathaction!2_2;2,2243
Consider method^2_9;2,1188 1188 m3_get_second_ingredient
9;2 315 pathaction!2_9;2,2239
Consider method^3_8;1;1,659 659 m9_do_fill_shot
8;1;1 369 pathaction!3_8;1;1,3959
Consider method^2_10;3,1145 1145 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 210 pathaction!2_10;3,2350
Consider method^3_2;1;1,3610 3610 m9_do_fill_shot
2;1;1 219 pathaction!3_2;1;1,4066
Consider method^3_8;3;1,4848 4848 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2>
8;3;1 379 pathaction!3_8;3;1,4116


CHECKING primitive solution of length 318 ...
true 417 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 190 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot15;]
true 144 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4;]
true 364 grasp[right,shot15;]
true 111 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 194 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 83 clean-shot[shot15,ingredient4,right,left;]
true 134 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient1,right,shot15;]
true 229 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 33 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 357 leave[right,shot15;]
true 309 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient1;]
true 73 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 100 nop[;]
true 446 grasp[right,shaker1;]
true 405 shake[cocktail11,ingredient4,ingredient1,shaker1,right,left;]
true 76 pour-shaker-to-shot[cocktail11,shot1,right,shaker1,l2,l1;]
true 272 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 61 clean-shaker[right,left,shaker1;]
true 382 leave[right,shaker1;]
true 2 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 375 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient4,shot17;]
true 159 __method_precondition_m8_do_fill_shot_8_precondition[shot17,dispenser4,ingredient4;]
true 251 grasp[left,shot17;]
true 257 fill-shot[shot17,ingredient4,left,right,dispenser4;]
true 116 pour-shot-to-clean-shaker[shot17,ingredient4,shaker1,left,l0,l1;]
true 326 clean-shot[shot17,ingredient4,left,right;]
true 146 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient3,left,shot17;]
true 263 fill-shot[shot17,ingredient3,left,right,dispenser3;]
true 255 pour-shot-to-used-shaker[shot17,ingredient3,shaker1,left,l1,l2;]
true 438 leave[left,shot17;]
true 170 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient4,ingredient3;]
true 457 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 121 nop[;]
true 52 grasp[right,shaker1;]
true 183 shake[cocktail4,ingredient4,ingredient3,shaker1,right,left;]
true 57 pour-shaker-to-shot[cocktail4,shot2,right,shaker1,l2,l1;]
true 333 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 301 clean-shaker[right,left,shaker1;]
true 140 leave[right,shaker1;]
true 286 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 455 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot15;]
true 246 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient1,dispenser2;]
true 430 grasp[left,shot15;]
true 153 clean-shot[shot15,ingredient1,left,right;]
true 413 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 358 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1;]
true 324 clean-shot[shot15,ingredient2,left,right;]
true 124 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot15;]
true 298 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 133 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 78 leave[left,shot15;]
true 197 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient4;]
true 227 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 458 nop[;]
true 149 grasp[left,shaker1;]
true 201 shake[cocktail10,ingredient2,ingredient4,shaker1,left,right;]
true 188 pour-shaker-to-shot[cocktail10,shot3,left,shaker1,l2,l1;]
true 104 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 327 clean-shaker[left,right,shaker1;]
true 429 leave[left,shaker1;]
true 259 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 398 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot17;]
true 25 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient1,ingredient3,dispenser1;]
true 44 grasp[right,shot17;]
true 14 clean-shot[shot17,ingredient3,right,left;]
true 177 fill-shot[shot17,ingredient1,right,left,dispenser1;]
true 34 pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,right,l0,l1;]
true 161 clean-shot[shot17,ingredient1,right,left;]
true 123 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,right,shot17;]
true 90 fill-shot[shot17,ingredient2,right,left,dispenser2;]
true 247 pour-shot-to-used-shaker[shot17,ingredient2,shaker1,right,l1,l2;]
true 23 leave[right,shot17;]
true 340 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient2;]
true 419 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 32 nop[;]
true 401 grasp[right,shaker1;]
true 26 shake[cocktail9,ingredient1,ingredient2,shaker1,right,left;]
true 39 pour-shaker-to-shot[cocktail9,shot4,right,shaker1,l2,l1;]
true 103 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 385 clean-shaker[right,left,shaker1;]
true 389 leave[right,shaker1;]
true 150 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 53 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot15;]
true 199 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient4,dispenser1;]
true 249 grasp[right,shot15;]
true 378 clean-shot[shot15,ingredient4,right,left;]
true 420 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 189 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1;]
true 334 clean-shot[shot15,ingredient1,right,left;]
true 449 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient5,right,shot15;]
true 447 fill-shot[shot15,ingredient5,right,left,dispenser5;]
true 30 pour-shot-to-used-shaker[shot15,ingredient5,shaker1,right,l1,l2;]
true 139 leave[right,shot15;]
true 29 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient5;]
true 228 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 198 nop[;]
true 185 grasp[right,shaker1;]
true 68 shake[cocktail5,ingredient1,ingredient5,shaker1,right,left;]
true 319 pour-shaker-to-shot[cocktail5,shot5,right,shaker1,l2,l1;]
true 436 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 132 clean-shaker[right,left,shaker1;]
true 395 leave[right,shaker1;]
true 169 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 373 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot15;]
true 310 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient5,dispenser1;]
true 445 grasp[left,shot15;]
true 31 clean-shot[shot15,ingredient5,left,right;]
true 349 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 151 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 224 clean-shot[shot15,ingredient1,left,right;]
true 444 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,left,shot15;]
true 311 fill-shot[shot15,ingredient5,left,right,dispenser5;]
true 135 pour-shot-to-used-shaker[shot15,ingredient5,shaker1,left,l1,l2;]
true 82 leave[left,shot15;]
true 351 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient5;]
true 236 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 439 nop[;]
true 258 grasp[left,shaker1;]
true 209 shake[cocktail6,ingredient1,ingredient5,shaker1,left,right;]
true 316 pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1;]
true 118 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 248 clean-shaker[left,right,shaker1;]
true 108 leave[left,shaker1;]
true 260 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 266 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot15;]
true 343 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient5,dispenser1;]
true 156 grasp[left,shot15;]
true 381 clean-shot[shot15,ingredient5,left,right;]
true 155 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 399 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 238 clean-shot[shot15,ingredient1,left,right;]
true 372 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot15;]
true 112 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 256 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 270 leave[left,shot15;]
true 415 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4;]
true 352 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 205 nop[;]
true 207 grasp[right,shaker1;]
true 335 shake[cocktail1,ingredient1,ingredient4,shaker1,right,left;]
true 363 pour-shaker-to-shot[cocktail1,shot7,right,shaker1,l2,l1;]
true 20 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 115 clean-shaker[right,left,shaker1;]
true 230 leave[right,shaker1;]
true 328 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 168 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot15;]
true 206 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient4,dispenser3;]
true 347 grasp[right,shot15;]
true 77 clean-shot[shot15,ingredient4,right,left;]
true 409 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 71 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1;]
true 380 clean-shot[shot15,ingredient3,right,left;]
true 392 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,right,shot15;]
true 203 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 288 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 50 leave[right,shot15;]
true 59 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient1;]
true 440 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 45 nop[;]
true 467 grasp[left,shaker1;]
true 338 shake[cocktail8,ingredient3,ingredient1,shaker1,left,right;]
true 407 pour-shaker-to-shot[cocktail8,shot8,left,shaker1,l2,l1;]
true 182 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 141 clean-shaker[left,right,shaker1;]
true 1 leave[left,shaker1;]
true 91 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 142 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot17;]
true 19 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient5,ingredient2,dispenser5;]
true 244 grasp[right,shot17;]
true 9 clean-shot[shot17,ingredient2,right,left;]
true 428 fill-shot[shot17,ingredient5,right,left,dispenser5;]
true 332 pour-shot-to-clean-shaker[shot17,ingredient5,shaker1,right,l0,l1;]
true 27 clean-shot[shot17,ingredient5,right,left;]
true 314 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,right,shot17;]
true 237 fill-shot[shot17,ingredient2,right,left,dispenser2;]
true 3 pour-shot-to-used-shaker[shot17,ingredient2,shaker1,right,l1,l2;]
true 308 leave[right,shot17;]
true 468 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2;]
true 295 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 200 nop[;]
true 81 grasp[left,shaker1;]
true 102 shake[cocktail7,ingredient5,ingredient2,shaker1,left,right;]
true 432 pour-shaker-to-shot[cocktail7,shot9,left,shaker1,l2,l1;]
true 356 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 13 clean-shaker[left,right,shaker1;]
true 411 leave[left,shaker1;]
true 175 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 37 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot15;]
true 101 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient1,dispenser4;]
true 367 grasp[left,shot15;]
true 158 clean-shot[shot15,ingredient1,left,right;]
true 276 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 460 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 376 clean-shot[shot15,ingredient4,left,right;]
true 269 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot15;]
true 360 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 54 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 7 leave[left,shot15;]
true 240 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient3;]
true 279 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 294 nop[;]
true 284 grasp[left,shaker1;]
true 262 shake[cocktail3,ingredient4,ingredient3,shaker1,left,right;]
true 312 pour-shaker-to-shot[cocktail3,shot10,left,shaker1,l2,l1;]
true 437 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 252 clean-shaker[left,right,shaker1;]
true 277 leave[left,shaker1;]
true 442 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 448 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient5,shot15;]
true 412 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient5,ingredient3,dispenser5;]
true 38 grasp[left,shot15;]
true 202 clean-shot[shot15,ingredient3,left,right;]
true 64 fill-shot[shot15,ingredient5,left,right,dispenser5;]
true 461 pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,left,l0,l1;]
true 105 clean-shot[shot15,ingredient5,left,right;]
true 459 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient4,left,shot15;]
true 12 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 464 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 106 leave[left,shot15;]
true 49 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient5,ingredient4;]
true 8 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 434 nop[;]
true 187 grasp[right,shaker1;]
true 450 shake[cocktail2,ingredient5,ingredient4,shaker1,right,left;]
true 243 pour-shaker-to-shot[cocktail2,shot11,right,shaker1,l2,l1;]
true 110 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 172 clean-shaker[right,left,shaker1;]
true 232 leave[right,shaker1;]
true 28 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 79 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot15;]
true 41 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient4,dispenser4;]
true 15 grasp[left,shot15;]
true 275 refill-shot[shot15,ingredient4,left,right,dispenser4;]
true 152 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 193 clean-shot[shot15,ingredient4,left,right;]
true 56 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot15;]
true 234 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 384 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 268 leave[left,shot15;]
true 302 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient3;]
true 359 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 341 nop[;]
true 371 grasp[right,shaker1;]
true 283 shake[cocktail3,ingredient4,ingredient3,shaker1,right,left;]
true 87 pour-shaker-to-shot[cocktail3,shot12,right,shaker1,l2,l1;]
true 75 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 96 clean-shaker[right,left,shaker1;]
true 274 leave[right,shaker1;]
true 0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left;]
true 285 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot15;]
true 35 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient3,dispenser4;]
true 337 grasp[left,shot15;]
true 320 clean-shot[shot15,ingredient3,left,right;]
true 469 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 43 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 86 clean-shot[shot15,ingredient4,left,right;]
true 370 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot15;]
true 21 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 160 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 321 leave[left,shot15;]
true 400 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient3;]
true 454 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 393 nop[;]
true 426 grasp[right,shaker1;]
true 98 shake[cocktail3,ingredient4,ingredient3,shaker1,right,left;]
true 470 pour-shaker-to-shot[cocktail3,shot13,right,shaker1,l2,l1;]
true 173 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 113 clean-shaker[right,left,shaker1;]
true 154 leave[right,shaker1;]
true 281 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left;]
true 36 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot17;]
true 179 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient1,ingredient2,dispenser1;]
true 93 grasp[left,shot17;]
true 218 clean-shot[shot17,ingredient2,left,right;]
true 342 fill-shot[shot17,ingredient1,left,right,dispenser1;]
true 336 pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,left,l0,l1;]
true 204 clean-shot[shot17,ingredient1,left,right;]
true 11 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot17;]
true 303 fill-shot[shot17,ingredient4,left,right,dispenser4;]
true 307 pour-shot-to-used-shaker[shot17,ingredient4,shaker1,left,l1,l2;]
true 391 leave[left,shot17;]
true 304 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4;]
true 361 __method_precondition_m5_do_clean_shot_5_precondition[shot14;]
true 222 nop[;]
true 242 grasp[left,shaker1;]
true 416 shake[cocktail1,ingredient1,ingredient4,shaker1,left,right;]
true 424 pour-shaker-to-shot[cocktail1,shot14,left,shaker1,l2,l1;]
true 452 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 58 clean-shaker[left,right,shaker1;]
true 17 leave[left,shaker1;]
true 425 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2;]
true 387 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient3,dispenser2;]
true 414 grasp[left,shot15;]
true 74 clean-shot[shot15,ingredient3,left,right;]
true 62 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 296 leave[left,shot15;]
true 396 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot16,right;]
true 148 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot17;]
true 253 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient1,ingredient4,dispenser1;]
true 297 grasp[right,shot17;]
true 214 clean-shot[shot17,ingredient4,right,left;]
true 322 fill-shot[shot17,ingredient1,right,left,dispenser1;]
true 239 pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,right,l0,l1;]
true 88 clean-shot[shot17,ingredient1,right,left;]
true 404 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,right,shot17;]
true 147 fill-shot[shot17,ingredient5,right,left,dispenser5;]
true 388 pour-shot-to-used-shaker[shot17,ingredient5,shaker1,right,l1,l2;]
true 16 leave[right,shot17;]
true 119 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient5;]
true 129 __method_precondition_m5_do_clean_shot_5_precondition[shot16;]
true 345 nop[;]
true 10 grasp[right,shaker1;]
true 331 shake[cocktail6,ingredient1,ingredient5,shaker1,right,left;]
true 66 pour-shaker-to-shot[cocktail6,shot16,right,shaker1,l2,l1;]
true 317 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 451 clean-shaker[right,left,shaker1;]
true 65 leave[right,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 676286800
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 437
number of actions                    = 4274
number of abstract actions           = 1106
number of primitive actions          = 3168
number of methods                    = 5271
number of primitive shop actions     = 1243
number of primitive non-shop actions = 1925
size of largest method               = 16
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 380250
number of clauses               = 2166912
average size of clauses         = 2.4190137855159786
number of assert                = 193
number of horn                  = 1895818
K offset                        = 0
K chosen value                  = 4
state formula                   = 1811425
method children clauses         = 0
number of paths                 = 321
maximum plan length             = 321
number of decomposition clauses = 355487
number of ordering clauses      = 0
number of state clauses         = 1811425
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 22235
============ parsing ============
total                         = 1153
file parser                   = 625
sort expansion                = 270
closed world assumption       = 156
inherit preconditions         = 0
shop methods                  = 12
eliminate identical variables = 33
strip domain of hybridity     = 2
flatten formula               = 55
============ preprocessing ============
total                                      = 7209
compile negative preconditions             = 52
compile unit methods                       = 0
split parameter                            = 53
expand choiceless abstract tasks           = 611
compile methods with identical tasks       = 48
removing unnecessary predicates            = 1104
lifted reachabiltiy analysis               = 75
grounded planning graph analysis           = 2103
grounded task decomposition graph analysis = 2364
grounding                                  = 747
create artificial top task                 = 19
============ search preparation ============
compute state invariants = 3377
============ sat ============
total                                        = 10645
generate formula                             = 8288
generate path decomposition tree             = 468
normalise path decomposition tree            = 115
sog optimisation                             = 98
translate path decomposition tree to clauses = 1108
generate state formula                       = 7574
generate state invariant formula             = 935
transform to DIMACS                          = 620
SAT solver                                   = 1410
SAT solver for K=0004                        = 1410

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="3168";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="1106";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="676286800";"40 sat:20:state formula"="1811425";"40 sat:01:number of variables"="380250";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="321";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="5271";"30 problem:07:number of primitive shop actions"="1243";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="4274";"30 problem:08:number of primitive non-shop actions"="1925";"30 problem:02:number of predicates"="437";"40 sat:03:number of horn"="1895818";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="16";"40 sat:03:average size of clauses"="2.4190137855159786";"40 sat:02:number of clauses"="2166912";"40 sat:50:number of state clauses"="1811425";"40 sat:03:number of assert"="193";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="321";"40 sat:50:number of decomposition clauses"="355487";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="625";"01 parsing:08:flatten formula"="55";"40 sat:41:SAT solver for K=0004"="1410";"40 sat:00:total"="10645";"40 sat:16:generate state formula"="7574";"40 sat:20:transform to DIMACS"="620";"40 sat:11:generate path decomposition tree"="468";"02 preprocessing:07:compile methods with identical tasks"="48";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="1104";"01 parsing:03:closed world assumption"="156";"02 preprocessing:11:lifted reachabiltiy analysis"="75";"01 parsing:02:sort expansion"="270";"40 sat:12:normalise path decomposition tree"="115";"40 sat:40:SAT solver"="1410";"01 parsing:00:total"="1153";"40 sat:10:generate formula"="8288";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="52";"00 total:00:total"="22235";"40 sat:13:sog optimisation"="98";"02 preprocessing:12:grounded planning graph analysis"="2103";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="2364";"02 preprocessing:04:split parameter"="53";"01 parsing:05:shop methods"="12";"10 search preparation:02:compute state invariants"="3377";"01 parsing:06:eliminate identical variables"="33";"40 sat:15:translate path decomposition tree to clauses"="1108";"02 preprocessing:05:expand choiceless abstract tasks"="611";"40 sat:17:generate state invariant formula"="935";"02 preprocessing:00:total"="7209";"02 preprocessing:99:create artificial top task"="19";"02 preprocessing:84:grounding"="747"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4];grasp[right,shot15];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1];clean-shot[shot15,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient1,right,shot15];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[right,shaker1];shake[cocktail11,ingredient4,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot1,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient4,shot17];__method_precondition_m8_do_fill_shot_8_precondition[shot17,dispenser4,ingredient4];grasp[left,shot17];fill-shot[shot17,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot17,ingredient4,shaker1,left,l0,l1];clean-shot[shot17,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient3,left,shot17];fill-shot[shot17,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot17,ingredient3,shaker1,left,l1,l2];leave[left,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail4,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient1,dispenser2];grasp[left,shot15];clean-shot[shot15,ingredient1,left,right];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1];clean-shot[shot15,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[left,shaker1];shake[cocktail10,ingredient2,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot3,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient1,ingredient3,dispenser1];grasp[right,shot17];clean-shot[shot17,ingredient3,right,left];fill-shot[shot17,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,right,l0,l1];clean-shot[shot17,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,right,shot17];fill-shot[shot17,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot17,ingredient2,shaker1,right,l1,l2];leave[right,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[right,shaker1];shake[cocktail9,ingredient1,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot4,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient4,dispenser1];grasp[right,shot15];clean-shot[shot15,ingredient4,right,left];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1];clean-shot[shot15,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient5,right,shot15];fill-shot[shot15,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot15,ingredient5,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[right,shaker1];shake[cocktail5,ingredient1,ingredient5,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot5,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient5,dispenser1];grasp[left,shot15];clean-shot[shot15,ingredient5,left,right];fill-shot[shot15,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1];clean-shot[shot15,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,left,shot15];fill-shot[shot15,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot15,ingredient5,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail6,ingredient1,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient5,dispenser1];grasp[left,shot15];clean-shot[shot15,ingredient5,left,right];fill-shot[shot15,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1];clean-shot[shot15,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[right,shaker1];shake[cocktail1,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail1,shot7,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail1,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient4,dispenser3];grasp[right,shot15];clean-shot[shot15,ingredient4,right,left];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1];clean-shot[shot15,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient1,right,shot15];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[left,shaker1];shake[cocktail8,ingredient3,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail8,shot8,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail8,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient5,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient5,ingredient2,dispenser5];grasp[right,shot17];clean-shot[shot17,ingredient2,right,left];fill-shot[shot17,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot17,ingredient5,shaker1,right,l0,l1];clean-shot[shot17,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,right,shot17];fill-shot[shot17,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot17,ingredient2,shaker1,right,l1,l2];leave[right,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[left,shaker1];shake[cocktail7,ingredient5,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot9,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient1,dispenser4];grasp[left,shot15];clean-shot[shot15,ingredient1,left,right];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1];clean-shot[shot15,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail3,ingredient4,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient5,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient5,ingredient3,dispenser5];grasp[left,shot15];clean-shot[shot15,ingredient3,left,right];fill-shot[shot15,ingredient5,left,right,dispenser5];pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,left,l0,l1];clean-shot[shot15,ingredient5,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient5,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail2,ingredient5,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient4,dispenser4];grasp[left,shot15];refill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1];clean-shot[shot15,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[right,shaker1];shake[cocktail3,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail3,shot12,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail3,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient4,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient3,dispenser4];grasp[left,shot15];clean-shot[shot15,ingredient3,left,right];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1];clean-shot[shot15,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot13];nop[];grasp[right,shaker1];shake[cocktail3,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail3,shot13,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail3,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient1,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient1,ingredient2,dispenser1];grasp[left,shot17];clean-shot[shot17,ingredient2,left,right];fill-shot[shot17,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,left,l0,l1];clean-shot[shot17,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient4,left,shot17];fill-shot[shot17,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot17,ingredient4,shaker1,left,l1,l2];leave[left,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot14];nop[];grasp[left,shaker1];shake[cocktail1,ingredient1,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot14,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser2,ingredient2];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient3,dispenser2];grasp[left,shot15];clean-shot[shot15,ingredient3,left,right];fill-shot[shot15,ingredient2,left,right,dispenser2];leave[left,shot15];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot16,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient1,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient1,ingredient4,dispenser1];grasp[right,shot17];clean-shot[shot17,ingredient4,right,left];fill-shot[shot17,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,right,l0,l1];clean-shot[shot17,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient5,right,shot17];fill-shot[shot17,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot17,ingredient5,shaker1,right,l1,l2];leave[right,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient1,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot16];nop[];grasp[right,shaker1];shake[cocktail6,ingredient1,ingredient5,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot16,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 right 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient4 shot15 
2 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser4 ingredient4 
3 grasp right shot15 
4 fill-shot shot15 ingredient4 right left dispenser4 
5 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 
6 clean-shot shot15 ingredient4 right left 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient1 right shot15 
8 fill-shot shot15 ingredient1 right left dispenser1 
9 pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 
10 leave right shot15 
11 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient4 ingredient1 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp right shaker1 
15 shake cocktail11 ingredient4 ingredient1 shaker1 right left 
16 pour-shaker-to-shot cocktail11 shot1 right shaker1 l2 l1 
17 empty-shaker right shaker1 cocktail11 l1 l0 
18 clean-shaker right left shaker1 
19 leave right shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 left 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient4 shot17 
22 __method_precondition_m8_do_fill_shot_8_precondition shot17 dispenser4 ingredient4 
23 grasp left shot17 
24 fill-shot shot17 ingredient4 left right dispenser4 
25 pour-shot-to-clean-shaker shot17 ingredient4 shaker1 left l0 l1 
26 clean-shot shot17 ingredient4 left right 
27 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient3 left shot17 
28 fill-shot shot17 ingredient3 left right dispenser3 
29 pour-shot-to-used-shaker shot17 ingredient3 shaker1 left l1 l2 
30 leave left shot17 
31 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient4 ingredient3 
32 __method_precondition_m5_do_clean_shot_5_precondition shot2 
33 nop  
34 grasp right shaker1 
35 shake cocktail4 ingredient4 ingredient3 shaker1 right left 
36 pour-shaker-to-shot cocktail4 shot2 right shaker1 l2 l1 
37 empty-shaker right shaker1 cocktail4 l1 l0 
38 clean-shaker right left shaker1 
39 leave right shaker1 
40 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
41 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient2 shot15 
42 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient2 ingredient1 dispenser2 
43 grasp left shot15 
44 clean-shot shot15 ingredient1 left right 
45 fill-shot shot15 ingredient2 left right dispenser2 
46 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 
47 clean-shot shot15 ingredient2 left right 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient4 left shot15 
49 fill-shot shot15 ingredient4 left right dispenser4 
50 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
51 leave left shot15 
52 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient2 ingredient4 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp left shaker1 
56 shake cocktail10 ingredient2 ingredient4 shaker1 left right 
57 pour-shaker-to-shot cocktail10 shot3 left shaker1 l2 l1 
58 empty-shaker left shaker1 cocktail10 l1 l0 
59 clean-shaker left right shaker1 
60 leave left shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 right 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient1 shot17 
63 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient1 ingredient3 dispenser1 
64 grasp right shot17 
65 clean-shot shot17 ingredient3 right left 
66 fill-shot shot17 ingredient1 right left dispenser1 
67 pour-shot-to-clean-shaker shot17 ingredient1 shaker1 right l0 l1 
68 clean-shot shot17 ingredient1 right left 
69 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient2 right shot17 
70 fill-shot shot17 ingredient2 right left dispenser2 
71 pour-shot-to-used-shaker shot17 ingredient2 shaker1 right l1 l2 
72 leave right shot17 
73 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient1 ingredient2 
74 __method_precondition_m5_do_clean_shot_5_precondition shot4 
75 nop  
76 grasp right shaker1 
77 shake cocktail9 ingredient1 ingredient2 shaker1 right left 
78 pour-shaker-to-shot cocktail9 shot4 right shaker1 l2 l1 
79 empty-shaker right shaker1 cocktail9 l1 l0 
80 clean-shaker right left shaker1 
81 leave right shaker1 
82 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 right 
83 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient1 shot15 
84 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient4 dispenser1 
85 grasp right shot15 
86 clean-shot shot15 ingredient4 right left 
87 fill-shot shot15 ingredient1 right left dispenser1 
88 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 
89 clean-shot shot15 ingredient1 right left 
90 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient5 right shot15 
91 fill-shot shot15 ingredient5 right left dispenser5 
92 pour-shot-to-used-shaker shot15 ingredient5 shaker1 right l1 l2 
93 leave right shot15 
94 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient1 ingredient5 
95 __method_precondition_m5_do_clean_shot_5_precondition shot5 
96 nop  
97 grasp right shaker1 
98 shake cocktail5 ingredient1 ingredient5 shaker1 right left 
99 pour-shaker-to-shot cocktail5 shot5 right shaker1 l2 l1 
100 empty-shaker right shaker1 cocktail5 l1 l0 
101 clean-shaker right left shaker1 
102 leave right shaker1 
103 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
104 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient1 shot15 
105 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient5 dispenser1 
106 grasp left shot15 
107 clean-shot shot15 ingredient5 left right 
108 fill-shot shot15 ingredient1 left right dispenser1 
109 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 
110 clean-shot shot15 ingredient1 left right 
111 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient5 left shot15 
112 fill-shot shot15 ingredient5 left right dispenser5 
113 pour-shot-to-used-shaker shot15 ingredient5 shaker1 left l1 l2 
114 leave left shot15 
115 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient1 ingredient5 
116 __method_precondition_m5_do_clean_shot_5_precondition shot6 
117 nop  
118 grasp left shaker1 
119 shake cocktail6 ingredient1 ingredient5 shaker1 left right 
120 pour-shaker-to-shot cocktail6 shot6 left shaker1 l2 l1 
121 empty-shaker left shaker1 cocktail6 l1 l0 
122 clean-shaker left right shaker1 
123 leave left shaker1 
124 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
125 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient1 shot15 
126 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient5 dispenser1 
127 grasp left shot15 
128 clean-shot shot15 ingredient5 left right 
129 fill-shot shot15 ingredient1 left right dispenser1 
130 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 
131 clean-shot shot15 ingredient1 left right 
132 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient4 left shot15 
133 fill-shot shot15 ingredient4 left right dispenser4 
134 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
135 leave left shot15 
136 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient1 ingredient4 
137 __method_precondition_m5_do_clean_shot_5_precondition shot7 
138 nop  
139 grasp right shaker1 
140 shake cocktail1 ingredient1 ingredient4 shaker1 right left 
141 pour-shaker-to-shot cocktail1 shot7 right shaker1 l2 l1 
142 empty-shaker right shaker1 cocktail1 l1 l0 
143 clean-shaker right left shaker1 
144 leave right shaker1 
145 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
146 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot15 
147 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient3 ingredient4 dispenser3 
148 grasp right shot15 
149 clean-shot shot15 ingredient4 right left 
150 fill-shot shot15 ingredient3 right left dispenser3 
151 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 
152 clean-shot shot15 ingredient3 right left 
153 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient1 right shot15 
154 fill-shot shot15 ingredient1 right left dispenser1 
155 pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 
156 leave right shot15 
157 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient1 
158 __method_precondition_m5_do_clean_shot_5_precondition shot8 
159 nop  
160 grasp left shaker1 
161 shake cocktail8 ingredient3 ingredient1 shaker1 left right 
162 pour-shaker-to-shot cocktail8 shot8 left shaker1 l2 l1 
163 empty-shaker left shaker1 cocktail8 l1 l0 
164 clean-shaker left right shaker1 
165 leave left shaker1 
166 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
167 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient5 shot17 
168 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient5 ingredient2 dispenser5 
169 grasp right shot17 
170 clean-shot shot17 ingredient2 right left 
171 fill-shot shot17 ingredient5 right left dispenser5 
172 pour-shot-to-clean-shaker shot17 ingredient5 shaker1 right l0 l1 
173 clean-shot shot17 ingredient5 right left 
174 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient2 right shot17 
175 fill-shot shot17 ingredient2 right left dispenser2 
176 pour-shot-to-used-shaker shot17 ingredient2 shaker1 right l1 l2 
177 leave right shot17 
178 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient5 ingredient2 
179 __method_precondition_m5_do_clean_shot_5_precondition shot9 
180 nop  
181 grasp left shaker1 
182 shake cocktail7 ingredient5 ingredient2 shaker1 left right 
183 pour-shaker-to-shot cocktail7 shot9 left shaker1 l2 l1 
184 empty-shaker left shaker1 cocktail7 l1 l0 
185 clean-shaker left right shaker1 
186 leave left shaker1 
187 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
188 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient4 shot15 
189 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient4 ingredient1 dispenser4 
190 grasp left shot15 
191 clean-shot shot15 ingredient1 left right 
192 fill-shot shot15 ingredient4 left right dispenser4 
193 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 
194 clean-shot shot15 ingredient4 left right 
195 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient3 left shot15 
196 fill-shot shot15 ingredient3 left right dispenser3 
197 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
198 leave left shot15 
199 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient4 ingredient3 
200 __method_precondition_m5_do_clean_shot_5_precondition shot10 
201 nop  
202 grasp left shaker1 
203 shake cocktail3 ingredient4 ingredient3 shaker1 left right 
204 pour-shaker-to-shot cocktail3 shot10 left shaker1 l2 l1 
205 empty-shaker left shaker1 cocktail3 l1 l0 
206 clean-shaker left right shaker1 
207 leave left shaker1 
208 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
209 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient5 shot15 
210 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient5 ingredient3 dispenser5 
211 grasp left shot15 
212 clean-shot shot15 ingredient3 left right 
213 fill-shot shot15 ingredient5 left right dispenser5 
214 pour-shot-to-clean-shaker shot15 ingredient5 shaker1 left l0 l1 
215 clean-shot shot15 ingredient5 left right 
216 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient4 left shot15 
217 fill-shot shot15 ingredient4 left right dispenser4 
218 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
219 leave left shot15 
220 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient5 ingredient4 
221 __method_precondition_m5_do_clean_shot_5_precondition shot11 
222 nop  
223 grasp right shaker1 
224 shake cocktail2 ingredient5 ingredient4 shaker1 right left 
225 pour-shaker-to-shot cocktail2 shot11 right shaker1 l2 l1 
226 empty-shaker right shaker1 cocktail2 l1 l0 
227 clean-shaker right left shaker1 
228 leave right shaker1 
229 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 left 
230 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient4 shot15 
231 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient4 dispenser4 
232 grasp left shot15 
233 refill-shot shot15 ingredient4 left right dispenser4 
234 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 
235 clean-shot shot15 ingredient4 left right 
236 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient3 left shot15 
237 fill-shot shot15 ingredient3 left right dispenser3 
238 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
239 leave left shot15 
240 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient4 ingredient3 
241 __method_precondition_m5_do_clean_shot_5_precondition shot12 
242 nop  
243 grasp right shaker1 
244 shake cocktail3 ingredient4 ingredient3 shaker1 right left 
245 pour-shaker-to-shot cocktail3 shot12 right shaker1 l2 l1 
246 empty-shaker right shaker1 cocktail3 l1 l0 
247 clean-shaker right left shaker1 
248 leave right shaker1 
249 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot13 left 
250 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient4 shot15 
251 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient4 ingredient3 dispenser4 
252 grasp left shot15 
253 clean-shot shot15 ingredient3 left right 
254 fill-shot shot15 ingredient4 left right dispenser4 
255 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 
256 clean-shot shot15 ingredient4 left right 
257 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient3 left shot15 
258 fill-shot shot15 ingredient3 left right dispenser3 
259 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
260 leave left shot15 
261 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient4 ingredient3 
262 __method_precondition_m5_do_clean_shot_5_precondition shot13 
263 nop  
264 grasp right shaker1 
265 shake cocktail3 ingredient4 ingredient3 shaker1 right left 
266 pour-shaker-to-shot cocktail3 shot13 right shaker1 l2 l1 
267 empty-shaker right shaker1 cocktail3 l1 l0 
268 clean-shaker right left shaker1 
269 leave right shaker1 
270 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot14 left 
271 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient1 shot17 
272 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient1 ingredient2 dispenser1 
273 grasp left shot17 
274 clean-shot shot17 ingredient2 left right 
275 fill-shot shot17 ingredient1 left right dispenser1 
276 pour-shot-to-clean-shaker shot17 ingredient1 shaker1 left l0 l1 
277 clean-shot shot17 ingredient1 left right 
278 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient4 left shot17 
279 fill-shot shot17 ingredient4 left right dispenser4 
280 pour-shot-to-used-shaker shot17 ingredient4 shaker1 left l1 l2 
281 leave left shot17 
282 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient1 ingredient4 
283 __method_precondition_m5_do_clean_shot_5_precondition shot14 
284 nop  
285 grasp left shaker1 
286 shake cocktail1 ingredient1 ingredient4 shaker1 left right 
287 pour-shaker-to-shot cocktail1 shot14 left shaker1 l2 l1 
288 empty-shaker left shaker1 cocktail1 l1 l0 
289 clean-shaker left right shaker1 
290 leave left shaker1 
291 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser2 ingredient2 
292 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient2 ingredient3 dispenser2 
293 grasp left shot15 
294 clean-shot shot15 ingredient3 left right 
295 fill-shot shot15 ingredient2 left right dispenser2 
296 leave left shot15 
297 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot16 right 
298 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient1 shot17 
299 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient1 ingredient4 dispenser1 
300 grasp right shot17 
301 clean-shot shot17 ingredient4 right left 
302 fill-shot shot17 ingredient1 right left dispenser1 
303 pour-shot-to-clean-shaker shot17 ingredient1 shaker1 right l0 l1 
304 clean-shot shot17 ingredient1 right left 
305 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient5 right shot17 
306 fill-shot shot17 ingredient5 right left dispenser5 
307 pour-shot-to-used-shaker shot17 ingredient5 shaker1 right l1 l2 
308 leave right shot17 
309 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient1 ingredient5 
310 __method_precondition_m5_do_clean_shot_5_precondition shot16 
311 nop  
312 grasp right shaker1 
313 shake cocktail6 ingredient1 ingredient5 shaker1 right left 
314 pour-shaker-to-shot cocktail6 shot16 right shaker1 l2 l1 
315 empty-shaker right shaker1 cocktail6 l1 l0 
316 clean-shaker right left shaker1 
317 leave right shaker1 
root 339
318 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 104 373 337 349
319 serve_shot shot1 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 408 14 15 16 17 18 19
320 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient2 right  -> _m3_get_second_ingredient_2 175
321 do_clean_shot_m4_serve_shot_sip_2 shot13 left  -> <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,left];m5_do_clean_shot;0;-1,-2> 262 263
322 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 130
323 do_fill_shot shot15 ingredient2 left  -> m9_do_fill_shot 42 43 44 45
324 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 88
325 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 221 222
326 serve_shot shot4 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 73 381 76 77 78 79 80 81
327 do_fill_shot shot15 ingredient1 left  -> m9_do_fill_shot 126 127 128 129
328 serve_shot shot3 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 52 459 55 56 57 58 59 60
329 serve_shot shot16 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot16,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 309 390 312 313 314 315 316 317
330 get_second_ingredient cocktail7 right  -> m3_get_second_ingredient 174 320 455 177
331 do_cocktail_in_shot1 shot8 cocktail8  -> m0_do_cocktail_in_shot1 145 456 384 376
332 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 left  -> _m2_get_first_ingredient_4 131
333 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient3 left  -> _m3_get_second_ingredient_2 28
334 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 307
335 serve_shot shot2 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 31 447 34 35 36 37 38 39
336 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 193
337 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 109
338 do_fill_shot shot17 ingredient1 left  -> m9_do_fill_shot 272 273 274 275
339 __choicelessATCompilation__top_1  -> __top_1 358 460 402 366 454 398 348 331 422 375 394 438 350 382 387 445
340 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 116 117
341 serve_shot shot6 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 115 340 118 119 120 121 122 123
342 serve_shot shot9 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 178 367 181 182 183 184 185 186
343 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 234
344 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 left  -> _m2_get_first_ingredient_4 194
345 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient2 right  -> _m3_get_second_ingredient_2 70
346 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 left  -> _m2_get_first_ingredient_4 235
347 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 271 338 399 351
348 do_cocktail_in_shot1 shot7 cocktail1  -> m0_do_cocktail_in_shot1 124 401 388 372
349 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 left  -> _m2_get_first_ingredient_4 110
350 do_cocktail_in_shot1 shot13 cocktail3  -> m0_do_cocktail_in_shot1 249 380 374 450
351 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient1 left  -> _m2_get_first_ingredient_4 277
352 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 right  -> _m2_get_first_ingredient_4 89
353 do_fill_shot shot15 ingredient4 right  -> m8_do_fill_shot 2 3 4
354 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 303
355 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 305 466 334 308
356 serve_shot shot5 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 94 462 97 98 99 100 101 102
357 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 259
358 do_cocktail_in_shot1 shot1 cocktail11  -> m0_do_cocktail_in_shot1 0 414 396 319
359 do_fill_shot shot17 ingredient4 left  -> m8_do_fill_shot 22 23 24
360 do_fill_shot shot17 ingredient1 right  -> m9_do_fill_shot 299 300 301 302
361 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 195 464 379 198
362 do_fill_shot shot15 ingredient4 left  -> m9_do_fill_shot 251 252 253 254
363 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 62 406 416 435
364 do_fill_shot shot15 ingredient4 left  -> m7_do_fill_shot 231 232 233
365 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 113
366 do_cocktail_in_shot1 shot4 cocktail9  -> m0_do_cocktail_in_shot1 61 363 458 326
367 do_clean_shot_m4_serve_shot_sip_2 shot9 right  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2> 179 180
368 do_clean_shot_m4_serve_shot_sip_2 shot12 left  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2> 241 242
369 do_fill_shot shot15 ingredient2 left  -> m9_do_fill_shot 292 293 294 295
370 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient5 shaker1 left  -> _m2_get_first_ingredient_3 214
371 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 left  -> _m2_get_first_ingredient_4 256
372 serve_shot shot7 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot7,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 136 457 139 140 141 142 143 144
373 do_fill_shot shot15 ingredient1 left  -> m9_do_fill_shot 105 106 107 108
374 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 257 405 357 260
375 do_cocktail_in_shot1 shot10 cocktail3  -> m0_do_cocktail_in_shot1 187 434 361 429
376 serve_shot shot8 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 157 407 160 161 162 163 164 165
377 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 25
378 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 133
379 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 197
380 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 250 362 393 371
381 do_clean_shot_m4_serve_shot_sip_2 shot4 left  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2> 74 75
382 do_cocktail_in_shot1 shot14 cocktail1  -> m0_do_cocktail_in_shot1 270 347 397 426
383 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 50
384 get_second_ingredient cocktail8 right  -> m3_get_second_ingredient 153 467 417 156
385 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 111 469 365 114
386 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient4 left  -> _m3_get_second_ingredient_2 279
387 do_cocktail_in_shot2 shot15 ingredient2  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient2];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 291 369 296
388 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 132 378 470 135
389 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 left  -> _m2_get_first_ingredient_4 47
390 do_clean_shot_m4_serve_shot_sip_2 shot16 left  -> <_m4_serve_shot_2;do_clean_shot[shot16,cocktail2,left];m5_do_clean_shot;0;-1,-2> 310 311
391 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient5 right  -> _m2_get_first_ingredient_4 173
392 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 172
393 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 255
394 do_cocktail_in_shot1 shot11 cocktail2  -> m0_do_cocktail_in_shot1 208 465 451 421
395 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 298 360 354 452
396 get_second_ingredient cocktail11 right  -> m3_get_second_ingredient 7 418 446 10
397 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 278 386 424 281
398 do_cocktail_in_shot1 shot6 cocktail6  -> m0_do_cocktail_in_shot1 103 318 385 341
399 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 276
400 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 5
401 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 125 327 322 332
402 do_cocktail_in_shot1 shot3 cocktail10  -> m0_do_cocktail_in_shot1 40 461 444 328
403 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 29
404 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 right  -> _m2_get_first_ingredient_4 6
405 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 258
406 do_fill_shot shot17 ingredient1 right  -> m9_do_fill_shot 63 64 65 66
407 do_clean_shot_m4_serve_shot_sip_2 shot8 right  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2> 158 159
408 do_clean_shot_m4_serve_shot_sip_2 shot1 left  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2> 12 13
409 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient5 right  -> _m3_get_second_ingredient_2 91
410 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 right  -> _m2_get_first_ingredient_4 152
411 get_first_ingredient cocktail4 left  -> m2_get_first_ingredient 21 359 377 436
412 do_clean_shot_m4_serve_shot_sip_2 shot14 right  -> <_m4_serve_shot_2;do_clean_shot[shot14,cocktail8,right];m5_do_clean_shot;0;-1,-2> 283 284
413 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 238
414 get_first_ingredient cocktail11 right  -> m2_get_first_ingredient 1 353 400 404
415 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 90 409 427 93
416 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 67
417 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 155
418 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient1 right  -> _m3_get_second_ingredient_2 8
419 do_fill_shot shot15 ingredient3 right  -> m9_do_fill_shot 147 148 149 150
420 do_fill_shot shot15 ingredient5 left  -> m9_do_fill_shot 210 211 212 213
421 serve_shot shot11 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 220 325 223 224 225 226 227 228
422 do_cocktail_in_shot1 shot9 cocktail7  -> m0_do_cocktail_in_shot1 166 437 330 342
423 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 217
424 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 280
425 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 151
426 serve_shot shot14 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot14,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 282 412 285 286 287 288 289 290
427 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 92
428 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 46
429 serve_shot shot10 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 199 431 202 203 204 205 206 207
430 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 218
431 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2> 200 201
432 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient5 left  -> _m2_get_first_ingredient_4 215
433 do_fill_shot shot15 ingredient1 right  -> m9_do_fill_shot 84 85 86 87
434 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 188 441 336 344
435 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient1 right  -> _m2_get_first_ingredient_4 68
436 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient4 left  -> _m2_get_first_ingredient_4 26
437 get_first_ingredient cocktail7 right  -> m2_get_first_ingredient 167 443 392 391
438 do_cocktail_in_shot1 shot12 cocktail3  -> m0_do_cocktail_in_shot1 229 453 463 448
439 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 83 433 324 352
440 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 49
441 do_fill_shot shot15 ingredient4 left  -> m9_do_fill_shot 189 190 191 192
442 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 71
443 do_fill_shot shot17 ingredient5 right  -> m9_do_fill_shot 168 169 170 171
444 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 48 440 383 51
445 do_cocktail_in_shot1 shot16 cocktail6  -> m0_do_cocktail_in_shot1 297 395 355 329
446 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 9
447 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 32 33
448 serve_shot shot12 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 240 368 243 244 245 246 247 248
449 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 237
450 serve_shot shot13 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot13,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 261 321 264 265 266 267 268 269
451 get_second_ingredient cocktail2 left  -> m3_get_second_ingredient 216 423 430 219
452 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient1 right  -> _m2_get_first_ingredient_4 304
453 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 230 364 343 346
454 do_cocktail_in_shot1 shot5 cocktail5  -> m0_do_cocktail_in_shot1 82 439 415 356
455 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 176
456 get_first_ingredient cocktail8 right  -> m2_get_first_ingredient 146 419 425 410
457 do_clean_shot_m4_serve_shot_sip_2 shot7 left  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail7,left];m5_do_clean_shot;0;-1,-2> 137 138
458 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 69 345 442 72
459 do_clean_shot_m4_serve_shot_sip_2 shot3 right  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2> 53 54
460 do_cocktail_in_shot1 shot2 cocktail4  -> m0_do_cocktail_in_shot1 20 411 468 335
461 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 41 323 428 389
462 do_clean_shot_m4_serve_shot_sip_2 shot5 left  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2> 95 96
463 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 236 449 413 239
464 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 196
465 get_first_ingredient cocktail2 left  -> m2_get_first_ingredient 209 420 370 432
466 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient5 right  -> _m3_get_second_ingredient_2 306
467 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient1 right  -> _m3_get_second_ingredient_2 154
468 get_second_ingredient cocktail4 left  -> m3_get_second_ingredient 27 333 403 30
469 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient5 left  -> _m3_get_second_ingredient_2 112
470 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 134

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 24.471 MEMPEAK_KBS 964604.928
