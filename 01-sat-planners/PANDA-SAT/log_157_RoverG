PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/RoverG/domain.hddl instances/RoverG/p05.hddl"


Planner Configuration
=====================
Domain: instances/RoverG/domain.hddl
Problem: instances/RoverG/p05.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p05.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 26
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 25
Compiling negative preconditions ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 25
Compiling split parameters ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 25
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 25
Grounded planning graph ... done in 305ms.
	Number of Grounded Actions 549
	Number of Grounded Literals 303
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 25
Two Way TDG ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 25
Grounding ... done.
	number of abstract tasks = 199
	number of tasks = 732
	number of decomposition methods = 642
	number of predicates = 447
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 199
	number of tasks = 732
	number of decomposition methods = 642
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 70ms.
	Number of Grounded Actions 533
	Number of Grounded Literals 87
	number of abstract tasks = 199
	number of tasks = 732
	number of decomposition methods = 642
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 199
	number of tasks = 732
	number of decomposition methods = 642
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 198
	number of tasks = 731
	number of decomposition methods = 641
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 198
	number of tasks = 731
	number of decomposition methods = 641
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 198
	number of tasks = 731
	number of decomposition methods = 641
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 14ms.
	Number of Grounded Actions 533
	Number of Grounded Literals 87
	number of abstract tasks = 198
	number of tasks = 731
	number of decomposition methods = 641
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 198
	number of tasks = 731
	number of decomposition methods = 641
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 198
	number of tasks = 731
	number of decomposition methods = 641
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 198
	number of tasks = 731
	number of decomposition methods = 641
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 208
	number of tasks = 741
	number of decomposition methods = 651
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 208
	number of tasks = 741
	number of decomposition methods = 651
	number of predicates = 87
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 329
	number of epsilon methods = 0
	number of primitive tasks = 533
	number of constants = 0
Tasks 533 - 91
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854772427ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 102 will abort at 9223372036854772341
done
initial PDT has 201 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 134 leafs
SHOP LEAFS 77
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 11223
Size 11223 at 0/533
Size 2082 at 500/533
Size 2025
Size 2025 at 0/533
Size 198 at 500/533
Size 198
Size 198 at 0/533
Size 139 at 500/533
Size 139
Size 139 at 0/533
Size 131 at 500/533
Size 131
Size 131 at 0/533
Size 130 at 500/533
Size 130
Size 130 at 0/533
Size 130 at 500/533
Size 130
Invariant time: 0.159
Number of invariants: 130
Invariant Clauses 17550
NUMBER OF CLAUSES 58271
NUMBER OF STATE CLAUSES 42481
NUMBER OF DECOMPOSITION CLAUSES 15790
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 72.9% 27.1% 0.0% 
NUMBER OF PATHS 134
Starting cryptominisat5.5
Setting starttime of solver to 1604483679105
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854770888
done
initial PDT has 313 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 229 leafs
SHOP LEAFS 94
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 29900
NUMBER OF CLAUSES 146960
NUMBER OF STATE CLAUSES 74024
NUMBER OF DECOMPOSITION CLAUSES 72936
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 50.370000000000005% 49.63% 0.0% 
NUMBER OF PATHS 229
Starting cryptominisat5.5
Setting starttime of solver to 1604483680260
Command exited with non-zero status 10
0.05 0.01

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^4_7;4;3;2,554 554 m2_do_navigate2
7;4;3;2 57 pathaction!4_7;4;3;2,520
Consider method^2_3;4,506 506 m11_send_rock_data
3;4 103 pathaction!2_3;4,165
Consider method^4_7;6;1;2,251 251 m3_do_navigate2
7;6;1;2 174 pathaction!4_7;6;1;2,547
Consider method^3_7;2;3,51 51 m1_do_navigate1
7;2;3 108 pathaction!3_7;2;3,112
Consider method^1_3,123 123 m10_get_rock_data
3 48 pathaction!1_3,696
Consider method^2_7;2,610 610 __UNIQUE-replacement_9
7;2 84 pathaction!2_7;2,740
Consider method^2_3;2,437 437 m5_empty_store
3;2 106 pathaction!2_3;2,627
Consider method^2_0;2,88 88 m5_empty_store
0;2 192 pathaction!2_0;2,626
Consider method^2_5;2,383 383 m1_do_navigate1
5;2 122 pathaction!2_5;2,112
Consider method^1_5,347 347 <m13_get_image_data;do_calibrate[rover3,camera0];m15_do_calibrate;1;0,-1,-2,-3,2,3,4>
5 94 pathaction!1_5,136
Consider method^3_3;1;2,272 272 m3_do_navigate2
3;1;2 101 pathaction!3_3;1;2,537
Consider method^1_6,533 533 <m13_get_image_data;do_calibrate[rover3,camera0];m15_do_calibrate;1;0,-1,-2,-3,2,3,4>
6 0 pathaction!1_6,134
Consider method^2_1;2,634 634 m5_empty_store
1;2 50 pathaction!2_1;2,628
Consider method^2_3;1,132 132 m1_do_navigate1
3;1 51 pathaction!2_3;1,118
Consider method^3_7;6;1,495 495 m1_do_navigate1
7;6;1 47 pathaction!3_7;6;1,119
Consider method^1_4,449 449 m10_get_rock_data
4 209 pathaction!1_4,695
Consider method^4_0;1;2;3,619 619 m3_do_navigate2
0;1;2;3 195 pathaction!4_0;1;2;3,560
Consider method^3_1;4;1,557 557 m1_do_navigate1
1;4;1 114 pathaction!3_1;4;1,108
Consider method^3_6;2;2,98 98 m3_do_navigate2
6;2;2 197 pathaction!3_6;2;2,555
Consider method^1_7,611 611 <m13_get_image_data;do_calibrate[rover3,camera0];m15_do_calibrate;1;0,-1,-2,-3,2,3,4>
7 10 pathaction!1_7,135
Consider method^1_1,526 526 m7_get_soil_data
1 128 pathaction!1_1,455
Consider method^1_2,290 290 m7_get_soil_data
2 133 pathaction!1_2,453
Consider method^2_2;4,83 83 m8_send_soil_data
2;4 28 pathaction!2_2;4,58
Consider method^3_4;1;2,131 131 m3_do_navigate2
4;1;2 33 pathaction!3_4;1;2,469
Consider method^3_2;4;1,434 434 m1_do_navigate1
2;4;1 79 pathaction!3_2;4;1,108
Consider method^4_5;6;1;2,229 229 m2_do_navigate2
5;6;1;2 59 pathaction!4_5;6;1;2,522
Consider method^2_6;4,495 495 m1_do_navigate1
6;4 204 pathaction!2_6;4,119
Consider method^2_1;1,321 321 m0_do_navigate1
1;1 138 pathaction!2_1;1,108
Consider method^2_4;2,647 647 m6_empty_store
4;2 137 pathaction!2_4;2,628
Consider method^3_5;4;2,251 251 m3_do_navigate2
5;4;2 171 pathaction!3_5;4;2,547
Consider method^3_4;4;1,434 434 m1_do_navigate1
4;4;1 112 pathaction!3_4;4;1,108
Consider method^3_2;1;2,131 131 m3_do_navigate2
2;1;2 76 pathaction!3_2;1;2,469
Consider method^2_7;4,609 609 __UNIQUE-replacement_8
7;4 13 pathaction!2_7;4,739
Consider method^2_0;1,401 401 m1_do_navigate1
0;1 123 pathaction!2_0;1,124
Consider method^2_2;2,647 647 m6_empty_store
2;2 65 pathaction!2_2;2,628
Consider method^0_,650 650 __top_1
 69 pathaction!0_,730
Consider method^3_5;2;2,488 488 m3_do_navigate2
5;2;2 41 pathaction!3_5;2;2,544
Consider method^4_3;4;1;2,599 599 m3_do_navigate2
3;4;1;2 90 pathaction!4_3;4;1;2,552
Consider method^2_5;6,309 309 m14_send_image_data
5;6 116 pathaction!2_5;6,418
Consider method^4_0;4;1;2,432 432 m2_do_navigate2
0;4;1;2 53 pathaction!4_0;4;1;2,593
Consider method^3_0;4;1,390 390 m1_do_navigate1
0;4;1 215 pathaction!3_0;4;1,124
Consider method^2_4;1,636 636 m1_do_navigate1
4;1 1 pathaction!2_4;1,122
Consider method^2_5;4,495 495 m1_do_navigate1
5;4 52 pathaction!2_5;4,119
Consider method^4_7;2;3;2,98 98 m3_do_navigate2
7;2;3;2 66 pathaction!4_7;2;3;2,555
Consider method^2_6;6,181 181 m14_send_image_data
6;6 202 pathaction!2_6;6,415
Consider method^4_2;4;1;2,124 124 m3_do_navigate2
2;4;1;2 36 pathaction!4_2;4;1;2,595
Consider method^3_6;4;2,251 251 m3_do_navigate2
6;4;2 160 pathaction!3_6;4;2,547
Consider method^4_6;6;1;2,229 229 m2_do_navigate2
6;6;1;2 188 pathaction!4_6;6;1;2,522
Consider method^2_2;1,636 636 m1_do_navigate1
2;1 139 pathaction!2_2;1,122
Consider method^3_7;4;3,501 501 m1_do_navigate1
7;4;3 16 pathaction!3_7;4;3,112
Consider method^1_0,607 607 m7_get_soil_data
0 55 pathaction!1_0,454
Consider method^2_6;2,51 51 m1_do_navigate1
6;2 37 pathaction!2_6;2,112
Consider method^3_6;6;1,604 604 m1_do_navigate1
6;6;1 194 pathaction!3_6;6;1,119
Consider method^3_3;4;1,209 209 m1_do_navigate1
3;4;1 95 pathaction!3_3;4;1,103
Consider method^2_4;4,151 151 m11_send_rock_data
4;4 6 pathaction!2_4;4,166
Consider method^4_4;4;1;2,124 124 m3_do_navigate2
4;4;1;2 144 pathaction!4_4;4;1;2,595
Consider method^2_0;4,633 633 m8_send_soil_data
0;4 109 pathaction!2_0;4,59
Consider method^3_0;1;2,562 562 m4_do_navigate2
0;1;2 185 pathaction!3_0;1;2,472
Consider method^2_1;4,104 104 m8_send_soil_data
1;4 158 pathaction!2_1;4,54
Consider method^4_1;4;1;2,85 85 m2_do_navigate2
1;4;1;2 176 pathaction!4_1;4;1;2,462
Consider method^2_7;6,629 629 m14_send_image_data
7;6 165 pathaction!2_7;6,420
Consider method^3_5;6;1,604 604 m1_do_navigate1
5;6;1 134 pathaction!3_5;6;1,119


CHECKING primitive solution of length 144 ...
true 15 __method_precondition_m7_get_soil_data_7_precondition[rover0store,rover0;]
true 38 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint2;]
true 31 visit[waypoint2;]
true 40 __method_precondition_m4_do_navigate2_4_precondition[rover0,waypoint2,waypoint1,waypoint0;]
true 5 navigate[rover0,waypoint2,waypoint0;]
true 98 visit[waypoint0;]
true 58 __method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint0,waypoint1;]
true 89 navigate[rover0,waypoint0,waypoint1;]
true 164 unvisit[waypoint0;]
true 189 unvisit[waypoint2;]
true 72 __method_precondition_m5_empty_store_5_precondition[rover0store;]
true 132 nop[;]
true 17 sample_soil[rover0,rover0store,waypoint1;]
true 3 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint0,waypoint1;]
true 119 __method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint1;]
true 183 visit[waypoint1;]
true 191 __method_precondition_m2_do_navigate2_2_precondition[rover0,waypoint1;]
true 219 nop[;]
true 127 unvisit[waypoint1;]
true 2 communicate_soil_data1[rover0,general,waypoint1,waypoint1,waypoint0;]
true 125 __method_precondition_m7_get_soil_data_7_precondition[rover3store,rover3;]
true 214 __method_precondition_m0_do_navigate1_0_precondition[rover3,waypoint3;]
true 200 nop[;]
true 19 __method_precondition_m5_empty_store_5_precondition[rover3store;]
true 167 nop[;]
true 80 sample_soil[rover3,rover3store,waypoint3;]
true 63 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint0,waypoint3;]
true 159 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint3;]
true 120 visit[waypoint3;]
true 35 __method_precondition_m2_do_navigate2_2_precondition[rover3,waypoint3;]
true 157 nop[;]
true 18 unvisit[waypoint3;]
true 73 communicate_soil_data1[rover3,general,waypoint3,waypoint3,waypoint0;]
true 150 __method_precondition_m7_get_soil_data_7_precondition[rover3store,rover3;]
true 104 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint3;]
true 87 visit[waypoint3;]
true 211 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint3,waypoint4;]
true 216 navigate[rover3,waypoint3,waypoint4;]
true 64 unvisit[waypoint3;]
true 151 __method_precondition_m6_empty_store_6_precondition[rover3store;]
true 62 drop[rover3,rover3store;]
true 140 sample_soil[rover3,rover3store,waypoint4;]
true 113 __method_precondition_m8_send_soil_data_8_precondition[general,waypoint0,waypoint3;]
true 88 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint4;]
true 44 visit[waypoint4;]
true 91 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint4,waypoint3;]
true 152 navigate[rover3,waypoint4,waypoint3;]
true 82 unvisit[waypoint4;]
true 107 communicate_soil_data1[rover3,general,waypoint4,waypoint3,waypoint0;]
true 8 __method_precondition_m10_get_rock_data_10_precondition[rover1store,rover1;]
true 14 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint2;]
true 92 visit[waypoint2;]
true 56 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint5;]
true 166 navigate[rover1,waypoint2,waypoint5;]
true 187 unvisit[waypoint2;]
true 39 __method_precondition_m5_empty_store_5_precondition[rover1store;]
true 206 nop[;]
true 100 sample_rock[rover1,rover1store,waypoint5;]
true 135 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint0,waypoint2;]
true 81 __method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint5;]
true 213 visit[waypoint5;]
true 105 __method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint5,waypoint2;]
true 153 navigate[rover1,waypoint5,waypoint2;]
true 111 unvisit[waypoint5;]
true 93 communicate_rock_data1[rover1,general,waypoint5,waypoint2,waypoint0;]
true 143 __method_precondition_m10_get_rock_data_10_precondition[rover3store,rover3;]
true 180 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint3;]
true 149 visit[waypoint3;]
true 220 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint3,waypoint4;]
true 208 navigate[rover3,waypoint3,waypoint4;]
true 68 unvisit[waypoint3;]
true 178 __method_precondition_m6_empty_store_6_precondition[rover3store;]
true 155 drop[rover3,rover3store;]
true 74 sample_rock[rover3,rover3store,waypoint4;]
true 86 __method_precondition_m11_send_rock_data_11_precondition[general,waypoint0,waypoint3;]
true 170 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint4;]
true 169 visit[waypoint4;]
true 199 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint4,waypoint3;]
true 42 navigate[rover3,waypoint4,waypoint3;]
true 193 unvisit[waypoint4;]
true 46 communicate_rock_data1[rover3,general,waypoint4,waypoint3,waypoint0;]
true 77 __method_precondition_m13_get_image_data_13_precondition[low_res,waypoint1,objective0,rover3,camera0;]
true 141 __method_precondition_m15_do_calibrate_15_precondition[camera0,objective1,waypoint0;]
true 172 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint3;]
true 201 visit[waypoint3;]
true 7 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint3,waypoint0;]
true 26 navigate[rover3,waypoint3,waypoint0;]
true 147 unvisit[waypoint3;]
true 146 calibrate[rover3,camera0,objective1,waypoint0;]
true 25 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint0;]
true 11 visit[waypoint0;]
true 96 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint0,waypoint1;]
true 83 navigate[rover3,waypoint0,waypoint1;]
true 148 unvisit[waypoint0;]
true 115 take_image[rover3,waypoint1,objective0,camera0,low_res;]
true 203 __method_precondition_m14_send_image_data_14_precondition[general,waypoint0,waypoint1;]
true 161 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint1;]
true 198 visit[waypoint1;]
true 23 __method_precondition_m2_do_navigate2_2_precondition[rover3,waypoint1;]
true 162 nop[;]
true 179 unvisit[waypoint1;]
true 27 communicate_image_data[rover3,general,objective0,low_res,waypoint1,waypoint0;]
true 129 __method_precondition_m13_get_image_data_13_precondition[high_res,waypoint1,objective0,rover3,camera0;]
true 175 __method_precondition_m15_do_calibrate_15_precondition[camera0,objective1,waypoint0;]
true 60 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint1;]
true 196 visit[waypoint1;]
true 156 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint1,waypoint0;]
true 21 navigate[rover3,waypoint1,waypoint0;]
true 186 unvisit[waypoint1;]
true 85 calibrate[rover3,camera0,objective1,waypoint0;]
true 124 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint0;]
true 102 visit[waypoint0;]
true 110 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint0,waypoint1;]
true 4 navigate[rover3,waypoint0,waypoint1;]
true 205 unvisit[waypoint0;]
true 78 take_image[rover3,waypoint1,objective0,camera0,high_res;]
true 30 __method_precondition_m14_send_image_data_14_precondition[general,waypoint0,waypoint1;]
true 70 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint1;]
true 145 visit[waypoint1;]
true 34 __method_precondition_m2_do_navigate2_2_precondition[rover3,waypoint1;]
true 163 nop[;]
true 67 unvisit[waypoint1;]
true 142 communicate_image_data[rover3,general,objective0,high_res,waypoint1,waypoint0;]
true 99 __method_precondition_m13_get_image_data_13_precondition[low_res,waypoint0,objective2,rover3,camera0;]
true 218 __method_precondition_m15_do_calibrate_15_precondition[camera0,objective1,waypoint0;]
true 24 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint1;]
true 182 visit[waypoint1;]
true 45 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint1,waypoint0;]
true 212 navigate[rover3,waypoint1,waypoint0;]
true 181 unvisit[waypoint1;]
true 117 calibrate[rover3,camera0,objective1,waypoint0;]
true 210 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint0;]
true 126 visit[waypoint0;]
true 190 __method_precondition_m2_do_navigate2_2_precondition[rover3,waypoint0;]
true 9 nop[;]
true 61 unvisit[waypoint0;]
true 71 take_image[rover3,waypoint0,objective2,camera0,low_res;]
true 32 __method_precondition_m14_send_image_data_14_precondition[general,waypoint0,waypoint1;]
true 29 __method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint0;]
true 54 visit[waypoint0;]
true 118 __method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint0,waypoint1;]
true 154 navigate[rover3,waypoint0,waypoint1;]
true 22 unvisit[waypoint0;]
true 121 communicate_image_data[rover3,general,objective2,low_res,waypoint1,waypoint0;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 207527816
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = false
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 87
number of actions                    = 741
number of abstract actions           = 208
number of primitive actions          = 533
number of methods                    = 651
number of primitive shop actions     = 329
number of primitive non-shop actions = 204
size of largest method               = 8
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 60805
number of clauses               = 146960
average size of clauses         = 3.3329477408818726
number of assert                = 28
number of horn                  = 134631
K offset                        = 0
K chosen value                  = 5
state formula                   = 74024
method children clauses         = 0
number of paths                 = 229
maximum plan length             = 229
number of decomposition clauses = 72936
number of ordering clauses      = 0
number of state clauses         = 74024
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 6655
============ parsing ============
total                         = 1094
file parser                   = 602
sort expansion                = 206
closed world assumption       = 106
inherit preconditions         = 0
shop methods                  = 23
eliminate identical variables = 77
strip domain of hybridity     = 2
flatten formula               = 78
============ preprocessing ============
total                                      = 2101
compile negative preconditions             = 38
compile unit methods                       = 0
split parameter                            = 27
expand choiceless abstract tasks           = 117
compile methods with identical tasks       = 11
removing unnecessary predicates            = 255
lifted reachabiltiy analysis               = 70
grounded planning graph analysis           = 587
grounded task decomposition graph analysis = 696
grounding                                  = 252
create artificial top task                 = 17
============ search preparation ============
compute state invariants = 304
============ sat ============
total                                        = 2286
generate formula                             = 1693
generate path decomposition tree             = 296
normalise path decomposition tree            = 106
sog optimisation                             = 84
translate path decomposition tree to clauses = 492
generate state formula                       = 1676
generate state invariant formula             = 72
transform to DIMACS                          = 268
SAT solver                                   = 70
SAT solver for K=0004                        = 10
SAT solver for K=0005                        = 60

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="533";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="208";"02 properties:04:tail recursive"="false";"00 global:80:peak memory"="207527816";"40 sat:20:state formula"="74024";"40 sat:01:number of variables"="60805";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="229";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="651";"30 problem:07:number of primitive shop actions"="329";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="741";"30 problem:08:number of primitive non-shop actions"="204";"30 problem:02:number of predicates"="87";"40 sat:03:number of horn"="134631";"40 sat:15:K chosen value"="5";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="8";"40 sat:03:average size of clauses"="3.3329477408818726";"40 sat:02:number of clauses"="146960";"40 sat:50:number of state clauses"="74024";"40 sat:03:number of assert"="28";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="229";"40 sat:50:number of decomposition clauses"="72936";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="602";"01 parsing:08:flatten formula"="78";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="2286";"40 sat:16:generate state formula"="1676";"40 sat:20:transform to DIMACS"="268";"40 sat:11:generate path decomposition tree"="296";"02 preprocessing:07:compile methods with identical tasks"="11";"01 parsing:07:strip domain of hybridity"="2";"02 preprocessing:08:removing unnecessary predicates"="255";"01 parsing:03:closed world assumption"="106";"02 preprocessing:11:lifted reachabiltiy analysis"="70";"01 parsing:02:sort expansion"="206";"40 sat:12:normalise path decomposition tree"="106";"40 sat:40:SAT solver"="70";"01 parsing:00:total"="1094";"40 sat:10:generate formula"="1693";"40 sat:41:SAT solver for K=0005"="60";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="38";"00 total:00:total"="6655";"40 sat:13:sog optimisation"="84";"02 preprocessing:12:grounded planning graph analysis"="587";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="696";"02 preprocessing:04:split parameter"="27";"01 parsing:05:shop methods"="23";"10 search preparation:02:compute state invariants"="304";"01 parsing:06:eliminate identical variables"="77";"40 sat:15:translate path decomposition tree to clauses"="492";"02 preprocessing:05:expand choiceless abstract tasks"="117";"40 sat:17:generate state invariant formula"="72";"02 preprocessing:00:total"="2101";"02 preprocessing:99:create artificial top task"="17";"02 preprocessing:84:grounding"="252"
#!verify __method_precondition_m7_get_soil_data_7_precondition[rover0store,rover0];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint2];visit[waypoint2];__method_precondition_m4_do_navigate2_4_precondition[rover0,waypoint2,waypoint1,waypoint0];navigate[rover0,waypoint2,waypoint0];visit[waypoint0];__method_precondition_m3_do_navigate2_3_precondition[rover0,waypoint0,waypoint1];navigate[rover0,waypoint0,waypoint1];unvisit[waypoint0];unvisit[waypoint2];__method_precondition_m5_empty_store_5_precondition[rover0store];nop[];sample_soil[rover0,rover0store,waypoint1];__method_precondition_m8_send_soil_data_8_precondition[general,waypoint0,waypoint1];__method_precondition_m1_do_navigate1_1_precondition[rover0,waypoint1];visit[waypoint1];__method_precondition_m2_do_navigate2_2_precondition[rover0,waypoint1];nop[];unvisit[waypoint1];communicate_soil_data1[rover0,general,waypoint1,waypoint1,waypoint0];__method_precondition_m7_get_soil_data_7_precondition[rover3store,rover3];__method_precondition_m0_do_navigate1_0_precondition[rover3,waypoint3];nop[];__method_precondition_m5_empty_store_5_precondition[rover3store];nop[];sample_soil[rover3,rover3store,waypoint3];__method_precondition_m8_send_soil_data_8_precondition[general,waypoint0,waypoint3];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint3];visit[waypoint3];__method_precondition_m2_do_navigate2_2_precondition[rover3,waypoint3];nop[];unvisit[waypoint3];communicate_soil_data1[rover3,general,waypoint3,waypoint3,waypoint0];__method_precondition_m7_get_soil_data_7_precondition[rover3store,rover3];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint3];visit[waypoint3];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint3,waypoint4];navigate[rover3,waypoint3,waypoint4];unvisit[waypoint3];__method_precondition_m6_empty_store_6_precondition[rover3store];drop[rover3,rover3store];sample_soil[rover3,rover3store,waypoint4];__method_precondition_m8_send_soil_data_8_precondition[general,waypoint0,waypoint3];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint4];visit[waypoint4];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint4,waypoint3];navigate[rover3,waypoint4,waypoint3];unvisit[waypoint4];communicate_soil_data1[rover3,general,waypoint4,waypoint3,waypoint0];__method_precondition_m10_get_rock_data_10_precondition[rover1store,rover1];__method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint2];visit[waypoint2];__method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint2,waypoint5];navigate[rover1,waypoint2,waypoint5];unvisit[waypoint2];__method_precondition_m5_empty_store_5_precondition[rover1store];nop[];sample_rock[rover1,rover1store,waypoint5];__method_precondition_m11_send_rock_data_11_precondition[general,waypoint0,waypoint2];__method_precondition_m1_do_navigate1_1_precondition[rover1,waypoint5];visit[waypoint5];__method_precondition_m3_do_navigate2_3_precondition[rover1,waypoint5,waypoint2];navigate[rover1,waypoint5,waypoint2];unvisit[waypoint5];communicate_rock_data1[rover1,general,waypoint5,waypoint2,waypoint0];__method_precondition_m10_get_rock_data_10_precondition[rover3store,rover3];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint3];visit[waypoint3];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint3,waypoint4];navigate[rover3,waypoint3,waypoint4];unvisit[waypoint3];__method_precondition_m6_empty_store_6_precondition[rover3store];drop[rover3,rover3store];sample_rock[rover3,rover3store,waypoint4];__method_precondition_m11_send_rock_data_11_precondition[general,waypoint0,waypoint3];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint4];visit[waypoint4];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint4,waypoint3];navigate[rover3,waypoint4,waypoint3];unvisit[waypoint4];communicate_rock_data1[rover3,general,waypoint4,waypoint3,waypoint0];__method_precondition_m13_get_image_data_13_precondition[low_res,waypoint1,objective0,rover3,camera0];__method_precondition_m15_do_calibrate_15_precondition[camera0,objective1,waypoint0];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint3];visit[waypoint3];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint3,waypoint0];navigate[rover3,waypoint3,waypoint0];unvisit[waypoint3];calibrate[rover3,camera0,objective1,waypoint0];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint0];visit[waypoint0];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint0,waypoint1];navigate[rover3,waypoint0,waypoint1];unvisit[waypoint0];take_image[rover3,waypoint1,objective0,camera0,low_res];__method_precondition_m14_send_image_data_14_precondition[general,waypoint0,waypoint1];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint1];visit[waypoint1];__method_precondition_m2_do_navigate2_2_precondition[rover3,waypoint1];nop[];unvisit[waypoint1];communicate_image_data[rover3,general,objective0,low_res,waypoint1,waypoint0];__method_precondition_m13_get_image_data_13_precondition[high_res,waypoint1,objective0,rover3,camera0];__method_precondition_m15_do_calibrate_15_precondition[camera0,objective1,waypoint0];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint1];visit[waypoint1];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint1,waypoint0];navigate[rover3,waypoint1,waypoint0];unvisit[waypoint1];calibrate[rover3,camera0,objective1,waypoint0];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint0];visit[waypoint0];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint0,waypoint1];navigate[rover3,waypoint0,waypoint1];unvisit[waypoint0];take_image[rover3,waypoint1,objective0,camera0,high_res];__method_precondition_m14_send_image_data_14_precondition[general,waypoint0,waypoint1];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint1];visit[waypoint1];__method_precondition_m2_do_navigate2_2_precondition[rover3,waypoint1];nop[];unvisit[waypoint1];communicate_image_data[rover3,general,objective0,high_res,waypoint1,waypoint0];__method_precondition_m13_get_image_data_13_precondition[low_res,waypoint0,objective2,rover3,camera0];__method_precondition_m15_do_calibrate_15_precondition[camera0,objective1,waypoint0];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint1];visit[waypoint1];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint1,waypoint0];navigate[rover3,waypoint1,waypoint0];unvisit[waypoint1];calibrate[rover3,camera0,objective1,waypoint0];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint0];visit[waypoint0];__method_precondition_m2_do_navigate2_2_precondition[rover3,waypoint0];nop[];unvisit[waypoint0];take_image[rover3,waypoint0,objective2,camera0,low_res];__method_precondition_m14_send_image_data_14_precondition[general,waypoint0,waypoint1];__method_precondition_m1_do_navigate1_1_precondition[rover3,waypoint0];visit[waypoint0];__method_precondition_m3_do_navigate2_3_precondition[rover3,waypoint0,waypoint1];navigate[rover3,waypoint0,waypoint1];unvisit[waypoint0];communicate_image_data[rover3,general,objective2,low_res,waypoint1,waypoint0]
==>
0 __method_precondition_m7_get_soil_data_7_precondition rover0store rover0 
1 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint2 
2 visit waypoint2 
3 __method_precondition_m4_do_navigate2_4_precondition rover0 waypoint2 waypoint1 waypoint0 
4 navigate rover0 waypoint2 waypoint0 
5 visit waypoint0 
6 __method_precondition_m3_do_navigate2_3_precondition rover0 waypoint0 waypoint1 
7 navigate rover0 waypoint0 waypoint1 
8 unvisit waypoint0 
9 unvisit waypoint2 
10 __method_precondition_m5_empty_store_5_precondition rover0store 
11 nop  
12 sample_soil rover0 rover0store waypoint1 
13 __method_precondition_m8_send_soil_data_8_precondition general waypoint0 waypoint1 
14 __method_precondition_m1_do_navigate1_1_precondition rover0 waypoint1 
15 visit waypoint1 
16 __method_precondition_m2_do_navigate2_2_precondition rover0 waypoint1 
17 nop  
18 unvisit waypoint1 
19 communicate_soil_data1 rover0 general waypoint1 waypoint1 waypoint0 
20 __method_precondition_m7_get_soil_data_7_precondition rover3store rover3 
21 __method_precondition_m0_do_navigate1_0_precondition rover3 waypoint3 
22 nop  
23 __method_precondition_m5_empty_store_5_precondition rover3store 
24 nop  
25 sample_soil rover3 rover3store waypoint3 
26 __method_precondition_m8_send_soil_data_8_precondition general waypoint0 waypoint3 
27 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint3 
28 visit waypoint3 
29 __method_precondition_m2_do_navigate2_2_precondition rover3 waypoint3 
30 nop  
31 unvisit waypoint3 
32 communicate_soil_data1 rover3 general waypoint3 waypoint3 waypoint0 
33 __method_precondition_m7_get_soil_data_7_precondition rover3store rover3 
34 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint3 
35 visit waypoint3 
36 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint3 waypoint4 
37 navigate rover3 waypoint3 waypoint4 
38 unvisit waypoint3 
39 __method_precondition_m6_empty_store_6_precondition rover3store 
40 drop rover3 rover3store 
41 sample_soil rover3 rover3store waypoint4 
42 __method_precondition_m8_send_soil_data_8_precondition general waypoint0 waypoint3 
43 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint4 
44 visit waypoint4 
45 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint4 waypoint3 
46 navigate rover3 waypoint4 waypoint3 
47 unvisit waypoint4 
48 communicate_soil_data1 rover3 general waypoint4 waypoint3 waypoint0 
49 __method_precondition_m10_get_rock_data_10_precondition rover1store rover1 
50 __method_precondition_m1_do_navigate1_1_precondition rover1 waypoint2 
51 visit waypoint2 
52 __method_precondition_m3_do_navigate2_3_precondition rover1 waypoint2 waypoint5 
53 navigate rover1 waypoint2 waypoint5 
54 unvisit waypoint2 
55 __method_precondition_m5_empty_store_5_precondition rover1store 
56 nop  
57 sample_rock rover1 rover1store waypoint5 
58 __method_precondition_m11_send_rock_data_11_precondition general waypoint0 waypoint2 
59 __method_precondition_m1_do_navigate1_1_precondition rover1 waypoint5 
60 visit waypoint5 
61 __method_precondition_m3_do_navigate2_3_precondition rover1 waypoint5 waypoint2 
62 navigate rover1 waypoint5 waypoint2 
63 unvisit waypoint5 
64 communicate_rock_data1 rover1 general waypoint5 waypoint2 waypoint0 
65 __method_precondition_m10_get_rock_data_10_precondition rover3store rover3 
66 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint3 
67 visit waypoint3 
68 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint3 waypoint4 
69 navigate rover3 waypoint3 waypoint4 
70 unvisit waypoint3 
71 __method_precondition_m6_empty_store_6_precondition rover3store 
72 drop rover3 rover3store 
73 sample_rock rover3 rover3store waypoint4 
74 __method_precondition_m11_send_rock_data_11_precondition general waypoint0 waypoint3 
75 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint4 
76 visit waypoint4 
77 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint4 waypoint3 
78 navigate rover3 waypoint4 waypoint3 
79 unvisit waypoint4 
80 communicate_rock_data1 rover3 general waypoint4 waypoint3 waypoint0 
81 __method_precondition_m13_get_image_data_13_precondition low_res waypoint1 objective0 rover3 camera0 
82 __method_precondition_m15_do_calibrate_15_precondition camera0 objective1 waypoint0 
83 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint3 
84 visit waypoint3 
85 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint3 waypoint0 
86 navigate rover3 waypoint3 waypoint0 
87 unvisit waypoint3 
88 calibrate rover3 camera0 objective1 waypoint0 
89 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint0 
90 visit waypoint0 
91 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint0 waypoint1 
92 navigate rover3 waypoint0 waypoint1 
93 unvisit waypoint0 
94 take_image rover3 waypoint1 objective0 camera0 low_res 
95 __method_precondition_m14_send_image_data_14_precondition general waypoint0 waypoint1 
96 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint1 
97 visit waypoint1 
98 __method_precondition_m2_do_navigate2_2_precondition rover3 waypoint1 
99 nop  
100 unvisit waypoint1 
101 communicate_image_data rover3 general objective0 low_res waypoint1 waypoint0 
102 __method_precondition_m13_get_image_data_13_precondition high_res waypoint1 objective0 rover3 camera0 
103 __method_precondition_m15_do_calibrate_15_precondition camera0 objective1 waypoint0 
104 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint1 
105 visit waypoint1 
106 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint1 waypoint0 
107 navigate rover3 waypoint1 waypoint0 
108 unvisit waypoint1 
109 calibrate rover3 camera0 objective1 waypoint0 
110 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint0 
111 visit waypoint0 
112 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint0 waypoint1 
113 navigate rover3 waypoint0 waypoint1 
114 unvisit waypoint0 
115 take_image rover3 waypoint1 objective0 camera0 high_res 
116 __method_precondition_m14_send_image_data_14_precondition general waypoint0 waypoint1 
117 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint1 
118 visit waypoint1 
119 __method_precondition_m2_do_navigate2_2_precondition rover3 waypoint1 
120 nop  
121 unvisit waypoint1 
122 communicate_image_data rover3 general objective0 high_res waypoint1 waypoint0 
123 __method_precondition_m13_get_image_data_13_precondition low_res waypoint0 objective2 rover3 camera0 
124 __method_precondition_m15_do_calibrate_15_precondition camera0 objective1 waypoint0 
125 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint1 
126 visit waypoint1 
127 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint1 waypoint0 
128 navigate rover3 waypoint1 waypoint0 
129 unvisit waypoint1 
130 calibrate rover3 camera0 objective1 waypoint0 
131 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint0 
132 visit waypoint0 
133 __method_precondition_m2_do_navigate2_2_precondition rover3 waypoint0 
134 nop  
135 unvisit waypoint0 
136 take_image rover3 waypoint0 objective2 camera0 low_res 
137 __method_precondition_m14_send_image_data_14_precondition general waypoint0 waypoint1 
138 __method_precondition_m1_do_navigate1_1_precondition rover3 waypoint0 
139 visit waypoint0 
140 __method_precondition_m3_do_navigate2_3_precondition rover3 waypoint0 waypoint1 
141 navigate rover3 waypoint0 waypoint1 
142 unvisit waypoint0 
143 communicate_image_data rover3 general objective2 low_res waypoint1 waypoint0 
root 165
144 do_navigate2 rover3 waypoint1 waypoint1  -> m2_do_navigate2 98 99
145 do_navigate1 rover0 waypoint1  -> m1_do_navigate1 14 15 195 18
146 do_navigate1 rover3 waypoint1  -> m1_do_navigate1 110 111 175 114
147 do_navigate1 rover3 waypoint3  -> m1_do_navigate1 75 76 200 79
148 do_navigate2 rover1 waypoint5 waypoint2  -> m3_do_navigate2 61 62
149 send_image_data rover3 objective2 low_res  -> m14_send_image_data 137 186 143
150 do_navigate2 rover3 waypoint3 waypoint0  -> m3_do_navigate2 85 86
151 do_navigate1 rover3 waypoint0  -> m1_do_navigate1 104 105 198 108
152 send_soil_data rover0 waypoint1  -> m8_send_soil_data 13 145 19
153 do_navigate2 rover0 waypoint2 waypoint1  -> m4_do_navigate2 3 4 5 191 8
154 do_navigate1 rover3 waypoint3  -> m1_do_navigate1 27 28 202 31
155 do_navigate1 rover3 waypoint0  -> __UNIQUE-replacement_8 177
156 get_image_data objective0 high_res  -> <m13_get_image_data;do_calibrate[rover3,camera0];m15_do_calibrate;1;0,-1,-2,-3,2,3,4> 102 103 151 109 146 115 170
157 do_navigate1 rover0 waypoint1  -> m1_do_navigate1 1 2 153 9
158 do_navigate1 rover3 waypoint1  -> m1_do_navigate1 117 118 173 121
159 send_soil_data rover3 waypoint3  -> m8_send_soil_data 26 154 32
160 empty_store rover3store rover3  -> m5_empty_store 23 24
161 empty_store rover1store rover1  -> m5_empty_store 55 56
162 send_image_data rover3 objective0 low_res  -> m14_send_image_data 95 168 101
163 get_soil_data waypoint1  -> m7_get_soil_data 0 157 192 12 152
164 do_navigate2 rover3 waypoint4 waypoint3  -> m3_do_navigate2 45 46
165 __choicelessATCompilation__top_1  -> __top_1 163 199 180 167 169 176 156 204
166 do_navigate2 rover3 waypoint0 waypoint0  -> m2_do_navigate2 133 134
167 get_rock_data waypoint5  -> m10_get_rock_data 49 185 161 57 172
168 do_navigate1 rover3 waypoint1  -> m1_do_navigate1 96 97 144 100
169 get_rock_data waypoint4  -> m10_get_rock_data 65 182 196 73 184
170 send_image_data rover3 objective0 high_res  -> m14_send_image_data 116 158 122
171 empty_store rover3store rover3  -> m6_empty_store 39 40
172 send_rock_data rover1 waypoint5  -> m11_send_rock_data 58 203 64
173 do_navigate2 rover3 waypoint1 waypoint1  -> m2_do_navigate2 119 120
174 do_navigate1 rover3 waypoint1  -> m1_do_navigate1 89 90 193 93
175 do_navigate2 rover3 waypoint0 waypoint1  -> m3_do_navigate2 112 113
176 get_image_data objective0 low_res  -> <m13_get_image_data;do_calibrate[rover3,camera0];m15_do_calibrate;1;0,-1,-2,-3,2,3,4> 81 82 187 88 174 94 162
177 do_navigate1 rover3 waypoint0  -> m1_do_navigate1 131 132 166 135
178 send_soil_data rover3 waypoint4  -> m8_send_soil_data 42 179 48
179 do_navigate1 rover3 waypoint3  -> m1_do_navigate1 43 44 164 47
180 get_soil_data waypoint4  -> m7_get_soil_data 33 183 171 41 178
181 do_navigate2 rover3 waypoint1 waypoint0  -> m3_do_navigate2 127 128
182 do_navigate1 rover3 waypoint4  -> m1_do_navigate1 66 67 194 70
183 do_navigate1 rover3 waypoint4  -> m1_do_navigate1 34 35 190 38
184 send_rock_data rover3 waypoint4  -> m11_send_rock_data 74 147 80
185 do_navigate1 rover1 waypoint5  -> m1_do_navigate1 50 51 201 54
186 do_navigate1 rover3 waypoint1  -> m1_do_navigate1 138 139 189 142
187 do_navigate1 rover3 waypoint0  -> m1_do_navigate1 83 84 150 87
188 do_navigate1 rover3 waypoint3  -> m0_do_navigate1 21 22
189 do_navigate2 rover3 waypoint0 waypoint1  -> m3_do_navigate2 140 141
190 do_navigate2 rover3 waypoint3 waypoint4  -> m3_do_navigate2 36 37
191 do_navigate2 rover0 waypoint0 waypoint1  -> m3_do_navigate2 6 7
192 empty_store rover0store rover0  -> m5_empty_store 10 11
193 do_navigate2 rover3 waypoint0 waypoint1  -> m3_do_navigate2 91 92
194 do_navigate2 rover3 waypoint3 waypoint4  -> m3_do_navigate2 68 69
195 do_navigate2 rover0 waypoint1 waypoint1  -> m2_do_navigate2 16 17
196 empty_store rover3store rover3  -> m6_empty_store 71 72
197 do_navigate1 rover3 waypoint0  -> m1_do_navigate1 125 126 181 129
198 do_navigate2 rover3 waypoint1 waypoint0  -> m3_do_navigate2 106 107
199 get_soil_data waypoint3  -> m7_get_soil_data 20 188 160 25 159
200 do_navigate2 rover3 waypoint4 waypoint3  -> m3_do_navigate2 77 78
201 do_navigate2 rover1 waypoint2 waypoint5  -> m3_do_navigate2 52 53
202 do_navigate2 rover3 waypoint3 waypoint3  -> m2_do_navigate2 29 30
203 do_navigate1 rover1 waypoint2  -> m1_do_navigate1 59 60 148 63
204 get_image_data objective2 low_res  -> <m13_get_image_data;do_calibrate[rover3,camera0];m15_do_calibrate;1;0,-1,-2,-3,2,3,4> 123 124 205 130 155 136 149
205 do_navigate1 rover3 waypoint0  -> __UNIQUE-replacement_9 197

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 7.728 MEMPEAK_KBS 341112.832
