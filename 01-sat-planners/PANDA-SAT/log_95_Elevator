PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/Elevator/domain.hddl instances/Elevator/p15.hddl"


Planner Configuration
=====================
Domain: instances/Elevator/domain.hddl
Problem: instances/Elevator/p15.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p15.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Compiling negative preconditions ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Compiling split parameters ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 16
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Grounded planning graph ... done in 419ms.
	Number of Grounded Actions 1951
	Number of Grounded Literals 555
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Two Way TDG ... done.
	number of abstract tasks = 5
	number of tasks = 21
	number of decomposition methods = 11
	number of predicates = 8
	number of sorts = 3
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 11
	number of epsilon methods = 0
	number of primitive tasks = 16
	number of constants = 45
Grounding ... done.
	number of abstract tasks = 92
	number of tasks = 1666
	number of decomposition methods = 1050
	number of predicates = 555
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 1050
	number of epsilon methods = 0
	number of primitive tasks = 1574
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 92
	number of tasks = 1666
	number of decomposition methods = 1050
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 1050
	number of epsilon methods = 0
	number of primitive tasks = 1574
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 105ms.
	Number of Grounded Actions 898
	Number of Grounded Literals 77
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 90
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 66ms.
	Number of Grounded Actions 898
	Number of Grounded Literals 77
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 595
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 53
	number of tasks = 951
	number of decomposition methods = 596
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 54
	number of tasks = 952
	number of decomposition methods = 597
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 54
	number of tasks = 952
	number of decomposition methods = 597
	number of predicates = 77
	number of sorts = 0
	number of tasks in largest method = 4
	number of primitive SHOP tasks = 595
	number of epsilon methods = 0
	number of primitive tasks = 898
	number of constants = 0
Tasks 898 - 0
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854771941ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854771876
done
initial PDT has 20 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 14 leafs
SHOP LEAFS 12
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 8778
Size 8778 at 0/898
Size 5201 at 500/898
Size 2714
Size 2714 at 0/898
Size 2086 at 500/898
Size 864
Size 864 at 0/898
Size 592 at 500/898
Size 196
Size 196 at 0/898
Size 196 at 500/898
Size 196
Invariant time: 0.201
Number of invariants: 196
Invariant Clauses 2940
NUMBER OF CLAUSES 21231
NUMBER OF STATE CLAUSES 6770
NUMBER OF DECOMPOSITION CLAUSES 14461
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.89% 68.11% 0.0% 
NUMBER OF PATHS 14
Starting cryptominisat5.5
Setting starttime of solver to 1604479561104
Command exited with non-zero status 20
0.00 0.00

Time command gave the following runtime for the solver: 0
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... done
initial PDT has 34 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 26 leafs
SHOP LEAFS 20
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854770773
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 5292
NUMBER OF CLAUSES 49027
NUMBER OF STATE CLAUSES 13186
NUMBER OF DECOMPOSITION CLAUSES 35841
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 26.900000000000002% 73.10000000000001% 0.0% 
NUMBER OF PATHS 26
Starting cryptominisat5.5
Setting starttime of solver to 1604479561740
Command exited with non-zero status 20
0.01 0.00

Time command gave the following runtime for the solver: 10
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 6
Generating initial PDT ... done
initial PDT has 52 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 42 leafs
SHOP LEAFS 30
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 101 will abort at 9223372036854770219
done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 8428
NUMBER OF CLAUSES 75780
NUMBER OF STATE CLAUSES 20942
NUMBER OF DECOMPOSITION CLAUSES 54838
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 27.64% 72.36% 0.0% 
NUMBER OF PATHS 42
Starting cryptominisat5.5
Setting starttime of solver to 1604479562320
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 7
Generating initial PDT ... done
initial PDT has 74 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 62 leafs
SHOP LEAFS 42
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854769586
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 12348
NUMBER OF CLAUSES 107187
NUMBER OF STATE CLAUSES 30416
NUMBER OF DECOMPOSITION CLAUSES 76771
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 28.38% 71.62% 0.0% 
NUMBER OF PATHS 62
Starting cryptominisat5.5
Setting starttime of solver to 1604479563072
Command exited with non-zero status 20
0.02 0.00

Time command gave the following runtime for the solver: 20
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 8
Generating initial PDT ... done
initial PDT has 100 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 86 leafs
SHOP LEAFS 56
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768949
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 17052
NUMBER OF CLAUSES 143248
NUMBER OF STATE CLAUSES 41608
NUMBER OF DECOMPOSITION CLAUSES 101640
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.05% 70.95% 0.0% 
NUMBER OF PATHS 86
Starting cryptominisat5.5
Setting starttime of solver to 1604479563781
Command exited with non-zero status 20
0.05 0.00

Time command gave the following runtime for the solver: 50
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 9
Generating initial PDT ... done
initial PDT has 130 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 114 leafs
SHOP LEAFS 72
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854768146
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 22540
NUMBER OF CLAUSES 183963
NUMBER OF STATE CLAUSES 54518
NUMBER OF DECOMPOSITION CLAUSES 129445
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 29.64% 70.36% 0.0% 
NUMBER OF PATHS 114
Starting cryptominisat5.5
Setting starttime of solver to 1604479564604
Command exited with non-zero status 20
0.05 0.01

Time command gave the following runtime for the solver: 60
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 10
Generating initial PDT ... done
initial PDT has 164 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 146 leafs
SHOP LEAFS 90
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854767377
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 28812
NUMBER OF CLAUSES 229332
NUMBER OF STATE CLAUSES 69146
NUMBER OF DECOMPOSITION CLAUSES 160186
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 30.150000000000002% 69.85000000000001% 0.0% 
NUMBER OF PATHS 146
Starting cryptominisat5.5
Setting starttime of solver to 1604479565454
Command exited with non-zero status 20
0.10 0.00

Time command gave the following runtime for the solver: 100
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 11
Generating initial PDT ... done
initial PDT has 202 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 182 leafs
SHOP LEAFS 110
Assignment implications
Still waiting ... running for 102 will abort at 9223372036854766413
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 35868
NUMBER OF CLAUSES 279355
NUMBER OF STATE CLAUSES 85492
NUMBER OF DECOMPOSITION CLAUSES 193863
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 30.6% 69.4% 0.0% 
NUMBER OF PATHS 182
Starting cryptominisat5.5
Setting starttime of solver to 1604479566369
Command exited with non-zero status 20
1.98 0.01

Time command gave the following runtime for the solver: 1990
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 12
Generating initial PDT ... done
initial PDT has 244 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 222 leafs
SHOP LEAFS 132
Assignment implications
Still waiting ... running for 100 will abort at 9223372036854763553
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 43708
NUMBER OF CLAUSES 334032
NUMBER OF STATE CLAUSES 103556
NUMBER OF DECOMPOSITION CLAUSES 230476
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.0% 69.0% 0.0% 
NUMBER OF PATHS 222
Starting cryptominisat5.5
Setting starttime of solver to 1604479569324
Still waiting ... running for 60147 will abort at 9223372036854763553
Command exited with non-zero status 20
59.55 0.04

Time command gave the following runtime for the solver: 59590
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 13
Generating initial PDT ... done
initial PDT has 290 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... Still waiting ... running for 100 will abort at 9223372036854703089
done
PDT has 266 leafs
SHOP LEAFS 156
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Invariant Clauses 52332
NUMBER OF CLAUSES 393363
NUMBER OF STATE CLAUSES 123338
NUMBER OF DECOMPOSITION CLAUSES 270025
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 31.35% 68.65% 0.0% 
NUMBER OF PATHS 266
Starting cryptominisat5.5
Setting starttime of solver to 1604479629939
Command exited with non-zero status 10
2.84 0.02

Time command gave the following runtime for the solver: 2860
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^4_0;3;1;2,471 471 m2_do_check_floor
0;3;1;2 81 pathaction!4_0;3;1;2,904
Consider method^7_0;2;3;3;3;3;3,338 338 m6_do_take_all
0;2;3;3;3;3;3 77 pathaction!7_0;2;3;3;3;3;3,47
Consider method^2_0;1,394 394 m3_do_check_floor
0;1 127 pathaction!2_0;1,916
Consider method^12_0;2;3;3;3;3;3;3;3;2;2;2,184 184 m1_do_check_floor
0;2;3;3;3;3;3;3;3;2;2;2 208 pathaction!12_0;2;3;3;3;3;3;3;3;2;2;2,904
Consider method^8_0;3;1;3;3;3;3;3,22 22 m9_do_throw_all
0;3;1;3;3;3;3;3 212 pathaction!8_0;3;1;3;3;3;3;3,15
Consider method^6_0;3;1;3;3;3,492 492 m10_do_throw_all
0;3;1;3;3;3 5 pathaction!6_0;3;1;3;3;3,22
Consider method^6_0;3;1;3;3;2,19 19 m2_do_check_floor
0;3;1;3;3;2 79 pathaction!6_0;3;1;3;3;2,907
Consider method^0_,596 596 __top_3
 167 pathaction!0_,951
Consider method^6_0;2;3;3;2;2,42 42 m2_do_check_floor
0;2;3;3;2;2 34 pathaction!6_0;2;3;3;2;2,908
Consider method^11_0;3;1;3;3;3;3;3;3;3;2,33 33 m2_do_check_floor
0;3;1;3;3;3;3;3;3;3;2 144 pathaction!11_0;3;1;3;3;3;3;3;3;3;2,906
Consider method^3_0;2;2,404 404 m3_do_check_floor
0;2;2 40 pathaction!3_0;2;2,902
Consider method^2_0;2,280 280 m5_do_take_all
0;2 28 pathaction!2_0;2,48
Consider method^10_0;2;3;3;3;3;3;3;3;2,438 438 m2_do_check_floor
0;2;3;3;3;3;3;3;3;2 25 pathaction!10_0;2;3;3;3;3;3;3;3;2,904
Consider method^12_0;3;1;3;3;3;3;3;3;3;2;2,494 494 m1_do_check_floor
0;3;1;3;3;3;3;3;3;3;2;2 11 pathaction!12_0;3;1;3;3;3;3;3;3;3;2;2,906
Consider method^7_0;2;3;3;3;2;2,261 261 m2_do_check_floor
0;2;3;3;3;2;2 33 pathaction!7_0;2;3;3;3;2;2,912
Consider method^8_0;2;3;3;3;3;2;2,465 465 m3_do_check_floor
0;2;3;3;3;3;2;2 119 pathaction!8_0;2;3;3;3;3;2;2,915
Consider method^9_0;2;3;3;3;3;2;2;2,446 446 m1_do_check_floor
0;2;3;3;3;3;2;2;2 38 pathaction!9_0;2;3;3;3;3;2;2;2,915
Consider method^6_0;2;3;2;2;2,65 65 m1_do_check_floor
0;2;3;2;2;2 210 pathaction!6_0;2;3;2;2;2,910
Consider method^8_0;2;3;3;3;3;3;2,561 561 m3_do_check_floor
0;2;3;3;3;3;3;2 203 pathaction!8_0;2;3;3;3;3;3;2,905
Consider method^4_0;2;3;3,235 235 m6_do_take_all
0;2;3;3 182 pathaction!4_0;2;3;3,42
Consider method^11_0;3;1;3;3;3;3;3;3;2;2,359 359 m1_do_check_floor
0;3;1;3;3;3;3;3;3;2;2 213 pathaction!11_0;3;1;3;3;3;3;3;3;2;2,914
Consider method^9_0;2;3;3;3;3;3;2;2,491 491 m1_do_check_floor
0;2;3;3;3;3;3;2;2 145 pathaction!9_0;2;3;3;3;3;3;2;2,905
Consider method^5_0;3;1;3;3,498 498 m9_do_throw_all
0;3;1;3;3 168 pathaction!5_0;3;1;3;3,18
Consider method^8_0;3;1;3;3;3;3;2,25 25 m2_do_check_floor
0;3;1;3;3;3;3;2 1 pathaction!8_0;3;1;3;3;3;3;2,900
Consider method^9_0;3;1;3;3;3;2;2;2,90 90 m1_do_check_floor
0;3;1;3;3;3;2;2;2 111 pathaction!9_0;3;1;3;3;3;2;2;2,913
Consider method^1_0,234 234 m0_do_problem
0 43 pathaction!1_0,580
Consider method^5_0;3;1;3;2,564 564 m2_do_check_floor
0;3;1;3;2 42 pathaction!5_0;3;1;3;2,903
Consider method^10_0;3;1;3;3;3;3;3;3;2,209 209 m2_do_check_floor
0;3;1;3;3;3;3;3;3;2 113 pathaction!10_0;3;1;3;3;3;3;3;3;2,914
Consider method^8_0;2;3;3;3;2;2;2,362 362 m1_do_check_floor
0;2;3;3;3;2;2;2 173 pathaction!8_0;2;3;3;3;2;2;2,912
Consider method^6_0;2;2;2;2;2,146 146 m1_do_check_floor
0;2;2;2;2;2 75 pathaction!6_0;2;2;2;2;2,902
Consider method^9_0;3;1;3;3;3;3;3;3,109 109 m10_do_throw_all
0;3;1;3;3;3;3;3;3 243 pathaction!9_0;3;1;3;3;3;3;3;3,26
Consider method^4_0;3;1;3,152 152 m10_do_throw_all
0;3;1;3 269 pathaction!4_0;3;1;3,19
Consider method^5_0;2;3;3;3,233 233 m6_do_take_all
0;2;3;3;3 247 pathaction!5_0;2;3;3;3,40
Consider method^7_0;2;3;3;2;2;2,194 194 m1_do_check_floor
0;2;3;3;2;2;2 46 pathaction!7_0;2;3;3;2;2;2,908
Consider method^11_0;3;1;3;3;3;3;3;2;2;2,478 478 m2_do_check_floor
0;3;1;3;3;3;3;3;2;2;2 99 pathaction!11_0;3;1;3;3;3;3;3;2;2;2,911
Consider method^5_0;2;3;2;2,543 543 m2_do_check_floor
0;2;3;2;2 31 pathaction!5_0;2;3;2;2,910
Consider method^9_0;3;1;3;3;3;3;3;2,200 200 m2_do_check_floor
0;3;1;3;3;3;3;3;2 211 pathaction!9_0;3;1;3;3;3;3;3;2,911
Consider method^11_0;2;3;3;3;3;3;3;2;2;2,30 30 m1_do_check_floor
0;2;3;3;3;3;3;3;2;2;2 258 pathaction!11_0;2;3;3;3;3;3;3;2;2;2,901
Consider method^7_0;3;1;3;3;3;2,333 333 m2_do_check_floor
0;3;1;3;3;3;2 141 pathaction!7_0;3;1;3;3;3;2,913
Consider method^6_0;2;3;3;3;2,567 567 m3_do_check_floor
0;2;3;3;3;2 268 pathaction!6_0;2;3;3;3;2,912
Consider method^3_0;3;1,417 417 m9_do_throw_all
0;3;1 16 pathaction!3_0;3;1,24
Consider method^6_0;2;3;3;3;3,573 573 m5_do_take_all
0;2;3;3;3;3 185 pathaction!6_0;2;3;3;3;3,44
Consider method^5_0;3;1;2;2,455 455 m3_do_check_floor
0;3;1;2;2 82 pathaction!5_0;3;1;2;2,904
Consider method^4_0;2;3;2,26 26 m3_do_check_floor
0;2;3;2 188 pathaction!4_0;2;3;2,910
Consider method^10_0;2;3;3;3;3;3;3;3;3,279 279 m6_do_take_all
0;2;3;3;3;3;3;3;3;3 224 pathaction!10_0;2;3;3;3;3;3;3;3;3,36
Consider method^11_0;2;3;3;3;3;3;3;3;3;2,439 439 m3_do_check_floor
0;2;3;3;3;3;3;3;3;3;2 146 pathaction!11_0;2;3;3;3;3;3;3;3;3;2,909
Consider method^5_0;2;2;2;2,178 178 m3_do_check_floor
0;2;2;2;2 47 pathaction!5_0;2;2;2;2,902
Consider method^3_0;1;2,511 511 m1_do_check_floor
0;1;2 169 pathaction!3_0;1;2,916
Consider method^6_0;3;1;2;2;2,184 184 m1_do_check_floor
0;3;1;2;2;2 152 pathaction!6_0;3;1;2;2;2,904
Consider method^10_0;3;1;3;3;3;3;3;3;3,454 454 m10_do_throw_all
0;3;1;3;3;3;3;3;3;3 53 pathaction!10_0;3;1;3;3;3;3;3;3;3,29
Consider method^9_0;3;1;3;3;3;3;2;2,316 316 m1_do_check_floor
0;3;1;3;3;3;3;2;2 266 pathaction!9_0;3;1;3;3;3;3;2;2,900
Consider method^11_0;2;3;3;3;3;3;3;3;3;3,395 395 m4_do_take_all
0;2;3;3;3;3;3;3;3;3;3 257 pathaction!11_0;2;3;3;3;3;3;3;3;3;3,41
Consider method^7_0;3;1;3;3;3;3,253 253 m10_do_throw_all
0;3;1;3;3;3;3 76 pathaction!7_0;3;1;3;3;3;3,28
Consider method^12_0;2;3;3;3;3;3;3;3;3;2;2,535 535 m1_do_check_floor
0;2;3;3;3;3;3;3;3;3;2;2 202 pathaction!12_0;2;3;3;3;3;3;3;3;3;2;2,909
Consider method^12_0;3;1;3;3;3;3;3;2;2;2;2,342 342 m1_do_check_floor
0;3;1;3;3;3;3;3;2;2;2;2 67 pathaction!12_0;3;1;3;3;3;3;3;2;2;2;2,911
Consider method^7_0;2;3;3;3;3;2,322 322 m3_do_check_floor
0;2;3;3;3;3;2 80 pathaction!7_0;2;3;3;3;3;2,915
Consider method^2_0;3,275 275 m7_do_start_throw_all
0;3 13 pathaction!2_0;3,596
Consider method^6_0;3;1;3;2;2,503 503 m1_do_check_floor
0;3;1;3;2;2 139 pathaction!6_0;3;1;3;2;2,903
Consider method^8_0;3;1;3;3;3;2;2,559 559 m3_do_check_floor
0;3;1;3;3;3;2;2 199 pathaction!8_0;3;1;3;3;3;2;2,913
Consider method^3_0;2;3,5 5 m5_do_take_all
0;2;3 91 pathaction!3_0;2;3,34
Consider method^4_0;2;2;2,555 555 m3_do_check_floor
0;2;2;2 58 pathaction!4_0;2;2;2,902
Consider method^7_0;3;1;3;3;2;2,568 568 m1_do_check_floor
0;3;1;3;3;2;2 159 pathaction!7_0;3;1;3;3;2;2,907
Consider method^9_0;2;3;3;3;3;3;3;2,43 43 m3_do_check_floor
0;2;3;3;3;3;3;3;2 259 pathaction!9_0;2;3;3;3;3;3;3;2,901
Consider method^11_0;2;3;3;3;3;3;3;3;2;2,479 479 m2_do_check_floor
0;2;3;3;3;3;3;3;3;2;2 148 pathaction!11_0;2;3;3;3;3;3;3;3;2;2,904
Consider method^9_0;2;3;3;3;3;3;3;3,412 412 m6_do_take_all
0;2;3;3;3;3;3;3;3 88 pathaction!9_0;2;3;3;3;3;3;3;3,33
Consider method^10_0;2;3;3;3;3;3;3;2;2,15 15 m3_do_check_floor
0;2;3;3;3;3;3;3;2;2 0 pathaction!10_0;2;3;3;3;3;3;3;2;2,901
Consider method^5_0;2;3;3;2,246 246 m3_do_check_floor
0;2;3;3;2 176 pathaction!5_0;2;3;3;2,908
Consider method^11_0;3;1;3;3;3;3;3;3;3;3,580 580 m8_do_throw_all
0;3;1;3;3;3;3;3;3;3;3 24 pathaction!11_0;3;1;3;3;3;3;3;3;3;3,21
Consider method^8_0;2;3;3;3;3;3;3,485 485 m5_do_take_all
0;2;3;3;3;3;3;3 217 pathaction!8_0;2;3;3;3;3;3;3,37
Consider method^10_0;3;1;3;3;3;3;3;2;2,148 148 m2_do_check_floor
0;3;1;3;3;3;3;3;2;2 187 pathaction!10_0;3;1;3;3;3;3;3;2;2,911


CHECKING primitive solution of length 136 ...
true 228 __method_precondition_m0_do_problem_0_precondition[f0;]
true 104 __method_precondition_m3_do_check_floor_3_precondition[f0,p8;]
true 45 board[f0,p8;]
true 92 __method_precondition_m1_do_check_floor_1_precondition[f0;]
true 215 nop[;]
true 151 __method_precondition_m5_do_take_all_5_precondition[f0,f2,p12;]
true 108 up[f0,f2;]
true 216 __method_precondition_m3_do_check_floor_3_precondition[f2,p5;]
true 121 board[f2,p5;]
true 19 __method_precondition_m3_do_check_floor_3_precondition[f2,p12;]
true 93 board[f2,p12;]
true 260 __method_precondition_m3_do_check_floor_3_precondition[f2,p13;]
true 189 board[f2,p13;]
true 128 __method_precondition_m1_do_check_floor_1_precondition[f2;]
true 241 nop[;]
true 109 __method_precondition_m5_do_take_all_5_precondition[f2,f20,p6;]
true 236 up[f2,f20;]
true 70 __method_precondition_m3_do_check_floor_3_precondition[f20,p6;]
true 193 board[f20,p6;]
true 150 __method_precondition_m2_do_check_floor_2_precondition[f20,p12;]
true 158 depart[f20,p12;]
true 254 __method_precondition_m1_do_check_floor_1_precondition[f20;]
true 233 nop[;]
true 175 __method_precondition_m6_do_take_all_6_precondition[f20,f13,p0;]
true 191 down[f20,f13;]
true 131 __method_precondition_m3_do_check_floor_3_precondition[f13,p0;]
true 221 board[f13,p0;]
true 114 __method_precondition_m2_do_check_floor_2_precondition[f13,p13;]
true 29 depart[f13,p13;]
true 134 __method_precondition_m1_do_check_floor_1_precondition[f13;]
true 140 nop[;]
true 30 __method_precondition_m6_do_take_all_6_precondition[f13,f7,p14;]
true 18 down[f13,f7;]
true 237 __method_precondition_m3_do_check_floor_3_precondition[f7,p14;]
true 244 board[f7,p14;]
true 264 __method_precondition_m2_do_check_floor_2_precondition[f7,p5;]
true 147 depart[f7,p5;]
true 195 __method_precondition_m1_do_check_floor_1_precondition[f7;]
true 184 nop[;]
true 256 __method_precondition_m5_do_take_all_5_precondition[f7,f27,p1;]
true 44 up[f7,f27;]
true 94 __method_precondition_m3_do_check_floor_3_precondition[f27,p11;]
true 205 board[f27,p11;]
true 206 __method_precondition_m3_do_check_floor_3_precondition[f27,p1;]
true 7 board[f27,p1;]
true 181 __method_precondition_m1_do_check_floor_1_precondition[f27;]
true 226 nop[;]
true 78 __method_precondition_m6_do_take_all_6_precondition[f27,f22,p9;]
true 242 down[f27,f22;]
true 124 __method_precondition_m3_do_check_floor_3_precondition[f22,p9;]
true 267 board[f22,p9;]
true 153 __method_precondition_m1_do_check_floor_1_precondition[f22;]
true 6 nop[;]
true 255 __method_precondition_m5_do_take_all_5_precondition[f22,f23,p7;]
true 143 up[f22,f23;]
true 214 __method_precondition_m3_do_check_floor_3_precondition[f23,p7;]
true 110 board[f23,p7;]
true 48 __method_precondition_m3_do_check_floor_3_precondition[f23,p2;]
true 98 board[f23,p2;]
true 253 __method_precondition_m1_do_check_floor_1_precondition[f23;]
true 132 nop[;]
true 14 __method_precondition_m6_do_take_all_6_precondition[f23,f16,p3;]
true 161 down[f23,f16;]
true 115 __method_precondition_m2_do_check_floor_2_precondition[f16,p9;]
true 190 depart[f16,p9;]
true 62 __method_precondition_m2_do_check_floor_2_precondition[f16,p0;]
true 17 depart[f16,p0;]
true 218 __method_precondition_m1_do_check_floor_1_precondition[f16;]
true 69 nop[;]
true 73 __method_precondition_m6_do_take_all_6_precondition[f16,f11,p10;]
true 196 down[f16,f11;]
true 164 __method_precondition_m3_do_check_floor_3_precondition[f11,p10;]
true 50 board[f11,p10;]
true 95 __method_precondition_m1_do_check_floor_1_precondition[f11;]
true 97 nop[;]
true 162 __method_precondition_m4_do_take_all_4_precondition[f11;]
true 107 nop[;]
true 60 __method_precondition_m7_do_start_throw_all_7_precondition[f11;]
true 96 __method_precondition_m9_do_throw_all_9_precondition[f11,f16,p7;]
true 231 up[f11,f16;]
true 102 __method_precondition_m2_do_check_floor_2_precondition[f16,p7;]
true 64 depart[f16,p7;]
true 239 __method_precondition_m3_do_check_floor_3_precondition[f16,p3;]
true 59 board[f16,p3;]
true 156 __method_precondition_m1_do_check_floor_1_precondition[f16;]
true 201 nop[;]
true 219 __method_precondition_m10_do_throw_all_10_precondition[f16,f12,p3;]
true 250 down[f16,f12;]
true 52 __method_precondition_m2_do_check_floor_2_precondition[f12,p3;]
true 122 depart[f12,p3;]
true 27 __method_precondition_m1_do_check_floor_1_precondition[f12;]
true 66 nop[;]
true 74 __method_precondition_m9_do_throw_all_9_precondition[f12,f19,p6;]
true 246 up[f12,f19;]
true 160 __method_precondition_m2_do_check_floor_2_precondition[f19,p6;]
true 8 depart[f19,p6;]
true 142 __method_precondition_m1_do_check_floor_1_precondition[f19;]
true 245 nop[;]
true 125 __method_precondition_m10_do_throw_all_10_precondition[f19,f9,p11;]
true 207 down[f19,f9;]
true 63 __method_precondition_m2_do_check_floor_2_precondition[f9,p11;]
true 222 depart[f9,p11;]
true 223 __method_precondition_m3_do_check_floor_3_precondition[f9,p4;]
true 85 board[f9,p4;]
true 186 __method_precondition_m1_do_check_floor_1_precondition[f9;]
true 37 nop[;]
true 71 __method_precondition_m10_do_throw_all_10_precondition[f9,f8,p10;]
true 9 down[f9,f8;]
true 165 __method_precondition_m2_do_check_floor_2_precondition[f8,p10;]
true 10 depart[f8,p10;]
true 39 __method_precondition_m1_do_check_floor_1_precondition[f8;]
true 235 nop[;]
true 105 __method_precondition_m9_do_throw_all_9_precondition[f8,f25,p2;]
true 61 up[f8,f25;]
true 166 __method_precondition_m2_do_check_floor_2_precondition[f25,p1;]
true 265 depart[f25,p1;]
true 174 __method_precondition_m2_do_check_floor_2_precondition[f25,p14;]
true 251 depart[f25,p14;]
true 84 __method_precondition_m2_do_check_floor_2_precondition[f25,p2;]
true 209 depart[f25,p2;]
true 240 __method_precondition_m1_do_check_floor_1_precondition[f25;]
true 248 nop[;]
true 89 __method_precondition_m10_do_throw_all_10_precondition[f25,f6,p8;]
true 129 down[f25,f6;]
true 220 __method_precondition_m2_do_check_floor_2_precondition[f6,p8;]
true 32 depart[f6,p8;]
true 172 __method_precondition_m1_do_check_floor_1_precondition[f6;]
true 263 nop[;]
true 36 __method_precondition_m10_do_throw_all_10_precondition[f6,f1,p4;]
true 183 down[f6,f1;]
true 137 __method_precondition_m2_do_check_floor_2_precondition[f1,p4;]
true 117 depart[f1,p4;]
true 238 __method_precondition_m1_do_check_floor_1_precondition[f1;]
true 154 nop[;]
true 90 __method_precondition_m8_do_throw_all_8_precondition[f1;]
true 3 nop[;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 353912832
planner result = SOLUTION
============ properties ============
acyclic                  = false
mostly acyclic           = false
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 77
number of actions                    = 952
number of abstract actions           = 54
number of primitive actions          = 898
number of methods                    = 597
number of primitive shop actions     = 595
number of primitive non-shop actions = 303
size of largest method               = 4
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 105994
number of clauses               = 393363
average size of clauses         = 2.9366157976220437
number of assert                = 47
number of horn                  = 357412
K offset                        = 0
K chosen value                  = 13
state formula                   = 123338
method children clauses         = 0
number of paths                 = 266
maximum plan length             = 266
number of decomposition clauses = 270025
number of ordering clauses      = 0
number of state clauses         = 123338
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 77431
============ parsing ============
total                         = 1057
file parser                   = 577
sort expansion                = 181
closed world assumption       = 152
inherit preconditions         = 0
shop methods                  = 44
eliminate identical variables = 22
strip domain of hybridity     = 2
flatten formula               = 78
============ preprocessing ============
total                                      = 2592
compile negative preconditions             = 48
compile unit methods                       = 0
split parameter                            = 54
expand choiceless abstract tasks           = 0
compile methods with identical tasks       = 22
removing unnecessary predicates            = 532
lifted reachabiltiy analysis               = 62
grounded planning graph analysis           = 770
grounded task decomposition graph analysis = 762
grounding                                  = 306
create artificial top task                 = 3
============ search preparation ============
compute state invariants = 237
============ sat ============
total                                        = 71055
generate formula                             = 5128
generate path decomposition tree             = 677
normalise path decomposition tree            = 220
sog optimisation                             = 177
translate path decomposition tree to clauses = 2126
generate state formula                       = 4981
generate state invariant formula             = 212
transform to DIMACS                          = 669
SAT solver                                   = 64700
SAT solver for K=0004                        = 0
SAT solver for K=0005                        = 10
SAT solver for K=0006                        = 20
SAT solver for K=0007                        = 20
SAT solver for K=0008                        = 50
SAT solver for K=0009                        = 60
SAT solver for K=0010                        = 100
SAT solver for K=0011                        = 1990
SAT solver for K=0012                        = 59590
SAT solver for K=0013                        = 2860

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="898";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="54";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="353912832";"40 sat:20:state formula"="123338";"40 sat:01:number of variables"="105994";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="266";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="false";"30 problem:06:number of methods"="597";"30 problem:07:number of primitive shop actions"="595";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="952";"30 problem:08:number of primitive non-shop actions"="303";"30 problem:02:number of predicates"="77";"40 sat:03:number of horn"="357412";"40 sat:15:K chosen value"="13";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="4";"40 sat:03:average size of clauses"="2.9366157976220437";"40 sat:02:number of clauses"="393363";"40 sat:50:number of state clauses"="123338";"40 sat:03:number of assert"="47";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="false";"40 sat:31:maximum plan length"="266";"40 sat:50:number of decomposition clauses"="270025";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="577";"01 parsing:08:flatten formula"="78";"40 sat:41:SAT solver for K=0004"="0";"40 sat:00:total"="71055";"40 sat:16:generate state formula"="4981";"40 sat:20:transform to DIMACS"="669";"40 sat:11:generate path decomposition tree"="677";"02 preprocessing:07:compile methods with identical tasks"="22";"01 parsing:07:strip domain of hybridity"="2";"40 sat:41:SAT solver for K=0008"="50";"02 preprocessing:08:removing unnecessary predicates"="532";"01 parsing:03:closed world assumption"="152";"02 preprocessing:11:lifted reachabiltiy analysis"="62";"01 parsing:02:sort expansion"="181";"40 sat:12:normalise path decomposition tree"="220";"40 sat:41:SAT solver for K=0012"="59590";"40 sat:40:SAT solver"="64700";"01 parsing:00:total"="1057";"40 sat:10:generate formula"="5128";"40 sat:41:SAT solver for K=0005"="10";"01 parsing:04:inherit preconditions"="0";"40 sat:41:SAT solver for K=0009"="60";"02 preprocessing:01:compile negative preconditions"="48";"40 sat:41:SAT solver for K=0013"="2860";"00 total:00:total"="77431";"40 sat:41:SAT solver for K=0011"="1990";"40 sat:13:sog optimisation"="177";"02 preprocessing:12:grounded planning graph analysis"="770";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="762";"40 sat:41:SAT solver for K=0006"="20";"02 preprocessing:04:split parameter"="54";"01 parsing:05:shop methods"="44";"10 search preparation:02:compute state invariants"="237";"01 parsing:06:eliminate identical variables"="22";"40 sat:15:translate path decomposition tree to clauses"="2126";"02 preprocessing:05:expand choiceless abstract tasks"="0";"40 sat:17:generate state invariant formula"="212";"40 sat:41:SAT solver for K=0010"="100";"02 preprocessing:00:total"="2592";"02 preprocessing:99:create artificial top task"="3";"02 preprocessing:84:grounding"="306";"40 sat:41:SAT solver for K=0007"="20"
#!verify __method_precondition_m0_do_problem_0_precondition[f0];__method_precondition_m3_do_check_floor_3_precondition[f0,p8];board[f0,p8];__method_precondition_m1_do_check_floor_1_precondition[f0];nop[];__method_precondition_m5_do_take_all_5_precondition[f0,f2,p12];up[f0,f2];__method_precondition_m3_do_check_floor_3_precondition[f2,p5];board[f2,p5];__method_precondition_m3_do_check_floor_3_precondition[f2,p12];board[f2,p12];__method_precondition_m3_do_check_floor_3_precondition[f2,p13];board[f2,p13];__method_precondition_m1_do_check_floor_1_precondition[f2];nop[];__method_precondition_m5_do_take_all_5_precondition[f2,f20,p6];up[f2,f20];__method_precondition_m3_do_check_floor_3_precondition[f20,p6];board[f20,p6];__method_precondition_m2_do_check_floor_2_precondition[f20,p12];depart[f20,p12];__method_precondition_m1_do_check_floor_1_precondition[f20];nop[];__method_precondition_m6_do_take_all_6_precondition[f20,f13,p0];down[f20,f13];__method_precondition_m3_do_check_floor_3_precondition[f13,p0];board[f13,p0];__method_precondition_m2_do_check_floor_2_precondition[f13,p13];depart[f13,p13];__method_precondition_m1_do_check_floor_1_precondition[f13];nop[];__method_precondition_m6_do_take_all_6_precondition[f13,f7,p14];down[f13,f7];__method_precondition_m3_do_check_floor_3_precondition[f7,p14];board[f7,p14];__method_precondition_m2_do_check_floor_2_precondition[f7,p5];depart[f7,p5];__method_precondition_m1_do_check_floor_1_precondition[f7];nop[];__method_precondition_m5_do_take_all_5_precondition[f7,f27,p1];up[f7,f27];__method_precondition_m3_do_check_floor_3_precondition[f27,p11];board[f27,p11];__method_precondition_m3_do_check_floor_3_precondition[f27,p1];board[f27,p1];__method_precondition_m1_do_check_floor_1_precondition[f27];nop[];__method_precondition_m6_do_take_all_6_precondition[f27,f22,p9];down[f27,f22];__method_precondition_m3_do_check_floor_3_precondition[f22,p9];board[f22,p9];__method_precondition_m1_do_check_floor_1_precondition[f22];nop[];__method_precondition_m5_do_take_all_5_precondition[f22,f23,p7];up[f22,f23];__method_precondition_m3_do_check_floor_3_precondition[f23,p7];board[f23,p7];__method_precondition_m3_do_check_floor_3_precondition[f23,p2];board[f23,p2];__method_precondition_m1_do_check_floor_1_precondition[f23];nop[];__method_precondition_m6_do_take_all_6_precondition[f23,f16,p3];down[f23,f16];__method_precondition_m2_do_check_floor_2_precondition[f16,p9];depart[f16,p9];__method_precondition_m2_do_check_floor_2_precondition[f16,p0];depart[f16,p0];__method_precondition_m1_do_check_floor_1_precondition[f16];nop[];__method_precondition_m6_do_take_all_6_precondition[f16,f11,p10];down[f16,f11];__method_precondition_m3_do_check_floor_3_precondition[f11,p10];board[f11,p10];__method_precondition_m1_do_check_floor_1_precondition[f11];nop[];__method_precondition_m4_do_take_all_4_precondition[f11];nop[];__method_precondition_m7_do_start_throw_all_7_precondition[f11];__method_precondition_m9_do_throw_all_9_precondition[f11,f16,p7];up[f11,f16];__method_precondition_m2_do_check_floor_2_precondition[f16,p7];depart[f16,p7];__method_precondition_m3_do_check_floor_3_precondition[f16,p3];board[f16,p3];__method_precondition_m1_do_check_floor_1_precondition[f16];nop[];__method_precondition_m10_do_throw_all_10_precondition[f16,f12,p3];down[f16,f12];__method_precondition_m2_do_check_floor_2_precondition[f12,p3];depart[f12,p3];__method_precondition_m1_do_check_floor_1_precondition[f12];nop[];__method_precondition_m9_do_throw_all_9_precondition[f12,f19,p6];up[f12,f19];__method_precondition_m2_do_check_floor_2_precondition[f19,p6];depart[f19,p6];__method_precondition_m1_do_check_floor_1_precondition[f19];nop[];__method_precondition_m10_do_throw_all_10_precondition[f19,f9,p11];down[f19,f9];__method_precondition_m2_do_check_floor_2_precondition[f9,p11];depart[f9,p11];__method_precondition_m3_do_check_floor_3_precondition[f9,p4];board[f9,p4];__method_precondition_m1_do_check_floor_1_precondition[f9];nop[];__method_precondition_m10_do_throw_all_10_precondition[f9,f8,p10];down[f9,f8];__method_precondition_m2_do_check_floor_2_precondition[f8,p10];depart[f8,p10];__method_precondition_m1_do_check_floor_1_precondition[f8];nop[];__method_precondition_m9_do_throw_all_9_precondition[f8,f25,p2];up[f8,f25];__method_precondition_m2_do_check_floor_2_precondition[f25,p1];depart[f25,p1];__method_precondition_m2_do_check_floor_2_precondition[f25,p14];depart[f25,p14];__method_precondition_m2_do_check_floor_2_precondition[f25,p2];depart[f25,p2];__method_precondition_m1_do_check_floor_1_precondition[f25];nop[];__method_precondition_m10_do_throw_all_10_precondition[f25,f6,p8];down[f25,f6];__method_precondition_m2_do_check_floor_2_precondition[f6,p8];depart[f6,p8];__method_precondition_m1_do_check_floor_1_precondition[f6];nop[];__method_precondition_m10_do_throw_all_10_precondition[f6,f1,p4];down[f6,f1];__method_precondition_m2_do_check_floor_2_precondition[f1,p4];depart[f1,p4];__method_precondition_m1_do_check_floor_1_precondition[f1];nop[];__method_precondition_m8_do_throw_all_8_precondition[f1];nop[]
==>
0 __method_precondition_m0_do_problem_0_precondition f0 
1 __method_precondition_m3_do_check_floor_3_precondition f0 p8 
2 board f0 p8 
3 __method_precondition_m1_do_check_floor_1_precondition f0 
4 nop  
5 __method_precondition_m5_do_take_all_5_precondition f0 f2 p12 
6 up f0 f2 
7 __method_precondition_m3_do_check_floor_3_precondition f2 p5 
8 board f2 p5 
9 __method_precondition_m3_do_check_floor_3_precondition f2 p12 
10 board f2 p12 
11 __method_precondition_m3_do_check_floor_3_precondition f2 p13 
12 board f2 p13 
13 __method_precondition_m1_do_check_floor_1_precondition f2 
14 nop  
15 __method_precondition_m5_do_take_all_5_precondition f2 f20 p6 
16 up f2 f20 
17 __method_precondition_m3_do_check_floor_3_precondition f20 p6 
18 board f20 p6 
19 __method_precondition_m2_do_check_floor_2_precondition f20 p12 
20 depart f20 p12 
21 __method_precondition_m1_do_check_floor_1_precondition f20 
22 nop  
23 __method_precondition_m6_do_take_all_6_precondition f20 f13 p0 
24 down f20 f13 
25 __method_precondition_m3_do_check_floor_3_precondition f13 p0 
26 board f13 p0 
27 __method_precondition_m2_do_check_floor_2_precondition f13 p13 
28 depart f13 p13 
29 __method_precondition_m1_do_check_floor_1_precondition f13 
30 nop  
31 __method_precondition_m6_do_take_all_6_precondition f13 f7 p14 
32 down f13 f7 
33 __method_precondition_m3_do_check_floor_3_precondition f7 p14 
34 board f7 p14 
35 __method_precondition_m2_do_check_floor_2_precondition f7 p5 
36 depart f7 p5 
37 __method_precondition_m1_do_check_floor_1_precondition f7 
38 nop  
39 __method_precondition_m5_do_take_all_5_precondition f7 f27 p1 
40 up f7 f27 
41 __method_precondition_m3_do_check_floor_3_precondition f27 p11 
42 board f27 p11 
43 __method_precondition_m3_do_check_floor_3_precondition f27 p1 
44 board f27 p1 
45 __method_precondition_m1_do_check_floor_1_precondition f27 
46 nop  
47 __method_precondition_m6_do_take_all_6_precondition f27 f22 p9 
48 down f27 f22 
49 __method_precondition_m3_do_check_floor_3_precondition f22 p9 
50 board f22 p9 
51 __method_precondition_m1_do_check_floor_1_precondition f22 
52 nop  
53 __method_precondition_m5_do_take_all_5_precondition f22 f23 p7 
54 up f22 f23 
55 __method_precondition_m3_do_check_floor_3_precondition f23 p7 
56 board f23 p7 
57 __method_precondition_m3_do_check_floor_3_precondition f23 p2 
58 board f23 p2 
59 __method_precondition_m1_do_check_floor_1_precondition f23 
60 nop  
61 __method_precondition_m6_do_take_all_6_precondition f23 f16 p3 
62 down f23 f16 
63 __method_precondition_m2_do_check_floor_2_precondition f16 p9 
64 depart f16 p9 
65 __method_precondition_m2_do_check_floor_2_precondition f16 p0 
66 depart f16 p0 
67 __method_precondition_m1_do_check_floor_1_precondition f16 
68 nop  
69 __method_precondition_m6_do_take_all_6_precondition f16 f11 p10 
70 down f16 f11 
71 __method_precondition_m3_do_check_floor_3_precondition f11 p10 
72 board f11 p10 
73 __method_precondition_m1_do_check_floor_1_precondition f11 
74 nop  
75 __method_precondition_m4_do_take_all_4_precondition f11 
76 nop  
77 __method_precondition_m7_do_start_throw_all_7_precondition f11 
78 __method_precondition_m9_do_throw_all_9_precondition f11 f16 p7 
79 up f11 f16 
80 __method_precondition_m2_do_check_floor_2_precondition f16 p7 
81 depart f16 p7 
82 __method_precondition_m3_do_check_floor_3_precondition f16 p3 
83 board f16 p3 
84 __method_precondition_m1_do_check_floor_1_precondition f16 
85 nop  
86 __method_precondition_m10_do_throw_all_10_precondition f16 f12 p3 
87 down f16 f12 
88 __method_precondition_m2_do_check_floor_2_precondition f12 p3 
89 depart f12 p3 
90 __method_precondition_m1_do_check_floor_1_precondition f12 
91 nop  
92 __method_precondition_m9_do_throw_all_9_precondition f12 f19 p6 
93 up f12 f19 
94 __method_precondition_m2_do_check_floor_2_precondition f19 p6 
95 depart f19 p6 
96 __method_precondition_m1_do_check_floor_1_precondition f19 
97 nop  
98 __method_precondition_m10_do_throw_all_10_precondition f19 f9 p11 
99 down f19 f9 
100 __method_precondition_m2_do_check_floor_2_precondition f9 p11 
101 depart f9 p11 
102 __method_precondition_m3_do_check_floor_3_precondition f9 p4 
103 board f9 p4 
104 __method_precondition_m1_do_check_floor_1_precondition f9 
105 nop  
106 __method_precondition_m10_do_throw_all_10_precondition f9 f8 p10 
107 down f9 f8 
108 __method_precondition_m2_do_check_floor_2_precondition f8 p10 
109 depart f8 p10 
110 __method_precondition_m1_do_check_floor_1_precondition f8 
111 nop  
112 __method_precondition_m9_do_throw_all_9_precondition f8 f25 p2 
113 up f8 f25 
114 __method_precondition_m2_do_check_floor_2_precondition f25 p1 
115 depart f25 p1 
116 __method_precondition_m2_do_check_floor_2_precondition f25 p14 
117 depart f25 p14 
118 __method_precondition_m2_do_check_floor_2_precondition f25 p2 
119 depart f25 p2 
120 __method_precondition_m1_do_check_floor_1_precondition f25 
121 nop  
122 __method_precondition_m10_do_throw_all_10_precondition f25 f6 p8 
123 down f25 f6 
124 __method_precondition_m2_do_check_floor_2_precondition f6 p8 
125 depart f6 p8 
126 __method_precondition_m1_do_check_floor_1_precondition f6 
127 nop  
128 __method_precondition_m10_do_throw_all_10_precondition f6 f1 p4 
129 down f6 f1 
130 __method_precondition_m2_do_check_floor_2_precondition f1 p4 
131 depart f1 p4 
132 __method_precondition_m1_do_check_floor_1_precondition f1 
133 nop  
134 __method_precondition_m8_do_throw_all_8_precondition f1 
135 nop  
root 160
136 do_check_floor f25  -> m1_do_check_floor 120 121
137 do_check_floor f13  -> m3_do_check_floor 25 26 139
138 do_take_all f11  -> m4_do_take_all 75 76
139 do_check_floor f13  -> m2_do_check_floor 27 28 175
140 do_check_floor f1  -> m2_do_check_floor 130 131 170
141 do_take_all f20  -> m6_do_take_all 23 24 137 157
142 do_check_floor f12  -> m2_do_check_floor 88 89 161
143 do_check_floor f25  -> m2_do_check_floor 116 117 147
144 do_check_floor f7  -> m2_do_check_floor 35 36 183
145 do_check_floor f9  -> m1_do_check_floor 104 105
146 do_check_floor f0  -> m1_do_check_floor 3 4
147 do_check_floor f25  -> m2_do_check_floor 118 119 136
148 do_throw_all f8  -> m9_do_throw_all 112 113 182 192
149 do_check_floor f16  -> m1_do_check_floor 84 85
150 do_take_all f16  -> m6_do_take_all 69 70 177 138
151 do_check_floor f23  -> m3_do_check_floor 57 58 166
152 do_check_floor f27  -> m3_do_check_floor 43 44 185
153 do_check_floor f2  -> m1_do_check_floor 13 14
154 do_check_floor f16  -> m2_do_check_floor 63 64 159
155 do_start_throw_all   -> m7_do_start_throw_all 77 205
156 do_check_floor f6  -> m1_do_check_floor 126 127
157 do_take_all f13  -> m6_do_take_all 31 32 201 193
158 do_check_floor f16  -> m1_do_check_floor 67 68
159 do_check_floor f16  -> m2_do_check_floor 65 66 158
160 __MakeMethodSubTasksUniqueCompilation__top_3  -> __top_3 179
161 do_check_floor f12  -> m1_do_check_floor 90 91
162 do_check_floor f19  -> m2_do_check_floor 94 95 178
163 do_check_floor f20  -> m2_do_check_floor 19 20 204
164 do_check_floor f23  -> m3_do_check_floor 55 56 151
165 do_check_floor f27  -> m3_do_check_floor 41 42 152
166 do_check_floor f23  -> m1_do_check_floor 59 60
167 do_throw_all f16  -> m10_do_throw_all 86 87 142 181
168 do_check_floor f22  -> m1_do_check_floor 51 52
169 do_check_floor f16  -> m2_do_check_floor 80 81 184
170 do_check_floor f1  -> m1_do_check_floor 132 133
171 do_take_all f27  -> m6_do_take_all 47 48 195 200
172 do_check_floor f2  -> m3_do_check_floor 11 12 153
173 do_throw_all f6  -> m10_do_throw_all 128 129 140 196
174 do_check_floor f11  -> m1_do_check_floor 73 74
175 do_check_floor f13  -> m1_do_check_floor 29 30
176 do_check_floor f9  -> m2_do_check_floor 100 101 202
177 do_check_floor f11  -> m3_do_check_floor 71 72 174
178 do_check_floor f19  -> m1_do_check_floor 96 97
179 do_problem   -> m0_do_problem 0 203 187 155
180 do_throw_all f9  -> m10_do_throw_all 106 107 197 148
181 do_throw_all f12  -> m9_do_throw_all 92 93 162 198
182 do_check_floor f25  -> m2_do_check_floor 114 115 143
183 do_check_floor f7  -> m1_do_check_floor 37 38
184 do_check_floor f16  -> m3_do_check_floor 82 83 149
185 do_check_floor f27  -> m1_do_check_floor 45 46
186 do_check_floor f6  -> m2_do_check_floor 124 125 156
187 do_take_all f0  -> m5_do_take_all 5 6 190 188
188 do_take_all f2  -> m5_do_take_all 15 16 199 141
189 do_take_all f23  -> m6_do_take_all 61 62 154 150
190 do_check_floor f2  -> m3_do_check_floor 7 8 191
191 do_check_floor f2  -> m3_do_check_floor 9 10 172
192 do_throw_all f25  -> m10_do_throw_all 122 123 186 173
193 do_take_all f7  -> m5_do_take_all 39 40 165 171
194 do_check_floor f8  -> m1_do_check_floor 110 111
195 do_check_floor f22  -> m3_do_check_floor 49 50 168
196 do_throw_all f1  -> m8_do_throw_all 134 135
197 do_check_floor f8  -> m2_do_check_floor 108 109 194
198 do_throw_all f19  -> m10_do_throw_all 98 99 176 180
199 do_check_floor f20  -> m3_do_check_floor 17 18 163
200 do_take_all f22  -> m5_do_take_all 53 54 164 189
201 do_check_floor f7  -> m3_do_check_floor 33 34 144
202 do_check_floor f9  -> m3_do_check_floor 102 103 145
203 do_check_floor f0  -> m3_do_check_floor 1 2 146
204 do_check_floor f20  -> m1_do_check_floor 21 22
205 do_throw_all f11  -> m9_do_throw_all 78 79 169 167

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 78.559 MEMPEAK_KBS 921116.672
