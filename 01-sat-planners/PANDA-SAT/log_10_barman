PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p10.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p10.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p10.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 40
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounded planning graph ... done in 491ms.
	Number of Grounded Actions 2363
	Number of Grounded Literals 372
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 40
Grounding ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 372
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 412ms.
	Number of Grounded Actions 2341
	Number of Grounded Literals 343
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1184
	number of tasks = 3525
	number of decomposition methods = 4277
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3895
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3895
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3895
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 186ms.
	Number of Grounded Actions 2341
	Number of Grounded Literals 343
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3895
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3635
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3635
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3635
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3635
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 802
	number of tasks = 3143
	number of decomposition methods = 3635
	number of predicates = 343
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 932
	number of epsilon methods = 0
	number of primitive tasks = 2341
	number of constants = 0
Tasks 2341 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854768218ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767769
done
initial PDT has 279 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 279 leafs
SHOP LEAFS 93
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 175959
Size 175959 at 0/2341
Size 175156 at 500/2341
Size 144717 at 1000/2341
Size 44822 at 1500/2341
Size 20962 at 2000/2341
Size 20906
Size 20906 at 0/2341
Size 20898 at 500/2341
Size 11412 at 1000/2341
Size 11370 at 1500/2341
Size 11362 at 2000/2341
Size 11362
Size 11362 at 0/2341
Size 11362 at 500/2341
Size 3351 at 1000/2341
Size 3312 at 1500/2341
Size 3234 at 2000/2341
Size 3234
Size 3234 at 0/2341
Size 3234 at 500/2341
Size 3104 at 1000/2341
Size 3104 at 1500/2341
Size 3104 at 2000/2341
Size 3104
Size 3104 at 0/2341
Size 3104 at 500/2341
Size 3028 at 1000/2341
Size 3028 at 1500/2341
Size 3028 at 2000/2341
Size 3028
Size 3028 at 0/2341
Size 3028 at 500/2341
Size 3028 at 1000/2341
Size 3028 at 1500/2341
Size 3028 at 2000/2341
Size 3028
Invariant time: 1.948
Number of invariants: 3028
Invariant Clauses 847840
NUMBER OF CLAUSES 1342926
NUMBER OF STATE CLAUSES 1121419
NUMBER OF DECOMPOSITION CLAUSES 221507
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.51% 16.490000000000002% 0.0% 
NUMBER OF PATHS 279
Starting cryptominisat5.5
Setting starttime of solver to 1604475300865
Command exited with non-zero status 10
0.71 0.05

Time command gave the following runtime for the solver: 760
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_9;2;2,2679 2679 _m3_get_second_ingredient_3
9;2;2 44 pathaction!3_9;2;2,2917
Consider method^3_4;1;3,1701 1701 _m2_get_first_ingredient_4
4;1;3 386 pathaction!3_4;1;3,797
Consider method^3_8;2;2,895 895 _m3_get_second_ingredient_3
8;2;2 393 pathaction!3_8;2;2,2941
Consider method^1_2,500 500 m0_do_cocktail_in_shot1
2 365 pathaction!1_2,1491
Consider method^3_9;1;3,2473 2473 _m2_get_first_ingredient_4
9;1;3 399 pathaction!3_9;1;3,843
Consider method^3_5;2;1,3517 3517 _m3_get_second_ingredient_2
5;2;1 74 pathaction!3_5;2;1,634
Consider method^2_6;1,2971 2971 m2_get_first_ingredient
6;1 124 pathaction!2_6;1,559
Consider method^3_10;1;3,271 271 _m2_get_first_ingredient_4
10;1;3 13 pathaction!3_10;1;3,849
Consider method^2_8;1,1135 1135 m2_get_first_ingredient
8;1 367 pathaction!2_8;1,561
Consider method^3_0;2;2,800 800 _m3_get_second_ingredient_3
0;2;2 193 pathaction!3_0;2;2,2949
Consider method^3_8;1;2,58 58 _m2_get_first_ingredient_3
8;1;2 268 pathaction!3_8;1;2,1209
Consider method^2_6;3,53 53 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 87 pathaction!2_6;3,2852
Consider method^1_3,1510 1510 m0_do_cocktail_in_shot1
3 56 pathaction!1_3,1490
Consider method^3_2;1;1,2211 2211 m8_do_fill_shot
2;1;1 196 pathaction!3_2;1;1,939
Consider method^3_9;3;1,833 833 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2>
9;3;1 12 pathaction!3_9;3;1,1042
Consider method^3_6;1;2,872 872 _m2_get_first_ingredient_3
6;1;2 379 pathaction!3_6;1;2,1190
Consider method^3_7;1;3,1320 1320 _m2_get_first_ingredient_4
7;1;3 344 pathaction!3_7;1;3,787
Consider method^2_10;3,1912 1912 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 239 pathaction!2_10;3,2847
Consider method^3_10;2;1,2083 2083 _m3_get_second_ingredient_2
10;2;1 2 pathaction!3_10;2;1,646
Consider method^2_12;1,2179 2179 m9_do_fill_shot
12;1 66 pathaction!2_12;1,959
Consider method^2_11;3,3059 3059 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 101 pathaction!2_11;3,2853
Consider method^2_3;2,2193 2193 m3_get_second_ingredient
3;2 180 pathaction!2_3;2,1592
Consider method^2_1;3,3284 3284 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 306 pathaction!2_1;3,2846
Consider method^2_13;1,1814 1814 m2_get_first_ingredient
13;1 330 pathaction!2_13;1,554
Consider method^1_12,1002 1002 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
12 31 pathaction!1_12,1065
Consider method^3_7;3;1,2869 2869 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2>
7;3;1 226 pathaction!3_7;3;1,1044
Consider method^3_13;3;1,1931 1931 <_m4_serve_shot_2;do_clean_shot[shot14,cocktail10,left];m5_do_clean_shot;0;-1,-2>
13;3;1 69 pathaction!3_13;3;1,1048
Consider method^3_2;1;3,2542 2542 _m2_get_first_ingredient_4
2;1;3 151 pathaction!3_2;1;3,767
Consider method^3_2;3;1,1990 1990 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 85 pathaction!3_2;3;1,1064
Consider method^1_4,1559 1559 m0_do_cocktail_in_shot1
4 318 pathaction!1_4,1501
Consider method^2_0;2,44 44 m3_get_second_ingredient
0;2 397 pathaction!2_0;2,1605
Consider method^2_7;3,3439 3439 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 170 pathaction!2_7;3,2854
Consider method^1_5,2960 2960 m0_do_cocktail_in_shot1
5 173 pathaction!1_5,1496
Consider method^3_1;3;1,393 393 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2>
1;3;1 122 pathaction!3_1;3;1,1057
Consider method^3_3;3;1,951 951 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2>
3;3;1 15 pathaction!3_3;3;1,1060
Consider method^2_11;1,1135 1135 m2_get_first_ingredient
11;1 402 pathaction!2_11;1,561
Consider method^3_2;2;1,241 241 _m3_get_second_ingredient_2
2;2;1 302 pathaction!3_2;2;1,723
Consider method^3_10;1;2,6 6 _m2_get_first_ingredient_3
10;1;2 194 pathaction!3_10;1;2,1202
Consider method^3_3;1;3,2671 2671 _m2_get_first_ingredient_4
3;1;3 136 pathaction!3_3;1;3,796
Consider method^3_4;1;2,973 973 _m2_get_first_ingredient_3
4;1;2 162 pathaction!3_4;1;2,1199
Consider method^3_10;1;1,2734 2734 m9_do_fill_shot
10;1;1 361 pathaction!3_10;1;1,1021
Consider method^1_7,84 84 m0_do_cocktail_in_shot1
7 197 pathaction!1_7,1500
Consider method^2_3;3,977 977 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 32 pathaction!2_3;3,2844
Consider method^3_6;3;1,1899 1899 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 102 pathaction!3_6;3;1,1050
Consider method^3_1;2;1,3602 3602 _m3_get_second_ingredient_2
1;2;1 90 pathaction!3_1;2;1,671
Consider method^3_5;1;1,2293 2293 m9_do_fill_shot
5;1;1 9 pathaction!3_5;1;1,1015
Consider method^2_13;2,44 44 m3_get_second_ingredient
13;2 341 pathaction!2_13;2,1605
Consider method^2_5;3,1246 1246 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 284 pathaction!2_5;3,2850
Consider method^3_2;2;2,1474 1474 _m3_get_second_ingredient_3
2;2;2 114 pathaction!3_2;2;2,2921
Consider method^1_9,1140 1140 m0_do_cocktail_in_shot1
9 331 pathaction!1_9,1497
Consider method^2_6;2,435 435 m3_get_second_ingredient
6;2 23 pathaction!2_6;2,1610
Consider method^3_6;2;2,1474 1474 _m3_get_second_ingredient_3
6;2;2 8 pathaction!3_6;2;2,2921
Consider method^2_2;2,834 834 m3_get_second_ingredient
2;2 387 pathaction!2_2;2,1604
Consider method^3_6;2;1,241 241 _m3_get_second_ingredient_2
6;2;1 369 pathaction!3_6;2;1,723
Consider method^3_10;3;1,632 632 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 316 pathaction!3_10;3;1,1059
Consider method^2_4;2,1711 1711 m3_get_second_ingredient
4;2 333 pathaction!2_4;2,1594
Consider method^1_8,374 374 m0_do_cocktail_in_shot1
8 80 pathaction!1_8,1494
Consider method^3_3;2;1,829 829 _m3_get_second_ingredient_2
3;2;1 244 pathaction!3_3;2;1,668
Consider method^2_13;3,1699 1699 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot14,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
13;3 175 pathaction!2_13;3,2849
Consider method^3_8;2;1,3609 3609 _m3_get_second_ingredient_2
8;2;1 106 pathaction!3_8;2;1,725
Consider method^3_4;2;2,2679 2679 _m3_get_second_ingredient_3
4;2;2 100 pathaction!3_4;2;2,2917
Consider method^3_3;1;2,313 313 _m2_get_first_ingredient_3
3;1;2 198 pathaction!3_3;1;2,1143
Consider method^3_5;1;2,259 259 _m2_get_first_ingredient_3
5;1;2 290 pathaction!3_5;1;2,1194
Consider method^3_10;2;2,2800 2800 _m3_get_second_ingredient_3
10;2;2 231 pathaction!3_10;2;2,2903
Consider method^3_11;1;3,2228 2228 _m2_get_first_ingredient_4
11;1;3 109 pathaction!3_11;1;3,770
Consider method^3_7;2;1,829 829 _m3_get_second_ingredient_2
7;2;1 392 pathaction!3_7;2;1,668
Consider method^3_9;1;2,259 259 _m2_get_first_ingredient_3
9;1;2 144 pathaction!3_9;1;2,1194
Consider method^3_11;2;2,895 895 _m3_get_second_ingredient_3
11;2;2 263 pathaction!3_11;2;2,2941
Consider method^3_7;1;2,1675 1675 _m2_get_first_ingredient_3
7;1;2 177 pathaction!3_7;1;2,1166
Consider method^1_13,3016 3016 m0_do_cocktail_in_shot1
13 108 pathaction!1_13,1495
Consider method^3_2;1;2,76 76 _m2_get_first_ingredient_3
2;1;2 358 pathaction!3_2;1;2,1212
Consider method^1_6,55 55 m0_do_cocktail_in_shot1
6 134 pathaction!1_6,1498
Consider method^3_3;1;1,111 111 m9_do_fill_shot
3;1;1 205 pathaction!3_3;1;1,968
Consider method^3_8;1;3,2228 2228 _m2_get_first_ingredient_4
8;1;3 142 pathaction!3_8;1;3,770
Consider method^3_5;3;1,510 510 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 155 pathaction!3_5;3;1,1061
Consider method^3_0;2;1,3602 3602 _m3_get_second_ingredient_2
0;2;1 61 pathaction!3_0;2;1,671
Consider method^2_0;3,2625 2625 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 388 pathaction!2_0;3,2856
Consider method^2_5;2,2161 2161 m3_get_second_ingredient
5;2 93 pathaction!2_5;2,1603
Consider method^2_3;1,2711 2711 m2_get_first_ingredient
3;1 354 pathaction!2_3;1,541
Consider method^3_1;1;3,2914 2914 _m2_get_first_ingredient_4
1;1;3 257 pathaction!3_1;1;3,865
Consider method^3_7;2;2,2231 2231 _m3_get_second_ingredient_3
7;2;2 265 pathaction!3_7;2;2,2905
Consider method^3_4;3;1,3226 3226 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2>
4;3;1 375 pathaction!3_4;3;1,1045
Consider method^1_0,2017 2017 m0_do_cocktail_in_shot1
0 171 pathaction!1_0,1502
Consider method^2_2;1,2870 2870 m2_get_first_ingredient
2;1 398 pathaction!2_2;1,553
Consider method^2_7;1,1386 1386 m2_get_first_ingredient
7;1 125 pathaction!2_7;1,550
Consider method^3_13;1;3,2228 2228 _m2_get_first_ingredient_4
13;1;3 187 pathaction!3_13;1;3,770
Consider method^3_8;1;1,149 149 m9_do_fill_shot
8;1;1 269 pathaction!3_8;1;1,942
Consider method^3_13;1;2,58 58 _m2_get_first_ingredient_3
13;1;2 319 pathaction!3_13;1;2,1209
Consider method^2_10;2,1058 1058 m3_get_second_ingredient
10;2 323 pathaction!2_10;2,1599
Consider method^3_11;3;1,647 647 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2>
11;3;1 178 pathaction!3_11;3;1,1039
Consider method^3_11;1;1,506 506 m7_do_fill_shot
11;1;1 404 pathaction!3_11;1;1,942
Consider method^3_1;1;2,2867 2867 _m2_get_first_ingredient_3
1;1;2 3 pathaction!3_1;1;2,1145
Consider method^3_0;1;1,3597 3597 m8_do_fill_shot
0;1;1 355 pathaction!3_0;1;1,942
Consider method^3_0;1;2,58 58 _m2_get_first_ingredient_3
0;1;2 373 pathaction!3_0;1;2,1209
Consider method^3_0;1;3,2228 2228 _m2_get_first_ingredient_4
0;1;3 230 pathaction!3_0;1;3,770
Consider method^2_2;3,409 409 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 236 pathaction!2_2;3,2845
Consider method^3_5;2;2,2679 2679 _m3_get_second_ingredient_3
5;2;2 50 pathaction!3_5;2;2,2917
Consider method^3_4;2;1,3517 3517 _m3_get_second_ingredient_2
4;2;1 377 pathaction!3_4;2;1,634
Consider method^1_1,3123 3123 m0_do_cocktail_in_shot1
1 252 pathaction!1_1,1492
Consider method^3_1;2;2,800 800 _m3_get_second_ingredient_3
1;2;2 25 pathaction!3_1;2;2,2949
Consider method^0_,3634 3634 __top_1
 391 pathaction!0_,3142
Consider method^3_6;1;3,1533 1533 _m2_get_first_ingredient_4
6;1;3 258 pathaction!3_6;1;3,754
Consider method^3_9;1;1,219 219 m9_do_fill_shot
9;1;1 156 pathaction!3_9;1;1,1015
Consider method^3_8;3;1,3329 3329 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2>
8;3;1 285 pathaction!3_8;3;1,1049
Consider method^3_13;2;2,800 800 _m3_get_second_ingredient_3
13;2;2 320 pathaction!3_13;2;2,2949
Consider method^3_13;2;1,3602 3602 _m3_get_second_ingredient_2
13;2;1 152 pathaction!3_13;2;1,671
Consider method^2_9;3,763 763 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 401 pathaction!2_9;3,2851
Consider method^3_5;1;3,2473 2473 _m2_get_first_ingredient_4
5;1;3 201 pathaction!3_5;1;3,843
Consider method^2_1;2,3516 3516 m3_get_second_ingredient
1;2 88 pathaction!2_1;2,1598
Consider method^3_1;1;1,2766 2766 m9_do_fill_shot
1;1;1 67 pathaction!3_1;1;1,1037
Consider method^3_4;1;1,3342 3342 m7_do_fill_shot
4;1;1 357 pathaction!3_4;1;1,969
Consider method^3_11;2;1,3609 3609 _m3_get_second_ingredient_2
11;2;1 99 pathaction!3_11;2;1,725
Consider method^2_7;2,1416 1416 m3_get_second_ingredient
7;2 311 pathaction!2_7;2,1601
Consider method^2_9;1,2187 2187 m2_get_first_ingredient
9;1 83 pathaction!2_9;1,545
Consider method^2_8;2,3035 3035 m3_get_second_ingredient
8;2 324 pathaction!2_8;2,1612
Consider method^3_11;1;2,58 58 _m2_get_first_ingredient_3
11;1;2 63 pathaction!3_11;1;2,1209
Consider method^1_11,91 91 m0_do_cocktail_in_shot1
11 119 pathaction!1_11,1499
Consider method^2_8;3,537 537 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 338 pathaction!2_8;3,2848
Consider method^2_10;1,1030 1030 m2_get_first_ingredient
10;1 1 pathaction!2_10;1,548
Consider method^3_0;3;1,1482 1482 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 41 pathaction!3_0;3;1,1053
Consider method^2_4;3,475 475 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 53 pathaction!2_4;3,2855
Consider method^3_6;1;1,2719 2719 m7_do_fill_shot
6;1;1 20 pathaction!3_6;1;1,926
Consider method^3_13;1;1,2128 2128 m9_do_fill_shot
13;1;1 360 pathaction!3_13;1;1,942
Consider method^3_9;2;1,3517 3517 _m3_get_second_ingredient_2
9;2;1 181 pathaction!3_9;2;1,634
Consider method^3_3;2;2,2231 2231 _m3_get_second_ingredient_3
3;2;2 332 pathaction!3_3;2;2,2905
Consider method^2_1;1,1798 1798 m2_get_first_ingredient
1;1 245 pathaction!2_1;1,547
Consider method^2_0;1,1814 1814 m2_get_first_ingredient
0;1 279 pathaction!2_0;1,554
Consider method^2_9;2,2255 2255 m3_get_second_ingredient
9;2 112 pathaction!2_9;2,1596
Consider method^3_7;1;1,3254 3254 m9_do_fill_shot
7;1;1 272 pathaction!3_7;1;1,959
Consider method^2_11;2,3035 3035 m3_get_second_ingredient
11;2 224 pathaction!2_11;2,1612
Consider method^1_10,2300 2300 m0_do_cocktail_in_shot1
10 40 pathaction!1_10,1493
Consider method^2_4;1,248 248 m2_get_first_ingredient
4;1 39 pathaction!2_4;1,543
Consider method^2_5;1,1868 1868 m2_get_first_ingredient
5;1 164 pathaction!2_5;1,552


CHECKING primitive solution of length 274 ...
true 248 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 55 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot15;]
true 345 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4;]
true 294 grasp[left,shot15;]
true 366 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 17 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 293 clean-shot[shot15,ingredient4,left,right;]
true 5 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,left,shot15;]
true 218 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 71 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 211 leave[left,shot15;]
true 149 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3;]
true 378 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 105 nop[;]
true 301 grasp[left,shaker1;]
true 225 shake[cocktail5,ingredient4,ingredient3,shaker1,left,right;]
true 33 pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1;]
true 43 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 145 clean-shaker[left,right,shaker1;]
true 403 leave[left,shaker1;]
true 123 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left;]
true 111 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot15;]
true 133 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient3,dispenser1;]
true 374 grasp[left,shot15;]
true 235 clean-shot[shot15,ingredient3,left,right;]
true 278 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 7 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 210 clean-shot[shot15,ingredient1,left,right;]
true 213 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot15;]
true 118 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 52 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 315 leave[left,shot15;]
true 342 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient3;]
true 356 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 208 nop[;]
true 47 grasp[left,shaker1;]
true 73 shake[cocktail10,ingredient1,ingredient3,shaker1,left,right;]
true 260 pour-shaker-to-shot[cocktail10,shot2,left,shaker1,l2,l1;]
true 297 empty-shaker[left,shaker1,cocktail10,l1,l0;]
true 59 clean-shaker[left,right,shaker1;]
true 259 leave[left,shaker1;]
true 45 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 209 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot13;]
true 159 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4;]
true 291 grasp[left,shot13;]
true 255 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 217 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1;]
true 277 clean-shot[shot13,ingredient4,left,right;]
true 349 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,left,shot13;]
true 161 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 326 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 137 leave[left,shot13;]
true 84 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient2;]
true 35 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 30 nop[;]
true 28 grasp[right,shaker1;]
true 372 shake[cocktail9,ingredient4,ingredient2,shaker1,right,left;]
true 396 pour-shaker-to-shot[cocktail9,shot3,right,shaker1,l2,l1;]
true 280 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 202 clean-shaker[right,left,shaker1;]
true 183 leave[right,shaker1;]
true 64 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right;]
true 242 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot13;]
true 241 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient2,dispenser3;]
true 190 grasp[right,shot13;]
true 347 clean-shot[shot13,ingredient2,right,left;]
true 37 fill-shot[shot13,ingredient3,right,left,dispenser3;]
true 261 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1;]
true 227 clean-shot[shot13,ingredient3,right,left;]
true 34 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,right,shot13;]
true 76 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 336 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,right,l1,l2;]
true 143 leave[right,shot13;]
true 21 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1;]
true 253 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 325 nop[;]
true 191 grasp[left,shaker1;]
true 126 shake[cocktail1,ingredient3,ingredient1,shaker1,left,right;]
true 188 pour-shaker-to-shot[cocktail1,shot4,left,shaker1,l2,l1;]
true 370 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 362 clean-shaker[left,right,shaker1;]
true 289 leave[left,shaker1;]
true 368 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left;]
true 19 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot13;]
true 24 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient1,dispenser1;]
true 98 grasp[left,shot13;]
true 174 refill-shot[shot13,ingredient1,left,right,dispenser1;]
true 307 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1;]
true 166 clean-shot[shot13,ingredient1,left,right;]
true 60 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot13;]
true 16 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 303 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 249 leave[left,shot13;]
true 75 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient3;]
true 405 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 57 nop[;]
true 216 grasp[right,shaker1;]
true 36 shake[cocktail3,ingredient1,ingredient3,shaker1,right,left;]
true 327 pour-shaker-to-shot[cocktail3,shot5,right,shaker1,l2,l1;]
true 165 empty-shaker[right,shaker1,cocktail3,l1,l0;]
true 317 clean-shaker[right,left,shaker1;]
true 380 leave[right,shaker1;]
true 267 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left;]
true 104 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot13;]
true 233 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2;]
true 185 grasp[left,shot13;]
true 384 clean-shot[shot13,ingredient3,left,right;]
true 91 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 160 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 77 clean-shot[shot13,ingredient2,left,right;]
true 48 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,left,shot13;]
true 135 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 130 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 117 leave[left,shot13;]
true 140 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3;]
true 299 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 132 nop[;]
true 276 grasp[left,shaker1;]
true 203 shake[cocktail6,ingredient2,ingredient3,shaker1,left,right;]
true 339 pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1;]
true 29 empty-shaker[left,shaker1,cocktail6,l1,l0;]
true 176 clean-shaker[left,right,shaker1;]
true 395 leave[left,shaker1;]
true 81 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left;]
true 189 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot13;]
true 304 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient3,dispenser3;]
true 11 grasp[left,shot13;]
true 353 refill-shot[shot13,ingredient3,left,right,dispenser3;]
true 371 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 0 clean-shot[shot13,ingredient3,left,right;]
true 300 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot13;]
true 199 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 406 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2;]
true 352 leave[left,shot13;]
true 168 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2;]
true 295 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 42 nop[;]
true 273 grasp[left,shaker1;]
true 382 shake[cocktail8,ingredient3,ingredient2,shaker1,left,right;]
true 206 pour-shaker-to-shot[cocktail8,shot7,left,shaker1,l2,l1;]
true 14 empty-shaker[left,shaker1,cocktail8,l1,l0;]
true 286 clean-shaker[left,right,shaker1;]
true 234 leave[left,shaker1;]
true 351 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 72 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13;]
true 167 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient2,dispenser4;]
true 103 grasp[right,shot13;]
true 274 clean-shot[shot13,ingredient2,right,left;]
true 266 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 364 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 340 clean-shot[shot13,ingredient4,right,left;]
true 95 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,right,shot13;]
true 204 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 138 pour-shot-to-used-shaker[shot13,ingredient1,shaker1,right,l1,l2;]
true 262 leave[right,shot13;]
true 251 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient1;]
true 292 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 51 nop[;]
true 313 grasp[left,shaker1;]
true 288 shake[cocktail2,ingredient4,ingredient1,shaker1,left,right;]
true 68 pour-shaker-to-shot[cocktail2,shot8,left,shaker1,l2,l1;]
true 237 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 27 clean-shaker[left,right,shaker1;]
true 146 leave[left,shaker1;]
true 92 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 243 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot15;]
true 214 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient3,dispenser4;]
true 46 grasp[left,shot15;]
true 381 clean-shot[shot15,ingredient3,left,right;]
true 153 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 70 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 96 clean-shot[shot15,ingredient4,left,right;]
true 264 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot15;]
true 62 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 337 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 86 leave[left,shot15;]
true 49 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2;]
true 240 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 26 nop[;]
true 346 grasp[left,shaker1;]
true 329 shake[cocktail11,ingredient4,ingredient2,shaker1,left,right;]
true 148 pour-shaker-to-shot[cocktail11,shot9,left,shaker1,l2,l1;]
true 389 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 58 clean-shaker[left,right,shaker1;]
true 82 leave[left,shaker1;]
true 110 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 78 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot13;]
true 343 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient1,dispenser2;]
true 256 grasp[left,shot13;]
true 283 clean-shot[shot13,ingredient1,left,right;]
true 394 fill-shot[shot13,ingredient2,left,right,dispenser2;]
true 385 pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1;]
true 312 clean-shot[shot13,ingredient2,left,right;]
true 328 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,left,shot13;]
true 186 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 38 pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2;]
true 79 leave[left,shot13;]
true 322 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient3;]
true 121 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 282 nop[;]
true 390 grasp[right,shaker1;]
true 222 shake[cocktail7,ingredient2,ingredient3,shaker1,right,left;]
true 147 pour-shaker-to-shot[cocktail7,shot10,right,shaker1,l2,l1;]
true 296 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 298 clean-shaker[right,left,shaker1;]
true 6 leave[right,shaker1;]
true 220 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 238 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot15;]
true 169 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient2,dispenser1;]
true 383 grasp[right,shot15;]
true 287 clean-shot[shot15,ingredient2,right,left;]
true 305 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 219 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1;]
true 97 clean-shot[shot15,ingredient1,right,left;]
true 200 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,right,shot15;]
true 141 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 207 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 113 leave[right,shot15;]
true 334 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient4;]
true 127 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 129 nop[;]
true 281 grasp[right,shaker1;]
true 158 shake[cocktail4,ingredient1,ingredient4,shaker1,right,left;]
true 115 pour-shaker-to-shot[cocktail4,shot11,right,shaker1,l2,l1;]
true 10 empty-shaker[right,shaker1,cocktail4,l1,l0;]
true 246 clean-shaker[right,left,shaker1;]
true 363 leave[right,shaker1;]
true 228 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 254 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot15;]
true 154 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient4,dispenser4;]
true 139 grasp[left,shot15;]
true 107 refill-shot[shot15,ingredient4,left,right,dispenser4;]
true 192 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 275 clean-shot[shot15,ingredient4,left,right;]
true 335 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot15;]
true 400 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 89 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 359 leave[left,shot15;]
true 232 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2;]
true 179 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 94 nop[;]
true 120 grasp[right,shaker1;]
true 65 shake[cocktail11,ingredient4,ingredient2,shaker1,right,left;]
true 270 pour-shaker-to-shot[cocktail11,shot12,right,shaker1,l2,l1;]
true 182 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 18 clean-shaker[right,left,shaker1;]
true 195 leave[right,shaker1;]
true 4 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4;]
true 376 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient3,dispenser4;]
true 184 grasp[right,shot13;]
true 309 clean-shot[shot13,ingredient3,right,left;]
true 229 fill-shot[shot13,ingredient4,right,left,dispenser4;]
true 212 leave[right,shot13;]
true 223 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left;]
true 157 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot15;]
true 22 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient2,dispenser4;]
true 128 grasp[left,shot15;]
true 150 clean-shot[shot15,ingredient2,left,right;]
true 54 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 215 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1;]
true 221 clean-shot[shot15,ingredient4,left,right;]
true 172 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,left,shot15;]
true 348 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 310 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 271 leave[left,shot15;]
true 308 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3;]
true 314 __method_precondition_m5_do_clean_shot_5_precondition[shot14;]
true 116 nop[;]
true 250 grasp[right,shaker1;]
true 163 shake[cocktail5,ingredient4,ingredient3,shaker1,right,left;]
true 131 pour-shaker-to-shot[cocktail5,shot14,right,shaker1,l2,l1;]
true 247 empty-shaker[right,shaker1,cocktail5,l1,l0;]
true 321 clean-shaker[right,left,shaker1;]
true 350 leave[right,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 470496888
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 343
number of actions                    = 3143
number of abstract actions           = 802
number of primitive actions          = 2341
number of methods                    = 3635
number of primitive shop actions     = 932
number of primitive non-shop actions = 1409
size of largest method               = 14
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 262744
number of clauses               = 1342926
average size of clauses         = 2.418839161651498
number of assert                = 156
number of horn                  = 1170576
K offset                        = 0
K chosen value                  = 4
state formula                   = 1121419
method children clauses         = 0
number of paths                 = 279
maximum plan length             = 279
number of decomposition clauses = 221507
number of ordering clauses      = 0
number of state clauses         = 1121419
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 16817
============ parsing ============
total                         = 1130
file parser                   = 621
sort expansion                = 232
closed world assumption       = 140
inherit preconditions         = 0
shop methods                  = 17
eliminate identical variables = 57
strip domain of hybridity     = 1
flatten formula               = 62
============ preprocessing ============
total                                      = 5966
compile negative preconditions             = 59
compile unit methods                       = 0
split parameter                            = 55
expand choiceless abstract tasks           = 590
compile methods with identical tasks       = 27
removing unnecessary predicates            = 1016
lifted reachabiltiy analysis               = 67
grounded planning graph analysis           = 1620
grounded task decomposition graph analysis = 1872
grounding                                  = 613
create artificial top task                 = 12
============ search preparation ============
compute state invariants = 2217
============ sat ============
total                                        = 7103
generate formula                             = 5540
generate path decomposition tree             = 430
normalise path decomposition tree            = 106
sog optimisation                             = 170
translate path decomposition tree to clauses = 753
generate state formula                       = 5456
generate state invariant formula             = 645
transform to DIMACS                          = 539
SAT solver                                   = 760
SAT solver for K=0004                        = 760

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2341";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="802";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="470496888";"40 sat:20:state formula"="1121419";"40 sat:01:number of variables"="262744";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="279";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="3635";"30 problem:07:number of primitive shop actions"="932";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3143";"30 problem:08:number of primitive non-shop actions"="1409";"30 problem:02:number of predicates"="343";"40 sat:03:number of horn"="1170576";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="14";"40 sat:03:average size of clauses"="2.418839161651498";"40 sat:02:number of clauses"="1342926";"40 sat:50:number of state clauses"="1121419";"40 sat:03:number of assert"="156";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="279";"40 sat:50:number of decomposition clauses"="221507";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="621";"01 parsing:08:flatten formula"="62";"40 sat:41:SAT solver for K=0004"="760";"40 sat:00:total"="7103";"40 sat:16:generate state formula"="5456";"40 sat:20:transform to DIMACS"="539";"40 sat:11:generate path decomposition tree"="430";"02 preprocessing:07:compile methods with identical tasks"="27";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="1016";"01 parsing:03:closed world assumption"="140";"02 preprocessing:11:lifted reachabiltiy analysis"="67";"01 parsing:02:sort expansion"="232";"40 sat:12:normalise path decomposition tree"="106";"40 sat:40:SAT solver"="760";"01 parsing:00:total"="1130";"40 sat:10:generate formula"="5540";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="59";"00 total:00:total"="16817";"40 sat:13:sog optimisation"="170";"02 preprocessing:12:grounded planning graph analysis"="1620";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1872";"02 preprocessing:04:split parameter"="55";"01 parsing:05:shop methods"="17";"10 search preparation:02:compute state invariants"="2217";"01 parsing:06:eliminate identical variables"="57";"40 sat:15:translate path decomposition tree to clauses"="753";"02 preprocessing:05:expand choiceless abstract tasks"="590";"40 sat:17:generate state invariant formula"="645";"02 preprocessing:00:total"="5966";"02 preprocessing:99:create artificial top task"="12";"02 preprocessing:84:grounding"="613"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser4,ingredient4];grasp[left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1];clean-shot[shot15,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail5,ingredient4,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient3,dispenser1];grasp[left,shot15];clean-shot[shot15,ingredient3,left,right];fill-shot[shot15,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1];clean-shot[shot15,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[left,shaker1];shake[cocktail10,ingredient1,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail10,shot2,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail10,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient4,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser4,ingredient4];grasp[left,shot13];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,left,l0,l1];clean-shot[shot13,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,left,shot13];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail9,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient3,ingredient2,dispenser3];grasp[right,shot13];clean-shot[shot13,ingredient2,right,left];fill-shot[shot13,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,right,l0,l1];clean-shot[shot13,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient1,right,shot13];fill-shot[shot13,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[left,shaker1];shake[cocktail1,ingredient3,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot4,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient1,shot13];__method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient1,dispenser1];grasp[left,shot13];refill-shot[shot13,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,left,l0,l1];clean-shot[shot13,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[right,shaker1];shake[cocktail3,ingredient1,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail3,shot5,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail3,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient3,dispenser2];grasp[left,shot13];clean-shot[shot13,ingredient3,left,right];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1];clean-shot[shot13,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail6,ingredient2,ingredient3,shaker1,left,right];pour-shaker-to-shot[cocktail6,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail6,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot13];__method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient3,dispenser3];grasp[left,shot13];refill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1];clean-shot[shot13,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot13];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail8,ingredient3,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail8,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail8,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient2,dispenser4];grasp[right,shot13];clean-shot[shot13,ingredient2,right,left];fill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1];clean-shot[shot13,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient1,right,shot13];fill-shot[shot13,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot13,ingredient1,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[left,shaker1];shake[cocktail2,ingredient4,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail2,shot8,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail2,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient3,dispenser4];grasp[left,shot15];clean-shot[shot15,ingredient3,left,right];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1];clean-shot[shot15,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot15];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[left,shaker1];shake[cocktail11,ingredient4,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail11,shot9,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail11,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient2,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient2,ingredient1,dispenser2];grasp[left,shot13];clean-shot[shot13,ingredient1,left,right];fill-shot[shot13,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot13,ingredient2,shaker1,left,l0,l1];clean-shot[shot13,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient3,left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot13,ingredient3,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[right,shaker1];shake[cocktail7,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail7,shot10,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail7,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient2,dispenser1];grasp[right,shot15];clean-shot[shot15,ingredient2,right,left];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1];clean-shot[shot15,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient4,right,shot15];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail4,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail4,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail4,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient4,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient4,dispenser4];grasp[left,shot15];refill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1];clean-shot[shot15,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient2,left,shot15];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[right,shaker1];shake[cocktail11,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot12,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser4,ingredient4];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient4,ingredient3,dispenser4];grasp[right,shot13];clean-shot[shot13,ingredient3,right,left];fill-shot[shot13,ingredient4,right,left,dispenser4];leave[right,shot13];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient4,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient2,dispenser4];grasp[left,shot15];clean-shot[shot15,ingredient2,left,right];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,left,l0,l1];clean-shot[shot15,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot14];nop[];grasp[right,shaker1];shake[cocktail5,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail5,shot14,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail5,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient4 shot15 
2 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser4 ingredient4 
3 grasp left shot15 
4 fill-shot shot15 ingredient4 left right dispenser4 
5 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 
6 clean-shot shot15 ingredient4 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient3 left shot15 
8 fill-shot shot15 ingredient3 left right dispenser3 
9 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
10 leave left shot15 
11 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient4 ingredient3 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail5 ingredient4 ingredient3 shaker1 left right 
16 pour-shaker-to-shot cocktail5 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail5 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 left 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot15 
22 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient3 dispenser1 
23 grasp left shot15 
24 clean-shot shot15 ingredient3 left right 
25 fill-shot shot15 ingredient1 left right dispenser1 
26 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 
27 clean-shot shot15 ingredient1 left right 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient3 left shot15 
29 fill-shot shot15 ingredient3 left right dispenser3 
30 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
31 leave left shot15 
32 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient3 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp left shaker1 
36 shake cocktail10 ingredient1 ingredient3 shaker1 left right 
37 pour-shaker-to-shot cocktail10 shot2 left shaker1 l2 l1 
38 empty-shaker left shaker1 cocktail10 l1 l0 
39 clean-shaker left right shaker1 
40 leave left shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient4 shot13 
43 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser4 ingredient4 
44 grasp left shot13 
45 fill-shot shot13 ingredient4 left right dispenser4 
46 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 left l0 l1 
47 clean-shot shot13 ingredient4 left right 
48 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient2 left shot13 
49 fill-shot shot13 ingredient2 left right dispenser2 
50 pour-shot-to-used-shaker shot13 ingredient2 shaker1 left l1 l2 
51 leave left shot13 
52 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient4 ingredient2 
53 __method_precondition_m5_do_clean_shot_5_precondition shot3 
54 nop  
55 grasp right shaker1 
56 shake cocktail9 ingredient4 ingredient2 shaker1 right left 
57 pour-shaker-to-shot cocktail9 shot3 right shaker1 l2 l1 
58 empty-shaker right shaker1 cocktail9 l1 l0 
59 clean-shaker right left shaker1 
60 leave right shaker1 
61 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 right 
62 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient3 shot13 
63 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient3 ingredient2 dispenser3 
64 grasp right shot13 
65 clean-shot shot13 ingredient2 right left 
66 fill-shot shot13 ingredient3 right left dispenser3 
67 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 right l0 l1 
68 clean-shot shot13 ingredient3 right left 
69 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient1 right shot13 
70 fill-shot shot13 ingredient1 right left dispenser1 
71 pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 
72 leave right shot13 
73 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient3 ingredient1 
74 __method_precondition_m5_do_clean_shot_5_precondition shot4 
75 nop  
76 grasp left shaker1 
77 shake cocktail1 ingredient3 ingredient1 shaker1 left right 
78 pour-shaker-to-shot cocktail1 shot4 left shaker1 l2 l1 
79 empty-shaker left shaker1 cocktail1 l1 l0 
80 clean-shaker left right shaker1 
81 leave left shaker1 
82 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 left 
83 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient1 shot13 
84 __method_precondition_m7_do_fill_shot_7_precondition shot13 ingredient1 dispenser1 
85 grasp left shot13 
86 refill-shot shot13 ingredient1 left right dispenser1 
87 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 left l0 l1 
88 clean-shot shot13 ingredient1 left right 
89 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient3 left shot13 
90 fill-shot shot13 ingredient3 left right dispenser3 
91 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
92 leave left shot13 
93 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient1 ingredient3 
94 __method_precondition_m5_do_clean_shot_5_precondition shot5 
95 nop  
96 grasp right shaker1 
97 shake cocktail3 ingredient1 ingredient3 shaker1 right left 
98 pour-shaker-to-shot cocktail3 shot5 right shaker1 l2 l1 
99 empty-shaker right shaker1 cocktail3 l1 l0 
100 clean-shaker right left shaker1 
101 leave right shaker1 
102 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 left 
103 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient2 shot13 
104 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient2 ingredient3 dispenser2 
105 grasp left shot13 
106 clean-shot shot13 ingredient3 left right 
107 fill-shot shot13 ingredient2 left right dispenser2 
108 pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 
109 clean-shot shot13 ingredient2 left right 
110 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient3 left shot13 
111 fill-shot shot13 ingredient3 left right dispenser3 
112 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
113 leave left shot13 
114 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient2 ingredient3 
115 __method_precondition_m5_do_clean_shot_5_precondition shot6 
116 nop  
117 grasp left shaker1 
118 shake cocktail6 ingredient2 ingredient3 shaker1 left right 
119 pour-shaker-to-shot cocktail6 shot6 left shaker1 l2 l1 
120 empty-shaker left shaker1 cocktail6 l1 l0 
121 clean-shaker left right shaker1 
122 leave left shaker1 
123 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 left 
124 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot13 
125 __method_precondition_m7_do_fill_shot_7_precondition shot13 ingredient3 dispenser3 
126 grasp left shot13 
127 refill-shot shot13 ingredient3 left right dispenser3 
128 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 
129 clean-shot shot13 ingredient3 left right 
130 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient2 left shot13 
131 fill-shot shot13 ingredient2 left right dispenser2 
132 pour-shot-to-used-shaker shot13 ingredient2 shaker1 left l1 l2 
133 leave left shot13 
134 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient2 
135 __method_precondition_m5_do_clean_shot_5_precondition shot7 
136 nop  
137 grasp left shaker1 
138 shake cocktail8 ingredient3 ingredient2 shaker1 left right 
139 pour-shaker-to-shot cocktail8 shot7 left shaker1 l2 l1 
140 empty-shaker left shaker1 cocktail8 l1 l0 
141 clean-shaker left right shaker1 
142 leave left shaker1 
143 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
144 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot13 
145 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient2 dispenser4 
146 grasp right shot13 
147 clean-shot shot13 ingredient2 right left 
148 fill-shot shot13 ingredient4 right left dispenser4 
149 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 
150 clean-shot shot13 ingredient4 right left 
151 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient1 right shot13 
152 fill-shot shot13 ingredient1 right left dispenser1 
153 pour-shot-to-used-shaker shot13 ingredient1 shaker1 right l1 l2 
154 leave right shot13 
155 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient1 
156 __method_precondition_m5_do_clean_shot_5_precondition shot8 
157 nop  
158 grasp left shaker1 
159 shake cocktail2 ingredient4 ingredient1 shaker1 left right 
160 pour-shaker-to-shot cocktail2 shot8 left shaker1 l2 l1 
161 empty-shaker left shaker1 cocktail2 l1 l0 
162 clean-shaker left right shaker1 
163 leave left shaker1 
164 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 left 
165 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient4 shot15 
166 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient4 ingredient3 dispenser4 
167 grasp left shot15 
168 clean-shot shot15 ingredient3 left right 
169 fill-shot shot15 ingredient4 left right dispenser4 
170 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 
171 clean-shot shot15 ingredient4 left right 
172 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient2 left shot15 
173 fill-shot shot15 ingredient2 left right dispenser2 
174 pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 
175 leave left shot15 
176 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient4 ingredient2 
177 __method_precondition_m5_do_clean_shot_5_precondition shot9 
178 nop  
179 grasp left shaker1 
180 shake cocktail11 ingredient4 ingredient2 shaker1 left right 
181 pour-shaker-to-shot cocktail11 shot9 left shaker1 l2 l1 
182 empty-shaker left shaker1 cocktail11 l1 l0 
183 clean-shaker left right shaker1 
184 leave left shaker1 
185 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
186 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient2 shot13 
187 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient2 ingredient1 dispenser2 
188 grasp left shot13 
189 clean-shot shot13 ingredient1 left right 
190 fill-shot shot13 ingredient2 left right dispenser2 
191 pour-shot-to-clean-shaker shot13 ingredient2 shaker1 left l0 l1 
192 clean-shot shot13 ingredient2 left right 
193 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient3 left shot13 
194 fill-shot shot13 ingredient3 left right dispenser3 
195 pour-shot-to-used-shaker shot13 ingredient3 shaker1 left l1 l2 
196 leave left shot13 
197 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient2 ingredient3 
198 __method_precondition_m5_do_clean_shot_5_precondition shot10 
199 nop  
200 grasp right shaker1 
201 shake cocktail7 ingredient2 ingredient3 shaker1 right left 
202 pour-shaker-to-shot cocktail7 shot10 right shaker1 l2 l1 
203 empty-shaker right shaker1 cocktail7 l1 l0 
204 clean-shaker right left shaker1 
205 leave right shaker1 
206 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 right 
207 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient1 shot15 
208 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient2 dispenser1 
209 grasp right shot15 
210 clean-shot shot15 ingredient2 right left 
211 fill-shot shot15 ingredient1 right left dispenser1 
212 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 
213 clean-shot shot15 ingredient1 right left 
214 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient4 right shot15 
215 fill-shot shot15 ingredient4 right left dispenser4 
216 pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 
217 leave right shot15 
218 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient1 ingredient4 
219 __method_precondition_m5_do_clean_shot_5_precondition shot11 
220 nop  
221 grasp right shaker1 
222 shake cocktail4 ingredient1 ingredient4 shaker1 right left 
223 pour-shaker-to-shot cocktail4 shot11 right shaker1 l2 l1 
224 empty-shaker right shaker1 cocktail4 l1 l0 
225 clean-shaker right left shaker1 
226 leave right shaker1 
227 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 left 
228 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient4 shot15 
229 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient4 dispenser4 
230 grasp left shot15 
231 refill-shot shot15 ingredient4 left right dispenser4 
232 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 
233 clean-shot shot15 ingredient4 left right 
234 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient2 left shot15 
235 fill-shot shot15 ingredient2 left right dispenser2 
236 pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 
237 leave left shot15 
238 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient4 ingredient2 
239 __method_precondition_m5_do_clean_shot_5_precondition shot12 
240 nop  
241 grasp right shaker1 
242 shake cocktail11 ingredient4 ingredient2 shaker1 right left 
243 pour-shaker-to-shot cocktail11 shot12 right shaker1 l2 l1 
244 empty-shaker right shaker1 cocktail11 l1 l0 
245 clean-shaker right left shaker1 
246 leave right shaker1 
247 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser4 ingredient4 
248 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient4 ingredient3 dispenser4 
249 grasp right shot13 
250 clean-shot shot13 ingredient3 right left 
251 fill-shot shot13 ingredient4 right left dispenser4 
252 leave right shot13 
253 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot14 left 
254 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient4 shot15 
255 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient4 ingredient2 dispenser4 
256 grasp left shot15 
257 clean-shot shot15 ingredient2 left right 
258 fill-shot shot15 ingredient4 left right dispenser4 
259 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 left l0 l1 
260 clean-shot shot15 ingredient4 left right 
261 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient3 left shot15 
262 fill-shot shot15 ingredient3 left right dispenser3 
263 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
264 leave left shot15 
265 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient4 ingredient3 
266 __method_precondition_m5_do_clean_shot_5_precondition shot14 
267 nop  
268 grasp right shaker1 
269 shake cocktail5 ingredient4 ingredient3 shaker1 right left 
270 pour-shaker-to-shot cocktail5 shot14 right shaker1 l2 l1 
271 empty-shaker right shaker1 cocktail5 l1 l0 
272 clean-shaker right left shaker1 
273 leave right shaker1 
root 399
274 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 170
275 serve_shot shot11 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 218 371 221 222 223 224 225 226
276 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 212
277 do_clean_shot_m4_serve_shot_sip_2 shot9 right  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2> 177 178
278 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 89 291 314 92
279 do_fill_shot shot13 ingredient4 left  -> m8_do_fill_shot 43 44 45
280 get_second_ingredient cocktail9 left  -> m3_get_second_ingredient 48 329 353 51
281 do_fill_shot shot15 ingredient1 right  -> m9_do_fill_shot 208 209 210 211
282 do_cocktail_in_shot1 shot7 cocktail8  -> m0_do_cocktail_in_shot1 123 332 340 400
283 do_cocktail_in_shot1 shot11 cocktail4  -> m0_do_cocktail_in_shot1 206 390 368 275
284 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 7 306 292 10
285 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 110 351 395 113
286 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 165 323 274 405
287 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 left  -> _m2_get_first_ingredient_4 88
288 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 right  -> _m2_get_first_ingredient_4 150
289 do_cocktail_in_shot1 shot5 cocktail3  -> m0_do_cocktail_in_shot1 82 321 278 388
290 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 left  -> _m3_get_second_ingredient_2 131
291 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 90
292 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 9
293 do_fill_shot shot13 ingredient3 right  -> m9_do_fill_shot 63 64 65 66
294 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 left  -> _m2_get_first_ingredient_4 6
295 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 29
296 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 left  -> _m2_get_first_ingredient_4 233
297 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 30
298 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 71
299 do_cocktail_in_shot2 shot13 ingredient4  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient4];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 247 344 252
300 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 232
301 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 left  -> _m3_get_second_ingredient_2 173
302 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 103 367 308 386
303 do_clean_shot_m4_serve_shot_sip_2 shot5 left  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail1,left];m5_do_clean_shot;0;-1,-2> 94 95
304 do_cocktail_in_shot1 shot1 cocktail5  -> m0_do_cocktail_in_shot1 0 361 284 392
305 do_cocktail_in_shot1 shot12 cocktail11  -> m0_do_cocktail_in_shot1 227 387 364 385
306 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 8
307 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 149
308 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 108
309 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 53 54
310 serve_shot shot2 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 32 398 35 36 37 38 39 40
311 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 236
312 serve_shot shot8 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 155 370 158 159 160 161 162 163
313 do_fill_shot shot13 ingredient2 left  -> m9_do_fill_shot 187 188 189 190
314 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 91
315 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 263
316 do_cocktail_in_shot1 shot4 cocktail1  -> m0_do_cocktail_in_shot1 61 377 396 355
317 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 21 327 360 347
318 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 left  -> _m2_get_first_ingredient_4 260
319 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 191
320 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient2 left  -> _m2_get_first_ingredient_4 192
321 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 83 389 382 287
322 get_first_ingredient cocktail9 left  -> m2_get_first_ingredient 42 279 324 365
323 do_fill_shot shot15 ingredient4 left  -> m9_do_fill_shot 166 167 168 169
324 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 46
325 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 195
326 do_fill_shot shot13 ingredient4 right  -> m9_do_fill_shot 145 146 147 148
327 do_fill_shot shot15 ingredient1 left  -> m9_do_fill_shot 22 23 24 25
328 serve_shot shot9 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 176 277 179 180 181 182 183 184
329 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 left  -> _m3_get_second_ingredient_2 49
330 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 254 369 378 318
331 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 172 301 358 175
332 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 124 352 348 401
333 do_cocktail_in_shot1 shot8 cocktail2  -> m0_do_cocktail_in_shot1 143 373 363 312
334 do_clean_shot_m4_serve_shot_sip_2 shot14 left  -> <_m4_serve_shot_2;do_clean_shot[shot14,cocktail10,left];m5_do_clean_shot;0;-1,-2> 266 267
335 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 186 313 319 320
336 serve_shot shot14 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot14,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 265 334 268 269 270 271 272 273
337 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 115 116
338 serve_shot shot3 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 52 309 55 56 57 58 59 60
339 do_clean_shot_m4_serve_shot_sip_2 shot12 left  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2> 239 240
340 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 130 290 357 133
341 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 153
342 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 right  -> _m3_get_second_ingredient_2 215
343 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 216
344 do_fill_shot shot13 ingredient4 right  -> m9_do_fill_shot 248 249 250 251
345 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 194
346 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 left  -> _m3_get_second_ingredient_2 235
347 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 left  -> _m2_get_first_ingredient_4 27
348 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 128
349 serve_shot shot10 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 197 381 200 201 202 203 204 205
350 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 right  -> _m3_get_second_ingredient_2 152
351 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient3 left  -> _m3_get_second_ingredient_2 111
352 do_fill_shot shot13 ingredient3 left  -> m7_do_fill_shot 125 126 127
353 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 50
354 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 5
355 serve_shot shot4 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot4,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 73 379 76 77 78 79 80 81
356 serve_shot shot6 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 114 337 117 118 119 120 121 122
357 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 132
358 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 174
359 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 right  -> _m2_get_first_ingredient_4 68
360 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 26
361 get_first_ingredient cocktail5 left  -> m2_get_first_ingredient 1 394 354 294
362 do_cocktail_in_shot1 shot14 cocktail5  -> m0_do_cocktail_in_shot1 253 330 366 336
363 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 151 350 341 154
364 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 234 346 311 237
365 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 left  -> _m2_get_first_ingredient_4 47
366 get_second_ingredient cocktail5 left  -> m3_get_second_ingredient 261 372 315 264
367 do_fill_shot shot13 ingredient2 left  -> m9_do_fill_shot 104 105 106 107
368 get_second_ingredient cocktail4 right  -> m3_get_second_ingredient 214 342 343 217
369 do_fill_shot shot15 ingredient4 left  -> m9_do_fill_shot 255 256 257 258
370 do_clean_shot_m4_serve_shot_sip_2 shot8 right  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2> 156 157
371 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 219 220
372 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 262
373 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 144 326 307 288
374 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 28 295 297 31
375 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient1 right  -> _m3_get_second_ingredient_2 70
376 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 193 345 325 196
377 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 62 293 391 359
378 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 259
379 do_clean_shot_m4_serve_shot_sip_2 shot4 right  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,right];m5_do_clean_shot;0;-1,-2> 74 75
380 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
381 do_clean_shot_m4_serve_shot_sip_2 shot10 left  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2> 198 199
382 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 87
383 do_cocktail_in_shot1 shot2 cocktail10  -> m0_do_cocktail_in_shot1 20 317 374 310
384 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 135 136
385 serve_shot shot12 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 238 339 241 242 243 244 245 246
386 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient2 left  -> _m2_get_first_ingredient_4 109
387 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 228 402 300 296
388 serve_shot shot5 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot5,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 93 303 96 97 98 99 100 101
389 do_fill_shot shot13 ingredient1 left  -> m7_do_fill_shot 84 85 86
390 get_first_ingredient cocktail4 right  -> m2_get_first_ingredient 207 281 276 393
391 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 67
392 serve_shot shot1 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 380 14 15 16 17 18 19
393 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 right  -> _m2_get_first_ingredient_4 213
394 do_fill_shot shot15 ingredient4 left  -> m8_do_fill_shot 2 3 4
395 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 112
396 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 69 375 298 72
397 do_cocktail_in_shot1 shot6 cocktail6  -> m0_do_cocktail_in_shot1 102 302 285 356
398 do_clean_shot_m4_serve_shot_sip_2 shot2 right  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2> 33 34
399 __choicelessATCompilation__top_1  -> __top_1 304 383 403 316 289 397 282 333 404 406 283 305 299 362
400 serve_shot shot7 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 134 384 137 138 139 140 141 142
401 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 left  -> _m2_get_first_ingredient_4 129
402 do_fill_shot shot15 ingredient4 left  -> m7_do_fill_shot 229 230 231
403 do_cocktail_in_shot1 shot3 cocktail9  -> m0_do_cocktail_in_shot1 41 322 280 338
404 do_cocktail_in_shot1 shot9 cocktail11  -> m0_do_cocktail_in_shot1 164 286 331 328
405 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 left  -> _m2_get_first_ingredient_4 171
406 do_cocktail_in_shot1 shot10 cocktail7  -> m0_do_cocktail_in_shot1 185 335 376 349

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 18.562 MEMPEAK_KBS 677156.864
