PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p08.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p08.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p08.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 44
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Grounded planning graph ... done in 578ms.
	Number of Grounded Actions 3172
	Number of Grounded Literals 465
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Two Way TDG ... done.
	number of abstract tasks = 15
	number of tasks = 37
	number of decomposition methods = 18
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 22
	number of constants = 44
Grounding ... done.
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 465
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 450ms.
	Number of Grounded Actions 2827
	Number of Grounded Literals 435
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1292
	number of tasks = 4119
	number of decomposition methods = 5065
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4683
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4683
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4683
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 217ms.
	Number of Grounded Actions 2827
	Number of Grounded Literals 435
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4683
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4423
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4423
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4423
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4423
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 910
	number of tasks = 3737
	number of decomposition methods = 4423
	number of predicates = 435
	number of sorts = 0
	number of tasks in largest method = 16
	number of primitive SHOP tasks = 1114
	number of epsilon methods = 0
	number of primitive tasks = 2827
	number of constants = 0
Tasks 2827 - 12
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767702ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854767185
done
initial PDT has 291 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 291 leafs
SHOP LEAFS 97
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 283185
Size 283170 at 0/2827
Size 281375 at 500/2827
Size 281327 at 1000/2827
Size 281237 at 1500/2827
Size 238238 at 2000/2827
Size 237884 at 2500/2827
Size 237884
Size 235022 at 0/2827
Size 26380 at 500/2827
Size 26372 at 1000/2827
Size 17265 at 1500/2827
Size 15861 at 2000/2827
Size 6083 at 2500/2827
Size 6045
Size 6045 at 0/2827
Size 6045 at 500/2827
Size 6045 at 1000/2827
Size 5319 at 1500/2827
Size 5268 at 2000/2827
Size 4636 at 2500/2827
Size 4628
Size 4628 at 0/2827
Size 4580 at 500/2827
Size 4580 at 1000/2827
Size 4448 at 1500/2827
Size 4448 at 2000/2827
Size 4372 at 2500/2827
Size 4372
Size 4372 at 0/2827
Size 4369 at 500/2827
Size 4369 at 1000/2827
Size 4359 at 1500/2827
Size 4358 at 2000/2827
Size 4358 at 2500/2827
Size 4358
Size 4358 at 0/2827
Size 4358 at 500/2827
Size 4358 at 1000/2827
Size 4358 at 1500/2827
Size 4358 at 2000/2827
Size 4358 at 2500/2827
Size 4358
Invariant time: 3.414
Number of invariants: 4358
Invariant Clauses 1272536
NUMBER OF CLAUSES 1936024
NUMBER OF STATE CLAUSES 1626887
NUMBER OF DECOMPOSITION CLAUSES 309137
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 84.03% 15.97% 0.0% 
NUMBER OF PATHS 291
Starting cryptominisat5.5
Setting starttime of solver to 1604475262785
Command exited with non-zero status 10
1.34 0.07

Time command gave the following runtime for the solver: 1410
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^1_1,4294 4294 m0_do_cocktail_in_shot1
1 302 pathaction!1_1,2004
Consider method^3_0;1;1,881 881 m8_do_fill_shot
0;1;1 264 pathaction!3_0;1;1,3581
Consider method^3_3;3;1,521 521 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2>
3;3;1 395 pathaction!3_3;3;1,3600
Consider method^3_7;1;1,3479 3479 m7_do_fill_shot
7;1;1 281 pathaction!3_7;1;1,3557
Consider method^2_2;1,1069 1069 m2_get_first_ingredient
2;1 412 pathaction!2_2;1,2306
Consider method^3_1;1;3,283 283 _m2_get_first_ingredient_4
1;1;3 278 pathaction!3_1;1;3,1439
Consider method^2_3;2,2917 2917 m3_get_second_ingredient
3;2 31 pathaction!2_3;2,1996
Consider method^2_5;1,2400 2400 m2_get_first_ingredient
5;1 360 pathaction!2_5;1,2286
Consider method^3_4;2;2,1729 1729 _m3_get_second_ingredient_3
4;2;2 289 pathaction!3_4;2;2,3351
Consider method^3_2;1;2,1064 1064 _m2_get_first_ingredient_3
2;1;2 352 pathaction!3_2;1;2,1913
Consider method^2_2;3,461 461 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 411 pathaction!2_2;3,2081
Consider method^3_9;1;1,2177 2177 m9_do_fill_shot
9;1;1 238 pathaction!3_9;1;1,3479
Consider method^2_5;3,3988 3988 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 6 pathaction!2_5;3,2086
Consider method^3_11;1;1,3084 3084 m7_do_fill_shot
11;1;1 135 pathaction!3_11;1;1,3455
Consider method^3_4;3;1,161 161 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 400 pathaction!3_4;3;1,3589
Consider method^3_7;2;1,3782 3782 _m3_get_second_ingredient_2
7;2;1 37 pathaction!3_7;2;1,1213
Consider method^3_1;1;2,4 4 _m2_get_first_ingredient_3
1;1;2 56 pathaction!3_1;1;2,1925
Consider method^3_11;1;2,1046 1046 _m2_get_first_ingredient_3
11;1;2 375 pathaction!3_11;1;2,1861
Consider method^3_9;2;1,3519 3519 _m3_get_second_ingredient_2
9;2;1 416 pathaction!3_9;2;1,1195
Consider method^3_10;2;1,2524 2524 _m3_get_second_ingredient_2
10;2;1 408 pathaction!3_10;2;1,1220
Consider method^3_10;1;3,3162 3162 _m2_get_first_ingredient_4
10;1;3 324 pathaction!3_10;1;3,1420
Consider method^2_2;2,2740 2740 m3_get_second_ingredient
2;2 16 pathaction!2_2;2,1998
Consider method^3_9;1;3,4352 4352 _m2_get_first_ingredient_4
9;1;3 15 pathaction!3_9;1;3,1355
Consider method^3_9;3;1,2593 2593 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2>
9;3;1 361 pathaction!3_9;3;1,3610
Consider method^3_8;1;2,1159 1159 _m2_get_first_ingredient_3
8;1;2 139 pathaction!3_8;1;2,1938
Consider method^3_10;2;2,385 385 _m3_get_second_ingredient_3
10;2;2 132 pathaction!3_10;2;2,3393
Consider method^3_15;1;3,4000 4000 _m2_get_first_ingredient_4
15;1;3 175 pathaction!3_15;1;3,1331
Consider method^3_7;1;2,1159 1159 _m2_get_first_ingredient_3
7;1;2 348 pathaction!3_7;1;2,1938
Consider method^3_4;1;2,3840 3840 _m2_get_first_ingredient_3
4;1;2 75 pathaction!3_4;1;2,1919
Consider method^3_2;3;1,721 721 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2>
2;3;1 391 pathaction!3_2;3;1,3604
Consider method^1_11,1375 1375 m0_do_cocktail_in_shot1
11 242 pathaction!1_11,2009
Consider method^1_0,117 117 m0_do_cocktail_in_shot1
0 128 pathaction!1_0,2003
Consider method^3_15;3;1,2921 2921 <_m4_serve_shot_2;do_clean_shot[shot16,cocktail1,right];m5_do_clean_shot;0;-1,-2>
15;3;1 316 pathaction!3_15;3;1,3599
Consider method^2_6;1,4323 4323 m2_get_first_ingredient
6;1 286 pathaction!2_6;1,2287
Consider method^3_5;2;2,365 365 _m3_get_second_ingredient_3
5;2;2 279 pathaction!3_5;2;2,3436
Consider method^2_4;2,551 551 m3_get_second_ingredient
4;2 105 pathaction!2_4;2,1987
Consider method^2_1;2,3940 3940 m3_get_second_ingredient
1;2 245 pathaction!2_1;2,1997
Consider method^3_1;2;1,3276 3276 _m3_get_second_ingredient_2
1;2;1 262 pathaction!3_1;2;1,1236
Consider method^3_1;1;1,3735 3735 m8_do_fill_shot
1;1;1 150 pathaction!3_1;1;1,3563
Consider method^0_,4422 4422 __top_1
 221 pathaction!0_,3736
Consider method^3_15;1;2,1046 1046 _m2_get_first_ingredient_3
15;1;2 70 pathaction!3_15;1;2,1861
Consider method^3_0;2;2,2501 2501 _m3_get_second_ingredient_3
0;2;2 46 pathaction!3_0;2;2,3343
Consider method^2_5;2,639 639 m3_get_second_ingredient
5;2 138 pathaction!2_5;2,1978
Consider method^3_0;2;1,1590 1590 _m3_get_second_ingredient_2
0;2;1 201 pathaction!3_0;2;1,1281
Consider method^1_9,2852 2852 m0_do_cocktail_in_shot1
9 268 pathaction!1_9,2001
Consider method^3_5;1;1,1454 1454 m7_do_fill_shot
5;1;1 38 pathaction!3_5;1;1,3493
Consider method^3_8;2;2,963 963 _m3_get_second_ingredient_3
8;2;2 394 pathaction!3_8;2;2,3420
Consider method^2_8;2,2577 2577 m3_get_second_ingredient
8;2 259 pathaction!2_8;2,1984
Consider method^1_8,3127 3127 m0_do_cocktail_in_shot1
8 47 pathaction!1_8,2007
Consider method^3_1;3;1,443 443 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2>
1;3;1 78 pathaction!3_1;3;1,3605
Consider method^3_2;2;2,371 371 _m3_get_second_ingredient_3
2;2;2 52 pathaction!3_2;2;2,3408
Consider method^3_6;2;2,365 365 _m3_get_second_ingredient_3
6;2;2 318 pathaction!3_6;2;2,3436
Consider method^3_3;1;1,546 546 m9_do_fill_shot
3;1;1 358 pathaction!3_3;1;1,3538
Consider method^3_5;2;1,633 633 _m3_get_second_ingredient_2
5;2;1 419 pathaction!3_5;2;1,1190
Consider method^3_9;2;2,4413 4413 _m3_get_second_ingredient_3
9;2;2 205 pathaction!3_9;2;2,3419
Consider method^2_7;2,266 266 m3_get_second_ingredient
7;2 403 pathaction!2_7;2,1980
Consider method^1_10,1419 1419 m0_do_cocktail_in_shot1
10 67 pathaction!1_10,2008
Consider method^3_9;1;2,3840 3840 _m2_get_first_ingredient_3
9;1;2 310 pathaction!3_9;1;2,1919
Consider method^2_9;1,619 619 m2_get_first_ingredient
9;1 81 pathaction!2_9;1,2293
Consider method^3_6;1;3,3832 3832 _m2_get_first_ingredient_4
6;1;3 305 pathaction!3_6;1;3,1371
Consider method^3_1;2;2,3558 3558 _m3_get_second_ingredient_3
1;2;2 117 pathaction!3_1;2;2,3438
Consider method^3_5;1;2,2098 2098 _m2_get_first_ingredient_3
5;1;2 131 pathaction!3_5;1;2,1882
Consider method^1_12,4108 4108 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
12 292 pathaction!1_12,614
Consider method^1_4,1299 1299 m0_do_cocktail_in_shot1
4 399 pathaction!1_4,2010
Consider method^2_1;3,3328 3328 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 23 pathaction!2_1;3,2079
Consider method^1_14,720 720 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
14 243 pathaction!1_14,612
Consider method^2_12;1,2787 2787 m9_do_fill_shot
12;1 380 pathaction!2_12;1,3495
Consider method^3_6;1;1,2787 2787 m9_do_fill_shot
6;1;1 247 pathaction!3_6;1;1,3495
Consider method^3_10;1;1,2423 2423 m7_do_fill_shot
10;1;1 154 pathaction!3_10;1;1,3544
Consider method^2_10;2,421 421 m3_get_second_ingredient
10;2 180 pathaction!2_10;2,1989
Consider method^3_3;1;3,1532 1532 _m2_get_first_ingredient_4
3;1;3 390 pathaction!3_3;1;3,1414
Consider method^3_11;2;2,2501 2501 _m3_get_second_ingredient_3
11;2;2 190 pathaction!3_11;2;2,3343
Consider method^2_8;3,2629 2629 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 362 pathaction!2_8;3,2082
Consider method^3_15;1;1,4114 4114 m9_do_fill_shot
15;1;1 10 pathaction!3_15;1;1,3455
Consider method^2_4;1,1595 1595 m2_get_first_ingredient
4;1 146 pathaction!2_4;1,2295
Consider method^3_8;3;1,3679 3679 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2>
8;3;1 407 pathaction!3_8;3;1,3595
Consider method^3_8;1;3,2741 2741 _m2_get_first_ingredient_4
8;1;3 34 pathaction!3_8;1;3,1433
Consider method^2_9;2,3557 3557 m3_get_second_ingredient
9;2 374 pathaction!2_9;2,1985
Consider method^3_7;2;2,2517 2517 _m3_get_second_ingredient_3
7;2;2 7 pathaction!3_7;2;2,3403
Consider method^3_2;1;1,3298 3298 m8_do_fill_shot
2;1;1 123 pathaction!3_2;1;1,3459
Consider method^3_15;2;1,3886 3886 _m3_get_second_ingredient_2
15;2;1 325 pathaction!3_15;2;1,1276
Consider method^2_15;2,2222 2222 m3_get_second_ingredient
15;2 184 pathaction!2_15;2,1980
Consider method^1_15,2949 2949 m0_do_cocktail_in_shot1
15 251 pathaction!1_15,2005
Consider method^1_13,4392 4392 <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2>
13 327 pathaction!1_13,613
Consider method^2_11;3,1541 1541 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 276 pathaction!2_11;3,2084
Consider method^2_10;1,3210 3210 m2_get_first_ingredient
10;1 239 pathaction!2_10;1,2297
Consider method^2_15;1,851 851 m2_get_first_ingredient
15;1 249 pathaction!2_15;1,2288
Consider method^3_11;3;1,777 777 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2>
11;3;1 76 pathaction!3_11;3;1,3588
Consider method^2_11;2,2401 2401 m3_get_second_ingredient
11;2 340 pathaction!2_11;2,1984
Consider method^3_15;2;2,2968 2968 _m3_get_second_ingredient_3
15;2;2 334 pathaction!3_15;2;2,3314
Consider method^3_3;1;2,3582 3582 _m2_get_first_ingredient_3
3;1;2 309 pathaction!3_3;1;2,1841
Consider method^2_7;1,1977 1977 m2_get_first_ingredient
7;1 33 pathaction!2_7;1,2288
Consider method^2_0;3,3288 3288 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 153 pathaction!2_0;3,2078
Consider method^2_3;3,3689 3689 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 74 pathaction!2_3;3,2075
Consider method^3_5;3;1,600 600 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 280 pathaction!3_5;3;1,3609
Consider method^2_1;1,3818 3818 m2_get_first_ingredient
1;1 137 pathaction!2_1;1,2305
Consider method^2_0;1,2912 2912 m2_get_first_ingredient
0;1 378 pathaction!2_0;1,2298
Consider method^2_9;3,3705 3705 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 32 pathaction!2_9;3,2076
Consider method^3_7;1;3,2741 2741 _m2_get_first_ingredient_4
7;1;3 104 pathaction!3_7;1;3,1433
Consider method^2_8;1,1531 1531 m2_get_first_ingredient
8;1 336 pathaction!2_8;1,2292
Consider method^2_3;1,1993 1993 m2_get_first_ingredient
3;1 18 pathaction!2_3;1,2304
Consider method^3_4;1;1,3308 3308 m8_do_fill_shot
4;1;1 313 pathaction!3_4;1;1,3479
Consider method^3_6;3;1,2342 2342 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 194 pathaction!3_6;3;1,3598
Consider method^3_0;1;3,44 44 _m2_get_first_ingredient_4
0;1;3 84 pathaction!3_0;1;3,1457
Consider method^2_4;3,3172 3172 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 339 pathaction!2_4;3,2085
Consider method^2_0;2,3937 3937 m3_get_second_ingredient
0;2 110 pathaction!2_0;2,1990
Consider method^1_7,2777 2777 m0_do_cocktail_in_shot1
7 82 pathaction!1_7,2002
Consider method^3_2;1;3,1917 1917 _m2_get_first_ingredient_4
2;1;3 9 pathaction!3_2;1;3,1335
Consider method^2_6;2,3322 3322 m3_get_second_ingredient
6;2 200 pathaction!2_6;2,1979
Consider method^3_8;2;1,4383 4383 _m3_get_second_ingredient_2
8;2;1 44 pathaction!3_8;2;1,1237
Consider method^3_4;2;1,4307 4307 _m3_get_second_ingredient_2
4;2;1 51 pathaction!3_4;2;1,1252
Consider method^1_3,2758 2758 m0_do_cocktail_in_shot1
3 149 pathaction!1_3,2000
Consider method^3_3;2;1,2073 2073 _m3_get_second_ingredient_2
3;2;1 216 pathaction!3_3;2;1,1191
Consider method^3_0;3;1,2135 2135 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2>
0;3;1 211 pathaction!3_0;3;1,3590
Consider method^3_0;1;2,2207 2207 _m2_get_first_ingredient_3
0;1;2 25 pathaction!3_0;1;2,1859
Consider method^1_6,568 568 m0_do_cocktail_in_shot1
6 197 pathaction!1_6,1999
Consider method^2_11;1,289 289 m2_get_first_ingredient
11;1 252 pathaction!2_11;1,2292
Consider method^2_14;1,3876 3876 m9_do_fill_shot
14;1 213 pathaction!2_14;1,3584
Consider method^2_6;3,1227 1227 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 219 pathaction!2_6;3,2074
Consider method^2_10;3,4022 4022 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 241 pathaction!2_10;3,2083
Consider method^3_4;1;3,4352 4352 _m2_get_first_ingredient_4
4;1;3 232 pathaction!3_4;1;3,1355
Consider method^2_13;1,1687 1687 m9_do_fill_shot
13;1 196 pathaction!2_13;1,3503
Consider method^3_10;3;1,752 752 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 58 pathaction!3_10;3;1,3607
Consider method^2_15;3,1712 1712 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot16,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
15;3 418 pathaction!2_15;3,2080
Consider method^1_2,4100 4100 m0_do_cocktail_in_shot1
2 66 pathaction!1_2,2006
Consider method^3_3;2;2,3875 3875 _m3_get_second_ingredient_3
3;2;2 164 pathaction!3_3;2;2,3331
Consider method^3_8;1;1,296 296 m9_do_fill_shot
8;1;1 126 pathaction!3_8;1;1,3557
Consider method^3_6;2;1,633 633 _m3_get_second_ingredient_2
6;2;1 43 pathaction!3_6;2;1,1190
Consider method^2_7;3,4205 4205 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 181 pathaction!2_7;3,2077
Consider method^1_5,885 885 m0_do_cocktail_in_shot1
5 207 pathaction!1_5,2011
Consider method^3_7;3;1,3498 3498 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2>
7;3;1 173 pathaction!3_7;3;1,3593
Consider method^3_10;1;2,3605 3605 _m2_get_first_ingredient_3
10;1;2 381 pathaction!3_10;1;2,1976
Consider method^3_2;2;1,1763 1763 _m3_get_second_ingredient_2
2;2;1 220 pathaction!3_2;2;1,1208
Consider method^3_6;1;2,813 813 _m2_get_first_ingredient_3
6;1;2 326 pathaction!3_6;1;2,1896
Consider method^3_11;2;1,1590 1590 _m3_get_second_ingredient_2
11;2;1 109 pathaction!3_11;2;1,1281
Consider method^3_5;1;3,1607 1607 _m2_get_first_ingredient_4
5;1;3 288 pathaction!3_5;1;3,1369
Consider method^3_11;1;3,4000 4000 _m2_get_first_ingredient_4
11;1;3 185 pathaction!3_11;1;3,1331


CHECKING primitive solution of length 283 ...
true 127 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left;]
true 382 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot17;]
true 312 __method_precondition_m8_do_fill_shot_8_precondition[shot17,dispenser1,ingredient1;]
true 388 grasp[left,shot17;]
true 272 fill-shot[shot17,ingredient1,left,right,dispenser1;]
true 225 pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,left,l0,l1;]
true 136 clean-shot[shot17,ingredient1,left,right;]
true 314 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot17;]
true 73 fill-shot[shot17,ingredient3,left,right,dispenser3;]
true 19 pour-shot-to-used-shaker[shot17,ingredient3,shaker1,left,l1,l2;]
true 94 leave[left,shot17;]
true 29 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient3;]
true 115 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 372 nop[;]
true 116 grasp[right,shaker1;]
true 208 shake[cocktail9,ingredient1,ingredient3,shaker1,right,left;]
true 274 pour-shaker-to-shot[cocktail9,shot1,right,shaker1,l2,l1;]
true 1 empty-shaker[right,shaker1,cocktail9,l1,l0;]
true 389 clean-shaker[right,left,shaker1;]
true 148 leave[right,shaker1;]
true 285 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 282 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot15;]
true 87 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser1,ingredient1;]
true 5 grasp[right,shot15;]
true 212 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 89 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1;]
true 250 clean-shot[shot15,ingredient1,right,left;]
true 98 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,right,shot15;]
true 414 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 296 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,right,l1,l2;]
true 258 leave[right,shot15;]
true 99 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient2;]
true 359 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 63 nop[;]
true 27 grasp[left,shaker1;]
true 176 shake[cocktail7,ingredient1,ingredient2,shaker1,left,right;]
true 350 pour-shaker-to-shot[cocktail7,shot2,left,shaker1,l2,l1;]
true 53 empty-shaker[left,shaker1,cocktail7,l1,l0;]
true 257 clean-shaker[left,right,shaker1;]
true 130 leave[left,shaker1;]
true 172 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left;]
true 402 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot13;]
true 170 __method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3;]
true 410 grasp[left,shot13;]
true 168 fill-shot[shot13,ingredient3,left,right,dispenser3;]
true 61 pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1;]
true 398 clean-shot[shot13,ingredient3,left,right;]
true 307 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,left,shot13;]
true 344 fill-shot[shot13,ingredient4,left,right,dispenser4;]
true 283 pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2;]
true 265 leave[left,shot13;]
true 376 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4;]
true 266 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 199 nop[;]
true 17 grasp[left,shaker1;]
true 187 shake[cocktail11,ingredient3,ingredient4,shaker1,left,right;]
true 263 pour-shaker-to-shot[cocktail11,shot3,left,shaker1,l2,l1;]
true 69 empty-shaker[left,shaker1,cocktail11,l1,l0;]
true 210 clean-shaker[left,right,shaker1;]
true 165 leave[left,shaker1;]
true 121 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 171 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot17;]
true 129 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient4,ingredient3,dispenser4;]
true 64 grasp[left,shot17;]
true 125 clean-shot[shot17,ingredient3,left,right;]
true 30 fill-shot[shot17,ingredient4,left,right,dispenser4;]
true 122 pour-shot-to-clean-shaker[shot17,ingredient4,shaker1,left,l0,l1;]
true 88 clean-shot[shot17,ingredient4,left,right;]
true 28 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot17;]
true 320 fill-shot[shot17,ingredient2,left,right,dispenser2;]
true 377 pour-shot-to-used-shaker[shot17,ingredient2,shaker1,left,l1,l2;]
true 233 leave[left,shot17;]
true 392 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient2;]
true 41 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 42 nop[;]
true 341 grasp[right,shaker1;]
true 363 shake[cocktail8,ingredient4,ingredient2,shaker1,right,left;]
true 91 pour-shaker-to-shot[cocktail8,shot4,right,shaker1,l2,l1;]
true 291 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 93 clean-shaker[right,left,shaker1;]
true 101 leave[right,shaker1;]
true 267 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 60 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot14;]
true 163 __method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser3,ingredient3;]
true 405 grasp[right,shot14;]
true 144 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 234 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1;]
true 356 clean-shot[shot14,ingredient3,right,left;]
true 342 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient5,right,shot14;]
true 415 fill-shot[shot14,ingredient5,right,left,dispenser5;]
true 142 pour-shot-to-used-shaker[shot14,ingredient5,shaker1,right,l1,l2;]
true 246 leave[right,shot14;]
true 294 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient5;]
true 11 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 134 nop[;]
true 111 grasp[left,shaker1;]
true 214 shake[cocktail2,ingredient3,ingredient5,shaker1,left,right;]
true 248 pour-shaker-to-shot[cocktail2,shot5,left,shaker1,l2,l1;]
true 235 empty-shaker[left,shaker1,cocktail2,l1,l0;]
true 21 clean-shaker[left,right,shaker1;]
true 162 leave[left,shaker1;]
true 65 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 329 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient4,shot13;]
true 236 __method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient4,dispenser4;]
true 14 grasp[right,shot13;]
true 92 refill-shot[shot13,ingredient4,right,left,dispenser4;]
true 370 pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1;]
true 230 clean-shot[shot13,ingredient4,right,left;]
true 338 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,right,shot13;]
true 113 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 68 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2;]
true 108 leave[right,shot13;]
true 337 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient4,ingredient2;]
true 322 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 409 nop[;]
true 215 grasp[left,shaker1;]
true 231 shake[cocktail1,ingredient4,ingredient2,shaker1,left,right;]
true 178 pour-shaker-to-shot[cocktail1,shot6,left,shaker1,l2,l1;]
true 145 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 355 clean-shaker[left,right,shaker1;]
true 0 leave[left,shaker1;]
true 290 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 192 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot13;]
true 364 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1;]
true 120 grasp[right,shot13;]
true 253 clean-shot[shot13,ingredient2,right,left;]
true 330 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 404 pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1;]
true 357 clean-shot[shot13,ingredient1,right,left;]
true 346 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot13;]
true 328 fill-shot[shot13,ingredient2,right,left,dispenser2;]
true 351 pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2;]
true 319 leave[right,shot13;]
true 40 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient2;]
true 401 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 71 nop[;]
true 177 grasp[left,shaker1;]
true 347 shake[cocktail5,ingredient1,ingredient2,shaker1,left,right;]
true 298 pour-shaker-to-shot[cocktail5,shot7,left,shaker1,l2,l1;]
true 383 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 345 clean-shaker[left,right,shaker1;]
true 256 leave[left,shaker1;]
true 386 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left;]
true 20 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot15;]
true 260 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient2,dispenser2;]
true 240 grasp[left,shot15;]
true 26 refill-shot[shot15,ingredient2,left,right,dispenser2;]
true 198 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1;]
true 301 clean-shot[shot15,ingredient2,left,right;]
true 229 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot15;]
true 189 fill-shot[shot15,ingredient4,left,right,dispenser4;]
true 237 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2;]
true 387 leave[left,shot15;]
true 332 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4;]
true 413 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 367 nop[;]
true 85 grasp[left,shaker1;]
true 331 shake[cocktail3,ingredient2,ingredient4,shaker1,left,right;]
true 270 pour-shaker-to-shot[cocktail3,shot8,left,shaker1,l2,l1;]
true 261 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 277 clean-shaker[left,right,shaker1;]
true 49 leave[left,shaker1;]
true 182 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left;]
true 96 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot15;]
true 54 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient4,dispenser2;]
true 311 grasp[left,shot15;]
true 57 clean-shot[shot15,ingredient4,left,right;]
true 317 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 224 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1;]
true 112 clean-shot[shot15,ingredient2,left,right;]
true 384 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot15;]
true 143 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 228 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2;]
true 206 leave[left,shot15;]
true 8 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3;]
true 271 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 107 nop[;]
true 114 grasp[right,shaker1;]
true 118 shake[cocktail10,ingredient2,ingredient3,shaker1,right,left;]
true 217 pour-shaker-to-shot[cocktail10,shot9,right,shaker1,l2,l1;]
true 158 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 36 clean-shaker[right,left,shaker1;]
true 343 leave[right,shaker1;]
true 222 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right;]
true 203 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot14;]
true 119 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient5,dispenser3;]
true 244 grasp[right,shot14;]
true 90 clean-shot[shot14,ingredient5,right,left;]
true 24 fill-shot[shot14,ingredient3,right,left,dispenser3;]
true 106 pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1;]
true 72 clean-shot[shot14,ingredient3,right,left;]
true 397 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot14;]
true 287 fill-shot[shot14,ingredient2,right,left,dispenser2;]
true 4 pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2;]
true 103 leave[right,shot14;]
true 396 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient2;]
true 169 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 273 nop[;]
true 371 grasp[left,shaker1;]
true 353 shake[cocktail4,ingredient3,ingredient2,shaker1,left,right;]
true 254 pour-shaker-to-shot[cocktail4,shot10,left,shaker1,l2,l1;]
true 284 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 12 clean-shaker[left,right,shaker1;]
true 174 leave[left,shaker1;]
true 295 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left;]
true 297 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot14;]
true 141 __method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient2,dispenser2;]
true 365 grasp[left,shot14;]
true 393 refill-shot[shot14,ingredient2,left,right,dispenser2;]
true 62 pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1;]
true 306 clean-shot[shot14,ingredient2,left,right;]
true 417 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,left,shot14;]
true 140 fill-shot[shot14,ingredient3,left,right,dispenser3;]
true 167 pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2;]
true 379 leave[left,shot14;]
true 156 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3;]
true 303 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 369 nop[;]
true 368 grasp[right,shaker1;]
true 373 shake[cocktail6,ingredient2,ingredient3,shaker1,right,left;]
true 77 pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1;]
true 293 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 35 clean-shaker[right,left,shaker1;]
true 161 leave[right,shaker1;]
true 97 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left;]
true 45 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot17;]
true 204 __method_precondition_m7_do_fill_shot_7_precondition[shot17,ingredient2,dispenser2;]
true 335 grasp[left,shot17;]
true 151 refill-shot[shot17,ingredient2,left,right,dispenser2;]
true 227 pour-shot-to-clean-shaker[shot17,ingredient2,shaker1,left,l0,l1;]
true 124 clean-shot[shot17,ingredient2,left,right;]
true 315 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot17;]
true 147 fill-shot[shot17,ingredient3,left,right,dispenser3;]
true 152 pour-shot-to-used-shaker[shot17,ingredient3,shaker1,left,l1,l2;]
true 102 leave[left,shot17;]
true 406 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3;]
true 160 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 3 nop[;]
true 55 grasp[right,shaker1;]
true 183 shake[cocktail10,ingredient2,ingredient3,shaker1,right,left;]
true 226 pour-shaker-to-shot[cocktail10,shot12,right,shaker1,l2,l1;]
true 100 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 155 clean-shaker[right,left,shaker1;]
true 349 leave[right,shaker1;]
true 304 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 59 __method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1;]
true 157 grasp[right,shot13;]
true 269 clean-shot[shot13,ingredient2,right,left;]
true 195 fill-shot[shot13,ingredient1,right,left,dispenser1;]
true 323 leave[right,shot13;]
true 186 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 48 __method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient1,ingredient3,dispenser1;]
true 308 grasp[left,shot14;]
true 366 clean-shot[shot14,ingredient3,left,right;]
true 191 fill-shot[shot14,ingredient1,left,right,dispenser1;]
true 13 leave[left,shot14;]
true 179 __method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1;]
true 300 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient3,dispenser1;]
true 275 grasp[left,shot15;]
true 2 clean-shot[shot15,ingredient3,left,right;]
true 218 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 299 leave[left,shot15;]
true 79 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot16,left;]
true 159 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot17;]
true 95 __method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient2,ingredient3,dispenser2;]
true 223 grasp[left,shot17;]
true 22 clean-shot[shot17,ingredient3,left,right;]
true 80 fill-shot[shot17,ingredient2,left,right,dispenser2;]
true 385 pour-shot-to-clean-shaker[shot17,ingredient2,shaker1,left,l0,l1;]
true 166 clean-shot[shot17,ingredient2,left,right;]
true 39 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot17;]
true 83 fill-shot[shot17,ingredient4,left,right,dispenser4;]
true 333 pour-shot-to-used-shaker[shot17,ingredient4,shaker1,left,l1,l2;]
true 193 leave[left,shot17;]
true 209 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4;]
true 321 __method_precondition_m5_do_clean_shot_5_precondition[shot16;]
true 255 nop[;]
true 50 grasp[left,shaker1;]
true 133 shake[cocktail3,ingredient2,ingredient4,shaker1,left,right;]
true 354 pour-shaker-to-shot[cocktail3,shot16,left,shaker1,l2,l1;]
true 202 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 188 clean-shaker[left,right,shaker1;]
true 86 leave[left,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 579143904
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 435
number of actions                    = 3737
number of abstract actions           = 910
number of primitive actions          = 2827
number of methods                    = 4423
number of primitive shop actions     = 1114
number of primitive non-shop actions = 1713
size of largest method               = 16
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 340214
number of clauses               = 1936024
average size of clauses         = 2.4066767767341726
number of assert                = 193
number of horn                  = 1691790
K offset                        = 0
K chosen value                  = 4
state formula                   = 1626887
method children clauses         = 0
number of paths                 = 291
maximum plan length             = 291
number of decomposition clauses = 309137
number of ordering clauses      = 0
number of state clauses         = 1626887
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 21146
============ parsing ============
total                         = 1152
file parser                   = 599
sort expansion                = 272
closed world assumption       = 156
inherit preconditions         = 0
shop methods                  = 6
eliminate identical variables = 62
strip domain of hybridity     = 1
flatten formula               = 54
============ preprocessing ============
total                                      = 6326
compile negative preconditions             = 61
compile unit methods                       = 0
split parameter                            = 60
expand choiceless abstract tasks           = 595
compile methods with identical tasks       = 35
removing unnecessary predicates            = 985
lifted reachabiltiy analysis               = 86
grounded planning graph analysis           = 1773
grounded task decomposition graph analysis = 1969
grounding                                  = 705
create artificial top task                 = 6
============ search preparation ============
compute state invariants = 3893
============ sat ============
total                                        = 10572
generate formula                             = 7740
generate path decomposition tree             = 451
normalise path decomposition tree            = 88
sog optimisation                             = 108
translate path decomposition tree to clauses = 991
generate state formula                       = 7625
generate state invariant formula             = 815
transform to DIMACS                          = 1129
SAT solver                                   = 1410
SAT solver for K=0004                        = 1410

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2827";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="910";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="579143904";"40 sat:20:state formula"="1626887";"40 sat:01:number of variables"="340214";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="291";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="4423";"30 problem:07:number of primitive shop actions"="1114";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3737";"30 problem:08:number of primitive non-shop actions"="1713";"30 problem:02:number of predicates"="435";"40 sat:03:number of horn"="1691790";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="16";"40 sat:03:average size of clauses"="2.4066767767341726";"40 sat:02:number of clauses"="1936024";"40 sat:50:number of state clauses"="1626887";"40 sat:03:number of assert"="193";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="291";"40 sat:50:number of decomposition clauses"="309137";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="599";"01 parsing:08:flatten formula"="54";"40 sat:41:SAT solver for K=0004"="1410";"40 sat:00:total"="10572";"40 sat:16:generate state formula"="7625";"40 sat:20:transform to DIMACS"="1129";"40 sat:11:generate path decomposition tree"="451";"02 preprocessing:07:compile methods with identical tasks"="35";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="985";"01 parsing:03:closed world assumption"="156";"02 preprocessing:11:lifted reachabiltiy analysis"="86";"01 parsing:02:sort expansion"="272";"40 sat:12:normalise path decomposition tree"="88";"40 sat:40:SAT solver"="1410";"01 parsing:00:total"="1152";"40 sat:10:generate formula"="7740";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="61";"00 total:00:total"="21146";"40 sat:13:sog optimisation"="108";"02 preprocessing:12:grounded planning graph analysis"="1773";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="1969";"02 preprocessing:04:split parameter"="60";"01 parsing:05:shop methods"="6";"10 search preparation:02:compute state invariants"="3893";"01 parsing:06:eliminate identical variables"="62";"40 sat:15:translate path decomposition tree to clauses"="991";"02 preprocessing:05:expand choiceless abstract tasks"="595";"40 sat:17:generate state invariant formula"="815";"02 preprocessing:00:total"="6326";"02 preprocessing:99:create artificial top task"="6";"02 preprocessing:84:grounding"="705"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient1,shot17];__method_precondition_m8_do_fill_shot_8_precondition[shot17,dispenser1,ingredient1];grasp[left,shot17];fill-shot[shot17,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot17,ingredient1,shaker1,left,l0,l1];clean-shot[shot17,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient3,left,shot17];fill-shot[shot17,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot17,ingredient3,shaker1,left,l1,l2];leave[left,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient1,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[right,shaker1];shake[cocktail9,ingredient1,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail9,shot1,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail9,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser1,ingredient1];grasp[right,shot15];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1];clean-shot[shot15,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,right,shot15];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[left,shaker1];shake[cocktail7,ingredient1,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail7,shot2,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail7,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient3,shot13];__method_precondition_m8_do_fill_shot_8_precondition[shot13,dispenser3,ingredient3];grasp[left,shot13];fill-shot[shot13,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot13,ingredient3,shaker1,left,l0,l1];clean-shot[shot13,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient4,left,shot13];fill-shot[shot13,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot13,ingredient4,shaker1,left,l1,l2];leave[left,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient3,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[left,shaker1];shake[cocktail11,ingredient3,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail11,shot3,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail11,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient4,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient4,ingredient3,dispenser4];grasp[left,shot17];clean-shot[shot17,ingredient3,left,right];fill-shot[shot17,ingredient4,left,right,dispenser4];pour-shot-to-clean-shaker[shot17,ingredient4,shaker1,left,l0,l1];clean-shot[shot17,ingredient4,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot17];fill-shot[shot17,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot17,ingredient2,shaker1,left,l1,l2];leave[left,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[right,shaker1];shake[cocktail8,ingredient4,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot4,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient3,shot14];__method_precondition_m8_do_fill_shot_8_precondition[shot14,dispenser3,ingredient3];grasp[right,shot14];fill-shot[shot14,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1];clean-shot[shot14,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient5,right,shot14];fill-shot[shot14,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot14,ingredient5,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient3,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail2,ingredient3,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail2,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail2,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient4,shot13];__method_precondition_m7_do_fill_shot_7_precondition[shot13,ingredient4,dispenser4];grasp[right,shot13];refill-shot[shot13,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot13,ingredient4,shaker1,right,l0,l1];clean-shot[shot13,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient2,right,shot13];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient4,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail1,ingredient4,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient1,shot13];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1];grasp[right,shot13];clean-shot[shot13,ingredient2,right,left];fill-shot[shot13,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot13,ingredient1,shaker1,right,l0,l1];clean-shot[shot13,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient2,right,shot13];fill-shot[shot13,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot13,ingredient2,shaker1,right,l1,l2];leave[right,shot13];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail5,ingredient1,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient2,dispenser2];grasp[left,shot15];refill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1];clean-shot[shot15,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot15];fill-shot[shot15,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[left,shaker1];shake[cocktail3,ingredient2,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot8,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient4,dispenser2];grasp[left,shot15];clean-shot[shot15,ingredient4,left,right];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,left,l0,l1];clean-shot[shot15,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot15];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[right,shaker1];shake[cocktail10,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot9,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient3,shot14];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient3,ingredient5,dispenser3];grasp[right,shot14];clean-shot[shot14,ingredient5,right,left];fill-shot[shot14,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot14,ingredient3,shaker1,right,l0,l1];clean-shot[shot14,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient2,right,shot14];fill-shot[shot14,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot14,ingredient2,shaker1,right,l1,l2];leave[right,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[left,shaker1];shake[cocktail4,ingredient3,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail4,shot10,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail4,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient2,shot14];__method_precondition_m7_do_fill_shot_7_precondition[shot14,ingredient2,dispenser2];grasp[left,shot14];refill-shot[shot14,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot14,ingredient2,shaker1,left,l0,l1];clean-shot[shot14,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient3,left,shot14];fill-shot[shot14,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot14,ingredient3,shaker1,left,l1,l2];leave[left,shot14];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail6,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient2,shot17];__method_precondition_m7_do_fill_shot_7_precondition[shot17,ingredient2,dispenser2];grasp[left,shot17];refill-shot[shot17,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot17,ingredient2,shaker1,left,l0,l1];clean-shot[shot17,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient3,left,shot17];fill-shot[shot17,ingredient3,left,right,dispenser3];pour-shot-to-used-shaker[shot17,ingredient3,shaker1,left,l1,l2];leave[left,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[right,shaker1];shake[cocktail10,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot12,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1];__method_precondition_m9_do_fill_shot_9_precondition[shot13,ingredient1,ingredient2,dispenser1];grasp[right,shot13];clean-shot[shot13,ingredient2,right,left];fill-shot[shot13,ingredient1,right,left,dispenser1];leave[right,shot13];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1];__method_precondition_m9_do_fill_shot_9_precondition[shot14,ingredient1,ingredient3,dispenser1];grasp[left,shot14];clean-shot[shot14,ingredient3,left,right];fill-shot[shot14,ingredient1,left,right,dispenser1];leave[left,shot14];__method_precondition_m1_do_cocktail_in_shot2_1_precondition[dispenser1,ingredient1];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient3,dispenser1];grasp[left,shot15];clean-shot[shot15,ingredient3,left,right];fill-shot[shot15,ingredient1,left,right,dispenser1];leave[left,shot15];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot16,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient2,shot17];__method_precondition_m9_do_fill_shot_9_precondition[shot17,ingredient2,ingredient3,dispenser2];grasp[left,shot17];clean-shot[shot17,ingredient3,left,right];fill-shot[shot17,ingredient2,left,right,dispenser2];pour-shot-to-clean-shaker[shot17,ingredient2,shaker1,left,l0,l1];clean-shot[shot17,ingredient2,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,left,shot17];fill-shot[shot17,ingredient4,left,right,dispenser4];pour-shot-to-used-shaker[shot17,ingredient4,shaker1,left,l1,l2];leave[left,shot17];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient2,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot16];nop[];grasp[left,shaker1];shake[cocktail3,ingredient2,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot16,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 left 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient1 shot17 
2 __method_precondition_m8_do_fill_shot_8_precondition shot17 dispenser1 ingredient1 
3 grasp left shot17 
4 fill-shot shot17 ingredient1 left right dispenser1 
5 pour-shot-to-clean-shaker shot17 ingredient1 shaker1 left l0 l1 
6 clean-shot shot17 ingredient1 left right 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient3 left shot17 
8 fill-shot shot17 ingredient3 left right dispenser3 
9 pour-shot-to-used-shaker shot17 ingredient3 shaker1 left l1 l2 
10 leave left shot17 
11 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient1 ingredient3 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp right shaker1 
15 shake cocktail9 ingredient1 ingredient3 shaker1 right left 
16 pour-shaker-to-shot cocktail9 shot1 right shaker1 l2 l1 
17 empty-shaker right shaker1 cocktail9 l1 l0 
18 clean-shaker right left shaker1 
19 leave right shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient1 shot15 
22 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser1 ingredient1 
23 grasp right shot15 
24 fill-shot shot15 ingredient1 right left dispenser1 
25 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 
26 clean-shot shot15 ingredient1 right left 
27 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient2 right shot15 
28 fill-shot shot15 ingredient2 right left dispenser2 
29 pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 
30 leave right shot15 
31 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient1 ingredient2 
32 __method_precondition_m5_do_clean_shot_5_precondition shot2 
33 nop  
34 grasp left shaker1 
35 shake cocktail7 ingredient1 ingredient2 shaker1 left right 
36 pour-shaker-to-shot cocktail7 shot2 left shaker1 l2 l1 
37 empty-shaker left shaker1 cocktail7 l1 l0 
38 clean-shaker left right shaker1 
39 leave left shaker1 
40 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 left 
41 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient3 shot13 
42 __method_precondition_m8_do_fill_shot_8_precondition shot13 dispenser3 ingredient3 
43 grasp left shot13 
44 fill-shot shot13 ingredient3 left right dispenser3 
45 pour-shot-to-clean-shaker shot13 ingredient3 shaker1 left l0 l1 
46 clean-shot shot13 ingredient3 left right 
47 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient4 left shot13 
48 fill-shot shot13 ingredient4 left right dispenser4 
49 pour-shot-to-used-shaker shot13 ingredient4 shaker1 left l1 l2 
50 leave left shot13 
51 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient3 ingredient4 
52 __method_precondition_m5_do_clean_shot_5_precondition shot3 
53 nop  
54 grasp left shaker1 
55 shake cocktail11 ingredient3 ingredient4 shaker1 left right 
56 pour-shaker-to-shot cocktail11 shot3 left shaker1 l2 l1 
57 empty-shaker left shaker1 cocktail11 l1 l0 
58 clean-shaker left right shaker1 
59 leave left shaker1 
60 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
61 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient4 shot17 
62 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient4 ingredient3 dispenser4 
63 grasp left shot17 
64 clean-shot shot17 ingredient3 left right 
65 fill-shot shot17 ingredient4 left right dispenser4 
66 pour-shot-to-clean-shaker shot17 ingredient4 shaker1 left l0 l1 
67 clean-shot shot17 ingredient4 left right 
68 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient2 left shot17 
69 fill-shot shot17 ingredient2 left right dispenser2 
70 pour-shot-to-used-shaker shot17 ingredient2 shaker1 left l1 l2 
71 leave left shot17 
72 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient4 ingredient2 
73 __method_precondition_m5_do_clean_shot_5_precondition shot4 
74 nop  
75 grasp right shaker1 
76 shake cocktail8 ingredient4 ingredient2 shaker1 right left 
77 pour-shaker-to-shot cocktail8 shot4 right shaker1 l2 l1 
78 empty-shaker right shaker1 cocktail8 l1 l0 
79 clean-shaker right left shaker1 
80 leave right shaker1 
81 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 right 
82 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient3 shot14 
83 __method_precondition_m8_do_fill_shot_8_precondition shot14 dispenser3 ingredient3 
84 grasp right shot14 
85 fill-shot shot14 ingredient3 right left dispenser3 
86 pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 
87 clean-shot shot14 ingredient3 right left 
88 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient5 right shot14 
89 fill-shot shot14 ingredient5 right left dispenser5 
90 pour-shot-to-used-shaker shot14 ingredient5 shaker1 right l1 l2 
91 leave right shot14 
92 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient3 ingredient5 
93 __method_precondition_m5_do_clean_shot_5_precondition shot5 
94 nop  
95 grasp left shaker1 
96 shake cocktail2 ingredient3 ingredient5 shaker1 left right 
97 pour-shaker-to-shot cocktail2 shot5 left shaker1 l2 l1 
98 empty-shaker left shaker1 cocktail2 l1 l0 
99 clean-shaker left right shaker1 
100 leave left shaker1 
101 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 right 
102 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient4 shot13 
103 __method_precondition_m7_do_fill_shot_7_precondition shot13 ingredient4 dispenser4 
104 grasp right shot13 
105 refill-shot shot13 ingredient4 right left dispenser4 
106 pour-shot-to-clean-shaker shot13 ingredient4 shaker1 right l0 l1 
107 clean-shot shot13 ingredient4 right left 
108 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient2 right shot13 
109 fill-shot shot13 ingredient2 right left dispenser2 
110 pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 
111 leave right shot13 
112 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient4 ingredient2 
113 __method_precondition_m5_do_clean_shot_5_precondition shot6 
114 nop  
115 grasp left shaker1 
116 shake cocktail1 ingredient4 ingredient2 shaker1 left right 
117 pour-shaker-to-shot cocktail1 shot6 left shaker1 l2 l1 
118 empty-shaker left shaker1 cocktail1 l1 l0 
119 clean-shaker left right shaker1 
120 leave left shaker1 
121 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 right 
122 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient1 shot13 
123 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient2 dispenser1 
124 grasp right shot13 
125 clean-shot shot13 ingredient2 right left 
126 fill-shot shot13 ingredient1 right left dispenser1 
127 pour-shot-to-clean-shaker shot13 ingredient1 shaker1 right l0 l1 
128 clean-shot shot13 ingredient1 right left 
129 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient2 right shot13 
130 fill-shot shot13 ingredient2 right left dispenser2 
131 pour-shot-to-used-shaker shot13 ingredient2 shaker1 right l1 l2 
132 leave right shot13 
133 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient1 ingredient2 
134 __method_precondition_m5_do_clean_shot_5_precondition shot7 
135 nop  
136 grasp left shaker1 
137 shake cocktail5 ingredient1 ingredient2 shaker1 left right 
138 pour-shaker-to-shot cocktail5 shot7 left shaker1 l2 l1 
139 empty-shaker left shaker1 cocktail5 l1 l0 
140 clean-shaker left right shaker1 
141 leave left shaker1 
142 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 left 
143 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient2 shot15 
144 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient2 dispenser2 
145 grasp left shot15 
146 refill-shot shot15 ingredient2 left right dispenser2 
147 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 
148 clean-shot shot15 ingredient2 left right 
149 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient4 left shot15 
150 fill-shot shot15 ingredient4 left right dispenser4 
151 pour-shot-to-used-shaker shot15 ingredient4 shaker1 left l1 l2 
152 leave left shot15 
153 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient2 ingredient4 
154 __method_precondition_m5_do_clean_shot_5_precondition shot8 
155 nop  
156 grasp left shaker1 
157 shake cocktail3 ingredient2 ingredient4 shaker1 left right 
158 pour-shaker-to-shot cocktail3 shot8 left shaker1 l2 l1 
159 empty-shaker left shaker1 cocktail3 l1 l0 
160 clean-shaker left right shaker1 
161 leave left shaker1 
162 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 left 
163 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient2 shot15 
164 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient2 ingredient4 dispenser2 
165 grasp left shot15 
166 clean-shot shot15 ingredient4 left right 
167 fill-shot shot15 ingredient2 left right dispenser2 
168 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 left l0 l1 
169 clean-shot shot15 ingredient2 left right 
170 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient3 left shot15 
171 fill-shot shot15 ingredient3 left right dispenser3 
172 pour-shot-to-used-shaker shot15 ingredient3 shaker1 left l1 l2 
173 leave left shot15 
174 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient2 ingredient3 
175 __method_precondition_m5_do_clean_shot_5_precondition shot9 
176 nop  
177 grasp right shaker1 
178 shake cocktail10 ingredient2 ingredient3 shaker1 right left 
179 pour-shaker-to-shot cocktail10 shot9 right shaker1 l2 l1 
180 empty-shaker right shaker1 cocktail10 l1 l0 
181 clean-shaker right left shaker1 
182 leave right shaker1 
183 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 right 
184 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient3 shot14 
185 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient3 ingredient5 dispenser3 
186 grasp right shot14 
187 clean-shot shot14 ingredient5 right left 
188 fill-shot shot14 ingredient3 right left dispenser3 
189 pour-shot-to-clean-shaker shot14 ingredient3 shaker1 right l0 l1 
190 clean-shot shot14 ingredient3 right left 
191 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient2 right shot14 
192 fill-shot shot14 ingredient2 right left dispenser2 
193 pour-shot-to-used-shaker shot14 ingredient2 shaker1 right l1 l2 
194 leave right shot14 
195 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient3 ingredient2 
196 __method_precondition_m5_do_clean_shot_5_precondition shot10 
197 nop  
198 grasp left shaker1 
199 shake cocktail4 ingredient3 ingredient2 shaker1 left right 
200 pour-shaker-to-shot cocktail4 shot10 left shaker1 l2 l1 
201 empty-shaker left shaker1 cocktail4 l1 l0 
202 clean-shaker left right shaker1 
203 leave left shaker1 
204 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 left 
205 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient2 shot14 
206 __method_precondition_m7_do_fill_shot_7_precondition shot14 ingredient2 dispenser2 
207 grasp left shot14 
208 refill-shot shot14 ingredient2 left right dispenser2 
209 pour-shot-to-clean-shaker shot14 ingredient2 shaker1 left l0 l1 
210 clean-shot shot14 ingredient2 left right 
211 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient3 left shot14 
212 fill-shot shot14 ingredient3 left right dispenser3 
213 pour-shot-to-used-shaker shot14 ingredient3 shaker1 left l1 l2 
214 leave left shot14 
215 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient2 ingredient3 
216 __method_precondition_m5_do_clean_shot_5_precondition shot11 
217 nop  
218 grasp right shaker1 
219 shake cocktail6 ingredient2 ingredient3 shaker1 right left 
220 pour-shaker-to-shot cocktail6 shot11 right shaker1 l2 l1 
221 empty-shaker right shaker1 cocktail6 l1 l0 
222 clean-shaker right left shaker1 
223 leave right shaker1 
224 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 left 
225 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient2 shot17 
226 __method_precondition_m7_do_fill_shot_7_precondition shot17 ingredient2 dispenser2 
227 grasp left shot17 
228 refill-shot shot17 ingredient2 left right dispenser2 
229 pour-shot-to-clean-shaker shot17 ingredient2 shaker1 left l0 l1 
230 clean-shot shot17 ingredient2 left right 
231 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient3 left shot17 
232 fill-shot shot17 ingredient3 left right dispenser3 
233 pour-shot-to-used-shaker shot17 ingredient3 shaker1 left l1 l2 
234 leave left shot17 
235 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient2 ingredient3 
236 __method_precondition_m5_do_clean_shot_5_precondition shot12 
237 nop  
238 grasp right shaker1 
239 shake cocktail10 ingredient2 ingredient3 shaker1 right left 
240 pour-shaker-to-shot cocktail10 shot12 right shaker1 l2 l1 
241 empty-shaker right shaker1 cocktail10 l1 l0 
242 clean-shaker right left shaker1 
243 leave right shaker1 
244 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser1 ingredient1 
245 __method_precondition_m9_do_fill_shot_9_precondition shot13 ingredient1 ingredient2 dispenser1 
246 grasp right shot13 
247 clean-shot shot13 ingredient2 right left 
248 fill-shot shot13 ingredient1 right left dispenser1 
249 leave right shot13 
250 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser1 ingredient1 
251 __method_precondition_m9_do_fill_shot_9_precondition shot14 ingredient1 ingredient3 dispenser1 
252 grasp left shot14 
253 clean-shot shot14 ingredient3 left right 
254 fill-shot shot14 ingredient1 left right dispenser1 
255 leave left shot14 
256 __method_precondition_m1_do_cocktail_in_shot2_1_precondition dispenser1 ingredient1 
257 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient3 dispenser1 
258 grasp left shot15 
259 clean-shot shot15 ingredient3 left right 
260 fill-shot shot15 ingredient1 left right dispenser1 
261 leave left shot15 
262 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot16 left 
263 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient2 shot17 
264 __method_precondition_m9_do_fill_shot_9_precondition shot17 ingredient2 ingredient3 dispenser2 
265 grasp left shot17 
266 clean-shot shot17 ingredient3 left right 
267 fill-shot shot17 ingredient2 left right dispenser2 
268 pour-shot-to-clean-shaker shot17 ingredient2 shaker1 left l0 l1 
269 clean-shot shot17 ingredient2 left right 
270 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient4 left shot17 
271 fill-shot shot17 ingredient4 left right dispenser4 
272 pour-shot-to-used-shaker shot17 ingredient4 shaker1 left l1 l2 
273 leave left shot17 
274 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient2 ingredient4 
275 __method_precondition_m5_do_clean_shot_5_precondition shot16 
276 nop  
277 grasp left shaker1 
278 shake cocktail3 ingredient2 ingredient4 shaker1 left right 
279 pour-shaker-to-shot cocktail3 shot16 left shaker1 l2 l1 
280 empty-shaker left shaker1 cocktail3 l1 l0 
281 clean-shaker left right shaker1 
282 leave left shaker1 
root 400
283 serve_shot shot4 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 72 395 75 76 77 78 79 80
284 get_second_ingredient cocktail7 right  -> m3_get_second_ingredient 27 310 370 30
285 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 left  -> _m2_get_first_ingredient_4 169
286 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient5 right  -> _m3_get_second_ingredient_2 89
287 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient4 left  -> _m3_get_second_ingredient_2 271
288 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 5
289 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 68 340 379 71
290 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient2 left  -> _m2_get_first_ingredient_4 269
291 do_cocktail_in_shot1 shot16 cocktail3  -> m0_do_cocktail_in_shot1 262 296 298 336
292 serve_shot shot2 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot2,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 31 411 34 35 36 37 38 39
293 serve_shot shot11 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 215 311 218 219 220 221 222 223
294 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient2 left  -> _m2_get_first_ingredient_4 210
295 do_fill_shot shot14 ingredient2 left  -> m7_do_fill_shot 206 207 208
296 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 263 373 299 290
297 do_fill_shot shot15 ingredient1 left  -> m9_do_fill_shot 257 258 259 260
298 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 270 287 330 273
299 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 268
300 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient1 left  -> _m2_get_first_ingredient_4 6
301 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 129 331 345 132
302 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 127
303 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient3 right  -> _m2_get_first_ingredient_4 190
304 do_fill_shot shot14 ingredient3 right  -> m8_do_fill_shot 83 84 85
305 get_second_ingredient cocktail9 left  -> m3_get_second_ingredient 7 378 397 10
306 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 147
307 do_cocktail_in_shot2 shot15 ingredient1  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 256 297 261
308 do_cocktail_in_shot2 shot14 ingredient1  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 250 389 255
309 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 right  -> _m2_get_first_ingredient_4 26
310 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 right  -> _m3_get_second_ingredient_2 28
311 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 216 217
312 serve_shot shot9 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot9,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 174 314 177 178 179 180 181 182
313 do_fill_shot shot17 ingredient1 left  -> m8_do_fill_shot 2 3 4
314 do_clean_shot_m4_serve_shot_sip_2 shot9 left  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail5,left];m5_do_clean_shot;0;-1,-2> 175 176
315 do_clean_shot_m4_serve_shot_sip_2 shot12 left  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2> 236 237
316 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 189
317 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 113 114
318 get_first_ingredient cocktail4 right  -> m2_get_first_ingredient 184 380 316 303
319 do_fill_shot shot15 ingredient1 right  -> m8_do_fill_shot 22 23 24
320 get_second_ingredient cocktail6 left  -> m3_get_second_ingredient 211 365 367 214
321 do_cocktail_in_shot1 shot9 cocktail10  -> m0_do_cocktail_in_shot1 162 385 392 312
322 get_first_ingredient cocktail7 right  -> m2_get_first_ingredient 21 319 361 309
323 do_cocktail_in_shot1 shot7 cocktail5  -> m0_do_cocktail_in_shot1 121 391 301 406
324 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 88 286 407 91
325 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 left  -> _m3_get_second_ingredient_2 171
326 do_cocktail_in_shot1 shot8 cocktail3  -> m0_do_cocktail_in_shot1 142 375 364 372
327 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 229
328 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 45
329 get_first_ingredient cocktail6 left  -> m2_get_first_ingredient 205 295 418 294
330 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 272
331 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 right  -> _m3_get_second_ingredient_2 130
332 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 193
333 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot13 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 106
334 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 233
335 get_second_ingredient cocktail4 right  -> m3_get_second_ingredient 191 348 332 194
336 serve_shot shot16 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot16,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 274 412 277 278 279 280 281 282
337 do_fill_shot shot13 ingredient3 left  -> m8_do_fill_shot 42 43 44
338 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot17 ingredient4 shaker1 left  -> _m2_get_first_ingredient_3 66
339 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 61 358 338 377
340 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient2 left  -> _m3_get_second_ingredient_2 69
341 get_first_ingredient cocktail11 left  -> m2_get_first_ingredient 41 337 328 357
342 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 110
343 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 49
344 do_fill_shot shot13 ingredient1 right  -> m9_do_fill_shot 123 124 125 126
345 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot13 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 131
346 do_fill_shot shot13 ingredient4 right  -> m7_do_fill_shot 103 104 105
347 do_cocktail_in_shot1 shot4 cocktail8  -> m0_do_cocktail_in_shot1 60 339 289 283
348 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient2 right  -> _m3_get_second_ingredient_2 192
349 serve_shot shot3 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot3,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 51 415 54 55 56 57 58 59
350 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 231 353 334 234
351 do_fill_shot shot15 ingredient2 left  -> m7_do_fill_shot 144 145 146
352 do_cocktail_in_shot1 shot5 cocktail2  -> m0_do_cocktail_in_shot1 81 413 324 374
353 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient3 left  -> _m3_get_second_ingredient_2 232
354 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 108 371 342 111
355 do_cocktail_in_shot1 shot11 cocktail6  -> m0_do_cocktail_in_shot1 204 329 320 293
356 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 86
357 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient3 left  -> _m2_get_first_ingredient_4 46
358 do_fill_shot shot17 ingredient4 left  -> m9_do_fill_shot 62 63 64 65
359 do_clean_shot_m4_serve_shot_sip_2 shot10 right  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail11,right];m5_do_clean_shot;0;-1,-2> 196 197
360 do_cocktail_in_shot1 shot3 cocktail11  -> m0_do_cocktail_in_shot1 40 341 416 349
361 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 25
362 do_cocktail_in_shot1 shot10 cocktail4  -> m0_do_cocktail_in_shot1 183 318 335 384
363 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 134 135
364 get_second_ingredient cocktail3 left  -> m3_get_second_ingredient 149 408 401 152
365 fill-shot_m3_get_second_ingredient_sip_2 shot14 ingredient3 left  -> _m3_get_second_ingredient_2 212
366 do_fill_shot shot13 ingredient1 right  -> m9_do_fill_shot 245 246 247 248
367 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 213
368 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient4 right  -> _m2_get_first_ingredient_4 107
369 get_first_ingredient cocktail9 left  -> m2_get_first_ingredient 1 313 288 300
370 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 29
371 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient2 right  -> _m3_get_second_ingredient_2 109
372 serve_shot shot8 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot8,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 153 404 156 157 158 159 160 161
373 do_fill_shot shot17 ingredient2 left  -> m9_do_fill_shot 264 265 266 267
374 serve_shot shot5 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 92 396 95 96 97 98 99 100
375 get_first_ingredient cocktail3 left  -> m2_get_first_ingredient 143 351 306 381
376 do_fill_shot shot17 ingredient2 left  -> m7_do_fill_shot 226 227 228
377 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient4 left  -> _m2_get_first_ingredient_4 67
378 fill-shot_m3_get_second_ingredient_sip_2 shot17 ingredient3 left  -> _m3_get_second_ingredient_2 8
379 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 70
380 do_fill_shot shot14 ingredient3 right  -> m9_do_fill_shot 185 186 187 188
381 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 left  -> _m2_get_first_ingredient_4 148
382 clean-shot_m2_get_first_ingredient_sip_4 shot14 ingredient3 right  -> _m2_get_first_ingredient_4 87
383 do_cocktail_in_shot1 shot2 cocktail7  -> m0_do_cocktail_in_shot1 20 322 284 292
384 serve_shot shot10 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot10,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 195 359 198 199 200 201 202 203
385 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 163 409 417 285
386 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 172
387 do_cocktail_in_shot1 shot1 cocktail9  -> m0_do_cocktail_in_shot1 0 369 305 398
388 serve_shot shot6 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 112 317 115 116 117 118 119 120
389 do_fill_shot shot14 ingredient1 left  -> m9_do_fill_shot 251 252 253 254
390 get_first_ingredient cocktail10 left  -> m2_get_first_ingredient 225 376 327 399
391 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 122 344 302 402
392 get_second_ingredient cocktail10 left  -> m3_get_second_ingredient 170 325 386 173
393 do_clean_shot_m4_serve_shot_sip_2 shot1 left  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail4,left];m5_do_clean_shot;0;-1,-2> 12 13
394 fill-shot_m3_get_second_ingredient_sip_2 shot13 ingredient4 left  -> _m3_get_second_ingredient_2 48
395 do_clean_shot_m4_serve_shot_sip_2 shot4 left  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2> 73 74
396 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 93 94
397 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot17 ingredient3 shaker1 left  -> _m3_get_second_ingredient_3 9
398 serve_shot shot1 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot1,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 393 14 15 16 17 18 19
399 clean-shot_m2_get_first_ingredient_sip_4 shot17 ingredient2 left  -> _m2_get_first_ingredient_4 230
400 __choicelessATCompilation__top_1  -> __top_1 387 383 360 347 352 405 323 326 321 362 355 419 403 308 307 291
401 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 left  -> _m3_get_second_ingredient_3 151
402 clean-shot_m2_get_first_ingredient_sip_4 shot13 ingredient1 right  -> _m2_get_first_ingredient_4 128
403 do_cocktail_in_shot2 shot13 ingredient1  -> <m1_do_cocktail_in_shot2;__method_precondition_m1_do_cocktail_in_shot2_1_precondition_m1_do_cocktail_in_shot2_sip_4[ingredient1];_m1_do_cocktail_in_shot2_4;0;-1,1,2> 244 366 249
404 do_clean_shot_m4_serve_shot_sip_2 shot8 right  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail2,right];m5_do_clean_shot;0;-1,-2> 154 155
405 do_cocktail_in_shot1 shot6 cocktail1  -> m0_do_cocktail_in_shot1 101 414 354 388
406 serve_shot shot7 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 133 363 136 137 138 139 140 141
407 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot14 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 90
408 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 left  -> _m3_get_second_ingredient_2 150
409 do_fill_shot shot15 ingredient2 left  -> m9_do_fill_shot 164 165 166 167
410 serve_shot shot12 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 235 315 238 239 240 241 242 243
411 do_clean_shot_m4_serve_shot_sip_2 shot2 right  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail1,right];m5_do_clean_shot;0;-1,-2> 32 33
412 do_clean_shot_m4_serve_shot_sip_2 shot16 right  -> <_m4_serve_shot_2;do_clean_shot[shot16,cocktail1,right];m5_do_clean_shot;0;-1,-2> 275 276
413 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 82 304 356 382
414 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 102 346 333 368
415 do_clean_shot_m4_serve_shot_sip_2 shot3 right  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail3,right];m5_do_clean_shot;0;-1,-2> 52 53
416 get_second_ingredient cocktail11 left  -> m3_get_second_ingredient 47 394 343 50
417 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 168
418 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot14 ingredient2 shaker1 left  -> _m2_get_first_ingredient_3 209
419 do_cocktail_in_shot1 shot12 cocktail10  -> m0_do_cocktail_in_shot1 224 390 350 410

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 22.986 MEMPEAK_KBS 876387.328
