PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/RoverG/domain.hddl instances/RoverG/p10.hddl"


Planner Configuration
=====================
Domain: instances/RoverG/domain.hddl
Problem: instances/RoverG/p10.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p10.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 26
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 60
Compiling negative preconditions ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 60
Compiling split parameters ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 52
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 60
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 60
Grounded planning graph ... done in 1385ms.
	Number of Grounded Actions 11839
	Number of Grounded Literals 5794
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 60
Two Way TDG ... done.
	number of abstract tasks = 10
	number of tasks = 40
	number of decomposition methods = 16
	number of predicates = 29
	number of sorts = 8
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 16
	number of epsilon methods = 0
	number of primitive tasks = 30
	number of constants = 60
Grounding ... done.
	number of abstract tasks = 4544
	number of tasks = 15041
	number of decomposition methods = 17500
	number of predicates = 10796
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 4544
	number of tasks = 15041
	number of decomposition methods = 17500
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 704ms.
	Number of Grounded Actions 10497
	Number of Grounded Literals 388
	number of abstract tasks = 4544
	number of tasks = 15041
	number of decomposition methods = 17500
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 4544
	number of tasks = 15041
	number of decomposition methods = 17500
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 4544
	number of tasks = 15041
	number of decomposition methods = 17500
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 5
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 4545
	number of tasks = 15042
	number of decomposition methods = 17501
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 4545
	number of tasks = 15042
	number of decomposition methods = 17501
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 571ms.
	Number of Grounded Actions 10497
	Number of Grounded Literals 388
	number of abstract tasks = 4545
	number of tasks = 15042
	number of decomposition methods = 17501
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 4545
	number of tasks = 15042
	number of decomposition methods = 17501
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 4545
	number of tasks = 15042
	number of decomposition methods = 17501
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 4545
	number of tasks = 15042
	number of decomposition methods = 17501
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 4545
	number of tasks = 15042
	number of decomposition methods = 17501
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 4545
	number of tasks = 15042
	number of decomposition methods = 17501
	number of predicates = 388
	number of sorts = 0
	number of tasks in largest method = 20
	number of primitive SHOP tasks = 8694
	number of epsilon methods = 0
	number of primitive tasks = 10497
	number of constants = 0
Tasks 10497 - 1032
Domain is acyclic: false
Domain is mostly acyclic: false
Domain is regular: false
Domain is tail recursive: false
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854756447ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 101 will abort at 9223372036854754371
done
initial PDT has 380 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 270 leafs
SHOP LEAFS 150
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 225234
Size 225234 at 0/10497
Size 225234 at 500/10497
Size 225234 at 1000/10497
Size 225234 at 1500/10497
Size 225234 at 2000/10497
Size 225234 at 2500/10497
Size 225234 at 3000/10497
Size 225234 at 3500/10497
Size 225234 at 4000/10497
Size 225234 at 4500/10497
Size 225234 at 5000/10497
Size 225234 at 5500/10497
Size 225234 at 6000/10497
Size 225234 at 6500/10497
Size 225234 at 7000/10497
Size 225001 at 7500/10497
Size 225001 at 8000/10497
Size 211509 at 8500/10497
Size 172966 at 9000/10497
Size 152566 at 9500/10497
Size 129428 at 10000/10497
Size 106125
Size 106125 at 0/10497
Size 106125 at 500/10497
Size 106125 at 1000/10497
Size 106125 at 1500/10497
Size 106125 at 2000/10497
Size 106125 at 2500/10497
Size 106125 at 3000/10497
Size 106125 at 3500/10497
Size 106125 at 4000/10497
Size 106125 at 4500/10497
Size 106125 at 5000/10497
Size 106125 at 5500/10497
Size 106125 at 6000/10497
Size 106125 at 6500/10497
Size 106125 at 7000/10497
Size 94041 at 7500/10497
Size 94041 at 8000/10497
Size 69593 at 8500/10497
Size 42218 at 9000/10497
Size 16563 at 9500/10497
Size 16279 at 10000/10497
Size 10151
Size 10151 at 0/10497
Size 10151 at 500/10497
Size 10151 at 1000/10497
Size 10151 at 1500/10497
Size 10151 at 2000/10497
Size 10151 at 2500/10497
Size 10151 at 3000/10497
Size 10151 at 3500/10497
Size 10151 at 4000/10497
Size 10151 at 4500/10497
Size 10151 at 5000/10497
Size 10151 at 5500/10497
Size 10151 at 6000/10497
Size 10151 at 6500/10497
Size 10151 at 7000/10497
Size 5840 at 7500/10497
Size 5840 at 8000/10497
Size 4330 at 8500/10497
Size 3969 at 9000/10497
Size 3847 at 9500/10497
Size 3846 at 10000/10497
Size 3826
Size 3826 at 0/10497
Size 3826 at 500/10497
Size 3826 at 1000/10497
Size 3826 at 1500/10497
Size 3826 at 2000/10497
Size 3826 at 2500/10497
Size 3826 at 3000/10497
Size 3826 at 3500/10497
Size 3826 at 4000/10497
Size 3826 at 4500/10497
Size 3826 at 5000/10497
Size 3826 at 5500/10497
Size 3826 at 6000/10497
Size 3826 at 6500/10497
Size 3826 at 7000/10497
Size 3199 at 7500/10497
Size 3199 at 8000/10497
Size 3062 at 8500/10497
Size 2920 at 9000/10497
Size 2869 at 9500/10497
Size 2869 at 10000/10497
Size 2869
Size 2869 at 0/10497
Size 2869 at 500/10497
Size 2869 at 1000/10497
Size 2869 at 1500/10497
Size 2869 at 2000/10497
Size 2869 at 2500/10497
Size 2869 at 3000/10497
Size 2869 at 3500/10497
Size 2869 at 4000/10497
Size 2869 at 4500/10497
Size 2869 at 5000/10497
Size 2869 at 5500/10497
Size 2869 at 6000/10497
Size 2869 at 6500/10497
Size 2869 at 7000/10497
Size 2866 at 7500/10497
Size 2866 at 8000/10497
Size 2777 at 8500/10497
Size 2678 at 9000/10497
Size 2658 at 9500/10497
Size 2658 at 10000/10497
Size 2658
Size 2658 at 0/10497
Size 2658 at 500/10497
Size 2658 at 1000/10497
Size 2658 at 1500/10497
Size 2658 at 2000/10497
Size 2658 at 2500/10497
Size 2658 at 3000/10497
Size 2658 at 3500/10497
Size 2658 at 4000/10497
Size 2658 at 4500/10497
Size 2658 at 5000/10497
Size 2658 at 5500/10497
Size 2658 at 6000/10497
Size 2658 at 6500/10497
Size 2658 at 7000/10497
Size 2656 at 7500/10497
Size 2656 at 8000/10497
Size 2623 at 8500/10497
Size 2605 at 9000/10497
Size 2601 at 9500/10497
Size 2601 at 10000/10497
Size 2601
Size 2601 at 0/10497
Size 2601 at 500/10497
Size 2601 at 1000/10497
Size 2601 at 1500/10497
Size 2601 at 2000/10497
Size 2601 at 2500/10497
Size 2601 at 3000/10497
Size 2601 at 3500/10497
Size 2601 at 4000/10497
Size 2601 at 4500/10497
Size 2601 at 5000/10497
Size 2601 at 5500/10497
Size 2601 at 6000/10497
Size 2601 at 6500/10497
Size 2601 at 7000/10497
Size 2601 at 7500/10497
Size 2601 at 8000/10497
Size 2599 at 8500/10497
Size 2599 at 9000/10497
Size 2599 at 9500/10497
Size 2599 at 10000/10497
Size 2599
Size 2599 at 0/10497
Size 2599 at 500/10497
Size 2599 at 1000/10497
Size 2599 at 1500/10497
Size 2599 at 2000/10497
Size 2599 at 2500/10497
Size 2599 at 3000/10497
Size 2599 at 3500/10497
Size 2599 at 4000/10497
Size 2599 at 4500/10497
Size 2599 at 5000/10497
Size 2599 at 5500/10497
Size 2599 at 6000/10497
Size 2599 at 6500/10497
Size 2599 at 7000/10497
Size 2599 at 7500/10497
Size 2599 at 8000/10497
Size 2599 at 8500/10497
Size 2599 at 9000/10497
Size 2599 at 9500/10497
Size 2599 at 10000/10497
Size 2599
Invariant time: 5.909
Number of invariants: 2599
Invariant Clauses 704329
NUMBER OF CLAUSES 1493392
NUMBER OF STATE CLAUSES 929835
NUMBER OF DECOMPOSITION CLAUSES 563557
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 62.26% 37.74% 0.0% 
NUMBER OF PATHS 270
Starting cryptominisat5.5
Setting starttime of solver to 1604483880203
Command exited with non-zero status 20
3.39 0.09

Time command gave the following runtime for the solver: 3480
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... STARTOUTPUT
s_UNSATISFIABLE

ENDOUTPUT
done
SAT-Solver says: UNSATISFIABLE

Running SAT search with K = 5
Generating initial PDT ... Still waiting ... running for 100 will abort at 9223372036854728321
done
initial PDT has 560 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 425 leafs
SHOP LEAFS 170
Assignment implications
Generating clauses representing decomposition ... Still waiting ... running for 73573 will abort at 9223372036854728321
done
Number of actions Formula: 0ms for 0 clauses

RUNWATCH_RESULT MEMOUT RETVAL 63232 TIME_SECS 157.053 MEMPEAK_KBS 8020641.792
