PANDA - Planning and Acting in a Network Decomposition Architecture
Believe us: It's great, it's fantastic!

PANDA Copyright (C) 2014-2018 Gregor Behnke, Pascal Bercher, Thomas Geier, Kadir
Dede, Daniel Höller, Kristof Mickeleit, Matthias Englert
This program comes with ABSOLUTELY NO WARRANTY
This is free software, and you are welcome to redistribute it under certain
conditions; run PANDA with -license for details.

Main Developers:
- Gregor Behnke, http://www.uni-ulm.de/in/ki/behnke
- Daniel Höller, http://www.uni-ulm.de/in/ki/hoeller

With many thanks to various further contributors.
Run PANDA with the command line argument -contributors for an extensive list.

Run it with -help for more information like available options.


PANDA was called with: "-systemConfig sat-exists-forbidden-implication(cms55) -programPath cryptominisat55=./cryptominisat5 instances/barman/domain.hddl instances/barman/p06.hddl"


Planner Configuration
=====================
Domain: instances/barman/domain.hddl
Problem: instances/barman/p06.hddl
Output: none

Planning Configuration
======================
	printGeneralInformation : true
	printAdditionalData     : true
	random seed             : 42
	time limit (in seconds) : none

	external programs:
		cryptominisat5.5 : ./cryptominisat5

	Parsing Configuration
	---------------------
	Parser                : autodetect file-type
	Expand Sort Hierarchy : true
	ClosedWordAssumption  : true
	CompileSHOPMethods    : true
	Eliminate Equality    : true
	Strip Hybridity       : true
	Reduce General Tasks  : true
	
	Preprocessing Configuration
	---------------------------
	Compile negative preconditions    : true
	Compile unit methods              : false
	Compile order in methods          : false
	Compile initial plan              : true
	Ensure Methods Have Last Task     : false
	Split independent parameters      : true
	Remove unnecessary predicates     : true
	Expand choiceless abstract tasks  : true
	Domain Cleanup                    : true
	Convert to SAS+                   : false
	Grounded Reachability Analysis    : Planning Graph (mutex-free)
	Grounded Task Decomposition Graph : Two Way TDG
	Iterate reachability analysis     : true
	Ground domain                     : true
	Iterate reachability analysis     : true
	Stop directly after grounding     : false
	
	SAT-Planning Configuration
	--------------------------
	solver           : cryptominisat5.5
	full planner run : true
	reduction method : only normalise 
	check result     : true
	
	Post-processing Configuration
	-----------------------------
	search result with Decomposition Tree
	statistics
	timings
	search status
	search result
#0 "00 global:01:problem"="p06.hddl";"00 global:00:domain"="domain.hddl"
Parsing domain ... using HDDL parser ... done
Preparing internal domain representation ... done.
Initial domain
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 15
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling negative preconditions ... done.
	number of abstract tasks = 7
	number of tasks = 30
	number of decomposition methods = 10
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Compiling split parameters ... done.
	number of abstract tasks = 15
	number of tasks = 38
	number of decomposition methods = 18
	number of predicates = 30
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 10
	number of epsilon methods = 0
	number of primitive tasks = 23
	number of constants = 42
Lifted reachability analysis and domain cleanup ... done.
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 42
Grounded planning graph ... done in 603ms.
	Number of Grounded Actions 2836
	Number of Grounded Literals 420
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 42
Two Way TDG ... done.
	number of abstract tasks = 13
	number of tasks = 34
	number of decomposition methods = 16
	number of predicates = 18
	number of sorts = 10
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 9
	number of epsilon methods = 0
	number of primitive tasks = 21
	number of constants = 42
Grounding ... done.
	number of abstract tasks = 1398
	number of tasks = 4212
	number of decomposition methods = 5376
	number of predicates = 420
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 1398
	number of tasks = 4212
	number of decomposition methods = 5376
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 431ms.
	Number of Grounded Actions 2814
	Number of Grounded Literals 390
	number of abstract tasks = 1398
	number of tasks = 4212
	number of decomposition methods = 5376
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 1398
	number of tasks = 4212
	number of decomposition methods = 5376
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 8
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 991
	number of tasks = 3805
	number of decomposition methods = 4969
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 991
	number of tasks = 3805
	number of decomposition methods = 4969
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 991
	number of tasks = 3805
	number of decomposition methods = 4969
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Omitting lifted reachability analysis ... 
Grounded planning graph ... done in 229ms.
	Number of Grounded Actions 2814
	Number of Grounded Literals 390
	number of abstract tasks = 991
	number of tasks = 3805
	number of decomposition methods = 4969
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Two Way TDG ... done.
	number of abstract tasks = 991
	number of tasks = 3805
	number of decomposition methods = 4689
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Compiling expand choiceless abstract tasks ... done.
	number of abstract tasks = 991
	number of tasks = 3805
	number of decomposition methods = 4689
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Compiling initial plan ... done.
	number of abstract tasks = 991
	number of tasks = 3805
	number of decomposition methods = 4689
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Compiling methods with identical tasks ... done.
	number of abstract tasks = 991
	number of tasks = 3805
	number of decomposition methods = 4689
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Removing unnecessary predicates ... done.
	number of abstract tasks = 991
	number of tasks = 3805
	number of decomposition methods = 4689
	number of predicates = 390
	number of sorts = 0
	number of tasks in largest method = 14
	number of primitive SHOP tasks = 1101
	number of epsilon methods = 0
	number of primitive tasks = 2814
	number of constants = 0
Tasks 2814 - 11
Domain is acyclic: true
Domain is mostly acyclic: true
Domain is regular: false
Domain is tail recursive: true
Domain is totally ordered: true
Domain has last task in all methods: true
Time remaining for planner 9223372036854767465ms
Computing minimum decomposition height: 4

Running SAT search with K = 4
Generating initial PDT ... Still waiting ... running for 109 will abort at 9223372036854767023
done
initial PDT has 294 leafs
Checking whether the PDT can grow any more ... yes ... done
Normalising and optimising PDT ... done
PDT has 294 leafs
SHOP LEAFS 98
Assignment implications
Generating clauses representing decomposition ... done
Number of actions Formula: 0ms for 0 clauses
Computing invariants [Rintanen]
candidates build 227565
Size 227565 at 0/2814
Size 227490 at 500/2814
Size 193543 at 1000/2814
Size 47137 at 1500/2814
Size 31133 at 2000/2814
Size 31128 at 2500/2814
Size 31128
Size 31128 at 0/2814
Size 31128 at 500/2814
Size 22761 at 1000/2814
Size 14125 at 1500/2814
Size 4360 at 2000/2814
Size 4291 at 2500/2814
Size 4247
Size 4247 at 0/2814
Size 4247 at 500/2814
Size 4235 at 1000/2814
Size 4192 at 1500/2814
Size 4089 at 2000/2814
Size 4089 at 2500/2814
Size 4084
Size 4084 at 0/2814
Size 4084 at 500/2814
Size 4028 at 1000/2814
Size 3888 at 1500/2814
Size 3790 at 2000/2814
Size 3790 at 2500/2814
Size 3790
Size 3790 at 0/2814
Size 3790 at 500/2814
Size 3790 at 1000/2814
Size 3790 at 1500/2814
Size 3790 at 2000/2814
Size 3790 at 2500/2814
Size 3790
Invariant time: 2.87
Number of invariants: 3790
Invariant Clauses 1118050
NUMBER OF CLAUSES 1718878
NUMBER OF STATE CLAUSES 1442988
NUMBER OF DECOMPOSITION CLAUSES 275890
NUMBER OF ORDER CLAUSES 0
PERCENTAGES 83.95% 16.05% 0.0% 
NUMBER OF PATHS 294
Starting cryptominisat5.5
Setting starttime of solver to 1604475217949
Command exited with non-zero status 10
0.82 0.04

Time command gave the following runtime for the solver: 860
Logging statistical information about the run ... done
Reading solver output ... done
Preparing solver output ... done
SAT-Solver says: SATISFIABLE

extracting solution
Consider method^3_6;3;1,2543 2543 <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2>
6;3;1 169 pathaction!3_6;3;1,2293
Consider method^0_,4688 4688 __top_1
 332 pathaction!0_,3804
Consider method^3_3;1;1,161 161 m9_do_fill_shot
3;1;1 413 pathaction!3_3;1;1,2605
Consider method^3_3;2;2,1161 1161 _m3_get_second_ingredient_3
3;2;2 424 pathaction!3_3;2;2,2416
Consider method^3_2;2;1,3882 3882 _m3_get_second_ingredient_2
2;2;1 172 pathaction!3_2;2;1,622
Consider method^3_8;3;1,4302 4302 <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2>
8;3;1 370 pathaction!3_8;3;1,2292
Consider method^3_5;3;1,658 658 <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2>
5;3;1 373 pathaction!3_5;3;1,2304
Consider method^2_6;3,3073 3073 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
6;3 195 pathaction!2_6;3,3354
Consider method^2_9;3,3525 3525 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
9;3 296 pathaction!2_9;3,3356
Consider method^3_11;1;3,2476 2476 _m2_get_first_ingredient_4
11;1;3 324 pathaction!3_11;1;3,2676
Consider method^2_13;3,1803 1803 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot14,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
13;3 275 pathaction!2_13;3,3361
Consider method^2_4;1,14 14 m2_get_first_ingredient
4;1 29 pathaction!2_4;1,3336
Consider method^3_12;1;1,2026 2026 m9_do_fill_shot
12;1;1 285 pathaction!3_12;1;1,2510
Consider method^3_1;2;1,2779 2779 _m3_get_second_ingredient_2
1;2;1 46 pathaction!3_1;2;1,574
Consider method^2_11;1,2059 2059 m2_get_first_ingredient
11;1 12 pathaction!2_11;1,3338
Consider method^3_7;1;3,927 927 _m2_get_first_ingredient_4
7;1;3 314 pathaction!3_7;1;3,2628
Consider method^2_7;3,652 652 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
7;3 88 pathaction!2_7;3,3360
Consider method^3_1;1;2,4 4 _m2_get_first_ingredient_3
1;1;2 237 pathaction!3_1;1;2,1125
Consider method^2_3;2,793 793 m3_get_second_ingredient
3;2 342 pathaction!2_3;2,3743
Consider method^2_10;1,2869 2869 m2_get_first_ingredient
10;1 341 pathaction!2_10;1,3344
Consider method^1_7,2266 2266 m0_do_cocktail_in_shot1
7 113 pathaction!1_7,86
Consider method^3_12;2;1,1426 1426 _m3_get_second_ingredient_2
12;2;1 335 pathaction!3_12;2;1,702
Consider method^3_8;2;1,1164 1164 _m3_get_second_ingredient_2
8;2;1 165 pathaction!3_8;2;1,688
Consider method^3_13;2;1,2779 2779 _m3_get_second_ingredient_2
13;2;1 148 pathaction!3_13;2;1,574
Consider method^3_10;2;2,750 750 _m3_get_second_ingredient_3
10;2;2 354 pathaction!3_10;2;2,2397
Consider method^2_3;1,691 691 m2_get_first_ingredient
3;1 134 pathaction!2_3;1,3332
Consider method^2_6;2,4098 4098 m3_get_second_ingredient
6;2 17 pathaction!2_6;2,3746
Consider method^3_13;3;1,2588 2588 <_m4_serve_shot_2;do_clean_shot[shot14,cocktail10,left];m5_do_clean_shot;0;-1,-2>
13;3;1 364 pathaction!3_13;3;1,2291
Consider method^2_3;3,3790 3790 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
3;3 429 pathaction!2_3;3,3353
Consider method^2_6;1,4079 4079 m2_get_first_ingredient
6;1 177 pathaction!2_6;1,3335
Consider method^2_4;3,3821 3821 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
4;3 171 pathaction!2_4;3,3362
Consider method^3_8;2;2,1695 1695 _m3_get_second_ingredient_3
8;2;2 361 pathaction!3_8;2;2,2345
Consider method^1_3,2146 2146 m0_do_cocktail_in_shot1
3 242 pathaction!1_3,79
Consider method^3_5;1;1,2611 2611 m9_do_fill_shot
5;1;1 47 pathaction!3_5;1;1,2592
Consider method^1_11,1131 1131 m0_do_cocktail_in_shot1
11 154 pathaction!1_11,85
Consider method^2_1;3,2567 2567 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
1;3 48 pathaction!2_1;3,3349
Consider method^2_13;2,1698 1698 m3_get_second_ingredient
13;2 430 pathaction!2_13;2,3754
Consider method^3_5;2;1,4498 4498 _m3_get_second_ingredient_2
5;2;1 245 pathaction!3_5;2;1,679
Consider method^3_9;3;1,1087 1087 <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2>
9;3;1 144 pathaction!3_9;3;1,2284
Consider method^2_10;2,2136 2136 m3_get_second_ingredient
10;2 246 pathaction!2_10;2,3755
Consider method^2_0;1,1557 1557 m2_get_first_ingredient
0;1 398 pathaction!2_0;1,3342
Consider method^2_13;1,2373 2373 m2_get_first_ingredient
13;1 42 pathaction!2_13;1,3343
Consider method^2_9;1,1000 1000 m2_get_first_ingredient
9;1 318 pathaction!2_9;1,3346
Consider method^3_9;2;2,1161 1161 _m3_get_second_ingredient_3
9;2;2 4 pathaction!3_9;2;2,2416
Consider method^2_11;2,124 124 m3_get_second_ingredient
11;2 205 pathaction!2_11;2,3749
Consider method^3_2;3;1,2657 2657 <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2>
2;3;1 168 pathaction!3_2;3;1,2307
Consider method^3_12;3;1,1784 1784 <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,left];m5_do_clean_shot;0;-1,-2>
12;3;1 69 pathaction!3_12;3;1,2285
Consider method^3_3;2;1,4659 4659 _m3_get_second_ingredient_2
3;2;1 133 pathaction!3_3;2;1,675
Consider method^3_8;1;2,3387 3387 _m2_get_first_ingredient_3
8;1;2 248 pathaction!3_8;1;2,1058
Consider method^3_11;2;1,3547 3547 _m3_get_second_ingredient_2
11;2;1 297 pathaction!3_11;2;1,604
Consider method^2_7;1,3982 3982 m2_get_first_ingredient
7;1 356 pathaction!2_7;1,3337
Consider method^3_9;1;3,4483 4483 _m2_get_first_ingredient_4
9;1;3 193 pathaction!3_9;1;3,2660
Consider method^1_5,988 988 m0_do_cocktail_in_shot1
5 158 pathaction!1_5,78
Consider method^3_3;1;3,3811 3811 _m2_get_first_ingredient_4
3;1;3 49 pathaction!3_3;1;3,2755
Consider method^1_13,2505 2505 m0_do_cocktail_in_shot1
13 299 pathaction!1_13,87
Consider method^1_10,4574 4574 m0_do_cocktail_in_shot1
10 232 pathaction!1_10,84
Consider method^1_0,119 119 m0_do_cocktail_in_shot1
0 198 pathaction!1_0,77
Consider method^2_12;1,3151 3151 m2_get_first_ingredient
12;1 58 pathaction!2_12;1,3331
Consider method^3_4;2;2,3813 3813 _m3_get_second_ingredient_3
4;2;2 422 pathaction!3_4;2;2,2444
Consider method^3_2;1;2,2666 2666 _m2_get_first_ingredient_3
2;1;2 175 pathaction!3_2;1;2,1172
Consider method^2_2;2,3928 3928 m3_get_second_ingredient
2;2 353 pathaction!2_2;2,3738
Consider method^3_2;1;3,3997 3997 _m2_get_first_ingredient_4
2;1;3 391 pathaction!3_2;1;3,2658
Consider method^1_4,2494 2494 m0_do_cocktail_in_shot1
4 61 pathaction!1_4,88
Consider method^3_7;2;2,2459 2459 _m3_get_second_ingredient_3
7;2;2 157 pathaction!3_7;2;2,2330
Consider method^2_11;3,4661 4661 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
11;3 350 pathaction!2_11;3,3359
Consider method^3_3;1;2,3763 3763 _m2_get_first_ingredient_3
3;1;2 344 pathaction!3_3;1;2,1054
Consider method^3_4;1;2,518 518 _m2_get_first_ingredient_3
4;1;2 100 pathaction!3_4;1;2,1073
Consider method^3_7;1;1,1020 1020 m9_do_fill_shot
7;1;1 307 pathaction!3_7;1;1,2478
Consider method^3_8;1;1,304 304 m7_do_fill_shot
8;1;1 263 pathaction!3_8;1;1,2526
Consider method^3_10;1;1,4003 4003 m9_do_fill_shot
10;1;1 355 pathaction!3_10;1;1,2478
Consider method^2_12;2,2664 2664 m3_get_second_ingredient
12;2 107 pathaction!2_12;2,3742
Consider method^3_0;1;1,1963 1963 m8_do_fill_shot
0;1;1 191 pathaction!3_0;1;1,2592
Consider method^3_13;1;1,922 922 m9_do_fill_shot
13;1;1 376 pathaction!3_13;1;1,2583
Consider method^3_1;1;3,337 337 _m2_get_first_ingredient_4
1;1;3 236 pathaction!3_1;1;3,2733
Consider method^3_12;1;3,4483 4483 _m2_get_first_ingredient_4
12;1;3 60 pathaction!3_12;1;3,2660
Consider method^2_5;1,883 883 m2_get_first_ingredient
5;1 176 pathaction!2_5;1,3329
Consider method^3_0;3;1,2013 2013 <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2>
0;3;1 227 pathaction!3_0;3;1,2296
Consider method^3_4;3;1,190 190 <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2>
4;3;1 365 pathaction!3_4;3;1,2282
Consider method^3_11;1;1,607 607 m9_do_fill_shot
11;1;1 375 pathaction!3_11;1;1,2526
Consider method^3_4;1;1,2611 2611 m9_do_fill_shot
4;1;1 367 pathaction!3_4;1;1,2592
Consider method^1_6,3959 3959 m0_do_cocktail_in_shot1
6 427 pathaction!1_6,80
Consider method^3_1;3;1,4248 4248 <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2>
1;3;1 277 pathaction!3_1;3;1,2306
Consider method^2_9;2,3832 3832 m3_get_second_ingredient
9;2 269 pathaction!2_9;2,3757
Consider method^3_1;2;2,3684 3684 _m3_get_second_ingredient_3
1;2;2 99 pathaction!3_1;2;2,2364
Consider method^1_2,2794 2794 m0_do_cocktail_in_shot1
2 135 pathaction!1_2,83
Consider method^3_11;2;2,3813 3813 _m3_get_second_ingredient_3
11;2;2 79 pathaction!3_11;2;2,2444
Consider method^3_5;1;3,2294 2294 _m2_get_first_ingredient_4
5;1;3 288 pathaction!3_5;1;3,2742
Consider method^3_2;1;1,992 992 m9_do_fill_shot
2;1;1 211 pathaction!3_2;1;1,2508
Consider method^3_10;2;1,4498 4498 _m3_get_second_ingredient_2
10;2;1 386 pathaction!3_10;2;1,679
Consider method^3_6;1;3,927 927 _m2_get_first_ingredient_4
6;1;3 151 pathaction!3_6;1;3,2628
Consider method^3_0;2;1,2779 2779 _m3_get_second_ingredient_2
0;2;1 126 pathaction!3_0;2;1,574
Consider method^3_5;2;2,750 750 _m3_get_second_ingredient_3
5;2;2 309 pathaction!3_5;2;2,2397
Consider method^3_0;2;2,3684 3684 _m3_get_second_ingredient_3
0;2;2 39 pathaction!3_0;2;2,2364
Consider method^3_9;1;2,3273 3273 _m2_get_first_ingredient_3
9;1;2 254 pathaction!3_9;1;2,1154
Consider method^3_6;1;1,1020 1020 m9_do_fill_shot
6;1;1 325 pathaction!3_6;1;1,2478
Consider method^3_12;2;2,3865 3865 _m3_get_second_ingredient_3
12;2;2 347 pathaction!3_12;2;2,2405
Consider method^2_12;3,3562 3562 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot13,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
12;3 143 pathaction!2_12;3,3355
Consider method^2_4;2,1168 1168 m3_get_second_ingredient
4;2 50 pathaction!2_4;2,3747
Consider method^3_6;1;2,1587 1587 _m2_get_first_ingredient_3
6;1;2 432 pathaction!3_6;1;2,1092
Consider method^3_11;3;1,832 832 <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2>
11;3;1 210 pathaction!3_11;3;1,2280
Consider method^2_7;2,1502 1502 m3_get_second_ingredient
7;2 420 pathaction!2_7;2,3748
Consider method^2_2;1,415 415 m2_get_first_ingredient
2;1 96 pathaction!2_2;1,3327
Consider method^3_9;1;1,2135 2135 m9_do_fill_shot
9;1;1 264 pathaction!3_9;1;1,2510
Consider method^3_0;1;3,2294 2294 _m2_get_first_ingredient_4
0;1;3 199 pathaction!3_0;1;3,2742
Consider method^2_5;3,1567 1567 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
5;3 190 pathaction!2_5;3,3352
Consider method^3_2;2;2,2459 2459 _m3_get_second_ingredient_3
2;2;2 252 pathaction!3_2;2;2,2330
Consider method^2_8;3,4133 4133 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
8;3 83 pathaction!2_8;3,3350
Consider method^2_5;2,963 963 m3_get_second_ingredient
5;2 185 pathaction!2_5;2,3740
Consider method^3_3;3;1,576 576 <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2>
3;3;1 218 pathaction!3_3;3;1,2295
Consider method^1_1,2283 2283 m0_do_cocktail_in_shot1
1 278 pathaction!1_1,75
Consider method^3_7;3;1,1008 1008 <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2>
7;3;1 164 pathaction!3_7;3;1,2286
Consider method^2_8;1,1181 1181 m2_get_first_ingredient
8;1 393 pathaction!2_8;1,3328
Consider method^2_2;3,553 553 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
2;3 212 pathaction!2_2;3,3357
Consider method^3_5;1;2,518 518 _m2_get_first_ingredient_3
5;1;2 114 pathaction!3_5;1;2,1073
Consider method^3_11;1;2,3387 3387 _m2_get_first_ingredient_3
11;1;2 112 pathaction!3_11;1;2,1058
Consider method^2_10;3,741 741 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
10;3 298 pathaction!2_10;3,3358
Consider method^3_10;1;3,927 927 _m2_get_first_ingredient_4
10;1;3 308 pathaction!3_10;1;3,2628
Consider method^2_1;2,1698 1698 m3_get_second_ingredient
1;2 71 pathaction!2_1;2,3754
Consider method^3_13;1;2,4 4 _m2_get_first_ingredient_3
13;1;2 26 pathaction!3_13;1;2,1125
Consider method^3_10;1;2,1587 1587 _m2_get_first_ingredient_3
10;1;2 235 pathaction!3_10;1;2,1092
Consider method^1_9,667 667 m0_do_cocktail_in_shot1
9 123 pathaction!1_9,82
Consider method^3_13;2;2,3684 3684 _m3_get_second_ingredient_3
13;2;2 253 pathaction!3_13;2;2,2364
Consider method^3_12;1;2,3273 3273 _m2_get_first_ingredient_3
12;1;2 20 pathaction!3_12;1;2,1154
Consider method^2_8;2,1930 1930 m3_get_second_ingredient
8;2 7 pathaction!2_8;2,3739
Consider method^2_1;1,2373 2373 m2_get_first_ingredient
1;1 59 pathaction!2_1;1,3343
Consider method^3_4;1;3,2294 2294 _m2_get_first_ingredient_4
4;1;3 2 pathaction!3_4;1;3,2742
Consider method^3_4;2;1,3547 3547 _m3_get_second_ingredient_2
4;2;1 281 pathaction!3_4;2;1,604
Consider method^1_12,4314 4314 m0_do_cocktail_in_shot1
12 214 pathaction!1_12,81
Consider method^3_13;1;3,337 337 _m2_get_first_ingredient_4
13;1;3 68 pathaction!3_13;1;3,2733
Consider method^3_6;2;2,750 750 _m3_get_second_ingredient_3
6;2;2 348 pathaction!3_6;2;2,2397
Consider method^3_0;1;2,518 518 _m2_get_first_ingredient_3
0;1;2 156 pathaction!3_0;1;2,1073
Consider method^3_10;3;1,812 812 <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2>
10;3;1 35 pathaction!3_10;3;1,2302
Consider method^3_8;1;3,2476 2476 _m2_get_first_ingredient_4
8;1;3 405 pathaction!3_8;1;3,2676
Consider method^2_0;3,1914 1914 <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7>
0;3 18 pathaction!2_0;3,3351
Consider method^3_9;2;1,4659 4659 _m3_get_second_ingredient_2
9;2;1 326 pathaction!3_9;2;1,675
Consider method^3_7;2;1,3882 3882 _m3_get_second_ingredient_2
7;2;1 174 pathaction!3_7;2;1,622
Consider method^3_6;2;1,4498 4498 _m3_get_second_ingredient_2
6;2;1 425 pathaction!3_6;2;1,679
Consider method^1_8,726 726 m0_do_cocktail_in_shot1
8 14 pathaction!1_8,76
Consider method^3_1;1;1,722 722 m9_do_fill_shot
1;1;1 180 pathaction!3_1;1;1,2583
Consider method^3_7;1;2,1587 1587 _m2_get_first_ingredient_3
7;1;2 378 pathaction!3_7;1;2,1092
Consider method^2_0;2,2834 2834 m3_get_second_ingredient
0;2 421 pathaction!2_0;2,3753


CHECKING primitive solution of length 292 ...
true 282 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right;]
true 343 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient5,shot15;]
true 8 __method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser5,ingredient5;]
true 159 grasp[right,shot15;]
true 186 fill-shot[shot15,ingredient5,right,left,dispenser5;]
true 251 pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,right,l0,l1;]
true 395 clean-shot[shot15,ingredient5,right,left;]
true 181 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,right,shot15;]
true 404 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 415 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 141 leave[right,shot15;]
true 294 __method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient5,ingredient4;]
true 319 __method_precondition_m5_do_clean_shot_5_precondition[shot1;]
true 27 nop[;]
true 203 grasp[left,shaker1;]
true 182 shake[cocktail3,ingredient5,ingredient4,shaker1,left,right;]
true 161 pour-shaker-to-shot[cocktail3,shot1,left,shaker1,l2,l1;]
true 108 empty-shaker[left,shaker1,cocktail3,l1,l0;]
true 327 clean-shaker[left,right,shaker1;]
true 382 leave[left,shaker1;]
true 194 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right;]
true 197 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot15;]
true 399 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient4,dispenser1;]
true 233 grasp[right,shot15;]
true 417 clean-shot[shot15,ingredient4,right,left;]
true 406 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 329 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1;]
true 372 clean-shot[shot15,ingredient1,right,left;]
true 346 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,right,shot15;]
true 200 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 89 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 64 leave[right,shot15;]
true 28 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4;]
true 75 __method_precondition_m5_do_clean_shot_5_precondition[shot2;]
true 97 nop[;]
true 9 grasp[right,shaker1;]
true 128 shake[cocktail10,ingredient1,ingredient4,shaker1,right,left;]
true 74 pour-shaker-to-shot[cocktail10,shot2,right,shaker1,l2,l1;]
true 289 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 136 clean-shaker[right,left,shaker1;]
true 78 leave[right,shaker1;]
true 221 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right;]
true 124 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient2,shot15;]
true 217 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient4,dispenser2;]
true 15 grasp[right,shot15;]
true 82 clean-shot[shot15,ingredient4,right,left;]
true 315 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 130 pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1;]
true 225 clean-shot[shot15,ingredient2,right,left;]
true 401 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient3,right,shot15;]
true 407 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 72 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 394 leave[right,shot15;]
true 187 __method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient2,ingredient3;]
true 312 __method_precondition_m5_do_clean_shot_5_precondition[shot3;]
true 423 nop[;]
true 397 grasp[right,shaker1;]
true 202 shake[cocktail11,ingredient2,ingredient3,shaker1,right,left;]
true 358 pour-shaker-to-shot[cocktail11,shot3,right,shaker1,l2,l1;]
true 231 empty-shaker[right,shaker1,cocktail11,l1,l0;]
true 287 clean-shaker[right,left,shaker1;]
true 121 leave[right,shaker1;]
true 261 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left;]
true 192 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot15;]
true 36 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient3,dispenser1;]
true 53 grasp[left,shot15;]
true 291 clean-shot[shot15,ingredient3,left,right;]
true 366 fill-shot[shot15,ingredient1,left,right,dispenser1;]
true 320 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1;]
true 32 clean-shot[shot15,ingredient1,left,right;]
true 331 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot15;]
true 138 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 311 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 280 leave[left,shot15;]
true 255 __method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient2;]
true 267 __method_precondition_m5_do_clean_shot_5_precondition[shot4;]
true 77 nop[;]
true 170 grasp[right,shaker1;]
true 239 shake[cocktail7,ingredient1,ingredient2,shaker1,right,left;]
true 30 pour-shaker-to-shot[cocktail7,shot4,right,shaker1,l2,l1;]
true 416 empty-shaker[right,shaker1,cocktail7,l1,l0;]
true 301 clean-shaker[right,left,shaker1;]
true 62 leave[right,shaker1;]
true 162 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right;]
true 155 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient5,shot15;]
true 204 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient5,ingredient2,dispenser5;]
true 119 grasp[right,shot15;]
true 389 clean-shot[shot15,ingredient2,right,left;]
true 362 fill-shot[shot15,ingredient5,right,left,dispenser5;]
true 125 pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,right,l0,l1;]
true 80 clean-shot[shot15,ingredient5,right,left;]
true 247 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,right,shot15;]
true 271 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 84 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,right,l1,l2;]
true 222 leave[right,shot15;]
true 384 __method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient5,ingredient2;]
true 117 __method_precondition_m5_do_clean_shot_5_precondition[shot5;]
true 380 nop[;]
true 338 grasp[left,shaker1;]
true 3 shake[cocktail9,ingredient5,ingredient2,shaker1,left,right;]
true 290 pour-shaker-to-shot[cocktail9,shot5,left,shaker1,l2,l1;]
true 21 empty-shaker[left,shaker1,cocktail9,l1,l0;]
true 85 clean-shaker[left,right,shaker1;]
true 292 leave[left,shaker1;]
true 243 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right;]
true 400 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient5,shot15;]
true 385 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient5,ingredient2,dispenser5;]
true 284 grasp[right,shot15;]
true 272 clean-shot[shot15,ingredient2,right,left;]
true 167 fill-shot[shot15,ingredient5,right,left,dispenser5;]
true 303 pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,right,l0,l1;]
true 316 clean-shot[shot15,ingredient5,right,left;]
true 189 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,right,shot15;]
true 336 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 266 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 403 leave[right,shot15;]
true 22 __method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient5,ingredient1;]
true 215 __method_precondition_m5_do_clean_shot_5_precondition[shot6;]
true 357 nop[;]
true 273 grasp[left,shaker1;]
true 279 shake[cocktail5,ingredient5,ingredient1,shaker1,left,right;]
true 213 pour-shaker-to-shot[cocktail5,shot6,left,shaker1,l2,l1;]
true 306 empty-shaker[left,shaker1,cocktail5,l1,l0;]
true 383 clean-shaker[left,right,shaker1;]
true 51 leave[left,shaker1;]
true 249 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right;]
true 120 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient4,shot15;]
true 115 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient1,dispenser4;]
true 250 grasp[right,shot15;]
true 31 clean-shot[shot15,ingredient1,right,left;]
true 102 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 33 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 188 clean-shot[shot15,ingredient4,right,left;]
true 45 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient1,right,shot15;]
true 65 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 92 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 122 leave[right,shot15;]
true 196 __method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient4,ingredient1;]
true 228 __method_precondition_m5_do_clean_shot_5_precondition[shot7;]
true 377 nop[;]
true 259 grasp[left,shaker1;]
true 145 shake[cocktail4,ingredient4,ingredient1,shaker1,left,right;]
true 87 pour-shaker-to-shot[cocktail4,shot7,left,shaker1,l2,l1;]
true 323 empty-shaker[left,shaker1,cocktail4,l1,l0;]
true 414 clean-shaker[left,right,shaker1;]
true 55 leave[left,shaker1;]
true 179 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right;]
true 63 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot15;]
true 240 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient1,dispenser4;]
true 147 grasp[right,shot15;]
true 368 clean-shot[shot15,ingredient1,right,left;]
true 201 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 67 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 110 clean-shot[shot15,ingredient4,right,left;]
true 56 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot15;]
true 276 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 426 pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2;]
true 412 leave[right,shot15;]
true 5 __method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3;]
true 206 __method_precondition_m5_do_clean_shot_5_precondition[shot8;]
true 146 nop[;]
true 302 grasp[right,shaker1;]
true 66 shake[cocktail2,ingredient4,ingredient3,shaker1,right,left;]
true 140 pour-shaker-to-shot[cocktail2,shot8,right,shaker1,l2,l1;]
true 244 empty-shaker[right,shaker1,cocktail2,l1,l0;]
true 73 clean-shaker[right,left,shaker1;]
true 304 leave[right,shaker1;]
true 103 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right;]
true 369 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot15;]
true 105 __method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient3,dispenser3;]
true 392 grasp[right,shot15;]
true 163 refill-shot[shot15,ingredient3,right,left,dispenser3;]
true 349 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1;]
true 34 clean-shot[shot15,ingredient3,right,left;]
true 241 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient5,right,shot15;]
true 410 fill-shot[shot15,ingredient5,right,left,dispenser5;]
true 209 pour-shot-to-used-shaker[shot15,ingredient5,shaker1,right,l1,l2;]
true 95 leave[right,shot15;]
true 351 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient5;]
true 173 __method_precondition_m5_do_clean_shot_5_precondition[shot9;]
true 216 nop[;]
true 411 grasp[left,shaker1;]
true 104 shake[cocktail1,ingredient3,ingredient5,shaker1,left,right;]
true 260 pour-shaker-to-shot[cocktail1,shot9,left,shaker1,l2,l1;]
true 76 empty-shaker[left,shaker1,cocktail1,l1,l0;]
true 257 clean-shaker[left,right,shaker1;]
true 295 leave[left,shaker1;]
true 25 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left;]
true 11 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot15;]
true 388 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient5,dispenser3;]
true 160 grasp[left,shot15;]
true 313 clean-shot[shot15,ingredient5,left,right;]
true 300 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 86 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 265 clean-shot[shot15,ingredient3,left,right;]
true 16 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot15;]
true 19 fill-shot[shot15,ingredient2,left,right,dispenser2;]
true 339 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2;]
true 408 leave[left,shot15;]
true 52 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2;]
true 317 __method_precondition_m5_do_clean_shot_5_precondition[shot10;]
true 390 nop[;]
true 268 grasp[right,shaker1;]
true 118 shake[cocktail8,ingredient3,ingredient2,shaker1,right,left;]
true 166 pour-shaker-to-shot[cocktail8,shot10,right,shaker1,l2,l1;]
true 41 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 224 clean-shaker[right,left,shaker1;]
true 234 leave[right,shaker1;]
true 23 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right;]
true 322 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot15;]
true 54 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient2,dispenser4;]
true 396 grasp[right,shot15;]
true 70 clean-shot[shot15,ingredient2,right,left;]
true 321 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 43 pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1;]
true 109 clean-shot[shot15,ingredient4,right,left;]
true 137 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,right,shot15;]
true 337 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 132 pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2;]
true 270 leave[right,shot15;]
true 340 __method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1;]
true 142 __method_precondition_m5_do_clean_shot_5_precondition[shot11;]
true 40 nop[;]
true 152 grasp[right,shaker1;]
true 223 shake[cocktail6,ingredient4,ingredient1,shaker1,right,left;]
true 101 pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1;]
true 256 empty-shaker[right,shaker1,cocktail6,l1,l0;]
true 10 clean-shaker[right,left,shaker1;]
true 334 leave[right,shaker1;]
true 139 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right;]
true 106 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot15;]
true 184 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient1,dispenser3;]
true 381 grasp[right,shot15;]
true 229 clean-shot[shot15,ingredient1,right,left;]
true 330 fill-shot[shot15,ingredient3,right,left,dispenser3;]
true 1 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1;]
true 219 clean-shot[shot15,ingredient3,right,left;]
true 90 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,right,shot15;]
true 98 fill-shot[shot15,ingredient2,right,left,dispenser2;]
true 208 pour-shot-to-used-shaker[shot15,ingredient2,shaker1,right,l1,l2;]
true 283 leave[right,shot15;]
true 293 __method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2;]
true 150 __method_precondition_m5_do_clean_shot_5_precondition[shot12;]
true 310 nop[;]
true 37 grasp[right,shaker1;]
true 371 shake[cocktail8,ingredient3,ingredient2,shaker1,right,left;]
true 81 pour-shaker-to-shot[cocktail8,shot12,right,shaker1,l2,l1;]
true 116 empty-shaker[right,shaker1,cocktail8,l1,l0;]
true 379 clean-shaker[right,left,shaker1;]
true 333 leave[right,shaker1;]
true 183 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left;]
true 431 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot15;]
true 0 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient2,dispenser3;]
true 258 grasp[left,shot15;]
true 207 clean-shot[shot15,ingredient2,left,right;]
true 363 fill-shot[shot15,ingredient3,left,right,dispenser3;]
true 328 pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1;]
true 111 clean-shot[shot15,ingredient3,left,right;]
true 419 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient5,left,shot15;]
true 352 fill-shot[shot15,ingredient5,left,right,dispenser5;]
true 238 pour-shot-to-used-shaker[shot15,ingredient5,shaker1,left,l1,l2;]
true 13 leave[left,shot15;]
true 149 __method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient5;]
true 57 __method_precondition_m5_do_clean_shot_5_precondition[shot13;]
true 94 nop[;]
true 387 grasp[right,shaker1;]
true 24 shake[cocktail1,ingredient3,ingredient5,shaker1,right,left;]
true 230 pour-shaker-to-shot[cocktail1,shot13,right,shaker1,l2,l1;]
true 274 empty-shaker[right,shaker1,cocktail1,l1,l0;]
true 93 clean-shaker[right,left,shaker1;]
true 305 leave[right,shaker1;]
true 402 __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,right;]
true 428 __method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot15;]
true 44 __method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient5,dispenser1;]
true 220 grasp[right,shot15;]
true 226 clean-shot[shot15,ingredient5,right,left;]
true 127 fill-shot[shot15,ingredient1,right,left,dispenser1;]
true 359 pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1;]
true 360 clean-shot[shot15,ingredient1,right,left;]
true 262 __method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,right,shot15;]
true 286 fill-shot[shot15,ingredient4,right,left,dispenser4;]
true 153 pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2;]
true 38 leave[right,shot15;]
true 129 __method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4;]
true 374 __method_precondition_m5_do_clean_shot_5_precondition[shot14;]
true 91 nop[;]
true 345 grasp[right,shaker1;]
true 178 shake[cocktail10,ingredient1,ingredient4,shaker1,right,left;]
true 6 pour-shaker-to-shot[cocktail10,shot14,right,shaker1,l2,l1;]
true 418 empty-shaker[right,shaker1,cocktail10,l1,l0;]
true 131 clean-shaker[right,left,shaker1;]
true 409 leave[right,shaker1;]
 done.
Panda says: SOLUTION
============ global ============
randomseed     = 42
peak memory    = 579110008
planner result = SOLUTION
============ properties ============
acyclic                  = true
mostly acyclic           = true
regular                  = false
tail recursive           = true
totally ordered          = true
last task in all methods = true
============ problem ============
number of constants                  = 0
number of predicates                 = 390
number of actions                    = 3805
number of abstract actions           = 991
number of primitive actions          = 2814
number of methods                    = 4689
number of primitive shop actions     = 1101
number of primitive non-shop actions = 1713
size of largest method               = 14
average method size                  = 3
============ sat ============
plan length                     = -1
number of variables             = 311632
number of clauses               = 1718878
average size of clauses         = 2.3865957909752757
number of assert                = 171
number of horn                  = 1507772
K offset                        = 0
K chosen value                  = 4
state formula                   = 1442988
method children clauses         = 0
number of paths                 = 294
maximum plan length             = 294
number of decomposition clauses = 275890
number of ordering clauses      = 0
number of state clauses         = 1442988
solved                          = true
timeout                         = false

----------------- TIMINGS -----------------
============ total ============
total = 20125
============ parsing ============
total                         = 1130
file parser                   = 614
sort expansion                = 237
closed world assumption       = 141
inherit preconditions         = 0
shop methods                  = 11
eliminate identical variables = 45
strip domain of hybridity     = 1
flatten formula               = 64
============ preprocessing ============
total                                      = 6603
compile negative preconditions             = 37
compile unit methods                       = 0
split parameter                            = 55
expand choiceless abstract tasks           = 611
compile methods with identical tasks       = 32
removing unnecessary predicates            = 1023
lifted reachabiltiy analysis               = 83
grounded planning graph analysis           = 1796
grounded task decomposition graph analysis = 2196
grounding                                  = 712
create artificial top task                 = 8
============ search preparation ============
compute state invariants = 3182
============ sat ============
total                                        = 8833
generate formula                             = 7016
generate path decomposition tree             = 447
normalise path decomposition tree            = 78
sog optimisation                             = 168
translate path decomposition tree to clauses = 920
generate state formula                       = 6913
generate state invariant formula             = 948
transform to DIMACS                          = 594
SAT solver                                   = 860
SAT solver for K=0004                        = 860

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="2814";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="991";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="579110008";"40 sat:20:state formula"="1442988";"40 sat:01:number of variables"="311632";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="294";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="0";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="4689";"30 problem:07:number of primitive shop actions"="1101";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="3805";"30 problem:08:number of primitive non-shop actions"="1713";"30 problem:02:number of predicates"="390";"40 sat:03:number of horn"="1507772";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="3";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="14";"40 sat:03:average size of clauses"="2.3865957909752757";"40 sat:02:number of clauses"="1718878";"40 sat:50:number of state clauses"="1442988";"40 sat:03:number of assert"="171";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:31:maximum plan length"="294";"40 sat:50:number of decomposition clauses"="275890";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="614";"01 parsing:08:flatten formula"="64";"40 sat:41:SAT solver for K=0004"="860";"40 sat:00:total"="8833";"40 sat:16:generate state formula"="6913";"40 sat:20:transform to DIMACS"="594";"40 sat:11:generate path decomposition tree"="447";"02 preprocessing:07:compile methods with identical tasks"="32";"01 parsing:07:strip domain of hybridity"="1";"02 preprocessing:08:removing unnecessary predicates"="1023";"01 parsing:03:closed world assumption"="141";"02 preprocessing:11:lifted reachabiltiy analysis"="83";"01 parsing:02:sort expansion"="237";"40 sat:12:normalise path decomposition tree"="78";"40 sat:40:SAT solver"="860";"01 parsing:00:total"="1130";"40 sat:10:generate formula"="7016";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="37";"00 total:00:total"="20125";"40 sat:13:sog optimisation"="168";"02 preprocessing:12:grounded planning graph analysis"="1796";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="2196";"02 preprocessing:04:split parameter"="55";"01 parsing:05:shop methods"="11";"10 search preparation:02:compute state invariants"="3182";"01 parsing:06:eliminate identical variables"="45";"40 sat:15:translate path decomposition tree to clauses"="920";"02 preprocessing:05:expand choiceless abstract tasks"="611";"40 sat:17:generate state invariant formula"="948";"02 preprocessing:00:total"="6603";"02 preprocessing:99:create artificial top task"="8";"02 preprocessing:84:grounding"="712"
#!verify __method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot1,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail3,ingredient5,shot15];__method_precondition_m8_do_fill_shot_8_precondition[shot15,dispenser5,ingredient5];grasp[right,shot15];fill-shot[shot15,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,right,l0,l1];clean-shot[shot15,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail3,ingredient4,right,shot15];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail3,ingredient5,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot1];nop[];grasp[left,shaker1];shake[cocktail3,ingredient5,ingredient4,shaker1,left,right];pour-shaker-to-shot[cocktail3,shot1,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail3,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot2,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient4,dispenser1];grasp[right,shot15];clean-shot[shot15,ingredient4,right,left];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1];clean-shot[shot15,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,right,shot15];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot2];nop[];grasp[right,shaker1];shake[cocktail10,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot2,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot3,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail11,ingredient2,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient2,ingredient4,dispenser2];grasp[right,shot15];clean-shot[shot15,ingredient4,right,left];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-clean-shaker[shot15,ingredient2,shaker1,right,l0,l1];clean-shot[shot15,ingredient2,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail11,ingredient3,right,shot15];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail11,ingredient2,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot3];nop[];grasp[right,shaker1];shake[cocktail11,ingredient2,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail11,shot3,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail11,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot4,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail7,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient3,dispenser1];grasp[left,shot15];clean-shot[shot15,ingredient3,left,right];fill-shot[shot15,ingredient1,left,right,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,left,l0,l1];clean-shot[shot15,ingredient1,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail7,ingredient2,left,shot15];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail7,ingredient1,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot4];nop[];grasp[right,shaker1];shake[cocktail7,ingredient1,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail7,shot4,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail7,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot5,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail9,ingredient5,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient5,ingredient2,dispenser5];grasp[right,shot15];clean-shot[shot15,ingredient2,right,left];fill-shot[shot15,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,right,l0,l1];clean-shot[shot15,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail9,ingredient2,right,shot15];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail9,ingredient5,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot5];nop[];grasp[left,shaker1];shake[cocktail9,ingredient5,ingredient2,shaker1,left,right];pour-shaker-to-shot[cocktail9,shot5,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail9,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot6,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail5,ingredient5,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient5,ingredient2,dispenser5];grasp[right,shot15];clean-shot[shot15,ingredient2,right,left];fill-shot[shot15,ingredient5,right,left,dispenser5];pour-shot-to-clean-shaker[shot15,ingredient5,shaker1,right,l0,l1];clean-shot[shot15,ingredient5,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail5,ingredient1,right,shot15];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail5,ingredient5,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot6];nop[];grasp[left,shaker1];shake[cocktail5,ingredient5,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail5,shot6,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail5,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot7,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail4,ingredient4,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient1,dispenser4];grasp[right,shot15];clean-shot[shot15,ingredient1,right,left];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1];clean-shot[shot15,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail4,ingredient1,right,shot15];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail4,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot7];nop[];grasp[left,shaker1];shake[cocktail4,ingredient4,ingredient1,shaker1,left,right];pour-shaker-to-shot[cocktail4,shot7,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail4,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot8,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail2,ingredient4,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient1,dispenser4];grasp[right,shot15];clean-shot[shot15,ingredient1,right,left];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1];clean-shot[shot15,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail2,ingredient3,right,shot15];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-used-shaker[shot15,ingredient3,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail2,ingredient4,ingredient3];__method_precondition_m5_do_clean_shot_5_precondition[shot8];nop[];grasp[right,shaker1];shake[cocktail2,ingredient4,ingredient3,shaker1,right,left];pour-shaker-to-shot[cocktail2,shot8,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail2,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot9,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot15];__method_precondition_m7_do_fill_shot_7_precondition[shot15,ingredient3,dispenser3];grasp[right,shot15];refill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1];clean-shot[shot15,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient5,right,shot15];fill-shot[shot15,ingredient5,right,left,dispenser5];pour-shot-to-used-shaker[shot15,ingredient5,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot9];nop[];grasp[left,shaker1];shake[cocktail1,ingredient3,ingredient5,shaker1,left,right];pour-shaker-to-shot[cocktail1,shot9,left,shaker1,l2,l1];empty-shaker[left,shaker1,cocktail1,l1,l0];clean-shaker[left,right,shaker1];leave[left,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot10,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient5,dispenser3];grasp[left,shot15];clean-shot[shot15,ingredient5,left,right];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1];clean-shot[shot15,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,left,shot15];fill-shot[shot15,ingredient2,left,right,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot10];nop[];grasp[right,shaker1];shake[cocktail8,ingredient3,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot10,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot11,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail6,ingredient4,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient4,ingredient2,dispenser4];grasp[right,shot15];clean-shot[shot15,ingredient2,right,left];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-clean-shaker[shot15,ingredient4,shaker1,right,l0,l1];clean-shot[shot15,ingredient4,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail6,ingredient1,right,shot15];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-used-shaker[shot15,ingredient1,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail6,ingredient4,ingredient1];__method_precondition_m5_do_clean_shot_5_precondition[shot11];nop[];grasp[right,shaker1];shake[cocktail6,ingredient4,ingredient1,shaker1,right,left];pour-shaker-to-shot[cocktail6,shot11,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail6,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot12,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail8,ingredient3,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient1,dispenser3];grasp[right,shot15];clean-shot[shot15,ingredient1,right,left];fill-shot[shot15,ingredient3,right,left,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,right,l0,l1];clean-shot[shot15,ingredient3,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail8,ingredient2,right,shot15];fill-shot[shot15,ingredient2,right,left,dispenser2];pour-shot-to-used-shaker[shot15,ingredient2,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail8,ingredient3,ingredient2];__method_precondition_m5_do_clean_shot_5_precondition[shot12];nop[];grasp[right,shaker1];shake[cocktail8,ingredient3,ingredient2,shaker1,right,left];pour-shaker-to-shot[cocktail8,shot12,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail8,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot13,left];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail1,ingredient3,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient3,ingredient2,dispenser3];grasp[left,shot15];clean-shot[shot15,ingredient2,left,right];fill-shot[shot15,ingredient3,left,right,dispenser3];pour-shot-to-clean-shaker[shot15,ingredient3,shaker1,left,l0,l1];clean-shot[shot15,ingredient3,left,right];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail1,ingredient5,left,shot15];fill-shot[shot15,ingredient5,left,right,dispenser5];pour-shot-to-used-shaker[shot15,ingredient5,shaker1,left,l1,l2];leave[left,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail1,ingredient3,ingredient5];__method_precondition_m5_do_clean_shot_5_precondition[shot13];nop[];grasp[right,shaker1];shake[cocktail1,ingredient3,ingredient5,shaker1,right,left];pour-shaker-to-shot[cocktail1,shot13,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail1,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1];__method_precondition_m0_do_cocktail_in_shot1_0_precondition[shot14,right];__method_precondition_m2_get_first_ingredient_2_precondition[cocktail10,ingredient1,shot15];__method_precondition_m9_do_fill_shot_9_precondition[shot15,ingredient1,ingredient5,dispenser1];grasp[right,shot15];clean-shot[shot15,ingredient5,right,left];fill-shot[shot15,ingredient1,right,left,dispenser1];pour-shot-to-clean-shaker[shot15,ingredient1,shaker1,right,l0,l1];clean-shot[shot15,ingredient1,right,left];__method_precondition_m3_get_second_ingredient_3_precondition[cocktail10,ingredient4,right,shot15];fill-shot[shot15,ingredient4,right,left,dispenser4];pour-shot-to-used-shaker[shot15,ingredient4,shaker1,right,l1,l2];leave[right,shot15];__method_precondition_m4_serve_shot_4_precondition[cocktail10,ingredient1,ingredient4];__method_precondition_m5_do_clean_shot_5_precondition[shot14];nop[];grasp[right,shaker1];shake[cocktail10,ingredient1,ingredient4,shaker1,right,left];pour-shaker-to-shot[cocktail10,shot14,right,shaker1,l2,l1];empty-shaker[right,shaker1,cocktail10,l1,l0];clean-shaker[right,left,shaker1];leave[right,shaker1]
==>
0 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot1 right 
1 __method_precondition_m2_get_first_ingredient_2_precondition cocktail3 ingredient5 shot15 
2 __method_precondition_m8_do_fill_shot_8_precondition shot15 dispenser5 ingredient5 
3 grasp right shot15 
4 fill-shot shot15 ingredient5 right left dispenser5 
5 pour-shot-to-clean-shaker shot15 ingredient5 shaker1 right l0 l1 
6 clean-shot shot15 ingredient5 right left 
7 __method_precondition_m3_get_second_ingredient_3_precondition cocktail3 ingredient4 right shot15 
8 fill-shot shot15 ingredient4 right left dispenser4 
9 pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 
10 leave right shot15 
11 __method_precondition_m4_serve_shot_4_precondition cocktail3 ingredient5 ingredient4 
12 __method_precondition_m5_do_clean_shot_5_precondition shot1 
13 nop  
14 grasp left shaker1 
15 shake cocktail3 ingredient5 ingredient4 shaker1 left right 
16 pour-shaker-to-shot cocktail3 shot1 left shaker1 l2 l1 
17 empty-shaker left shaker1 cocktail3 l1 l0 
18 clean-shaker left right shaker1 
19 leave left shaker1 
20 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot2 right 
21 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot15 
22 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient4 dispenser1 
23 grasp right shot15 
24 clean-shot shot15 ingredient4 right left 
25 fill-shot shot15 ingredient1 right left dispenser1 
26 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 
27 clean-shot shot15 ingredient1 right left 
28 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient4 right shot15 
29 fill-shot shot15 ingredient4 right left dispenser4 
30 pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 
31 leave right shot15 
32 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient4 
33 __method_precondition_m5_do_clean_shot_5_precondition shot2 
34 nop  
35 grasp right shaker1 
36 shake cocktail10 ingredient1 ingredient4 shaker1 right left 
37 pour-shaker-to-shot cocktail10 shot2 right shaker1 l2 l1 
38 empty-shaker right shaker1 cocktail10 l1 l0 
39 clean-shaker right left shaker1 
40 leave right shaker1 
41 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot3 right 
42 __method_precondition_m2_get_first_ingredient_2_precondition cocktail11 ingredient2 shot15 
43 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient2 ingredient4 dispenser2 
44 grasp right shot15 
45 clean-shot shot15 ingredient4 right left 
46 fill-shot shot15 ingredient2 right left dispenser2 
47 pour-shot-to-clean-shaker shot15 ingredient2 shaker1 right l0 l1 
48 clean-shot shot15 ingredient2 right left 
49 __method_precondition_m3_get_second_ingredient_3_precondition cocktail11 ingredient3 right shot15 
50 fill-shot shot15 ingredient3 right left dispenser3 
51 pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 
52 leave right shot15 
53 __method_precondition_m4_serve_shot_4_precondition cocktail11 ingredient2 ingredient3 
54 __method_precondition_m5_do_clean_shot_5_precondition shot3 
55 nop  
56 grasp right shaker1 
57 shake cocktail11 ingredient2 ingredient3 shaker1 right left 
58 pour-shaker-to-shot cocktail11 shot3 right shaker1 l2 l1 
59 empty-shaker right shaker1 cocktail11 l1 l0 
60 clean-shaker right left shaker1 
61 leave right shaker1 
62 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot4 left 
63 __method_precondition_m2_get_first_ingredient_2_precondition cocktail7 ingredient1 shot15 
64 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient3 dispenser1 
65 grasp left shot15 
66 clean-shot shot15 ingredient3 left right 
67 fill-shot shot15 ingredient1 left right dispenser1 
68 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 left l0 l1 
69 clean-shot shot15 ingredient1 left right 
70 __method_precondition_m3_get_second_ingredient_3_precondition cocktail7 ingredient2 left shot15 
71 fill-shot shot15 ingredient2 left right dispenser2 
72 pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 
73 leave left shot15 
74 __method_precondition_m4_serve_shot_4_precondition cocktail7 ingredient1 ingredient2 
75 __method_precondition_m5_do_clean_shot_5_precondition shot4 
76 nop  
77 grasp right shaker1 
78 shake cocktail7 ingredient1 ingredient2 shaker1 right left 
79 pour-shaker-to-shot cocktail7 shot4 right shaker1 l2 l1 
80 empty-shaker right shaker1 cocktail7 l1 l0 
81 clean-shaker right left shaker1 
82 leave right shaker1 
83 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot5 right 
84 __method_precondition_m2_get_first_ingredient_2_precondition cocktail9 ingredient5 shot15 
85 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient5 ingredient2 dispenser5 
86 grasp right shot15 
87 clean-shot shot15 ingredient2 right left 
88 fill-shot shot15 ingredient5 right left dispenser5 
89 pour-shot-to-clean-shaker shot15 ingredient5 shaker1 right l0 l1 
90 clean-shot shot15 ingredient5 right left 
91 __method_precondition_m3_get_second_ingredient_3_precondition cocktail9 ingredient2 right shot15 
92 fill-shot shot15 ingredient2 right left dispenser2 
93 pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 
94 leave right shot15 
95 __method_precondition_m4_serve_shot_4_precondition cocktail9 ingredient5 ingredient2 
96 __method_precondition_m5_do_clean_shot_5_precondition shot5 
97 nop  
98 grasp left shaker1 
99 shake cocktail9 ingredient5 ingredient2 shaker1 left right 
100 pour-shaker-to-shot cocktail9 shot5 left shaker1 l2 l1 
101 empty-shaker left shaker1 cocktail9 l1 l0 
102 clean-shaker left right shaker1 
103 leave left shaker1 
104 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot6 right 
105 __method_precondition_m2_get_first_ingredient_2_precondition cocktail5 ingredient5 shot15 
106 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient5 ingredient2 dispenser5 
107 grasp right shot15 
108 clean-shot shot15 ingredient2 right left 
109 fill-shot shot15 ingredient5 right left dispenser5 
110 pour-shot-to-clean-shaker shot15 ingredient5 shaker1 right l0 l1 
111 clean-shot shot15 ingredient5 right left 
112 __method_precondition_m3_get_second_ingredient_3_precondition cocktail5 ingredient1 right shot15 
113 fill-shot shot15 ingredient1 right left dispenser1 
114 pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 
115 leave right shot15 
116 __method_precondition_m4_serve_shot_4_precondition cocktail5 ingredient5 ingredient1 
117 __method_precondition_m5_do_clean_shot_5_precondition shot6 
118 nop  
119 grasp left shaker1 
120 shake cocktail5 ingredient5 ingredient1 shaker1 left right 
121 pour-shaker-to-shot cocktail5 shot6 left shaker1 l2 l1 
122 empty-shaker left shaker1 cocktail5 l1 l0 
123 clean-shaker left right shaker1 
124 leave left shaker1 
125 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot7 right 
126 __method_precondition_m2_get_first_ingredient_2_precondition cocktail4 ingredient4 shot15 
127 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient4 ingredient1 dispenser4 
128 grasp right shot15 
129 clean-shot shot15 ingredient1 right left 
130 fill-shot shot15 ingredient4 right left dispenser4 
131 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 
132 clean-shot shot15 ingredient4 right left 
133 __method_precondition_m3_get_second_ingredient_3_precondition cocktail4 ingredient1 right shot15 
134 fill-shot shot15 ingredient1 right left dispenser1 
135 pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 
136 leave right shot15 
137 __method_precondition_m4_serve_shot_4_precondition cocktail4 ingredient4 ingredient1 
138 __method_precondition_m5_do_clean_shot_5_precondition shot7 
139 nop  
140 grasp left shaker1 
141 shake cocktail4 ingredient4 ingredient1 shaker1 left right 
142 pour-shaker-to-shot cocktail4 shot7 left shaker1 l2 l1 
143 empty-shaker left shaker1 cocktail4 l1 l0 
144 clean-shaker left right shaker1 
145 leave left shaker1 
146 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot8 right 
147 __method_precondition_m2_get_first_ingredient_2_precondition cocktail2 ingredient4 shot15 
148 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient4 ingredient1 dispenser4 
149 grasp right shot15 
150 clean-shot shot15 ingredient1 right left 
151 fill-shot shot15 ingredient4 right left dispenser4 
152 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 
153 clean-shot shot15 ingredient4 right left 
154 __method_precondition_m3_get_second_ingredient_3_precondition cocktail2 ingredient3 right shot15 
155 fill-shot shot15 ingredient3 right left dispenser3 
156 pour-shot-to-used-shaker shot15 ingredient3 shaker1 right l1 l2 
157 leave right shot15 
158 __method_precondition_m4_serve_shot_4_precondition cocktail2 ingredient4 ingredient3 
159 __method_precondition_m5_do_clean_shot_5_precondition shot8 
160 nop  
161 grasp right shaker1 
162 shake cocktail2 ingredient4 ingredient3 shaker1 right left 
163 pour-shaker-to-shot cocktail2 shot8 right shaker1 l2 l1 
164 empty-shaker right shaker1 cocktail2 l1 l0 
165 clean-shaker right left shaker1 
166 leave right shaker1 
167 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot9 right 
168 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient3 shot15 
169 __method_precondition_m7_do_fill_shot_7_precondition shot15 ingredient3 dispenser3 
170 grasp right shot15 
171 refill-shot shot15 ingredient3 right left dispenser3 
172 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 
173 clean-shot shot15 ingredient3 right left 
174 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient5 right shot15 
175 fill-shot shot15 ingredient5 right left dispenser5 
176 pour-shot-to-used-shaker shot15 ingredient5 shaker1 right l1 l2 
177 leave right shot15 
178 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient3 ingredient5 
179 __method_precondition_m5_do_clean_shot_5_precondition shot9 
180 nop  
181 grasp left shaker1 
182 shake cocktail1 ingredient3 ingredient5 shaker1 left right 
183 pour-shaker-to-shot cocktail1 shot9 left shaker1 l2 l1 
184 empty-shaker left shaker1 cocktail1 l1 l0 
185 clean-shaker left right shaker1 
186 leave left shaker1 
187 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot10 left 
188 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot15 
189 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient3 ingredient5 dispenser3 
190 grasp left shot15 
191 clean-shot shot15 ingredient5 left right 
192 fill-shot shot15 ingredient3 left right dispenser3 
193 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 
194 clean-shot shot15 ingredient3 left right 
195 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient2 left shot15 
196 fill-shot shot15 ingredient2 left right dispenser2 
197 pour-shot-to-used-shaker shot15 ingredient2 shaker1 left l1 l2 
198 leave left shot15 
199 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient2 
200 __method_precondition_m5_do_clean_shot_5_precondition shot10 
201 nop  
202 grasp right shaker1 
203 shake cocktail8 ingredient3 ingredient2 shaker1 right left 
204 pour-shaker-to-shot cocktail8 shot10 right shaker1 l2 l1 
205 empty-shaker right shaker1 cocktail8 l1 l0 
206 clean-shaker right left shaker1 
207 leave right shaker1 
208 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot11 right 
209 __method_precondition_m2_get_first_ingredient_2_precondition cocktail6 ingredient4 shot15 
210 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient4 ingredient2 dispenser4 
211 grasp right shot15 
212 clean-shot shot15 ingredient2 right left 
213 fill-shot shot15 ingredient4 right left dispenser4 
214 pour-shot-to-clean-shaker shot15 ingredient4 shaker1 right l0 l1 
215 clean-shot shot15 ingredient4 right left 
216 __method_precondition_m3_get_second_ingredient_3_precondition cocktail6 ingredient1 right shot15 
217 fill-shot shot15 ingredient1 right left dispenser1 
218 pour-shot-to-used-shaker shot15 ingredient1 shaker1 right l1 l2 
219 leave right shot15 
220 __method_precondition_m4_serve_shot_4_precondition cocktail6 ingredient4 ingredient1 
221 __method_precondition_m5_do_clean_shot_5_precondition shot11 
222 nop  
223 grasp right shaker1 
224 shake cocktail6 ingredient4 ingredient1 shaker1 right left 
225 pour-shaker-to-shot cocktail6 shot11 right shaker1 l2 l1 
226 empty-shaker right shaker1 cocktail6 l1 l0 
227 clean-shaker right left shaker1 
228 leave right shaker1 
229 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot12 right 
230 __method_precondition_m2_get_first_ingredient_2_precondition cocktail8 ingredient3 shot15 
231 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient3 ingredient1 dispenser3 
232 grasp right shot15 
233 clean-shot shot15 ingredient1 right left 
234 fill-shot shot15 ingredient3 right left dispenser3 
235 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 right l0 l1 
236 clean-shot shot15 ingredient3 right left 
237 __method_precondition_m3_get_second_ingredient_3_precondition cocktail8 ingredient2 right shot15 
238 fill-shot shot15 ingredient2 right left dispenser2 
239 pour-shot-to-used-shaker shot15 ingredient2 shaker1 right l1 l2 
240 leave right shot15 
241 __method_precondition_m4_serve_shot_4_precondition cocktail8 ingredient3 ingredient2 
242 __method_precondition_m5_do_clean_shot_5_precondition shot12 
243 nop  
244 grasp right shaker1 
245 shake cocktail8 ingredient3 ingredient2 shaker1 right left 
246 pour-shaker-to-shot cocktail8 shot12 right shaker1 l2 l1 
247 empty-shaker right shaker1 cocktail8 l1 l0 
248 clean-shaker right left shaker1 
249 leave right shaker1 
250 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot13 left 
251 __method_precondition_m2_get_first_ingredient_2_precondition cocktail1 ingredient3 shot15 
252 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient3 ingredient2 dispenser3 
253 grasp left shot15 
254 clean-shot shot15 ingredient2 left right 
255 fill-shot shot15 ingredient3 left right dispenser3 
256 pour-shot-to-clean-shaker shot15 ingredient3 shaker1 left l0 l1 
257 clean-shot shot15 ingredient3 left right 
258 __method_precondition_m3_get_second_ingredient_3_precondition cocktail1 ingredient5 left shot15 
259 fill-shot shot15 ingredient5 left right dispenser5 
260 pour-shot-to-used-shaker shot15 ingredient5 shaker1 left l1 l2 
261 leave left shot15 
262 __method_precondition_m4_serve_shot_4_precondition cocktail1 ingredient3 ingredient5 
263 __method_precondition_m5_do_clean_shot_5_precondition shot13 
264 nop  
265 grasp right shaker1 
266 shake cocktail1 ingredient3 ingredient5 shaker1 right left 
267 pour-shaker-to-shot cocktail1 shot13 right shaker1 l2 l1 
268 empty-shaker right shaker1 cocktail1 l1 l0 
269 clean-shaker right left shaker1 
270 leave right shaker1 
271 __method_precondition_m0_do_cocktail_in_shot1_0_precondition shot14 right 
272 __method_precondition_m2_get_first_ingredient_2_precondition cocktail10 ingredient1 shot15 
273 __method_precondition_m9_do_fill_shot_9_precondition shot15 ingredient1 ingredient5 dispenser1 
274 grasp right shot15 
275 clean-shot shot15 ingredient5 right left 
276 fill-shot shot15 ingredient1 right left dispenser1 
277 pour-shot-to-clean-shaker shot15 ingredient1 shaker1 right l0 l1 
278 clean-shot shot15 ingredient1 right left 
279 __method_precondition_m3_get_second_ingredient_3_precondition cocktail10 ingredient4 right shot15 
280 fill-shot shot15 ingredient4 right left dispenser4 
281 pour-shot-to-used-shaker shot15 ingredient4 shaker1 right l1 l2 
282 leave right shot15 
283 __method_precondition_m4_serve_shot_4_precondition cocktail10 ingredient1 ingredient4 
284 __method_precondition_m5_do_clean_shot_5_precondition shot14 
285 nop  
286 grasp right shaker1 
287 shake cocktail10 ingredient1 ingredient4 shaker1 right left 
288 pour-shaker-to-shot cocktail10 shot14 right shaker1 l2 l1 
289 empty-shaker right shaker1 cocktail10 l1 l0 
290 clean-shaker right left shaker1 
291 leave right shaker1 
root 361
292 get_first_ingredient cocktail3 right  -> m2_get_first_ingredient 1 347 381 326
293 get_second_ingredient cocktail10 right  -> m3_get_second_ingredient 279 409 432 282
294 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 135
295 do_fill_shot shot15 ingredient3 left  -> m9_do_fill_shot 252 253 254 255
296 get_first_ingredient cocktail10 right  -> m2_get_first_ingredient 21 397 337 385
297 serve_shot shot7 cocktail4  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail4,shot7,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail4,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 137 426 140 141 142 143 144 145
298 do_clean_shot_m4_serve_shot_sip_2 shot13 left  -> <_m4_serve_shot_2;do_clean_shot[shot13,cocktail7,left];m5_do_clean_shot;0;-1,-2> 263 264
299 get_second_ingredient cocktail4 right  -> m3_get_second_ingredient 133 331 294 136
300 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m2_get_first_ingredient_3 47
301 get_second_ingredient cocktail1 left  -> m3_get_second_ingredient 258 302 349 261
302 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient5 left  -> _m3_get_second_ingredient_2 259
303 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 214
304 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 89
305 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 left  -> _m2_get_first_ingredient_4 194
306 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 left  -> _m2_get_first_ingredient_3 68
307 do_cocktail_in_shot1 shot3 cocktail11  -> m0_do_cocktail_in_shot1 41 324 379 420
308 do_cocktail_in_shot1 shot8 cocktail2  -> m0_do_cocktail_in_shot1 146 312 320 325
309 serve_shot shot13 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot13,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 262 298 265 266 267 268 269 270
310 get_first_ingredient cocktail8 left  -> m2_get_first_ingredient 188 375 358 305
311 do_clean_shot_m4_serve_shot_sip_2 shot9 right  -> <_m4_serve_shot_2;do_clean_shot[shot9,cocktail10,right];m5_do_clean_shot;0;-1,-2> 179 180
312 get_first_ingredient cocktail2 right  -> m2_get_first_ingredient 147 400 418 401
313 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient5 right  -> _m2_get_first_ingredient_4 90
314 get_first_ingredient cocktail7 left  -> m2_get_first_ingredient 63 344 306 360
315 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 right  -> _m2_get_first_ingredient_4 132
316 serve_shot shot4 cocktail7  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail7,shot4,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail7,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 74 427 77 78 79 80 81 82
317 get_second_ingredient cocktail5 right  -> m3_get_second_ingredient 112 346 371 115
318 do_fill_shot shot15 ingredient3 right  -> m9_do_fill_shot 231 232 233 234
319 get_second_ingredient cocktail7 left  -> m3_get_second_ingredient 70 364 423 73
320 get_second_ingredient cocktail2 right  -> m3_get_second_ingredient 154 339 415 157
321 do_fill_shot shot15 ingredient2 right  -> m9_do_fill_shot 43 44 45 46
322 do_clean_shot_m4_serve_shot_sip_2 shot5 right  -> <_m4_serve_shot_2;do_clean_shot[shot5,cocktail6,right];m5_do_clean_shot;0;-1,-2> 96 97
323 do_cocktail_in_shot1 shot11 cocktail6  -> m0_do_cocktail_in_shot1 208 335 384 368
324 get_first_ingredient cocktail11 right  -> m2_get_first_ingredient 42 321 300 412
325 serve_shot shot8 cocktail2  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail2,shot8,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail2,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 158 405 161 162 163 164 165 166
326 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient5 right  -> _m2_get_first_ingredient_4 6
327 serve_shot shot6 cocktail5  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail5,shot6,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail5,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 116 424 119 120 121 122 123 124
328 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 30
329 get_first_ingredient cocktail1 left  -> m2_get_first_ingredient 251 295 380 356
330 do_cocktail_in_shot1 shot12 cocktail8  -> m0_do_cocktail_in_shot1 229 428 425 395
331 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient1 right  -> _m3_get_second_ingredient_2 134
332 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 right  -> _m3_get_second_ingredient_2 238
333 serve_shot shot2 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot2,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 32 357 35 36 37 38 39 40
334 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 51
335 get_first_ingredient cocktail6 right  -> m2_get_first_ingredient 209 403 303 369
336 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 9
337 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 26
338 get_second_ingredient cocktail3 right  -> m3_get_second_ingredient 7 413 336 10
339 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 right  -> _m3_get_second_ingredient_2 155
340 get_second_ingredient cocktail9 right  -> m3_get_second_ingredient 91 387 388 94
341 do_cocktail_in_shot1 shot1 cocktail3  -> m0_do_cocktail_in_shot1 0 292 338 404
342 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient3 right  -> _m3_get_second_ingredient_2 50
343 do_cocktail_in_shot1 shot9 cocktail1  -> m0_do_cocktail_in_shot1 167 389 406 355
344 do_fill_shot shot15 ingredient1 left  -> m9_do_fill_shot 64 65 66 67
345 do_cocktail_in_shot1 shot14 cocktail10  -> m0_do_cocktail_in_shot1 271 377 293 417
346 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient1 right  -> _m3_get_second_ingredient_2 113
347 do_fill_shot shot15 ingredient5 right  -> m8_do_fill_shot 2 3 4
348 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 right  -> _m2_get_first_ingredient_4 236
349 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient5 shaker1 left  -> _m3_get_second_ingredient_3 260
350 get_first_ingredient cocktail4 right  -> m2_get_first_ingredient 126 370 362 315
351 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m2_get_first_ingredient_3 277
352 do_cocktail_in_shot1 shot2 cocktail10  -> m0_do_cocktail_in_shot1 20 296 393 333
353 do_clean_shot_m4_serve_shot_sip_2 shot12 left  -> <_m4_serve_shot_2;do_clean_shot[shot12,cocktail2,left];m5_do_clean_shot;0;-1,-2> 242 243
354 do_cocktail_in_shot1 shot4 cocktail7  -> m0_do_cocktail_in_shot1 62 314 319 316
355 serve_shot shot9 cocktail1  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail1,shot9,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail1,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 178 311 181 182 183 184 185 186
356 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 left  -> _m2_get_first_ingredient_4 257
357 do_clean_shot_m4_serve_shot_sip_2 shot2 left  -> <_m4_serve_shot_2;do_clean_shot[shot2,cocktail10,left];m5_do_clean_shot;0;-1,-2> 33 34
358 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 193
359 do_cocktail_in_shot1 shot7 cocktail4  -> m0_do_cocktail_in_shot1 125 350 299 297
360 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 left  -> _m2_get_first_ingredient_4 69
361 __choicelessATCompilation__top_1  -> __top_1 341 352 307 354 372 392 359 308 343 402 323 330 378 345
362 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 131
363 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient5 shaker1 right  -> _m3_get_second_ingredient_3 176
364 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 left  -> _m3_get_second_ingredient_2 71
365 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 235
366 get_second_ingredient cocktail8 left  -> m3_get_second_ingredient 195 390 408 198
367 get_first_ingredient cocktail5 right  -> m2_get_first_ingredient 105 416 386 414
368 serve_shot shot11 cocktail6  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail6,shot11,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail6,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 220 422 223 224 225 226 227 228
369 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 right  -> _m2_get_first_ingredient_4 215
370 do_fill_shot shot15 ingredient4 right  -> m9_do_fill_shot 127 128 129 130
371 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 114
372 do_cocktail_in_shot1 shot5 cocktail9  -> m0_do_cocktail_in_shot1 83 394 340 429
373 do_fill_shot shot15 ingredient5 right  -> m9_do_fill_shot 85 86 87 88
374 serve_shot shot10 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot10,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 199 398 202 203 204 205 206 207
375 do_fill_shot shot15 ingredient3 left  -> m9_do_fill_shot 189 190 191 192
376 do_fill_shot shot15 ingredient1 right  -> m9_do_fill_shot 273 274 275 276
377 get_first_ingredient cocktail10 right  -> m2_get_first_ingredient 272 376 351 382
378 do_cocktail_in_shot1 shot13 cocktail1  -> m0_do_cocktail_in_shot1 250 329 301 309
379 get_second_ingredient cocktail11 right  -> m3_get_second_ingredient 49 342 334 52
380 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 left  -> _m2_get_first_ingredient_3 256
381 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 5
382 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 right  -> _m2_get_first_ingredient_4 278
383 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient3 right  -> _m2_get_first_ingredient_4 173
384 get_second_ingredient cocktail6 right  -> m3_get_second_ingredient 216 419 410 219
385 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient1 right  -> _m2_get_first_ingredient_4 27
386 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient5 shaker1 right  -> _m2_get_first_ingredient_3 110
387 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 right  -> _m3_get_second_ingredient_2 92
388 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 93
389 get_first_ingredient cocktail1 right  -> m2_get_first_ingredient 168 431 421 383
390 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient2 left  -> _m3_get_second_ingredient_2 196
391 do_clean_shot_m4_serve_shot_sip_2 shot14 left  -> <_m4_serve_shot_2;do_clean_shot[shot14,cocktail10,left];m5_do_clean_shot;0;-1,-2> 284 285
392 do_cocktail_in_shot1 shot6 cocktail5  -> m0_do_cocktail_in_shot1 104 367 317 327
393 get_second_ingredient cocktail10 right  -> m3_get_second_ingredient 28 430 328 31
394 get_first_ingredient cocktail9 right  -> m2_get_first_ingredient 84 373 304 313
395 serve_shot shot12 cocktail8  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail8,shot12,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail8,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 241 353 244 245 246 247 248 249
396 do_clean_shot_m4_serve_shot_sip_2 shot3 left  -> <_m4_serve_shot_2;do_clean_shot[shot3,cocktail10,left];m5_do_clean_shot;0;-1,-2> 54 55
397 do_fill_shot shot15 ingredient1 right  -> m9_do_fill_shot 22 23 24 25
398 do_clean_shot_m4_serve_shot_sip_2 shot10 left  -> <_m4_serve_shot_2;do_clean_shot[shot10,cocktail8,left];m5_do_clean_shot;0;-1,-2> 200 201
399 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient5 right  -> _m3_get_second_ingredient_2 175
400 do_fill_shot shot15 ingredient4 right  -> m9_do_fill_shot 148 149 150 151
401 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient4 right  -> _m2_get_first_ingredient_4 153
402 do_cocktail_in_shot1 shot10 cocktail8  -> m0_do_cocktail_in_shot1 187 310 366 374
403 do_fill_shot shot15 ingredient4 right  -> m9_do_fill_shot 210 211 212 213
404 serve_shot shot1 cocktail3  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail3,shot1,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail3,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 11 407 14 15 16 17 18 19
405 do_clean_shot_m4_serve_shot_sip_2 shot8 left  -> <_m4_serve_shot_2;do_clean_shot[shot8,cocktail3,left];m5_do_clean_shot;0;-1,-2> 159 160
406 get_second_ingredient cocktail1 right  -> m3_get_second_ingredient 174 399 363 177
407 do_clean_shot_m4_serve_shot_sip_2 shot1 right  -> <_m4_serve_shot_2;do_clean_shot[shot1,cocktail2,right];m5_do_clean_shot;0;-1,-2> 12 13
408 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 197
409 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 right  -> _m3_get_second_ingredient_2 280
410 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient1 shaker1 right  -> _m3_get_second_ingredient_3 218
411 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 right  -> _m3_get_second_ingredient_3 239
412 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient2 right  -> _m2_get_first_ingredient_4 48
413 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 right  -> _m3_get_second_ingredient_2 8
414 clean-shot_m2_get_first_ingredient_sip_4 shot15 ingredient5 right  -> _m2_get_first_ingredient_4 111
415 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m3_get_second_ingredient_3 156
416 do_fill_shot shot15 ingredient5 right  -> m9_do_fill_shot 106 107 108 109
417 serve_shot shot14 cocktail10  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail10,shot14,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail10,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 283 391 286 287 288 289 290 291
418 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m2_get_first_ingredient_3 152
419 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient1 right  -> _m3_get_second_ingredient_2 217
420 serve_shot shot3 cocktail11  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail11,shot3,right,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[right,shaker1,cocktail11,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 53 396 56 57 58 59 60 61
421 pour-shot-to-clean-shaker_m2_get_first_ingredient_sip_3 shot15 ingredient3 shaker1 right  -> _m2_get_first_ingredient_3 172
422 do_clean_shot_m4_serve_shot_sip_2 shot11 left  -> <_m4_serve_shot_2;do_clean_shot[shot11,cocktail8,left];m5_do_clean_shot;0;-1,-2> 221 222
423 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient2 shaker1 left  -> _m3_get_second_ingredient_3 72
424 do_clean_shot_m4_serve_shot_sip_2 shot6 right  -> <_m4_serve_shot_2;do_clean_shot[shot6,cocktail4,right];m5_do_clean_shot;0;-1,-2> 117 118
425 get_second_ingredient cocktail8 right  -> m3_get_second_ingredient 237 332 411 240
426 do_clean_shot_m4_serve_shot_sip_2 shot7 right  -> <_m4_serve_shot_2;do_clean_shot[shot7,cocktail1,right];m5_do_clean_shot;0;-1,-2> 138 139
427 do_clean_shot_m4_serve_shot_sip_2 shot4 left  -> <_m4_serve_shot_2;do_clean_shot[shot4,cocktail11,left];m5_do_clean_shot;0;-1,-2> 75 76
428 get_first_ingredient cocktail8 right  -> m2_get_first_ingredient 230 318 365 348
429 serve_shot shot5 cocktail9  -> <<m4_serve_shot;pour-shaker-to-shot_m4_serve_shot_sip_5[cocktail9,shot5,left,shaker1,l1];_m4_serve_shot_5;4;0,1,2,3,-1,5,6,7>;empty-shaker_m4_serve_shot_sip_6[left,shaker1,cocktail9,l1];_m4_serve_shot_6;5;0,1,2,3,4,-1,6,7> 95 322 98 99 100 101 102 103
430 fill-shot_m3_get_second_ingredient_sip_2 shot15 ingredient4 right  -> _m3_get_second_ingredient_2 29
431 do_fill_shot shot15 ingredient3 right  -> m7_do_fill_shot 169 170 171
432 pour-shot-to-used-shaker_m3_get_second_ingredient_sip_3 shot15 ingredient4 shaker1 right  -> _m3_get_second_ingredient_3 281

RUNWATCH_RESULT EXIT RETVAL 0 TIME_SECS 21.966 MEMPEAK_KBS 800685.056
